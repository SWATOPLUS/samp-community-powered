#include <a_samp>
#include <streamer>
#include <a_mysql>
#include <Pawn.CMD>
#include <sscanf2>
#include <mxdate>
#include <a_http>
#include <md5>
#include <progress2>
#include <color>

#define ON_SERVER_BONUS     "Community Powered Role Play [0.3.7] | Bonus [x4]"  /* Название сервера при включении x4 (/sap) */
#define OFF_SERVER_BONUS    "Community Powered Role Play [0.3.7] | One Server"  /* Название сервера при отключении x4 (/sap) */
#define GAMEMODE_NAME       "Community Powered"      		 		  /* Название игрового режима (gamemodes) */
#define LANGUAGE_SERVER     "Russian | English"              	  /* Язык сервера (русский / английский) */

#define PROJECT_STATE		"Community State"
#define PROJECT_NAME		"Community Powered Role Play"
#define PROJECT_NAME_SHORT	"Community Powered RP"
#define PROJECT_WEBSITE     "example.com"         		    	  /* Сайт проекта (weburl) */
#define PROJECT_FORUM		"example.com/forum"
#define PROJECT_VK			"vk.com/swat_o_plus"
#define PROJECT_VK_FREE		"vk.com/swat_o_plus"
#define PROJECT_IP			"127.0.0.1"
#define PROJECT_IP_PORT		"127.0.0.1:7777"
#define PROJECT_EX_NICK		"Swat_Oplus"

#define PROJECT_MAPLOAD_URL	"example.com"

#define EMAIL_ACTIVE 		"example.com/email_active.php" 		  /* Путь к скрипту активации EMAIL (настраивайте самостоятельно) */
#define EMAIL_AUTHKEY 		"887587"                        	  /* Пароль активации EMAIL (настраивайте самостоятельно) */

#define MYSQL_HOST		"127.0.0.1"
#define MYSQL_USER		"mysql"
#define MYSQL_PASS		"mysql"
#define MYSQL_BASE		"samp"

#define CASH_REG    60000
#define LEVEL_REG   1
#define DONATE_REG  10

#define MAX_BUSINESS 				180
#define MAX_HOUSES              	1200
#define MAX_CONNECTIONS_FROM_IP     3

new Players[MAX_PLAYERS];
new players;
#define foreach(%0) for(new _g, %0=Players[_g]; _g <players; %0=Players[++_g])
	
//совместимость pawn_cmd с dc_cmd
#if !defined ALT
	#define ALT:%0:%1; \
				public pc_cmd_%1(playerid, params[]);	\
				public pc_cmd_%1(playerid, params[])	\
					return pc_cmd_%0(playerid, params);
#endif

new bool:player_show_FIND[MAX_PLAYERS]={false,...};
#define MAX_SATIETY                100
new CreateBarForPlayer[MAX_PLAYERS]={0,...};
new step_cppd[MAX_PLAYERS]={0,...};
new Text3D:WLabels[MAX_PLAYERS]={Text3D:-1, ...};
new engine_nulled[MAX_PLAYERS]={0,...};

enum _:e_FRACTION_IDS
{
	F_NONE = 0,					//Гражданский
	F_SAPD = 1,
	F_FBI = 2,
	F_NAVY = 3,					//Военно-Морской флот
	F_MCLS = 4,					//Медики ЛС
	F_LCN = 5,
	F_YAKYZA = 6,
	F_DEPJUST = 7,				//Департамент юстиций
	F_CHSF = 8,					//Мэрия сан-фиерро
	F_CHLV = 9,
	F_PMC = 10,					//Частная военная компания
	F_AUTOS = 11,				//Автошкола
	F_BALLAS = 12,
	F_VAGOS = 13,
	F_RM = 14,
	F_GROVE = 15,
	F_SANN = 16,				//Новости
	F_AZTECAS = 17,
	F_RIFA = 18,
	F_NATGUARD = 19,			//Национальная гвардия
	F_SWAT = 21,
	F_MCLV = 22,				//Медики ЛВ
	F_HITMAN = 23,
	F_T_ANGEL = 24,				//Террористическая группа "Агнел"
	F_JTTF = 25,				//Антитеррор
	F_WHOUSE = 26,				//Белый дом
	F_AIRCOMP = 27
};

new actor_exit_name[MAX_PLAYERS][MAX_PLAYER_NAME],
	actor_exit_id[MAX_PLAYERS] = {-1, -1, ...};
	
// ФИКС АНИМАЦИЙ
#define _FIXES_CEILDIV(%0,%1) (((%0) + (%1) - 1) / (%1))
#define _FIXES_IN_RANGE(%0,%1,%2) (((%0) - ((%1) + cellmin)) < ((%2) - ((%1) + cellmin)))
static stock FIXES_gsPlayerAnimTimer[MAX_PLAYERS],
             FIXES_gsPlayerAnimName[MAX_PLAYERS][60],
             FIXES_gsPlayerAnimLibs[MAX_PLAYERS][_FIXES_CEILDIV(135, cellbits)]
;
static stock const
	FIXES_gscAnimIndexes[24] =
		{
			0, 2, 21, 35, 42, 42, 53, 62, 64, 67, 68, 71, 75, 81, 82, 84, 94, 96, 104, 122, 127, 128, 131, 135
		},
	FIXES_gscAnimLib[135][] =
		{
			"AIRPORT",      "ATTRACTORS",   "BAR",          "BASEBALL",     "BD_FIRE",
			"BEACH",        "BENCHPRESS",   "BF_INJECTION", "BIKE_DBZ",     "BIKED",
			"BIKEH",        "BIKELEAP",     "BIKES",        "BIKEV",        "BLOWJOBZ",
			"BMX",          "BOMBER",       "BOX",          "BSKTBALL",     "BUDDY",
			"BUS",          "CAMERA",       "CAR",          "CAR_CHAT",     "CARRY",
			"CASINO",       "CHAINSAW",     "CHOPPA",       "CLOTHES",      "COACH",
			"COLT45",       "COP_AMBIENT",  "COP_DVBYZ",    "CRACK",        "CRIB",
			"DAM_JUMP",     "DANCING",      "DEALER",       "DILDO",        "DODGE",
			"DOZER",        "DRIVEBYS",     "FAT",          "FIGHT_B",      "FIGHT_C",
			"FIGHT_D",      "FIGHT_E",      "FINALE",       "FINALE2",      "FLAME",
			"FLOWERS",      "FOOD",         "FREEWEIGHTS",  "GANGS",        "GFUNK",
			"GHANDS",       "GHETTO_DB",    "GOGGLES",      "GRAFFITI",     "GRAVEYARD",
			"GRENADE",      "GYMNASIUM",    "HAIRCUTS",     "HEIST9",       "INT_HOUSE",
			"INT_OFFICE",   "INT_SHOP",     "JST_BUISNESS", "KART",         "KISSING",
			"KNIFE",        "LAPDAN1",      "LAPDAN2",      "LAPDAN3",      "LOWRIDER",
			"MD_CHASE",     "MD_END",       "MEDIC",        "MISC",         "MTB",
			"MUSCULAR",     "NEVADA",       "ON_LOOKERS",   "OTB",          "PARACHUTE",
			"PARK",         "PAULNMAC",     "PED",          "PLAYER_DVBYS", "PLAYIDLES",
			"POLICE",       "POOL",         "POOR",         "PYTHON",       "QUAD",
			"QUAD_DBZ",     "RAPPING",      "RIFLE",        "RIOT",         "ROB_BANK",
			"ROCKET",       "RUNNINGMAN",   "RUSTLER",      "RYDER",        "SAMP",
			"SCRATCHING",   "SEX",          "SHAMAL",       "SHOP",         "SHOTGUN",
			"SILENCED",     "SKATE",        "SMOKING",      "SNIPER",       "SNM",
			"SPRAYCAN",     "STRIP",        "SUNBATHE",     "SWAT",         "SWEET",
			"SWIM",         "SWORD",        "TANK",         "TATTOOS",      "TEC",
			"TRAIN",        "TRUCK",        "UZI",          "VAN",          "VENDING",
			"VORTEX",       "WAYFARER",     "WEAPONS",      "WOP",          "WUZI"
		}
;


/* 1. Кровати */new furniture_beds[]={11720,1700,1701,1745,1771,1793,1794,1795,1796,1797,1798,1799,1801,1802,1803,2090,2298,2299,2300,2301,2302,2563,2566,2575,14861,14446,2575};
/* 2. Столы */new furniture_table[]={1433,2370,2635,2637,2644,2747,2762,2763,2764,19997,2333,11691,11690,1737,1770,2029,2030,2031,2032,2109,2110,2111,2112,2117,2118,2184,2180,2173,2165,2180,2206,2205,2008,1999,1998};
/* 3. Стулья */new furniture_chairs[]={1663,1671,1714,19998,19996,1720,1721,19994,1739,1806,1810,1811,2079,2120,2121,2124,2125,2356,2636,2724,2776,2788,11734};
/* 4. Электроника */new furniture_electronics[]={1717,1718,1719,1747,1748,1749,1750,1751,1752,1781,1782,1783,1785,1786,1787,1788,1790,1791,1792,1840,2028,2099,2100,2102,2103,2104,2149,2186,2190,2192,2201,2202,2224,2225,2226,2227,2229,2230,2231,2232,2233,19893,19894,19807,11705,2596,14532,19920};
/* 5. Кухня */new furniture_kitchen[]={19916,19915,19923,19933,2133,2134,2141,2158,2334,2335,2338,2341,2131,2132,2147,2336,2337,2339,2340,2139,2138,2137,2022,2018,2016,2015,2014};
/* 6. Шкафы и комоды */new furniture_chests[]={2576,2573,2574,2306,2307,2200,2167,2088,2087,2078,2025,2021};
/* 7. Санузел */new furniture_bathroom[]={2738,2602,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514};
/* 8. Диваны и кресла */new furniture_sofas[]={2748,2746,1746,1735,1729,1728,1727,1726,1724,1723,1711,1708,1705,1704,1562,11685,11684,11685,11683,1682,11717,2290};
/* 9. Картины */new furniture_picture[]={2289,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2267,2268,2269,2270,2271,2272,2273,2274,2275,19172,19173,19174,19175};
/* 10. Растения */new furniture_plants[]={625,626,627,628,630,631,632,646,2194,2195,2240,2241,2244,2245,2251,2252,2253,2811,15038};

/* 1. Кровати цена */new furniture_beds_price[]={11720,1700,1701,1745,1771,1793,1794,1795,1796,1797,1798,1799,1801,1802,1803,2090,2298,2299,2300,2301,2302,2563,2566,2575,14861,14446,2575};
/* 2. Столы цена */new furniture_table_price[]={1433,2370,2635,2637,2644,2747,2762,2763,2764,19997,2333,11691,11690,1737,1770,2029,2030,2031,2032,2109,2110,2111,2112,2117,2118,2184,2180,2173,2165,2180,2206,2205,2008,1999,1998};
/* 3. Стулья цена */new furniture_chairs_price[]={1663,1671,1714,19998,19996,1720,1721,19994,1739,1806,1810,1811,2079,2120,2121,2124,2125,2356,2636,2724,2776,2788,11734};
/* 4. Электроника цена */new furniture_electronics_price[]={1717,1718,1719,1747,1748,1749,1750,1751,1752,1781,1782,1783,1785,1786,1787,1788,1790,1791,1792,1840,2028,2099,2100,2102,2103,2104,2149,2186,2190,2192,2201,2202,2224,2225,2226,2227,2229,2230,2231,2232,2233,19893,19894,19807,11705,2596,14532,19920};
/* 5. Кухня цена */new furniture_kitchen_price[]={19916,19915,19923,19933,2133,2134,2141,2158,2334,2335,2338,2341,2131,2132,2147,2336,2337,2339,2340,2139,2138,2137,2022,2018,2016,2015,2014};
/* 6. Шкафы и комоды цена */new furniture_chests_price[]={2576,2573,2574,2306,2307,2200,2167,2088,2087,2078,2025,2021};
/* 7. Санузел цена */new furniture_bathroom_price[]={2738,2602,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514};
/* 8. Диваны и кресла цена */new furniture_sofas_price[]={2748,2746,1746,1735,1729,1728,1727,1726,1724,1723,1711,1708,1705,1704,1562,11685,11684,11685,11683,1682,11717,2290};
/* 9. Картины цена */new furniture_picture_price[]={2289,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2267,2268,2269,2270,2271,2272,2273,2274,2275,19172,19173,19174,19175};
/* 10. Растения цена */new furniture_plants_price[]={625,626,627,628,630,631,632,646,2194,2195,2240,2241,2244,2245,2251,2252,2253,2811,15038};

stock Furn_GetNameClass(modelid)
{
	new i=0,name_classes[11][32]={
		"_BED",
		"_TABLE",
		"_CHAIR",
		"_TECH",
		"_KITCHEN",
		"_CHEST",
		"_BATHROOM",
		"_SOFA",
		"_PICTURE",
		"_PLANT",
		"_UNKNOWN"};
	for(i = 0; i < sizeof(furniture_beds); i++) if(furniture_beds[i] == modelid) return name_classes[0];
	for(i = 0; i < sizeof(furniture_table); i++) if(furniture_table[i] == modelid) return name_classes[1];
	for(i = 0; i < sizeof(furniture_chairs); i++) if(furniture_chairs[i] == modelid) return name_classes[2];
	for(i = 0; i < sizeof(furniture_electronics); i++) if(furniture_electronics[i] == modelid) return name_classes[3];
	for(i = 0; i < sizeof(furniture_kitchen); i++) if(furniture_kitchen[i] == modelid) return name_classes[4];
	for(i = 0; i < sizeof(furniture_chests); i++) if(furniture_chests[i] == modelid) return name_classes[5];
	for(i = 0; i < sizeof(furniture_bathroom); i++) if(furniture_bathroom[i] == modelid) return name_classes[6];
	for(i = 0; i < sizeof(furniture_sofas); i++) if(furniture_sofas[i] == modelid) return name_classes[7];
	for(i = 0; i < sizeof(furniture_picture); i++) if(furniture_picture[i] == modelid) return name_classes[8];
	for(i = 0; i < sizeof(furniture_plants); i++) if(furniture_plants[i] == modelid) return name_classes[9];
	return name_classes[10];
}
stock Furn_GetPrice(modelid)
{
	new i = 0 , price = -1, new_price;
	for(i = 0; i < sizeof(furniture_beds); i++) if(furniture_beds[i] == modelid) price = furniture_beds_price[i];
	for(i = 0; i < sizeof(furniture_table); i++) if(furniture_table[i] == modelid) price = furniture_table_price[i];
	for(i = 0; i < sizeof(furniture_chairs); i++) if(furniture_chairs[i] == modelid) price = furniture_chairs_price[i];
	for(i = 0; i < sizeof(furniture_electronics); i++) if(furniture_electronics[i] == modelid) price = furniture_electronics_price[i];
	for(i = 0; i < sizeof(furniture_kitchen); i++) if(furniture_kitchen[i] == modelid) price = furniture_kitchen_price[i];
	for(i = 0; i < sizeof(furniture_chests); i++) if(furniture_chests[i] == modelid) price = furniture_chests_price[i];
	for(i = 0; i < sizeof(furniture_bathroom); i++) if(furniture_bathroom[i] == modelid) price = furniture_bathroom_price[i];
	for(i = 0; i < sizeof(furniture_sofas); i++) if(furniture_sofas[i] == modelid) price = furniture_sofas_price[i];
	for(i = 0; i < sizeof(furniture_picture); i++) if(furniture_picture[i] == modelid) price = furniture_picture_price[i];
	for(i = 0; i < sizeof(furniture_plants); i++) if(furniture_plants[i] == modelid) price = furniture_plants_price[i];
	if ( price != -1 )
	{
		for(;;)
		{
			new_price = price;
			if ( (new_price % 100 ) <= 0 ) break;
			price++;
		}
	}
	price = floatround(floatmul(price,10));
	if ( price > 25000 ) price = 12000;
	return price;
}



#define DISTANCE_LABEL_BUSINESS 25.0

new quest_amount_lesopilka[MAX_PLAYERS]={0,...};
new quest_amount_bus[MAX_PLAYERS]={0,...};
new quest_amount_taxi[MAX_PLAYERS]={0,...};
new quest_amount_prod[MAX_PLAYERS]={0,...};
new quest_amount_miner[MAX_PLAYERS]={0,...};
new quest_amount_garden[MAX_PLAYERS]={0,...};
new quest_amount_farm[MAX_PLAYERS]={0,...};
//new quest_amount_flowers[MAX_PLAYERS]={0,...};

#define MAX_QUEST_LESOPILKA 30
#define MAX_QUEST_TAXI 15
#define MAX_QUEST_MINER 60
#define MAX_QUEST_FARM 60
#define MAX_QUEST_GARDEN 40
#define MAX_QUEST_PROD 20
#define MAX_QUEST_BUS 20
#define MAX_QUEST_FLOWERS 30

#define NAME_TARIF "Будний"
#define ROUBLE_DOLLARS "1.200"
#define ROUBLE_DOLLARS_INT 1200

native IsValidVehicle(vehicleid);

enum e_BOOT_INFO
{
	_b_target_name[MAX_PLAYER_NAME],
	_b_target_id,
	_b_kidnapper_id

};
new bootInfo[MAX_VEHICLES][e_BOOT_INFO];

new arSellCar[4];


#define CIRCLE_MOVE_SPEED 6.0
new CircleAroundObject;
new CircleState=0;
new CircleAlternate=0;
new CircleAlternate2=0;
new CircleWait=false;
new Float:CirclePosition[11][6]={
	{237.801071,-2162.573486,7.181587,0.000000,0.000000,90.000000},//0
	{236.051071,-2146.360107,17.661586,0.000000,0.000000,90.000000},//1
	{218.759048,-2114.112548,17.507766,10.399992,0.000000,21.699985},//2
	{211.030975,-2094.639648,21.454793,10.399992,0.000000,21.699985},//3
	{202.972091,-2074.227050,25.686107,10.399992,0.000000,21.699985},//4
	{194.299880,-2052.328125,30.293970,10.399992,0.000000,21.699985},//5
	{185.154495,-2029.265136,35.101573,10.399992,0.000000,21.699985},//6
	{176.407150,-2007.202514,39.681098,10.399992,0.000000,21.699985},//7
	{167.091293,-1983.630493,44.556678,10.399992,0.000000,21.699985},//8
	{158.614318,-1962.301269,48.962253,10.399992,0.000000,21.699985},//9
	{155.366302,-1954.058227,50.710365,10.399992,0.000000,21.699985}//10
};

new TickPlayerHit[MAX_PLAYERS]={-1,...};
new ZombieRegArea = -1;
new ZombieFlagPickup = -1;
new ZombieCountHumans=0,ZombieCountZombie=0;
new ZombieTime=121;

new time_grandtimer,time_grandtimer_max;
new time_newkeys,time_newkeys_max;
new time_update,time_update_max;

new Float:fly_ball_pos_spawn[4][3]={
	{846.721,-2072.530,12.914},
	{837.676,-2072.530,12.914},
	{829.927,-2072.530,12.914},
	{822.190,-2072.530,12.914}
};
new Text3D:fly_ball_text[4]={Text3D:-1,...};
new Float:fly_ball_pos_move[4][4];
new fly_ball_area[4];
new fly_ball_object[4];
new balloon_textures[7][10]={"balloon01","balloon02","balloon03","balloon04","balloon05","balloon06","balloon07"};
new Text:SelectBallObjectTextures[3];
new Text:td_flycontrol[9];
new show_select_ball[MAX_PLAYERS][2];
new PlayerText:SpeedFlyBall[MAX_PLAYERS]={PlayerText:-1,...};
new fly_ball_status[4]={-1,...};
new fly_ball_timer[4]={-1,...};
#define F_BALL_TEXT "{F0C419}Нажмите {4EBA6F}'F'\n{F0C419}Для управления либо аренды воздушного шара\nСтатус: "
new PlayerBar:eda[MAX_PLAYERS] = {INVALID_PLAYER_BAR_ID, ...};
new VehicleBomb[MAX_VEHICLES char] = 0;
new PlacedVehicleBomb[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new GotHit[MAX_PLAYERS] = INVALID_PLAYER_ID;
new HitOffer[MAX_PLAYERS] = INVALID_PLAYER_ID;
new HitToGet[MAX_PLAYERS] = INVALID_PLAYER_ID;
new GoChase[MAX_PLAYERS] = INVALID_PLAYER_ID;
new GetChased[MAX_PLAYERS] = INVALID_PLAYER_ID;
new Float:Positions[14][3];
new gTempBotTime[101],
	Text3D:gTempBotText[101],
	gTempBot[101];


/// new hunt_object[]

new fixable_timer[MAX_PLAYERS][2];
enum CAR_SELLS_DATA
{
	SellsMysqlID,
	SellsModel,
	SellsTime,
	SellsPrice,
	SellsOwner[24],
	Float:SellsPos[4],
	SellsTuning[12],
	SellsVID,
	Text3D:SellsText
}
new gCarSells[24][CAR_SELLS_DATA];
#define gCarPriceRent 3200

//======
enum tInfo
{
	tGun[9],
	tAmmo[9],
	tMoney,
	tDrugs,
	tMats,
	tArmours,
	tKanistra,
	tDee,
	bool:tOpen
};
new TrunkInfo[MAX_VEHICLES][tInfo];

#define VEHICLE_STATE_CAR   0
#define VEHICLE_STATE_BIKE  1
#define VEHICLE_STATE_VELIK 2
#define VEHICLE_STATE_PLANE 3
#define VEHICLE_STATE_BOAT  4
#define VEHICLE_STATE_MOPED 5
#define VEHICLE_STATE_TRAIN 6

new Text:trunk_ball[22];
new VehicleState[MAX_VEHICLES];
new idaofcar[MAX_PLAYERS]={0,...};
//====== TRUNK DATA

#define ROULETTE_STATE_NONE 0
#define ROULETTE_STATE_TO_DOWN 1
#define ROULETTE_STATE_TO_UP 2
#define ROULETTE_STATE_TO_UP2 3

new Float:RouletteStartPos[2]={246.376724,-2190.608886};
new Float:RouletteStartZPos[3]={-42.825206,2.684825,51.774818};

new RouletteFunObject;
new RouletteTimer = -1;
new RouletteState = ROULETTE_STATE_NONE;
new Float:RouletteAngle = 0.0, RouletteAlternate=0;

stock UpdateTDOpenCloseTrunk(playerid,vehicleid)
{
	TextDrawHideForPlayer(playerid,trunk_ball[21]);
	TextDrawBoxColor(trunk_ball[21], (TrunkInfo [vehicleid][tOpen] != true) ? (0xFF000090) : (0x33AA3390));
	TextDrawSetString(trunk_ball[21],(TrunkInfo [vehicleid][tOpen] != true) ? ("CLOSE_BOOT~n~FOR_PLAYERS") : ("OPEN_BOOT~n~FOR_PLAYERS"));
	TextDrawShowForPlayer(playerid,trunk_ball[21]);
	return 1;
}
new mysql_query_string[2500];
new stringer[5001];

new names_boot[3][7][32]={
{{"оружие"},{"деньги"},{"наркотики"},{"материалы"},{"бронежилет"},{"канистру"},{"набор"}},
{{"оружия"},{"денег"},{"наркотиков"},{"материалов"},{"бронежилетов"},{"канистр"},{"наборов"}},
{{"Оружия"},{"Денег"},{"Наркотиков"},{"Материалов"},{"Бронежилетов"},{"Канистр"},{"Наборов"}}
};
new maxbootint[7]={500000,1000,1000,10,10,10};
stock getmaxtrunkput(id) return (id>=2&&id<=7)?(maxbootint[id-2]):(-1);//optimization hack

#define MAX_FLOWERS 200
enum flower_data
{
	flmysqlID,
	flobjectid,
	flname_flower[32],
	Float:flPos[3],
	//
	flPickupid,
	Text3D:flText[MAX_PLAYERS],
	flTimerText
}
new _flower[MAX_FLOWERS][flower_data];
new fl_str[64];

enum TRANSPORT_DATA
{
	trID,
	trModel,
	trName[35],
	trPrice,
	trTank,
	trConsumption,
	trClass,
	trFuelable,
	trSellable,
}
new gTransport[220][TRANSPORT_DATA];
new class_economy[]={ 1, 4, 10, 12, 13, 19, 22, 39, 57, 66, 67, 74, 79, 91, 92, 117, 118, 142, 143, 145, 149, 175, 176, 185, 200, };
new class_standart[]={ 0, 5, 21, 26, 45, 75, 96, 100, 105, 107, 126, 127, 133, 134, 135, 151, 154, 155, 158, 161, 166, 167, 179, 180, 189, 203, };
new class_sport[]={ 2, 11, 15, 29, 34, 51, 77, 80, 106, 141, 159, 160, 162, 187, 202, };
new class_moto[]={ 61, 62, 63, 68, 71, 81, 109, 110, 121, 122, 186, };



//new door_spawn_ls[2];
//new door_spawn_ls_area[2];
//new door_spawn_ls_state = 0;//idle
//new door_idle_timer_ls = -1;

new bool:chose_player[MAX_PLAYERS]={false,...};

/******************************************[Рыбалка]**************************************************/
#define BUY_MENU_FISHED     "Предмет\tСтоимость\t\nУдочка\t{52A32A}$500{"#cWHITE"}\nЧерви\t{52A32A}$20{"#cWHITE"}"
forward PlayerFishing(playerid);
new Fish_CP[50];
new bool:Fishing[MAX_PLAYERS];
new PlayerFish[MAX_PLAYERS][5];
new FishMassa[MAX_PLAYERS][5];
new Float:FishZone[15][3] =
{
	{349.8644,-2052.0598,7.8359},
	{349.9288,-2059.7078,7.8359},
	{349.9258,-2064.8701,7.8359},
	{349.9335,-2067.3757,7.8359},
	{349.9633,-2072.5100,7.8359},
	{354.5819,-2088.6687,7.8359},
	{362.2255,-2088.7966,7.8359},
	{367.2188,-2088.7983,7.8359},
	{369.7726,-2088.7871,7.8359},
	{375.0870,-2088.7959,7.8359},
	{383.4317,-2088.7952,7.8359},
	{391.2613,-2088.7966,7.8359},
	{396.0679,-2088.7976,7.8359},
	{398.6076,-2088.7954,7.8359},
	{403.9636,-2088.7976,7.8359}
};
new FishName[14][22] =
{
	"None",
	"Корешка",
	"Навага",
	"Сельдь",
	"Карп",
	"Окунь",
	"Тунец",
	"Камбала",
	"Кета",
	"Горбуша",
	"Красноперка",
	"Судак",
	"Щука",
	"Лещ"
};
/*new FishCost[14] =
{
	0, //None
	150, //Корешка
	50, //Навага
	150, //Сельдь
	200, //Карп
	200, //Окунь
	300, //Тунец
	80, //Камбала
	90, //Кета
	80, //Горбуша
	150, //Красноперка
	150, //Судак
	150, //Щука
	90  //Лещ
};*/
//
new LoadBookID[MAX_PLAYERS][5];
////////


new Text:tdNextSkin;
new Text:tdBackSkin;
new Text:tdSelSkin;

new PlayerText:passport_player[MAX_PLAYERS][9];
new bool:passport_show[MAX_PLAYERS]={false,...};

new PlayerText:flash_td[MAX_PLAYERS]={PlayerText:-1, ...};
new flash_step_td[MAX_PLAYERS]={0,...};
new flash_timer_td[MAX_PLAYERS]={-1,...};


/******************************************[Ферма]**************************************************/

#define INFO_FARM_1 "\t \t \t{C8C4BA}[ F.A.Q. ]{"#cWHITE"}\n\n\
	Чтобы начать зарабатывать на ферме, вам нужно установить автомобиль в который вы будете загружать зерно.\n"
#define INFO_FARM_2 "Для этого используйте т.с. {afafaf}'Walton'{"#cWHITE"}, которое находится рядом с вами. После успешной установки автомобиля, начните загружать зерно.\n\
	Когда машина будет полностью загружена, вам нужно будет её разгрузить на складе. Для этого нужно сесть в автомобиль, подъехать к складу и разгрузить его.\n\n"
#define INFO_FARM_3 "{FF6347}[ Примечание ] {"#cWHITE"}Вы также можете заработать немного больше, отвозив зерно на завод. Для этого нужно сесть в автомобиль по {FFD700}доставке зерна{"#cWHITE"}, и отправиться на завод.\n\
	После успешной разгрузки, вы получите денежное вознаграждение.\n"
#define TEXT_MACHINE_WALTON_FARM_S "{B8CEF6}Автомобиль для сбора зерна\nСтатус: {42B02C}Готов для работы"
#define TEXT_MACHINE_WALTON_FARM_F "{B8CEF6}Автомобиль для сбора зерна\nСтатус: {BE2D2D}Полностью загружен"
#define TEXT_MACHINE_WALTON_FARM_P "{B8CEF6}Автомобиль для сбора зерна\nСтатус: {FFD700}Загружается (%d из 50)"

#define TEXT_MACHINE_SELL_FARM_S "{B8CEF6}Автомобиль для отправки зерна на производство\nСтатус: {42B02C}Готов для отправки"
#define TEXT_MACHINE_SELL_FARM_P "{B8CEF6}Автомобиль для отправки зерна на производство\nСтатус: {FFD700}Загружено %d кг"

#define FARM_SKLAD_TEXT "{B8CEF6}Склад фермы\n\n\n{D38A37}%d{"#cWHITE"} зерна\nСтоимость закупки: {D38A37}БЕСПЛАТНО!\n\n{D38A37}Для загрузки нужно подъехать на чекпоинт!"

#define MAX_FARMS 3


stock GetMiniMapCoord(Float:x,Float:y,&Float:nx,&Float:ny,&Float:nz)
{
	nx = x / 2000;
	nz = y / 2000;
	ny = -1543.483032;
	nx += 425.519989;
	nz += 28.531999;
}
new map_points[MAX_PLAYERS]={-1,...};
#define PointToPoint(%0,%1,%2,%3,%4,%5) floatsqroot(floatpower(floatabs(floatsub(%3,%0)),2)+floatpower(floatabs(floatsub(%4,%1)),2)+floatpower(floatabs(floatsub(%5,%2)),2))
#define GetString(%0,%1) (!strcmp(%0, %1) && strlen(%0) != 0)

new date_password[MAX_PLAYERS][64];



enum sdbd_data
{
	sdbd_name[24],
	sdbd_skin,
	Float:sdbd_pos[4]
}
new sdbd[2][sdbd_data]={
	{"Джон", 6, {403.6742,-1546.7246,32.2734,359.7961}},
	{"Патрик", 19, {1112.7490,-1467.2734,15.7969,329.3445}}
};
new QuestStep[6][MAX_PLAYERS];
new sdbd_step[MAX_PLAYERS]={0,...};

#define MAX_ACTORSS 	(227)
new PlayerText3D:tActor[MAX_PLAYERS]={PlayerText3D:-1, ...};
new actortime[MAX_ACTORSS];
new actor[MAX_ACTORSS];
//new acc_actor[14];
stock SendBotMessage(playerid,mesage[])
{
	new id;
	//if(!IsPlayerLogged[playerid])return 0;
	//if(!IsAtBankomat(playerid,2.0))
	//{
	new Float:x, Float:y, Float:z,Float:x1, Float:y1, Float:z1;
	new Float: minDist,minA=-1;
	GetPlayerPos(playerid, x1, y1, z1);
	for(new i;i<MAX_ACTORSS;i++)
	{
		if(!IsActorStreamedIn(i,playerid)) continue;
		if(GetActorVirtualWorld(i)!=GetPlayerVirtualWorld(playerid)) continue;
		GetActorPos(i, x, y, z);
		new Float: Dist=PointToPoint(x,y,z,x1,y1,z1);
		if(Dist<30)
		{
			if (minDist>Dist || minDist==0)
			{
				minA = i;
				minDist = Dist;
			}
		}
	}
	if(minA!=-1)
	{
		if ( tActor[playerid] != PlayerText3D:-1)
		{
			DeletePlayer3DTextLabel(playerid, tActor[playerid]);
			tActor[playerid] = PlayerText3D:-1;
		}
		GetActorPos(minA, x, y, z);
		tActor[playerid] = CreatePlayer3DTextLabel(playerid,mesage,COLOR_GREY,x,y,z+1,10.0);
		ApplyActorAnimation(minA,"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
		actortime[minA]=10;
		id =minA;
	}
	//}
	if(strfind(mesage, "\n")==-1) SendClientMessage(playerid,COLOR_GREY,mesage);
	return id;
}



/*#define MAX_QUEST 1

enum QUEST_CLASS
{
	QuestName[64],
	QuestText[1024],
	LastProgress
}
new QI[MAX_QUEST][QUEST_CLASS]={
	{"Добро пожаловать домой {6DA5EF}[Сюжет]{"#cWHITE"}",
	"{"#cWHITE"}Ейй привет братишка, ты меня наверно не знаешь, давай я представлюсь.\nЯ сотрудник компании: 'Путь к успеху', и я буду первым кто поможет тебе\nизменить свою жизнь в лучшую сторону!\nИщи автобус или мопед и направляйся в мэрию чтобы сделать паспорт!\n\n{DA9815}Для выполнения задания необходимо добраться к мэрии и сделать паспорт\nзатем вернуться обратно для получения награды!\n\nНаграда за выполение:\n350$ и 1ехр", 30}
};
new QuestProgress[MAX_PLAYERS][MAX_QUEST];
new QuestShow[MAX_PLAYERS][MAX_QUEST];
new AcceptQuest[MAX_PLAYERS][MAX_QUEST];
new QuestClick[MAX_PLAYERS];*/


/*CMD:quest(playerid)
{
	new string[1024],num;
	for(new i;i<MAX_QUEST;i++)
	{
		if(AcceptQuest[playerid][i]!=0 && QuestProgress[playerid][i]!=100)
		{
			if(QuestProgress[playerid][i]<QI[i][LastProgress]) format(string,sizeof(string),"%s\n{"#cWHITE"}%s | {DA9815}Прогресс: %d/%d",string,QI[i][QuestName],QuestProgress[playerid][i],QI[i][LastProgress]);
			else if(QuestProgress[playerid][i]==100) format(string,sizeof(string),"%s\n{"#cWHITE"}%s | {E81818}[Выполнен]",string,QI[i][QuestName]);
			else format(string,sizeof(string),"%s\n{"#cWHITE"}%s | {DA9815}Прогресс: {DA9E30}[Можно завершить]",string,QI[i][QuestName]);

			QuestShow[playerid][num]=i;
			num++;
		}
	}
	if(strlen(string)>0)ShowPlayerDialog(playerid,7650,2,"",string,"{0F9435}Info{"#cWHITE"}","Отмена");
	else ShowPlayerDialog(playerid,0,0,"","{"#cWHITE"}У вас нет принятых квестов!","Принять","");
	return 1;
}*/

stock NextStapQI(playerid,id)
{//не должно быть ретурнов иначе не будет сохранение
	switch(id)
	{
		case 1:
		{
		}
	}
}

enum farm_info
{
	farm_mysql_id,
	farm_product[40], // -- что выращиваем
	farm_owner[MAX_PLAYER_NAME],
	//
	//farm_zam_1[MAX_PLAYER_NAME],
	//farm_zam_2[MAX_PLAYER_NAME],
	//farm_zam_3[MAX_PLAYER_NAME],
	//
	//farm_fermer_1[MAX_PLAYER_NAME],
	//farm_fermer_2[MAX_PLAYER_NAME],
	//farm_fermer_3[MAX_PLAYER_NAME],
	//farm_fermer_4[MAX_PLAYER_NAME],
	//farm_fermer_5[MAX_PLAYER_NAME],
	//
	Float:farm_dress_pos[3],//-- раздевалка
	Float:farm_info_pos[3],//-- информация
	//
	Float:farm_v_start_pos_f[4],//---фермерская машина 1
	Float:farm_v_start_pos_s[4],//---фермерская машина 2
	Float:farm_v_start_pos_t[4],//---фермерская машина 3
	//
	Float:farm_v_finish_pos_f[4],//---фермерская машина для отправки зерен 1
	Float:farm_v_finish_pos_s[4],//---фермерская машина для отправки зерен 2
	//
	Float:farm_v_cp_f[4],//---чекпоинт для машины 1
	Float:farm_v_cp_s[4],//---чекпоинт для машины 2
	Float:farm_v_cp_t[4],//---чекпоинт для машины 3
	//
	Float:farm_sklad_pos[4],//-- позиция склада
	farm_vehicles_first[3],//-- машины с которых собирают урожай
	farm_vehicles_finish[2],//-- машины которые увозят урожай
	//
	Text3D:farm_vehicles_first_text[3],//-- машины с которых собирают урожай
	Text3D:farm_vehicles_finish_text[2],//-- машины которые увозят урожай
	farm_pickup_first[3], // -- создаваемый пикап
	farm_area_first[3], // -- создаваемая ареа
	farm_count_flows[3], //-- количество загруженого сена
	farm_count_zerna[2], //-- количество загруженого зерна
	//
	farm_pickup_dress, //-- раздевалка пикап
	farm_pickup_info, //-- информация пикап
	farm_sklad_cp,//-- cp sklad
	Text3D:farm_sklad_text, // 3d text sklada
	farm_sklad_count, // k-vo
	//
	farm_cost_flow, //--цены за куст
	farm_cash,
	farm_load
}


new _farm[MAX_FARMS][farm_info] = {
{
	-1,"Пшеница", "The State",
	//"No-ne", "No-ne","No-ne","No-ne", "No-ne","No-ne","No-ne","No-ne","No-ne",
	{-13.0424,47.9197,3.1172},//-- раздевалка
	{-10.34, 55.15, 3.12},//-- информация
	{-20.2871,42.9802,3.109000,250.00000},//---фермерская машина 1
	{-21.6049,39.0680,3.109000,250.00000},//---фермерская машина 2
	{-23.1364,35.3041,3.109000,250.00000},//---фермерская машина 3
	{-27.9001,43.6657,3.2927,159.5885},//---фермерская машина для отправки зерен 1
	{-31.3407,44.8968,3.2923,161.2738},//---фермерская машина для отправки зерен 2
	{51.2454,40.0497,1.4846,289.6127},//---чекпоинт для машины 1
	{21.3422,56.0438,3.1060,357.5062},//---чекпоинт для машины 2
	{25.9184,12.6993,3.1141,195.6197},//---чекпоинт для машины 3
	{0.1994,73.7540,3.1118,245.6877},//---позиция склада
	{0,0,0},
	{0,0},
	{Text3D:-1,Text3D:-1,Text3D:-1},
	{Text3D:-1,Text3D:-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{0,0,0},
	{0,0},
	-1,
	-1,
	-1,
	Text3D:-1,
	0,
	30,//--цены за куст
	0,
	0
},
{
	-1,"Пшеница", "The State",
	//"No-ne", "No-ne","No-ne","No-ne", "No-ne","No-ne","No-ne","No-ne","No-ne",
	{-103.9813,9.2398,3.1172},//-- раздевалка
	{-101.3085,16.3850,3.1172},//-- информация
	{-112.9672,-33.3220,3.1151,270.7650},//---фермерская машина 1
	{-112.6260,-29.6731,3.1135,270.9043},//---фермерская машина 2
	{-111.8731,-26.1525,3.1034,274.5853},//---фермерская машина 3
	{-101.0196,-27.4328,3.2870,69.8984},//---фермерская машина для отправки зерен 1
	{-99.6842,-23.4602,3.2887,71.3717},//---фермерская машина для отправки зерен 2
	{-135.6453,47.1197,3.1069,6.9152},//---чекпоинт для машины 1
	{-161.0480,22.9779,3.1141,68.1230},//---чекпоинт для машины 2
	{-159.2485,-7.3677,3.1144,119.3589},//---чекпоинт для машины 3
	{-111.7719,-2.0984,3.1137,69.7896},//---позиция склада
	{0,0,0},
	{0,0},
	{Text3D:-1,Text3D:-1,Text3D:-1},
	{Text3D:-1,Text3D:-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{0,0,0},
	{0,0},
	-1,
	-1,
	-1,
	Text3D:-1,
	0,
	40,//--цены за куст
	0,
	0
},
{
	-1,"Пшеница", "The State",
	//"No-ne", "No-ne","No-ne","No-ne", "No-ne","No-ne","No-ne","No-ne","No-ne",
	{1945.6555,162.9340,37.2210},//-- раздевалка
	{1938.2202,165.6097,37.2813},//-- информация
	{1916.9740,182.6692,36.6885,306.8284},//---фермерская машина 1
	{1913.4470,183.6069,36.6610,303.7037},//---фермерская машина 2
	{1910.1978,185.3660,36.4337,304.5780},//---фермерская машина 3
	{1902.0784,175.2350,37.2958,34.5942},//---фермерская машина для отправки зерен 1
	{1950.0902,157.6885,37.0888,327.2980},//---фермерская машина для отправки зерен 2
	{1956.3833,206.3715,30.6420,306.1903},//---чекпоинт для машины 1
	{1935.4518,213.4154,30.1213,348.7451},//---чекпоинт для машины 2
	{1915.1683,210.5399,31.3716,34.6546},//---чекпоинт для машины 3
	{1919.7614,175.4858,37.4547,252.2809},//---позиция склада
	{0,0,0},
	{0,0},
	{Text3D:-1,Text3D:-1,Text3D:-1},
	{Text3D:-1,Text3D:-1},
	{-1,-1,-1},
	{-1,-1,-1},
	{0,0,0},
	{0,0},
	-1,
	-1,
	-1,
	Text3D:-1,
	0,
	40,//--цены за куст
	0,
	0
}
};

//new farm_object_flows[MAX_FARMS][3][30];
new farm_cp[MAX_FARMS][3][6];
//new IDVEH[MAX_PLAYERS];
new Float:pos_sell_zerno[2][4] ={
	{-22.9872,-274.6737,5.6038,180.2823},
	{-15.0616,-274.6348,5.6162,180.2822}
};
new count_sell_zerno[2]={0,...};
new Text3D:sell_zerno_text[2]={Text3D:-1, ...};



stock IsAFarmer(playerid)
{
	new name_player[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name_player, MAX_PLAYER_NAME);
	for(new f = 0; f < MAX_FARMS; f++)
	{
		if(GetString(_farm[f][farm_owner],name_player))
		{
			SetPVarInt(playerid, "owner_farm", f + 1);
			return 1;
		}
	}
	return 0;

}
/*****************************[Система граффити]***************************************************/
//#define Create_HELPERS          (9874)
new UpdateTimer[MAX_PLAYERS];
enum GRF
{
	gId,
	gObject,
	gFrak,
	Float: gr_x[7], // 6 угол поворота
}
new GrafInfo[100][GRF],CountGraffity;

/*****************************[Система LowRiders]***************************************************/


new lowride_list_score_desc[10];

bubbleSort(_array[], size = sizeof _array){
	for(new i = 0, j = 0, swap = 0; i != size; i++) {
		for( j = 0 ; j < i ; j++ ) {
			if(_array[i] > _array[j]){
				swap = _array[i];
				_array[i] = _array[j];
				_array[j] = swap;
			}
		}
	}
}


#define KEY_NUM4 (8192)
#define KEY_NUM6 (16384)
#define KEY_NUM8 (2048)
#define KEY_NUM2 (4096)

new Text:lowride_list_update[12];
new Text:lowrideRing;
new PlayerText:lowrideArrow[MAX_PLAYERS][3];
new Text:lowrideSelectVehicle_TD[5];
new PlayerText:lowrideCarToSelect[MAX_PLAYERS]={PlayerText:-1, ...};
new cLowrideCar[MAX_PLAYERS]={0,...};
new LowRideStavka=0;
new lowrider_area[1];
new Float:lowriders_pos_start[1][4] ={
	{2422.9758,-1761.3881,13.5391,91.9697}
};
new Float:lowrider_pos_vehicle[10][4]={
	{2444.3237,-1763.6863,13.2648,208.4296}, // 1
	{2453.8716,-1762.5190,13.2795,136.8913}, // 2
	{2456.8027,-1773.6986,13.2623,57.0655}, // 3
	{2444.5232,-1773.4935,13.2268,302.2217}, // 4
	{2449.7930,-1766.8475,13.2590,355.7943}, // 5
	{2459.0669,-1786.7842,13.2356,0.6666}, // 6
	{2483.8235,-1776.0380,13.3241,89.0124}, // 7
	{2469.9690,-1777.5284,13.3657,89.0113}, // 8
	{2442.6711,-1777.3198,13.3386,269.0121}, // 9
	{2427.5935,-1777.0599,13.3251,269.0135} // 10
};

#define    	LOWRIDE_TYPE_DOWN 	(0)
#define    	LOWRIDE_TYPE_DOWNR 	(1)
#define    	LOWRIDE_TYPE_DOWNL 	(2)
#define    	LOWRIDE_TYPE_UP 	(3)
#define    	LOWRIDE_TYPE_UPR 	(4)
#define    	LOWRIDE_TYPE_UPL 	(5)
#define    	LOWRIDE_TYPE_LEFT 	(6)
#define    	LOWRIDE_TYPE_RIGHT 	(7)
#define 	dLowStavka 2556

new LowRideWinners[10][MAX_PLAYER_NAME];
new LowRideWinnersSum[3];

enum lowrideArrows_data
{
	lowrideAdataName[32],
	lowrideAdataType
}
new lowrideArrows[8][lowrideArrows_data]={
	{"ld_beat:down", LOWRIDE_TYPE_DOWN},
	{"ld_beat:downr", LOWRIDE_TYPE_DOWNR},
	{"ld_beat:downl", LOWRIDE_TYPE_DOWNL},
	{"ld_beat:up", LOWRIDE_TYPE_UP},
	{"ld_beat:upr", LOWRIDE_TYPE_UPR},
	{"ld_beat:upl", LOWRIDE_TYPE_UPL},
	{"ld_beat:left", LOWRIDE_TYPE_LEFT},
	{"ld_beat:right", LOWRIDE_TYPE_RIGHT}
};
new SelectLowride[MAX_PLAYERS][5];
new TimeLowRide = 0;
new lowride_list_player[10]={-1, ...};
new lowride_list_score[10]={0, ...};
new lowride_vehicles[6]={ 412, 534, 535, 536, 567, 576 };


////////////////////////////////////////////////////////////////////////////////////////////////////
new Maxis[3];
//new barkazino[1];


new
	Float:fishechkay[MAX_PLAYERS],//X
	Float:fishechkax[MAX_PLAYERS],//Y
	Float:fishechkaz[MAX_PLAYERS],//Z
	NumberFishka[MAX_PLAYERS],// На что ставим
	Fishka[MAX_PLAYERS],//Объект фишки
	bool:Upravakazino[MAX_PLAYERS],//чувак за столом
	RuletkaStol[MAX_PLAYERS],
	KrupieTime[12],
	RuletTip[MAX_PLAYERS],
	RuletSum[MAX_PLAYERS];


/////
enum rullet_data
{
	rullet_area,
	rullet_max_bet,
	rullet_min_bet,
	Float:rullet_pos[3],
	Float:to_inerpolate[6],
	Float:to_inerpolate_look_at[6],
	Float:fishka_pos[3],
	rullet_timer
}
new rullet_[3][rullet_data]={
{-1,50000,100000,
	{1653.2002,2238.7366,583.0020},
	{1653.171264, 2238.791992, 584.885437, 1653.171264, 2238.791992, 584.885437},
	{1652.518310, 2238.773437, 579.928283, 1652.518310, 2238.773437, 579.928283},
	{1652.8773,2238.2355,581.9882}
},
{-1,100000,500000,
	{1657.7134,2238.2700,582.9906},
	{1657.485961, 2238.920166, 584.865966, 1657.485961, 2238.920166, 584.865966},
	{1657.050170, 2238.926025, 579.885009, 1657.050170, 2238.926025, 579.885009},
	{1657.4610,2238.0698,581.9996}
},
{-1,500000,1000000,
	{1662.7233,2238.5264,582.9942},
	{1662.677368, 2238.540283, 584.783630, 1662.677368, 2238.540283, 584.783630},
	{1662.242187, 2238.563476, 579.802673, 1662.242187, 2238.563476, 579.802673},
	{1662.6589,2237.8730,581.9194}
}
};

//new robpick,robp,robp2;

/********************************************************************************/
/*stock SetToPosDoor(playerid)
{
	new hotp;
	foreach(i)
	{
		if(playerid == -1) hotp = i;
		else hotp = playerid;

		new Float:z;
		GetPlayerPos(i,z,z,z);
		if(IsPlayerInDynamicArea(hotp, door_spawn_ls_area[0]))
		{
			AC_SetPlayerPos(hotp,1732.9833,-1856.9441,z);
			SetPlayerFacingAngle(hotp,81.1359);
		}
		else if(IsPlayerInDynamicArea(hotp, door_spawn_ls_area[1]))
		{
			AC_SetPlayerPos(hotp,1735.5065,-1858.5261,z);
			SetPlayerFacingAngle(hotp,243.6530);
		}
		if(hotp == playerid && playerid != -1) break;
	}
	return 1;
}*/

new bool:IS_A_GMX = false;

//new Count_Slot_Player_Object[MAX_PLAYERS]={0,...};
//new gPlayerObject[MAX_PLAYERS][120];
//new foot_area;
new b_acc_area;


/*
ALTER TABLE  `admin` ADD  `online_monday` INT( 11 ) NOT NULL ,
ADD  `online_tuesday` INT( 11 ) NOT NULL ,
ADD  `online_wednesday` INT( 11 ) NOT NULL ,
ADD  `online_thursday` INT( 11 ) NOT NULL ,
ADD  `online_friday` INT( 11 ) NOT NULL ,
ADD  `online_saturday` INT( 11 ) NOT NULL ,
ADD  `online_sunday` INT( 11 ) NOT NULL
*/

// #define USE_BOT_GBOT
#define MAX_STANDART_COUNT_BOTS 10

#if defined USE_BOT_GBOT
	native AddFakeBot();
#endif

new gDaysOfWeek[][10] = {
	"thursday",
	"friday",
	"saturday",
	"sunday",
	"monday",
	"tuesday",
	"wednesday"
};/// Is day's in week
//new AntiFloodNews[MAX_PLAYERS][2];
new hospital_lift_object[5];
new hospital_lift_state = 0;
new hospital_lift_floor = 1;
new bool:open_lift_doors = false;
new var_Ex_SetDoorOptionBL = -1;
new Text3D:hospital_lift_text = Text3D:-1;
new bool:IsAUseDonate[MAX_PLAYERS][2];
new UpdateCarInfo_Timer[MAX_PLAYERS]={-1,...};

stock UpdateTextFloorB(floor){
	if(hospital_lift_text != Text3D:-1){
		Delete3DTextLabel(hospital_lift_text);
		if(floor == 1) hospital_lift_text = Create3DTextLabel("{FFD700}Управление лифтом\n[ \" {73B461}N {FFD700}\" ]",0xFFFFFFFF,-350.30, -34.93, -56.9640,10.0,0,1);
		else if(floor == 2) hospital_lift_text = Create3DTextLabel("{FFD700}Управление лифтом\n[ \" {73B461}N {FFD700}\" ]",0xFFFFFFFF,-350.30, -34.93, -51.2759,10.0,0,1);
	}
	return 1;
}

stock SetDoorOptionBL(floor, bool:close = false)
{
	if(var_Ex_SetDoorOptionBL != -1){
		KillTimer(var_Ex_SetDoorOptionBL);
		var_Ex_SetDoorOptionBL = -1;
	}
	new Float:x[2], Float:y[2], Float:z[2];
	if(floor==1)
	{
		GetObjectPos(hospital_lift_object[1],x[0],y[0],z[0]);
		GetObjectPos(hospital_lift_object[2],x[1],y[1],z[1]);
		MoveObject(hospital_lift_object[1], x[0],(close == false) ? (-31.3500) : (-33.0499),z[0],0.45,0.0,0.0,0.0);
		MoveObject(hospital_lift_object[2], x[1],(close == false) ? (-34.7789) : (-33.0589),z[1],0.45,0.0,0.0,0.0);
	}
	else if(floor==2)
	{
		GetObjectPos(hospital_lift_object[3],x[0],y[0],z[0]);
		GetObjectPos(hospital_lift_object[4],x[1],y[1],z[1]);
		MoveObject(hospital_lift_object[3], x[0],(close == false) ? (-31.3500) : (-33.0499),z[0],0.45,0.0,0.0,0.0);
		MoveObject(hospital_lift_object[4], x[1],(close == false) ? (-34.7789) : (-33.0589),z[1],0.45,0.0,0.0,0.0);
	}

	return 1;
}


//[] -349.4770,-34.7789,-51.2529,0.0000,0.0000,0.0000
//[] -349.5010,-31.3500,-51.2759,0.0000,0.0000,0.0000




//new g_bot_timer[MAX_PLAYERS]={-1,...};
//new LAST_SLOT_IN_SAMP = 0;
new timers_unix = -1;
new tmphour, tmpminute, tmpsecond, tmpyear, tmpmonth, tmpday;
new unix, unix_hour, unix_min, unix_sec, unix_three_sec, unix_HEALTHTIMER;
//new fish[4],fishsput[4];

new Firstname[171][32] = { "Abelard","Akim","Adam","Alexander","Aleksey","Anatoly","Andrew","Antip","Anton","Arkady","Arseny","Artem","Arkhip","Athanasius", "Boris","Bogdan",
"Vadim","Valentin","Valerie","Vasily","Victor","Vitaly","Vladimir","Vladislav","Vyacheslav","Gennady","Georgiy","Herman","Gleb", "Gregory","Gunter","George","Gerard","Danil",
"Denis","Dmitry","Eugener","Egor","Yefim","Zahar","Ivan","Ignat","Igor","Ilya","Kiril","Leon","Leonid","Maxim","Mark", "Martin", "Nestor", "Nikita", "Nicholay", "Oleg", "Pavel",
"Peter", "Rodion", "Roman", "Ruslan", "Slava", "Semen", "Sergey", "Stas", "Stepan", "Taras", "Timur", "Fedor", "Felix", "Philip", "Yuri", "Evgeny", "Michael", "Jacob", "Joshua",
"Matthew", "Ethan", "Andrew", "Daniel", "William", "Joseph", "Christopher", "Anthony", "Ryan", "Nicholas", "David", "Alexander", "Tyler", "James", "John", "Dylan", "Brandon",
"Samuel", "Christian", "Benjamin", "Nathan", "Jonathan", "Zachary", "Logan", "Jose", "Noah", "Elijah", "Gabriel", "Caleb", "Kevin", "Austin", "Robert", "Thomas", "Connor", "Evan",
"Aidan", "Jack", "Luke", "Jordan", "Angel", "Isaiah", "Isaac", "Jason", "Jackson", "Hunter", "Cameron", "Gavin", "Mason", "Aaron", "Juan", "Kyle", "Charles", "Luis", "Adam",
"Brian", "Aiden", "Eric", "Jayden", "Alex", "Bryan", "Sean", "Owen", "Lucas", "Nathaniel", "Ian", "Pat", "Jesus", "Carlos", "Adrian", "Diego", "Julian", "Cole", "Ashton",
"Patrick", "Steven", "Jeremiah", "Timothy", "Chase", "Devin", "Seth", "Jaden", "Colin", "Cody", "Landon", "Carter", "Hayden", "Xavier", "Wyatt", "Dominic", "Richard", "Antonio",
"Jesse", "Blake", "Sebastian", "Miguel", "Jake", "Alejandro" };

new Lastname[213][32] = { "Antipov","Antoshin","Arabov","Aravin","Arefiev","Arkadev","Artemov","Arkhipov",
"Astakhov", "Ahmatov","Bazanov","Bazarov","Bajkov","Bardin","Badgers", "Bakhtin", "Bezrukov", "Belov", "Almazov", "Bobrov", "Bogrov", "Bukin", "Bulochkin", "Bikov", "Golubev",
"Gorbachev", "Goncharov", "Brezov", "Gagarin", "Durov", "Zhukov", "Zaitsev", "Zakharov", "Zverev", "Zubov", "Zuev", "Karpov", "Kvasov", "Kovalev", "Koshelev", "Kremlev", "Lavrenko",
"Lobanov", "Maximov", "Malakhov", "Makarov", "Kalashnikov", "Medvedev", "Mikhalkov", "Nekrasov", "Nefedov", "Gluharev", "Putin", "Rodionov", "Pugachev", "Slepakov", "Kharlamov",
"Sukharev", "Tyutchev", "Filatov", "Khrustalyov", "Kuzmin", "Gornostaev", "Shuvalov", "Gromov", "Shakhmatov", "Zhukov", "Mogilnikov", "Berdin", "Sergeyev", "Adamson", "Abramson",
"Alsopp", "Anderson", "Andrews", "Attwood", "Babcock", "Backer", "Barnes", "Bawerman", "Brooks", "Brown", "Bush", "Bosworth", "Bootman", "Blomfield", "Carey", "Carrington", "Carroll",
"Carter", "Clapton", "Cook", "Dean", "Derrick", "Dickinson", "Dodson", "Donaldson", "Douglas", "Donovan", "Dyson", "Dunce", "Duncan", "Edwards", "Ellington", "Enderson", "Erickson",
"Evans", "Faber", "Farmer", "Farrell", "Ferguson", "Finch", "Flatcher", "Ford", "Forster", "Foster", "Francis", "Freeman", "Fulton", "Dasin", "Gibbs", "Garrison", "Gerald", "Gimson",
"Goodman", "Gustman", "Haig", "Hancock", "Harrison", "Hawkins", "Higgins", "Holiday", "Holmes", "James", "Jacobson", "Jones", "Johnson", "Kendal", "Kennedy", "Kirk", "Sparks", "Lamberts",
"Larkins", "Dasin", "Lawman", "Leapman", "Lewin", "Leman", "Livingston", "Macdonald", "Macduff", "Macey", "Mansfield", "Mason", "Mathews", "Michaelson", "Miller", "Milton", "Morrison",
"Murphy", "Neal", "Nevill", "Nelson", "Nicholson", "Nyman", "Oakman", "Oldman", "Oliver", "Osborne", "Oswald", "Owen", "Otis", "Page", "Palmer", "Parkinson", "Parson", "Pass", "Paterson",
"Philips", "Oliver", "Porter", "Quincy", "Ralphs", "Reynolds", "Richards", "Roberts", "Roger", "Russel", "Salomon", "Samuels", "Sheldon", "Sherlock", "Simon", "Simpson", "Smith", "Stanley",
"Stephen", "Stevenson", "Sykes", "Taylor", "Thomson", "Timmons", "Turner", "Walkman", "Wallace", "Walter","Watson","Wayne","White","Wood","Winter","Youmans","Young" };

#define interval_connection_bots 26000
#define LEVEL_BOT 0
new current_slot = -1;
new count_connect_bots = 0;
new timer_connect_bots = -1;

new hours_connect_bot[][3]={
	// время , количество ботов , подключить - 1 | отключить - 0
	{08,5 + LEVEL_BOT,1}, // 5
	{09,10 + LEVEL_BOT,1}, // 15
	{10,5 + LEVEL_BOT,1}, // 20
	{11,5 + LEVEL_BOT,1}, // 25
	{12,5 + LEVEL_BOT,0}, // 20

	{13,10 + LEVEL_BOT,1}, // 30
	{14,5 + LEVEL_BOT,0}, // 25
	{15,5 + LEVEL_BOT,1}, // 30
	{16,5 + LEVEL_BOT,0}, // 25
	{19,10 + LEVEL_BOT,1}, // 35
	{21,5 + LEVEL_BOT,0}, // 25
	{22,5 + LEVEL_BOT,0}, // 20
	{23,10 + LEVEL_BOT,0}, // 10
	{00,5 + LEVEL_BOT,0}, // 5
	{01,5 + LEVEL_BOT,0} // 0
};




//crashdetect.so dc_cmd.so sscanf.so streamer.so mysql_static.so

#define INVALID_OBJECT 0x7F800000

#define MAX_FRACTIONS 50

#define MAX_STREAMER_DISTANCE_FOR_PLAYER (400.0)
#define MAX_SURFBOARD_SPEED (12.0)

//native SetServerMaxPlayers(count);

/*
ALTER TABLE  `fractions` ADD  `f_rank_invite` INT( 11 ) NOT NULL ,
ADD  `f_rank_uninvite` INT( 11 ) NOT NULL ,
ADD  `f_rank_giverank` INT( 11 ) NOT NULL
*/

/*#define prn_level 0
#define prn_exp 1
#define prn_paydayhad 2
#define prn_cash 3
#define prn_number 4
#define prn_zakonp 5
#define prn_member 6
#define prn_rank 7
#define prn_job 8
#define prn_metall 9
#define prn_patron 10
#define prn_drugs 11
#define prn_house 12
#define prn_flat 13
#define prn_biz 14
#define prn_car1 15
#define prn_car2 16
#define prn_donaterank 17
#define prn_donatemoney 18*/

/*new prn_player_data[MAX_PLAYERS][19];
new name_prn_list[19][32]={

	"Уровень",//0
	"EXP",//1
	"Часов в игре",//2
	"Деньги",//3
	"Номер",//4
	"Законопослушность",//5
	"Фракция",//6
	"Ранг",//7
	"Работа",//8
	"Металл",//9
	"Патроны",//10
	"Наркотики",//11
	"Дом",//12
	"Номер в отеле",//13
	"Бизнес",//14
	"Машина 1",//15
	"Машина 2",//16
	"Уровень VIP",//17
	"Донат-очки"//18
};*/

new PlayerReconnectIP[MAX_PLAYERS][16];
new PlayerReconnectTime[MAX_PLAYERS];

//new null_password_timer = -1;

#define MAX_DAMAGES_STRING 50
enum damages_data
{
	gdBody,
	gdTime,
	gdGun,
	Float:gdDamage,
	gdNameDamages[MAX_PLAYER_NAME],
	gdNameID
}
new gDamagesData[MAX_PLAYERS][MAX_DAMAGES_STRING][damages_data];
new TimeWithDeath[MAX_PLAYERS]={0,...};
new ShowDebugTakeDamage[MAX_PLAYERS]={0,...};


enum bed
{
	bool: Busy,
	Float: b_X,
	Float: b_Y,
	Float: b_Z,
	b_Time,
	Float: k_X,
	Float: k_Y,
	Float: k_Z,
	Float: k_A
}
new BedInfo[23][bed]={
{false, -368.1577,-49.5066,-52.0950,0,-368.8028,-48.2947,-51.6033,186.1401},
{false, -368.1445,-55.7724,-52.0950,0,-368.6406,-54.7589,-51.6033,182.3800},
{false, -372.0499,-45.1243,-52.0950,0,-371.5592,-46.1110,-51.3448,354.7383},
{false, -371.9031,-47.2443,-52.0950,0,-371.6607,-48.3531,-51.3448,354.7383},
{false, -371.7429,-49.3853,-52.0950,0,-371.4852,-50.5220,-51.3448,354.7383},
{false, -371.9573,-51.7729,-52.0950,0,-371.5168,-52.9284,-51.3448,354.7383},
{false, -372.0080,-54.0551,-52.0950,0,-371.4350,-55.2479,-51.3448,354.7383},
{false, -371.9337,-56.2907,-52.0950,0,-371.5427,-57.4712,-51.3448,354.7383},
{false, -379.3363,-56.2904,-52.0950,0,-379.5537,-57.0437,-51.3448,175.5099},
{false, -379.3335,-54.0763,-52.0950,0,-379.5754,-54.8661,-51.3448,175.5099},
{false, -379.1998,-51.9181,-52.0950,0,-379.4977,-52.7217,-51.3448,175.5099},
{false, -379.3723,-49.6254,-52.0950,0,-379.6020,-50.4015,-51.3448,175.5099},
{false, -379.3400,-47.3091,-52.0950,0,-379.6980,-48.1710,-51.3448,175.5099},
{false, -379.1304,-45.1021,-52.0950,0,-379.7036,-45.8911,-51.3448,175.5099},
{false, -382.6161,-45.5053,-52.0950,0,-382.2612,-46.6085,-51.3448,0.3784},
{false, -382.7638,-48.0011,-52.0950,0,-382.2444,-49.1505,-51.3448,0.3784},
{false, -382.7072,-50.4070,-52.0950,0,-382.2284,-51.5876,-51.3448,0.3784},
{false, -382.7342,-52.6791,-52.0950,0,-382.2132,-53.8965,-51.3448,0.3784},
{false, -382.7342,-54.8836,-52.0950,0,-382.1986,-56.1126,-51.3448,0.3784},
{false, -388.3333,-56.9330,-52.0950,0,-388.5428,-55.7870,-51.3448,186.7901},
{false, -388.1300,-54.6394,-52.0950,0,-388.6231,-53.5207,-51.3448,186.7901},
{false, -388.1366,-52.3524,-52.0950,0,-388.5314,-51.0893,-51.3448,186.7901},
{false, -388.0216,-50.0068,-52.0950,0,-388.6131,-48.9035,-51.3448,186.7901}
};
new Text3D:Bed3D[23];
//new PlayerCounter[MAX_PLAYERS];
new PlayerTimerBolk[MAX_PLAYERS];
new MyBed[MAX_PLAYERS];
new BedPrice = 15;
//new pomosh_bol[24];
new pomosh_bol;
new Reason__[MAX_PLAYERS][64];
new Reason__Count[MAX_PLAYERS]={0,...};

new Float:veh_pos_load__[15][4]={
	{-1568.1616,-81.8477,14.8604,311.8306}, // vzlet
	{-1428.9253,60.8858,25.5120,315.9584}, // 1
	{-1022.9376,453.0305,116.1714,305.3960}, // 2
	{-129.1458,841.5295,178.1361,264.2426}, // 3
	{809.9700,715.3699,120.2960,261.7191}, // 4
	{1591.4628,592.1402,108.2817,259.2966}, // 5
	{2232.2773,384.0100,127.4658,227.1005}, // 6
	{2472.5615,-48.9951,158.8931,199.6785}, // 7
	{2664.4788,-636.6251,168.4360,195.2574}, // 8
	{2824.4646,-1281.5762,173.9566,180.0916}, // 9
	{2824.0876,-1614.4551,173.6768,180.1282}, // 10
	{2607.6987,-2099.8787,122.9587,132.1727}, // 11
	{2333.6975,-2345.7876,74.5415,117.1440}, // 12
	{2044.6198,-2454.0522,44.8257,93.3452}, // 13
	{1602.0994,-2499.8167,14.2614,270.0079} // 14
};
new veh_pos_load__Step[MAX_PLAYERS]={0,...};
new Float:coord_terminal[11][4]={
	{1894.3544,-2638.2183,13.5469,359.8783}, // terminal_ls_1
	{1826.1342,-2636.5542,13.5469,88.3436}, // terminal_ls_2
	{1760.2555,-2634.6484,13.5469,88.3436}, // terminal_ls_3
	{1688.7979,-2632.5828,13.5469,88.3436}, // terminal_ls_4
	{1616.5332,-2630.4939,13.5469,88.3436}, // terminal_ls_5
	{-1272.6571,-630.2953,14.1484,184.5146}, // terminal_sf_6
	{-1325.8978,-627.5054,14.3659,86.5448}, // terminal_sf_7
	{-1387.1770,-623.8054,14.3659,86.5448}, // terminal_sf_8
	{-1446.2264,-620.2402,14.4335,86.5448}, // terminal_sf_9
	{1611.2573,1635.0107,10.8203,16.5896}, // terminal_lv_10
	{1676.9757,1627.6041,10.8203,0.9229} // terminal_lv_11
};
new terminal_cp[11];

new cp_rent_bike[2];

enum fraction_weapon_data
{
	fwID,
	fwName[32],
	fwGunID,
	fwGunAmmo,
	fwArmor,
	fwRank
}
new FW[10][MAX_FRACTIONS][fraction_weapon_data];
new GunTickGet[MAX_PLAYERS][10];



//FW[1][fwName]

#if !defined BODY_PART_TORSO
enum
{
	BODY_PART_TORSO = 3,
	BODY_PART_GROIN,
	BODY_PART_LEFT_ARM,
	BODY_PART_RIGHT_ARM,
	BODY_PART_LEFT_LEG,
	BODY_PART_RIGHT_LEG,
	BODY_PART_HEAD
};
#endif
new Text3D:damage_text[MAX_PLAYERS]={Text3D:-1,...};
#define INTERVAL_ADMIN_WARN 7

new AntiSlivCount[MAX_PLAYERS]={0,...};
new AntiSlivTime[MAX_PLAYERS]={0,...};
//new OldReasonWarn[MAX_PLAYERS][32];

new NAME_FAKE_SLIV[MAX_PLAYER_NAME];
new bool:ACCOUNT_DETECTED = false;

//#define DestroyDynamic3DTextLabel DestroyDynamic3DTextLabel_log

//new Auto_Shot[MAX_PLAYERS]={-1,...};
//new Time_Football = 5400;
//new Text:TD_Time_Football = Text:-1;

/* combo defines */

#define COMBO_DOUBLE_GOLD 				1
#define COMBO_GOLD 						2
#define COMBO_CHERRY 					3
#define COMBO_BELL 						4
#define COMBO_69 						5
#define COMBO_GRAPES 					6


#define sm_count						6


/* rotation info */

new Float: image_rot [ ] ={ 3.00, 23.00, 43.00, 63.00, 83.00, 103.00, 123.00, 143.00, 163.00, 183.00, 203.00, 223.00, 243.00, 263.00, 283.00, 303.00, 323.00, 343.00, 363.00 } ;
new Float: cherry_combo [ 4 ] ={ 23.00, 163.00, 223.00, 343.00 } ;
new Float: gold_combo [ 2 ] ={ 183.00, 303.00 } ;
new Float: bell_combo [ 4 ] ={ 63.00, 103.00, 243.00, 323.00 } ;
new Float: grapes_combo [ 5 ] ={ 3.00, 83.00, 143.00, 283.00, 363.00 } ;
new Float: sn_combo [ 3 ] ={ 43.00, 123.00, 263.00 } ;

/* Стат автомата */

new bool: sm_used [ sm_count ] ;

/* Ручки автоматов */

new sm_hand [ sm_count ] [ MAX_BUSINESS ] ;
new Float: sm_hand_coord [ sm_count ] [ 6 ] ={
	{ 1665.59275, 2233.83883, 581.59940,   0.00000, 0.00000, 180.00000 },
	{ 1649.51465, 2233.83883, 581.59940,   0.00000, 0.00000, 180.00000 },
	{ 1681.62415, 2221.4485, 583.0700,   0.00000, 0.00000, 180.00000 },
	{ 1673.29834, 2221.4485, 583.0700,   0.00000, 0.00000, 180.00000 },
	{ 1673.4231, 2229.7025, 583.10068,   0.00000, 0.00000, 0.00000 },
	{ 1681.68933, 2229.7025, 583.10068,   0.00000, 0.00000, 0.00000 }
 } ;

/*	Слот-механизмы автоматов */

new sm_slot [ sm_count * 3 ] [ MAX_BUSINESS ] ;
new Float: sm_slot_coord [ sm_count * 3 ] [ 6 ] ={
	{ 1665.73547, 2233.7090, 582.4656,   3.00000, 0.00000, 180.00000 },
	{ 1665.62573, 2233.7090, 582.4656,   3.00000, 0.00000, 180.00000 },
	{ 1665.51965, 2233.7090, 582.4656,   3.00000, 0.00000, 180.00000 },

	{ 1649.65552, 2233.7090, 582.4656,   3.00000, 0.00000, 180.00000 },
	{ 1649.54541, 2233.7090, 582.4656,   3.00000, 0.00000, 180.00000 },
	{ 1649.43542, 2233.7090, 582.4656,   3.00000, 0.00000, 180.00000 },

	{ 1681.7725, 2221.2478, 583.9133,   3.00000, 0.00000, 180.00000 },
	{ 1681.6625, 2221.2478, 583.9133,   3.00000, 0.00000, 180.00000 },
	{ 1681.5522, 2221.2478, 583.9133,   3.00000, 0.00000, 180.00000 },

	{ 1673.43640, 2221.24780, 583.91333,   3.00000, 0.00000, 180.00000 },
	{ 1673.32642, 2221.24780, 583.91333,   3.00000, 0.00000, 180.00000 },
	{ 1673.21643, 2221.24780, 583.91333,   3.00000, 0.00000, 180.00000 },

	{ 1673.28442, 2229.9338, 583.91333,   3.00000, 0.00000, 0.00000 },
	{ 1673.39441, 2229.9338, 583.91333,   3.00000, 0.00000, 0.00000 },
	{ 1673.50439, 2229.9338, 583.91333,   3.00000, 0.00000, 0.00000 },

	{ 1681.54443, 2229.9338, 583.91333,   3.00000, 0.00000, 0.00000 },
	{ 1681.65442, 2229.9338, 583.91333,   3.00000, 0.00000, 0.00000 },
	{ 1681.76440, 2229.9338, 583.91333,   3.00000, 0.00000, 0.00000 }
} ;

/*	Зона использования автомата */

new Float: sm_coord [ sm_count ] [ 9 ] = {
	{ 1665.6587,2234.4568,582.0460 , 1665.604858,2234.471191,582.550048, 1665.697998,2229.552246,581.657714},
	{ 1649.6254,2234.3464,582.0460 , 1649.524902, 2234.446533, 582.585693, 1649.634033, 2229.614746, 581.304504},
	{ 1681.6479,2222.0825,583.4449 , 415.594696, -1537.205322, 33.048400,  410.602325, -1537.087768, 32.798503},
	{ 1673.3677,2222.0806,583.4449 , 1673.322875, 2221.988525, 584.071899, 1673.257446, 2217.268798, 582.422424 },
	{ 1673.4463,2229.1477,583.4449 ,1673.405761, 2229.199218, 584.060607,  1673.433715, 2233.955810, 582.520019},
	{ 1681.7035,2229.1482,583.4449 , 1681.676879, 2229.194824, 583.995544, 1681.705566, 2234.083007, 582.944763}
 } ;




 /* TextDraws */

 new Text: sm_td [ 4 ] ;
 new PlayerText: sm_ptd [ MAX_PLAYERS ] = {PlayerText:-1, ...} ;

new object_table_football[5];

new Name_Football_Command[2][32]={
	"A", "B"
};
//new Count_Score_Football[2];


new Select_Football_Team[MAX_PLAYERS]={-1,...};
new Select_Football_Position[MAX_PLAYERS]={-1,...};

new Name_Position_FootBall[11][64]={
	"Вратарь",//1
	"Центральный правый защитник", "Центральный левый защитник",//2,3
	"Фланговый левый защитник", "Фланговый левый полу-защитник",//4,5
	"Центральный левый полу-защитник","Центральный правый полу-защитник",//6,7
	"Фланговый правый защитник", "Фланговый правый полу-защитник",//8,9
	"Левый нападающий", "Правый нападающий"//10,11
};

/*new Float:Pos_Position_Football[2][11][4]={
{// Команда A
	{2706.9690,-1858.0774,422.8215,0.1267}, // 1
	{2699.1836,-1844.4701,422.8215,358.1527}, // 2
	{2714.1877,-1843.9801,422.8215,358.3172}, // 3
	{2677.6096,-1848.9745,422.8215,350.3273}, // 4
	{2679.3523,-1811.5208,422.8215,357.7296}, // 5
	{2695.3152,-1820.1243,422.8215,353.0297}, // 6
	{2713.6484,-1820.3771,422.8215,1.4193}, // 7
	{2730.7358,-1844.9285,422.8215,14.9086}, // 8
	{2731.8279,-1825.2277,422.8215,11.8769}, // 9
	{2714.9185,-1802.7795,422.8438,92.3886}, // 10
	{2699.4778,-1802.8619,422.8438,258.1123} // 11
},
{// Команда B
	{2707.8550,-1748.3451,422.8205,186.0134}, // 1
	{2692.7639,-1761.2417,422.8215,180.0208}, // 2
	{2718.0303,-1761.5743,422.8215,175.1796}, // 3
	{2734.4248,-1774.4115,422.8215,182.2532}, // 4
	{2734.0115,-1785.0310,422.8215,177.9762}, // 5
	{2719.0266,-1782.4421,422.8215,181.4308}, // 6
	{2697.8481,-1783.2159,422.8215,179.9503}, // 7
	{2681.8210,-1776.0734,422.8215,164.4872}, // 8
	{2681.6912,-1789.1560,422.8215,213.8376}, // 9
	{2698.3142,-1800.8641,422.8215,264.3395}, // 10
	{2713.5469,-1800.3048,422.8215,106.7469} // 11
}
};*/
new bool:Position_Football_Active[2][11];


new Targetplayer[MAX_PLAYERS] = {-1, ...}; // прицел на игрока
new PlayerText:GUI_targetsystem[MAX_PLAYERS][8];//система выделения 1
new active_time[MAX_PLAYERS] = {-1, ...};
new DrugOffer[MAX_PLAYERS]={-1,...};
new DrugPrice[MAX_PLAYERS]={0,...};
new DrugGram[MAX_PLAYERS]={0,...};
new Text3D:playerTextAction[MAX_PLAYERS];
new Text3D:BBLabel[MAX_PLAYERS];


#define TP_COUNT 71
new Float:gTeleportsToD[TP_COUNT][2][4] = {
	{// Мэрия ЛС
		{2325.6604,-2008.9434,-37.7740,120.3870},
		{1481.1162,-1771.7369,18.7958,0.0}
	},
	{// Шахта
		{-2558.7842,-2128.5469,70.2393,195.1853},
		{416.4993,151.1327,1019.4226,28.1771}
	},
	{// Банк ЛС
		{1411.6722,-1699.8701,-13.5395,231.5124},
		{2305.1211,-15.9141,-26.7422,303.9532}
	},
	{// Хранилище банка
		{1451.8967,-983.7353,26.8469,175.9930},
		{2147.9438,1603.9143,1006.1677,177.0350}
	},// RIFA вход/выход
	{
		{-228.9604,1401.3175,27.7656,271.4328},
		{2185.8398,-1814.9769,13.5469,4.5930}
	},// Тюрьма
	{
		{2069.7219,-1435.6073,1516.7599,183.2323},
		{1772.3363,-1548.5939,9.9133,38.2371}
	},//ПД Тюрьма
	{
		{1797.6057,-1578.9155,0.0861,294.4779},
		{242.2554,66.3605,1003.6406,255.9453}
	},//ЛСПД
	{
		{1642.3405,-1652.7302,1583.8660,359.1030},
		{1555.4034,-1675.5221,16.1953,88.1233}
	},//ЛСПД выход в гараж
	{
		{1649.2330,-1629.4022,1583.8660,87.1132},
		{1568.6854,-1690.0763,6.2188,177.5554}
	},//SFPD выход в гараж
	{
		{1649.2330,-1629.4022,1583.8660,87.1132},
		{29.5026,2428.3640,16.9890,272.8411}
	},//СФПД
	{
		{1642.3405,-1652.7302,1583.8660,359.1030},
		{16.8807,2433.1230,17.0300,354.6219}
	},//San Andreas Sheriff Department
	{
		{1642.3405,-1652.7302,1583.8660,359.1030},
		{627.2040,-571.7603,17.9145,266.9621}
	},//LVPD гараж
	{
		{1649.2330,-1629.4022,1583.8660,87.1132},
		{610.9724,-583.7903,18.0783,91.4005}
	},//LVPD крыша
	{
		{2297.0186,2468.6558,10.8203,86.7610},
		{2278.3997,2458.2695,38.6837,358.8494}
	},//Казино 4 дракона
	{
		{304.4845,-141.7812,1004.0625,87.4161},
		{306.6149,-159.3327,999.5938,220.5679}
	},//Сад 1
	{
		{1173.5466,383.5423,1002.1450,138.3665},
		{2761.4766,2773.9294,2.8549,358.3846}
	},//Сад 2
	{
		{2633.3547,2753.6553,10.8249,89.0762},
		{1165.6722,360.0369,1002.1450,345.6270}
	},//Шахта
	{
		{2631.3098,2681.0525,-34.0720,126.9064},
		{2719.9150,2839.9072,-30.7245,179.5469}
	},//фбр
	{
		{-2454.7422,515.6179,45.5625,268.9823},
		{-2486.6726,495.1429,-10.5974,181.7988}
	},// Больница
	{
		{-361.1591,-44.5863,-57.8740,274.2461},
		{1172.1696,-1323.3358,15.4030,267.2549}
	},// Крыша
	{
		{-360.4439, -30.5508, -52.1140, 219.6721},
		{1161.5612, -1330.0577, 31.4935, 356.3458}
	},//Grove
	{
		{2468.4438,-1698.3442,1013.5078,91.4385},
		{2486.4492,-1644.6375,14.0772,181.7353}
	},//Ballas
	{
		{-68.8085,1351.3051,1080.2109,357.2819},
		{2000.0485,-1114.1655,27.1250,178.7364}
	},//Vagos
	{
		{300.7928,305.8816,1003.5391,289.52499},
		{2756.2700,-1182.7021,69.4031,359.4551}
	},//Aztec
	{
		{-42.5579,1405.8109,1084.4297,357.8787},
		{1667.4403,-2107.0410,14.0723,178.0565}
	},//Автошкола
	{
		{-2029.6592,-119.6195,2035.1719,2.6617},
		{-2029.7537,-120.6327,15.1705,180.0430}
	},//Автошкола здание
	{
		{-2027.0535,-99.2546,35.2579,353.1601},
		{-2033.6174,-112.3230,35.2599,172.8391}
	},// Больница
	{
		{-361.1591,-44.5863,-57.8740,274.2461},
		{1583.8346,1768.9252,10.8203,87.1760}
	},// Крыша
	{
		{2475.8384,-1805.9456,1224.4102,63.6569},
		{1610.9835,1785.9830,30.4688,357.1035}
	},// Больница
	{
		{-361.1591,-44.5863,-57.8740,274.2461},
		{-2655.1111,639.9493,14.4545,175.6822}
	},// Крыша
	{
		{2475.8384,-1805.9456,1224.4102,63.6569},
		{-2689.5913,603.0600,66.0938,270.1414}
	},// Туса
	{
		{602.6874,-2381.8152,18.4500,180.0820},
		{602.6391,-2379.6145,18.4500,357.6317}
	},// Туса крыша
	{
		{612.8242,-2418.7388,36.1966,84.6668},
		{601.1960,-2398.9751,18.4500,355.2698}
	},// Туса BMX
	{
		{544.5434,-2342.9980,18.4500,271.8725},
		{519.2972,-2320.0391,18.4290,37.6419}
	},//Завод
	{
		{-86.1587,-299.4713,2.7646,182.2350},
		{2577.2632,-1290.0487,1044.1250,147.0106}
	},//армия пикап 1
	{
		{1956.8370,-2183.6653,13.5469,266.0749},
		{-2158.4534,643.0421,1052.3750,171.7357}
	},//армия пикап 2
	{
		{2669.6235,2712.0322,38.2445,162.3368},
		{2723.1094,2840.1946,0.7245,181.9319}
	},//зона
	/*{
		{2495.4465,2780.7363,10.8203,180.5018},
		{2497.8640,2783.4727,14.9513,266.6927}
	},//министерство
	*/
	{
		{489.0687,-2831.5723,3193.9480,270.1967},
		{605.4394,-1643.1881,17.3499,266.0535}
	},//отель
	{
		{1421.8942,554.9734,1005.7759,87.6734},
		{1310.2025,-1367.1205,13.5203,180.4866}
	},//склад военный
	{
		{316.4172,-170.0000,999.5938,1.4085},
		{293.0681,1974.5957,17.6406,273.2427}
	},//SWAT 1
	{
		{947.9167,-1747.9132,13.5546,85.8435},
		{-1723.8477,255.2795,1074.1749,357.2169}
	},//SWAT 2
	{
		{288.6906,167.3987,1007.1719,356.7976},
		{296.7832,-111.5171,1001.5156,31.2322}
	},//Притон
	{
		{318.6724,1115.0284,1083.8828,358.9843},
		{2166.3599,-1671.6519,15.0740,223.5870}
	},//Russian Mafia
	{
		{937.3404,1733.1702,8.8516,267.9706},
		{-1660.0127,863.2879,1004.3409,90.7246}
	},//La Cosa Nosta
	{
		{1493.4673,733.3999,11.8042,180.5721},
		{830.5991,869.4124,1005.0040,180.6476}
	},//Yakuza
	{
		{1455.5551,2759.5437,10.8249,230.6825},
		{1949.4006,2212.4568,1501.0859,88.6393}
	},//ФБР 1
	{
		{-2456.0447,503.9021,30.0781,262.6767},
		{585.6798,1247.8625,1081.2556,356.5216}
	},//ФБР 2
	{
		{-2472.5151,469.8089,-10.6521,358.7389},
		{577.9222,1282.0503,1080.3250,181.4529}
	},// Мэрия LV
	{
		{1431.1483,-1804.7081,2837.2114,177.6952},
		{2388.6758,2466.0593,10.8203,86.3021}
	},// Мэрия SF
	{
		{1431.1483,-1804.7081,2837.2114,177.6952},
		{-2765.7146,375.4516,6.3347,270.4931}
	},// LSNews 1
	{
		{1788.9326,-1296.1821,13.4452,346.1662},
		{1788.9117,-1297.8771,13.3750,165.0019}
	},// LSNews 2
	{
		{1835.4088,-1302.5165,131.7344,98.8645},
		{1834.7545,-1294.1285,125.7266,51.2703}
	},// Хитманы
	{
		{-314.2124,1774.9200,1043.6406,137.5607},
		{1298.7681,-797.0107,1084.0078,357.6023}
/*	    {-2482.3145,2406.6223,17.1094,125.1765},
		{1819.9954,-890.9791,1085.7050,266.8374}*/
	},// Банк 1
	{
		{1467.2538,-1008.6491,26.8469,2.9424},
		{1459.4108,-1010.0308,26.8438,175.9929}
	},// Банк 2
	{
		{1460.1539,-1008.7442,26.8469,359.2385},
		{1467.1704,-1010.0306,26.8438,171.0124}
	},// ФБР арена их
	{
		{556.0627,1292.3851,1083.0670,358.5262},
		{582.5140,1247.9089,1081.2137,2.2213}
	},// магазин ёлок лс
	{
		{1247.9701,-1560.0415,4069.5634,4069.4912},
		{2997.6553,-345.0598,4069.9919,4069.0544}
	},// магазин ёлок лв
	{
		{1879.2959,2290.5789,4069.9799,4069.3651},
		{2997.6553,-345.0598,4069.9919,4069.0544}
	},// магазин ёлок сф
	{
		{-2266.3191,31.0985,4069.3203,4069.9141},
		{2997.6553,-345.0598,4069.9919,357.0544}
	},// ёлки нуллы
	{
		{-1613.3452,-126.0743,1501.0859,271.1927},
		{-1372.9342,499.0947,11.1953,270.2857}
	},// Казарма National Guard
	{
		{290.0105,-1617.0881,96.4996,75.8371},
		{268.6806,-1609.8531,114.4214,262.0962}
	},// фбр крыша
	{
		{1594.8744,-1514.9426,1103.3810,92.2291},
		{681.6374,-473.5756,16.5363,182.8475}
	},//biker
	{
		{1039.0382,1006.5532,10.9094,139.6829},
		{1038.8420,1013.2982,11.0000,329.8876}
	},//R.I.M
	{
		{400.6660,-2105.2341,14.0327,0.7651},
		{1739.3647,1.7897,1004.1949,272.1552}
	},// Spawn-Новичков 2
	{
		{594.2724,1455.1500,1900.7980,92.2923},
		{251.3250,1839.0664,17.6991,270.6617}
	},//Выход из казармы
	{
		{-2041.8407,-119.1338,35.2579,358.5759},
		{-2042.0737,-121.7593,35.2248,163.4237}
	},//Автошкола SF
	{
		{846.2907,-6.4915,1004.2050,87.4899},
		{293.0645,1982.8414,17.6406,271.9966}
	},//Казарма LV
	{
		{-1097.9634,-1637.0281,-77.9801,275.7276},
		{-866.0929,-1701.5845,-54.8758,158.0972}
	},//shahta
	{
		{-1060.7654,-1205.4958,129.2869,270.9038},
		{-1062.4844,-1205.7185,129.2559,128.2955}
	},//sad 1
	{
		{-1066.9950,-1205.6997,129.2549,272.1731},
		{-1068.4569,-1205.6387,129.7565,87.2565}
	},//sad 2
	{
		{304.4845,-141.7812,1004.0625,87.4161},
		{301.7655,-76.5499,1001.5156,176.1025}
	}//tir in ammo
};
// gteleportend


new gTeleportPick[TP_COUNT][2];
new gTeleportDataToD[TP_COUNT][2][2] ={//int | mir
	{// Мэрия ЛС
		{3,700},
		{0,0}
	},
	{// Spawn Новичков
		{0,0},
		{0,0}
	},
	{// Банк ЛС
		{0,0},
		{0,1}
	},
	{// Хранилище банка
		{0,0},
		{1,3}
	},// RIFA вход/выход
	{
		{18,63},
		{0,0}
	},// Тюрьма
	{
		{5,10},
		{1,1}
	},// ПД Тюрьма
	{
		{0,0},
		{6,0}
	},//ЛСПД
	{
		{4,1},
		{0,0}
	},//ЛСПД выход в гараж
	{
		{4,1},
		{0,0}
	},//ЛСПД выход в гараж
	{
		{4,2},
		{0,0}
	},//СФПД
	{
		{4,2},
		{0,0}
	},//LVPD
	{
		{4,3},
		{0,0}
	},//LVPD выход в гараж
	{
		{4,3},
		{0,0}
	},//LVPD крыша
	{
		{0,0},
		{0,0}
	},//Казино
	{
		{7,38},
		{6,38}
	},//Сад 1
	{
		{0,0},
		{0,0}
	},//Сад 2
	{
		{0,0},
		{0,0}
	},//Шахта
	{
		{0,0},
		{0,0}
	},//нулл
	{
		{0,0},
		{0,0}
	},//Больница
	{
		{4,0},
		{0,0}
	},//Больница крыша
	{
		{4,0},
		{0,0}
	},//GROVE
	{
		{2,1},
		{0,0}
	},//Ballas
	{
		{6,34},
		{0,0}
	},//Vagos
	{
		{4,75},
		{0,0}
	},//Aztec
	{
		{8,36},
		{0,0}
	},//Автошкола
	{
		{0,0},
		{0,0}
	},//Автошкола здание
	{
		{0,0},
		{0,0}
	},//Больница
	{
		{4,2},
		{0,0}
	},//Больница крыша
	{
		{4,2},
		{0,0}
	},//Больница
	{
		{4,1},
		{0,0}
	},//Больница крыша
	{
		{4,1},
		{0,0}
	},//Туса
	{
		{0,0},
		{0,0}
	},//Туса крыша
	{
		{0,0},
		{0,0}
	},//Туса BMX
	{
		{0,0},
		{0,0}
	},//Цех оружия
	{
		{0,0},
		{2,0}
	},//армия пикап 1
	{
		{0,0},
		{1,0}
	},//армия пикап 2
	{
		{0,0},
		{0,0}
	},//зона
	/*{
		{0,0},
		{0,0}
	},//министерство
	*/
	{
		{0,0},
		{0,0}
	},//отель
	{
		{1,0},
		{0,0}
	},//склад военный
	{
		{6,38},
		{0,0}
	},//SWAT 1
	{
		{0,0},
		{0,0}
	},//SWAT 2
	{
		{3,0},
		{6,23}
	},//Притон
	{
		{5,0},
		{0,0}
	},//Russian Mafia
	{
		{0,0},
		{5,1}
	},//La Cosa Nostra
	{
		{0,0},
		{5,2}
	},//Yakuza
	{
		{0,0},
		{5,0}
	},//ФБР 1
	{
		{0,0},
		{3,100}
	},//ФБР 2
	{
		{0,0},
		{3,100}
	},//Мэрия ЛВ
	{
		{3,800},
		{0,0}
	},//Мэрия СФ
	{
		{3,900},
		{0,0}
	},//LSNews 1
	{
		{0,0},
		{0,0}
	},//LSNews 2
	{
		{0,0},
		{0,0}
	},//хитманы
	{
		{0,0},
		{5,0}
	},//банк 1
	{
		{0,0},
		{0,0}
	},//банк 2
	{
		{0,0},
		{0,0}
	},//ФБР
	{
		{3,100},
		{3,100}
	},//магазин ёлок лс
	{
		{0,0},
		{0,1}
	},//магазин ёлок лв
	{
		{0,0},
		{0,2}
	},//магазин ёлок сф
	{
		{0,0},
		{0,3}
	},
	{
		{0,0},
		{0,0}
	},// Казарма National Guard
	{
		{0,0},
		{0,0}
	},// ФБР крыша
	{
		{0,0},
		{0,0}
	},//biker
	{
		{0,0},
		{0,0}
	},//R.I.M
	{
		{0,0},
		{0,0}
	},//Spawn новичков 2
	{
		{0,0},
		{0,0}
	},//Выход из казармы
	{
		{0,0},
		{0,0}
	},//Автошкола SF
	{
		{0,0},
		{0,0}
	},//CazarmyLV
	{
		{0,0},
		{0,0}
	},//shahta
	{
		{0,0},
		{0,0}
	},//sad 1
	{
		{0,0},
		{0,0}
	},//sad 2
	{
		{7, -1},
		{4, -1}
	}
};

//304.4845,-141.7812,1004.0625,87.4161 - 7
//285,301.7655,-76.5499,1001.5156,176.1025 - 4


//gteleportend2

forward Float:GetElevatorZCoordForFloor22(floorid);
forward Float:GetDoorsZCoordForFloor22(floorid);
forward Elevator_TurnToIdle22();
forward Elevator_Boost22(floorid);
forward Elevator_MoveToFloor22(floorid);

#define ELEVATOR_SPEED22      			(3.0)   //скорость лифта
#define DOORS_SPEED22         			(1.0)   //скорость дверей
#define ELEVATOR_WAIT_TIME22  			(5000)  //время ожидания при транзитной остановке
#define X_DOOR_CLOSED22       			(287.9500)
#define X_DOOR_R_OPENED22     			(289.6500)
#define X_DOOR_L_OPENED22     			(286.2500)
#define GROUND_Z_COORD22      			(18.7000)
#define ELEVATOR_OFFSET22     			(0.059523)
#define X_DOOR_CLOSED22       			(287.9500)
#define X_DOOR_R_OPENED22     			(289.6500)
#define X_DOOR_L_OPENED22     			(286.2500)
#define GROUND_Z_COORD22      			(18.7000)
#define ELEVATOR_OFFSET22     			(0.059523)

new TimElev22,
	Obj_Elevator22,
	Obj_ElevatorDoors22[2],
	Obj_FloorDoors22[14][2],
	Text3D:Label_Elevator22 = Text3D:INVALID_3DTEXT_ID,
	ElevatorState22,
	ElevatorFloor22,
	ElevatorQueue22[14],
	FloorRequestedBy22[14],
	ElevatorBoostTimer22
;
new FloorNames22[14][16] = { "Гараж","1 этаж","2 этаж","3 этаж","4 этаж","5 этаж","6 этаж","7 этаж (ФБР)","8 этаж (ФБР)","9 этаж","10 этаж","11 этаж","12 этаж","13 этаж" };
new Float:FloorZOffsets22[14] ={0.0,15.0782,29.1421,33.64325,38.1444,42.64555,47.1467,51.64785,56.149,60.65015,65.1513,69.65245,74.1536,78.65475};


new WeaponNames[48][40] =
{
	"Unarmed (Fist)", // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Pistols"}, // 22
	{"Desert Eagle (Silencer)"}, // 23
	{"Desert Eagle"}, // 24
	{"Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Auto Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};

#define SetPlayerTimer(%0,%1,%2,%3) SetTimerEx(%1, %2, %3, "i", %0)
//==========[musor]

#define MAX_MUSORS 329
new MusorObject[MAX_MUSORS] = {-1, ...};
//new MusorCP[MAX_MUSORS] = {-1, ...};
new Text3D:MusorText[MAX_MUSORS] = {Text3D:-1, ...};
new Float:MusorPos[MAX_MUSORS][4] =
{
	{1464.30004883,-725.00000000,92.50000000,110.00000000}, //object(cj_dumpster2) (1)
	{1514.50000000,-776.00000000,79.69999695,126.00000000}, //object(cj_dumpster2) (2)
	{1523.40002441,-794.79998779,74.09999847,87.99670410}, //object(cj_dumpster2) (3)
	{1522.69995117,-837.29998779,67.00000000,87.99499512}, //object(cj_dumpster2) (4)
	{1459.30004883,-888.09997559,55.29999924,337.99499512}, //object(cj_dumpster2) (5)
	{1415.69995117,-930.59997559,35.70000076,175.99438477}, //object(cj_dumpster2) (6)
	{1444.40002441,-934.40002441,36.09999847,175.98999023}, //object(cj_dumpster2) (7)
	{1273.50000000,-914.29998779,42.00000000,185.98999023}, //object(cj_dumpster2) (8)
	{1236.59997559,-920.79998779,42.70000076,189.98754883}, //object(cj_dumpster2) (9)
	{1179.19995117,-932.09997559,43.00000000,189.98657227}, //object(cj_dumpster2) (10)
	{1133.69995117,-1033.09997559,31.70000076,179.98657227}, //object(cj_dumpster2) (11)
	{1116.69995117,-1033.19995117,31.70000076,179.98352051}, //object(cj_dumpster2) (12)
	{1091.90002441,-1071.90002441,27.89999962,89.98352051}, //object(cj_dumpster2) (13)
	{1091.90002441,-1097.69995117,24.89999962,89.97802734}, //object(cj_dumpster2) (14)
	{1172.00000000,-1104.69995117,24.70000076,89.97802734}, //object(cj_dumpster2) (15)
	{1171.90002441,-1070.80004883,28.10000038,89.97802734}, //object(cj_dumpster2) (16)
	{1199.50000000,-1029.09997559,31.79999924,179.97802734}, //object(cj_dumpster2) (17)
	{1237.30004883,-1028.50000000,31.79999924,179.97802734}, //object(cj_dumpster2) (18)
	{820.79998779,-1411.90002441,13.30000019,359.97802734}, //object(cj_dumpster2) (19)
	{848.90002441,-1412.09997559,13.19999981,359.97253418}, //object(cj_dumpster2) (20)
	{883.79998779,-1412.30004883,12.89999962,359.97253418}, //object(cj_dumpster2) (21)
	{908.59997559,-1467.90002441,13.39999962,269.97253418}, //object(cj_dumpster2) (22)
	{908.29998779,-1509.59997559,13.39999962,269.96704102}, //object(cj_dumpster2) (23)
	{858.09997559,-1523.90002441,13.39999962,269.96704102}, //object(cj_dumpster2) (24)
	{801.00000000,-1689.40002441,13.39999962,269.96704102}, //object(cj_dumpster2) (25)
	{801.29998779,-1703.59997559,13.39999962,269.96704102}, //object(cj_dumpster2) (26)
	{801.09997559,-1724.00000000,13.39999962,269.96704102}, //object(cj_dumpster2) (27)
	{796.00000000,-1759.90002441,13.30000019,179.96704102}, //object(cj_dumpster2) (28)
	{764.29998779,-1744.19995117,12.10000038,89.96704102}, //object(cj_dumpster2) (29)
	{763.40002441,-1690.69995117,4.30000019,89.96154785}, //object(cj_dumpster2) (30)
	{788.09997559,-1665.59997559,13.30000019,179.96154785}, //object(cj_dumpster2) (31)
	{648.29998779,-1644.30004883,14.80000019,89.95605469}, //object(cj_dumpster2) (32)
	{647.59997559,-1614.40002441,15.00000000,89.95056152}, //object(cj_dumpster2) (33)
	{196.10000610,-1389.90002441,48.00000000,40.00000000}, //object(cj_dumpster2) (35)
	{255.50000000,-1337.59997559,52.70000076,39.99572754}, //object(cj_dumpster2) (36)
	{289.29998779,-1314.19995117,53.90000153,39.99572754}, //object(cj_dumpster2) (37)
	{347.29998779,-1280.59997559,53.79999924,29.99572754}, //object(cj_dumpster2) (38)
	{409.60000610,-1252.90002441,51.59999847,29.99267578}, //object(cj_dumpster2) (39)
	{563.00000000,-1196.00000000,44.59999847,20.00000000}, //object(cj_dumpster2) (41)
	{634.90002441,-1111.09997559,46.50000000,39.99511719}, //object(cj_dumpster2) (42)
	{684.40002441,-1061.69995117,49.40000153,59.99023438}, //object(cj_dumpster2) (43)
	{725.79998779,-985.70001221,52.70000076,59.98535156}, //object(cj_dumpster2) (44)
	{312.60000610,-1196.09997559,76.00000000,219.98535156}, //object(cj_dumpster2) (45)
	{253.89999390,-1239.09997559,72.30000305,210.98474121}, //object(cj_dumpster2) (46)
	{220.69999695,-1267.30004883,65.19999695,239.98474121}, //object(cj_dumpster2) (47)
	{339.50000000,-1197.19995117,76.30000305,39.97985840}, //object(cj_dumpster2) (48)
	{402.70001221,-1168.40002441,78.30000305,149.97924805}, //object(cj_dumpster2) (49)
	{579.20001221,-1127.40002441,49.20000076,199.97436523}, //object(cj_dumpster2) (50)
	{632.59997559,-1093.40002441,46.79999924,213.97314453}, //object(cj_dumpster2) (51)
	{668.00000000,-1057.00000000,49.29999924,233.96972656}, //object(cj_dumpster2) (52)
	{691.40002441,-1014.79998779,51.70000076,243.96484375}, //object(cj_dumpster2) (53)
	{828.70001221,-868.50000000,68.59999847,201.96240234}, //object(cj_dumpster2) (54)
	{872.20001221,-855.09997559,77.30000305,201.96166992}, //object(cj_dumpster2) (55)
	{921.09997559,-832.20001221,93.59999847,201.96166992}, //object(cj_dumpster2) (56)
	{831.59997559,-880.29998779,68.19999695,331.96166992}, //object(cj_dumpster2) (57)
	{924.59997559,-842.20001221,93.59999847,21.95739746}, //object(cj_dumpster2) (58)
	{976.59997559,-814.29998779,97.59999847,21.95617676}, //object(cj_dumpster2) (59)
	{1030.19995117,-791.50000000,102.80000305,21.95617676}, //object(cj_dumpster2) (60)
	{1081.80004883,-777.50000000,107.69999695,1.95617676}, //object(cj_dumpster2) (61)
	{1077.90002441,-765.50000000,107.59999847,189.95556641}, //object(cj_dumpster2) (62)
	{1063.90002441,-623.79998779,115.69999695,9.95361328}, //object(cj_dumpster2) (63)
	{1082.59997559,-626.00000000,113.00000000,9.94812012}, //object(cj_dumpster2) (64)
	{998.20001221,-644.50000000,121.50000000,29.94812012}, //object(cj_dumpster2) (65)
	{910.70001221,-681.79998779,116.19999695,229.94323730}, //object(cj_dumpster2) (66)
	{949.00000000,-696.29998779,121.90000153,29.93835449}, //object(cj_dumpster2) (67)
	{898.40002441,-769.40002441,97.09999847,9.93774414},
	{832.79998779,-798.29998779,73.09999847,9.93713379},
	{794.29998779,-807.40002441,65.90000153,9.93713379},
	{897.29998779,-711.79998779,109.59999847,260.00000000},
	{239.65, -95.84, 1.58,   91.32},
	{239.74, -118.88, 1.58,   91.32},
	{325.93, -121.10, 1.58,   271.10},
	{325.89, -95.86, 1.58,   271.10},
	{265.45, -64.92, 1.58,   179.96},
	{239.69, -26.58, 1.58,   89.71},
	{736.57, -523.21, 16.21,   179.02},
	{779.00, -523.25, 16.21,   179.02},
	{813.12, -523.26, 16.21,   179.96},
	{738.81, -536.99, 16.21,   1.11},
	{777.70, -536.99, 16.21,   1.94},
	{2350.80, 188.64, 26.22,   91.00},
	{2350.75, 134.63, 26.22,   91.00},
	{2350.71, 105.32, 26.22,   91.00},
	{2400.71, 22.17, 26.22,   91.00},
	{2470.83, 66.71, 26.22,   91.00},
	{2540.73, 76.81, 26.22,   91.00},
	{2540.66, 5.85, 26.22,   91.00},
	{2498.47, 104.91, 26.22,   359.23},
	{2431.72, -35.15, 26.22,   359.23},
	{2378.88, -35.13, 26.22,   359.23},
	{2313.62, -105.08, 26.22,   359.23},
	{2259.08, -105.03, 26.22,   359.23},
	{2443.21, 48.53, 26.22,   178.94},
	{2421.21, 48.45, 26.22,   178.94},
	{2383.01, 98.79, 26.22,   178.94},
	{2475.12, 118.51, 26.22,   178.94},
	{2512.74, 118.49, 26.22,   178.94},
	{2509.32, -15.08, 26.22,   359.23},
	{1903.05, -1049.86, 23.89,   358.00},
	{1953.33, -1054.39, 24.10,   350.34},
	{2026.01, -1060.01, 24.55,   157.00},
	{2065.52, -1077.81, 24.76,   157.00},
	{2105.70, -1095.61, 25.04,   155.39},
	{2153.94, -1088.39, 25.03,   155.00},
	{2023.31, -1129.72, 24.72,   179.00},
	{1992.58, -1129.78, 25.64,   179.00},
	{1944.96, -1129.73, 25.64,   181.21},
	{1904.3395, -1129.8004, 24.6400,   181.21},
	{2077.97, -1127.56, 23.92,   90.31},
	{2077.91, -1163.08, 23.92,   89.89},
	{2089.25, -1294.75, 23.89,   179.96},
	{2128.76, -1294.73, 23.89,   179.96},
	{2191.03, -1294.59, 23.89,   179.96},
	{2247.32, -1294.73, 23.89,   179.96},
	{2094.57, -1226.91, 23.89,   360.00},
	{2154.48, -1226.86, 23.89,   360.00},
	{2205.32, -1226.86, 23.89,   360.00},
	{2253.96, -1226.92, 23.89,   360.00},
	{2151.10, -1306.91, 23.89,   360.00},
	{2107.25, -1306.97, 23.89,   360.00},
	{2227.45, -1390.26, 23.89,   360.00},
	{2263.73, -1390.36, 23.89,   360.00},
	{2206.45, -1403.90, 23.89,   269.38},
	{2147.68, -1378.29, 23.89,   179.96},
	{2135.47, -1426.23, 23.89,   90.49},
	{2135.48, -1470.86, 23.89,   90.49},
	{2186.56, -1378.25, 23.89,   179.96},
	{2206.53, -1488.03, 23.89,   269.38},
	{1855.69, -1926.20, 13.44,   180.00},
	{1903.58, -1926.18, 13.44,   180.00},
	{1944.11, -1926.27, 13.44,   180.00},
	{1995.55, -1718.13, 13.50,   270.55},
	{1995.59, -1647.34, 13.50,   270.55},
	{2074.87, -1728.97, 13.50,   270.55},
	{2074.88, -1706.43, 13.50,   270.55},
	{2074.80, -1649.38, 13.50,   270.55},
	{2074.79, -1624.52, 13.50,   270.55},
	{2008.48, -1635.21, 13.50,   90.28},
	{2008.48, -1721.76, 13.50,   90.28},
	{2314.05, -1726.07, 13.42,   179.55},
	{2386.48, -1725.76, 13.42,   179.55},
	{2389.23, -1653.06, 13.42,   179.55},
	{2366.88, -1652.96, 13.42,   179.55},
	{2285.65, -1652.69, 14.98,   182.25},
	{2642.57, 767.02, 10.84,   0.59},
	{2618.29, 767.06, 10.84,   0.59},
	{2565.09, 767.02, 10.84,   0.59},
	{2529.38, 766.97, 10.84,   0.59},
	{2551.88, 699.42, 10.87,   180.32},
	{2398.52, 706.79, 10.84,   0.59},
	{2369.56, 706.98, 10.84,   0.59},
	{2329.12, 706.88, 10.84,   0.59},
	{2258.87, 706.79, 10.84,   0.59},
	{2203.37, 706.77, 10.84,   0.59},
	{2122.67, 666.96, 10.84,   0.59},
	{2075.39, 667.23, 10.84,   0.59},
	{2030.08, 666.90, 10.84,   0.59},
	{2028.57, 746.85, 10.84,   0.59},
	{2072.46, 746.99, 10.84,   0.59},
	{2114.22, 747.03, 10.84,   0.59},
	{2394.46, 719.40, 10.87,   180.32},
	{2433.57, 724.43, 10.87,   90.27},
	{2433.68, 679.99, 10.87,   90.27},
	{2343.90, 719.52, 10.87,   180.32},
	{2393.25, 639.58, 10.87,   180.32},
	{2341.52, 639.45, 10.87,   180.32},
	{2252.82, 639.42, 10.87,   180.32},
	{2203.64, 639.33, 10.87,   180.32},
	{2201.28, 719.26, 10.87,   180.32},
	{2120.93, 759.50, 10.87,   180.32},
	{2070.09, 759.47, 10.87,   180.32},
	{2023.90, 759.45, 10.87,   180.32},
	{2034.44, 679.66, 10.87,   180.32},
	{2095.44, 679.43, 10.87,   180.32},
	{2153.85, 764.59, 10.87,   90.27},
	{1861.23, 708.06, 10.87,   270.72},
	{1303.57, 2034.20, 10.63,   89.38},
	{1303.69, 2001.51, 10.63,   89.38},
	{1394.07, 1990.95, 10.63,   89.38},
	{1393.90, 2024.64, 10.63,   89.38},
	{1393.58, 1926.95, 10.63,   89.38},
	{1533.87, 2074.94, 10.63,   89.38},
	{1533.83, 2114.63, 10.63,   89.38},
	{1624.99, 2154.48, 10.63,   89.38},
	{1624.71, 2096.19, 10.63,   89.38},
	{1624.71, 2045.27, 10.63,   89.38},
	{1381.06, 1994.91, 10.63,   271.13},
	{1380.93, 2035.42, 10.63,   269.63},
	{1612.15, 2035.01, 10.63,   269.63},
	{1611.98, 2065.01, 10.63,   269.63},
	{1612.14, 2115.02, 10.63,   269.63},
	{1611.95, 2148.89, 10.63,   269.63},
	{1699.60, 2121.21, 10.63,   269.63},
	{1700.27, 2075.47, 10.63,   269.63},
	{1700.60, 2040.05, 10.63,   269.63},
	{1700.92, 1985.08, 10.63,   269.63},
	{1560.99, 2011.05, 10.63,   270.30},
	{1561.03, 1989.74, 10.63,   270.30},
	{1380.92, 1895.00, 10.63,   271.13},
	{1480.91, 1892.00, 10.63,   271.13},
	{1480.97, 1937.24, 10.63,   271.13},
	{1300.29, 2547.20, 10.88,   90.08},
	{1391.93, 2551.38, 10.87,   90.08},
	{1484.43, 2532.94, 10.87,   90.08},
	{1594.32, 2663.57, 10.87,   90.08},
	{1914.71, 2753.74, 10.87,   90.08},
	{1953.12, 2748.35, 10.87,   180.72},
	{1989.09, 2748.43, 10.87,   180.72},
	{2023.63, 2748.47, 10.87,   180.72},
	{2064.93, 2748.47, 10.87,   180.72},
	{2053.51, 2650.59, 10.87,   180.72},
	{2011.46, 2650.65, 10.87,   180.72},
	{1985.99, 2650.74, 10.87,   180.72},
	{1943.95, 2650.69, 10.87,   180.72},
	{1659.71, 2739.69, 10.87,   180.72},
	{1623.39, 2740.00, 10.87,   180.72},
	{1578.96, 2739.51, 10.87,   180.72},
	{1564.48, 2827.96, 10.87,   180.72},
	{1606.19, 2828.01, 10.87,   180.72},
	{1669.44, 2828.21, 10.87,   180.72},
	{1615.70, 2596.47, 10.87,   180.72},
	{1653.03, 2596.10, 10.87,   180.72},
	{1551.35, 2596.23, 10.87,   180.72},
	{1499.03, 2596.12, 10.87,   180.72},
	{1335.61, 2596.18, 10.87,   180.72},
	{1306.87, 2596.19, 10.87,   180.72},
	{1281.20, 2596.15, 10.87,   180.72},
	{1240.80, 2601.34, 10.87,   269.24},
	{1285.23, 2561.32, 10.87,   269.24},
	{1285.18, 2537.78, 10.87,   269.51},
	{1379.27, 2536.53, 10.87,   269.51},
	{1471.01, 2534.72, 10.87,   269.51},
	{1332.01, 2583.56, 10.87,   360.00},
	{1355.20, 2583.58, 10.87,   360.00},
	{1421.89, 2583.46, 10.87,   360.00},
	{1446.24, 2583.39, 10.87,   360.00},
	{1488.70, 2582.01, 10.878,   360.00},
	{1510.08, 2581.70, 10.87,   360.00},
	{1529.74, 2582.02, 10.87,   360.00},
	{1582.53, 2582.17, 10.87,   360.00},
	{1650.35, 2582.03, 10.87,   360.00},
	{1557.09, 2727.03, 10.87,   360.00},
	{1595.83, 2726.94, 10.87,   360.00},
	{1628.76, 2726.99, 10.87,   360.00},
	{1668.93, 2727.10, 10.87,   360.00},
	{1699.00, 2706.95, 10.87,   360.00},
	{1720.95, 2707.02, 10.87,   360.00},
	{1001.12, 2025.14, 10.69,   269.86},
	{1001.23, 1976.18, 10.69,   269.86},
	{1001.18, 1924.32, 10.69,   269.86},
	{1001.16, 1878.22, 10.69,   269.86},
	{1101.15, 1974.30, 10.69,   269.86},
	{1101.13, 2024.37, 10.69,   269.86},
	{901.13, 2051.30, 10.69,   269.86},
	{901.12, 1984.46, 10.69,   269.86},
	{913.65, 2031.43, 10.69,   90.34},
	{913.78, 1932.05, 10.69,   90.34},
	{1013.64, 1929.09, 10.69,   90.34},
	{1013.67, 1876.48, 10.69,   90.34},
	{1013.65, 1848.01, 10.69,  90.34},
	{1013.70, 1976.77, 10.69,   90.34},
	{1013.65, 2029.22, 10.69,   90.34},
	{-2800.30004883,-187.19999695,7.00000000,270.00000000}, //object(cj_dumpster2) (73)
	{-2800.30004883,-162.69999695,7.00000000,270.00000000}, //object(cj_dumpster2) (74)
	{-2800.19995117,-137.00000000,7.00000000,270.00000000}, //object(cj_dumpster2) (75)
	{-2800.89990234,-124.40000153,7.00000000,270.00000000}, //object(cj_dumpster2) (76)
	{-2800.00000000,-97.30000305,7.00000000,270.00000000}, //object(cj_dumpster2) (78)
	{-2800.19995117,-86.09999847,7.00000000,270.00000000}, //object(cj_dumpster2) (79)
	{-2799.80004883,-44.40000153,7.00000000,270.00000000}, //object(cj_dumpster2) (80)
	{-2800.19995117,-22.89999962,7.00000000,270.00000000}, //object(cj_dumpster2) (81)
	{-2800.60009766,3.59999990,7.00000000,270.00000000}, //object(cj_dumpster2) (82)
	{-2800.80004883,24.10000038,7.00000000,270.00000000}, //object(cj_dumpster2) (83)
	{-2800.00000000,76.00000000,7.00000000,270.00000000}, //object(cj_dumpster2) (84)
	{-2799.89990234,93.90000153,7.00000000,270.00000000}, //object(cj_dumpster2) (85)
	{-2800.00000000,115.19999695,7.00000000,270.00000000}, //object(cj_dumpster2) (86)
	{-2800.30004883,138.89999390,7.00000000,270.00000000}, //object(cj_dumpster2) (87)
	{-2800.10009766,177.69999695,7.00000000,270.00000000}, //object(cj_dumpster2) (88)
	{-2800.60009766,202.60000610,7.00000000,270.00000000}, //object(cj_dumpster2) (89)
	{-2800.19995117,220.60000610,7.00000000,270.00000000}, //object(cj_dumpster2) (90)
	{-2714.80004883,-176.30000305,4.09999990,90.00000000}, //object(cj_dumpster2) (91)
	{-2715.10009766,-149.60000610,4.09999990,90.00000000}, //object(cj_dumpster2) (92)
	{-2714.89990234,-130.00000000,4.09999990,90.00000000}, //object(cj_dumpster2) (93)
	{-2715.00000000,-111.69999695,4.09999990,90.00000000}, //object(cj_dumpster2) (94)
	{-2715.00000000,-86.59999847,4.09999990,90.00000000}, //object(cj_dumpster2) (95)
	{-2714.89990234,-54.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (96)
	{-2714.80004883,-37.09999847,4.09999990,90.00000000}, //object(cj_dumpster2) (97)
	{-2715.10009766,-16.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (98)
	{-2714.80004883,3.40000010,4.09999990,90.00000000}, //object(cj_dumpster2) (99)
	{-2714.69995117,23.60000038,4.09999990,90.00000000}, //object(cj_dumpster2) (100)
	{-2695.39990234,5.30000019,4.09999990,270.00000000}, //object(cj_dumpster2) (101)
	{-2695.80004883,-16.39999962,4.09999990,270.00000000}, //object(cj_dumpster2) (102)
	{-2697.80004883,-92.50000000,4.09999990,270.00000000}, //object(cj_dumpster2) (103)
	{-2697.60009766,-111.80000305,4.09999990,270.00000000}, //object(cj_dumpster2) (104)
	{-2697.69995117,-130.50000000,4.09999990,270.00000000}, //object(cj_dumpster2) (105)
	{-2698.10009766,-150.69999695,4.09999990,270.00000000}, //object(cj_dumpster2) (106)
	{-2697.50000000,-168.89999390,4.09999990,270.00000000}, //object(cj_dumpster2) (107)
	{-2697.19995117,-178.60000610,4.09999990,270.00000000}, //object(cj_dumpster2) (108)
	{-2697.60009766,-194.39999390,4.09999990,270.00000000}, //object(cj_dumpster2) (109)
	{-2612.80004883,-194.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (110)
	{-2612.89990234,-171.19999695,4.09999990,90.00000000}, //object(cj_dumpster2) (111)
	{-2612.89990234,-152.10000610,4.09999990,90.00000000}, //object(cj_dumpster2) (112)
	{-2612.80004883,-129.39999390,4.09999990,90.00000000}, //object(cj_dumpster2) (113)
	{-2612.69995117,-114.19999695,4.09999990,90.00000000}, //object(cj_dumpster2) (114)
	{-2612.50000000,-93.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (115)
	{-2510.19995117,-187.00000000,25.39999962,90.00000000}, //object(cj_dumpster2) (116)
	{-2509.89990234,-164.89999390,25.39999962,90.00000000}, //object(cj_dumpster2) (117)
	{-2509.80004883,-148.10000610,25.39999962,90.00000000}, //object(cj_dumpster2) (118)
	{-2595.10009766,-116.30000305,4.09999990,270.00000000}, //object(cj_dumpster2) (119)
	{-2596.00000000,-88.40000153,4.09999990,270.00000000}, //object(cj_dumpster2) (120)
	{-2868.19995117,802.70001221,37.00000000,70.00000000}, //object(cj_dumpster2) (122)
	{-2874.50000000,751.29998779,31.29999924,99.99938965}, //object(cj_dumpster2) (123)
	{-2865.39990234,723.90002441,28.89999962,119.99752808}, //object(cj_dumpster2) (124)
	{-2856.69995117,711.40002441,26.79999924,129.99267578}, //object(cj_dumpster2) (125)
	{-2839.69995117,686.59997559,21.50000000,129.99023438}, //object(cj_dumpster2) (126)
	{-2833.00000000,861.20001221,43.90000153,89.99023438}, //object(cj_dumpster2) (127)
	{-2832.30004883,890.50000000,43.90000153,89.98901367}, //object(cj_dumpster2) (128)
	{-2833.80004883,931.20001221,43.90000153,89.98901367}, //object(cj_dumpster2) (129)
	{-2832.30004883,908.79998779,43.90000153,89.98901367}, //object(cj_dumpster2) (130)
	{-2837.19995117,948.20001221,43.90000153,97.98901367}, //object(cj_dumpster2) (131)
	{-2852.60009766,976.09997559,43.09999847,127.98706055}, //object(cj_dumpster2) (132)
	{-2880.00000000,1008.70001221,37.90000153,107.98526001}, //object(cj_dumpster2) (133)
	{-2887.69995117,1028.69995117,35.29999924,107.98461914}, //object(cj_dumpster2) (134)
	{-2890.69995117,1059.59997559,32.09999847,85.98461914}, //object(cj_dumpster2) (135)
	{-2890.69995117,1082.80004883,30.29999924,85.98449707}, //object(cj_dumpster2) (136)
	{-2890.50000000,1108.40002441,26.50000000,85.98449707}, //object(cj_dumpster2) (137)
	{-2648.60009766,166.60000610,4.09999990,0.00000000}, //object(cj_dumpster2) (140)
	{-2621.10009766,166.69999695,4.09999990,0.00000000}, //object(cj_dumpster2) (141)
	{-2697.19995117,92.90000153,4.09999990,270.00000000}, //object(cj_dumpster2) (142)
	{-2697.50000000,118.59999847,4.09999990,270.00000000} //object(cj_dumpster2) (143)
};

/*stock const
	Float:BallSpawn[3] = {2706.9944, -1802.1829, 422.8372},
	Float:Corners[4][3] = {
		{2677.1453, -1748.0548, 422.8372},
		{2736.6797, -1747.9595, 422.8372},
		{2736.7180, -1856.2570, 422.8372},
		{2677.3398, -1856.5066, 422.8372}
	};*/


/*new
	Ball = -1,
	Goal = 0,
	LastTouch = INVALID_PLAYER_ID,
	pLastTick[MAX_PLAYERS],
	BallHolder = -1,
	PlayerText:pPowerTD[MAX_PLAYERS]={PlayerText:-1, ...},
	Text:PowerTD[2];*/

new PlayerText:p_mh[MAX_PLAYERS]={PlayerText:-1,...};
new Float:vProtect[MAX_VEHICLES]={0.0,...};
new bool:OffTime[MAX_PLAYERS]={false,...};
//=========[surfboard]
new SurfPlayerUse[MAX_PLAYERS];
new SurfPlayerUseSlot[MAX_PLAYERS]={-1,...};
enum dataSurfboard
{
	modelID,
	surf_objectID,
	Float:sppeed,
	Float:position[7]
}
new surfboardID = -1, surfboardData[MAX_PLAYERS][dataSurfboard], Float:surfboardGoTo[MAX_PLAYERS][3];
new listen_surf[MAX_PLAYERS][2];
new Float:LastSurfPos[MAX_PLAYERS][6];
new bot_surf[2];
new Text3D:bot_surf_text[2];
new bot_surf_time[2];
new surf_pos_id[50];
new Float:surf_pos_buy[50][6]={
	{391.9133,-1756.3465,8.5059,0.0000,0.0000,88.8000},//1
	{392.3133,-1756.3465,8.5059,0.0000,0.0000,88.8000},//2
	{392.7133,-1756.3465,8.5059,0.0000,0.0000,88.8000},//3
	{393.1133,-1756.3465,8.5059,0.0000,0.0000,88.8000},//4
	{393.5133,-1756.3465,8.5059,0.0000,0.0000,88.8000},//5
	{393.6040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//6
	{392.9040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//7
	{392.2040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//8
	{391.5040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//9
	{390.8040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//10
	{390.1040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//11
	{389.4040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//12
	{388.7040,-1753.0709,8.5760,0.0000,0.0000,0.0000},//13
	{393.6843,-1755.1236,8.4017,-161.2998,-179.1999,96.8000},//14
	{393.6843,-1754.4237,8.4017,-161.2998,-179.1999,96.8000},//15
	{393.6843,-1753.7237,8.4017,-161.2998,-179.1999,96.8000},//16
	{389.0322,-1756.7054,10.7115,0.0000,88.3999,0.0000},//17
	{391.6322,-1756.7054,10.7115,0.0000,88.3999,0.0000},//18
	{394.2322,-1756.7054,10.7115,0.0000,88.3999,0.0000},//19
	{391.5661,-1755.2678,7.4405,-90.0000,-90.0000,0.0000},//20
	{391.5661,-1755.2678,7.6405,-90.0000,-90.0000,0.0000},//21
	{391.5661,-1755.2678,7.8405,-90.0000,-90.0000,0.0000},//22
	{391.5661,-1755.2678,8.0405,-90.0000,-90.0000,0.0000},//23
	{391.5661,-1755.2678,8.2405,-90.0000,-90.0000,0.0000},//24
	{391.5661,-1755.2678,8.4405,-90.0000,-90.0000,0.0000},//25
	{398.2832,-1756.3465,8.5059,0.0000,0.0000,88.8000},//26
	{398.6831,-1756.3465,8.5059,0.0000,0.0000,88.8000},//27
	{399.0831,-1756.3465,8.5059,0.0000,0.0000,88.8000},//28
	{399.4832,-1756.3465,8.5059,0.0000,0.0000,88.8000},//29
	{399.8832,-1756.3465,8.5059,0.0000,0.0000,88.8000},//30
	{399.9739,-1753.0709,8.5760,0.0000,0.0000,0.0000},//31
	{399.2738,-1753.0709,8.5760,0.0000,0.0000,0.0000},//32
	{398.5739,-1753.0709,8.5760,0.0000,0.0000,0.0000},//33
	{397.8739,-1753.0709,8.5760,0.0000,0.0000,0.0000},//34
	{397.1738,-1753.0709,8.5760,0.0000,0.0000,0.0000},//35
	{396.4739,-1753.0709,8.5760,0.0000,0.0000,0.0000},//36
	{395.7738,-1753.0709,8.5760,0.0000,0.0000,0.0000},//37
	{395.0739,-1753.0709,8.5760,0.0000,0.0000,0.0000},//38
	{399.8888,-1755.1236,8.4017,-161.2998,-179.1999,96.8000},//39
	{399.8888,-1754.4237,8.4017,-161.2998,-179.1999,96.8000},//40
	{399.8888,-1753.7236,8.4017,-161.2998,-179.1999,96.8000},//41
	{396.8015,-1756.7054,10.7115,0.0000,88.3999,0.0000},//42
	{399.4015,-1756.7054,10.7115,0.0000,88.3999,0.0000},//43
	{402.0015,-1756.7054,10.7115,0.0000,88.3999,0.0000},//44
	{397.9360,-1755.2678,7.4404,-90.0000,-90.0000,0.0000},//45
	{397.9360,-1755.2678,7.6405,-90.0000,-90.0000,0.0000},//46
	{397.9360,-1755.2678,7.8404,-90.0000,-90.0000,0.0000},//47
	{397.9360,-1755.2678,8.0404,-90.0000,-90.0000,0.0000},//48
	{397.9360,-1755.2678,8.2405,-90.0000,-90.0000,0.0000},//49
	{397.9360,-1755.2678,8.4405,-90.0000,-90.0000,0.0000}//50
};

new surf_area_buy[2];
//=======[грибы]
enum griba
{
	Float:gribPos[3],
	gribCreat
}
new Float:GribInfo[91][griba] =
{
	{{702.8815,-705.6253,18.1862},-1},
	{{629.6369,-626.4828,16.8087},-1},
	{{552.2899,-710.6613,15.6666},-1},
	{{549.5466,-726.0712,16.4740},-1},
	{{498.2195,-679.3785,19.3385 },-1},
	{{435.9091,-699.4714,24.1253 },-1},
	{{410.0149,-693.8445,25.3369 },-1},
	{{423.6373,-632.5778,31.2596 },-1},
	{{383.9173,-598.8234,38.6380 },-1},
	{{365.3120,-605.5251,37.1760 },-1},
	{{389.1755,-564.6368,42.2504 },-1},
	{{396.1581,-548.8250,41.7694 },-1},
	{{411.8608,-449.7965,29.2956 },-1},
	{{424.7657,-430.9502,28.3068 },-1},
	{{441.9207,-381.7615,31.4900 },-1},
	{{439.1675,-350.8515,32.7176 },-1},
	{{271.2307,-263.2632,1.5781 },-1},
	{{108.2987,-136.0934,1.5781 },-1},
	{{175.8603,49.5331,2.3979 },-1},
	{{493.5621,97.1763,27.7191 },-1},
	{{547.1754,173.4039,27.1073 },-1},
	{{708.5907,307.0195,20.2344 },-1},
	{{743.8032,331.7983,20.3124 },-1},
	{{942.9208,409.0231,20.2344 },-1},
	{{1233.2169,536.8552,20.2344 },-1},
	{{1330.6167,494.6686,20.2184 },-1},
	{{1491.0624,324.2256,18.8417 },-1},
	{{1485.3533,273.8969,18.9174 },-1},
	{{1429.8097,164.6635,21.9831 },-1},
	{{1265.4169,-133.5778,39.7847 },-1},
	{{-372.7117,-89.7796,46.0523 },-1},
	{{-462.4359,-204.0353,77.9991 },-1},
	{{-554.9720,-221.0948,76.3361 },-1},
	{{921.3636,-479.7340,44.0374 },-1},
	{{890.4687,-494.8910,36.9549 },-1},
	{{878.1802,-483.0581,35.4741 },-1},
	{{1983.4618,89.3856,29.4775 },-1},
	{{2210.0349,146.4971,26.1758 },-1},
	{{-332.3008,-1987.6200,26.1051 },-1},
	{{-375.2895,-2004.4412,28.4262 },-1},
	{{-420.7345,-1962.1367,20.7989 },-1},
	{{-370.9467,-2049.1355,28.5462 },-1},
	{{-448.5980,-2072.9041,80.6654 },-1},
	{{-490.3048,-2121.0930,89.5054 },-1},
	{{-515.2039,-2223.6245,42.7538 },-1},
	{{-556.2787,-2223.5444,34.8664},-1},
	{{-653.4810,-2185.8540,14.6571 },-1},
	{{-697.4235,-2144.5728,24.7645 },-1},
	{{-913.5545,-2281.5803,45.6804 },-1},
	{{-924.2963,-2392.5601,63.9710 },-1},
	{{-921.2469,-2419.2676,73.1529 },-1},
	{{-928.6000,-2452.7974,90.8816 },-1},
	{{-1092.1782,-2576.2622,77.2730 },-1},
	{{-1114.4218,-2326.8787,44.7146 },-1},
	{{-1095.8896,-2317.7642,51.1427 },-1},
	{{-1036.0745,-2331.6079,60.0633 },-1},
	{{-1823.0471,-2169.1082,77.6051 },-1},
	{{-1745.4077,-2018.1677,74.5071 },-1},
	{{-1943.8130,-2144.5457,76.9309 },-1},
	{{-1955.9766,-2162.8020,75.9688 },-1},
	{{-1685.1254,-2385.9275,99.3290 },-1},
	{{-1643.7135,-2411.9897,95.7691 },-1},
	{{-1551.1573,-2505.1743,90.8708 },-1},
	{{-1465.4910,-2556.2893,63.7663 },-1},
	{{-1435.4855,-2544.3879,60.4281 },-1},
	{{-1401.0656,-2548.1582,55.9067 },-1},
	{{-1347.5752,-2507.9780,37.0068 },-1},
	{{-1328.0197,-2467.7183,27.8259 },-1},
	{{-1290.3135,-2479.8984,16.9108 },-1},
	{{-1277.4055,-2498.1367,11.4951 },-1},
	{{-568.3260,-2276.3220,27.5938 },-1},
	{{-653.1019,-2255.4465,23.3936 },-1},
	{{-614.5738,-2398.0959,28.0911 },-1},
	{{-620.2932,-2477.4644,52.8450 },-1},
	{{-673.6429,-2562.6052,58.4840 },-1},
	{{-797.0350,-2611.4380,85.9543 },-1},
	{{-814.8298,-2713.2485,90.4954 },-1},
	{{-900.3575,-2635.6716,96.5351 },-1},
	{{-908.8201,-2450.1675,86.1361},-1},
	{{-564.7324,-2000.7518,48.2172 },-1},
	{{-514.0831,-1990.8127,46.7821 },-1},
	{{-386.3437,-1968.6517,25.7109 },-1},
	{{-285.8642,-2063.6074,34.5075 },-1},
	{{-1735.6969,-2501.1594,10.1409 },-1},
	{{-1840.7139,-2382.2207,29.1400 },-1},
	{{-1906.1353,-2212.6089,77.4492 },-1},
	{{-1874.5731,-1969.2981,87.2874 },-1},
	{{-1739.6145,-1950.4650,98.8599 },-1},
	{{-1613.4684,-1867.4391,86.1701 },-1},
	{{-1868.5590,-1894.4634,88.9713 },-1},
	{{-2005.6901,-1937.4910,77.0140 },-1}
};
/*#define MAX_NARKO		(300)
new ddTimer[MAX_NARKO]={-1,...};
new ddrugs[MAX_NARKO] ={-1,...};
new Text3D:ddText[MAX_NARKO];
new ddrugtime[MAX_NARKO];*/

new onlinee = 0,onlineeM = 0,onlineeD = 0,onlineeH = 0,onlineeMi = 0;
new CountVezit2;
//=================[drop_gun]
#define STANDART_GUN_TEXT "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n Оружие: %s \n Патроны: %d\n\nЧтобы подобрать введите \" N \"\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
#define MAX_DROP_GUNS 350
new GPDIO[47]={0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,363,364,365,366,367,368,368,371};
enum drop_gun_data { dg_gun, dg_ammo, dg_object, Text3D:dg_text, dg_timer, dg_time }
new drop_gun[MAX_DROP_GUNS][drop_gun_data];
///////==============================================
enum colorData{colorname,}
static stock colorseee[][colorData] =
{
	{ 0xF59999FF,},{ 0xF5B899FF,},{ 0xF5D699FF,},
	{ 0xEDED94FF,},{ 0xE7FF9FFF,},{ 0xB7E28DFF,},{ 0xB7FF9FFF,},{ 0x9FFF9FFF,},{ 0x9FFFB7FF,},{ 0x9FFECFFF,},{ 0x9FFFFFFF,},{ 0x9FE7FFFF,},
	{ 0x9FCFFFFF,},{ 0x9FB7FFFF,},{ 0x9F9FFFFF,},{ 0xA28DE1FF,},{ 0xCF9FFFFF,},{ 0xE79FFFFF,},{ 0xFF9FFFFF, },
	{ 0xFF77BFFF,},{ 0xFF4F7FFF,},{ 0xFF2840FF,},{ 0xFF2628FF,},{ 0xFF3311FF,},{ 0xFF6622FF,},{ 0xFF9933FF,},{ 0xFFB326FF,},
	{ 0xFFCC19FF,},{ 0xFFE60DFF,},{ 0xE9E900FF,},{ 0xBFFF00FF,},{ 0x7FFF00FF,},{ 0x7FFF00FF,},{ 0x40FF00FF,  },{ 0x00FF00FF,  },
	{ 0x00FF40FF,},{ 0x00FF80FF,},{ 0x00FFBFFF,},{ 0x00A9E1FF,},{ 0x007FFFFF,},{ 0x0050FFFF,},{ 0x1A35FFFF,  },
	{ 0x00BFFFFF,},{ 0x007CF8FF,},{ 0x0050FFFF,},{ 0x1A35FFFF,},{ 0x20119BFF,},{ 0x4D00FFFF,},{ 0x7300FFFF,},{ 0x9900FFFF,},{ 0x761B98FF,},{ 0xD914F3FF,},{ 0xFF00FFFF,}
};
new counthead[MAX_PLAYERS],Text3D:TextHead[MAX_PLAYERS],colorheads[MAX_PLAYERS];
///////==============================================
new uAdmin_Name[17][32]={
	"Джаил","Мут","Кик","СКик","Варн","Оффварн","Бан","БанИП","Оффбан","ОффДжаил","Айбан","СБан","Мейкелеадер","Оффлеадер","АВигл","МП","Гивеган"
};
new uAdmin[MAX_PLAYERS][17];
new g_MysqlRaceCheck[MAX_PLAYERS];

//=============[поворотники]
new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];
new LightsObject[MAX_VEHICLES][2];

new Float:LightsPos[212][6] =
{
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};

new ic_time_hours = -1;
new ic_time_minutes = -1;

//===============[pvp]
#define MAX_DUELS 50
enum duel_data
{
	duel_id,
	duel_to_id,
	duel_last_vw,
	duel_gun,
	duel_time,
	duel_timer,
	Float:duel_health_id,
	Float:duel_health_to_id,
	duel_money
}
new duel_[MAX_DUELS][duel_data];
new duel_t = 0;


//===============[New members]==============

new acc_name[11][32]={
	"Наушники",
	"Шапка",
	"Панамка",
	"Кепка",
	"Каска",
	"Бандана",
	"Очки",
	"Бандана [2]",
	"Шляпа",
	"Часы",
	"Сумка"
};

new id_acc[11][33]={
	{19421,19422,19423,19424,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{18953,18954,19069,19554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{18967,18968,18969,19111,19112,19113,19117,19118,19119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{18939,18940,18941,18942,18943,18926,18927,18928,18929,18930,18931,18932,18933,18934,18935,18955,18956,18957,18958,18959,0,0,0,0,0,0,0,0,0,0,0,0},
	{19102,19103,19104,19105,19106,19107,19108,19109,19110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{18922,18923,18924,18925,18891,18892,18893,18894,18895,18896,18897,18898,18899,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{19138,19139,19140,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020,19021,19022,19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035},
	{18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{18947,18948,18949,18950,18951,18970,18971,18972,18973,19553,19519,19487,18962,19095,19096,19097,19098,19099,19100,19528,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{19559,371,3026,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};
new price_acc[11][33]={
	{500,500,500,500,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1500,1500,1500,1500,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1600,1600,1600,1600,1600,1600,1600,1600,1600,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,0,0,0,0,0,0,0,0,0,0,0,0},
	{3000,3000,3000,3000,3000,3000,3000,3000,3000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600},
	{1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,1700,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{2500,2500,2500,2500,2500,2500,2500,2500,2500,2500,2500,2500,2500,2500,2500,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{4000,4000,4000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};
new max_id_acc[11]={4,4,9,20,9,13,33,10,20,15,3};
new count_acc_show[MAX_PLAYERS]={0,...};
new Text:acc_box[33];
//new Text:Datum;
new step_show_acc_box[MAX_PLAYERS]={-1,...};
new Text:acc_info_box[5];
enum acc_data_player
{
	acc_object_id[5],
	Float:acc_object_x[5],
	Float:acc_object_y[5],
	Float:acc_object_z[5]
}
new acc_player[MAX_PLAYERS][acc_data_player];
new Float:pos_sit_acc[9][4]={
	{2074.2129,-1790.7213,121.0539,7.1259},
	{2076.2471,-1790.7214,121.0539,6.2903},
	{2078.4011,-1790.7261,121.0539,2.4821},
	{2080.4968,-1790.7201,121.0539,350.2619},
	{2082.4873,-1790.7190,121.0539,0.1281},
	{2082.5352,-1795.6237,121.0539,181.6309},
	{2080.5054,-1795.6261,121.0539,179.9597},
	{2078.4570,-1795.6248,121.0539,178.4493},
	{2076.6772,-1795.6233,121.0539,208.7867}
};
new pos_sit_acc_area[9];




new mast_actor[3];
new mast_actor_id[3]={-1,...};
new mast_actor_count[3]={0,...};
new Text3D:mast_actor_text[3]={ Text3D:-1, ...};
new UpdateActorTextMast_Timer[3]={-1,...};

new Text:speedBox[18],
	Text:BackspeedTrans[6];

new PlayerText:speedInf[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedStick[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedName[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedMileage[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedHealth[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedFuel[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedDoors[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedEngine[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedSignalLeft[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedSignalRight[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedSignalLights[MAX_PLAYERS]={PlayerText:-1,...};
new PlayerText:speedTrans[MAX_PLAYERS][7];

new LastTransmisSlot[MAX_PLAYERS]={-1,...};
new bool:ShowSpeed[MAX_PLAYERS]={false,...};
new Float:LastSpeed[MAX_PLAYERS]={0.0,...};

new Text: members_map_td ;

new PlayerText: members_pos_td [ MAX_PLAYERS ] [ 2 ] [ 30 ] ;
new m_members_timer[MAX_PLAYERS]={ 0, ... };
new m_members_count[MAX_PLAYERS]={ 0, ... };

new RaceTime[MAX_PLAYERS][2];
new RenameTime[MAX_PLAYERS];

//new ObjectHRT[4];
new fbiimg[2];

new number_player = -1;
new number_world = 5;

stock Float:fparam(const source[], substrIndex = 0, delimiter = ' ');

new radar_object[MAX_PLAYERS][3];
new radar_area[MAX_PLAYERS];
new toogle_radar[MAX_PLAYERS];
new total_radars = 0;

//new lifthrt[2];

//new pos_obj_bol [4];
//new Float:pos_obj[3];

new TempTazerObject[MAX_PLAYERS] = {-1, ...};

new gKilledWithAntiDeath[MAX_PLAYERS];
new Float:gDeathPos[MAX_PLAYERS][3];
new gDeathDataIntVW[MAX_PLAYERS][2];




//new AC_SpeedChange[MAX_PLAYERS];
//new AC_SpeedChangetime[MAX_PLAYERS];
//new AC_SPEEDGORKA[MAX_PLAYERS];
//new Float:Speedz[MAX_PLAYERS];

new Float:VehPos[MAX_VEHICLES][4];
new bool: BanCar[MAX_VEHICLES];
new AC_VehicleTeleportToMe[MAX_PLAYERS];
new Float:VehHealth[MAX_VEHICLES];
new VehTime[MAX_VEHICLES];
new SuperTick[MAX_PLAYERS];

new AC_PlayerToggle[MAX_PLAYERS];
new AC_PlayerToggleTime[MAX_PLAYERS];
new AC_PlayerToggleUpdate[MAX_PLAYERS];

new PlacedBB[MAX_PLAYERS]={INVALID_OBJECT,...};
new ObjectShip[MAX_PLAYERS]={INVALID_OBJECT,...};

/*new const Float:paynspray[][] =
{

	{1025.05, -1024.23, 32.1}, // LS Temple

	{487.68, -1740.87, 11.13}, // LS Santa Maria

	{-1420.73, 2583.37, 55.56}, // El Quebrados

	{-1904.39, 284.97, 40.75}, // Wang Cars

	{-2425.91, 1022.33, 50.10}, // Juniper Hill

	{1975.60, 2162.16, 10.77}, // LV Redsands

	{2065.38, -1831.51, 13.25}, // Idlewood

	{-99.55, 1118.36, 19.44}, // Fort Carson123

	{721.07, -455.94, 16.04}, // Dillimore

	{2393.74, 1493.01, 10.52} // LV Unused (Pyramid)

};*/

//===============[ /break ]==============


new object_range[MAX_PLAYERS][5][6] ;
new StepPlayer[MAX_PLAYERS][2];
new ms_or[6]={1590,1589,1588,1592,1591};
new Float:orsp[5][6][6]={
{
	{282.50,-145.89,1004.50,0.00,0.00,269.25},
	{282.50,-145.89,1004.50,0.00,0.00,268.49},
	{282.50,-145.89,1004.50,0.00,0.00,84.50},
	{282.50,-145.89,1004.50,0.00,0.00,270.00},
	{282.50,-145.89,1004.50,0.00,0.00,269.00},
	{282.39,-145.89,1004.40,0.00,0.00,270.00}
	},
	{
	{288.70,-145.60,1004.50,0.00,0.00,269.24},
	{288.70,-145.60,1004.50,0.00,0.00,268.49},
	{288.70,-145.60,1004.50,0.00,0.00,84.49},
	{288.70,-145.60,1004.50,0.00,0.00,270.25},
	{288.70,-145.60,1004.50,0.00,0.00,268.99},
	{288.70,-145.60,1004.40,0.00,0.00,270.00}
	},
	{
	{282.50,-124.30,1004.50,0.00,0.00,269.25},
	{282.50,-124.30,1004.50,0.00,0.00,268.49},
	{282.50,-124.30,1004.50,0.00,0.00,84.50},
	{282.50,-124.30,1004.50,0.00,0.00,270.00},
	{282.50,-124.30,1004.50,0.00,0.00,269.00},
	{282.39,-124.30,1004.40,0.00,0.00,270.00}
	},
	{
	{288.70,-124.50,1004.50,0.00,0.00,269.24},
	{288.70,-124.50,1004.50,0.00,0.00,268.49},
	{288.70,-124.50,1004.50,0.00,0.00,84.49},
	{288.70,-124.50,1004.50,0.00,0.00,270.25},
	{288.70,-124.50,1004.50,0.00,0.00,268.99},
	{288.70,-124.50,1004.40,0.00,0.00,270.00}
	},
	{
	{295.70,-124.40,1004.50,0.00,0.00,269.24},
	{295.70,-124.40,1004.50,0.00,0.00,268.48},
	{295.79,-124.40,1004.50,0.00,0.00,84.49},
	{295.70,-124.40,1004.50,0.00,0.00,272.24},
	{295.70,-124.40,1004.50,0.00,0.00,268.98},
	{295.89,-124.40,1004.40,0.00,0.00,272.00}
	}
};
new Float:orcp_pos[8][3]={
	{300.4936,-138.5133,1004.0625},
	{300.7658,-136.8966,1004.0625},
	{300.3610,-135.5461,1004.0625},
	{300.4177,-134.0464,1004.0625},
	{300.4137,-132.6038,1004.0625},
	{300.1877,-131.0743,1004.0625},
	{300.2029,-129.4964,1004.0625},
	{300.2551,-128.0143,1004.0625}
};
new orcp[8];
new Text3D:ortext[8][MAX_BUSINESS];
new bool:iait[8][MAX_BUSINESS];

new Text:TD_BRAKE[12];
new Text:Succes_BTD[4];

enum br_data
{
	br_objects[25],
	br_object_text[2],
	br_temp_pickup,
	br_text[30],
	br_flag,
	Float:br_line_pos[4]
}
new br_player [MAX_PLAYERS] [ br_data ];

new object_select_td_brake [5] ={  1228 , 2773 , 1423 , 1237 ,19980  } ;





//===============[Баскетбол]===============
/*#define MAX_BA_PLACES 3

enum BA_Ball_data
{
	BA_Ball_object, // id объекта
	BA_Ball_State, // статус мяча
	bool:BA_Ball_Attach, // статус прикрепления мяча к игроку
	BA_Ball_Player, // id игрока у которого мяч
	BA_Ball_Area, // area
	BA_Ball_TickCount, //tick
	BA_Ball_Timer // timer
}
new BA_Ball[MAX_BA_PLACES][BA_Ball_data];
new Player_BA[MAX_PLAYERS] ={ -1, ...};


new Float:B_Place_Pos[MAX_BA_PLACES][8] = {
	//Float:minX, Float:minY, Float:maxX, Float:maxY, Float:obj_x, Float:obj_y, Float:obj_z
	{2306.70,-1513.03,2326.84,-1542.31,2316.9600,-1527.4900,24.7000},
	{2279.86,-1513.23, 2300.31,-1543.05,2290.6425,-1528.3605,26.0949},
	{2521.81,-1663.51,2534.84,-1670.98,2530.0620,-1667.6577,14.2688}
};


new Float:B_Ring[MAX_BA_PLACES][2][3] = {
{
	{2316.8721,-1514.9233,27.5438},
	{2316.8721,-1541.1328,27.5438}
},
{
	{2290.7126,-1541.1108,28.8649},
	{2290.5124,-1514.7705,28.8649}
},
{
	{2533.3928,-1667.5175,17.0188},
	{0.0,0.0,0.0}
}
};

new	PlayerText:pPowerTD_BSKT[MAX_PLAYERS]={PlayerText:-1, ...},
	Text:PowerTD_BSKT[2];*/
//==============================================================================




new Float:CameraPosJoin[3][3][6]={
	{
		{1210.390502, -863.718994, 82.364768, 1417.475463, -894.863647, 90.166549},
		{1211.064575, -858.773315, 82.071876, 1417.398437, -890.002197, 89.000221},
		{1307.6223,-974.8975,148.6437, 0.00, 0.00, 0.00}
	},
	{
		{-2598.083496, 1082.283813, 91.340560, -2569.553466, 1772.090454, 85.815628},
		{-2598.343750, 1087.219604, 90.585556, -2573.192871, 1768.665405, 85.659317},
		{-2662.3145,1446.4664,53.8972, 0.00, 0.00, 0.00}
	},
	{
		{1937.425903, 1586.285888, 69.827301, 2132.434082, 1248.340332, 17.462862},
		{1940.707641, 1583.421020, 67.373245, 2136.530029, 1251.122314, 18.158514},
		{2008.2509,1333.8630,10.8203, 0.00, 0.00, 0.00}
	}
};
//new IsSelfieCamera[MAX_PLAYERS][3];


#define CADMIN_HELP_INFO 0x6495EDFF
#define CADMIN_INFO 0xAFAFAFAA
#define CADMIN_SLIV 0xAA3333AA




//


const Float:power_camera_move = 2.0;

enum CAMERA_PLAYER_PD_DATA
{
	Float:StepZoom[2],
	Float:temp_camera_pos[5],
	Float:last_pos_camera[5],
	Float:save_point_pos[5]
}
new CPPD[5][MAX_PLAYERS][CAMERA_PLAYER_PD_DATA];
new CameraFlag[MAX_PLAYERS][4];
new PlayerText:CameraList[MAX_PLAYERS][6];
new Text:camera_pos_td[8];
new Float:OldCPPD[MAX_PLAYERS][3];
//
new Text3D:playerText_ame_Action[MAX_PLAYERS][2];
new bool:LOG_KICK = false;
new bool:AC_NoTwoKillFrag[MAX_PLAYERS] ={ false, ... };

#define CTUNE_LIST 0x383840FF

new TuneListLabel[][16]={
	"PAINT JOBS","COLORS","HOODS","LIGHTS","FRONT BUMBERS","REAR BUMPERS","ROOFS","SPOILERS","SIDE SKIRTS","WHEELS","NITRO","HYDRAULICS"
};
new TuneListPrice[]={2000 , 1500 , 1000 , 1000 , 2500 , 2500 , 1000 , 1500 , 1000 , 1500 , 2500 , 2000};
new NitroTextListLabel[][16]={
	"Nitro x2", "Nitro x5", "Nitro x10"
};
new Float:camera_pos[][3]={
	{4.0,180.0,1.4},//hoods
	{5.0,180.0,-0.5},//lights
	{5.0,180.0,-0.5},//front bumpers
	{5.0,0.0,-0.5},//rear bumpers
	{0.0,0.0,3.0},// roofs
	{5.0,0.0,1.4},// spoilers
	{5.5,90.0,0.4}, // side skirts
	{4.5,120.0,0.4} // wheels
};
new Text:TuneList[sizeof(TuneListLabel)]={Text:-1, ...};
new Text:TuneSelect[4]={Text:-1, ...};
new Text:SelectNitro[sizeof(NitroTextListLabel)]={Text:-1, ...};
new bool:ShowTuneList[MAX_PLAYERS][2];
new SelectTuneSlot[MAX_PLAYERS];
new TuneInfo[MAX_PLAYERS][2];
new SelectSlotJ[MAX_PLAYERS] ={ -1, ...};
new LastTuneSlot[MAX_PLAYERS][3];
new Text:TuneBack;
new bool:IsUpdateCamera[MAX_PLAYERS]={false, ...};
new SelectCarToTune[MAX_PLAYERS] ={ -1, ...};
new Text:SupportButton[2];
new Text:BackTune[3];
new GetValidVehiclePaintJob[][2] ={{483, 0},{534, 2},{535, 2},{536, 2},{558, 2},{559, 2},{560, 2},{561, 2},{562, 2},{565, 2},{567, 2},{575, 1},{576, 2}};
new components_tune[][2]={
	{ 1000, 0},  { 1001, 0},  { 1002, 0},  { 1003, 0},  { 1004, 1},  { 1005, 1},  { 1006, 2},  { 1007, 3},  { 1008, 5},  { 1009, 5},  { 1010, 5},
	{ 1011, 1},  { 1012, 1},  { 1013, 4},  { 1014, 0},  { 1015, 0},  { 1016, 0},  { 1017, 3},  { 1018, 6},  { 1019, 6},  { 1020, 6},  { 1021, 6},
	{ 1022, 6},  { 1023, 0},  { 1024, 4},  { 1025, 7},  { 1026, 3},  { 1027, 3},  { 1028, 6},  { 1029, 6},  { 1030, 3},  { 1031, 3},  { 1032, 2},
	{ 1033, 2},  { 1034, 6},  { 1035, 2},  { 1036, 3},  { 1037, 6},  { 1038, 2},  { 1039, 3},  { 1040, 3},  { 1041, 3},  { 1042, 3},  { 1043, 6},
	{ 1044, 6},  { 1045, 6},  { 1046, 6},  { 1047, 3},  { 1048, 3},  { 1049, 0},  { 1050, 0},  { 1051, 0},  { 1052, 0},  { 1053, 2},  { 1054, 2},
	{ 1055, 2},  { 1056, 3},  { 1057, 3},  { 1058, 0},  { 1059, 6},  { 1060, 0},  { 1061, 2},  { 1062, 3},  { 1063, 3},  { 1064, 6},  { 1065, 6},
	{ 1066, 6},  { 1067, 2},  { 1068, 2},  { 1069, 3},  { 1070, 3},  { 1071, 3},  { 1072, 3},  { 1073, 7},  { 1074, 7},  { 1075, 7},  { 1076, 7},
	{ 1077, 7},  { 1078, 7},  { 1079, 7},  { 1080, 7},  { 1081, 7},  { 1082, 7},  { 1083, 7},  { 1084, 7},  { 1085, 7},  { 1086, 8},  { 1087, 9},
	{ 1088, 2},  { 1089, 6},  { 1090, 3},  { 1091, 2},  { 1092, 6},  { 1093, 3},  { 1094, 3},  { 1095, 3},  { 1096, 7},  { 1097, 7},  { 1098, 7},
	{ 1099, 3},  { 1101, 3},  { 1102, 3},  { 1103, 2},  { 1104, 6},  { 1105, 6},  { 1106, 3},  { 1107, 3},  { 1108, 3},  { 1113, 6},  { 1114, 6},
	{ 1117, 10},  { 1118, 3},  { 1119, 3},  { 1120, 3},  { 1121, 3},  { 1122, 3},  { 1124, 3},  { 1126, 6},  { 1127, 6},  { 1128, 2},  { 1129, 6},
	{ 1130, 2},  { 1131, 2},  { 1132, 6},  { 1133, 3},  { 1134, 3},  { 1135, 6},  { 1136, 6},  { 1137, 3},  { 1138, 0},  { 1139, 0},  { 1140, 11},
	{ 1141, 11},  { 1142, 13},  { 1143, 12},  { 1144, 13},  { 1145, 12},  {1146, 0},  { 1147, 0},  { 1148, 11},  { 1149, 11},  { 1150, 11},
	{ 1151, 11},  { 1152, 10},  { 1153, 10},  { 1154, 11},  { 1155, 10},  {1156, 11},  { 1157, 10},  { 1158, 0},  { 1159, 11},  { 1160, 10},
	{ 1161, 11},  { 1162, 0},  { 1163, 0},  { 1164, 0},  { 1165, 10},  {1166, 10},  { 1167, 11},  { 1168, 11},  { 1169, 10},  { 1170, 10},
	{ 1171, 10},  { 1172, 10},  { 1173, 10},  { 1174, 10},  { 1175, 10},  {1176, 11},  { 1177, 11},  { 1178, 11},  { 1179, 10},  { 1180, 11},
	{ 1181, 10},  { 1182, 10},  { 1183, 11},  { 1184, 11},  { 1185, 10},  {1186, 11},  { 1187, 11},  { 1188, 10},  { 1189, 10},  { 1190, 10},
	{ 1191, 10},  { 1192, 11},  { 1193, 11}
};

#define t_paintjob 0
#define t_colors 1
#define t_hoods 2
#define t_lights 3
#define t_front_bumpers 4
#define t_rear_bumpers 5
#define t_roofs 6
#define t_spoilers 7
#define t_side_skirts 8
#define t_nitro 9
#define t_hydraulics 10

new gPlayerTuning[MAX_PLAYERS][2][74];
new TempTuningPlayer[MAX_PLAYERS][2][12];
new Float:OldTuningPos[MAX_PLAYERS][4];
new OldTuningVI[MAX_PLAYERS][2];
//------------------------------------------------------------------------------------------



//new raketa_attach[12];
//new raketa_attach_main;

//new IsBotServer[MAX_PLAYERS];
/* ----------------------------------------------------------------- */
main()
{
	unix = gettime(tmphour, tmpminute, tmpsecond);
	getdate(tmpyear,tmpmonth,tmpday);
	return 0;
}

new walk_goto_me[MAX_PLAYERS]={0,...};
new GunPlayer[MAX_PLAYERS][13][2];
//new GunPlayerData[MAX_PLAYERS][13][2];
new AC_GunCheattime[MAX_PLAYERS]={0,...};
new bool:AC_plsp[MAX_PLAYERS];
new AC_UpdateSpeedPlayer[MAX_PLAYERS];
new TotalRacePlayer = 0;
forward CNN_UpElevator(playerid);
//
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define CSHBAR 		0x6053F3FF
#define CSHBAR_BG 		0x000000FF
#define CSHBAR_BG2 	0xB8CEF6FF
new PlayerText:ShieldBar[MAX_PLAYERS] = {PlayerText:-1, ...};
new Text:ShieldBG[2];
new ResetShield[MAX_PLAYERS];
new bool:UsingShield[MAX_PLAYERS];
//
new load_map_id[200];
new count_object_load = 0;
//
new ElevatorObject[3][3];
new bool:ElevatorStatus = false;

new prodArea = -1;
//new prodCP = -1;

//new fuelArea = -1;
//new fuelCP = -1;

stock AntiReklama(text[]) return (
	strfind(text, "skype", true) != -1 ||
	strfind(text, "com", true) != -1 ||
	strfind(text, "vk", true) != -1 ||
	strfind(text, "ru", true) != -1 ||
	strfind(text, "точка", true) != -1 ||
	strfind(text, "заходи", true) != -1 ||
	strfind(text, "samp", true) != -1 ||
	strfind(text, "валера", true) != -1 ||
	strfind(text, "нубо", true) != -1 ||
	strfind(text, "maket", true) != -1 ||
	strfind(text, "макет", true) != -1 ||
	//strfind(text, "сервер", true) != -1 ||
	strfind(text, "sawka0031", true) != -1 ||
	strfind(text, "anton28128", true) != -1 ||
	strfind(text, "перенос", true) != -1 ||
	strfind(text, "го скуп", true) != -1 ||
	strfind(text, "ютуб", true) != -1 ||
	//strfind(text, "слив", true) != -1 ||
	strfind(text, "tenside228", true) != -1 ||
	strfind(text, "playwithtotti", true) != -1 ||
	strfind(text, "norm_games", true) != -1 ||
	strfind(text, "NArmativ rp", true) != -1 ||
	strfind(text, "Normativ rp", true) != -1 ||
	strfind(text, "Normative rp", true) != -1 ||
	strfind(text, "хуй", true) != -1 ||
	strfind(text, "ебло", true) != -1 ||
	strfind(text, "сука", true) != -1 ||
	strfind(text, "NORMATIVE", true) != -1 ||
	strfind(text, "НОРМАТИВ", true) != -1 ||
	strfind(text, "норматив", true) != -1 ||
	strfind(text, "СГЛ РП", true) != -1
);// анти-реклама на слова
//
//

//24-7 setting
new shop_name_sell [15] [70] = {
	"SIM-карта", // --- 1
	"Телефонная книга", // --- 2
	"Справочник", // --- 3
	"Аптечки в дом", // --- 4
	"Фотоаппарат", // --- 5
	"Цветы", // --- 6
	"Презерватив", // --- 7
	"Перцовый балончик", // --- 8
	"Набор отмычек", // --- 9
	"Веревка", // --- 10
	"Маска", // --- 11
	"Аптечка", // --- 12
	"Магнитофон", // --- 13
	"Удочка", // --- 14
	"Баночка червей (15 штук)" // --- 15
};
new shop_price_sell [15] = {
	1200, // --- 1
	2000, // --- 2
	2000, // --- 3
	4000, // --- 4
	500, // --- 5
	700, // --- 6
	1200, // --- 7
	1200, // --- 8
	1200, // --- 9
	400, // --- 10
	700, // --- 11
	700, // --- 12
	600, // --- 13
	1000, // --- 14
	600 // --- 15
};
new shop_prod_sell [15] = {
	10, // --- 1
	10, // --- 2
	10, // --- 3
	5, // --- 4
	25, // --- 5
	35, // --- 6
	25, // --- 7
	25, // --- 8
	25, // --- 9
	15, // --- 10
	5, // --- 11
	5, // --- 12
	20, // --- 13
	5, // --- 14
	10 // --- 15
};
//
#define CLIGHTYELLOW 	0xc3ef15FF
new last_veh_number = - 1;
//==============================================================================


new fraction_amount = 0, fraction_veh_amount ;

/*#define OBJ_SLOT_POOL (0)

enum poolBall
{
	bObject,
	bExisting
}

new
	PlayingPool[MAX_PLAYERS],
	PoolCamera[MAX_PLAYERS],
	UsingChalk[MAX_PLAYERS],
	PoolScore[MAX_PLAYERS],
	Float:AimAngle[MAX_PLAYERS][2],
	AimObject = -1,
	PoolStarted,
	PoolAimer = -1,
	PoolLastShooter = -1,
	PoolLastScore,
	PoolBall[16][poolBall],
	Text:PoolTD[4],
	Float:PoolPower,
	PoolDir;*/

/*CMD:play(playerid)
{
	if(GetPlayerInterior(playerid) != 11) return SendClientMessage(playerid, COLOR_GREY, "Вы не в интерьере.");
	if(!PlayingPool[playerid])
	{
		PlayingPool[playerid] = 1;
		PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		AC_GivePlayerWeapon(playerid, 7, 1);
		PoolScore[playerid] = 0;
		if(!PoolStarted)
		{
			PoolStarted = 1;
			RespawnPoolBalls(1);
		}
	}
	else
	{
		if(PoolAimer != playerid)
		{
			PlayingPool[playerid] = 0;
			new
				count = GetPoolPlayersCount();
			if(count <= 0)
			{
				PoolStarted = 0;
				RespawnPoolBalls();
			}
		}
	}
	return 1;
}
*/


new gang_map_icons [ 5 ] ;
enum _fractions
{
	f_id,
	f_name [ 50 ],
	Float:f_spawn [ 4 ],
	f_spawn_int,
	f_spawn_virt,
	Float:f_bank [ 3 ],
	f_bank_int,
	f_bank_virt,
	Float:f_put [ 3 ],
	f_put_int,
	f_put_virt,
	f_bl_config [ 3 ],
	f_rank_invite,
	f_rank_uninvite,
	f_rank_giverank,
	f_salary,
	f_message [ 144 ],
};
new f_info [ MAX_FRACTIONS ] [ _fractions ] ;
new model_change [ 5 ] [ 15 ] ={
{ 412,419,422,474,475,482,491,492,517,534,536,566,567,575,576 },
{ 580,409,487,579,445,550, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 544,416,407,426,487,417, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 427,523,596,528,601,599, 497, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 409,429,421,401,427,442, 522, 596, 0, 0, 0, 0, 0, 0, 0 }
} ;






enum _bl
{
	bool:bl_is_killed,
	bl_finder,
	bl_observe,
	bool:bl_fraction [ MAX_FRACTIONS ],
	bl_kills [ MAX_FRACTIONS ],
	bl_reason [ 42 ]
}
new bl_info [ MAX_PLAYERS ] [ _bl ] ;
new bl_insert_id [ MAX_PLAYERS ] ;
//==============================================================================
new pickuptook;
//new pickupf[2];
//new tookfaggio[MAX_PLAYERS];
new spysk[2];
new textsport[3];
new countsport = 0;
stock Float: GetDistanceBetweenPoints(Float: p11, Float: p12, Float: p13, Float: p21, Float: p22, Float: p23);
//
new bool:pSelectStoreGun[MAX_PLAYERS]={false,...};
new pStoreGun[MAX_PLAYERS]={0, ...};
//
new gAttachedObjectToVehicle[MAX_VEHICLES][11];
new vehicles_ao[7];

//new AllowWeather[10]={2,3,5,10,10,11,13,14,17,18};
new CurrentWeazer = 2;

//5198:door, 871:walls, 7480:pol, 2405:potolok,  /mtset 0 455 /mtset 1 300

//
#define TYPE_LOG_KICK 			0
#define TYPE_LOG_WARN 			1
#define TYPE_LOG_BAN 			2
#define TYPE_LOG_UNBAN 			3
#define TYPE_LOG_UNWARN 		4
#define TYPE_LOG_CHANGENAME  	5
#define TYPE_LOG_MKL     		6
#define TYPE_LOG_JAIL           7
#define TYPE_LOG_MUTE           8
#define TYPE_LOG_UNMUTE        	9
#define TYPE_LOG_UNJAIL         10
#define TYPE_LOG_TEMPMEMBER     11
#define TYPE_LOG_UVAL           12
#define TYPE_LOG_AGIVERANK		13
#define TYPE_LOG_DELL           14
#define TYPE_LOG_ANS			15
#define TYPE_LOG_INV			16
#define TYPE_CHANGERANK         17
#define TYPE_LOG_GIVE_RANK      18
#define TYPE_LOG_UNINVITE       19
#define TYPE_LOG_ASELLHOME      20
#define TYPE_GZ_COLOR           21
#define TYPE_ADM_AVIG           22



new Anims[][] = {
	{"WALK_civi"},
	{"WALK_gang1"},
	{"WALK_gang2"},
	{"WALK_old"},
	{"WALK_fatold"},
	{"WALK_fat"},
	{"WOMAN_walknorm"},
	{"WOMAN_walkbusy"},
	{"WOMAN_walkpro"},
	{"WOMAN_walksexy"},
	{"Walk_Wuzi"}
};

new Talk[][] = {
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};

new datatime[6];

new door_fbi[2];
new door_fbi_area;

//new gBankSum[MAX_PLAYERS][3];
new CountFloodForPlayer[MAX_PLAYERS];

#define GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))
#define UngivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) - %2))
new bool:SimulatorUse[12];

new swat_door_id[2];
new swat_door_area[2];

new TotalObject=0;
stock CreateObjectEx(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
{
	TotalObject++;
	if(TotalObject>490)
	{
		printf ("TotalObject: %d",TotalObject) ;
	}
	//
	//Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
	return CreateObject(modelid, X,  Y,  Z,  rX, rY,  rZ, DrawDistance);
}
stock DestroyObjectEx(objectid)
{
	if(objectid < 30)
	{
		printf ( " (DestroyObject) objectid : %d ", objectid);
	}
	/*if(objectid >= pos_obj_bol[0] && objectid <= pos_obj_bol[1])
	{
		print ("больку не удаляем");
		return false;
	}*/
	TotalObject--;
	//Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
	return DestroyObject(objectid);
}
stock DestroyDynamicObjectEx(objectid)
{
	return DestroyDynamicObject(objectid);
}
#define CreateObject CreateObjectEx
#define DestroyObject DestroyObjectEx
#define DestroyDynamicObject DestroyDynamicObjectEx

new vagon_object[2];
new vagon_timer[2]={-1,...};
new jackminer_object;
new jackminer_timer = -1;
new Float:vagon_position[2][2][6]={
{
	{410.059,157.675,1014.820,0.000,353.000,290.250},
	{349.015,311.309,994.400,0.000,352.996,290.247}
},
{
	{352.8519,311.309,994.400,0.000,352.996,290.247},
	{406.2037,157.675,1014.820,0.000,353.000,290.250}
}
};
new Float:miner_pick_pos[19][6]={
	{363.230010, 345.449005, 1009.366027, 19.929000, 326.502014, 12.711000},
	{349.147003, 341.453002, 1009.348022, 23.100999, 348.839996, 74.424003},
	{346.500000, 351.165985, 1014.247009, 43.209999, 337.411010, 85.892997},
	{335.308013, 340.255004, 1015.742004, 18.614000, 310.325012, 90.596000},
	{376.928009, 205.024002, 1000.955017, 349.795013, 13.961999, 258.510009},
	{353.562988, 343.825988, 1007.038024, 18.610000, 310.319000, 150.589004},
	{358.385009, 348.881988, 1008.882019, 18.610000, 310.319000, 80.589996},
	{377.156005, 319.423004, 1000.802001, 18.610000, 310.319000, 50.591999},
	{356.532012, 238.014007, 1000.064025, 20.763999, 318.799987, 273.225006},
	{364.075012, 239.932006, 999.064025, 20.763999, 318.795013, 273.223999},
	{356.209991, 225.755004, 1001.624023, 349.489990, 359.727996, 175.936996},
	{359.502990, 228.779998, 1001.968017, 349.792999, 13.958000, 258.507995},
	{369.846008, 218.763000, 999.158020, 349.792999, 13.958000, 258.507995},
	{370.665008, 205.949005, 1000.471008, 359.264007, 14.484000, 286.675994},
	{376.260009, 312.199005, 995.606018, 18.610000, 310.319000, 50.591999},
	{374.730987, 326.782989, 1005.671997, 18.610000, 310.319000, 50.591999},
	{377.154998, 319.421997, 1000.802001, 18.610000, 310.319000, 50.591999},
	{370.302001, 342.614013, 1013.093994, 346.759002, 322.588012, 70.061996},
	{366.644012, 339.583007, 1008.843994, 346.755004, 322.585998, 70.058998}
};
#define SPEED_JACK (6.0)
#define VAGON_SPEED (6.0)

new ShahtaPick[2];
new MinerTime[19][MAX_PLAYERS];



new GardenSys = -1;
new GardenSysTime = -1;
new GardenTreesIs[76];
new GardenSellCP;
new GardenPick;
new GardenCheckpoints[76];
new GardenTreesIDs[76][2];
new Text3D:GardenText[76];
new Float:GardenTrees[76][3] = {
	{-1123.4193115,-1216.7835693,126.4688034},//object(aw_streettree3) (3)
	{-1123.0939941,-1209.0327148,126.4688034},//object(aw_streettree3) (5)
	{-1122.6330566,-1200.8920898,126.4688034},//object(aw_streettree3) (6)
	{-1122.2612305,-1192.8942871,126.4688034},//object(aw_streettree3) (7)
	{-1122.5588379,-1184.8129883,126.4688034},//object(aw_streettree3) (8)
	{-1122.8535156,-1176.4050293,126.4688034},//object(aw_streettree3) (9)
	{-1122.7016602,-1168.6076660,126.4688034},//object(aw_streettree3) (10)
	{-1131.7011719,-1168.6074219,126.4688034},//object(aw_streettree3) (11)
	{-1141.7011719,-1168.6074219,126.4688034},//object(aw_streettree3) (12)
	{-1150.7011719,-1168.6074219,126.4688034},//object(aw_streettree3) (13)
	{-1160.2011719,-1168.6074219,126.4688034},//object(aw_streettree3) (14)
	{-1170.7011719,-1168.6074219,126.4688034},//object(aw_streettree3) (15)
	{-1180.2011719,-1168.6074219,126.4688034},//object(aw_streettree3) (16)
	{-1189.9511719,-1168.6074219,126.4688034},//object(aw_streettree3) (17)
	{-1131.6035156,-1176.4769287,126.4688034},//object(aw_streettree3) (18)
	{-1141.6035156,-1176.5595703,126.4688034},//object(aw_streettree3) (19)
	{-1150.6035156,-1176.6342773,126.4688034},//object(aw_streettree3) (20)
	{-1160.1035156,-1176.7126465,126.4688034},//object(aw_streettree3) (21)
	{-1170.8535156,-1176.8011475,126.4688034},//object(aw_streettree3) (22)
	{-1180.1035156,-1176.8775635,126.4688034},//object(aw_streettree3) (23)
	{-1189.8535156,-1176.9578857,126.4688034},//object(aw_streettree3) (24)
	{-1122.5585938,-1184.8125000,126.4688034},//object(aw_streettree3) (26)
	{-1131.3085938,-1184.8082275,126.4688034},//object(aw_streettree3) (27)
	{-1141.3085938,-1184.8027344,126.4688034},//object(aw_streettree3) (28)
	{-1150.8085938,-1184.7980957,126.4688034},//object(aw_streettree3) (29)
	{-1160.0585938,-1184.7933350,126.4688034},//object(aw_streettree3) (30)
	{-1170.5585938,-1184.7878418,126.4688034},//object(aw_streettree3) (31)
	{-1179.3085938,-1184.7828369,126.4688034},//object(aw_streettree3) (32)
	{-1190.3085938,-1184.7768555,126.4688034},//object(aw_streettree3) (33)
	{-1190.3125000,-1192.7763672,126.4688034},//object(aw_streettree3) (34)
	{-1180.0625000,-1192.7813721,126.4688034},//object(aw_streettree3) (35)
	{-1170.8125000,-1192.7857666,126.4688034},//object(aw_streettree3) (36)
	{-1160.0625000,-1192.7904053,126.4688034},//object(aw_streettree3) (37)
	{-1151.3125000,-1192.7943115,126.4688034},//object(aw_streettree3) (38)
	{-1140.8125000,-1192.7990723,126.4688034},//object(aw_streettree3) (39)
	{-1131.5625000,-1192.8033447,126.4688034},//object(aw_streettree3) (40)
	{-1131.5665283,-1201.0527344,126.4688034},//object(aw_streettree3) (41)
	{-1140.8164062,-1201.0482178,126.4688034},//object(aw_streettree3) (42)
	{-1151.5664062,-1201.0426025,126.4688034},//object(aw_streettree3) (43)
	{-1161.0664062,-1201.0373535,126.4688034},//object(aw_streettree3) (44)
	{-1170.5664062,-1201.0324707,126.4688034},//object(aw_streettree3) (45)
	{-1180.0664062,-1201.0275879,126.4688034},//object(aw_streettree3) (46)
	{-1190.5664062,-1201.0222168,126.4688034},//object(aw_streettree3) (47)
	{-1190.5701904,-1208.7714844,126.4688034},//object(aw_streettree3) (48)
	{-1180.3193359,-1208.7764893,126.4688034},//object(aw_streettree3) (49)
	{-1171.0693359,-1208.7808838,126.4688034},//object(aw_streettree3) (50)
	{-1161.3193359,-1208.7850342,126.4688034},//object(aw_streettree3) (51)
	{-1151.8193359,-1208.7888184,126.4688034},//object(aw_streettree3) (52)
	{-1140.8193359,-1208.7934570,126.4688034},//object(aw_streettree3) (53)
	{-1131.8193359,-1208.7973633,126.4688034},//object(aw_streettree3) (54)
	{-1131.8232422,-1216.7968750,126.4688034},//object(aw_streettree3) (55)
	{-1141.0732422,-1216.7923584,126.4688034},//object(aw_streettree3) (56)
	{-1152.0732422,-1216.7866211,126.4688034},//object(aw_streettree3) (57)
	{-1161.5732422,-1216.7814941,126.4688034},//object(aw_streettree3) (58)
	{-1171.5732422,-1216.7763672,126.4688034},//object(aw_streettree3) (59)
	{-1180.8232422,-1216.7718506,126.4688034},//object(aw_streettree3) (60)
	{-1191.3232422,-1216.7663574,126.4688034},//object(aw_streettree3) (61)
	{-1201.0732422,-1216.7608643,126.4688034},//object(aw_streettree3) (62)
	{-1201.0690918,-1208.2607422,126.4688034},//object(aw_streettree3) (63)
	{-1201.0646973,-1200.7607422,126.4688034},//object(aw_streettree3) (64)
	{-1201.0607910,-1193.2607422,126.4688034},//object(aw_streettree3) (65)
	{-1201.0566406,-1185.2607422,126.4688034},//object(aw_streettree3) (66)
	{-1201.0528564,-1177.5107422,126.4688034},//object(aw_streettree3) (67)
	{-1201.0483398,-1168.5107422,126.4688034},//object(aw_streettree3) (68)
	{-1201.2851562,-1159.0510254,126.4688034},//object(aw_streettree3) (77)
	{-1190.2851562,-1159.0561523,126.4688034},//object(aw_streettree3) (78)
	{-1180.2851562,-1159.0605469,126.4688034},//object(aw_streettree3) (79)
	{-1171.0351562,-1159.0650635,126.4688034},//object(aw_streettree3) (80)
	{-1160.5351562,-1159.0695801,126.4688034},//object(aw_streettree3) (81)
	{-1151.0351562,-1159.0739746,126.4688034},//object(aw_streettree3) (82)
	{-1142.2851562,-1159.0775146,126.4688034},//object(aw_streettree3) (83)
	{-1132.0351562,-1159.0821533,126.4688034},//object(aw_streettree3) (84)
	{-1123.7851562,-1159.0860596,126.4688034},//object(aw_streettree3) (85)
	{-1113.4187012,-1159.7609863,126.4688034},//object(aw_streettree3) (86)
	{-1103.8361816,-1160.0635986,126.4688034},//object(aw_streettree3) (87)
	{-1095.0059814,-1160.4180908,126.4688034}//object(aw_streettree3) (88)
};
new Float:GardenWaterTrees[51][6] = {
	{-1126.1414795,-1179.5426025,135.9438934,0.0000000,32.0000000,95.9999695}, //object(water_fountain) (1)
	{-1134.4792480,-1179.5299072,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (2)
	{-1143.2884521,-1179.5372314,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (3)
	{-1150.9256592,-1179.5240479,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (4)
	{-1157.2978516,-1179.5069580,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (5)
	{-1165.1959229,-1179.1090088,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (6)
	{-1172.7094727,-1179.0806885,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (7)
	{-1181.2512207,-1178.7420654,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (8)
	{-1189.7171631,-1178.4058838,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (9)
	{-1198.4675293,-1178.2845459,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (10)
	{-1198.4667969,-1178.2841797,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (11)
	{-1198.3828125,-1217.1727295,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (12)
	{-1190.2800293,-1216.7119141,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (13)
	{-1181.5462646,-1216.7003174,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (14)
	{-1173.5833740,-1216.8035889,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (15)
	{-1165.9040527,-1216.8552246,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (16)
	{-1157.0633545,-1216.8422852,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (17)
	{-1148.5070801,-1216.8726807,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (18)
	{-1139.8868408,-1216.9835205,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (19)
	{-1131.3605957,-1216.9169922,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (20)
	{-1122.6877441,-1217.0886230,135.9438934,0.0000000,31.9976807,95.9985352}, //object(water_fountain) (21)
	{-1120.6265869,-1207.3936768,135.9438934,0.0000000,31.9976807,184.4985352}, //object(water_fountain) (22)
	{-1120.5341797,-1198.8654785,135.9438934,0.0000000,31.9976807,184.4934082}, //object(water_fountain) (23)
	{-1120.1329346,-1173.2701416,135.9438934,0.0000000,31.9976807,184.4934082}, //object(water_fountain) (24)
	{-1120.1893311,-1164.8179932,135.9438934,0.0000000,31.9976807,184.4934082}, //object(water_fountain) (25)
	{-1113.6398926,-1157.6981201,135.9438934,0.0000000,31.9976807,268.9934082}, //object(water_fountain) (26)
	{-1105.0268555,-1157.5688477,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (27)
	{-1122.3319092,-1157.9891357,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (28)
	{-1131.2149658,-1158.0885010,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (29)
	{-1139.9439697,-1158.2553711,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (30)
	{-1148.5076904,-1158.1420898,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (31)
	{-1157.1123047,-1158.4083252,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (32)
	{-1165.1225586,-1158.2705078,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (33)
	{-1173.6054688,-1158.5175781,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (34)
	{-1182.1293945,-1158.5673828,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (35)
	{-1190.6782227,-1158.2934570,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (36)
	{-1199.1958008,-1158.0260010,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (37)
	{-1198.0822754,-1192.3742676,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (38)
	{-1189.1816406,-1192.3037109,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (39)
	{-1180.9313965,-1192.2387695,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (40)
	{-1172.3305664,-1192.1708984,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (41)
	{-1163.8298340,-1192.1040039,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (42)
	{-1154.8035889,-1192.0319824,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (43)
	{-1146.3275146,-1191.9645996,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (44)
	{-1137.8269043,-1191.8969727,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (45)
	{-1129.3507080,-1191.8293457,135.9438934,0.0000000,31.9976807,268.9892578}, //object(water_fountain) (46)
	{-1207.7949219,-1210.6511230,135.9438934,0.0000000,75.9976807,354.9892578}, //object(water_fountain) (47)
	{-1207.9765625,-1201.4537354,135.9438934,0.0000000,75.9924316,354.9847412}, //object(water_fountain) (48)
	{-1206.6721191,-1184.2822266,135.9438934,0.0000000,75.9924316,354.9847412}, //object(water_fountain) (49)
	{-1206.0893555,-1175.7606201,135.9438934,0.0000000,75.9924316,2.9847412}, //object(water_fountain) (50)
	{-1205.8166504,-1167.1398926,135.9438934,0.0000000,75.9924316,2.9827881} //object(water_fountain) (51)
};
//<============[ ЭКОНОМИКА ]============>
///////// САД ////////////
#define SAD_ZP_1 60
#define SAD_ZP_2 35
///////// ЛЕСОПИЛКА ////////////
#define LESOPILKA_ZP_1 55 // *2
#define LESOPILKA_ZP_2 35
///////// ШАХТА ////////////
#define SHAHTA_ZP_1 70
#define SHAHTA_ZP_2 15
///////// ОРУЖЕЙНЫЙ ЗАВОД ////////////
#define GUN_ZP_1 70
#define GUN_ZP_2 35
///////// ВОДИТЕЛЬ АВТОБУСА ////////////
#define BUS_PRICE_CHECKPOINT 85
#define BUS_PRICE_RENT 150
//////////////////////////////////////

//new quest_area = -1;

//#define MAX_DROP_ITEMS 			(100)

//new TOTALFIRE[2] = {0,0};

enum Flags:(<<= 1)
{
	YN = 1,
};
new Flags:playerFlags[MAX_PLAYERS];
new KeyYN[MAX_PLAYERS char];
new PlayerText: YNText[MAX_PLAYERS][2];
new PlayerBar: universalbar[MAX_PLAYERS];

/*//DEIMOS-ПОЖАРenum fSystem
{
	fHealth,
	fStatus,
	fZone,
	Float:fPos[6],
	fObject
};
new FireSystem[44][fSystem];*/

new DrugEffect[MAX_PLAYERS];

stock GetMafiaColor(fractionid) return (fractionid == 5) ? (0x9E19B5AA) : (fractionid == 6) ? (0xFF0000AA) : (fractionid == 14) ? (0xBDAAA4AA) : (COLOR_GREY);
//






new mobile_area;
new bank_bot[6];
//new gBankMysqlID[MAX_PLAYERS]={-1, ...};
new area_hit[2];
//new Menu:SelectSkin;
new Text:TD_Fuel[8];
new PlayerText:PTD_Fuel[MAX_PLAYERS][2];
//
new bool:IsTDCNNShow[MAX_PLAYERS];
new Text:TD_Floor_CNN[5];


//
new gRegSkins[2][2][3]={
{
	{136, 79, 134},//черный
	{78, 200, 137}//белый

},
{
	{9,13,245},
	{31,157,198}

}
};

#define CNRED                      	0xf15a5aAA
#define CNORANGE                    0xff9900AA
#define CNGREEN                     0x4EBA6FAA
#define CNLIGHTGREEN                0x00ff00AA
#define CNBLUE                      0x4682B4AA
#define CNGREY                      0xdad2bfFF
#define CNYELLOW                    0xFFFF00AA
#define neworange 					"{"#cORANGE"}"
#define newgray 					"{a8a7a6}"
#define newred 						"{f15a5a}"
#define newgreen 					"{4EBA6F}"
#define newlightgreen 				"{00ff00}"
#define newblue 					"{4682b4}"
#define newyellow 					"{ffff00}"
#define newgrey 					"{dad2bf}"
#define nwhite 						"{"#cWHITE"}"
enum VGUN_DATA
{
	vGunArea,
	vGunAmount,
	Text3D:vGunText,
	bool:vGunLoading,
	bool:vGunUnloading,
	vGunPickup
}
new gVehicleGun[MAX_VEHICLES][VGUN_DATA];
//
//new Text:TD_SpeeW[12];
//new PlayerText:PTD_SpeedW[MAX_PLAYERS][8];
new PlayerText:IntroBox[MAX_PLAYERS]={PlayerText:-1};
new PlayerText:FZ_TDP[MAX_PLAYERS]={PlayerText:-1};
new FZ_TDP_Timer[MAX_PLAYERS]={-1, ...};
/*stock CreateDoorTD(playerid)
{
	if(FZ_TDP[playerid]==PlayerText:-1)
	{
			FZ_TDP[playerid] = CreatePlayerTextDraw(playerid, 641.531494, 1.500000, "usebox");
			PlayerTextDrawLetterSize(playerid, FZ_TDP[playerid], 0.000000, 49.396297);
			PlayerTextDrawTextSize(playerid, FZ_TDP[playerid], -2.000000, 0.000000);
			PlayerTextDrawAlignment(playerid, FZ_TDP[playerid], 1);
			PlayerTextDrawColor(playerid, FZ_TDP[playerid], 0);
			PlayerTextDrawUseBox(playerid, FZ_TDP[playerid], true);
			PlayerTextDrawBoxColor(playerid, FZ_TDP[playerid], 250);
			PlayerTextDrawSetShadow(playerid, FZ_TDP[playerid], 0);
			PlayerTextDrawSetOutline(playerid, FZ_TDP[playerid], 0);
			PlayerTextDrawBackgroundColor(playerid, FZ_TDP[playerid], 0x00000000);
			PlayerTextDrawFont(playerid, FZ_TDP[playerid], 0);
			PlayerTextDrawSetProportional(playerid, FZ_TDP[playerid], 1);
			PlayerTextDrawShow(playerid, FZ_TDP[playerid]);
			FZ_TDP_Timer[playerid] = SetTimerEx("FZ_TDP_UPDATE", 100, 1, "i", playerid);
	}
	return 1;
}*/
//
new Text:TD_Apple[17];
new Text:TD_SAPPLE[10];
new Text:Korzinka;
new PlayerText:GardenCount[MAX_PLAYERS];
new PlayerText:TD_GPS[MAX_PLAYERS]={PlayerText:-1,...};
//
new id_phones[6]={18873,18871,18870,18869,18867,18866};
new Text:TD_Phones[8];
new bool:click_phones[8];
new Text:Logotype[8];
new Text:Background[12];
new Text:Objects[6];
new Text:Titles[5];
//new Text:TD_Wait;
//#define FERRIS_KOLESO_SPEED 0.05
//new objectswheel[38];
//new Float:FerrisAngle=0.0,FerrisAlternate=0;
//
#define MAX_HOTEL 	1
#define MAX_FLOORS 	50
#define MAX_ROOMS 	10
static stock gRoomScore[MAX_FLOORS][MAX_ROOMS];
static stock gRoomOwner[MAX_FLOORS][MAX_ROOMS][32];
static stock Float:gRoomPos[MAX_ROOMS][4]={
	{1423.4756,-1548.7203,1084.3739,87.8515},
	{1423.4569,-1553.4564,1084.3739,86.6543},
	{1418.1592,-1553.4071,1084.3739,268.4222},
	{1418.1652,-1548.7009,1084.3739,269.4183},
	{1418.1580,-1544.1183,1084.3739,268.1978},
	{1418.1570,-1539.2449,1084.3739,265.4340},
	{1423.4596,-1535.4180,1084.3739,82.5018},
	{1418.1559,-1534.7877,1084.3739,265.2096},
	{1418.1584,-1530.6804,1084.3739,270.5926},
	{1423.4553,-1530.5951,1084.3739,89.2271}
};
new gRoomInc[MAX_FLOORS][MAX_ROOMS];
new gRoomArea[MAX_FLOORS][MAX_ROOMS];
new gReceptionArea;
new Float:gCarHotelTextPos[MAX_ROOMS][4]={
{1281.4019,-1383.4890,13.0445,92.2246},
{1281.2189,-1378.7830,13.0529,92.2225},
{1281.0726,-1375.0146,13.0601,92.2210},
{1280.9523,-1371.9193,13.0711,92.2192},
{1280.7653,-1367.0573,13.0454,92.2185},
{1280.6027,-1362.8340,13.0639,92.2204},
{1280.4070,-1357.7750,13.0844,92.2196},
{1280.2574,-1353.9208,13.1054,92.2208},
{1280.7528,-1347.2101,13.1020,88.9348},
{1280.8944,-1339.5995,13.1150,88.9369}
};
//
#define MAX_GREEN_ZONES 43
new gAreaGreenZone[MAX_GREEN_ZONES];
/*static stock Float:gPosGraff[23][3]={
{2261.2722,-1255.7178,23.9766},//0
{2261.2637,-1246.6940,23.9766},//1
{2261.2505,-1234.8887,23.9766},//2
{2261.2686,-1266.7091,23.9766},//3
{2184.5271,-1338.4526,23.9844},//4
{2128.9888,-1345.3289,23.9844},//5
{2110.5886,-1356.1002,23.9844},//6
{2352.1187,-1542.9738,24.0066},//7
{2376.1458,-1512.7371,24.0000},//8
{2463.4270,-1434.6622,24.0523},//9
{2518.3093,-1748.4268,13.5469},//10
{2506.9497,-1906.4426,13.5469},//11
{1995.2874,-1922.6650,13.5469},//12
{1929.2878,-2003.3833,13.5469},//13
{1931.7725,-2076.9441,13.5580},//14
{1659.3499,-2145.7051,13.5469},//15
{1901.3540,-1768.3485,13.5469},//16
{2194.5115,-1740.8856,13.5469},//17
{2232.1030,-1680.8685,14.5047},//18
{2475.4219,-1747.2094,13.5469},//19
{1980.2009,-1166.4495,20.5345},//20
{1834.9725,-1405.8896,13.4297},//21
{2747.3850,-1186.5979,69.4002}//22
};
static stock gAreaGraffity[23];
static stock bool:graff_status[23]={false,...};
static stock graff_cp[23];
static stock graff_obj[23];
static stock Text3D:graff_text[23]={Text3D:-1,...};*/
//
#define PLAYER_WEAPON 0
#define PLAYER_AMMO 1
//
static stock Float:PlayerPos[MAX_PLAYERS][3];

//
static stock PlayerWeaponData [MAX_PLAYERS] [13] [2];
static stock PlayerWeaponTime [MAX_PLAYERS];
static stock NamePlayer[MAX_PLAYERS][MAX_PLAYER_NAME];
//
new Float:gGunWorkCPs[17][3] = {
	{2559.2253,-1300.0222,1044.1250},//0 Load
	{2551.1055,-1299.8928,1044.1250},//1
	{2543.1436,-1300.0195,1044.1250},//2
	{2543.0417,-1287.2638,1044.1250},//3
	{2551.1731,-1287.2742,1044.1250},//4
	{2559.0825,-1287.2739,1044.1250},//5
	{2558.5391,-1295.8527,1044.1250},//6 Work
	{2556.2336,-1295.8497,1044.1250},//7
	{2553.8550,-1295.8499,1044.1250},//8
	{2544.5049,-1295.8514,1044.1250},//9
	{2542.0510,-1295.8514,1044.1250},//10
	{2541.9375,-1291.0050,1044.1250},//11
	{2544.2910,-1291.0046,1044.1250},//12
	{2553.7991,-1291.0055,1044.1250},//13
	{2556.1155,-1291.0033,1044.1250},//14
	{2558.5779,-1291.0020,1044.1250},//15
	{2564.0759,-1292.8741,1044.1250}//16 Unload
};
new addnews[32];
new gWorkCP[11]={-1,...};
new gMetallArea[6]={-1,...};
new gSkladWorkPick = -1;
new gSkladCount = 0;
new Text3D:gSkladText = Text3D:-1;
new gGunWorkWeapon[6] = {348,353,355,356,346,349};
new Float:gGunWorkTables[10][3] = {
	{2558.4794,-1295.1074,1044.1171},
	{2556.1500,-1295.1074,1044.1171},
	{2553.8300,-1295.1074,1044.1171},
	{2544.3100,-1295.1074,1044.1171},
	{2541.9200,-1295.1074,1044.1171},
	{2541.9200,-1291.9100,1044.1171},
	{2544.2800,-1291.9100,1044.1171},
	{2553.7900,-1291.9100,1044.1171},
	{2556.2400,-1291.9100,1044.1171},
	{2558.3500,-1291.9100,1044.1171}
};
new bool:gGunWorkTableStat[10]={false,...};

static stock PlayerWeapon [MAX_PLAYERS] [47];

stock SetPlayerAmmoEx(playerid, weaponid, ammo)
{
	new slot = GetGunSlot(weaponid);
	GunPlayer[playerid][slot][0]=weaponid;
	GunPlayer[playerid][slot][1]=ammo;
	SetPlayerAmmo(playerid,weaponid,ammo);
	AC_GunCheattime[playerid] = unix + 3;
	return true;
}
#define SetPlayerAmmo SetPlayerAmmoEx
//
new mats_object[6][2];
//
static stock gSellGun [8] ={23, 24, 25, 29, 30, 31, 33, 1 };
static stock gSellGunPrice [8] ={ 35, 60, 70, 30, 60, 60, 70, 50 };
//
static stock Text:Info_TD[2]={Text:-1,...};
//

new pgunobject[MAX_PLAYERS]={INVALID_OBJECT, ...};

new derevo_sklad = 0;
new Text3D:derevo_text;
new gDerevo[38];
static stock Float:Derevo[38][3] = {
	{-750.2000122,-157.5370026,66.0350037},
	{-711.8060303,-179.0319977,64.4960022},
	{-679.9680176,-179.4949951,61.8339996},
	{-657.0419922,-112.7610016,61.7270012},
	{-670.2169800,-174.7209930,60.4840012},
	{-645.4423828,-132.9521484,61.6320000},
	{-703.9873047,-108.1845703,66.3079987},
	{-671.0664062,-88.2119141,63.2220001},
	{-659.8007812,-89.8779297,62.2849998},
	{-643.1074219,-147.9228516,63.2989998},
	{-654.3154297,-141.6699219,60.5400009},
	{-663.8720703,-127.9794922,59.9269981},
	{-662.0986328,-148.3554688,59.6180000},
	{-673.1420288,-136.9120026,58.8279991},
	{-723.8759766,-195.5390015,66.3769989},
	{-680.4453125,-148.3261719,59.9189987},
	{-683.3857422,-122.3339844,61.4650002},
	{-688.1484375,-105.6562500,64.1429977},
	{-699.9248047,-129.1474609,65.5139999},
	{-693.5517578,-136.9414062,63.5660019},
	{-713.2568359,-197.9736328,67.3720016},
	{-702.5097656,-190.0068359,65.1600037},
	{-690.4238281,-200.7275391,66.5159988},
	{-690.5312500,-183.6718750,63.4370003},
	{-697.0185547,-177.0214844,62.6329994},
	{-711.5498047,-188.4101562,65.8720016},
	{-740.0239868,-164.3639984,66.3140030},
	{-722.2451172,-184.1347656,65.6930008},
	{-730.7431641,-191.5781250,65.4729996},
	{-727.8164062,-184.1787109,65.3850021},
	{-731.6396484,-159.5820312,65.7979965},
	{-760.5097656,-152.9121094,65.0260010},
	{-755.0498047,-168.6611328,66.5350037},
	{-733.9730225,-143.4779968,65.9619980},
	{-728.1699219,-131.7451172,66.8369980},
	{-708.1710205,-122.8440018,67.9089966},
	{-714.6279907,-147.3619995,66.0390015},
	{-649.9329834,-107.3590012,61.7220001}
};
//
#define BOLKA_TEAM 29
#define JAIL_TEAM 30
//
stock Float:PointToPoint3D(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2) return floatsqroot(floatadd(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)),floatpower(z2-z1,2)));

#define MAX_OST 500

new TotalOst = 0;

enum ostanovka_data
{
	ostID,
	Float:ostX,
	Float:ostY,
	Float:ostZ,
	Float:ostrX,
	Float:ostrY,
	Float:ostrZ
}
new ostanovka[MAX_OST][ostanovka_data];


enum VEHICLE_DATA
{
	vID,
	vInc,
	vModel,
	Float:veSpawnX,
	Float:veSpawnY,
	Float:veSpawnZ,
	Float:veX,
	Float:veY,
	Float:veZ,
	Float:veA,
	vOccupied,
	bool:vLock,
	bool:vEngine,
	bool:vLamp,
	Float:vHealth,
	Float:vDrived,
	Float:vFuel,
	vCol1,
	vCol2,
	vFraction,
	vFractionRank,
	bool:skiing,
	vName[50],
	vCost,
	bool:uDamage,
	vFamily,
	vJob,
	//gPlayerCar[2],
	bool:vAdminCreate,
	vRentPlayer,
	Text3D:vRentPlayerText,
	Text3D:vOwnerVehicleText
}
static gVehicles[MAX_VEHICLES][VEHICLE_DATA];


/*enum larekData
{
	lr_obj,
	Float:lr_pos[4],
	Float:lr_rot[3],
	lr_cp,
	lr_bot
}
new larek[50][larekData];
new TotalLarek = 0;*/

new VehicleEnters[MAX_PLAYERS]={INVALID_VEHICLE_ID, ...};

stock SetVehicleParamsExEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective)
{
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
	gVehicles[vehicleid-1][vEngine] = (engine) ? (true) : (false);
	gVehicles[vehicleid-1][vLamp] = (lights) ? (true) : (false);
	SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);

	foreach(i)
	{
		if(!ShowSpeed[i]) continue;
		if(VehicleEnters[i] == vehicleid)
		{
			PlayerTextDrawHide(i,speedSignalLights[i]);
			PlayerTextDrawColor(i, speedSignalLights[i], (lights) ? (0x06F000FF) : (0x800000FF));
			PlayerTextDrawShow(i,speedSignalLights[i]);

			PlayerTextDrawHide(i,speedEngine[i]);
			PlayerTextDrawColor(i, speedEngine[i], (engine) ? (0x06F000FF) : (0x800000FF));
			PlayerTextDrawShow(i,speedEngine[i]);

			break;
		}

	}
	return 1;
}
#define SetVehicleParamsEx SetVehicleParamsExEx



new Text3D:blocktext[MAX_PLAYERS] ={Text3D:-1,...};

/* ----------------------------------------------------------------- */
#define PlayerToPoint(%0,%1,%2,%3,%4) 		IsPlayerInRangeOfPoint(%1,%0,%2,%3,%4)
#define RandomEx(%1,%2) 					(random(%2-%1)+%1)
#define randomEx(%0,%1) 	random(%1 - %0) + %0
//
#define MAX_ATTEMPT_GANG 8

#define MAX_ROUTE 50
#define MAX_STATION 300

new gRouteName[MAX_ROUTE][32];
new gRouteMysqlID[MAX_ROUTE]={-1,...};
//new TotalRoutes = 0;
///new TotalStation=0;
new Float:gRoutePos[MAX_ROUTE][MAX_STATION][5];
new Text3D:gPlayerBusText[MAX_PLAYERS] ={Text3D:INVALID_3DTEXT_ID,...};
new Text3D:gPlayerProdText[MAX_PLAYERS][2];
new gPlayerProdCP[MAX_PLAYERS];
//
#define MAX_UNITS 5
//
static unit_inc[MAX_FRACTIONS][MAX_UNITS];
static unit_name[MAX_FRACTIONS][MAX_UNITS][32];
static unit_leader[MAX_FRACTIONS][MAX_UNITS][MAX_PLAYER_NAME];
//
new Text3D:TaxiText[MAX_PLAYERS]={Text3D:INVALID_3DTEXT_ID,...};
//
new CaptureAttempt[5]={0,...};
new CaptureTime=0;
//new TimerTick[2];
//
static stock Text:gSkinShopDraw[5]={Text:-1};
static stock PlayerText:gSkinShopPriceDraw[MAX_PLAYERS]={PlayerText:-1};

new Text:InfoDraw[2]={Text:-1};
//
const MONEY_LIMIT = 2000000000;
//Скины
enum SKIN_DATA {
	skinID,
	skinPrice,
	skinSex // 1 - женский, 2 - мужской
}
#define SKIN_SEX_MALE 1
#define SKIN_SEX_FEMALE 2
#define MAX_SKINS 113
static const stock gSkins[MAX_SKINS + 1][SKIN_DATA] = {
	{31, 5000, SKIN_SEX_FEMALE},
	{38, 5000, SKIN_SEX_FEMALE},
	{39, 5000, SKIN_SEX_FEMALE},
	{131, 5000, SKIN_SEX_FEMALE},
	{198, 5000, SKIN_SEX_FEMALE},
	{201, 5000, SKIN_SEX_FEMALE},
	{207, 5000, SKIN_SEX_FEMALE},
	{193, 10000, SKIN_SEX_FEMALE},
	{226, 10000, SKIN_SEX_FEMALE},
	{237, 10000, SKIN_SEX_FEMALE},//10
	{192, 20000, SKIN_SEX_FEMALE},
	{214, 20000, SKIN_SEX_FEMALE},
	{55, 30000, SKIN_SEX_FEMALE},
	{56, 30000, SKIN_SEX_FEMALE},
	{90, 30000, SKIN_SEX_FEMALE},
	{151, 30000, SKIN_SEX_FEMALE},
	{152, 30000, SKIN_SEX_FEMALE},
	{169, 30000, SKIN_SEX_FEMALE},
	{9, 5000, SKIN_SEX_FEMALE},
	{10, 5000, SKIN_SEX_FEMALE},
	{13, 5000, SKIN_SEX_FEMALE},
	{69, 5000, SKIN_SEX_FEMALE},
	{190, 10000, SKIN_SEX_FEMALE},//60
	{195, 10000, SKIN_SEX_FEMALE},
	{238, 10000,SKIN_SEX_FEMALE},
	{93, 60000, SKIN_SEX_FEMALE},
	{141, 60000, SKIN_SEX_FEMALE},
	{150, 60000, SKIN_SEX_FEMALE},
	{172, 60000, SKIN_SEX_FEMALE},
	{263, 60000, SKIN_SEX_FEMALE},
	{194, 70000, SKIN_SEX_FEMALE},
	{211, 70000, SKIN_SEX_FEMALE},
	{233, 70000, SKIN_SEX_FEMALE},//90
	{11, 50000, SKIN_SEX_FEMALE},
	{12, 50000, SKIN_SEX_FEMALE},
	{91, 160000, SKIN_SEX_FEMALE},
	{216, 160000, SKIN_SEX_FEMALE},//110
	{219, 200000, SKIN_SEX_FEMALE},
	{296, 200000, SKIN_SEX_FEMALE},
	{1, 5000, SKIN_SEX_MALE},
	{2, 5000, SKIN_SEX_MALE},//20
	{3, 5000, SKIN_SEX_MALE},
	{8, 5000, SKIN_SEX_MALE},
	{32, 5000, SKIN_SEX_MALE},
	{72, 5000, SKIN_SEX_MALE},
	{94, 5000, SKIN_SEX_MALE},
	{128, 5000, SKIN_SEX_MALE},
	{133, 5000, SKIN_SEX_MALE},
	{23, 10000, SKIN_SEX_MALE},
	{33, 10000, SKIN_SEX_MALE},
	{34, 10000, SKIN_SEX_MALE},//30
	{48, 10000, SKIN_SEX_MALE},
	{73, 10000, SKIN_SEX_MALE},
	{96, 10000, SKIN_SEX_MALE},
	{161, 10000, SKIN_SEX_MALE},
	{202, 10000, SKIN_SEX_MALE},
	{206, 10000, SKIN_SEX_MALE},
	{4, 5000, SKIN_SEX_MALE},
	{5, 5000, SKIN_SEX_MALE},
	{6, 5000, SKIN_SEX_MALE},
	{7, 5000, SKIN_SEX_MALE},//40
	{15, 5000, SKIN_SEX_MALE},
	{183, 5000, SKIN_SEX_MALE},
	{14, 10000, SKIN_SEX_MALE},
	{35, 10000, SKIN_SEX_MALE},
	{36, 10000, SKIN_SEX_MALE},
	{156, 10000, SKIN_SEX_MALE},
	{21, 30000, SKIN_SEX_MALE},
	{22, 30000, SKIN_SEX_MALE},
	{24, 30000, SKIN_SEX_MALE},
	{25, 30000, SKIN_SEX_MALE},//50
	{28, 40000, SKIN_SEX_MALE},
	{66, 40000, SKIN_SEX_MALE},
	{67, 40000, SKIN_SEX_MALE},
	{176, 40000, SKIN_SEX_MALE},
	{293, 40000, SKIN_SEX_MALE},

	{57, 60000, SKIN_SEX_MALE},
	{59, 60000, SKIN_SEX_MALE},
	{100, 60000, SKIN_SEX_MALE},
	{170, 60000, SKIN_SEX_MALE},
	{181, 60000, SKIN_SEX_MALE},
	{185, 60000, SKIN_SEX_MALE},
	{241, 60000, SKIN_SEX_MALE},
	{242, 60000, SKIN_SEX_MALE},//70
	{98, 65000, SKIN_SEX_MALE},
	{112, 65000, SKIN_SEX_MALE},
	{126, 65000, SKIN_SEX_MALE},
	{247, 65000, SKIN_SEX_MALE},
	{254, 65000, SKIN_SEX_MALE},
	{269, 65000, SKIN_SEX_MALE},
	{290, 65000, SKIN_SEX_MALE},
	{117, 70000, SKIN_SEX_MALE},
	{188, 70000, SKIN_SEX_MALE},
	{240, 160000, SKIN_SEX_MALE},//80
	{249, 70000, SKIN_SEX_MALE},
	{250, 70000, SKIN_SEX_MALE},

	{19, 60000, SKIN_SEX_MALE},
	{20, 60000, SKIN_SEX_MALE},
	{180, 60000, SKIN_SEX_MALE},
	{222, 60000, SKIN_SEX_MALE},
	{297, 60000, SKIN_SEX_MALE},
	{46, 160000, SKIN_SEX_MALE},
	{111, 160000, SKIN_SEX_MALE},
	{171, 160000, SKIN_SEX_MALE},//100
	{189, 160000, SKIN_SEX_MALE},
	{223, 160000, SKIN_SEX_MALE},
	{147, 180000, SKIN_SEX_MALE},
	{187, 180000, SKIN_SEX_MALE},
	{186, 180000, SKIN_SEX_MALE},
	{208, 180000, SKIN_SEX_MALE},
	{228, 180000, SKIN_SEX_MALE},
	{294, 200000, SKIN_SEX_MALE},
	{17, 100000, SKIN_SEX_MALE},
	{296, 200000, SKIN_SEX_MALE}

};

static const stock gExamQuestions[25][90] = {
	"В каком случае разрешен обгон впереди движущегося т/с?","Разрешен ли обгон впереди движущегося т/с по городу?","Какова макс скорость транспортного средства по автомагистрали?","Какова макс скорость транспортного средства по пригороду?",
	"При виде т/с с включенным спец.сигналом, водитель обязан?","В каких случаях разрешен обгон справа?","Какова макс. скорость транспортного средства по городу?","Какого типа установлены перекрестки в штате?",
	"Что такое ДТП?","Что следует делать при возникновении ДТП в первую очередь?","В каком месте водитель имеет право осуществлять парковку?","Что следует делать водителю при проезде перекрестка?",
	"Со скольки лет можно получить водительские права?","В каком случае следует пристегивать ремень безопастности?","Когда можно включать дальний свет фар?","Разрешен ли обгон по двойной сплошной линии?",
	"Можно ли устанавливать спец. Сигнал на личный автомобиль?","Разрешен ли обгон по прерывистой линии?","Стоит ли соблюдать грузоподъемность тягача?","В каком случае можно включать аварийный сигнал?",
	"Обязательна ли остановка перед пешеходным переходом?","Разрешен ли разворот т/c в туннеле?","Необходимо ли смотреть в зеркала заднего вида при маневре задним ходом?","Разрешено ли движение задним ходом на магистрале?","Должны ли быть видны гос.номера автомобиля? "
};
static const stock gExamAnswers[25][4][75] = {
	{"В случае отсутствия очевидной угрозы лобового столкновения.","В случае передвижения за городом.","В случае передвижения по городу.","В случае очевидной угрозы лобового столкновения"}, {"Разрешен всегда","Запрещен обгон слева","Разрешен в случае отсутствия угрозы столкновения","Запрещен всегда"},
	{"60 Км/ч","10 Км/ч","130 Км/ч","150 Км/ч"},{"100 Км/ч","110 Км/ч","60 Км/ч","90 Км/ч"},{"Продолжить движение в прежнем темпе.","Резко остановить транспортное средство.","Снизить скорость транспортного средства до 40 Км/ч","Постепенно снизить скорость и прижаться к обочине."},{"Разрешен всегда","Запрещен","Разрешен в случае поворота впереди движущегося транспортного средства.","Разрешен за городом"},
	{"50 Км/ч","60 Км/ч","70 Км/ч","80 Км/ч"},{"Регулируемые равнозначных дорог","Регулируемые неравнозначных дорог","Нерегулируемые равнозначных дорог","Нерегулируемые неравнозначных дорог"},{"Дорожно-транспортное происшествие.","Дорожно-транспортное предприятие.","Дорожно-торговое предприятие.","Дорожно-торговое предприятствие."},{"Скрыться с места ДТП.","Оставаться на месте ДТП и Вызвать сотрудников ПО.","Оставаться на месте ДТП и Вызвать службу спасения.","Вызвать сотрудников скорой помощи."},
	{"По среди дороги","На парковке.","На перекрестке","На тротуаре"},{"Снизить скорость и проехать при отсутствии помех.","Увеличить скорость.","Проехать не изменяя скорость.","Остановиться перед перекрёстком."}, {"16 лет","18 лет","20 лет","25 лет"}, {"При виде сотрудника ПД","При передвижении за городом"," При передвижении в городе ","В любом случае"},{"В городе","В пробке","На трассе","При проезде на перекрестке"},
	{"Только на трассе ","Запрещен","В городе","На перекрестке"},{"Нет, нельзя","Да","Только на внедорожниках","Только на грузовиках"},{"Только для машин со спец.сигналом","Только для велосипедистов","Всегда разрешен","Всегда запрещен"},{"Да, всегда","Нет, не обязательно","Только при погрузке угля","Только при перевозке людей"},
	{"В любом случае","Если надо «Отойти»","При обгоне","При ДТП"}, {"Нет, не обязательно ","Обязательно","Только при виде сотрудников ПД","Только при включенном поворотнике"},{"Нет","Только при включенном аварийном сигнале","Только при виде сотрудников ПД","Только при включенном дальнем свете"},
	{"При включенных фарах","При виде пешехода","Обязательно","Не обязательно"},{"Нет, не разрешен","Да, разрешен","Только при виде сотрудников ПД","Только при включенном правом поворотнике"},{"Нет, не должны","Только сзади","Только спереди","Должны спереди и сзади"}
};
static const stock gExamTrueAnswer[25]={1,3,4,2,4,3,2,3,1,2,2,1,2,4,3,2,1,3,1,4,2,1,3,1,4};
new gDSTurn[20]; //DS = Driving School;
new Text3D:gDSTurnText;
new gAPTurn[20]; //AP = Administration of President;
new Text3D:gAPTurnText;
new gPDTurn[20]; //PD = Police Department;
new Text3D:gPDTurnText;
new PlayerText:MinerDraw[MAX_PLAYERS]={PlayerText:-1,...};
//
new Urna[4];
#define MAX_VOTES 5
new vote_name[MAX_VOTES][MAX_PLAYER_NAME + 1];
new vote_count[MAX_VOTES]={0,...};
//
//new Letim[2];
//
new id_player_wbook = INVALID_PLAYER_ID;
new playerid_wbook = INVALID_PLAYER_ID;

/* ---------------Интерьеры домов----------------------------- */

new Float:gHouseExitInteriorPos[4][4] ={
	{-1521.5621,278.8613,2171.5740,87.6399},
	{1405.8978,-276.0038,3846.2668,175.3611},
	{1397.3694,-633.0092,3851.7139,356.7377},
	{603.8801,-837.8500,1522.4359,174.1704}
};
new Float:gHouseSpawnInteriorPos[4][4]={
	{-1545.2423,290.9115,2171.5740,267.0365},
	{1401.5028,-298.8250,3846.2668,179.6337},
	{1377.2257,-629.0557,3851.7400,88.8739},
	{596.4260,-857.4307,1522.4359,324.2705}
};

new gHouseExitInterior[4] ={
	2,
	9,
	5,
	6
};

new Float:gSleepPos[4][4] = {
	{-1544.8993,289.7291,2172.2751,266.1876},
	{1402.8867,-299.0562,3846.8982,176.1594},
	{1377.2181,-627.4075,3852.3701,87.2590},
	{596.1480,-852.4406,1523.0424,271.4774}
};

new Float:gWashRoomPos[4][4] ={
	{218.5499,1247.4725,1082.1481,264.7091},
	{254.2182,1248.3682,1084.2578,184.1719},
	{2231.7383,-1112.1049,1050.8828,270.4384},
	{228.2708,1086.3724,1087.8281,178.9664}
};
new gWashRoomAreaid[4];
new gExitHome[4];



new gHouseImprovePrice[4] = {30000,40000,65000,120000};
new gHouseImproveName[4][64] = {"Сейф для хранения наркотиков и денег","Шкаф для одежды и оружия","Холодильник","Субсидии для снижения кварт. платы"};


new gHouseImproveArea[4][3];

new Float:gHouseStoreItemPos_Gun[4][9][6]={
{
	{-1537.9390,288.9343,2171.8291,-7.8000,-52.0000,-7.5999},
	{-1539.3649,289.1557,2171.7517,-13.7999,-41.2000,-175.5999},
	{-1538.3170,289.2124,2171.0004,83.1999,-14.2999,4.8000},
	{-1539.3607,289.3183,2171.0214,75.0000,-11.2999,2.5999},
	{-1538.1114,289.1021,2170.6967,49.2999,4.0000,19.4000},
	{-1538.8171,289.0847,2170.6833,0.0000,0.0000,31.5999},
	{-1539.4865,289.1588,2170.7231,0.0000,0.0000,45.4999},
	{-1538.6562,289.0888,2171.5739,0.0000,0.0000,40.8000},
	{-1538.8175,289.2308,2171.4638,0.0000,-89.0999,0.0000}
},
{
	{1397.6411,-300.5469,3846.5769,9.3000,-66.8999,-48.5000},
	{1397.7407,-299.1213,3846.4777,-8.0999,-25.9000,88.8999},
	{1397.6599,-299.0797,3845.8264,0.0000,0.0000,50.8000},
	{1397.7069,-300.2202,3845.8146,0.0000,-10.0999,-44.3999},
	{1397.7749,-299.5021,3845.7763,0.0000,-8.6000,-67.5000},
	{1397.9785,-300.3166,3845.4777,0.0000,13.4999,92.6999},
	{1397.7824,-299.5909,3846.2939,85.7999,-37.5999,-53.2000},
	{1397.8029,-299.0121,3845.4382,94.7000,-78.2999,0.0000},
	{1397.8817,-299.2392,3845.4870,-95.2999,0.0000,0.0000}
},
{
	{1371.7705,-625.4949,3851.9331,-11.5999,-58.8001,-53.0999},
	{1371.8173,-623.7875,3851.8979,1.0000,-106.8998,-70.4999},
	{1371.7915,-625.3867,3851.1401,-80.3000,-15.0000,62.9000},
	{1371.8148,-624.2282,3851.1474,-76.0999,13.4000,67.1999},
	{1371.9189,-625.5178,3850.8066,-84.2000,-1.1999,71.6000},
	{1371.9283,-624.7081,3850.8459,-88.4000,24.2000,77.0000},
	{1371.7952,-623.7910,3850.8256,-88.0000,0.0000,27.3999},
	{1371.7094,-625.1925,3851.6889,-87.4999,0.0000,56.5999},
	{1371.6259,-624.1943,3851.6115,76.0000,-67.3000,93.6000}
},
{
	{595.4319,-856.9973,1522.6883,0.0000,-56.7999,93.2999},
	{595.3798,-858.5181,1522.6263,0.0000,-41.6000,-77.0999},
	{595.7435,-858.7094,1521.8957,-79.5000,-4.5000,62.8999},
	{595.4559,-857.5221,1521.9072,-94.0000,0.0000,60.2999},
	{595.6362,-858.2836,1521.5101,76.3999,-73.6999,0.0000},
	{595.6830,-857.0802,1521.5697,88.0000,-89.5999,0.0000},
	{595.6317,-857.7248,1521.8476,85.6999,-88.3999,0.0000},
	{595.4755,-857.7524,1522.3750,83.7999,-37.8999,0.0000},
	{595.3596,-857.5034,1522.5595,8.9999,-20.2999,0.0000}
}
};

new Float:gHouseStoreItemPos_Dress[4][3][6] ={
{
	{-1538.3636,289.1534,2172.3334,0.0000,0.0000,-62.4000},
	{-1538.7978,289.1408,2172.3334,0.0000,0.0000,-62.4000},
	{-1539.2498,289.1190,2172.3234,0.0000,0.0000,-62.4000}
},
{
	{1397.7813,-300.0201,3847.1267,0.0000,0.0000,0.0000},
	{1397.7813,-299.7001,3847.1267,0.0000,0.0000,0.0000},
	{1397.7813,-299.2801,3847.1267,0.0000,0.0000,0.0000}
},
{
	{1371.8345,-624.8552,3852.4802,0.0000,0.0000,0.0000},
	{1371.8345,-624.4752,3852.4802,0.0000,0.0000,0.0000},
	{1371.8345,-624.0849,3852.4802,0.0000,0.0000,0.0000}
},
{
	{595.5323,-857.3453,1523.2062,0.0000,0.0000,0.0000},
	{595.5323,-857.7855,1523.2062,0.0000,0.0000,0.0000},
	{595.5323,-858.3855,1523.2062,0.0000,0.0000,0.0000}
}
};

new gHintGunID[9] = {358,357,356,355,353,349,348,347,336};
new gHintDressID[3] = {2689,2704,2705};

new gHouseImproveModelid[3]={2332,2708,2141};
new Float:gHouseImproveItem[3][4][8]={
{//safe
	{-1542.8336,294.5264,2171.0034,0.0000,0.0000,0.0000,180.0000,0.0},
	{1404.3969,-303.2229,3845.6762,0.0000,0.0000,-97.5000,85.7085,0.0},
	{1378.4040,-625.1845,3851.1594,0.0000,0.0000,-89.5999,98.3059,0.0},
	{595.2874,-856.0734,1521.8856,0.0000,0.0000,89.4000,264.4146,0.0}
},
{//store/
	{-1537.9746,289.0119,2170.5239,0.0000,0.0000,180.0000,360.0000,180.0},
	{1397.6591,-300.3840,3845.3061,0.0000,0.0000,91.7000,278.5554, 90.0},
	{1371.7181,-625.2432,3850.6586,0.0000,0.0000,89.9999,273.6698,180.0},
	{595.4993,-858.5517,1521.4063,0.0000,0.0000,95.6000,284.7350,0.0}
},
{//freez
	{-1536.6639,288.6366,2170.4938,0.0000,0.0000,89.2999,280.0000,0.0},
	{1393.2113,-288.6416,3845.2565,0.0000,0.0000,88.1999,255.2002,0.0},
	{1387.8266,-621.4118,3850.6628,0.0000,0.0000,-0.0000,173.2108,0.0},
	{610.8839,-857.8076,1521.4353,0.0000,0.0000,0.0000,182.8196,0.0}
}
};



new gHousesClassName[4][14]={"Эконом-класс","Комфорт-класс","Премиум-класс","Элитный-класс"};





/* -------------------PaintBall--------------------------------- */
new Float:SpawnPaintBall [2] [5] [4] ={
{
{2273.0403,-2501.7366,631.9078,277.3234}, // 1
{2273.2058,-2496.7681,631.9078,270.3818}, // 2
{2272.8953,-2490.8425,631.9078,256.1290}, // 3
{2282.7524,-2494.5891,631.9078,95.8615}, // 4
{2283.1716,-2499.8794,631.9078,111.5845} // 5
},
{
{2167.9688,-2457.9861,642.7878,111.5845}, // 1
{2161.9468,-2457.1448,642.7878,270.0843}, // 2
{2168.8865,-2460.7915,642.7878,92.6878}, // 3
{2161.6479,-2460.7373,642.7878,280.7224}, // 4
{2165.1829,-2457.9673,642.7878,177.6910} // 5
}
};





/*	{2273.0122, -2501.0286, 631.8141},
	{2275.9600, -2489.0017, 631.8141},
	{2281.2087, -2494.6096, 631.8141},
	{2167.9688, -2457.9861, 642.8156},
	{2162.5605, -2456.8374, 642.8156},
	{2164.8755, -2449.9299, 642.8156} // тут дальше уже другая хуйня */

static stock TotalPaintBall = 0;
static stock bool:PaintBallStatus = false;
static stock PaintBallKills[2]={0,...};

#define PTEAM_RED 1
#define PTEAM_BLUE 0

new PaintBallTime = (40 * 60);
/* -------------------Гонки----------------------------------- */



#define MAX_RACE 50
#define MAX_POINTS_RACE 300
#define CAR_RACE 0
#define CHECK_RACE 1
#define D_RACE 1887
#define dPerenos 4506
#define dPerenos2 4507
#define dPerenosDonate 4508
#define dPerenosFinish 4509
#define dActivatePerenos 4510
#define dActivatePerenos2 4511
#define D_INPUT_TABLE 5877
#define D_INPUT_TABLE_DELL 5878
#define D_INPUT_TABLE_DELL_LINE 5879
#define D_INPUT_TABLE_DELL_NO_LINE 5880
new Float:SpawnCarRacePos[MAX_RACE][4][4];
new Float:RaceCheckPointData[MAX_RACE][MAX_POINTS_RACE][3];
new COUNT_RACE_POINT = 0;
new RaceName[MAX_RACE][64];
new RaceLoop[MAX_RACE];
new TypeRace = 0;
new Text:race_back_text[5];
new PlayerText:race_text[MAX_PLAYERS][2];
new TimeRace= (50 * 60);
new bool:RaceStatus = false;
new RaceWinners[25][MAX_PLAYER_NAME];
//new RacePick[4];
new FTotalRace = 0;

new TotalRaces = 0;
new bool:is_create_race=false;
//new bool:is_create_station=false;
new bool:administrator_tp_race=false;

new vehicle_admin_race,vehicle_admin_race_color_first,vehicle_admin_race_color_second;

#define GANG_TEXT ""neworange"Склад", ""newgreen"Положить наркотики\n"newgreen"Положить патроны\n"newgreen"Положить металл\n"newgreen"Положить деньги\n"nwhite"Взять наркотики\nВзять патроны\nВзять металл\nВзять деньги"





/* -----------------------------Телепорты------------------------------ */

/* ---------------------------------------------------------------- */
new Float:PlayerAP[MAX_PLAYERS]={0.0, ...};
new AC_Armourtime[MAX_PLAYERS]={0, ...};
new AC_Healthtime[MAX_PLAYERS]={0, ...};
//

new Float:ServerHP[MAX_PLAYERS];
new Float:ServerArmour[MAX_PLAYERS];

new IntervalMP = 65535;

#define MAX_OBJECT_MOVED 75
enum object_moved_data
{
	moved_id,
	moved_modelid,
	Float:movedPosX,
	Float:movedPosY,
	Float:movedPosZ,
	Float:movedPosRotationX,
	Float:movedPosRotationY,
	Float:movedPosRotationZ,
	bool:status_moved
}
new moved_info[MAX_OBJECT_MOVED][object_moved_data] ={
	{-1,968,347.99, 1799.77, 17.37,0.0,90.0,33.5562700,false},//0
	{-1,968,127.7332,1964.9986,19.3235,0.0000,90.1000,0.0000,false},//1
	{-1,968,142.7588,1964.9564,19.1530,0.0000,-89.1999,0.0000,false},//2
	{-1,968,-1548.1198, 518.3745, -6.8495, 0.00, -89.49, 84.29,false},//3
	{-1,4100,-1527.7214,482.7460,10.6420,0.0000,0.0000,-38.3000,false},//4
	{-1,4100,-1527.7214,482.7460,7.8596,0.0000,0.0000,-38.3000,false},//5
	{-1,19353,1843.8203,-891.0100,1085.330,0.0000,-90.0000,0.0000,false},//6
	{-1,968,1544.69995117,-1630.80004883,13.10000038,0.0,270.0,270.0,false},//7
	{-1,971,1588.6079,-1638.0811,14.4063,0.0000,0.0000,-178.8999,false},//8
	{-1,1495,368.9363,160.8361,1024.8696,0.0000,0.0000,93.7999,false},//9
	{-1,1495,368.8348,162.3330,1024.8691,0.0000,0.0000,90.0000,false},//10
	{-1,971,-1626.8281,688.3017,7.9801,0.0000,0.0000,0.0000,false},//11
	{-1,971,-1635.6804,688.3226,7.9901,0.0,0.0,0.0,false},//12
	{-1,968, -1701.4432, 687.6422, 24.6105, 0.00, 88.70, -90.29,false},//13
	{-1,968,-1572.1890, 658.7903, 6.8367,0.00000000,90.00000000,90.18000000,false},//14
	{-1,968,-2436.8767, 495.4464, 29.7209,0.0, 90.0, 24.960,false},//15
	{-1,968,2238.1851, 2450.3584, 10.6600,0.00000000, 90.00000000, 89.76000000,false},//16
	{-1,968,54.0804,-1528.7838,4.8211,0.0000,89.1000,80.6999,false},//17
	{-1,968,53.5292,-1534.7294,4.9000,0.0000,88.8999,261.9964,false},//18
	{-1,968,1792.1484,823.4375,10.5000,0.0000,89.5951,179.9945,false},//19
	{-1,968,1802.5019,823.4698,10.4949,0.0000,90.2999,0.0000,false},//20
	{-1,19857,1642.079,-1630.958,1000.039,0.000,0.000,0.000,false},//21
	{-1,19857,1634.125,-1626.630,1000.039,0.000,0.000,89.999,false},//22
	{-1,968,2350.7351,2423.8439,10.3403,-2.2000,-89.9999,0.0000,false},//23
	{-1,968,-2057.50000000,-100.98999786,35.10000229,0.00000000,270.00000000,270.00000000,false},//24
	{-1,968,2615.1408,695.3475,-10.3818,0.3999,89.1999,-90.0000,false},//25
	{-1,968,2689.4135,703.0610,-10.3918,0.0000,-89.3999,0.0000,false},//26
	{-1,968,2203.98413, -15.49610, 25.43920,   0.00000, 90.00000, 62.00000,false},//27
	{-1,971,-2044.09997559,-102.66002655,-36.97000122,0.00000000,0.00000000,0.00000000,false},//28
	{-1,19313,134.9800, 1941.5500, 21.7700,0.0000,0.0000,0.0000,false},//29
	{-1,19313,285.98, 1822.27, 20.10,0.0000,0.0000,-90.0,false},//30
	{-1,8674,96.9028,1920.4405,16.3750,0.0000,-90.0000,-90.0000,false},//31
	{-1,968,1798.0000000,-1281.4100342,13.5400000,0.0000000,270.0000000,216.0000000,false},//32
	{-1,968,643.72919, -540.21442, 15.83900,   0.00000, -90.00000, 0.00000,false},//33
	{-1,968,671.66931, -602.12842, 15.83900,   0.00000, 90.00000, 90.00000,false},//34
	{-1,968,653.79980, -613.76398, 16.07900,   0.00000, -90.00000, 0.00000,false},//35
	{-1,19912,267.125,-1598.551,29.365,16.799,-0.099,-14.599,false},//36
	{-1,2909,1026.9291,-370.2124,76.6993,0.0000,0.0000,90.0000,false},//37
	{-1,2909,1026.9291,-370.2124,74.4300,0.0000,0.0000,90.0000,false},//38
	{-1,19802,-2412.3107,-499.7694,1400.0400,0.0000,0.0000,90.0000,false},//39
	{-1,19802,-2407.1540,-493.3491,1400.0759,0.0000,0.0000,90.0000,false},//40
	{-1,19802,-2407.1823,-504.7984,1400.0549,0.0000,0.0000,90.0000,false},//41
	{-1,968,415.845,2560.874,16.927,0.000,90.000,90.000,false},//42
	{-1,989, 1914.57373, -1019.58020, 35.88620,   0.12000, 0.00000, 180.00000,false},//43
	{-1,989, 1912.98755, -1024.78955, 35.88620,   0.00000, 0.00000, 180.00000,false},//44
	{-1,968,1903.5532,-1017.7365,35.4544,0.0000,-88.4999,80.0000,false},//45
	{-1,989,1804.3612,-1735.3735,14.1787,0.0000,0.0000,-164.0000,false},//46
	{-1,989, 1804.4226,-1724.5983,14.1387,0.0000,0.0000,-164.0000,false},//47
	{-1,968,1795.50818, -1725.17725, 13.19960,   0.00000, 90.00000, -90.00000,false},//48
	{-1,968, 1795.49292, -1739.38086, 13.19960,   0.00000, -90.00000, -90.00000,false},//49
	{-1,989, 1742.95850, -2169.15649, 14.23360,   0.00000, 0.00000, 18.00000,false},//50
	{-1,989, 1742.89282, -2163.63721, 14.23360,   0.00000, 0.00000, 18.00000,false},//51
	{-1,968, 1755.14697, -2173.49609, 13.04720,   0.00000, -90.00000, -90.00000,false},//52
	{-1,968, 1755.13733, -2159.26758, 13.04720,   0.00000, -90.00000, 90.00000,false},//53
	{-1, 989,1958.82739, -2147.64453, 14.19070,   0.00000, 0.00000, -73.00000,false},//54
	{-1,989,1964.49927, -2147.69727, 14.19070,   0.00000, 0.00000, -73.00000,false},//55
	{-1,968,1957.95105, -2156.16846, 13.11880,   0.00000, 90.00000, 0.00000,false},//56
	{-1,989, 2124.42114, -2208.20068, 14.17300,   0.00000, 0.00000, -207.00000,false},//57
	{-1,989, 2128.25781, -2204.25220, 14.17300,   0.00000, 0.00000, -208.00000,false},//58
	{-1,968, 2111.47363, -2201.87158, 13.19730,   0.00000, 90.00000, 44.00000,false},//59
	{-1,968, 2121.41626, -2191.70605, 13.19730,   0.00000, -90.00000, 44.00000,false},//60
	{-1, 988, 2172.23413, -2390.45264, 13.43270,   0.00000, 0.00000, -24.00000,false},//61
	{-1, 988, 2177.25220, -2392.67480, 13.43270,   0.00000, 0.00000, -24.00000,false},//62
	{-1, 988, 2185.74780, -2396.94824, 13.43270,   0.00000, 0.00000, -24.00000,false},//63
	{-1, 988, 2190.76855, -2399.20459, 13.43270,   0.00000, 0.00000, -24.00000,false},//64
	{-1, 988, 2182.02197, -2381.71875, 13.43270,   0.00000, 0.00000, 152.00000,false},//65
	{-1, 988, 2177.18701, -2379.14063, 13.43270,   0.00000, 0.00000, 152.00000,false},//66
	{-1, 988, 2195.11768, -2388.31885, 13.43270,   0.00000, 0.00000, 152.00000,false},//67
	{-1, 988, 2190.27319, -2385.75146, 13.43270,   0.00000, 0.00000, 152.00000,false},//68
	{-1, 968, 2158.67358, -2415.08008, 13.28990,   0.00000, 90.00000, -14.00000,false},//69
	{-1, 968, 2173.14722, -2418.71851, 13.28990,   0.00000, 90.00000, -14.00000,false},//70
	{-1, 968, 2172.17920, -2418.45361, 13.24990,   0.00000, -90.00000, -14.00000,false},//71
	{-1, 968, 2186.80493, -2422.18091, -13.26990,   0.00000, -90.00000, -14.00000,false},//72
	{-1, 985, 377.5700,2554.9140,17.7509,0.0000,0.0000,0.0000,false},//73
	{-1, 968, 54.119998,2072.909912,17.330001,0.000000,-90.000000,90.000000,false}//74
};

new Float:moved_pos_object[MAX_OBJECT_MOVED][6]={
	{347.99, 1799.77, 17.37,0.0000000,0.0000000,33.5562700},//0
	{127.7332,1964.9986,19.3135,0.0000,0.0,0.0},//1
	{142.7588,1964.9564,19.1130,0.0000,0.0,0.0000},//2
	{-1548.1198, 518.3745, 6.8496,0.00, -0.3899, 84.29},//3
	{-1527.7214,482.7460,13.6020,0.0000,0.0000,-38.3000},//4
	{-1527.7214,482.7460,4.9395,0.0000,0.0000,-38.3000},//5
	{1847.112,-891.010,1085.281,0.000,-90.000,0.000},//6
	{1544.69995117,-1630.80004883,13.10000039,0.00000000,0.00000000,270.00000000},//7
	{1588.6079,-1638.0811,7.6763,0.0000,0.0000,-178.8999},//8
	{369.0053,159.7984,1024.8696,0.0000,0.0000,93.7999},//9
	{368.8348,163.3530,1024.8691,0.0000,0.0000,90.0000},//10
	{-1626.8281,688.3017,1.8,0.0000,0.0000,0.0000},//11
	{-1635.6804,688.3226,1.8,0.0000,0.0000,0.0000},//12
	{-1701.4432, 687.6422, 24.6105,0.00, 0.0, -90.29},//13
	{-1572.1890, 658.7903, 6.8367,0.00000000,0.00000000,90.18000000},//14
	{-2436.8767, 495.4464, 29.7209,0.00000000, 0.00000000, 24.96000000},//15
	{2238.1851, 2450.3584, 10.6600,0.00000000, 0.00000000, 89.76000000},//16
	{54.0804,-1528.7838,4.8211,0.0000,0.0,80.6999},//17
	{53.5292,-1534.7294,4.9000,0.0000,0.0,261.9964},//18
	{1792.1484,823.4375,10.5000,0.0000,0.0,179.9945},//19
	{1802.5019,823.4698,10.4949,0.0000,0.0,0.0000},//20
	{1640.6086,-1630.9580,1584.0389,0.0000,0.0000,0.0000},//21
	{1634.1149,-1628.0611,1584.0389,0.0000,0.0000,89.9990},//22
	{2350.7351,2423.8439,10.3407,0.0,0.0,0.0000},//23
	{-2057.50000000,-100.98999786,35.10000229,0.00000000,0.00000000,270.00000000},//24
	{2615.1408,695.3475,10.3818,0.3999,0.0000,-90.0000},//25
	{2689.4135,703.0610,10.3918,0.0000,0.0000,0.0000},//26
	{2203.98413,-15.49610,25.43920,0.00000, 0.00000,62.00000},//27
	{-2051.9936,-102.6504,44.9937,0.0000,-90.0000,0.0000},//28
	{121.8900, 1941.5500, 21.7700,0.0000,0.0000,0.0000},//29
	{285.9800, 1833.4900, 20.1000,0.0000,0.0000,-90.0},//30
	{96.8924,1917.3903,16.3752,0.0000,-90.0000,-90.0000},//31
	{1798.0000000,-1281.4100342,13.5400000,0.0000000,0.0000000,216.0000000},//32
	{643.72919, -540.21442, 15.83900, 0.00000, 0.00000, 0.00000},//33
	{671.66931, -602.12842, 15.83900,   0.00000, 0.00000, 90.00000},//34
	{653.79980, -613.76398, 16.07900,   0.00000, 0.00000, 0.00000},//35
	{261.339,-1597.041,29.355,16.799,-0.099,-14.599},//36
	{1026.8945,-368.7877,79.1237,0.0000,60.0000,90.0000},//37
	{1027.0115,-369.1456,72.7206,0.0000,-80.0000,90.0000},//38
	{-2412.3107,-501.2594,1400.0400,0.0000,0.0000,90.0000},//39
	{-2407.1540,-494.8492,1400.0759,0.0000,0.0000,90.0000},//40
	{-2407.1823,-506.3084,1400.0549,0.0000,0.0000,90.0000},//41
	{415.845,2560.874,16.927,0.000,0.000,90.000},//42
	{1915.8149,-1014.8499,35.8763,0.1199,0.0000,180.0000},//43 -- vmeste
	{1911.5865,-1029.2005,35.8861,0.0000,0.0000,180.0000},//44 -- vmeste
	{1903.55322, -1017.73657, 35.45450,   0.00000, 0.00000, 80.00000},//45
	{1804.3251,-1739.4938,14.1787,0.0000,0.0000,-164.0000},//46
	{1801.7753,-1727.3880,14.1787,0.0000,0.0000,-71.4000},//47
	{1795.50818, -1725.17725, 13.19960,   0.00000, 0.00000, -90.00000},//48
	{1795.49292, -1739.38086, 13.19960,   0.00000, 0.00000, -90.00000},//49
	{1742.8677,-2174.0878,14.2335,0.0000,0.0000,18.0000},//50
	{1742.5881,-2159.2351,14.2335,0.0000,0.0000,18.0000},//51
	{1755.14697, -2173.49609, 13.04720,   0.00000, 0.00000, -90.00000},//52
	{1755.13733, -2159.26758, 13.04720,   0.00000, 0.00000, 90.00000},//53
	{1954.1484,-2147.7680,14.1906,0.0000,0.0000,-73.0000},//54
	{1969.3361,-2147.6804,14.1906,0.0000,0.0000,-73.0000},//55
	{1957.95105, -2156.16846, 13.11880,   0.00000, 0.00000, 0.00000},//56
	{2121.7785,-2211.6013,14.1730,0.0000,0.0000,-207.0000},//57
	{2131.5949,-2201.5083,14.1730,0.0000,0.0000,-208.0000},//58
	{2111.47363, -2201.87158, 13.19730,   0.00000, 0.00000, 44.00000},//59
	{2121.41626, -2191.70605, 13.19730,   0.00000, 0.00000, 44.00000},//60
	{2167.9038,-2388.5236,13.4327,0.0000,0.0000,-24.0000},//61
	{2181.4392,-2395.0971,13.4327,0.0000,0.0000,-24.0000},//62
	{2181.4406,-2395.0419,13.4327,0.0000,0.0000,-24.0000},//63
	{2195.0876,-2401.9150,13.4327,0.0000,0.0000,-24.0000},//64
	{2198.8093,-2387.4416,13.4327,0.0000,0.0000,-131.1000},//65
	{2189.9387,-2382.6054,13.4327,0.0000,0.0000,56.5999},//66
	{2186.2946,-2379.8044,13.4327,0.0000,0.0000,-125.0000},//67
	{2176.3757,-2374.7519,13.4327,0.0000,0.0000,62.2999},//68
	{2158.67358, -2415.08008, 13.28990,   0.00000, 0.00000, -14.00000},//69
	{2173.14722, -2418.71851, 13.28990,   0.00000, 0.00000, -14.00000},//70
	{2172.17920, -2418.45361, 13.24990,   0.00000, 0.00000, -14.00000},//71
	{2186.80493, -2422.18091, 13.26990,   0.00000, 0.00000, -14.00000},//72
	{383.000,2554.914,17.751,0.000,0.000,0.000},//73
	{54.119998,2072.909912,17.330001,0.000000,0.000000,90.000000}//74
};




//
#define ADMIN_KICK 0
#define ADMIN_BAN 1
#define ADMIN_MUTE 2
#define ADMIN_PM 3
#define ADMIN_WARN 4
#define ADMIN_JAIL 5
//
new gAdminTime[MAX_PLAYERS];
//
new gAdmin[MAX_PLAYERS][12];
//
#define IsAGaHelper(%0) 	gAdmin[%0][11]
#define IsAFullDostup(%0) 	gAdmin[%0][9]
//
enum porinfo
{
	Float:porPos[3],
	porCreat
}
new Float:DynamicPodarokInfo[250][porinfo];
new Float:PodarokInfo[110][porinfo] =
{
	{{1866.2776,-1604.3927,13.5391},-1},
	{{1814.5684,-1787.9949,13.4401},-1},
	{{1899.3964,-1976.2174,13.4399},-1},
	{{2065.4348,-1899.6436,13.4442},-1},
	{{2197.3042,-1855.2643,13.3267},-1},
	{{2313.6838,-1795.1702,13.4699},-1},
	{{2407.0701,-1954.1401,13.4406},-1},
	{{2274.1104,-2103.2578,13.4973},-1},
	{{2177.1252,-2160.6355,13.4378},-1},
	{{1941.1720,-2140.8835,13.4478},-1},
	{{1482.3195,-2325.6230,13.4409},-1},
	{{1661.6312,-1978.0310,23.7100},-1},
	{{1512.1938,-1658.8248,13.4357},-1},
	{{1222.8649,-1697.8893,13.4395},-1},
	{{1063.3287,-1564.4937,13.4395},-1},
	{{967.8336,-1808.8470,14.0392},-1},
	{{670.1074,-1421.6511,14.6103},-1},
	{{583.8209,-1309.3801,13.7937},-1},
	{{300.5122,-1360.0142,14.0718},-1},
	{{194.8382,-1644.4232,14.0252},-1},
	{{220.7997,-1775.0699,3.8997},-1},
	{{654.8619,-1857.2825,5.2646},-1},
	{{363.6814,-2043.7883,7.6767},-1},
	{{832.4582,-2058.2939,12.7593},-1},
	{{333.6727,-1520.2332,35.7631},-1},
	{{459.7726,-1522.1858,30.2806},-1},
	{{775.7328,-1412.9839,13.4245},-1},
	{{1183.7593,-1287.9641,13.4399},-1},
	{{990.7426,-1133.5524,23.7192},-1},
	{{757.9119,-1146.1381,22.6154},-1},
	{{690.0941,-1128.2615,16.7324},-1},
	{{1025.8206,-974.4745,42.3914},-1},
	{{1439.4906,-963.5345,36.1676},-1},
	{{1483.8202,-1011.8369,26.7372},-1},
	{{1971.6509,-1177.9795,19.9193},-1},
	{{2409.0242,-1391.9742,24.1428},-1},
	{{2683.8762,-1414.5601,30.3843},-1},
	{{2586.3250,-1249.4274,46.4436},-1},
	{{2802.6338,-1899.1608,10.9829},-1},
	{{2933.0454,-1322.6327,10.6862},-1},
	{{2494.3455,-2177.5037,13.4812},-1},
	{{1974.2274,-1674.5240,15.8614},-1},
	{{822.2839,-1353.1713,13.4293},-1},
	{{65.8857,-1533.7729,5.0430},-1},
	{{452.4081,-1233.7101,49.0372},-1},
	{{1001.4413,-791.0386,100.4963},-1},
	{{1300.8093,-1240.1006,13.4411},-1},
	{{1023.7307,-1369.5272,13.4544},-1},
	{{744.0558,-880.7582,42.8126},-1},
	{{714.4377,-571.5151,16.2290},-1},
	{{261.8877,-365.6202,8.9916},-1},
	{{143.8467,-131.9939,1.4706},-1},
	{{495.1965,209.4183,12.4406},-1},
	{{1343.1210,292.7504,19.4472},-1},
	{{1554.8766,29.5960,24.0460},-1},
	{{2275.3826,31.5334,26.3556},-1},
	{{2536.9907,-17.8911,26.5074},-1},
	{{1574.1636,816.5991,8.7627},-1},
	{{1186.2969,1178.7659,8.5832},-1},
	{{1071.7129,1382.2140,10.8203},-1},
	{{1302.0533,1650.0642,19.8637},-1},
	{{1394.0889,1957.2930,10.8203},-1},
	{{1551.3290,2290.4065,10.8203},-1},
	{{1519.1072,2376.7710,10.8203},-1},
	{{1371.4966,2611.3972,10.8203},-1},
	{{1685.7153,2825.1113,10.8203},-1},
	{{2235.4685,2780.5583,10.8203},-1},
	{{2628.2214,2083.9587,10.8176},-1},
	{{2778.1863,1732.5300,11.3926},-1},
	{{2817.2224,1308.1560,10.9609},-1},
	{{2563.7805,1064.5363,10.8203},-1},
	{{2095.9702,1186.2184,10.8203},-1},
	{{1874.4264,978.4785,10.8203},-1},
	{{1816.7653,1521.9406,6.8753},-1},
	{{2034.7957,1701.6351,10.8203},-1},
	{{2160.2742,2007.1144,10.8203},-1},
	{{2078.5476,2299.5012,10.7913},-1},
	{{2019.9073,2493.1055,10.8203},-1},
	{{2273.3745,2520.7566,10.8203},-1},
	{{2419.2251,2346.9021,10.8203},-1},
	{{2616.3193,2328.4590,10.8203},-1},
	{{2615.3694,1972.9207,10.8203},-1},
	{{2558.0049,1765.8701,11.0312},-1},
	{{2419.6987,1705.2953,10.8203},-1},
	{{2122.1624,1522.2683,10.8203},-1},
	{{-2018.4504,-77.7795,35.3203},-1},
	{{-1928.3250,182.4187,26.2734},-1},
	{{-1967.1050,451.4974,35.1719},-1},
	{{-1807.3837,542.7021,35.5732},-1},
	{{-1480.8765,716.8118,6.9922},-1},
	{{-1493.5182,920.0928,7.1875},-1},
	{{-1637.3629,1305.9678,7.1797},-1},
	{{-2070.6252,1328.5588,7.1875},-1},
	{{-2471.3440,1368.1746,7.1797},-1},
	{{-2628.4014,1403.3033,7.0938},-1},
	{{-2681.1382,1262.5728,55.6125},-1},
	{{-2164.3296,1065.8040,55.8443},-1},
	{{-1889.4113,827.7252,35.1719},-1},
	{{-1982.3630,883.6326,45.2031},-1},
	{{-1973.9037,1095.5693,55.7188},-1},
	{{-2690.6353,574.9070,14.7595},-1},
	{{-2228.3772,575.8947,35.1719},-1},
	{{-2165.3872,252.0205,35.3203},-1},
	{{-2138.5408,-76.9015,35.3203},-1},
	{{-1876.4781,-129.0152,11.9051},-1},
	{{-1749.9702,-120.1685,3.5547},-1},
	{{-1788.5056,-279.8779,22.6495},-1},
	{{-1659.3091,-554.8605,11.5078},-1},
	{{-1653.7467,-767.7773,43.6878},-1},
	{{-1244.5432,-762.3286,64.4969},-1}
};
//
#define MAX_RENT_VEHICLES 187
enum RENT_VEHICLE_DATA
{
	V_RENT_PLAYER,
	V_RENT_VEHICLE,
	Text3D:V_RENT_TEXT,
	V_RENT_MODEL,
	Float:V_RENT_POS_X,
	Float:V_RENT_POS_Y,
	Float:V_RENT_POS_Z,
	Float:V_RENT_POS_A,
	V_RENT_POS_COLOR_1,
	V_RENT_POS_COLOR_2
}
new V_RENT[MAX_RENT_VEHICLES][RENT_VEHICLE_DATA] =
{
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 527, 2650.2236, 1074.6016, 10.4665, 360.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 526, 2632.1157, 1074.6016, 10.4665, 360.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 527, 2642.8000, 1074.6016, 10.4665, 360.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 527, 2639.3718, 1074.6016, 10.4665, 360.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1593.6954, 1832.7589, 10.2700, 180.5820,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1595.8210, 1832.8043, 10.3100, 180.5820,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1597.9672, 1832.8949, 10.3100, 180.5820,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1600.0338, 1832.6292, 10.2700, 180.5820,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1602.2183, 1832.6133, 10.2700, 180.5820,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1604.3276, 1832.6333, 10.2700, 180.5820,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1606.4049, 1832.9114, 10.3100, 180.5820,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1216.0262, -1426.8013, 12.8806, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1217.4323, -1426.7660, 12.8806, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1218.7133, -1426.7719, 12.8806, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1219.9784, -1426.6898, 12.8806, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1222.7548, -1426.7323, 12.8806, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 586, 1214.6040, -1426.8230, 12.8806, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1509.6296, -1280.8462, 14.0600, 137.3464,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1510.4818, -1281.5426, 14.0600, 137.3464,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1511.3479, -1282.1930, 14.0600, 137.3464,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 1512.3319, -1282.9500, 14.0600, 137.3464,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 479, 2398.6523, -1807.9036, 13.2337, 358.8433,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 496, 2390.9636, -1808.1459, 13.2337, 358.8433,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 517, 2383.2468, -1808.0560, 13.2337, 358.8433,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 516, 2375.3943, -1808.0653, 13.2337, 358.8433,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 479, 2777.5156, -2105.9504, 11.2718, 40.2467,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 479, 2771.6145, -2111.0305, 11.2718, 40.2467,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 526, 2765.5601, -2116.0679, 11.2718, 40.2467,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 517, 2759.6167, -2120.8315, 11.2718, 40.2467,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 518, 2752.5469, -2111.5220, 12.0515, 269.8227,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 422, 667.6203, -543.1777, 16.2203, 89.3185,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 422, 667.6231, -546.2809, 16.2203, 89.3185,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 422, 667.5521, -549.3002, 16.2203, 89.3185,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 652.4126, -588.9568, 15.8675, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 653.6716, -588.8953, 15.8675, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 655.0917, -588.9109, 15.8675, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, 656.5114, -588.8748, 15.8675, 0.0000,-1,-1},//hospital
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 1280.7815, -1292.0701, 13.1210, 90.0676,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 1280.8137, -1295.7914, 13.1210, 90.0676,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 1280.8157, -1299.6920, 13.1210, 90.0676,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 526, 1281.2010, -1303.5446, 13.1210, 90.0676,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 1280.8484, -1307.4536, 13.1210, 90.0676,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 526, 1280.9872, -1310.9534, 13.1210, 90.0676,-1,-1},
 	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 1392.1981, 385.5167, 19.4100, 246.3684,-1,-1},//villeage
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 1390.7390, 382.2040, 19.4100, 246.3684,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 546, 1389.3024, 378.8274, 19.4100, 246.3684,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 546, 1387.8916, 375.5937, 19.4100, 246.3684,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 546, 1386.3928, 372.3194, 19.4100, 246.3684,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 1393.5696, 388.9565, 19.4100, 246.3684,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 1394.9910, 392.3134, 19.4100, 246.3684,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 546, 2475.6345, -1526.8542, 23.6052, 359.0000,-1,-1}, //getto
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 546, 2478.8823, -1526.9244, 23.6052, 359.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 2481.9150, -1526.8684, 23.6052, 359.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 546, 2484.2478, -1517.7936, 23.6052, 181.9089,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 2487.3140, -1517.7598, 23.6052, 181.9089,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 547, 2490.3770, -1517.8289, 23.6052, 181.9089,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,552.2256,-1263.0308,16.8377,215.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,549.2261,-1265.1127,16.8615,215.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,546.2819,-1267.1350,16.8603,216.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,543.2506,-1269.3328,16.8853,212.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,540.3386,-1271.8612,16.9312,218.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,537.4234,-1274.1729,16.8892,218.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,534.7526,-1276.3138,16.8918,219.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,531.9340,-1278.4873,16.8892,218.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,565.7926,-1283.7555,17.0098,103.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,564.8121,-1279.5139,17.0102,103.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,563.9153,-1275.2931,17.0073,102.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,563.3939,-1271.1617,16.9935,103.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 540,562.5081,-1267.2034,16.9659,103.0,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 487, 1875.0159, -2270.8831, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 487, 1875.0159, -2286.0461, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 487, 1875.0159, -2302.0259, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 487, 1859.6726, -2292.7288, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 487, 1859.6726, -2277.2041, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 469, 1884.0103, -2354.0991, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 469, 1884.0103, -2366.1475, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 469, 1884.0103, -2378.2358, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 469, 1870.8276, -2372.3872, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 469, 1870.8276, -2359.9214, 14.4766, -90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 454, 2291.2539, 508.6360, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 454, 2302.7437, 508.6360, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 454, 2314.6931, 508.6360, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 454, 2326.7314, 508.6360, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 2369.4595, 507.4760, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 2360.0398, 507.4760, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 2350.1580, 507.4760, 0.6427, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 454, 131.2708, -1810.0532, 0.5467, 0.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 454, 119.9809, -1810.0532, 0.5467, 0.0000, -1,-1},
	
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 127.4330, -1822.8882, 0.5487, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 127.4330, -1834.5507, 0.5487, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 127.4330, -1845.9894, 0.5487, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 484, 127.4330, -1858.3602, 0.5487, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 558, 2148.7693, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 558, 2145.5740, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 558, 2139.1221, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 558, 2135.9407, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 541, 2126.3281, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 541, 2119.9055, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 541, 2116.7261, 1398.1857, 10.3921, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 2116.8022, 1409.0896, 10.5221, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 2110.3604, 1409.0831, 10.5221, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 2107.2341, 1409.0896, 10.5221, 360.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 560, 2216.1982, 2034.6406, 10.3637, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 560, 2216.1982, 2038.1283, 10.3637, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 560, 2216.1982, 2041.7065, 10.3637, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 560, 2216.1982, 2045.4866, 10.3637, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 496, 2246.2927, 2046.3232, 10.4237, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 496, 2246.2927, 2042.3247, 10.4237, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 496, 2246.2927, 2038.5048, 10.4237, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 2235.0664, 2038.6821, 10.4637, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 2235.0664, 2042.5248, 10.4637, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 426, 2235.0664, 2050.1907, 10.4637, 90.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, 1731.6844, 1885.4795, 10.3846, 90.5101, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, 1731.6948, 1890.8372, 10.3846, 90.5101, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, 1731.6909, 1893.6300, 10.3846, 90.5101, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, 1731.2958, 1899.5796, 10.3846, 90.5101, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, 1731.2533, 1902.0092, 10.3846, 90.5101, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, 1731.2714, 1905.6315, 10.3846, 90.5101, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, 1741.6327, 1885.7103, 10.7886, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, 1741.6398, 1888.6401, 10.7886, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, 1741.6577, 1895.1151, 10.7886, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, 1741.7596, 1897.8267, 10.5856, 270.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, 2080.5874, 2468.3430, 10.7266, 0.0190, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, 2084.7898, 2468.3430, 10.7266, 0.0190, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, 2088.9299, 2468.3430, 10.7266, 0.0190, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, 2082.2666, 2480.2153, 10.7266, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, 2078.1626, 2480.2153, 10.7266, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, 2073.9431, 2480.2153, 10.7266, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, 2069.8408, 2480.2153, 10.7266, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, 2057.1904, 2480.2153, 10.7266, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, 2053.1138, 2480.2007, 10.7266, 180.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 422, -30.8412, 1166.7690, 19.3222, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 422, -34.2425, 1166.7690, 19.3222, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 422, -37.8182, 1166.7690, 19.3222, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 527, -44.6972, 1166.7690, 19.3222, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 527, -48.3838, 1166.7690, 19.3222, 360.0000, -1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 1838.0161, -1870.9659, 13.1197, 360.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 543, 1834.8230, -1871.1737, 13.1197, 360.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 549, 1844.3335, -1871.2560, 13.1197, 360.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 549, 2161.2803, -1192.2465, 23.5259, 90.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 543, 2161.4214, -1187.3746, 23.5259, 90.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 2161.5625, -1182.4960, 23.5259, 90.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 589, 2161.6877, -1177.5209, 23.5259, 90.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 549, 196.5415, -155.3585, 1.2498, 180.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 543, 199.4011, -155.4082, 1.3298, 180.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 218.6169, -173.2578, 1.2898, 90.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 549, 2760.3621, 1432.2369, 10.2147, 270.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 543, 2760.4126, 1429.2205, 10.2147, 270.0000,-1,-1},//hospital
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 542, 2760.6042, 1426.3209, 10.2147, 270.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2038.4265, -80.9379, 34.8424, 90.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2038.3594, -82.6853, 34.8424, 90.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2038.4011, -84.2465, 34.8424, 90.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2038.3407, -85.8074, 34.8424, 90.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2679.0906, 576.9824, 14.1563, 180.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2680.5342, 577.0114, 14.1563, 180.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2681.9968, 577.0459, 14.1563, 180.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 462, -2683.5112, 577.0217, 14.1563, 180.0000,-1,-1},
	{INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -1989.9163, 275.5569, 35.1662, 267.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -1990.0594, 272.2518, 35.1662, 267.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -1990.3448, 269.0416, 35.1662, 267.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, -1990.7004, 263.9048, 34.8462, 267.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, -1990.9237, 261.2656, 34.8462, 267.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, -1991.3481, 255.2821, 34.8462, 264.0474 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, -1991.6816, 252.6617, 34.8462, 264.0474 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, -1992.7944, 248.2620, 34.8462, 264.0474 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, -1993.0652, 245.8304, 34.8462, 264.0474 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -2585.8699, 335.4568, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -2585.8457, 331.9096, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, -2585.9548, 328.1809, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, -2585.9983, 324.8647, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, -2585.9209, 321.3739, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, -2585.9912, 317.6576, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, -2586.1077, 314.0794, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, -2586.0518, 310.8368, 4.9638, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -2493.7048, 795.6027, 35.2550, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 400, -2493.6475, 792.7779, 35.2550, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, -2493.6985, 790.0810, 35.1350, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 401, -2493.7954, 787.2208, 35.1350, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, -2493.5164, 784.3647, 34.7750, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 404, -2493.6309, 781.4155, 34.7750, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, -2459.8179, 779.5052, 34.7350, 90.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 410, -2459.4915, 786.4857, 34.7350, 90.0000,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 409, -1764.7040, 956.2208, 24.4421, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 409, -1752.3950, 956.3077, 24.4421, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 409, -1760.8821, 947.5552, 24.4421, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 409, -1750.7251, 947.5801, 24.4421, 270.0000 ,-1,-1},
    {INVALID_PLAYER_ID, INVALID_VEHICLE_ID, Text3D:-1, 409, -1740.4351, 955.3890, 24.4421, 258.6977 ,-1,-1}
};

/*new plain_vehicle[42]={-1,...};
new Text3D:plain_text[42]={Text3D:INVALID_3DTEXT_ID,...};

new player_vehicle[42]={-1,...};*/
//
new TotalHouse = 1;
//
new SELECT_SERVER = 1;
new BONUS_PAYDAY;
//
new Float:MP[3] ={0.0,0.0,0.0};
new MpData[2]={0,0};
new COUNTMP[2]={0,0};

#define FLY_HACK 1
#define SPEED_HACK 2
#define AIRBREAK 3
#define TELEPORT 4
#define CARSHOT 5
#define CAR_AIRBREAK 6
#define ANTI_FREEZE 7
new SpeedLimit[212] ={100,100,110,75,90,105,65,85,60,105,90,130,105,90,65,115,100,200,85,100,95,100,95,65,80,200,110,105,105,120,100,100,100,90,105,200,100,100,100,105,100,100,100,100,90,105,100,200,100,200,200,115,100,100,100,100,100,100,100,100,200,125,90,125,200,200,95,95,125,200,100,100,100,100,
100,105,200,115,90,100,110,60,100,95,100,100,100,200,200,95,100,100,95,100,125,110,105,200,85,100,95,200,125,125,100,95,110,105,100,70,70,200,200,200,100,100,105,105,105,200,200,130,130,125,100,100,100,100,110,100,60,80,80,105,105,95,110,150,150,110,100,120,105,100,100,100,
100,100,200,100,100,105,100,200,100,95,100,100,105,110,105,100,110,200,200,105,105,110,95,200,200,75,80,100,70,105,100,200,100,100,100,125,95,70,200,100,125,105,100,105,200,200,200,200,200,100,110,110,110,100,100,90,110,110,110,110,200,200,200,100,200,200
};

//
new PlayerIp[MAX_PLAYERS][32+1];
new bot_ip_vps[5][32];

stock IsBotServer(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	GetPlayerIp(playerid,PlayerIp[playerid], 32);
	return (!strcmp(PlayerIp[playerid],PROJECT_IP));
}
new CountBusiness = 0;

#define D_ADMIN_PRISON_TIME        14999
#define D_ADMIN_KICK_REASON        15000
#define D_ADMIN_WARN_REASON        15001
#define D_ADMIN_BAN_REASON         15002
#define D_ADMIN_MUTE_TIME_REASON   15003
//
#define SCM SendClientMessage
//
new player_is_authorized[MAX_PLAYERS];
#define IsPlayerAuthorized(%0)             player_is_authorized[%0]
#define SetPlayerAuthorized(%0,%1)         player_is_authorized[%0] = %1
#define PLAYER_OFFLINE         	0
#define PLAYER_ONLINE         	1
//
new re_choose[MAX_PLAYERS][2];
new re_tick[MAX_PLAYERS]={0,...};
new PlayerText:ReconPlayerText[MAX_PLAYERS][27],Text:ReconText[2];
//

/********** [ Кости *********/
#define D_SET_BET (932)
#define MIN_IGROKOV (2)
#define MIN_STAVKA 1000
#define MAX_STAVKA 1000000
#define MAX_TABLES_DICE 3
enum Casino_TD_Data
{
	Text:Casino_TD_Set_Bet,
	Text:Casino_TD_Dice,
	Text:Casino_TD_Exit,
	Text:Casino_TD_TableNicks[MAX_TABLES_DICE],
	Text:Casino_TD_TableScore[MAX_TABLES_DICE],
	Text:Casino_TD_TableName[MAX_TABLES_DICE],
	Text:Casino_TD_Box,
	Text:Casino_TD_Enum,
	Text:Casino_TD_Lines[5],
	Text:Casino_TD_Modeled[2]
}
new Casino_TD[Casino_TD_Data];
new PlayerText:PTD_DiceStat[MAX_PLAYERS]={PlayerText:-1,...};
#define CASINO_TEXT_STRING "{F0BF11}Стол №%d\n\n{FFFFFF}Крупье: {4487F2}   %s\n\n{FFFFFF}Игрок 1:{37A65F}   %s\n{FFFFFF}Игрок 2:{37A65F}   %s\n{FFFFFF}Игрок 3:{37A65F}   %s\n{FFFFFF}Игрок 4:{37A65F}   %s\n{FFFFFF}Игрок 5:{37A65F}   %s\n\n{FFFFFF}Ставка: {33AA33}%d$\n{FFFFFF}Банк: {33AA33}%d$\n\n{FFFFFF}Статус: {EB3F36}%s\n{9BF2EA}Для начала игры нажмите {FFFFFF}'F'\n"
enum InfoDice_
{
	dice_gamer[5],
	dice_score[5],
	dice_stavka,
	dice_bank,
	dice_crup,
	bool:dice_game_start,
	dice_area,
	Text3D:dice_text,
	dice_game_start_time,
	dice_game_start_timer
}
new InfoDice[MAX_TABLES_DICE][InfoDice_];
new Casino_Flag[MAX_PLAYERS][6];
#define show_casino_td 0
#define select_casino_table 1
#define casino_crup 2
#define casino_bet_cash 3

//////////////////////////////////////////////////////////////////

#define D_FARM_PANEL 4534

new Text:AnimDraw;
// Dialogs
#define dSafe 9900
#define dSafePutMoney 9901
#define dSafeGetMoney 9902
#define dSafePutDrug 9903
#define dSafeGetDrug 9904
#define dSafeCodeChange 9905
#define dSafeCodeChange2 9906
#define dSafeAction 9907
#define dBintName 9915
#define dDrink 9918
#define dBuyBurger 9919
#define dBuyBurger2 9920
#define dBuyFood 9921
#define dBuyFood2 9922
#define dShop 9923
#define dBusiness 9924
#define dBusinessBank 9925
#define dBusinessEnter 9926
#define dBusinessPut 9927
#define dBusinessGet 9928
#define dPolice 9929
#define dDutyGun 9930
#define dCode 9319
#define dEnterCode 9320
#define dRandom 9321
#define dError 9322
#define dChangeCode 9323
#define dDonate 9020
#define dRent 9326
#define dRemont 9327
#define dBuyInterior 9328
#define dChangeName 9329
#define dStat 9330
#define dHelperStat 9331
#define dMafiaSklad 9332
#define dMafiaPut 9333
#define dMafiaGet 9334
#define dMafiaMoneyPut 9335
#define dMafiaMoneyGet 9336
#define dBuySkin 9337
#define dArendator 9338
#define dArendatorAction 9339
#define dArendatorType 9340
#define dArendatorSettings 9341
#define dZhitelSettings 9342
#define dRentSelectPlata 9343
#define dRentGarage 9344
#define dRentMenu 9345
#define dRentOplata 9346
#define dBizList 9347
#define dOffHelper 9381
#define dSetOffHelper 9382
#define dRank 				9383
#define dKazna 				9384
#define dKaznaPut 			9385
#define dKaznaGet 			9386
#define dNalog 				9387
#define dZp 				9388
#define dZp2				9389
#define dPaintBall 			9390
#define dRace 				9392
#define dMakeGun 			9393
#define dMakeGun2 			9394
#define dPatronGet 			9395
#define dPatronPut 			9396
#define dSellPatr 			9397
#define dSelectFrac 		9398
#define dSelectPatr 		9399
#define dMail 				9400
#define dMailAction 		9401
#define dInv 				9502
#define dAccesories 		9503
#define dSelectAccesories 	9504
#define dSu 				9505
#define dSu2 				9506
#define dBuyRoom 			9508
#define dEnterRoom 			9509
#define dFlatMenu 			9510
#define dFlatOplata 		9511
#define dSubleader 			9512
#define dLeaderMenu			9513
#define dSpawnCars 			9514
#define dLeaderRank 		9515
#define dUnit 				9516
#define dCreateUnit 		9517
#define dEditUnit 			9518
#define dEditNameUnit 		9519
#define dMakeUnitLeader 	9520
#define dGunPD 				9522
#define dKrup 				9523
#define dAutoTest1 			9525
#define dAutoTest2 			9526
#define dAutoTest3 			9527
#define dAutoTest4 			9528
#define dAutoTest5 			9529
#define dAutoExam1 			9530
#define dAutoExam2 			9531
#define dAutoExam3 			9532
#define dAutoTest6 			9533
#define dGiveLic 			9534
#define dTakeLic 			9535
#define dExamResult 		9536
#define dSpy        		9538
#define dSpy2       		9540
#define dTaxi 				9541
#define dTaxiAction 		9542
#define dStartTaxi 			9543
#define dArendaTaxi 		9544
#define dEndTaxi 			9545
#define dRieltor1           9546
#define dHeal               9457
#define dDerby              9458
#define dDaiving            9459
#define dBuyFuel            9460
#define dAmmo              	9461
#define dAmmo2              9462
#define dBankMenu           9463
#define dATMGet             9464
#define dATMPut             9465
#define dATMPay             9466
#define dATMPay2            9467
#define dStartJobArmy       9468
#define dBusRent            9469
#define dBusRoute           9470
#define dBusPrice           9471
#define dWanted				9472
#define dVipAd              9473
#define dVipSend            9474
#define dGunWork            9475
#define dBanner             9476
#define dBannerText         9477
#define dEPLAYER            9478
#define dTarget             9479
#define dSim             	9450
#define dFloor              9451
#define dFlatScore          9452
#define dFlatUi          	9453
#define dFlatUi2          	9454
#define dFlatUi3            9455
#define dFlatUi0            9456
#define dFlatUi4            9488
//#define dGraff              9489
#define dRieltor2           9490
#define dBankCheck          9491
#define dCheckEditPin       9492
#define dCheckEditPin2      9493
#define dCheckGet           9494
#define dCheckPut           9495
#define dEditCheck          9496
#define dCheckBankCheck     9497
#define dBankCheckCreate    9498
#define dBankNazad          9499
#define dSendBankCheck      9500
#define dSendBankCheck2     9501
#define dModelPhone         9802
#define dCreateMPAdm        9803
#define dRepair             9804
#define dStartMehJob        9805
#define dStartMehJob2       9806
#define dFContract          9807
#define dRefill          	9808
#define dGiveLic2           9809
#define dTDFuel             9810
#define dReport             9811
#define dReportEdit         9812
#define dProdRent           9813
#define dProdGet           	9814
#define dProdPut            9815
#define dEditRank           9816
#define dEditRankStep1      9817
#define dEditRankStep2      9818
#define dElka               9819
#define dElkaDelete         9820
#define dElkaHome           9821
#define dElkaEdit           9822
#define dStopLoad           9823
#define dDrugsGet 			9824
#define dDrugsPut 			9825
#define dStore 				9826
#define dStorePut        	9867
#define dStorePutGun       	9868
#define dStoreGet        	9869
#define dStoreSkin          9870
#define dWashRoom           9871
#define dBusinessProd       9872
#define dBusinessProd2      9873
#define dBusinessBank2      9874
#define dBankReturn         9875
#define dBusinessGet2      	9876
#define dGunFBI 			9877
#define dGunAP 				9878
#define dExamResult1 		9879
#define dStartJobPolice     9880
#define dExamResult2     	9881
#define dBusinessUpgrade    9882
#define dSetWalk            9883
#define dSetAnim            9884
#define dEditVehicle        9885
#define dModelEdit        	9886

#define dEditBl	        	8600
#define dEditBlParam	   	8601
#define dBlMenu	   			8602
#define dBlDelete	   		8603
#define dBlInsert1	   		8604
#define dBlAllList	   		8605
#define dBlInsert2	   		8606
#define dAdmCommun	   		8607


#define d_carjack           8500
#define d_report            9887
#define d_hitman_panel      9888
#define d_hitman_panel_show 9889
#define d_hitman_panel_show_select  9890
#define d_hitman_panel_show_wait 9891
#define d_enter_to_tune     9893
#define d_sucess_camera_0   9994
#define d_sucess_camera_1   9995
#define d_sucess_camera_2   9996
#define d_sucess_camera_3   9997
#define dShowAll 9892
#define dOr 9792
#define dOr2 9793
#define dCreateRace 9794
#define dGoTazer 9795
#define RENAME_DIALOG 4555 // + 1 sled
#define dTuningMenu 9796
#define dTuningSucces 9797
#define dTuningSucces2 9798
#define dTuningSucces3 9799
#define dTuningSucces4 9800
#define dUAdmin 9801
#define dGunRIM 9103
#define dTempMember 9104
#define	BUYT_SERF 9105
#define	D_YPRAV_SERF 9106
#define d_select_football_team 9107
#define d_select_football_position 9108
#define dGiveGunTD 9109
#define dStoreSkinDelete 9110
#define BED_DIALOG 9111
#define INFO_DIALOG 9112
#define DIALOG_CASINO_SET 9113
#define dContactAdd 9114
#define dContact 9115
#define dSendSMS 9116
#define dContactChangeNumber 9117
#define dContactChangeName 9118
#define dContactSelect 9119
#define dRentBike 9120
#define dQuestShow 9121
#define dRegistrationPass 9122
#define dQuestShowList 9123
#define dQuestShowStepOne 9124
#define dQuestShowStepTwo 9126
#define dQuestShowStepThree 9127
#define dQuestShowStepFour 9128
#define dQuestShowStepFive 9129
#define dQuestShowStepSix 9130
#define dCreateStation 9131
#define dStationDelete 9132
#define dSAP 9134
#define dBuyCarSalon 9135
#define dObjectList 9136
#define dObjectListEdit 9137
#define dTrunk 9138
#define dTrunkPut 9139
#define dTrunkGet 9140
#define dTrunkGunPut 9141
#define dTrunkGunGet 9142
#define dTrunkGunGet2 9143
#define dZombieReg 9144
#define dSetFractionMessage 9145
#define dRentFlyBall 9146
#define dCarSellsRent 9147
#define dBuyCarSells 9148
#define dBuyCarSells2 9149
#define d_report2 9150
#define 	dBankMainMenu 					9151//Основное меню (список счетов)
#define 	dBankMenu_OptionList 			9152//Меню, отображающееся при выборе счёта (сделать вклад/удалить счёт и т.п.)
#define 	dBankMenu_WithdrawMoney 		9153//Меню снятия денег со счёта
#define 	dBankMenu_DepositMoney			9154//Меню пополнения счёта
#define 	dBankMenu_TransferMoney			9155//Меню перевода денег на другой счёт
#define 	dBankMenu_DeleteAccount			9156//Меню удаления аккаунта
#define 	dBankMenu_DeleteAccount_Money	9157//Меню, в котором указывается счёт, на который будут перенесены деньги с удаляемого аккаунта (если денег не было - диалог не показывается. Если других счетов нет - деньги выдаст наличкой)

#define 	dContributionMenu				9158//Основное меню (список вкладов)
#define 	dContributionMenu_Create		9159//Меню создания вклада
#define 	dContributionMenu_NewMoney		9160//Меню, в котором указывается сумма вклада
#define 	dContributionMenu_NewDays		9161//Меню, в котором указывается число дней
#define 	dContributionMenu_NewContribut	9162//Меню предварительной информации о вкладе перед созданием (какая сумма, на сколько дней, какой процент и какая сумма будет в итоге)
#define 	dContributionMenu_Return		9163//Меню возврата вклада (если меньше 30 дней прошло - вернёт первоначальную сумму. Дальше - с процентами)

#define BD_ACCOUNT_ID p_info[playerid][pID] // Замени на свою переменную, в которой хранится ID

#define MAX_BANK_ACCOUNTS 10 // Максимальное число банковских счетов у одного игрока
#define MAX_CONTRIBUTIONS 10 // Максимальное число вкладов для одного игрока

#define MAX_CHEAT_TIME 	4
#define MAX_WARNS 		1

#define GetBankPercent(%0) floatround(%0, floatround_round)
enum e_BANK_INFO
{
	b_acc_number[MAX_BANK_ACCOUNTS],
	b_acc_money[MAX_BANK_ACCOUNTS],

	cb_id[MAX_CONTRIBUTIONS],
	cb_money[MAX_CONTRIBUTIONS],
	cb_days[MAX_CONTRIBUTIONS],
	cb_unixtime[MAX_CONTRIBUTIONS],
	Float:cb_percent[MAX_CONTRIBUTIONS],
};
new gBankInfo[MAX_PLAYERS][e_BANK_INFO];

stock AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z)
{
	new Float:trunkpos[5][4];
	trunkpos[2][0]=x;
	trunkpos[2][1]=y;
	trunkpos[2][2]=z;
	trunkpos[2][3]=a;
	trunkpos[2][0]-=1.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]-=1.5*floatcos(-trunkpos[2][3],degrees);
	trunkpos[0]=trunkpos[2];
	trunkpos[1]=trunkpos[2];
	trunkpos[0][0]=trunkpos[2][0]+2.0*floatsin(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[0][1]=trunkpos[2][1]+2.0*floatcos(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[1][0]=trunkpos[2][0]+0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[1][1]=trunkpos[2][1]+0.5*floatcos(-trunkpos[2][3],degrees);
	GetPlayerCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2]);
	SetPVarFloat(playerid,"oldtrunkcamposx",trunkpos[3][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy",trunkpos[3][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz",trunkpos[3][2]);
	GetPlayerCameraFrontVector(playerid,trunkpos[4][0],trunkpos[4][1],trunkpos[4][2]);
	InterpolateCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2],trunkpos[0][0],trunkpos[0][1],trunkpos[0][2]+2.4,2000,CAMERA_MOVE);
	SetPVarFloat(playerid,"oldtrunkcamposx2",trunkpos[3][0] + trunkpos[4][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy2",trunkpos[3][1] + trunkpos[4][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz2",trunkpos[3][2] + trunkpos[4][2]);
	InterpolateCameraLookAt(playerid,trunkpos[3][0] + trunkpos[4][0],trunkpos[3][1] + trunkpos[4][1],trunkpos[3][2] + trunkpos[4][2],trunkpos[1][0],trunkpos[1][1],trunkpos[1][2]+0.8,2000,CAMERA_MOVE);
	FIXES_ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	trunkpos[2][0]+=0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]+=0.5*floatcos(-trunkpos[2][3],degrees);
	AC_SetPlayerPos(playerid,trunkpos[2][0],pos_y,pos_z);
	SetPlayerFacingAngle(playerid,trunkpos[2][3]);
	return 1;
}
GetVehicleState(vehicleid)
{
	return VehicleState[vehicleid];
}
stock IsABoat(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
}
stock IsAVelik(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
}
stock IsAPlane(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
}
stock IsABike(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);
}
stock IsAMoped(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_MOPED);
}
stock IsACar(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_CAR);
}

new gun_name_rim[5][32]={
	"Нож","Дымовые шашки","Desert Eagle","M-16","Снайперка"
};
new gun_rim[5]={4,17,24,31,34};
new gun_rim_patron[5]={1,20,200,200,20};
new SALLROWS[MAX_PLAYERS];
new PlayerText:update_shoot[MAX_PLAYERS]={PlayerText:-1,...};
new Timer_OnShootingRangeMoved[MAX_PLAYERS];

#define NUM_SHIP_ROUTE_POINTS   7
#define SHIP_OBJECT_ID          8493 // pirate ship
#define SHIP_SKULL_ATTACH       3524
#define SHIP_RAILS_ATTACH       9159
#define SHIP_LINES_ATTACH       8981
#define SHIP_MOVE_SPEED         10.0
#define SHIP_DRAW_DISTANCE      800.0



new Float:gShipRoutePoints[NUM_SHIP_ROUTE_POINTS][6] = {
	{265.6823,-1896.6220,17.3484, 0.0000,0.0000,75.3000},
	{182.2275,-1956.2314,16.9684, 0.0000,0.0000,178.5000},
	{186.0896,-2063.5502,16.9684, 0.0000,0.0000,-166.2999},
	{215.8840,-2138.8144,16.9684, 0.0000,0.0000,-114.3999},
	{269.7136,-2148.6948,16.9684, 0.0000,0.0000,-91.2999},
	{319.3952,-2101.1564,16.9684, 0.0000,0.0000,-30.9999},
	{327.1532,-1952.6480,16.9684, 0.0000,0.0000,22.2000}
};

new gShipCurrentPoint = 1;
new gMainShipObjectId;
new gShipSkullAttachment[4];
new gShipRailsAttachment;
new gShipLinesAttachment;

forward StartMovingTimer();

#define NUM_FERRIS_CAGES        10
#define FERRIS_WHEEL_ID         18877
#define FERRIS_CAGE_ID          18879
#define FERRIS_BASE_ID          18878
#define FERRIS_DRAW_DISTANCE    300.0
#define FERRIS_WHEEL_SPEED      0.01


#define FERRIS_WHEEL_Z_ANGLE  	90.0 // This is the heading the entire ferris wheel is at (beware of gimbal lock)

new Float:gFerrisOrigin[3] = {246.368621,-2217.249023,18.834005};

// Cage offsets for attaching to the main wheel
new Float:gFerrisCageOffsets[NUM_FERRIS_CAGES][3] = {
	{0.0699, 0.0600, -11.7500},
	{-6.9100, -0.0899, -9.5000},
	{11.1600, 0.0000, -3.6300},
	{-11.1600, -0.0399, 3.6499},
	{-6.9100, -0.0899, 9.4799},
	{0.0699, 0.0600, 11.7500},
	{6.9599, 0.0100, -9.5000},
	{-11.1600, -0.0399, -3.6300},
	{11.1600, 0.0000, 3.6499},
	{7.0399, -0.0200, 9.3600}
};

// SA-MP objects
new gFerrisWheel;
new gFerrisBase;
new gFerrisCages[NUM_FERRIS_CAGES];

forward RotateWheel();

//-------------------------------------------------

new Float:gCurrentTargetYAngle = 0.0; // Angle of the Y axis of the wheel to rotate to.
new gWheelTransAlternate = 0; // Since MoveObject requires some translation target to intepolate
							// rotation, the world pos target is alternated by a small amount.

UpdateWheelTarget()
{
	gCurrentTargetYAngle += 36.0; // There are 10 carts, so 360 / 10
	if(gCurrentTargetYAngle >= 360.0) {
		gCurrentTargetYAngle = 0.0;
	}
	if(gWheelTransAlternate) gWheelTransAlternate = 0;
	else gWheelTransAlternate = 1;
}

//-------------------------------------------------

public RotateWheel()
{
	UpdateWheelTarget();

	new Float:fModifyWheelZPos = 0.0;
	if(gWheelTransAlternate) fModifyWheelZPos = 0.05;

	MoveObject( gFerrisWheel, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2]+fModifyWheelZPos,
				FERRIS_WHEEL_SPEED, 0.0, gCurrentTargetYAngle, FERRIS_WHEEL_Z_ANGLE );
}

static const stock legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
new recon_send_data[150];
stock APlayerDialog(playerid, dialogid, style, caption[], info[], button1[], button2[]) // BY TREFILOV
{
	SetPVarInt(playerid, "TrefilovDialog", dialogid);
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
#define ShowPlayerDialog APlayerDialog
#define SPD ShowPlayerDialog

forward ShowBootList(playerid);
public ShowBootList(playerid)
{
	stringer[0] = EOS;
	for(new i;i<=11;i++)
	{
		new gunid, ammo, storeslot;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		storeslot = GetStoreGunSlot(gunid);
		if(!gunid || !ammo || storeslot == -1) continue;

		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		format(stringer,512,"%s\n%s [{"#cGREEN"}%d{"#cWHITE"}]",stringer,gunname,ammo);
	}
	if(!strlen(stringer))
	{
		SendClientMessage(playerid,COLOR_GREY,"У Вас нет оружия");
		ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
		return 1;
	}
	ShowPlayerDialog(playerid,dTrunkGunPut,2,"Багажник",stringer,"Положить","Отмена");
	return 1;
}
stock ShowDialogTrunk(playerid,slot)
{
	stringer[0]=EOS;
	format(stringer,144,"{ffffff}1. Положить %s\n2. Взять %s\n",names_boot[0][slot-1],names_boot[0][slot-1]);
	if(slot!=1) format(stringer,144,"%s- %s:{afafaf} %d / %d%s",stringer,names_boot[2][slot-1],GetIntBoot(playerid,slot),getmaxtrunkput(slot), (slot==2)?("{33aa33} $"):(""));
	ShowPlayerDialog(playerid,dTrunk,DIALOG_STYLE_LIST,"Оружие", stringer, "Выбрать", "Отмена");
	SetPVarInt(playerid,"slottrunk",slot);
	return 1;
}
static const stock SHOP_BURGER_PRICE[6] = { 15,30,40,80,75,90 };
static const stock SHOP_PIZZA_PRICE[6] = { 15,30,40,80,75,90};
static const stock SHOP_CLUB_PRICE[6] = { 15,30,40,80,75,90};
static const stock SHOP_BURGER[6][32] = { "Бургер","Рыбный суп","Большой бургер","Котлеты","Пельмени","Гамбургер" };
static const stock SHOP_PIZZA[6][32] = { "Пицца маленькая", "Пицца с грибами", "Пицца с сыром", "Пицца большая", "Пицца с ветчиной", "Пицца с куринным мясом" };
static const stock SHOP_CLUB[6][32] = { "Вода", "Cода", "Кока-кола", "Пиво", "Вино", "Абсент" };



#define MOROZ_BALLAS 0
#define MOROZ_VAGOS 1
#define MOROZ_GROVE 2
#define MOROZ_RIFA 3
#define MOROZ_AZTECAS 4
#define MOROZ_LCN 5
#define MOROZ_YAKUZA 6
#define MOROZ_RM 7




new fracmoroz [8]={0,...};
static const stock fracmorozName [8][32]={"The Ballas","The Vagos","The Grove","The Rifa","The Aztecas", "La Cosa Nostra", "Yakuza","Русской мафии"};


static const stock VehicleColoursTableRGBA[128] = {
	0x177517FF, 0x210606FF, 0x125478FF, 0x452A0DFF, 0x571E1EFF, 0x010701FF, 0x25225AFF, 0x2C89AAFF, 0x8A4DBDFF, 0x35963AFF,
	0xB7B7B7FF, 0x464C8DFF, 0x84888CFF, 0x817867FF, 0x817A26FF, 0x6A506FFF, 0x583E6FFF, 0x8CB972FF, 0x824F78FF, 0x6D276AFF,
	0x1E1D13FF, 0x1E1306FF, 0x1F2518FF, 0x2C4531FF, 0x1E4C99FF, 0x2E5F43FF, 0x1E9948FF, 0x1E9999FF, 0x999976FF, 0x7C8499FF,
	0x992E1EFF, 0x2C1E08FF, 0x142407FF, 0x993E4DFF, 0x1E4C99FF, 0x198181FF, 0x1A292AFF, 0x16616FFF, 0x1B6687FF, 0x6C3F99FF,
	0x481A0EFF, 0x7A7399FF, 0x746D99FF, 0x53387EFF, 0x222407FF, 0x3E190CFF, 0x46210EFF, 0x991E1EFF, 0x8D4C8DFF, 0x805B80FF,
	0x7B3E7EFF, 0x3C1737FF, 0x733517FF, 0x781818FF, 0x83341AFF, 0x8E2F1CFF, 0x7E3E53FF, 0x7C6D7CFF, 0x020C02FF, 0x072407FF,
	0x163012FF, 0x16301BFF, 0x642B4FFF, 0x368452FF, 0x999590FF, 0x818D96FF, 0x99991EFF, 0x7F994CFF, 0x839292FF, 0x788222FF,
	0x2B3C99FF, 0x3A3A0BFF, 0x8A794EFF, 0x0E1F49FF, 0x15371CFF, 0x15273AFF, 0x375775FF, 0x060820FF, 0x071326FF, 0x20394BFF,
	0x2C5089FF, 0x15426CFF, 0x103250FF, 0x241663FF, 0x692015FF, 0x8C8D94FF, 0x516013FF, 0x090F02FF, 0x8C573AFF, 0x52888EFF,
	0x995C52FF, 0x99581EFF, 0x993A63FF, 0x998F4EFF, 0x99311EFF, 0x0D1842FF, 0x521E1EFF, 0x42420DFF, 0x4C991EFF, 0x082A1DFF,
	0x96821DFF, 0x197F19FF, 0x3B141FFF, 0x745217FF, 0x893F8DFF, 0x7E1A6CFF, 0x0B370BFF, 0x27450DFF, 0x071F24FF, 0x784573FF,
	0x8A653AFF, 0x732617FF, 0x319490FF, 0x56941DFF, 0x59163DFF, 0x1B8A2FFF, 0x38160BFF, 0x041804FF, 0x355D8EFF, 0x2E3F5BFF,
	0x561A28FF, 0x4E0E27FF, 0x706C67FF, 0x3B3E42FF, 0x2E2D33FF, 0x7B7E7DFF, 0x4A4442FF, 0x28344EFF
};



enum (<<=1)//Настройки игрока
{
	setAdminInfo=1,
	setFractionChat,
	setPlayerIDChat,
	setShowNickname,
	getPrivateMessage
}

enum BUSINESS_DATA
{
	bMysqlID,
	Interior,
	Float: PickupEnterX,
	Float: PickupEnterY,
	Float: PickupEnterZ,
	//Float: PickupExitX,
	//Float: PickupExitY,
	//Float: PickupExitZ,
	Float: EnterX,
	Float: EnterY,
	Float: EnterZ,
	Float: EnterR,
	//Float: ExitX,
	//Float: ExitY,
	//Float: ExitZ,
	//Float: ExitR,
	//Float: BarX,
	//Float: BarY,
	//Float: BarZ,
	BizName[64],
	Virtual,
	AreaE, // Вход
	AreaX, // Выход
	AreaB,  // Бар
	Text3D:Label,
	Owner[64],
	BuyPrice,
	PayProducts,
	Cash,
	Bank,
	EnterPrice,
	Lock,
	Mafia,
	bType,
	bMapIcon,
	bLicenses,
	bProd,
	bProdOrder,
	bProdOrderPrice,
	bAmount,
	bAmountHour,
	bVisitors,
	bCheckPower,
	bHourClose,
	bHourProd,
	bAvtoProd,
	bProdMax,
	bHel
}
new Business[MAX_BUSINESS][BUSINESS_DATA];
new bPowerTax = 500;
new player_enter_price[MAX_PLAYERS][MAX_BUSINESS];
#define BIZ_TEXT "{FFFFFF}%s\n{7D8A2E}Владелец: {FFFFFF}%s\n{7D8A2E}Состояние: {FFFFFF}%s\n{7D8A2E}Под контролем: {FFFFFF}%s\n%s\n{FFC0A9}Чтобы войти используйте 'ALT'"



stock GetPriceEnter(biz)
{
	new price_enter_text[64]="";
	if(Business[biz][EnterPrice] >= 20) format(price_enter_text,64,"{7D8A2E}Цена за вход: {"#cWHITE"}%d$", Business[biz][EnterPrice]);
	return price_enter_text;
}


enum bizz_type_data
{
	Float:bz_bar_pos[3],
	Float:bz_exit_pos[4],
	Float:bz_pickup_pos[3],
	bz_interior,
	bz_name[32]
}
new bizz_type[19][bizz_type_data]={
	{{1266.4944,-13.6766,1001.0283},{1288.1891,-2.2913,1000.8900,121.1800},{1288.1891,-2.2913,1000.8900},6,"24/7"},//0
	{{369.4110,-6.1912,1001.8516},{365.7730,-9.4730,1001.8516,303.6796},{364.8465,-11.7234,1001.8516},9,"Diner"},//1
	{{499.9693,-20.6240,1000.6797},{493.3740,-22.9371,1000.6797,5.1918},{493.4803,-24.9556,1000.6719},17,"Club"},//2
	{{1266.4944,-13.6766,1001.0283},{1288.1891,-2.2913,1000.8900,121.1800},{1288.1891,-2.2913,1000.8900},6,"24/7"},//3
	{{496.1986,-76.0278,998.7578},{501.7999,-69.6494,998.7578,184.1300},{501.9620,-67.5653,998.7578},11,"Бар"},//4
	{{1215.6160,-13.3513,1000.9218},{1207.1458,-12.2940,1000.9218,266.2243},{1204.7218,-13.8521,1000.9218},2,"Клуб"},//5
	{{377.0905,-67.4354,1001.5078},{365.5075,-73.7362,1001.5078,299.4378},{362.8646,-75.1626,1001.5078},10,"Burget Shot"},//6
	{{-2653.1215,1410.2064,906.2733},{-2637.7575,1404.4868,906.4608,50.3588},{-2636.7241,1402.4608,906.4608},3,"Jizzy"},//7
	{{447.8055,-83.8058,999.5546},{457.4726,-87.8666,999.5546,59.8760},{460.5545,-88.6417,999.5546},4,"Закусочная"},//8
	{{375.1557,-118.9464,1001.4995},{372.0232,-131.1174,1001.4921,4.4390},{372.2067,-133.5236,1001.4921},5,"Пиццерия"},//9
	{{294.9584,-80.2173,1001.5156},{287.0476,-84.2583,1001.5156,321.2778},{285.8583,-86.7806,1001.5228},4,"Аммуниция"},//10
	{{209.7870,-8.3510,1005.2108},{224.6618,-6.7300,1002.2108,61.8120},{227.5019,-8.1617,1002.2108},5,"Магазин одежды"},//11
	{{2088.3938,-1788.6560,120.8869},{2089.9299,-1790.4017,120.8869,119.4715},{2089.9299,-1790.4017,120.8869},1,"Магазин аксессуаров"},//12
	{{0.0000,0.0000,0.0000},{0.0000,0.0000,0.0000,0.0000},{0.0000,0.0000,0.0000},3,"Автозаправочная станция"},//13
	{{0.0000,0.0000,0.0000},{0.0000,0.0000,0.0000,4.3954},{1494.3911,1303.6846,1093.2890},3,"Риэлторское агенство"},//14
	{{0.0000,0.0000,0.0000},{0.0000,0.0000,0.0000,21.3026},{1010.4545,-913.3613,1086.3499},4,"Салон связи"},//15
	{{756.8016,5.8716,1000.7000},{0.0000,0.0000,0.0000,21.3026},{772.1705,-5.4125,1000.7282},5,"Спортивный зал"},//16
	{{1646.07, 2241.11, 582.05},{1657.7690,2251.1992,582.0460,175.4789},{1657.8513,2253.1548,582.0460},1,"Казино"},//17
	{{1243.6880,-1545.7350,-2062.6479},{1243.6880,-1545.7350,2062.6479,262.8040},{1243.6880,-1545.7350,2062.6479},1,"Магазин мебели"}//18
};

/*new Float:gGangGZPos[104][4] = {
	{1849.3800, -1054.2600, 2069.4199, -945.2969},
	{2069.4199, -1108.9699, 2175.5300, -945.2969},
	{2175.5300, -1108.9699, 2279.0100, -945.2969},
	{2279.0100, -1047.7800, 2475.3100, -945.2969},
	{2475.3100, -1047.7800, 2642.8200, -945.2969},
	{2642.8200, -1047.7800, 2730.1201, -945.2969},
	{2730.1201, -1047.7800, 2949.6398, -945.2969},
	{1849.3800, -1135.6800, 2069.4199, -1054.2600},
	{2069.4199, -1220.7800, 2175.5300, -1108.9699},
	{2175.5300, -1220.7800, 2279.0100, -1108.9699},
	{2279.0100, -1154.0899, 2400.2399, -1047.7800},
	{2400.2399, -1154.0899, 2571.0500, -1047.7800},
	{2571.0500, -1154.0899, 2642.8200, -1047.7800},
	{2642.8200, -1154.0899, 2730.1201, -1047.7800},
	{2730.1201, -1154.0899, 2949.6398, -1047.7800},
	{1849.3800, -1260.8399, 2069.4199, -1135.6800},
	{1849.3800, -1340.9200, 1964.5999, -1260.8399},
	{1964.5999, -1340.9200, 2069.4199, -1260.8399},
	{2069.4199, -1300.7800, 2166.3200, -1220.7800},
	{2166.3200, -1300.7800, 2279.0100, -1220.7800},
	{2279.0100, -1300.7800, 2370.9299, -1154.0899},
	{2370.9299, -1256.5100, 2451.4299, -1154.0899},
	{2451.4299, -1256.5100, 2570.9199, -1154.0899},
	{2570.9199, -1256.5100, 2642.8200, -1154.0899},
	{2642.8200, -1256.5100, 2730.1201, -1154.0899},
	{2730.1201, -1256.5100, 2949.6398, -1154.0899},
	{1849.3800, -1463.1099, 1986.9799, -1340.9200},
	{1986.9799, -1384.2600, 2069.4199, -1340.9200},
	{1986.9799, -1463.1099, 2122.5400, -1384.2600},
	{2069.4199, -1384.2600, 2166.3200, -1300.7800},
	{2166.3200, -1384.2600, 2279.0100, -1300.7800},
	{2279.0100, -1384.2600, 2370.9299, -1300.7800},
	{2370.9299, -1326.6300, 2451.4299, -1256.5100},
	{2370.9299, -1384.2600, 2451.4299, -1326.6300},
	{2451.4299, -1369.4300, 2511.7299, -1256.5100},
	{2451.4299, -1444.2099, 2511.7299, -1369.4300},
	{2511.7299, -1444.2099, 2570.9199, -1256.5100},
	{2570.9199, -1350.7900, 2642.8200, -1256.5100},
	{2570.9199, -1444.2099, 2642.8200, -1350.7900},
	{2642.8200, -1394.4799, 2730.1201, -1256.5100},
	{2730.1201, -1386.3100, 2796.8898, -1256.5100},
	{2796.8898, -1386.3100, 2949.6398, -1256.5100},
	{1849.3800, -1612.1600, 1986.9799, -1463.1099},
	{1986.9799, -1612.1600, 2122.5400, -1463.1099},
	{2122.5400, -1497.6099, 2212.5300, -1384.2600},
	{2122.5400, -1612.1600, 2212.5300, -1497.6099},
	{2212.5300, -1484.2099, 2279.0100, -1384.2600},
	{2279.0100, -1484.2099, 2342.6201, -1384.2600},
	{2212.5300, -1565.3199, 2342.6201, -1484.2099},
	{2342.6201, -1444.2099, 2451.4299, -1384.2600},
	{2342.6201, -1524.5400, 2431.0500, -1444.2099},
	{2431.0500, -1504.3100, 2550.8100, -1444.2099},
	{2550.8100, -1504.3100, 2642.8200, -1444.2099},
	{2642.8200, -1504.3100, 2730.1201, -1394.4799},
	{2730.1201, -1488.4399, 2823.1699, -1386.3100},
	{2823.1699, -1488.4399, 2949.6398, -1386.3100},
	{1821.6400, -1752.2500, 1941.6300, -1612.1600},
	{1941.6300, -1752.2500, 2001.6600, -1612.1600},
	{2001.6600, -1672.2299, 2081.6201, -1612.1600},
	{2001.6600, -1752.2500, 2081.6201, -1672.2299},
	{2081.6201, -1752.2500, 2212.5300, -1612.1600},
	{2212.5300, -1658.9300, 2342.6201, -1565.3199},
	{2212.5300, -1737.4899, 2342.6201, -1658.9300},
	{2342.6201, -1658.9300, 2431.0500, -1524.5400},
	{2342.6201, -1737.4899, 2431.0500, -1658.9300},
	{2431.0500, -1611.8499, 2550.8100, -1504.3100},
	{2550.8100, -1611.8499, 2642.8200, -1504.3100},
	{2431.0500, -1737.4899, 2627.4199, -1611.8499},
	{2642.8200, -1611.8499, 2730.1201, -1504.3100},
	{2730.1201, -1657.3299, 2823.1699, -1488.4399},
	{2823.1699, -1657.3299, 2949.6398, -1488.4399},
	{2627.4199, -1657.3299, 2730.1201, -1611.8499},
	{1849.3800, -1856.6999, 1961.6800, -1752.2500},
	{1961.6800, -1812.3000, 2081.6201, -1752.2500},
	{2081.6201, -1894.4300, 2212.5300, -1752.2500},
	{2212.5300, -1852.7900, 2326.1000, -1737.4899},
	{2326.1000, -1852.7900, 2413.7700, -1737.4899},
	{2413.7700, -1852.7900, 2511.8000, -1737.4899},
	{2511.8000, -1852.7900, 2627.4199, -1737.4899},
	{2627.4199, -1890.6800, 2885.9199, -1657.3299},
	{1849.3800, -1932.3399, 1961.6800, -1856.6999},
	{1961.6800, -1932.3399, 2081.6201, -1812.3000},
	{2081.6201, -1932.3399, 2212.5300, -1894.4300},
	{2212.5300, -1894.4300, 2313.7600, -1852.7900},
	{2212.5300, -1972.3499, 2313.7600, -1894.4300},
	{2313.7600, -1972.3499, 2413.7700, -1852.7900},
	{2413.7700, -1932.2399, 2511.8000, -1852.7900},
	{2511.8000, -1932.2399, 2627.4199, -1852.7900},
	{2627.4199, -1932.2399, 2714.1799, -1890.6800},
	{2714.1799, -1994.4399, 2769.4699, -1890.6800},
	{2769.4699, -1994.4399, 2885.9199, -1890.6800},
	{1659.2600, -2086.8400, 1821.6400, -2021.0699},
	{1821.6400, -2049.2399, 1882.4000, -1932.3399},
	{1882.4000, -2049.2399, 1961.6800, -1932.3399},
	{1961.6800, -2049.2399, 2212.5300, -1998.9699},
	{2212.5300, -2049.2399, 2413.7700, -1972.3499},
	{2413.7700, -2049.2399, 2583.1699, -1932.2399},
	{2583.1699, -2049.2399, 2714.1799, -1932.2399},
	{2714.1799, -2049.2399, 2885.9199, -1994.4399},
	{1659.2600, -2166.5500, 1821.6400, -2086.8400},
	{1821.6400, -2166.5500, 1961.6800, -2049.2399},
	{1961.6800, -2109.9499, 2092.9499, -2049.2399},
	{1961.6800, -2166.5500, 2092.9499, -2109.9499},
	{1961.6800, -1998.9699, 2212.5300, -1932.3399}
};*/


enum suspect_data
{
	suspect_name_folder[30+1],
	suspect_name_reason[87+1],
	suspect_level[4]
}
static const stock suspect_player[13][suspect_data]={
{"Нападение",							"Нападение на гражданина\nНападение на сотрудника гос. организации", 														{2,4,-1,-1}},
{"Нападение с применением оружия",		"Нападение на гражданина\nНападение на сотрудника гос. организации",														{3,3,-1,-1}},
{"Хулиганство",							"Ограбление\nМелкое хулиганство\nУгон",																						{2,1,3,-1}},
{"Оружие",								"Хранение без лицензии\nКража металла\nХранение металла\nТорговля оружием",													{1,2,3,-1}},
{"Взятка",								"Попытка дачи взятки",																										{2,-1,-1,-1}},
{"Наркотические вещества",				"Использование наркотических веществ\nРеклама/Продажа/Хранение наркотиков",													{2,3,-1,-1}},
{"Транспортные средства",				"Порча т/с или гос. имущества\nНарушение ПДД\nУгон частного т/с\nПопытка угона т/с",										{2,1,2,2}},
{"Неподчинение",						"Неподчинение сотруднику ПД/ФБР\nНеподченение сотруднику гос. структур",													{1,2,-1,-1}},
{"Соучастие",							"Соучастие в преступлении",																									{1,-1,-1,-1}},
{"Проникновение",						"На объекты част. собственности\nНа охран. территорию\nВ хранилище банка",													{1,2,3,-1}},
{"Похищение",							"Попытка похищения\nПохищение\nПохищение гос. сотрудника",																	{2,3,4,-1}},
{"Терракт",								"Планирование/Исполнение терракта",																							{6,-1,-1,-1}},
{"Митинг",								"Организация нелегального митинге\nОрганизация революции\nВовлечение в терр. организацию",									{2,4,-1,-1}}
};


/*#define PLAYER_INVALID_PLACE        -1
#define PLAYER_IN_LOS_SANTOS 		0
#define PLAYER_IN_SAN_FIERRO        1
#define PLAYER_IN_LAS_VENTURAS      2
#define MAX_ZONES                   3*/

/*new zones[MAX_ZONES]={PLAYER_INVALID_PLACE,PLAYER_INVALID_PLACE,PLAYER_INVALID_PLACE};
new Float:ZONE_SF[70] = {                 -2988.0,-2980.0,                 -2985.0,2990.0,                 -1970.0,2980.0,                 -2114.0,2285.0,                 -1960.0,2134.0,                 -1871.0,2002.0,                 -1755.0,1748.0,                 -1626.0,1679.0,                 -1314.0,1563.0,                 -1219.0,1434.0,                 -1191.0,1272.0,
-1208.0,1136.0,                 -1111.0,1069.0,                 -995.0,914.0,                 -945.0,758.0,                 -803.0,582.0,                 -729.0,522.0,                 -657.0,495.0,                 -647.0,418.0,                 -867.0,210.0,                 -973.0,-1.0,                 -1033.0,-244.0,                 -1067.0,-386.0,                 -1185.0,-561.0,                 -1212.0,-656.0,
-1227.0,-1434.0,                 -1211.0,-1718.0,                 -1198.0,-2003.0,                 -1157.0,-2199.0,                 -1233.0,-2468.0,                 -1191.0,-2609.0,                 -1149.0,-2710.0,                 -1113.0,-2957.0,                 -1101.0,-2991.0,                 -2988.0,-2980.0 };
new Float:ZONE_LS[46] = {                 -1101.0,-2990.0,                 2989.0,-2989.0,                 2940.0,449.0,                 1890.0,507.0,                 1349.0,580.0,                 1057.0,634.0,                 833.0,576.0,                 455.0,435.0,                 12.0,388.0,                 -343.0,386.0,                 -561.0,407.0,
-644.0,417.0,                 -869.0,210.0,                 -974.0,-2.0,                 -1032.0,-244.0,                 -1069.0,-386.0,                 -1187.0,-564.0,                 -1214.0,-656.0,                 -1198.0,-2004.0,                 -1158.0,-2199.0,                 -1233.0,-2468.0,                 -1151.0,-2712.0,                 -1101.0,-2990.0 };
new Float:ZONE_LV[60] = {         -1971.0,2979.0,         -759.0,2996.0,         2991.0,2993.0,         2985.0,709.0,         2940.0,448.0,         1889.0,505.0,         1350.0,579.0,         1056.0,633.0,         833.0,578.0,         454.0,435.0,         12.0,388.0,         -344.0,386.0,         -561.0,408.0,         -647.0,419.0,         -658.0,492.0,
-730.0,520.0,         -805.0,582.0,         -944.0,757.0,         -994.0,914.0,         -1110.0,1067.0,         -1209.0,1138.0,         -1192.0,1273.0,         -1220.0,1432.0,         -1314.0,1561.0,         -1626.0,1679.0,         -1755.0,1747.0,         -1873.0,2002.0,         -1961.0,2135.0,         -2114.0,2284.0,         -1971.0,2979.0 };
*/
#define height_obj 		3000.0
#define bol_int 		-1



/*new ShopCar2[98][2] = {
	{400,130000},
	{567,200000},
	{549,120000},
	{547,110000},
	{546,140000},
	{543,100000},
	{527,100000},
	{526,110000},
	{518,170000},
	{517,150000},
	{516,140000},
	{492,140000},
	{479,110000},
	{478,100000},
	{475,190000},
	{466,110000},
	{458,120000},
	{439,150000},
	{436,100000},
	{404,100000},
	{419,800000},
	{586,800000},
	{581,1000000},
	{461,100000},
	{418,700000},
	{603,750000},
	{589,770000},
	{580,1000000},
	{579,940000},
	{561,910000},
	{555,940000},
	{554,840000},
	{534,760000},
	{533,920000},
	{505,880000},
	{491,800000},
	{489,880000},
	{445,810000},
	{421,830000},
	{401,340000},
	{600,420000},
	{585,360000},
	{576,350000},
	{575,460000},
	{566,340000},
	{551,480000},
	{550,480000},{540,330000},{536,400000},{529,440000},{507,450000},{474,370000},{467,390000},
{426,420000},{422,310000},{412,390000},{405,400000},{477,220000},{471,2100000},{468,1900000},{463,2000000},{521,1900000},{602,2000000},{587,2100000},
{565,2100000},{562,2200000},{560,2250000},{559,2200000},{558,2100000},{545,1900000},{535,2000000},{480,2400000},{402,4800000},{503,6000000},{502,6000000},
{494,6000000},{495,5800000},{424,5000000},{434,4800000},{522,4600000},{541,6000000},{506,5100000},{451,6000000},{429,5400000},{415,5600000},{411,6000000},
{476,600000},{512,580000},{511,500000},{513,480000},{593,460000},{519,160000},//91
{446,120000},{452,100000},{454,150000},{473,380000},{493,120000},{484,600000}};//97
*/
new Text3D:ShipText[MAX_PLAYERS];

//new Name_Fraction_[MAX_FRACTIONS][32];

stock GFrac(frac)
{
	new namegang[20];
	switch(frac)
	{
		case 15: namegang = "Grove Street";
		case 17: namegang = "Varrios Los Aztecas";
		case 12: namegang = "East Side Ballas";
		case 18: namegang = "Rifa";
		case 13: namegang = "Los Santos Vagos";
	}
	return namegang;
}

#define SetPlayerColorAc(%0,%1) SetPlayerColor(%0,fraction_color[%1])
#define GetRank(%0,%1) fRankName[%0-1][%1-1]

new fraction_color[MAX_FRACTIONS]=
{
	0xFFFFFF11,//0
	0x0000EEBB,//1
	0x226666BB,//2
	0x446600BB,//3
	0x660022BB,//4
	0xDDA701FF,//5
	0x880000BB,//6
	0x66CC44BB,//7
	0x66CC44BB,//8
	0x66CC44BB,//9
	0x004eff80,//10
	0x66EEEEBB,//11
	0x882288BB,//12
	0xEEEE00BB,//13
	0xA1AAADBB,//14
	0x66AA22BB,//15
	0xAA6644BB,//16
	0x66EEEEBB,//17
	0x88CCCCBB,//18
	0x446600BB,//19
	0x660022BB,//20
	0x0000EEBB,//21
	0x660022BB,//22
	0xFFFFFF11,//23
	0xFFFFFF80,//24
	0x5C3A00FF,//25
	0xC9F587BB,//26
	0x0099CCBB//27
};

/*enum FInfo
{
	fractionName[32],
	fractionColor,
	Float:fractionX,
	Float:fractionY,
	Float:fractionZ,
	Float:fractionA,
	fractionInt,
	fractionVirt
}
static const stock Fractions[MAX_FRACTIONS][FInfo] = {
	{"Гражданский",						0xFFFFFF11,  1483.0062,-2287.0112,13.6359,90.5406,		0,	0},
	{"Police Department",	            0x0000EEBB,  1647.1013,-1619.8743,1583.8660,184.8741,	4,	1},
	{"ФБР",     						0x226666BB,  607.3816,1293.8071,1080.3459,67.4508,		3,	100},
	{"Национальная Гвардия", 			0x446600BB,  726.1556,-1300.0586,1102.0000,98.0609,		15,	1},
	{"Больница Лос Сантос",      		0x660022BB,  2446.5342,-1815.9761,1224.0,0.4511,		4,	0},
	{"La Cosa Nostra",  				0xDDA701FF,  7.9507,78.3715,4013.1943,128.0686,			5,	2},
	{"Yakuza",    						0x880000BB,  7.9507,78.3715,4013.1943,128.0686,			5,	0},
	{"Мэрия Лос Сантос",     			0x66CC44BB,  2323.9417,-2005.6003,-34.1541,132.0694,	3,	700},
	{"Мэрия Лас Вентурас",     			0x66CC44BB,  1435.9680,-1860.5645,2841.4260,123.5563,	3,	800},
	{"Мэрия Сан Фиерро",     			0x66CC44BB,  1435.9680,-1860.5645,2841.4260,123.5563,	3,	900},
	{"A.R.G.U.S.",     					0x004eff80,  1647.1013,-1619.8743,1583.8660,184.8741,	4,	2},
	{"Инструкторы",   					0x66EEEEBB,  -2078.1804,-70.8198,1100.6548,45.2663,		3,	1},
	{"The Ballas", 						0x882288BB,  1996.2084,-1116.7758,26.7737,210.2280,		0,	0},
	{"Los Santos Vagos", 				0xEEEE00BB,  2760.1753,-1177.7024,69.4034,88.6983,		0,	0},
	{"Русская Мафия",   				0xA1AAADBB,  7.9507,78.3715,4013.1943,128.0686,			5,	1},
	{"Grove Street", 					0x66AA22BB,  2449.5774,-1690.8040,1013.5078,180.4821,	2,	1},
	{"Радио Лос Сантос",    			0xAA6644BB,  1771.7032,-1302.9386,65.8055,270.5071,		0,	0},
	{"Varios Los Aztecas",  			0x66EEEEBB,  1664.1232,-2112.2212,13.5469,268.0074,		0,	0},
	{"The Rifa",   						0x88CCCCBB,  2190.3254,-1812.5486,13.5469,48.5462,		0,	0},
	{"Сухопутные войска",     			0x446600BB,	 726.1556,-1300.0586,1102.0000,98.0609,		15,	2},
	{"Больница Сан Фиерро",     		0x660022BB,  2446.5342,-1815.9761,1224.0,0.4511,		4,	1},
	{"San Andreas Sheriff Department",  0x0000EEBB,  1647.1013,-1619.8743,1583.8660,184.8741,	4,	3},
	{"Больница Лас Вентурас",     		0x660022BB,  2446.5342,-1815.9761,1224.0,0.4511,		4,	2},
	{"Похоронное бюро",     			0xFFFFFF11,  1863.7117,-884.1705,1081.4220,55.3916,		0,	0},
	{"Warlock MC",   					0xBA541D80,  1280.3894,1271.6595,10.8281,316.8163,		0,	0},
	{"Hostage Rescue Team",   			0x5C3A00FF,  1939.0162,-586.1753,1352.3262,3.1434,		0,	0},
	{"Администрация Президента",   		0xC9F587BB,  535.6576,-2861.1116,3196.7480,89.7383,		0,	0}
};*/


#define BAND_BALLAS 			0
#define BAND_VAGOS 				1
#define BAND_GROVE 				2
#define BAND_AZTEC 				3
#define BAND_RIFA 				4
#define ARMY_SV 				5
#define MERIA_LS     			6
#define POLICE_LV               7
#define POLICE_SF               8
#define ARMY_SF               	9
#define LS_NEWS                	10
#define MAFIA_LCN               11
#define MAFIA_YAKUZA            12
#define MAFIA_RM                13
new frac_patron					[MAX_FRACTIONS]={0,...};
new frac_metall					[MAX_FRACTIONS]={0,...};
new frac_money					[MAX_FRACTIONS]={0,...};
new frac_drugs					[MAX_FRACTIONS]={0,...};
new Text3D:frac_text			[MAX_FRACTIONS]={Text3D:-1, ...};
new frac_areaid					[MAX_FRACTIONS];
new frac_areaid_cp				[MAX_FRACTIONS];

new Float:frac_place_put		[MAX_FRACTIONS][3];
new frac_place_put_areaid[MAX_FRACTIONS];
new frac_place_put_areaid_cp[MAX_FRACTIONS];
new Text3D:frac_place_put_areaid_text[MAX_FRACTIONS]={Text3D:-1, ...};

new kazna, nalog;


new door_prison[15];
new fRankName[MAX_FRACTIONS][18][40];
/*= {
	{"Стажёр","Офицер II","Офицер I","Сержант II","Сержант I","Лейтенант II","Лейтенант I","Детектив","Инспектор","Капитан","Майор","Командор","Помощник комиссара","Заместитель комиссара","Комиссар","","",""},	//ЛСПД
	{"Стажер","Мл. агент","Агент","Старший агент","Секретный агент","Инспектор","Зам. управляющего агентурой","Управляющий агентурой","Зам.Директора","Директор","","","","","","","",""},// фбр
	{"Матрос","Старший матрос","Старшина","Главный старшина","Мичман","Старший Мичман","Младший лейтенант","Лейтенант","Старший лейтенант","Капитан лейтенант","Капитан 3 ранга","Капитан 2 ранга","Капитан 1 ранга","Вице-адмирал","Адмирал","","",""},// вмф
	{"Интерн","Санитар","Мед. Брат","Спасатель","Нарколог","Доктор","Психолог","Хирург","Заместитель гл. Врача","Главный врач","","","","","","","",""},// Больница ЛС
	{"Fresco","Informatore","Aiutante","Autorizza","Assesorio","Regime","Caporegime","Consigliere","Underboss","Capomafioso","","","","","","","",""},// Мексиканская мафия
	{"Newbie","Participant","Helper","Fighter","Shooter","Killer","Diputado","Ambassador","Confidant","Leader","","","","","","","",""},// Колумбийская мафия
	{"Агент службы безопасности","Глава службы безопасности","Пресс-секретарь","Секретарь","Адвокат","Прокурор","Верховный прокурор","Судья","Депутат","Советник","Зам. мэра","Мэр","","","","","",""}, // Мэрия ЛС
	{"Агент службы безопасности","Глава службы безопасности","Пресс-секретарь","Секретарь","Адвокат","Прокурор","Верховный прокурор","Судья","Депутат","Советник","Зам. мэра","Мэр","","","","","",""}, // Мэрия ЛВ
	{"Агент службы безопасности","Глава службы безопасности","Пресс-секретарь","Секретарь","Адвокат","Прокурор","Верховный прокурор","Судья","Депутат","Советник","Зам. мэра","Мэр","","","","","",""}, // Мэрия СФ
	{"Стажёр","Офицер II","Офицер I","Сержант II","Сержант I","Лейтенант II","Лейтенант I","Детектив","Инспектор","Капитан","Майор","Командор","Помощник комиссара","Заместитель комиссара","Комиссар","","",""}, //SFPD
	{"Стажер","Консультант","Экзаменатор","Младший Инструктор","Инструктор","Координатор","Мл. Менеджер","Менеджер","Зам. Директора","Директор","","","","","","","",""},// Инструкторы
	{"Stranger","Newman","Campbell","Nigga","Dre Papo","Gangsta","Shooter","Warrior","De King","Big Daddy","","","","","","","",""}, // The Ballas
	{"Papo","El Mundo","De Mucho","Amigos","Muchachos","Eltodor","Luchador","Comproma","Loco","Padre","","","","","","","",""}, // The Vagos
	{"Шнырь","Фраер","Бык","Барыга","Блатной","Свояк","Браток","Вор","Вор в законе","Авторитет","","","","","","","",""},// Русская Мафия
	{"Papo","Star","King","Newman","De King","Campbell","Shooter","Warrior","Street Tramp","Dad King","","","","","","","",""},// Grove Street
	{"Стажер","Начинающий работник","Помощник редакции","Светотехник","Репортер","Оператор","Ведущий","Режисер","Редактор","Главный редактор","Начальник редакции","Зам. Директора","Директор","","","","",""},// San News
	{"Muchachos","Macho","El Mundo","De Mucho","El Papo","Amigos","Comproma","Aproximado","Sientes","Sientes","","","","","","","",""},// Aztec
	{"Macho","Muchachos","Amigo","Mirame","Matangos","El Pachino","Latin Dema","Vercificado","Del Sombra","Sie Padre","","","","","","","",""},// Rifa
	{"Новобранец","Рядовой","Ефрейтор","Мл.Сержант","Старшина","Прапорщик","Ст.Прапорщик","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал-Лейтенант","Генерал Армии","","",""},// Зона 51
	{"Интерн","Санитар","Мед. Брат","Спасатель","Нарколог","Доктор","Психолог","Хирург","Заместитель гл. Врача","Главный врач","","","","","","","",""},// Больница СФ
	{"Стажёр","Офицер II","Офицер I","Сержант II","Сержант I","Лейтенант II","Лейтенант I","Детектив","Инспектор","Капитан","Майор","Командор","Помощник комиссара","Заместитель комиссара","Комиссар","","",""},	//LVPD
	{"Интерн","Санитар","Мед. Брат","Спасатель","Нарколог","Доктор","Психолог","Хирург","Заместитель гл. Врача","Главный врач","","","","","","","",""},// Больница ЛВ
	{"Probationer","Sufferer","Free hitman","Dela killer","Perfect mercenary","Desperado","Operational killer","Mercenary 3 class","Mercenary 2 class","First mercenary","Deputy director","Director of Hitman's Agency","","","","","",""},// Хитманы
	{"Изгой","Новичок","Водила","Стритрейсер","Опытный Стритрейсер","Профессионал","Тренер","Король драга","Король дрифта","Король улиц","","","","","","","",""},// Street Racers
	{"Новобранец","Оперативник","Офицер","Пилот","Снайпер","Штурмовик","Диспетчер","Командир Группы","Заместитель Командира S.O.C.","Командир S.O.C.","","","","","","","",""},// S.O.C.
	{"Водитель","Секретарь","Агент службы безопасности","Глава службы безопасности","Советник МЗ","Советник МО","Советник МВД","Министр Здравоохранения","Министр Обороны","Министр Внутренних Дел","Вице-Президент","Президент","","","","","",""}// правительство
};*/



//


new Text3D:info_house;

#define PICKUPS_COUNT 75
new Float:gPickup[PICKUPS_COUNT][3] ={
	{-2044.73, -104.52, 35.26}, // Автошкола 0
	{2440.8113,-1472.5089,24.0000}, // Автоугонщик 1
	{1648.8259,-1626.5962,1583.8660}, // 2
	{428.8387,-1546.7861,27.5781}, // 3
	{429.4144,-1549.8374,27.5855}, // 4
	{537.09, -2857.48, 3196.75},// 5
	{358.5894,178.6615,1008.3828},// 6
	{-1988.5321,1112.6732,54.4794},// 7
	{308.2655,-168.6746,999.5938},// 8
	{308.2655,-168.6746,999.5938},// 9
	{324.0889,1123.0233,1083.8828},// 10
	{316.6667,1123.5330,1083.8828},// 11
	{277.5869,-1615.5457,69.5064},// 12
	{1048.34, 992.29, 10.91}, //13
	{556.5716,-1292.6392,-17.2482}, //14
	{-1951.2544,293.6375,-35.4688}, //15
	{-1657.7015,1210.2267,-7.2500}, //16
	{2200.8857,1394.2892,-11.0625}, //17
	{1544.5615,-1374.5718,330.0565},//18
	{1458.8053,-989.2756,26.8469},//19
	{2150.9392,-81.4108,2.8804},//20
	{2162.7239,-102.3602,6.7436},//21
	{-759.6343,-133.6706,65.7941},//22
	{-765.8640,-125.1859,65.5907},//23
	{2568.2566,-1281.5046,1044.1250},//24
	{-2038.07, -118.03, 35.26},//25
	{1445.59, -1817.59, 2836.28},//26
	{2131.47,-2283.91,20.67},//27
	{889.8275,604.8285,1000.4890},//28
	{1643.7690,-1626.5505,1583.8660},//lspd - раздевалка 29
	{279.1806,-1607.6831,69.5064},//фбр - раздевалка 30
	{710.5120,-1299.5051,1102.0000},//вмф - раздевалка 31
	{-360.6728,-30.1976,-57.8740},//мчс - раздевалка 32
	{-2406.4231,-490.2199,1401.0900},//sfpd - раздевалка 33
	{-2035.48, -118.92, 35.26},//автошкола - раздевалка 34
	{1778.1704,-1297.0403,65.8125},//ls news - раздевалка 35
	{583.8752,1463.3833,1900.7980},//зона 51 - раздевалка 36
	{1643.7690,-1626.5505,1583.8660},//lvpd - раздевалка 37
	{1042.10, 986.36, 17.91},//swat - раздевалка 38
	{531.47, -2862.27, 3196.75},//правительство - раздевалка 39
	{2311.1038,-2018.3214,-34.1641},// мэрия 40
	{2296.4709,-2010.1238,-37.7740},// 41
	{-1599.68, -129.06, 1501.09},//42
	{1399.8365,548.7021,1005.7609},//43
	{1399.8899,561.2564,1005.7609},//44
	{1429.8015,-1541.9271,1084.3739},//45
	{2076.3784,-3433.2544,1669.9690},//46
	{2319.3420,-2010.0050,-37.7740},//47
	{2319.3464,-2012.7292,-37.7740},//48
	{1495.1632,1308.4603,1093.2866},//49
	{1225.2457,-807.8311,1084.0078},//50
	{1228.8384,-808.1107,1084.0078},//51
	{1464.1646,-989.1686,26.8469},//52
	{1469.1760,-989.1324,26.8469},//53
	{1470.7837,-992.9596,26.8469},//54
	{1470.6204,-998.3475,26.8469},//55
	{1470.7555,-1004.9711,26.8469},//56
	{1786.6682,-1303.6124,13.99945},//57
	{1786.6682,-1303.6124,65.574876},//58
	{1786.6682,-1303.6124,125.67525},//59
	{1644.4209,-1635.4438,1583.8660},//60
	{-2109.6636,-445.7025,38.7344},//61
	{2740.5503,-1802.3032,422.8215},//62
	{1895.4515,-2259.4290,13.5469},//63
	{247.6307,-1881.0348,1.5033},//64
	{2296.5525,-2001.5790,-34.1641},//65
	{2446.4897,-1817.5411,1224.4199},//66
	{-2039.4603,-103.7440,35.2599},//67
	{1963.6531,972.9612,994.4688},//68
	{300.7556,-142.1013,1004.0625},//69
	{-1723.0029,265.1708,1074.1749},//70
	{-2404.34,-490.56,1401.09},//71
	{317.20, -160.37, 999.59},//72
	{2693.9631,-1708.9209,11.8478},//73
	{-2161.2351,640.3597,1052.3817}//74
};

new gPickupData[PICKUPS_COUNT][3] ={//int | mir
	{0,0,1239},//0
	{0,0,1239},//1
	{-1,-1,1275},//2
	{0,0,1240},//3
	{0,0,18631},//4
	{0,0,1239},//5
	{0,0,1239},//6
	{0,0,1239},//7
	{-1,38,2358},//8
	{-1,39,2358},//9
	{-1,-1,1279},//10
	{-1,-1,1241},//11
	{0,0,353},//12
	{-1,-1,353},//13
	{0,0,19133},//14
	{0,0,19133},//15
	{0,0,19133},//16
	{0,0,19133},//17
	{0,0,1310},//18
	{0,0,1274},//19
	{0,0,19134},//20
	{0,0,19131},//21
	{0,0,1275},//22
	{0,0,1239},//23
	{2,0,1275},//24
	{0,0,1240},//25
	{3,-1,1240},//26
	{0,0,1240},//27
	{-1,-1,1318},//28
	{4,1,1275},//lspd - раздевалка 29
	{0,0,1275},//фбр - раздевалка 30
	{15,1,1275},//вмф - раздевалка 31
	{-1,-1,1275},//мчс - раздевалка 32
	{-1,-1,1275},//sfpd - раздевалка 533
	{0,0,1275},//автошкола - раздевалка 34
	{0,0,1275},//ls news - раздевалка 35
	{-1,-1,1275},//зона 51 - раздевалка 36
	{4,3,1275},//lvpd - раздевалка 37
	{-1,-1,1275},//swat - раздевалка 38
	{0,0,1275},//правительство - раздевалка 39
	{3,-1,1275},// мэрия 40
	{3,-1,1239},//41
	{-1,-1,353},//42
	{-1,-1,1239},//43
	{-1,-1,1239},//44
	{-1,-1,1318},//45
	{-1,-1,1318},//46
	{3,-1,1239},//47
	{3,-1,1239},//48
	{3,-1,1239},//49
	{5,0,1275},//50
	{5,0,355},//51
	{0,0,1274},//52
	{0,0,1274},//53
	{0,0,1274},//54
	{0,0,1274},//55
	{0,0,1274},//56
	{-1,-1,1239},//57
	{-1,-1,1239},//58
	{-1,-1,1239},//59
	{-1,-1,1239},//60
	{-1,-1,1318},//61
	{-1,-1,1318},//62
	{-1,-1,1239},//63
	{-1,-1,1239},//64
	{-1,-1,1239},//65
	{4,0,19134},//66
	{-1,-1,1239},//67
	{10,-1,1275},//68
	{-1,-1,1239},//69
	{-1,-1,18635},//70
	{-1,-1,1239},//71
	{-1,-1,353},//72
	{-1,-1,353},//73
	{1,0,19134}//74
};
static stock gPickID[PICKUPS_COUNT];
static stock gPickIDD[PICKUPS_COUNT];

static stock bool:status_siren = false;
static stock siren_area = -1;

/*#define fractionInvite 0
#define fractionUnInvite 1
#define fractionGiverank 2
new gFractionRank[MAX_FRACTIONS][3];*/
//
#define band_rank_ballas 0
#define band_rank_vagos 1
#define band_rank_grove 2
#define band_rank_aztec 3
#define band_rank_rifa 4
//
#define get_sklad 0
static stock gBandRank[5][1];

new advert_count[MAX_PLAYERS]={0, ...};
new top_advert_name [15] [MAX_PLAYER_NAME];
new top_advert_count [15] ={ 0,...};

new FractionRank [MAX_FRACTIONS - 1]={
	15,//LSPD - 1
	10,//ФБР - 2
	15,//Национальная Гвардия - 3
	10,//Больница ЛС - 4
	10,//LCN - 5
	10,//Yakuza - 6
	12,//Мэрия Лос Сантос - 7
	12,//Мэрия Лас Вентурас - 8
	12,//Мэрия Сан Фиерро - 9
	15,//SFPD - 10
	10,//Инструкторы - 11
	10,// The Ballas - 12
	10,// The Vagos - 13
	10,// Русская Мафия - 14
	10,// The Grove - 15
	13,// SA FM - 16
	10,// The Aztecas - 17
	10,// The Rifa - 18
	15,// Сухопутные войска - 19
	10,//Больница СФ - 20
	15,//LVPD - 21
	10,//Больница ЛВ - 22
	12,//Hitman's - 23
	10,//Street Racers - 24
	10,//SWAT - 25
	12,//АП - 26
	10//Полёты - 27
};




new fChangeSkin[MAX_FRACTIONS - 1][10];
/*new default_fChangeSkin[26][10] = {
	{265, 266, 267, 280, 281, 285, 300, 301, 306, 307}, //LSPD
	{141,163,164,165,166,286,0,0,0, 0}, //FBI
	{61,287,191,61,295,179,0,0,0, 0}, //Национальная Гвардия
	{70,71,219,274,275,276,277,278,279, 0}, //Больница ЛС
	{46,91,124,171,223,290,113,0,0, 0}, //La Cosa Nostra
	{294,186,141,60,169,120,122,123, 0}, //Yakuza
	{150,165,164,187,17,0,0,0,0, 0}, //Мэрия LS
	{150,165,164,187,17,0,0,0,0, 0}, //Мэрия LV
	{150,165,164,187,17,0,0,0,0, 0}, //Мэрия SF
	{141,164,165,192,285,287,294,141,76, 0}, //SFPD
	{172,189,240,59,0,0,0,0,0, 0}, //Лицензеры
	{102,103,104,195,0,0,0,0,0, 0}, //Ballas
	{108,109,110,190,0,0,0,0,0, 0}, //Vagos
	{111,112,125,272,214,0,0,0,0, 0}, //Russian Mafia
	{56,105,106,107,269,270,271,0,0, 0}, //Groove Street
	{148,211,217,250,261,188,0,0,0, 0}, //SA FM
	{41,114,115,116,292,0,0,0,0, 0}, //The Aztecas
	{173,174,175,226,273,0,0,0,0, 0}, //The Rifa
	{255,287,191,61,295,179,0,0,0, 0}, //LVA
	{70,71,219,274,275,276,0,0,0, 0}, //Больница СФ
	{282, 283, 284, 287, 288, 302, 309, 310, 311, 0}, //LVPD
	{70,71,219,274,275,276,0,0,0, 0}, //Больница ЛВ
	{285,40,12,294,295,250,186,185,0, 0}, //Hitmans
	{100,152,247,248,254,170,29,91,0, 0}, //Street Racers
	{71,191,285,286,287,309,0,0,0, 0}, //SWAT
	{295,310,255,98,165,216,147,187,0, 0} //Правительство
};*/

new Float:seat_pos_spawn[8][4]={
	{398.9280,-1543.8903,32.2734,321.9405}, // 1
	{394.1337,-1539.0992,32.2734,322.5672}, // 2
	{389.3633,-1534.3311,32.2663,319.4338}, // 3
	{383.7797,-1528.8505,32.2663,313.6894}, // 4
	{396.2289,-1519.1052,32.2663,140.3100}, // 5
	{401.7480,-1524.5225,32.2734,141.1456}, // 6
	{406.0354,-1528.8839,32.2734,136.8633}, // 7
	{410.6258,-1533.3197,32.2734,141.2500} // 8
};




//new FractionsVehicle[27][2]; 141, 164, 165, 192, 285, 287, 294

#define MAX_NPC_BOT 47

new Float:bot_pos[MAX_NPC_BOT+1][4]={{0.0, 0.0, 0.0,0.0},//null
	{2686.0945,200.7196,57.9456,79.9006},//1
	{2319.1111,-2019.2888,-37.7740,2.7332},//2
	{1281.2273,-1270.9841,13.5419,175.9990},//3
	{926.4562,-1231.0051,16.9792,357.8790},//4
	{430.7076,-1902.5483,1.2282,356.1934},//5
	{929.7543,-1730.9216,13.5469,359.7880},//6
	{1653.1416,2200.3499,10.8203,170.8462},//7
	{-2041.1848,69.3307,28.3906,266.7808},//8
	{1172.2091,-1328.3079,15.4086,301.3364},//9
	{1466.3993,-1749.8466,15.4453,356.8578},//10
	{2444.2715,-1809.1490,1224.4102,0.6194},//11
	{1217.5490,-1415.5291,13.3686,351.6480},//12
	{2686.8357,197.5801,56.8764,135.9878},//13
	{152.6081,-1946.6206,5.3890,0.5687},//14
	{5487.7031,1243.9072,23.1886,268.3708},//15
	{1367.2273,-1282.4161,13.5469,90.2510},//16
	{1374.8934,-918.5822,34.3287,184.5653},//17
	{2025.9009,-1211.5383,22.1645,262.2494},//18
	{560.4315,-1293.9272,17.2482,355.4683},//19
	{-1654.2650,1208.6167,7.2500,304.0110},//20
	{-1967.2042,296.6151,35.2542,88.7490},//21
	{2197.4072,1394.8022,11.0692,179.9298},//22
	{-1673.1508,410.6534,7.1797,49.2687},//23
	{-2032.9713,154.6911,29.0461,269.2307},//24
	{-80.2798,-1174.3805,2.0874,65.8520},//25
	{1003.8849,-930.0906,42.3281,186.7998},//26
	{1940.9276,-1772.7832,13.6406,89.0389},//27
	{2144.6453,2752.6987,10.9602,178.3631},//28
	{661.3600,-564.3680,16.3359,89.3288},//29
	{-1471.4567,1872.9703,32.6328,185.2096},//30
	{1382.8251,458.4872,19.9994,160.1660},//31
	{67.0429,1218.0665,19.1406,164.8426},//32
	{617.5660,1694.9033,7.1875,304.3006},//33
	{-1325.1689,2679.5776,50.4688,261.4203},//34
	{2207.0850,2472.0957,10.9952,90.0254},//35
	{2117.7375,924.8796,10.9609,183.3996},//36
	{2636.9758,1111.0470,10.9439,176.7961},//37
	{1592.9971,2203.8103,10.8203,178.9661},//38
	{-1605.6145,-2717.0574,48.9453,314.6173},//39
	{-2242.3789,-2561.8965,31.9219,58.9583},//40
	{841.7678,-1240.8950,15.0559,173.6627},//41
	{3.9071,-370.3538,5.4297,96.8486},//42
	{2308.8354,-11.0136,26.7422,176.9070},//43
	{636.5110,862.8779,-42.7548,24.1544},//44
	{420.4736,2534.1550,16.5572,184.2460},//45
	{-675.0123,2048.5127,60.3818,358.7743},//46
	{1786.4696,-1296.1681,13.4223,3.6896}//47
};
new bot_message [MAX_NPC_BOT+1][8][100]={{"","","","","","","",""},//null
{"Вильямс","Добро пожаловать в штат "PROJECT_STATE,"Чтобы освоится здесь тебе нужно получить паспорт","Чтобы его получить посети мэрию","Она находится в Центре Los Santos (( /gps - Важные места - Мэрия ))","Там будет тебя ждать Джон","Передай ему послание от меня.","Удачного пути!"},
{"Майк","Привет, ты недавно приехал","Я вижу тебя послал мой друг Джон","Тебе нужно получить паспорт","Чтобы получить его тебе нужно подняться на второй этаж","Удачи","",""},
{"Карл","Привет брат, я вижу ты хочешь работать таксистом","Запомни два правила","Таксуй там где народ: Мэрия, Банк, Бухта","Чем ниже цена, тем больше бабла","Заходи в здание переодевайся, и принимайся за работу","Если будут проблемы я всегда тут","Удачи"},
{"Том","Добро пожаловать в наш скромный автопарк","Я вижу ты хочешь стать водителем и попасть в элитный состав","Я помогу тебе в этом, для этого иди в сторону заправки","Там будет здание, зайдешь туда и выберешь маршрут","После этого садись в автобус","Будь аккуратней на дорогах","Я с тобой еще свяжусь, удачи!"},
{"Марк","Погода сегодня шумная, я вижу ты хочешь словить улов","Я помогу тебе с этим, держи удочку и снасти.","Они тебе пригодятся для ловли рыбы в этом море","Ах да, чуть не забыл. Держи ключи от катера","Чтобы словить крупную рыбу нужно научится правильно закидывать удочку (( ALT + H ))","А также вытягивай рыбу аккуратно (( Y ))"," После можешь продать свою рыбу (( /fish )), Удачи!"},
{"Джеймс","Добро пожаловать в наш автосервис Los Santos","Чтобы затюнинговать автомобиль тебе понадобится механик","Найти его можешь в справочнике (( / dir ))","Тщательно следи за его работой, и лучше дать ему чаевые. Чтобы не натворил чего-либо","В нашей автомастерской ты сделаешь конфетку из твоей малышки","Мы используем только новейшие функции","Удачи, спасибо за то что выслушал."},
{"Джеймс","Добро пожаловать в наш автосервис Las Venturas","Чтобы затюнинговать автомобиль тебе понадобится механик","Найти его можешь в справочнике (( / dir ))","Тщательно следи за его работой, и лучше дать ему чаевые. Чтобы не натворил чего-либо","В нашей автомастерской ты сделаешь конфетку из твоей малышки","Мы используем только новейшие функции","Удачи, спасибо за то что выслушал."},
{"Джеймс","Добро пожаловать в наш автосервис San Fierro","Чтобы затюнинговать автомобиль тебе понадобится механик","Найти его можешь в справочнике (( / dir ))","Тщательно следи за его работой, и лучше дать ему чаевые. Чтобы не натворил чего-либо","В нашей автомастерской ты сделаешь конфетку из твоей малышки","Мы используем только новейшие функции","Удачи, спасибо за то что выслушал."},
{"Марио","Погода сегодня хорошая, птички поют","Я тут работаю охранником,работа не скучная по себе","Много убийц тут бродят, оглядывайся","Если что набирай","","",""},
{"Кевин","Неплохой ремонт сделали для столь скучного здания","Я как боец из отряда снайперов, правильно выбор это место","Удобные позиции для нейтрализации убийц","Будь аккуратней, здесь много народа обитает","Если что набирай","",""},
{"Алекс","Если у тебя проблемы с здоровьем ложись на койку","Лечь на койку ты можешь в палате","Также тебя быстрее могут вылечить врачи","Но им нужно заплатить денег","Получить их можешь на работе","Если будет плохо обращайся",""},
{"Корбен","Здравия желаю, гражданин","Как говорил наш майор: Не служил, не мужик !","В нашем военкомате, ты получишь незабываемые годы твоей жизни","Научишься стрелять, драться, займешься спортом","Тут часто проводят призывы, следи за государственными новостями","Удачного времяпровождения в нашем штате",""},
{"Федор","Ты долго ехал на поезде","И вот ты приехал в штат Los-Santos","Тебя ждут уйма приключений и развлечений","А также ты можешь стать бандитом или мафиози","Управляющим правительством этого города или Ведущим новостей","Главнокомандующим армий либо Шерифом этого штата","Все зависит только от тебя! Ты можешь стать ЛЕГЕНДОЙ!"},
{"Акено","Привет мой дорогой друг маяк хоть и староват но все еще светит кораблям","Море сегодня спокойное, светит солнце","Самое время чтобы покататься на катере","Приглашай своих друзей и получай удовольствие в нашем штате","Если не умеешь плавать захвати с собой плавательный жилет","Удачного времяпровождения в нашем штате",""},
{"Патрик","Здарова браток, ну что добро пожаловать к нам","Скажу тебе сразу, за свой базар отвечать будешь сам.","Ты здесь новенький, так что слушай сюда","Я костыль, кликуха по ноге, потерял когда от мусоров бежал","Скажу тебе сразу браток, если ты сюда попал это уже плохо","Здесь сидят ужасные люди и я не советую тебе здесь больше светится","Лучше отсиди спокойно свой срок"},//
{"Армандо","Добрый день, я консультант и я могу вам помочь в выборе оружия","Наш магазин является одним из самых лучших магазинов в штате","У нас есть много видов оружия","Пистолет с глушителем, MP5, Shotgun, Rifle, M4","Только наши оружия обладают хорошой точностью, и имеют большой калибр","Также у нас есть и другие оружия","Желаю Вам удачи, наш штат самый лучший!"},
{"Мигель","Добро пожаловать в элитный район, житель нашего штата, Я Риэтор!","И я тебе расскажу о районе VineWood","Здесь в основном живут самые богатые люди нашего штата","Этот район отличается не только красотой и аккуратность, но и экологоческой чистотой","Наши улицы всегда чисты, ведь у нас работает команда уборщиков","Ищите зеленый домик на Вашем радаре, и приобретайте замечательный дом!","Оставайтесь в нашем замечательном штате "PROJECT_STATE},
{"Билл","Привет мой дорогой друг","Добро пожаловать на одно из самых красивых мест нашего штата \" Глен Парк \"","Когда-то давно, здесь бегали детишки, гуляли люди.","Но наш мир изменился, пришли нигеры в розовых повязках. Их зовут Ballas","Они пришли сюда, и возомнили себя королями","Начали всех убивать, громить и с тех пор тут никто не живет","Будь аккуратней тут, желаю тебе удачи"},
{"Гендальф","Добрый день, уважаемый житель этого штата","Добро пожаловать в наш Автосалон","У нас огромный выбор различных автомобилей","Любые цвета, различные покраски","Наши автомобили собраны на нашем заводе, где производятся автомобили высшего качества","Придя к нам в автосалон, вы не останетесь обиженными, ведь мы даем гарантию!","Оставайтесь в нашем штате, мы лучшие"},
{"Гендальф","Добрый день, уважаемый житель этого штата","Добро пожаловать в наш Автосалон","У нас огромный выбор различных автомобилей","Любые цвета, различные покраски","Наши автомобили собраны на нашем заводе, где производятся автомобили высшего качества","Придя к нам в автосалон, вы не останетесь обиженными, ведь мы даем гарантию!","Оставайтесь в нашем штате, мы лучшие"},
{"Гендальф","Добрый день, уважаемый житель этого штата","Добро пожаловать в наш Автосалон","У нас огромный выбор различных автомобилей","Любые цвета, различные покраски","Наши автомобили собраны на нашем заводе, где производятся автомобили высшего качества","Придя к нам в автосалон, вы не останетесь обиженными, ведь мы даем гарантию!","Оставайтесь в нашем штате, мы лучшие"},
{"Гендальф","Добрый день, уважаемый житель этого штата","Добро пожаловать в наш Автосалон","У нас огромный выбор различных автомобилей","Любые цвета, различные покраски","Наши автомобили собраны на нашем заводе, где производятся автомобили высшего качества","Придя к нам в автосалон, вы не останетесь обиженными, ведь мы даем гарантию!","Оставайтесь в нашем штате, мы лучшие"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Доминик","Добро пожаловать на заправку","У нас бывают скидки, вы пришли очень вовремя","Если вы хотите заправить свой автомобиль","Откройте бензобак и вставьте шланг","После чего оплатите счет (( /fill ))","Заправляйтесь у нас почаще, у нас лучший бензин","Удачного проживания в нашем штате!"},
{"Генри","Добро пожаловать на завод","Здесь вы можете устроится на работу \"Развозщика Продуктов\"","Наша работа проста, но при этом высокооплачиваема","Ваша задача привозить продукты в различные магазины","И получать зарплату","",""},
{"Люси","Добро пожаловать в банк","Наш банк является самым надежным во всем штате","Ваши деньги всегда находятся в полной сохранности и никуда не денутся","У нас есть много различных услуг, кторые выполняются мгновенно","Помните! Никому не давайте Ваш PIN-код","Мы рады, что вы решили воспользоваться услугами нашего банка","Желаем вам приятного времяпровождения в штате"},
{"Джулио","Привет, я местный следящий за перестрелками","Как думаю тебе известно, в нашем мире проходят постоянные войны за территории","Именно этим я и занимаюсь, я очень люблю следить за мафиоози","Постоянно нахожу ошибки в перестрелках, которые заканчиваются провалом","В основном ошибки состоят в том что мы не слушаем друг-друга","Поэтому запомни, всегда слушай других и все получится","Удачных перестрелок, дорогой друг"},
{"Джулио","Привет, я местный следящий за перестрелками","Как думаю тебе известно, в нашем мире проходят постоянные войны за территории","Именно этим я и занимаюсь, я очень люблю следить за мафиоози","Постоянно нахожу ошибки в перестрелках, которые заканчиваются провалом","В основном ошибки состоят в том что мы не слушаем друг-друга","Поэтому запомни, всегда слушай других и все получится","Удачных перестрелок, дорогой друг"},
{"Джулио","Привет, я местный следящий за перестрелками","Как думаю тебе известно, в нашем мире проходят постоянные войны за территории","Именно этим я и занимаюсь, я очень люблю следить за мафиоози","Постоянно нахожу ошибки в перестрелках, которые заканчиваются провалом","В основном ошибки состоят в том что мы не слушаем друг-друга","Поэтому запомни, всегда слушай других и все получится","Удачных перестрелок, дорогой друг"},
{"Аня","Привет, я местный следящий за перестрелками","Как думаю тебе известно, в нашем мире проходят постоянные войны за территории","Именно этим я и занимаюсь, я очень люблю следить за мафиоози","Постоянно нахожу ошибки в перестрелках, которые заканчиваются провалом","В основном ошибки состоят в том что мы не слушаем друг-друга","Поэтому запомни, всегда слушай других и все получится","Удачных перестрелок, дорогой друг"}
};
new bot_data_[MAX_NPC_BOT+1][2]={{0,0},//null

	// id skina , virt mir

	{303,0},//1
	{164,700},//2 - УКАЖИ ВИРТУАЛЬНЫЙ МИР МЭРИИ ЛОС САНТОС
	{182,0},//3
	{182,0},//4
	{32,0},//5
	{50,0},//6
	{50,0},//7
	{50,0},//8
	{98,0},//9
	{98,0},//10
	{276,0},//11 - УКАЖИ ВИРТУАЛЬНЫЙ МИР БОЛЬНИЦЫ ЛС
	{287,0},//12
	{26,0},//13 - УКАЖИ ВИРТУАЛЬНЫЙ МИР ИНТЫ ГДЕ ИГРОКИ СПАВНЯТСЯ И ДЕЛЬФИНЫ ПЛАВАЮТ
	{98,0},//14
	{200,1},//15 - УКАЖИ ВИРТУАЛЬНЫЙ МИР ДЕМОРГАНА
	{206,0},//16
	{171,0},//17
	{29,0},//18
	{133,0},//19
	{133,0},//20
	{133,0},//21
	{133,0},//22
	{42,0},//23-0
	{42,0},//24-1
	{42,0},//25-2
	{42,0},//26-3
	{42,0},//27-4
	{42,0},//28-5
	{42,0},//29-6
	{42,0},//30-7
	{42,0},//31-8
	{42,0},//32-9
	{42,0},//33-10
	{42,0},//34-11
	{42,0},//35-12
	{42,0},//36-13
	{42,0},//37-14
	{42,0},//38-15
	{42,0},//39-16
	{42,0},//40-17
	{42,0},//41-18
	{37,0},//42
	{11,1},//43 - УКАЖИ ВИРТУАЛЬНЫЙ МИР БАНКА !
	{292,0},//44
	{292,0},//45
	{292,0},//46
	{211,0}//47
};
static bot_id[MAX_NPC_BOT+1]={0,...};
static Text3D:bot_text[MAX_NPC_BOT+1]={Text3D:0,...};
static bool:IsAUseBot[MAX_NPC_BOT+1]={false,...};
static cd_bot[MAX_NPC_BOT+1]={0,...};
static CheckTimeTimer=65535;
static bot_area[MAX_NPC_BOT+1]={-1,...};

/*static const stock Float:BolkaSpawn[10][3]={
{2469.4172,-1790.3633,1224.4102},{2472.9568,-1792.3705,1224.4102},{2462.6885,-1791.2012,1224.4102},
{2466.0789,-1792.6885,1224.4102},{2465.7886,-1815.7416,1224.4102},{2461.9546,-1816.6563,1224.4102},
{2455.8977,-1816.8103,1224.4102},{2452.4851,-1817.0701,1224.4102},{2453.8481,-1790.7255,1224.4102},{2457.2764,-1790.6929,1224.4102}
};

static const stock Float:BolkaKoika[10][4]={
{2452.4238,-1790.8798,1225.2676,177.1217},{2458.5320,-1791.1111,1225.2676,183.0751},{2457.4683,-1817.0178,1225.2676,4.7633},
{2450.7188,-1817.1132,1225.2676,357.4116},{2463.0959,-1816.7697,1225.2676,350.6396},{2465.7371,-1814.3807,1225.2676,84.9538},
{2461.2764,-1790.7632,1225.2676,184.2345},{2466.4775,-1791.3739,1225.2676,83.9903},{2469.0811,-1791.6013,1225.2676,268.5454},{2473.5735,-1790.7075,1225.2676,175.0262}
};*/

new Float:HospitalSpawn[4][3] = {
{-375.7899,-55.1467,-52.0950},
{-385.5923,-54.4515,-52.0950},
{-366.9542,-46.5990,-52.0950},
{-367.8301,-56.6533,-52.0950}
};





const Float: Radius = 1.4; //do not edit this
const Float: Speed  = 3.0; //do not edit this
const Float: Height = 1.0; // do not edit this




#define DIALOG_ATTACH_INDEX             6550
#define DIALOG_ATTACH_EDITREPLACE       6551
#define DIALOG_ATTACH_MODEL_SELECTION   6552
#define DIALOG_ATTACH_BONE_SELECTION    6553

enum AttachmentEnum {     attachmodel,     attachname[25] }
static const stock AttachmentObjects[143][AttachmentEnum] = { {18636, "Полицейская кепка"},{18639, "Черная шляпа"},{18645, "Шлем"}, {18891, "Бандана 1"}, {18892, "Бандана 2"}, {18893, "Бандана 3"}, {18894, "Бандана 4"},
{18895, "Бандана 5"}, {18896, "Бандана 6"}, {18897, "Бандана 7"}, {18898, "Бандана 8"}, {18899, "Бандана 9"}, {18900, "Бандана 10"}, {18901, "Бандана 11"}, {18902, "Бандана 12"}, {18903, "Бандана 13"},
{18904, "Бандана 14"}, {18905, "Бандана 15"}, {18906, "Бандана 16"}, {18907, "Бандана 17"}, {18908, "Бандана 18"}, {18909, "Бандана 19"}, {18910, "Бандана 20"}, {18911, "Маска 1"}, {18912, "Маска 2"},
{18913, "Маска 3"}, {18914, "Маска 4"}, {18915, "Маска 5"}, {18916, "Маска 6"}, {18917, "Маска 7"}, {18918, "Маска 8"},
{18919, "Маска 9"}, {18920, "Маска 10"}, {18921, "Берет 1"}, {18922, "Берет 2"}, {18923, "Берет 3"}, {18924, "Берет 4"}, {18925, "Берет 5"}, {18926, "Шляпа 1"}, {18927, "Шляпа 2"}, {18928, "Шляпа 3"}, {18929, "Шляпа 4"},
{18930, "Шляпа 5"}, {18931, "Шляпа 6"}, {18932, "Шляпа 7"}, {18933, "Шляпа 8"}, {18934, "Шляпа 9"}, {18935, "Шляпа 10"}, {18939, "Кепка повернутая назад 1"}, {18940, "Кепка повернутая назад 2"}, {18941, "Кепка повернутая назад 3"},
{18942, "Кепка повернутая назад 4"}, {18943, "Кепка повернутая назад 5"}, {18944, "Шляпа лодочника 1"}, {18945, "Шляпа лодочника 2"}, {18946, "Шляпа лодочника 3"}, {18952, "Шлем для бокса"}, {18967, "Мужская шляпа 1"}, {18968, "Мужская шляпа 2"},
{18969, "Мужская шляпа 3"}, {18970, "Тигровая шляпа 1"}, {18971, "Спокойная шляпа 1"}, {18972, "Спокойная шляпа 2"}, {18973, "Спокойная шляпа 3"}, {18974, "Маска зорро"}, {18976, "Шлем для мотоцикла 1"},
{18977, "Шлем для мотоцикла 2"},{18978, "Шлем для мотоцикла 3"}, {18979, "Шлем для мотоцикла 4"}, {19006, "Очки 1"}, {19007, "Очки 2"}, {19008, "Очки 3"}, {19009, "Очки 4"}, {19010, "Очки 5"},
{19011, "Очки 6"}, {19012, "Очки 7"}, {19013, "Очки 8"}, {19014, "Очки 9"}, {19015, "Очки 10"}, {19016, "Очки 11"}, {19017, "Очки 12"}, {19018, "Очки 13"}, {19019, "Очки 14"}, {19020, "Очки 15"}, {19021, "Очки 16"}, {19022, "Очки 17"}, {19023, "Очки 18"},
{19024, "Очки 19"}, {19025, "Очки 20"}, {19026, "Очки 21"}, {19027, "Очки 22"}, {19028, "Очки 23"}, {19029, "Очки 24"}, {19030, "Очки 25"}, {19031, "Очки 26"}, {19032, "Очки 27"}, {19033, "Очки 28"}, {19034, "Очки 29"}, {19035, "Очки 30"}, {19036, "Хокейная маска 1"},
{19037, "Хокейная маска 2"}, {19038, "Хокейная маска 3"}, {19039, "Часы 1"}, {19040, "Часы 2"}, {19041, "Часы 3"}, {19042, "Часы 4"}, {19043, "Часы 5"}, {19044, "Часы 6"}, {19045, "Часы 7"}, {19046, "Часы 8"}, {19047, "Часы 9"}, {19048, "Часы 10"}, {19049, "Часы 11"}, {19050, "Часы 12"}, {19051, "Часы 13"}, {19052, "Часы 14"}, {19053, "Часы 15"}, {19085, "Повязка на глаз"},
{19093, "Каска 2"}, {19094, "Шляпа 'Бургер-шот'"}, {19137, "Шляпа 'Cluckin-Bell'"}, {19095, "Ковбойская шляпа 1"}, {19096, "Ковбойская шляпа 2"}, {19097, "Ковбойская шляпа 3"}, {19098, "Ковбойская шляпа 4"}, {19099, "Полицейская кепка 1"}, {19100, "Полицейская кепка 2"},{19101, "Армейский шлем 1"}, {19102, "Армейский шлем 2"},{19103, "Армейский шлем 3"},{19104, "Армейский шлем 4"},
{19105, "Армейский шлем 5"},{19106, "Армейский шлем 6"}, {19107, "Армейский шлем 7"},{19108, "Армейский шлем 8"},{19109, "Армейский шлем 9"},{19110, "Армейский шлем 10"}, {19111, "Армейский шлем 11"},{19112, "Армейский шлем 12"},{19138, "Полицейские очки 1"},{19139, "Полицейские очки 2"},{19140, "Полицейские очки 3"},{19578, "Банан"} };
static const stock AttachmentBones[6][24] = { {"Спина"}, {"Голова"}, {"Левое плечо"}, {"Правое плечо"}, {"Левая рука"}, {"Правая рука"} };

/*enum GP_DATA
{
	g_modelid,
	g_boneid,

	Float:g_fOffsetX,
	Float:g_fOffsetY,
	Float:g_fOffsetZ,

	Float:g_fRotX,
	Float:g_fRotY,
	Float:g_fRotZ,

	Float:g_fScaleX,
	Float:g_fScaleY,
	Float:g_fScaleZ,
}
static stock GP_AO[MAX_PLAYERS][MAX_PLAYER_ATTACHED_OBJECTS][GP_DATA];*/

enum MAKEGUN_DATA
{
	mgunname[24],
	mgunamount,
	mgunid
}
static stock MakeGunData [7] [MAKEGUN_DATA] ={
{"SD Pistol", 		70, 	23},
{"Desert Eagle", 	180, 	24},
{"MP5", 			200, 	29},
{"Shotgun", 		280, 	25},
{"M4", 				300, 	31},
{"AK-47", 			380, 	30},
{"Rifle", 			350, 	33}
};

enum MzoneInfo
{
	bFrakVlad,
	bNapad,
	bBiz,
	Float:bWarPos [ 4 ],
	bCountDead[15]
}
new MZInfo[MzoneInfo];

#define AUTO_CP_COUNT 27
new Float:AutoCP[AUTO_CP_COUNT][4]=
{
	{-2045.5034,-81.3314,34.8719,2.0},
	{-2035.0221,-72.2929,34.8765,0.0},
	{-2020.7828,-72.0763,34.8761,1.0},
	{-2005.0571,-56.9266,34.8697,0.0},
	{-2003.5660,91.3395,27.2438,0.0},
	{-2002.4558,245.4980,29.2576,0.0},
	{-2000.3090,497.1397,34.7202,0.0},
	{-1999.7285,587.7932,34.7218,2.0},
	{-1987.0691,601.0855,34.7221,0.0},
	{-1810.6630,600.6031,34.7202,0.0},
	{-1708.9204,715.1110,24.4474,1.0},
	{-1729.3916,734.9172,24.7214,0.0},
	{-1879.6892,733.9241,45.0021,1.0},
	{-1902.3041,715.7189,45.0013,0.0},
	{-1901.3370,590.4911,34.6762,0.0},
	{-1847.4181,437.1371,16.7162,0.0},
	{-1986.9159,348.6039,34.5533,1.0},
	{-2008.4470,333.3606,34.7121,0.0},
	{-2019.4875,323.2181,34.7201,0.0},
	{-2132.4695,322.3549,34.8407,1.0},
	{-2148.9885,307.6719,34.8768,0.0},
	{-2162.1257,98.3783,34.8744,0.0},
	{-2169.7368,-55.8613,34.8783,1.0},
	{-2154.1938,-72.2901,34.8769,0.0},
	{-2057.1604,-71.9640,34.8747,2.0},
	{-2049.9268,-83.2252,34.8666,0.0},
	{-2088.0454,-125.9719,35.0284,0.0}
};
new Errors_AU[MAX_PLAYERS]={0,...};


new BizWarTime = 0, BizHourTime = 0;

new biz_war_gangzone = - 1;



new VladGzone[MAX_FRACTIONS]={0,...};

new gSettingName[5][47+1] = {
	"Показывать информацию о действиях администрации",
	"Показывать чат организации",
	"Показывать ID игроков в чате",
	"Показывать ники игроков",
	"Принимать личные сообщения"
};
new Settings[MAX_PLAYERS];

static stock JizzyDJID = INVALID_PLAYER_ID;

			//


#define MAX_CREATE_OBJECT_PLAYER 39
enum object_list_data
{
	object_list_name[64],
	object_list_id
}
new object_list[MAX_CREATE_OBJECT_PLAYER][object_list_data]={
	{"Моргающая белая лампочка", 19289},//1
	{"Моргающая красная лампочка", 19290},//2
	{"Моргающая зеленая лампочка", 19291},//3
	{"Моргающая синяя лампочка", 19292},//4
	{"Моргающая фиолетовая лампочка", 19293},//5
	{"Моргающая желтая лампочка", 19294},//6
	{"Мангал", 19831},//7
	{"Стул", 19996},//8
	{"Стол", 19997},//9
	{"Коврик для пляжа", 1640},//10
	{"Будка спасателя", 1637},//11
	{"Доска для сёрфинга (Rockstar)",2404 },//12
	{"Доска для сёрфинга", 2405},//13
	{"Вино", 1487 },//14
	{"Бокал с вином", 1667 },//15
	{"Светодиодный коврик для дискотеки",19128},//16
	{"Прожектор красный", 19605},//17
	{"Прожектор зеленый", 19606},//18
	{"Прожектор синий", 19607},//19
	{"Прожектор желтый", 19902},//20
	{"Не моргающая белая лампочка", 19281},//21
	{"Не моргающая красная лампочка", 19282},//22
	{"Не моргающая зеленая лампочка",19283},//23
	{"Не моргающая синяя лампочка", 19284},//24
	{"Прожектор синего цвета", 19947},//25
	{"Прожектор зеленого цвета", 19946},//26
	{"Прожектор красного цвета", 19945},//27
	{"Решетка короткая", 19912},//28
	{"Решетка длинная", 19913},//29
	{"Большой коврик для дискотеки",19129},//30
	{"Курица", 16776 },//31
	{"Прожектор белого цвета", 18656},//32
	{"Прожектор синего цвета", 18658},//33
	{"Прожектор красного цвета", 18657},//34
	{"Огонь маленький", 18681},//35
	{"Огонь \"Перевернутое сердце\"", 18682},//36
	{"Огонь большой", 18683},//37
	{"Огонь маленькое \"Перевернутое сердце\"", 18684},//38
	{"Огонь с дымом и дровам", 19632}//39
};
new objects_player_create[MAX_PLAYERS][MAX_CREATE_OBJECT_PLAYER];



SendErr(playerid,text[])
{
	format(stringer, 144, "[Ошибка] {"#cWHITE"}%s",text);
	SendClientMessage(playerid, 0x800000FF, stringer);
	return 1;
}

SendSucc(playerid,text[])
{
	format(stringer, 144, "[Успешно] {"#cWHITE"}%s",text);
	SendClientMessage(playerid, 0x7CFC00AA, stringer);
	return 1;
}

SendInf(playerid,text[])
{
	format(stringer, 144, "[Информация] {"#cWHITE"}%s",text);
	SendClientMessage(playerid, 0xADFF2FAA, stringer);
	return 1;
}
/* -------------------- Система семей ---------------------- */
#define MAX_FAMILY 500

enum family_data_
{
	family_mysql_id,
	family_national,
	family_chat_color,
	family_create_name[32],
	family_create_data[32],
	family_owner_create_name[MAX_PLAYER_NAME],
	family_vehicle_id[5],
	family_vehicle_temp_id[5],
	family_vehicle_model[5],
	family_vehicle_v1[5],
	family_vehicle_v2[5],
	Float:family_vehicle_pos_x[5],
	Float:family_vehicle_pos_y[5],
	Float:family_vehicle_pos_z[5],
	Float:family_vehicle_pos_a[5]
}
new _family[MAX_FAMILY][family_data_];








/*
ALTER TABLE  `family` ADD  `FamilyVehicleData_0` VARCHAR( 120 ) CHARACTER SET cp1251 COLLATE cp1251_general_ci NOT NULL DEFAULT  '0,0,0,0.0,0.0,0.0,0.0',
ADD  `FamilyVehicleData_1` VARCHAR( 120 ) CHARACTER SET cp1251 COLLATE cp1251_general_ci NOT NULL DEFAULT  '0,0,0,0.0,0.0,0.0,0.0',
ADD  `FamilyVehicleData_2` VARCHAR( 120 ) CHARACTER SET cp1251 COLLATE cp1251_general_ci NOT NULL DEFAULT  '0,0,0,0.0,0.0,0.0,0.0',
ADD  `FamilyVehicleData_3` VARCHAR( 120 ) CHARACTER SET cp1251 COLLATE cp1251_general_ci NOT NULL DEFAULT  '0,0,0,0.0,0.0,0.0,0.0',
ADD  `FamilyVehicleData_4` VARCHAR( 120 ) CHARACTER SET cp1251 COLLATE cp1251_general_ci NOT NULL DEFAULT  '0,0,0,0.0,0.0,0.0,0.0'
*/

//new FamilySetNationality[MAX_FAMILY];
//new FamilySetChatColor[MAX_FAMILY];
//new gCreateFamilyName[MAX_FAMILY][32];
//new gFamilyCreateData[MAX_FAMILY][22];
//new gFamilyCreateName[MAX_FAMILY][MAX_PLAYER_NAME];
new FamilyColor[5]={	0xFFFFFFFF,0xFFD39BFF,0xFFFF00FF,0x54FF9FFF,0x98F5FFFF	};
new FamilyChatColor[5][7] ={"FFFFFF","FFD39B","FFFF00","54FF9F","98F5FF" };
new FamilyChatGlobalColor[5][7] ={"FFFFFF","D9B384","D1D100","43CC7F","75BDC4" };
new FamilyNation[9][28]={	"Американцы","Японцы","Итальянцы","Мексиканцы","Латиноамериканцы","Испацны","Русские","Португальцы","Французы"	};
new TotalFamily = 0;

#define CREATE_FAMILY_STEP_NAME 0
#define CREATE_FAMILY_STEP_COLOR 1
#define CREATE_FAMILY_STEP_NATION 2
#define dEditFamily 7769
#define dSelectEditFamily 7770
#define dSelectEditColor 7771
#define dSelectEditNation 7772
#define dOffUninviteFamily 7773
#define dSelectEditVehicle 7774
#define dSelectEditVehicle1 7775
#define dSelectEditVehicle2 7776
#define dSelectEditVehicle3 7777
#define dSelectEditVehicle4 7778
#define dSelectEditVehicle5 7779
#define dSelectEditVehicle6 7780
#define dSelectEditFamilyHouse 7781
#define dEditFamilyNameChange 7782
#define dEnterFamilyHouse 7783
/* ------------------------------------------------------- */
new MySQL: connects;

stock UpdateFarm(f)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "UPDATE `wrp_farm` SET `farm_cost_flow` = '%d', `farm_sklad_count` = '%d', `farm_owner` = '%s', `farm_cash` = '%d', `farm_load` = '%d' WHERE `id` = '%d'", _farm[f][farm_cost_flow],_farm[f][farm_sklad_count],_farm[f][farm_owner],_farm[f][farm_cash],_farm[f][farm_load],_farm[f][farm_mysql_id]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}
//

//
//new nalog = 0;
//
new TotalAdminVehicles = 0;

new caridhouse[MAX_PLAYERS][2];

new VehicleNames[212][32] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};


enum ADVERT_DATA
{
	adSender[24],
	adID,
	adCheker[24],
	adCheckID,
	adPhone,
	adText[100],
	adTime,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}
new gAdvert[15][ADVERT_DATA];

enum VIP_DATA
{
	adSender[24],
	adText[100],
	adID,
	adTime,
	adNumber
}
new gVip[MAX_PLAYERS][VIP_DATA];

new gVipTime = 0;


new gAdvertCount = 0;
new gAdvertPrice = 4;
new gAdvertTime = 0;

new sellgun,sellgun1,sellgun2,sellgun3,sellgun4;
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
//
new Text:AutoShopText[9];

// PlayerText
new PlayerText:ShopText[MAX_PLAYERS]={PlayerText:-1, ...};
new Text:Bizwar[4];
new Text:Bizwar2[4];
new Text:Capture[9];
new Text:GangInfo_TD[28];
new PlayerText:GangInfo_P_TD[MAX_PLAYERS][2];
new show_info_band[MAX_PLAYERS]={false, ...};
new show_info_mafia[MAX_PLAYERS]={false, ...};
new bool:robbanks = false;
new robtime;
new bankdoors = false,lighttime;
// гавно
new DoorOpen;
new zakonn = 0;
new healpric = 100, smspricels = 50, bool:smsls = false;
new Text3D:PlayerMehText[MAX_PLAYERS];
// Гавно 3



new Army;

new Medics = 0,Mechanics = 0,Police = 0;
new MechanicCall = INVALID_PLAYER_ID,PoliceCall = INVALID_PLAYER_ID,MedicCall = INVALID_PLAYER_ID;

// гавно2


/*new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 15;
new timeshift = 0;
new shifthour;*/


//

//
new sellpatrcp[2];
new Text3D:PatronText[MAX_PLAYERS]={Text3D:-1, ...};
new	buscar[2];

//new matscar[2];
//new Text3D:matscartext[2];
new load_mats_ar [3];


stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
enum PLAYER_DATA
{
	pID,
	pCheckKey,
	pMed,
	pFamily,
	pSpawn,
	pRouble,
	pTempKey,
	pReg,
	pPoint,
	pLevel,
	pAdmin,
	pAvig,
	pProz,
	pProz2,
	pDonateRank,
	tDonatemoney2,
	pMats,
	pPatron,
	pSex,
	pExp,
	pCash,
	pKills,
	pJailTime,
	pDrugs,
	tLeader,
	pSubLeader,
	tMember,
	tRank,
	pChar,
	pJob,
	pModel,
	pPnumber,
	tHelper,
	pHouse,
	pPbiskey,
	pZakonp,
	//
	pGunSkill[6],
	pPayDayHad,
	pWarns,
	punWarnstime,
	pMarried[40],
	pMuteTime,
	pRMuteTime,
	//pBank,
	pMobile,
	pWanted,
	pVerevka,
	pOtmbI4ka,
	pTime,
	pTimeAFK,
	pAFK,
	pVipCar,
	pRoom,
	pFloor,
	pMestoJail,
	pModelPhone,
	pNation,
	pAge,
	pSalary,
	bool:pOnline,
	pBizCash,
	pStats[3],
	P_Style[3],
	p_veh_number[2],
	SalonInfo[2],
	p_plane,
	p_plane_color[2],
	p_boat,
	p_boat_color[2],
	Disease[3],
	pSetWalk,
	pSetAnim,
	Float:pShield,
	//Cache:pData,
	p_f_mute,
	Float:p_car_fuel[2],
	Float:p_car_pos_x[2],
	Float:p_car_pos_y[2],
	Float:p_car_pos_z[2],
	Float:p_car_pos_a[2],
	p_car_vw[2],
	p_car_int[2],
	pAbletoTP,
	bool:pAbletoTP2,
	Float:pX,
	Float:pY,
	Float:pZ,
	pLastTick_A,
	pKick,
	pCalling,
	pONPhoneTalk,
	pSpining,
	pWorms,
	pArmours,
	pKanistra,
	pDee,
	pTrunkGun1[9],
	pTrunkAmmo1[9],
	pTrunkGun2[9],
	pTrunkAmmo2[9],
	pTrunkMoney[2],
	pTrunkDrugs[2],
	pTrunkMats[2],
	pTrunkArmours[2],
	pTrunkKanistra[2],
	pTrunkDee[2],
	pHeadValue,
	pContractDetail[32],
	pContractBy[24],
	pC4,
	pC4Get,
	pC4Used,
	pCHits,
	pFHits,
	pBombs,
	Cache:Cache_ID,
	pEat,
	pFeFinder,
	pNewYear
}

//
new p_info[MAX_PLAYERS][PLAYER_DATA];

new online_player[MAX_PLAYERS][3];
new online_player_afk[MAX_PLAYERS][3];



stock AC_LinkVehicleToInterior(vehicleid, interiorid)
{
	foreach(i)
	{
		if ( vehicleid == caridhouse[i][0] ) p_info[i][p_car_int][0] = interiorid;
		else if ( vehicleid == caridhouse[i][1] ) p_info[i][p_car_int][1] = interiorid;
		if(GetPlayerVehicleID(i) == vehicleid)
		{
			SetPlayerInterior(i,interiorid);
		}
	}
	return LinkVehicleToInterior(vehicleid, interiorid);
}

stock AC_SetVehicleVirtualWorld(vehicleid, worldid)
{
	foreach(i)
	{
		if ( vehicleid == caridhouse[i][0] ) p_info[i][p_car_vw][0] = worldid;
		else if ( vehicleid == caridhouse[i][1] ) p_info[i][p_car_vw][1] = worldid;
		if(GetPlayerVehicleID(i) == vehicleid)
		{
			SetPlayerVirtualWorld(i,worldid);
		}
	}
	return SetVehicleVirtualWorld(vehicleid, worldid);
}
stock GetIntBoot(playerid,slot)
{
	switch(slot){
		case 2: return TrunkInfo[idaofcar[playerid]][tMoney];
		case 3: return TrunkInfo[idaofcar[playerid]][tDrugs];
		case 4: return TrunkInfo[idaofcar[playerid]][tMats];
		case 5: return TrunkInfo[idaofcar[playerid]][tArmours];
		case 6: return TrunkInfo[idaofcar[playerid]][tKanistra];
		case 7: return TrunkInfo[idaofcar[playerid]][tDee];
	}
	return -1;
}
stock SetIntBoot(playerid,slot,data)
{
	switch(slot){
		case 2: TrunkInfo[idaofcar[playerid]][tMoney]=data;
		case 3: TrunkInfo[idaofcar[playerid]][tDrugs]=data;
		case 4: TrunkInfo[idaofcar[playerid]][tMats]=data;
		case 5: TrunkInfo[idaofcar[playerid]][tArmours]=data;
		case 6: TrunkInfo[idaofcar[playerid]][tKanistra]=data;
		case 7: TrunkInfo[idaofcar[playerid]][tDee]=data;
	}
	return -1;
}

stock CheckGetBoot(playerid,slot,put)
{
	switch(slot)
	{
		case 2:
		{
			TransferMoney(playerid,p_info[playerid][pCash]+put,put,"взял деньги из багажника");
			p_info[playerid][pCash]+=put;
			UpdateMoney(playerid);
			return 1;
		}
		case 3:
		{
			p_info[playerid][pDrugs]+=put;
			UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
			return 1;
		}
		case 4:
		{
			p_info[playerid][pMats]+=put;
			UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);
			return 1;
		}
		case 5:
		{
			p_info[playerid][pArmours]+=put;
			UpdatePlayerData(playerid,"pArmours",p_info[playerid][pArmours]);
			return 1;
		}
		case 6:
		{
			p_info[playerid][pKanistra]+=put;
			UpdatePlayerData(playerid,"pKanistra",p_info[playerid][pKanistra]);
			return 1;
		}
		case 7:
		{
			p_info[playerid][pDee]+=put;
			UpdatePlayerData(playerid,"pDee",p_info[playerid][pDee]);
			return 1;
		}
	}
	return 1;
}

stock CheckPutBoot(playerid,slot,put)
{
	switch(slot)
	{
		case 2:
		{
			if(p_info[playerid][pCash]<put) return 0;
			TransferMoney(playerid,p_info[playerid][pCash]-put,put,"положил деньги в багажник");
			p_info[playerid][pCash]-=put;
			UpdateMoney(playerid);
			return 1;
		}
		case 3:
		{
			if(p_info[playerid][pDrugs]<put) return 0;
			p_info[playerid][pDrugs]-=put;
			UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
			return 1;
		}
		case 4:
		{
			if(p_info[playerid][pMats]<put) return 0;
			p_info[playerid][pMats]-=put;
			UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);
			return 1;
		}
		case 5:
		{
			if(p_info[playerid][pArmours]<put) return 0;
			p_info[playerid][pArmours]-=put;
			UpdatePlayerData(playerid,"pArmours",p_info[playerid][pArmours]);
			return 1;
		}
		case 6:
		{
			if(p_info[playerid][pKanistra]<put) return 0;
			p_info[playerid][pKanistra]-=put;
			UpdatePlayerData(playerid,"pKanistra",p_info[playerid][pKanistra]);
			return 1;
		}
		case 7:
		{
			if(p_info[playerid][pDee]<put) return 0;
			p_info[playerid][pDee]-=put;
			UpdatePlayerData(playerid,"pDee",p_info[playerid][pDee]);
			return 1;
		}
	}
	return 0;
}
new Float:AmountDamageUron[MAX_PLAYERS][50];
new Float:Bankomats[53][4] =
{
	{1491.64, -1279.95, 14.27,90.00},
	{ 1641.49, -1172.26, 23.59, 270.00},
	{2250.82, -1667.82, 15.13,255.48},
	{461.87, -1512.79, 30.63,1.38},
	{2820.09, -1468.37, 15.97, 90.00},
	{-107.03, -305.86, 1.13, 180.00},
	{-1823.97, 1284.36, 16.03,110.70},
	{1810.93, -1905.23, 13.25,0.00},
	{1918.69, -1766.31, 13.25,-90.00},
	{1364.10, -1751.19, 13.25, 0.00},
	{1225.59, -1811.40, 16.25,90.00},
	{1147.24, -1773.07, 16.25,-90.00},
	{1232.28, -1415.86, 13.11,-90.00},
	{1367.62, -1290.17, 13.11,0.00},
	{753.93, -1384.86, 13.37,89.32},
	{1650.38, -1655.55, 22.19,90.50},
	{1949.18, -1986.50, 13.43,180.73},
	{2423.85, -1906.82, 13.22,359.22},
	{2253.93, -1758.64, 13.30,269.85},
	{2338.07, -1758.84, 13.30,269.85},
	{695.07, -609.90, 16.18,-89.33},
	{ 2733.04, -2458.37, 13.41,179.86},
	{ -68.99, 1209.25, 19.61,90.00},
	{ 652.04, 1705.81, 6.99,41.29},
	{ 1154.41, 1363.19, 10.63,270.00},
	{ 1626.66, 1814.01, 10.53,270.00},
	{ 2018.83, 1005.11, 10.53,180.00},
	{ 2239.50, 1282.36, 10.63,360.00},
	{ 2197.74, 1395.31, 11.02,90.00},
	{ 2093.95, 1450.54, 10.48, 134.65},
	{ 2185.11, 1660.57, 10.76,285.21},
	{ 2257.25, 1804.71, 10.63,359.10},
	{ 2332.84, 2171.95, 10.60,180.00},
	{ 2619.40, 2345.90, 10.52,111.19},
	{ 2889.23, 2459.36, 10.89,134.97},
	{ 2597.39, 1086.47, 10.65,180.00},
	{ 2283.26, 2432.83, 10.62,90.00},
	{ 2479.92, 2520.86, 10.61,180.00},
	{ 2098.86, 2484.50, 10.90,89.78},
	{1177.1570, -610.8480, 1104.8850},
	{127.77, 1910.33, 18.55, 0.00},
	{-2674.95, 635.06, 14.30,90.0},
	{-2276.68, 535.11, 34.98,180.0},
	{-2186.82, 330.27, 35.09,90.0},
	{-2241.62, 83.38, 35.26,360.0},
	{-2034.73, -60.15, 35.11,90.0},
	{-2020.87, 128.47, 28.31,180.0},
	{-2017.89, 450.44, 35.05,180.0},
	{-1624.12, 716.50, 14.5,270.0},
	{-1712.51, 1349.73, 6.88,47.0},
	{-2765.62, 372.16, 6.00,180.0},
	{-2629.31, 1407.91, 6.85,159.0},
	{-863.6679,-1705.9749,-55.0440,340.9991455}
};

new UserKey[MAX_PLAYERS][64];
stock Float:ANTIFALSEX[MAX_PLAYERS];
stock Float:ANTIFALSEY[MAX_PLAYERS];
stock Float:ANTIFALSEZ[MAX_PLAYERS];
stock Float:TelePos[MAX_PLAYERS][6];
static LagServer[MAX_PLAYERS];

new start_work[MAX_PLAYERS];


CMD:showcasino(playerid)
{
	sm_ptd [ playerid ]  = CreatePlayerTextDraw ( playerid, 266.000000, 272.000000, "BET:  0$" ) ;
	PlayerTextDrawBackgroundColor ( playerid, sm_ptd [ playerid ] , 255 ) ;
	PlayerTextDrawFont ( playerid, sm_ptd [ playerid ] , 2 ) ;
	PlayerTextDrawLetterSize ( playerid, sm_ptd [ playerid ] , 0.310000, 2.700000 ) ;
	PlayerTextDrawColor ( playerid, sm_ptd [ playerid ] , -2711041 ) ;
	PlayerTextDrawSetOutline ( playerid, sm_ptd [ playerid ] , 1 ) ;
	PlayerTextDrawSetProportional ( playerid, sm_ptd [ playerid ] , 1 ) ;
	PlayerTextDrawSetSelectable ( playerid, sm_ptd [ playerid ] , 0 ) ;

	for ( new i = 0 ; i < 4 ; i ++ )
	{
		TextDrawShowForPlayer ( playerid, sm_td [ i ] ) ;
	}
	PlayerTextDrawShow ( playerid, sm_ptd [ playerid ] ) ;
	return 1;
}
CMD:check_exit_house_pos(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,COLOR_GREY,"Используйте: /check_exit_house_pos [klass]");

	new interior = params[0];

	SetPlayerInterior(playerid,gHouseExitInterior[interior]);

	AC_SetPlayerPos(playerid,gHouseExitInteriorPos[interior][0],gHouseExitInteriorPos[interior][1],gHouseExitInteriorPos[interior][2]);
	SetPlayerFacingAngle(playerid,gHouseExitInteriorPos[interior][3]);

	return 1;
}

CMD:check_spawn_house_pos(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,-1,"Используйте: /check_exit_house_pos [klass]");

	new interior = params[0];

	SetPlayerInterior(playerid,gHouseExitInterior[interior]);

	AC_SetPlayerPos(playerid,gHouseSpawnInteriorPos[interior][0],gHouseSpawnInteriorPos[interior][1],gHouseSpawnInteriorPos[interior][2]);
	SetPlayerFacingAngle(playerid,gHouseSpawnInteriorPos[interior][3]);

	return 1;
}

stock AC_PutPlayerInVehicle(playerid,vehicleid,seatid)
{
	SuperTick[playerid]=GetTickCount()-1000;
	VehicleEnters[playerid] = vehicleid;
	GetVehiclePos(vehicleid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
	p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	return PutPlayerInVehicle(playerid,vehicleid,seatid);
}

//new Float:pGolod[MAX_PLAYERS];
//
#define PLAYER_ROOM 	0
#define PLAYER_HOTEL 	1
//
#define MAX_PLAYER_CAR 	2
//
new PlayerCar[MAX_PLAYERS][MAX_PLAYER_CAR];
//static stock cVehcom[MAX_PLAYERS][14][MAX_PLAYER_CAR];
new HelperStat[MAX_PLAYERS][64];
new pNiksHistory[MAX_PLAYERS][10][MAX_PLAYER_NAME];
new Email[MAX_PLAYERS][64+1];
new Lic[MAX_PLAYERS][64];
//
enum HOUSE_DATA
{
	hID,
	account_id,
	Float:houseX,
	Float:houseY,
	Float:houseZ,
	Float:houseA,
	Float:houseParkX,
	Float:houseParkY,
	Float:houseParkZ,
	Float:houseParkR,
	houseOwner[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hLock,
	hKlass,
	hPickup,
	hArea,
	hMIcon,
	hDays,
	RentStatus[5],
	RentPlata[5],
	houseGun[9],
	houseSkin[3],
	houseImprove[4],
	houseSafeCode,
	houseSafeMoney,
	houseDrugs,
	gRentStatus,
	RentAllPlata,
	hFamily,
	hFamilyCode[32]
};
new gHouses[MAX_HOUSES + 1][HOUSE_DATA];
new gHouseArendator[MAX_HOUSES + 1][5][32+1];
new gHouseGunObject[MAX_HOUSES + 1][9];
new gHouseDressObject[MAX_HOUSES + 1][4];
static Text:td_furniture[7];
static PlayerText:ptd_furniture[MAX_PLAYERS][2];
static stock furniture_class[MAX_PLAYERS char],
		furniture_select[MAX_PLAYERS char],
		furniture_pickup[MAX_PLAYERS],
		bool:FurnShow[MAX_PLAYERS char],
		furniture_area;
static Text:gFurnInfo;

#define MAX_SLOT_FURNITURE 30

enum Furn_Data
{
	Furn_ObjectID,
	Furn_Model,
	Float:Furn_X,
	Float:Furn_Y,
	Float:Furn_Z,
	Float:Furn_RX,
	Float:Furn_RY,
	Float:Furn_RZ
}
new gHouseFurniture[MAX_HOUSES][MAX_SLOT_FURNITURE][Furn_Data];
new PlayerText:p_td_furn_object[MAX_PLAYERS][ MAX_SLOT_FURNITURE ],
	PlayerText:p_td_furn_text[MAX_PLAYERS][ MAX_SLOT_FURNITURE ],
	PlayerText:p_td_furn_select[MAX_PLAYERS][4],
	bool:show_furn_p_td[MAX_PLAYERS][2];

//for(new i = 0; i <

#define NUM_SI_VEHICLES             14

new SIInfernus[NUM_SI_VEHICLES];
new Text3D:RaceTextLabel;
new LapTime = 0;
new Float:StuntIslandCPs[15][3] =
{
	{268.48,	-2238.14,	3.12}, // 1
	{248.32,	-2316.01,	8.34}, // 2
	{268.76,	-2401.42,	22.48}, // 3
	{332.87,	-2467.73,	27.54}, // 4
	{332.46,	-2680.75,	46.11}, // 5
	{320.47,	-2951.49,	41.07}, // 6
	{322.99,	-3065.47,	63.82}, // 7
	{506.00,	-3085.25,	51.17}, // 8
	{576.49,	-3052.10,	41.19}, // 9
	{547.25,	-2747.54,	61.97}, // 10
	{566.88,	-2585.81,	48.68}, // 11
	{580.45,	-2308.21,	42.70}, // 12
	{427.45,	-2264.95,	32.26}, // 13
	{310.68,	-2264.67,	12.71}, // 14
	{299.10,	-2199.97,	11.27} // 15
};
new FastestLapTime = 999;
new FastestLapName[MAX_PLAYER_NAME + 1];

#define BANK_LCN 0
#define BANK_YAKUZA 1
#define BANK_RM 2
new gBankMafia[3][MAX_BUSINESS];
//new gBarMafia;
new gRieltor;
new GunPD;
new gBarAcessories;

new actors[3];

new bool:gSkladStatus[MAX_FRACTIONS]={true,...};

#define GetDoorsZCoordForFloor(%0) 		14.511476 + FloorZOffsets[%0]
static const Float:FloorZOffsets[3] ={0.0,52.16030, 112.12735};






static const stock JoinPedMale[9] = {78, 200, 137, 136, 79, 134, 135, 78};
static const stock JoinPedFemale[7] = { 31,157,198,9,13,245 };



stock ISAMAFIA(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	switch(p_info[playerid][tMember]){case F_LCN,F_YAKYZA,F_RM,F_T_ANGEL: return 1;}
	switch(p_info[playerid][tLeader]){case F_LCN,F_YAKYZA,F_RM,F_T_ANGEL: return 1;}
	return 0;
}
stock IsAGang(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	switch(p_info[playerid][tMember]){case F_BALLAS,F_VAGOS,F_GROVE,F_AZTECAS,F_RIFA: return 1;}
	switch(p_info[playerid][tLeader]){case F_BALLAS,F_VAGOS,F_GROVE,F_AZTECAS,F_RIFA: return 1;}
	return 0;
}




stock UpdateHome( houseid )
{
	DestroyDynamicMapIcon(gHouses[houseid][hMIcon]);
	DestroyDynamicPickup(gHouses[houseid][hPickup]);

	new pickup_id = (!strcmp(gHouses[houseid][houseOwner],"The State")) ? ( 1273 ) : ( 1272 ) ;
	new map_id = (!strcmp(gHouses[houseid][houseOwner],"The State")) ? ( 31 ) : ( 32 ) ;

	gHouses[houseid][hPickup] = CreateDynamicPickup(pickup_id, 1, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
	gHouses[houseid][hMIcon] = CreateDynamicMapIcon(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], map_id, -1);
	return 1;
}

stock IsVehicleOccupiedEx(vehicleid)
{
	foreach(i) if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	return 0;
}

stock IsVehicleOccupied(vehicleid)
{
	foreach(i) if(GetPlayerVehicleID(i) == vehicleid) return 1;
	return 0;
}


public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(!UseCar(vehicleid))
	{
		SetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
		SetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
	}
	SuperTick[playerid]=GetTickCount();
	VehTime[vehicleid] = 5;
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix)
	{
		//if(gKilledWithAntiDeath[playerid]==1) Animation_Death(playerid);
		//else if(gKilledWithAntiDeath[playerid]==2) Animation_Death_2(playerid);
		//else
		//{
		FreezePlayerForTime(playerid,5000);
		ClearAnimations(playerid, true);
		//}
	}

	for(new g = 0; g < 24; g++)
	{
		if(vehicleid == gCarSells[g][SellsVID] && strcmp(gCarSells[g][SellsOwner],"The State"))
		{
			format(stringer, 128, "{"#cGRAY"}Вы хотите купить данную машину за {"#cGREEN"}$%d", gCarSells[g][SellsPrice]);
			ShowPlayerDialog(playerid, dBuyCarSells, 0, "Информация", stringer, "Да", "Нет");
			SetPVarInt(playerid, "g_car_sells_id", g + 1 ) ;
			ClearAnimations(playerid, true);
			VehicleEnters[playerid]=INVALID_VEHICLE_ID;
			return 1;
		}
	}

	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
	VehicleEnters[playerid]=vehicleid;
	if(gVehicles[vehicleid-1][vFraction] == 11 && GetPVarInt(playerid,"WaitExam")) return 1;
	if(!ispassenger)
	{
		if(IsVehicleOccupiedEx(vehicleid))
		{
			GameTextForPlayer(playerid, "~r~~h~CAR IS USED", 2000, 4);
			ClearAnimations(playerid, true);
			VehicleEnters[playerid]=INVALID_VEHICLE_ID;
			return 1;
		}
		else if(gVehicles[vehicleid - 1][vFamily] != -1 && p_info[playerid][pFamily] - 1 != gVehicles[vehicleid - 1][vFamily] && p_info[playerid][pAdmin] == 0)
		{
			format(stringer,144,"Машина принадлежит семье '%s'", _family[gVehicles[vehicleid - 1][vFamily]][family_create_name]);
			SCM(playerid,COLOR_GREY,stringer);
			ClearAnimations(playerid, true);
			VehicleEnters[playerid]=INVALID_VEHICLE_ID;
			return 1;
		}
		else if(gVehicles[vehicleid-1][vFraction] != p_info[playerid][tMember] && gVehicles[vehicleid-1][vFraction] > 0)
		{
				format(stringer,144,"Вы не состоите в фракции '%s'", f_info[gVehicles[vehicleid-1][vFraction]][f_name]);
				SCM(playerid,COLOR_GREY,stringer);
				ClearAnimations(playerid, true);
				VehicleEnters[playerid]=INVALID_VEHICLE_ID;
		}
		else if(gVehicles[vehicleid-1][vFraction] == p_info[playerid][tMember])
		{
			if(StartWork(playerid) && !start_work[playerid])
			{
				SCM(playerid,COLOR_GREY,"Вам необходимо начать рабочий день на базе организаций");
				ClearAnimations(playerid, true);
				VehicleEnters[playerid]=INVALID_VEHICLE_ID;
				return 1;
			}
			if((gVehicles[vehicleid-1][vFractionRank] >= 0 && gVehicles[vehicleid-1][vFractionRank]<=17) && p_info[playerid][tRank] < gVehicles[vehicleid-1][vFractionRank])
			{
				format(stringer,144,"Доступно с ранга: '%s'",GetRank(p_info[playerid][tMember],gVehicles[vehicleid-1][vFractionRank]));
				SCM(playerid,COLOR_GREY,stringer);
				ClearAnimations(playerid, true);
				VehicleEnters[playerid]=INVALID_VEHICLE_ID;
			}
		}
	}
	if(GetPVarInt(playerid, "NachaloCarJack"))
	{
		SetPVarInt(playerid, "CarJack", vehicleid);
		ShowPlayerDialog(playerid,d_carjack+1,0," ","Вы хотите воспользоваться отмычкой и завести двигатель ?\n\nПосле удачного взлома не глушите автомобиль!","Да","Нет");
	}
	return 1;
}

stock IsAMedic(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(p_info[playerid][tMember] == F_MCLS || p_info[playerid][tMember] == F_MCLV) return 1;
	return 0;
}

stock IsAMayor(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(p_info[playerid][tMember] == F_DEPJUST || p_info[playerid][tMember] == F_CHSF || p_info[playerid][tMember] == F_CHLV) return 1;
	return 0;
}
stock IsACop(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	switch(p_info[playerid][tMember])
	{
		case 	F_SAPD,
				F_FBI,
				F_NAVY,
				F_PMC,
				F_SWAT,
				F_JTTF,
				F_WHOUSE: return 1;
	}
	return 0;
}

stock IsAArm(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	switch(p_info[playerid][tMember])
	{
		case 	F_SAPD,
				F_FBI,
				F_NAVY,
				F_PMC,
				F_NATGUARD,
				F_SWAT: return 1;
	}
	return 0;
}

stock SetPlayerPosBusiness(playerid,bizid)
{
	if ( Business [ bizid ] [ bType ] == 12 )
	{
		if(!IsValidPlayerObject(playerid, GetPVarInt(playerid,"b_acc_object")) && !GetPVarInt(playerid,"b_acc_object"))
		{
			SetPVarInt(playerid,"b_acc_object",CreatePlayerObject(playerid,19378,2087.126,-1792.794,119.801,0.000,90.000,0.000,300.000));
			SetPlayerObjectMaterial(playerid, GetPVarInt(playerid,"b_acc_object"), 0, 6064, "law_beach1", "musk1", 0x00000000);
		}
	}
	if(Business[bizid][bHel] == 1) SendClientMessage(playerid, 0xEFFF87FF, "В этом бизнесе имеется аптечка. Чтобы восстановить здоровье используйте {"#cWHITE"}/healup ({00FF00}150${"#cWHITE"})");
	SetPlayerInterior(playerid, bizz_type [ Business [ bizid ] [ bType ] ] [ bz_interior ]);
	AC_SetPlayerPos(playerid,
		bizz_type [ Business [ bizid ] [ bType ] ] [ bz_pickup_pos ] [ 0 ],
		bizz_type [ Business [ bizid ] [ bType ] ] [ bz_pickup_pos ] [ 1 ],
		bizz_type [ Business [ bizid ] [ bType ] ] [ bz_pickup_pos ] [ 2 ]);
	SetPlayerVirtualWorld(playerid, bizid + 1);
	SetPlayerFacingAngle(playerid, bizz_type [ Business [ bizid ] [ bType ] ] [ bz_exit_pos ] [ 3 ]);
	return 1;
}


stock IsABankomat(playerid, Float:distance = 1.0)
{
	for(new i = 0;i < sizeof(Bankomats);i ++) if(IsPlayerInRangeOfPoint(playerid,distance,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2])) return true;
	return false;
}



stock PJ(carid){switch (GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,576,483,567:return 1;}return 0;}
stock SuperGt(carid){switch (GetVehicleModel(carid)){case 402,411,415,429,451,477,506,541,552,602:return 1;}return 0;}


public OnPlayerSelectedMenuRow(playerid, row)
{


	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(killerid != INVALID_PLAYER_ID)
	{
		if(GetPlayerVehicleID(killerid) != vehicleid)
		{
			SetPVarInt(killerid,"CarSpawn", GetPVarInt(killerid, "CarSpawn")+1);
			if(GetPVarInt(killerid, "CarSpawn")>=3)
			{
				if(!IsBotServer(killerid))
				{
					if(LOG_KICK)
						print ("OnVehicleDeath Kick()");
					Kick(killerid);
				}
			}
		}
	}
	foreach(i)
	{
		if(vehicleid == GetPVarInt(i, "is_boat") - 1)
		{
			DestroyVehicleOP(GetPVarInt(i, "is_boat") - 1);
			DeletePVar(i, "is_boat");
			break;
		}
		if(vehicleid == GetPVarInt(i, "is_plane") - 1)
		{
			DestroyVehicleOP(GetPVarInt(i, "is_plane") - 1);
			DeletePVar(i, "is_plane");
			break;
		}
	}
	return 1;
}

enum GzoneInfo
{
	gID,
	gIDs,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	ZoneOnBattle,
	TypeBattle,
	gTime,
	gzTimer,
	PlaceName[30]
}
new GZInfo[130][GzoneInfo];
new IDGZ[MAX_PLAYERS]={-1,...};
new CountOnZone[20];
new bool:zahvat = false;
stock GetGangZoneColor(fractionid) return (GZInfo[fractionid][gFrakVlad] == 12) ? (0xCC00FFAA) : (GZInfo[fractionid][gFrakVlad] == 18) ? (0x6666FFAA) : (GZInfo[fractionid][gFrakVlad] == 13) ? (0xffff00AA) : (GZInfo[fractionid][gFrakVlad] == 15) ? (0x009900AA) : (0x00CCFFAA);
new TotalGz = 0;
stock SaveGZ(i)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 77, "UPDATE `gangzonestest` SET `Tenure`= '%d' WHERE `ID` = '%d' LIMIT 1",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}

enum SAZONE_MAIN
{ //Betamaster
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};

static const stock gSAZones[365][SAZONE_MAIN] = {  // Majority of names and area coordinates adopted from Mabako's 'Zones Script' v0.2
	//	NAME                            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
stock BezBenzacar(carid){switch(GetVehicleModel(carid)){case 462,510,481,509:return 1;}return 0;}




stock CreatePlayerDraws(playerid)
{
	/*pPowerTD[playerid] = CreatePlayerTextDraw(playerid, 512.000000, 397.000000, "~n~~n~");
	PlayerTextDrawBackgroundColor(playerid, pPowerTD[playerid], 255);
	PlayerTextDrawFont(playerid, pPowerTD[playerid], 1);
	PlayerTextDrawLetterSize(playerid, pPowerTD[playerid], 0.500000, -0.099999);
	PlayerTextDrawColor(playerid, pPowerTD[playerid], -1);
	PlayerTextDrawSetOutline(playerid, pPowerTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, pPowerTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, pPowerTD[playerid], 1);
	PlayerTextDrawUseBox(playerid, pPowerTD[playerid], 1);
	PlayerTextDrawBoxColor(playerid, pPowerTD[playerid], -1359019777);
	PlayerTextDrawTextSize(playerid, pPowerTD[playerid], 507.000000, 0.000000);

	pPowerTD_BSKT[playerid] = CreatePlayerTextDraw(playerid, 512.000000, 397.000000, "~n~~n~");
	PlayerTextDrawBackgroundColor(playerid, pPowerTD_BSKT[playerid], 255);
	PlayerTextDrawFont(playerid, pPowerTD_BSKT[playerid], 1);
	PlayerTextDrawLetterSize(playerid, pPowerTD_BSKT[playerid], 0.500000, -0.099999);
	PlayerTextDrawColor(playerid, pPowerTD_BSKT[playerid], -1);
	PlayerTextDrawSetOutline(playerid, pPowerTD_BSKT[playerid], 0);
	PlayerTextDrawSetProportional(playerid, pPowerTD_BSKT[playerid], 1);
	PlayerTextDrawSetShadow(playerid, pPowerTD_BSKT[playerid], 1);
	PlayerTextDrawUseBox(playerid, pPowerTD_BSKT[playerid], 1);
	PlayerTextDrawBoxColor(playerid, pPowerTD_BSKT[playerid], -1359019777);
	PlayerTextDrawTextSize(playerid, pPowerTD_BSKT[playerid], 507.000000, 0.000000);*/
	if(GangInfo_P_TD[playerid][0]==PlayerText:-1)
	{
		GangInfo_P_TD[playerid][0] = CreatePlayerTextDraw(playerid, 554.260681, 100.916709, "~w~FPS: ~g~39 ~w~PING: ~b~45");
		PlayerTextDrawLetterSize(playerid, GangInfo_P_TD[playerid][0], 0.262591, 1.104166);
		PlayerTextDrawAlignment(playerid, GangInfo_P_TD[playerid][0], 2);
		PlayerTextDrawColor(playerid, GangInfo_P_TD[playerid][0], -1);
		PlayerTextDrawSetShadow(playerid, GangInfo_P_TD[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, GangInfo_P_TD[playerid][0], 1);
		PlayerTextDrawBackgroundColor(playerid, GangInfo_P_TD[playerid][0], 51);
		PlayerTextDrawFont(playerid, GangInfo_P_TD[playerid][0], 2);
		PlayerTextDrawSetProportional(playerid, GangInfo_P_TD[playerid][0], 1);
	}
	if(GangInfo_P_TD[playerid][1]==PlayerText:-1)
	{
		GangInfo_P_TD[playerid][1] = CreatePlayerTextDraw(playerid, 583.308776, 66.499977, "80");
		PlayerTextDrawLetterSize(playerid, GangInfo_P_TD[playerid][1], 0.223703, 0.812499);
		PlayerTextDrawAlignment(playerid, GangInfo_P_TD[playerid][1], 3);
		PlayerTextDrawColor(playerid, GangInfo_P_TD[playerid][1], -1);
		PlayerTextDrawSetShadow(playerid, GangInfo_P_TD[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, GangInfo_P_TD[playerid][1], 1);
		PlayerTextDrawBackgroundColor(playerid, GangInfo_P_TD[playerid][1], 51);
		PlayerTextDrawFont(playerid, GangInfo_P_TD[playerid][1], 2);
		PlayerTextDrawSetProportional(playerid, GangInfo_P_TD[playerid][1], 1);
	}
	GUI_targetsystem[playerid][0] = CreatePlayerTextDraw(playerid, 372.000000, 7.722222, "_");
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][0], 0.000000, 1.434773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][0], 272.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][0], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][0], 39);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][0], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][0], 0);

	GUI_targetsystem[playerid][1] = CreatePlayerTextDraw(playerid, 321.999938, 11.199998, "_");
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][1], 0.136997, 0.687404);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][1], 2);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][1], -181);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][1], 51);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, GUI_targetsystem[playerid][1], 1);

	GUI_targetsystem[playerid][2] = CreatePlayerTextDraw(playerid, 274.666503, 25.729627, "_");// 274.666503
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][2], 0.000000, 0.134773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][2], 272.000061, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][2], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][2], -1205657476);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][2], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][2], 0);

	GUI_targetsystem[playerid][3] = CreatePlayerTextDraw(playerid, 274.666503, 31.707405, "_");
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][3], 0.000000, 0.134773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][3], 272.000061, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][3], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][3], 5603477);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][3], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][3], 0);

	GUI_targetsystem[playerid][4] = CreatePlayerTextDraw(playerid, 371.999847, 25.729627, "_");// 274.666503
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][4], 0.000000, 0.134773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][4], 272.000061, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][4], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][4], 39);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][4], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][4], 0);

	GUI_targetsystem[playerid][5] = CreatePlayerTextDraw(playerid, 371.999847, 31.707405, "_");// 274.666503
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][5], 0.000000, 0.134773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][5], 272.000061, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][5], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][5], 39);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][5], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][5], 0);

	GUI_targetsystem[playerid][6] = CreatePlayerTextDraw(playerid, 322.333709, 23.229646, "0");
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][6], 0.097666, 0.596148);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][6], 2);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][6], -156);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][6], 51);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, GUI_targetsystem[playerid][6], 1);

	GUI_targetsystem[playerid][7] = CreatePlayerTextDraw(playerid, 322.333709, 29.207420, "0");
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][7], 0.097666, 0.596148);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][7], 2);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][7], -156);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][7], 51);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, GUI_targetsystem[playerid][7], 1);
	// ------------------- speedometr
	if(speedStick[playerid] == PlayerText:-1)
	{
		speedStick[playerid] = CreatePlayerTextDraw(playerid, 491.000000, 364.500000, "speedStick");
		PlayerTextDrawAlignment(playerid, speedStick[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid, speedStick[playerid], 0);
		PlayerTextDrawLetterSize(playerid, speedStick[playerid], 0.000000, 1.750000);
		PlayerTextDrawSetOutline(playerid, speedStick[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedStick[playerid], 0);
		PlayerTextDrawSetShadow(playerid, speedStick[playerid], 0);
		PlayerTextDrawUseBox(playerid, speedStick[playerid], 1);
		PlayerTextDrawBoxColor(playerid, speedStick[playerid], 3381759);
		PlayerTextDrawTextSize(playerid, speedStick[playerid], 0.000000, -1.000000);
	}

	if(speedInf[playerid] == PlayerText:-1)
	{
		speedInf[playerid] = CreatePlayerTextDraw(playerid, 537.000000, 386.500000, "0 KM/H");
		PlayerTextDrawAlignment(playerid, speedInf[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid, speedInf[playerid], 255);
		PlayerTextDrawFont(playerid, speedInf[playerid], 2);
		PlayerTextDrawLetterSize(playerid, speedInf[playerid], 0.220000, 1.249999);
		PlayerTextDrawColor(playerid, speedInf[playerid], -858993409);
		PlayerTextDrawSetOutline(playerid, speedInf[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedInf[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedInf[playerid], 0);
	}

	if(speedName[playerid] == PlayerText:-1)
	{
		speedName[playerid] = CreatePlayerTextDraw(playerid, 534.000000, 344.000000, "infernus");
		PlayerTextDrawAlignment(playerid, speedName[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid, speedName[playerid], 255);
		PlayerTextDrawFont(playerid, speedName[playerid], 2);
		PlayerTextDrawLetterSize(playerid, speedName[playerid], 0.300000, 1.000000);
		PlayerTextDrawColor(playerid, speedName[playerid], -1);
		PlayerTextDrawSetOutline(playerid, speedName[playerid], 1);
		PlayerTextDrawSetProportional(playerid, speedName[playerid], 1);
	}

	if(speedMileage[playerid] == PlayerText:-1)
	{
		speedMileage[playerid] = CreatePlayerTextDraw(playerid, 536.000000, 353.500000, "0000000000");
		PlayerTextDrawAlignment(playerid, speedMileage[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid, speedMileage[playerid], 255);
		PlayerTextDrawFont(playerid, speedMileage[playerid], 1);
		PlayerTextDrawLetterSize(playerid, speedMileage[playerid], 0.310000, 1.049999);
		PlayerTextDrawColor(playerid, speedMileage[playerid], 255);
		PlayerTextDrawSetOutline(playerid, speedMileage[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedMileage[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedMileage[playerid], 0);
	}

	if(speedHealth[playerid] == PlayerText:-1)
	{
		speedHealth[playerid] = CreatePlayerTextDraw(playerid, 489.000000, 393.500000, "100%");
		PlayerTextDrawAlignment(playerid, speedHealth[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid, speedHealth[playerid], 255);
		PlayerTextDrawFont(playerid, speedHealth[playerid], 2);
		PlayerTextDrawLetterSize(playerid, speedHealth[playerid], 0.360000, 1.549999);
		PlayerTextDrawColor(playerid, speedHealth[playerid], 255);
		PlayerTextDrawSetOutline(playerid, speedHealth[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedHealth[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedHealth[playerid], 0);
	}

	if(speedFuel[playerid] == PlayerText:-1)
	{
		speedFuel[playerid] = CreatePlayerTextDraw(playerid, 585.000000, 393.500000, "100L");
		PlayerTextDrawAlignment(playerid, speedFuel[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid, speedFuel[playerid], 255);
		PlayerTextDrawFont(playerid, speedFuel[playerid], 2);
		PlayerTextDrawLetterSize(playerid, speedFuel[playerid], 0.360000, 1.549999);
		PlayerTextDrawColor(playerid, speedFuel[playerid], 255);
		PlayerTextDrawSetOutline(playerid, speedFuel[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedFuel[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedFuel[playerid], 0);
		PlayerTextDrawSetSelectable(playerid, speedFuel[playerid], 0);
	}

	if(speedDoors[playerid] == PlayerText:-1)
	{
		speedDoors[playerid] = CreatePlayerTextDraw(playerid, 489.000000, 413.000000, "D");
		PlayerTextDrawBackgroundColor(playerid, speedDoors[playerid], 255);
		PlayerTextDrawFont(playerid, speedDoors[playerid], 2);
		PlayerTextDrawLetterSize(playerid, speedDoors[playerid], 0.430000, 1.700000);
		PlayerTextDrawColor(playerid, speedDoors[playerid], -2147483393);
		PlayerTextDrawSetOutline(playerid, speedDoors[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedDoors[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedDoors[playerid], 0);
		PlayerTextDrawSetSelectable(playerid, speedDoors[playerid], 0);
	}

	if(speedEngine[playerid] == PlayerText:-1)
	{
		speedEngine[playerid] = CreatePlayerTextDraw(playerid, 474.000000, 412.000000, "E");
		PlayerTextDrawBackgroundColor(playerid, speedEngine[playerid], 255);
		PlayerTextDrawFont(playerid, speedEngine[playerid], 2);
		PlayerTextDrawLetterSize(playerid, speedEngine[playerid], 0.430000, 1.799999);
		PlayerTextDrawColor(playerid, speedEngine[playerid], 0x800000FF);
		PlayerTextDrawSetOutline(playerid, speedEngine[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedEngine[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedEngine[playerid], 0);
		PlayerTextDrawSetSelectable(playerid, speedEngine[playerid], 0);
	}

	if(speedSignalLights[playerid] == PlayerText:-1)
	{
		speedSignalLights[playerid] = CreatePlayerTextDraw(playerid, 573.000000, 412.000000, "><");
		PlayerTextDrawBackgroundColor(playerid, speedSignalLights[playerid], 255);
		PlayerTextDrawFont(playerid, speedSignalLights[playerid], 1);
		PlayerTextDrawLetterSize(playerid, speedSignalLights[playerid], 0.500000, 1.700000);
		PlayerTextDrawColor(playerid, speedSignalLights[playerid], -2147483393);
		PlayerTextDrawSetOutline(playerid, speedSignalLights[playerid], 0);
		PlayerTextDrawSetProportional(playerid, speedSignalLights[playerid], 1);
		PlayerTextDrawSetShadow(playerid, speedSignalLights[playerid], 0);
		PlayerTextDrawSetSelectable(playerid, speedSignalLights[playerid], 0);
	}

	if(speedSignalLeft[playerid] == PlayerText:-1)
	{
		speedSignalLeft[playerid] = CreatePlayerTextDraw(playerid, 463.000000, 342.000000, "left");
		PlayerTextDrawBackgroundColor(playerid, speedSignalLeft[playerid], 0);
		PlayerTextDrawFont(playerid, speedSignalLeft[playerid], 5);
		PlayerTextDrawColor(playerid, speedSignalLeft[playerid], -2147483393);
		PlayerTextDrawUseBox(playerid, speedSignalLeft[playerid], 0);
		PlayerTextDrawBoxColor(playerid, speedSignalLeft[playerid], 0);
		PlayerTextDrawTextSize(playerid, speedSignalLeft[playerid], 18.000000, 22.000000);
		PlayerTextDrawSetPreviewModel(playerid, speedSignalLeft[playerid], 1318);
		PlayerTextDrawSetPreviewRot(playerid, speedSignalLeft[playerid], 0.000000, 270.000000, 90.000000, 1.000000);
	}

	if(speedSignalRight[playerid] == PlayerText:-1)
	{
		speedSignalRight[playerid] = CreatePlayerTextDraw(playerid, 591.000000, 342.000000, "right");
		PlayerTextDrawBackgroundColor(playerid, speedSignalRight[playerid], 0);
		PlayerTextDrawFont(playerid, speedSignalRight[playerid], 5);
		PlayerTextDrawColor(playerid, speedSignalRight[playerid], -2147483393);
		PlayerTextDrawUseBox(playerid, speedSignalRight[playerid], 0);
		PlayerTextDrawBoxColor(playerid, speedSignalRight[playerid], 255);
		PlayerTextDrawTextSize(playerid, speedSignalRight[playerid], 18.000000, 22.000000);
		PlayerTextDrawSetPreviewModel(playerid, speedSignalRight[playerid], 1318);
		PlayerTextDrawSetPreviewRot(playerid, speedSignalRight[playerid], 0.000000, 90.000000, 90.000000, 1.000000);
	}
	if(speedTrans[playerid][0] == PlayerText:-1) speedTrans[playerid][0] = CreatePlayerTextDraw(playerid, 530.500000, 414.500000, "trans1");
	if(speedTrans[playerid][1] == PlayerText:-1) speedTrans[playerid][1] = CreatePlayerTextDraw(playerid, 530.500000, 422.500000, "trans2");
	if(speedTrans[playerid][2] == PlayerText:-1) speedTrans[playerid][2] = CreatePlayerTextDraw(playerid, 541.000000, 414.500000, "trans3");
	if(speedTrans[playerid][3] == PlayerText:-1) speedTrans[playerid][3] = CreatePlayerTextDraw(playerid, 541.000000, 422.500000, "trans4");
	if(speedTrans[playerid][4] == PlayerText:-1) speedTrans[playerid][4] = CreatePlayerTextDraw(playerid, 552.000000, 414.500000, "trans5");
	if(speedTrans[playerid][5] == PlayerText:-1) speedTrans[playerid][5] = CreatePlayerTextDraw(playerid, 520.500000, 414.500000, "transR");
	for(new i = 0; i < 6; i++) {
		PlayerTextDrawAlignment 		(playerid, speedTrans[playerid][i], 2);
		PlayerTextDrawBackgroundColor	(playerid, speedTrans[playerid][i], 0);
		PlayerTextDrawLetterSize 		(playerid, speedTrans[playerid][i], 0.000000, 0.149998);
		PlayerTextDrawColor 			(playerid, speedTrans[playerid][i], -1);
		PlayerTextDrawSetOutline 		(playerid, speedTrans[playerid][i], 0);
		PlayerTextDrawSetProportional	(playerid, speedTrans[playerid][i], 0);
		PlayerTextDrawSetShadow 		(playerid, speedTrans[playerid][i], 0);
		PlayerTextDrawUseBox 			(playerid, speedTrans[playerid][i], 1);
		PlayerTextDrawBoxColor 			(playerid, speedTrans[playerid][i], 1684301055);
		PlayerTextDrawTextSize 			(playerid, speedTrans[playerid][i], -39.000000, -6.000000);
	}
	if(speedTrans[playerid][6] == PlayerText:-1)
	{
		speedTrans[playerid][6] = CreatePlayerTextDraw(playerid, 536.000000, 420.500000, "transLineCenter");
		PlayerTextDrawAlignment(playerid, speedTrans[playerid][6], 2);
		PlayerTextDrawBackgroundColor(playerid, speedTrans[playerid][6], 255);
		PlayerTextDrawFont(playerid, speedTrans[playerid][6], 1);
		PlayerTextDrawLetterSize(playerid, speedTrans[playerid][6], 0.000000, -0.250001);
		PlayerTextDrawColor(playerid, speedTrans[playerid][6], -1);
		PlayerTextDrawSetOutline(playerid, speedTrans[playerid][6], 0);
		PlayerTextDrawSetProportional(playerid, speedTrans[playerid][6], 1);
		PlayerTextDrawSetShadow(playerid, speedTrans[playerid][6], 1);
		PlayerTextDrawUseBox(playerid, speedTrans[playerid][6], 1);
		PlayerTextDrawBoxColor(playerid, speedTrans[playerid][6], 1684301055);
		PlayerTextDrawTextSize(playerid, speedTrans[playerid][6], 0.000000, 30.000000);
	}

	//------------------------
	ReconPlayerText[playerid][0] = CreatePlayerTextDraw(playerid,92.00, 142.00, "1 : 1 / 8~n~0~n~0~n~50~n~0~n~0 / 0~n~86~n~0 : 0 ~n~0 / 0 : 0%~n~0 / 0 : 0%~n~23 : 0~n~0.0 %");
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][0], 0.199999, 0.899999);
	PlayerTextDrawFont(playerid,ReconPlayerText[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid,ReconPlayerText[playerid][0], 255);
	PlayerTextDrawColor(playerid,ReconPlayerText[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,ReconPlayerText[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayerText[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayerText[playerid][0],0);
	ReconPlayerText[playerid][1] = CreatePlayerTextDraw(playerid,552.00, 146.00, "Change");
	ReconPlayerText[playerid][2] = CreatePlayerTextDraw(playerid,552.00, 162.00, "<< Check");
	ReconPlayerText[playerid][3] = CreatePlayerTextDraw(playerid,552.00, 178.00, "<< Drop");
	ReconPlayerText[playerid][4] = CreatePlayerTextDraw(playerid,552.00, 194.00, "<< Kick");
	ReconPlayerText[playerid][5] = CreatePlayerTextDraw(playerid,552.00, 210.00, "Warn");
	ReconPlayerText[playerid][6] = CreatePlayerTextDraw(playerid,552.00, 226.00, "<< Ban");
	ReconPlayerText[playerid][7] = CreatePlayerTextDraw(playerid,552.00, 242.00, "<< Stats");
	ReconPlayerText[playerid][8] = CreatePlayerTextDraw(playerid,552.00, 258.00, "Refresh");
	ReconPlayerText[playerid][9] = CreatePlayerTextDraw(playerid,552.00, 274.00, "Exit");
	ReconPlayerText[playerid][10] = CreatePlayerTextDraw(playerid,490.00, 162.00, "Check_GM");
	ReconPlayerText[playerid][11] = CreatePlayerTextDraw(playerid,490.00, 178.00, "Check_GM_2");
	ReconPlayerText[playerid][12] = CreatePlayerTextDraw(playerid,490.00, 194.00, "Check_GMCar");
	ReconPlayerText[playerid][13] = CreatePlayerTextDraw(playerid,490.00, 178.00, "Reset_Shot");
	ReconPlayerText[playerid][14] = CreatePlayerTextDraw(playerid,490.00, 194.00, "Mute");
	ReconPlayerText[playerid][15] = CreatePlayerTextDraw(playerid,490.00, 210.00, "Slap");
	ReconPlayerText[playerid][16] = CreatePlayerTextDraw(playerid,490.00, 226.00, "Prison");
	ReconPlayerText[playerid][17] = CreatePlayerTextDraw(playerid,490.00, 242.00, "Freeze");
	ReconPlayerText[playerid][18] = CreatePlayerTextDraw(playerid,490.00, 258.00, "UnFreeze");
	ReconPlayerText[playerid][19] = CreatePlayerTextDraw(playerid,490.00, 194.00, "Kick");
	ReconPlayerText[playerid][20] = CreatePlayerTextDraw(playerid,490.00, 210.00, "SKick");
	ReconPlayerText[playerid][21] = CreatePlayerTextDraw(playerid,490.00, 226.00, "Ban");
	ReconPlayerText[playerid][22] = CreatePlayerTextDraw(playerid,490.00, 242.00, "SBan");
	ReconPlayerText[playerid][23] = CreatePlayerTextDraw(playerid,490.00, 258.00, "IBan");
	ReconPlayerText[playerid][24] = CreatePlayerTextDraw(playerid,490.00, 242.00, "Stats");
	ReconPlayerText[playerid][25] = CreatePlayerTextDraw(playerid,490.00, 258.00, "IWep");
	ReconPlayerText[playerid][26] = CreatePlayerTextDraw(playerid,490.00, 274.00, "GetIP");
	for(new x = 1; x <= 26; x++)
	{
		PlayerTextDrawTextSize(playerid,ReconPlayerText[playerid][x], 10.10, 44.44);
		PlayerTextDrawAlignment(playerid,ReconPlayerText[playerid][x], 2);
		PlayerTextDrawBackgroundColor(playerid,ReconPlayerText[playerid][x], 255);
		PlayerTextDrawFont(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][x], 0.20, 0.899999);
		PlayerTextDrawColor(playerid,ReconPlayerText[playerid][x], -1);
		PlayerTextDrawSetOutline(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetProportional(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetShadow(playerid,ReconPlayerText[playerid][x], 0);
		PlayerTextDrawUseBox(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][x], -1091854422);
		PlayerTextDrawSetSelectable(playerid,ReconPlayerText[playerid][x], true);
	}

	/*golod_bar[playerid] = CreatePlayerTextDraw(playerid, 550.0, 59.0+1.5, "_");
	PlayerTextDrawLetterSize(playerid,golod_bar[playerid], 0.5, -0.03);
	PlayerTextDrawUseBox(playerid,golod_bar[playerid], 1);
	PlayerTextDrawBoxColor(playerid,golod_bar[playerid], 0x28BFA4FF);
	PlayerTextDrawTextSize(playerid,golod_bar[playerid], 546.0 + (58.0 / 100 * 100) , 0);*/

	if(gSkinShopPriceDraw[playerid] == PlayerText:-1)
	{
		gSkinShopPriceDraw[playerid] = CreatePlayerTextDraw(playerid, 31.000000, 224.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, gSkinShopPriceDraw[playerid], 255);
		PlayerTextDrawFont(playerid, gSkinShopPriceDraw[playerid], 3);
		PlayerTextDrawLetterSize(playerid, gSkinShopPriceDraw[playerid], 0.500000, 1.600000);
		PlayerTextDrawColor(playerid, gSkinShopPriceDraw[playerid], -1);
		PlayerTextDrawSetOutline(playerid, gSkinShopPriceDraw[playerid], 0);
		PlayerTextDrawSetProportional(playerid, gSkinShopPriceDraw[playerid], 1);
		PlayerTextDrawSetShadow(playerid, gSkinShopPriceDraw[playerid], 1);
	}
	if(MinerDraw[playerid] == PlayerText:-1)
	{
		MinerDraw[playerid] = CreatePlayerTextDraw(playerid, 500.5, 125.0, "_");
		PlayerTextDrawBackgroundColor(playerid, MinerDraw[playerid], COLOR_BLACK);
		PlayerTextDrawLetterSize(playerid, MinerDraw[playerid],0.200000,1.000000);
		PlayerTextDrawFont(playerid, MinerDraw[playerid], 2);
		PlayerTextDrawColor(playerid, MinerDraw[playerid], COLOR_BLUE);
		PlayerTextDrawSetOutline(playerid, MinerDraw[playerid], 1);
		PlayerTextDrawSetProportional(playerid, MinerDraw[playerid],1);
		PlayerTextDrawSetShadow(playerid, MinerDraw[playerid],1);
	}
	///
	ShopText[playerid] = CreatePlayerTextDraw(playerid,490.0, 280.0 - 15.0, "~b~SULTAN~n~~g~CLASS:_~w~SPORT~n~~g~PRICE:_~w~$2000000~n~~g~TANK:~w~_80L~n~~g~CONS.:_~w~10L/1000KM");
	PlayerTextDrawLetterSize(playerid,ShopText[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid,ShopText[playerid], 2);
	PlayerTextDrawColor(playerid,ShopText[playerid], -1);
	PlayerTextDrawSetShadow(playerid,ShopText[playerid], 0);
	PlayerTextDrawSetOutline(playerid,ShopText[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,ShopText[playerid], 255);
	PlayerTextDrawFont(playerid,ShopText[playerid], 2);
	PlayerTextDrawSetProportional(playerid,ShopText[playerid], 1);
	///
	YNText[playerid][0] = CreatePlayerTextDraw(playerid,281.000000, 120.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,YNText[playerid][0], 255);
	PlayerTextDrawFont(playerid,YNText[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid,YNText[playerid][0], 0.500000, 0.799997);
	PlayerTextDrawColor(playerid,YNText[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,YNText[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,YNText[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid,YNText[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,YNText[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid,YNText[playerid][0], 1182971135);
	PlayerTextDrawTextSize(playerid,YNText[playerid][0], 374.000000, -10.000000);
	PlayerTextDrawSetSelectable(playerid,YNText[playerid][0], 0);

	YNText[playerid][1] = CreatePlayerTextDraw(playerid,288.000000, 119.000000, "PRESS Y");
	PlayerTextDrawBackgroundColor(playerid,YNText[playerid][1], 255);
	PlayerTextDrawFont(playerid,YNText[playerid][1], 2);
	PlayerTextDrawLetterSize(playerid,YNText[playerid][1], 0.500000, 0.799998);
	PlayerTextDrawColor(playerid,YNText[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,YNText[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,YNText[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,YNText[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid,YNText[playerid][1], 0);

	ShieldBar[playerid] = CreatePlayerTextDraw(playerid, 608.0,59.6,"_");
	PlayerTextDrawLetterSize(playerid, ShieldBar[playerid],0.0,0.135);
	PlayerTextDrawUseBox(playerid, ShieldBar[playerid],1);
	PlayerTextDrawBoxColor(playerid, ShieldBar[playerid],CSHBAR);
	PlayerTextDrawTextSize(playerid, ShieldBar[playerid],546.5,0.0);

	return 1;
}

/*new RBFP_EX_Modelid[MAX_OBJECTS];
new Float:RBFP_EX[MAX_OBJECTS][3];
new Total_RBFP_EX = 0;*/

/*stock RemoveBuildingForPlayer(playerid, modelid, Float:fX, Float:fY, Float:fZ, Float:fRadius)
{
	for(new i = 0; i < Total_RBFP_EX; i++)
	{
		if(fX == RBFP_EX[i][0] && fY == RBFP_EX[i][1] && fZ == RBFP_EX[i][2])
		{
			if(RBFP_EX_Modelid[i]==modelid)
			{
				printf ("одинаковый ремув: %d, %.4f, %.4f, %.4f,",modelid,fX,fY,fZ);
				break;
			}
		}
	}
	new slot_rbfp_ex = GetPVarInt(playerid,"Count_Remove");
	RBFP_EX_Modelid[slot_rbfp_ex]=modelid;
	RBFP_EX[slot_rbfp_ex][0]=fX;
	RBFP_EX[slot_rbfp_ex][1]=fY;
	RBFP_EX[slot_rbfp_ex][2]=fZ;
	Total_RBFP_EX++;
	SetPVarInt(playerid,"Count_Remove",slot_rbfp_ex+1);
	printf ("slot_rbfp_ex: %d",slot_rbfp_ex+1);
	return RemoveBuildingForPlayer(playerid, modelid, fX, fY, fZ, fRadius);
}*/

public OnPlayerConnect(playerid)
{
	Players[players++]=playerid;
    CountVezit2++;
    p_info[playerid][pRMuteTime] = 0;
	GetPlayerIp(playerid,PlayerIp[playerid], 32);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsBotServer(i)) continue;
		if(!strlen(PlayerReconnectIP[i])) continue;
		if(strcmp(PlayerIp[playerid],PlayerReconnectIP[i],false)!=0) continue;
		if(unix-PlayerReconnectTime[i]<15)
		{
			PlayerReconnectTime[i]=0;
			format(PlayerReconnectIP[i],16,"");
			SendClientMessage(playerid,0xFF3333AA," Пожалуйста, перезайдите на сервер через 15 секунд!");
			SetTimerEx("PlayerKick",100,false,"d", playerid);
			return 1;
		}
		PlayerReconnectTime[i]=0;
		format(PlayerReconnectIP[i],16,"");
	}
	new connecting_ip[32+1];
	GetPlayerIp(playerid,connecting_ip,32);
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);

	if(num_players_on_ip > MAX_CONNECTIONS_FROM_IP && !IsBotServer(playerid)) {
		printf("MAXIPs: Connecting player(%d) exceeded %d IP connections from %s.", playerid, MAX_CONNECTIONS_FROM_IP, connecting_ip);
		Kick(playerid);
		return 1;
	}

	SetPlayerDataToDefault(playerid);
	//TextDrawShowForPlayer(playerid, Datum);
	AC_ResetPlayerWeapons(playerid);
	SetPlayerAuthorized(playerid, PLAYER_OFFLINE);
	GetPlayerName(playerid, NamePlayer[playerid], 24);
	CreatePlayerDraws(playerid);

	// p_info[playerid][pTime] = unix;

	if(!IsBotServer(playerid))
	{
	    mysql_query_string[0]=EOS;
 		format(mysql_query_string, 200, "INSERT INTO `online_server_info`(`nick_online`, `ip_online`, `date_online`) VALUES ('%s', '%s', NOW())",NamePlayer[playerid], PlayerIp[playerid]);
		mysql_pquery(connects, mysql_query_string, "check_ip_ban", "i", playerid);
	    mysql_query_string[0]=EOS;
		format(mysql_query_string, 200, "SELECT `Name_Admin`,`Ban_Reason`,`Unban_Data` FROM `new_ban` WHERE `IP` = '%s' LIMIT 1", PlayerIp[playerid]);
		mysql_pquery(connects, mysql_query_string, "check_ip_ban", "i", playerid);
	}
	else
	{
		SetPlayerScore ( playerid , 1 + random ( 2 ) );
		switch ( random( 6 ) )
		{
			case 0: SetPlayerColor ( playerid, 0xEEEEEEFF ) ;
			case 1: SetPlayerColor ( playerid, 0xEEEEEEFF ) ;
			case 2: SetPlayerColor ( playerid, 0xEEEEEEFF ) ;
			case 3: SetPlayerColor ( playerid, 0xEEEEEEFF ) ;
			case 4: SetPlayerColor ( playerid, fraction_color[random(fraction_amount - 1)] ) ;
			case 5: SetPlayerColor ( playerid, 0xEEEEEEFF ) ;
		}
		SetPlayerVirtualWorld ( playerid , playerid + 1 ) ;
	}
 	if(CountVezit2 > onlinee)
	{
		new year, month, day, hour, minuite, second;
		getdate(year, month, day), gettime(hour, minuite, second);
		onlinee = CountVezit2;
		onlineeH = hour;
		onlineeMi = minuite;
		onlineeD = day;
		onlineeM = month;
		
		new save_online_query[512];
		format(save_online_query, 512, "UPDATE `server_settings` SET `MaxOnline` = '%d', `Online_Month` = '%d', `Online_Day` = '%d', `Online_Hour` = '%d', `Online_Minute` = '%d'",
		onlinee, onlineeM, onlineeD, onlineeH, onlineeMi);
		mysql_tquery(connects,save_online_query);
		
  		new mtext[50];
		switch(month)
		{
			case 1: { mtext = "Января"; }
			case 2: { mtext = "Февраля"; }
			case 3: { mtext = "Марта"; }
			case 4: { mtext = "Апреля"; }
			case 5: { mtext = "Мая"; }
			case 6: { mtext = "Июня"; }
			case 7: { mtext = "Июля"; }
			case 8: { mtext = "Августа"; }
			case 9: { mtext = "Сентября"; }
			case 10: { mtext = "Октября"; }
			case 11: { mtext = "Ноября"; }
			case 12: { mtext = "Декабря"; }
		}
		format(stringer, 144, "~ {FFFF00}Новый рекорд онлайна!! Был запечетлен в %02d:%02d, %02d %s 2016 года. Новый онлайн {FFFFFF}%d{FFFF00}.",onlineeH,onlineeMi,onlineeD,mtext,onlinee);
		SendClientMessageToAll(COLOR_GREEN,stringer);
	}
	GameTextForPlayer(playerid,"~w~Welcome to ~n~~p~"PROJECT_NAME,6000,4);
	SetPVarInt(playerid,"Crup",88);
	SetPVarInt(playerid,"GameStol",88);
	ResetPlayerDynamicCP(playerid);
	if ( m_members_timer [ playerid ] != 0 || m_members_count [ playerid ] != 0)
	{
		for ( new j = 0 ; j <= m_members_count [ playerid ] ; j ++ )
		{
			PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
			PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
			PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
			PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
			members_pos_td [ playerid ] [ 0 ] [ j ] = PlayerText: -1 ;
			members_pos_td [ playerid ] [ 1 ] [ j ] = PlayerText: -1 ;

		}

		if(m_members_timer [ playerid ] != 0)
		{
			KillTimer ( m_members_timer [ playerid ] ) ;
			m_members_timer [ playerid ] = 0;
		}

		TextDrawHideForPlayer ( playerid, members_map_td ) ;
		CancelSelectTextDraw ( playerid ) ;
	}
	SetPlayerWeather(playerid,CurrentWeazer);
	return 1;
}

stock SetPlayerSkinEx(playerid, skinid)
{
	if ( skinid == 74 || skinid == 0 ) skinid = 78;
	if(GetPVarInt(playerid,"set_zombie")==1 && skinid != 162 && ZombieTime <= 0) return 1;
	else if(GetPVarInt(playerid,"set_zombie")==2 && skinid != 285 && ZombieTime <= 0) return 1;
	ClearAnimations(playerid, 1);
	return SetPlayerSkin(playerid, skinid);
}
#define SetPlayerSkin SetPlayerSkinEx


stock ChangeSkin(level,giveplayerid,listitem)
{
	if(!level) return 1;
	if(!fChangeSkin[level - 1][listitem]) return 1;
	SetPVarInt(giveplayerid, "InviteSkin", fChangeSkin[level-1][listitem]);
	p_info[giveplayerid][pModel] = fChangeSkin[level-1][listitem];
	UpdatePlayerData(giveplayerid,"pModel",p_info[giveplayerid][pModel]);
	SetPlayerSkin(giveplayerid,fChangeSkin[level-1][listitem]);

	return 1;
}

GetFrak(playerid,member,id)
{
	stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
	for(new I=0; I<10; I++)
	{
		if(fChangeSkin[member-1][I]==0) continue;
		format(stringer,500,"%s%i\n",stringer,fChangeSkin[member-1][I]);
	}
	ShowPlayerDialog(playerid,id,DIALOG_STYLE_LIST,f_info[member][f_name],stringer,"Выбрать","Отмена");
}


/*CMD:ago(playerid)
{
	br_player[playerid][br_object][0] = INVALID_OBJECT;
	//br_player[playerid][br_object][1] = INVALID_OBJECT;

	return 1;
}*/

//2139095040

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(GetPVarInt(playerid, "TrefilovDialog") != dialogid) return 1;
	SetPVarInt(playerid, "TrefilovDialog", -1);
	//printf ( "ID:%d | DIALOG:%d | RESPONSE:%d | LISTITEM:%d | INPUT:%s", playerid, dialogid, response, listitem, inputtext ) ;

	if(strfind(inputtext, "'", true) != -1 && strfind(inputtext, ",", true) != -1) return SendClientMessage ( playerid , -1, "Вы используете запрещенные символы" ) ;

	string_replace(inputtext, '%', '#') ;
	string_replace(inputtext, '\\', '#') ;

	new params[3];
	switch(dialogid)
	{
		case dTrunk:
		{
			if(!response)return true;
			//SendClientMessage(playerid,-1,"dTrunk");
			SetPVarInt(playerid,"trankput",0);
			SetPVarInt(playerid,"trankget",0);
			if(listitem==0) SetPVarInt(playerid,"trankput",GetPVarInt(playerid,"slottrunk"));
			else if(listitem==1) SetPVarInt(playerid,"trankget",GetPVarInt(playerid,"slottrunk"));
			else if(listitem==2) return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
			if(GetPVarInt(playerid,"trankput")==1) ShowBootList(playerid);
			else if(GetPVarInt(playerid,"trankget")==1)
			{
				stringer[0] = EOS;
				for(new i;i<9;i++)
				{
					if(!TrunkInfo[idaofcar[playerid]][tAmmo][i] || !TrunkInfo[idaofcar[playerid]][tGun][i]) continue;
					new gunname[32];
					GetWeaponName(TrunkInfo[idaofcar[playerid]][tGun][i],gunname,32);
					format(stringer,512,"%s\n%s [{"#cGREEN"}%d{"#cWHITE"}]",stringer,gunname,TrunkInfo[idaofcar[playerid]][tAmmo][i]);
				}
				if(!strlen(stringer))
				{
					SendClientMessage(playerid,COLOR_GREY,"В багажнике нет оружия");
					ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
					return 1;
				}
				ShowPlayerDialog(playerid,dTrunkGunGet,2,"Багажник",stringer,"Положить","Отмена");
			}
			else if(GetPVarInt(playerid,"trankput")>1) ShowPlayerDialog(playerid,dTrunkPut,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите положить", "Ввод", "Отмена");
			else if(GetPVarInt(playerid,"trankget")>1) ShowPlayerDialog(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
			return true;
		}
		case dTrunkGunGet2:
		{
			if(!response)return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
			new slot=GetPVarInt(playerid,"d_tank_get_")-1, ammo;
			if(slot==-1) return 0;
			if(sscanf(inputtext,"i",ammo)) return ShowPlayerDialog(playerid,dTrunkGunGet2,DIALOG_STYLE_INPUT," ","{ffffff}Введите количество патронов","Ввод","Отмена");
			if(ammo < 0 || ammo > 10000 || ammo > TrunkInfo[idaofcar[playerid]][tAmmo][slot]) return ShowPlayerDialog(playerid,dTrunkGunGet2,DIALOG_STYLE_INPUT," ","{ffffff}Введите количество патронов","Ввод","Отмена");
			AC_GivePlayerWeapon(playerid,TrunkInfo[idaofcar[playerid]][tGun][slot],ammo);
			TrunkInfo[idaofcar[playerid]][tAmmo][slot]-=ammo;
			SaveTrunk(idaofcar[playerid]);
			return 1;
		}
		case dTrunkGunGet:
		{
			if(!response)return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
			new cnt;
			for(new i;i<9;i++)
			{
				if(!TrunkInfo[idaofcar[playerid]][tAmmo][i] || !TrunkInfo[idaofcar[playerid]][tGun][i]) continue;
				else if(listitem==cnt)
				{
					ShowPlayerDialog(playerid,dTrunkGunGet2,DIALOG_STYLE_INPUT," ","{ffffff}Введите количество патронов","Ввод","Отмена");
					SetPVarInt(playerid,"d_tank_get_",i+1);
				}
				cnt++;
			}
			return true;
		}
		case dTrunkGunPut:
		{
			if(!response)return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
			new cnt;
			//print ( "for store 3" ) ;
			for(new i;i<=11;i++)
			{
				new gunid,ammo,storeslot;
				GetPlayerWeaponData(playerid,i,gunid,ammo);
				storeslot = GetStoreGunSlot(gunid);
				if(!gunid || storeslot == -1 || ammo <= 0) continue;
				else if(listitem == cnt)
				{
					new cnt2;
					for(new i2;i2<9;i2++) if(TrunkInfo[idaofcar[playerid]][tAmmo] > 0 && storeslot != i2) cnt2++;
					if(cnt2 >= 9)return SendClientMessage(playerid,COLOR_GREY,"Вы не можете хранить больше 9-х видов оружия в багажник");
					if(TrunkInfo[idaofcar[playerid]][tAmmo][i] + ammo > 10000) return SendClientMessage(playerid,CWHITE,"У Вас в шкафу максимальное к-во патронов данного оружия");
					TrunkInfo[idaofcar[playerid]][tGun][i]=gunid;
					TrunkInfo[idaofcar[playerid]][tAmmo][i]+=ammo;
					SetPlayerAmmo(playerid,gunid,0);
					//MeAction(playerid,"положил(а) оружие в шкаф");
					SendClientMessage(playerid,CGREEN,"Вы положили оружие в багажник");
					SetTimerEx("ShowBootList",500,0,"i",playerid);
					SaveTrunk(idaofcar[playerid]);
					break;
				}
				cnt++;
			}
			return true;
		}
		case dTrunkGet:
		{
			new put,slot=GetPVarInt(playerid,"trankget");
			if(!response)return ShowDialogTrunk(playerid,slot);
			if(sscanf(inputtext,"i",put)) return ShowPlayerDialog(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
			if(put<=0) return ShowPlayerDialog(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
			if(GetIntBoot(playerid,slot)<put) return ShowPlayerDialog(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
			if(slot<2||slot>7)return 1;
			if ( slot == 2 && put > 2000 ) return SendClientMessage(playerid,CGRAY,"Нельзя больше 2.000$");
			if(CheckGetBoot(playerid,slot,put))
			{
				SetIntBoot(playerid,slot,GetIntBoot(playerid,slot)-put);
				format(stringer,144,"Вы взяли {"#cBOOT"}%d {"#cWHITE"}%s из багажника",put,names_boot[1][slot-1]);
				SendClientMessage(playerid,CWHITE,stringer);
				DeletePVar(playerid,"trankget");
				ShowDialogTrunk(playerid,slot);
				SaveTrunk(idaofcar[playerid]);
			}
			return true;
		}
		case dTrunkPut:
		{
			new put,slot=GetPVarInt(playerid,"trankput");
			if(!response)return ShowDialogTrunk(playerid,slot);
			if(sscanf(inputtext,"i",put)) return ShowPlayerDialog(playerid,dTrunkPut,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите положить", "Ввод", "Отмена");
			if(put<0 || put > GetIntBoot(playerid,slot)+put>getmaxtrunkput(slot)) return ShowPlayerDialog(playerid,dTrunkPut,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите положить", "Ввод", "Отмена");
			if(slot<2||slot>7)return 1;
			if ( slot == 2 && put > 2000 ) return SendClientMessage(playerid,CGRAY,"Нельзя больше 2.000$");
			if(CheckPutBoot(playerid,slot,put))
			{
				SetIntBoot(playerid,slot,GetIntBoot(playerid,slot)+put);
				format(stringer,144,"Вы положили {"#cBOOT"}%d {"#cWHITE"}%s в багажник",put,names_boot[1][slot-1]);
				SendClientMessage(playerid,CWHITE,stringer);
				DeletePVar(playerid,"trankput");
				ShowDialogTrunk(playerid,slot);
				SaveTrunk(idaofcar[playerid]);
			}
			else SendClientMessage(playerid,CGRAY,"У вас нет этого предмета");
			return true;
		}
		case 1532:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "OldCollectorSkin",GetPlayerSkin(playerid));
			SetPlayerSkin(playerid, (p_info[playerid][pSex]==1) ? (35+random(2)) : (53));
			SetPlayerChatBubble(playerid, "Переоделся(ась)", 0x1FC3FFFF, 20.0, 5000);
			SetPVarInt(playerid, "Collector", true);
			SendInf(playerid, "Вы начали работу, идите в сад собирать яблоки");
			SendInf(playerid, "Для того, чтобы начать их собирать подойдите к дереву");
			//
			SetPlayerAttachedObject(playerid, 0, 19904, 1, 0.008999, 0.064000, 0.000000, -2.500003, 90.800010, 179.900009, 1.237999, 1.287000, 1.141000, 0, 0);
			SetPlayerAttachedObject(playerid, 1, 2237, 6, 0.000000, 0.087999, 0.000000, -175.400024, -4.799998, -28.500000, 0.623000, 0.799999, 0.693999, 0, 0);
			return 1;
		}
		case 1531:
		{
			if(!response) return 1;
			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CARRY) return SendClientMessage(playerid,COLOR_GREY,"Сначала вам нужно сдать то, что вы уже собрали на склад.");
			SetPlayerSkin(playerid, GetPVarInt(playerid, "OldCollectorSkin"));
			SetPlayerChatBubble(playerid, "Переоделся(ась)", 0x1FC3FFFF, 20.0, 5000);

			format(stringer,128,"Вы закончили работу. Ваш заработок составил: {"#cGREEN"}%i$", GetPVarInt(playerid,"pJobAmount.4"));
			SendInf(playerid,stringer);
			SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");

			p_info[playerid][pSalary] += GetPVarInt(playerid,"pJobAmount.4");
			UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);

			DeletePVar(playerid, "OldCollectorSkin");
			DeletePVar(playerid, "Collector");
			DeletePVar(playerid, "pJobAmount.4");
			SetPlayerSpecialAction(playerid,0);
			DisablePlayerCheckpoint(playerid);

			for(new index = 0; index < MAX_PLAYER_ATTACHED_OBJECTS; index++)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, index))
				{
					RemovePlayerAttachedObject(playerid,index);
				}
			}
			return 1;
		}
		case 150:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "Miner", 1);
			PlayerTextDrawShow(playerid, MinerDraw[playerid]);
			PlayerTextDrawSetString(playerid, MinerDraw[playerid],"STONE: 0");
			SendClientMessage(playerid, 0xa4cd00AA, "Вы начали работу на шахте, ищите месторождение руды.");
			SendClientMessage(playerid, 0xa4cd00AA, "Чтобы начать добычу на найденом месте (( Нажимайте ЛКМ - Огонь )).");
			return 1;
		}
		case 151:
		{
			if(!response) return 1;

			format(stringer,128,"Вы закончили работу, Ваш заработок: %i$", GetPVarInt(playerid,"pJobAmount.2"));
			SCM(playerid,0xa4cd00AA, stringer);

			SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");
			p_info[playerid][pSalary] += GetPVarInt(playerid,"pJobAmount.2");
			UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);

			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			PlayerTextDrawHide(playerid, MinerDraw[playerid]);
			DeletePVar(playerid, "Miner");
			DeletePVar(playerid, "pJobAmount.2");
			DeletePVar(playerid, "MinerCount");
			DeletePVar(playerid, "miner_camni");
			return 1;
		}
		case 152:
		{
			if(!response) return 1;
			new dop = 0;
			for(new i; i < sizeof(ElevatorQueue22); i ++)
			{
				if(ElevatorQueue22[i] == listitem) dop = 1;
			}
			new dop22 = 0;
			for(new i; i < sizeof(FloorRequestedBy22); i ++)
			{
				if(FloorRequestedBy22[i] == playerid){dop22 = 1;}
			}

			if(FloorRequestedBy22[listitem] != 10000 || dop == 1) return SendClientMessage(playerid, 0x00CC00FF, "{00CC00}» {"#cWHITE"}Выбранный Вами этаж уже находится, в очереди обслуживания !");
			if(dop22 == 1) return SendClientMessage(playerid, 0x00CC00FF, "{00CC00}» {"#cWHITE"}Вы уже выбрали этаж, пожалуйста ожидайте !");
			CallElevator22(playerid, listitem, 1);//вызов, или начало движения лифта
		}
		case RENAME_DIALOG:
		{
			if(response)
			{
				if ( IsARPName ( inputtext ) )
				{
					stringer[0] = EOS;
					format ( stringer , 150 , "SELECT `tName` FROM `accounts` WHERE `tName` = '%s'" , inputtext ) ;
					mysql_pquery ( connects, stringer , "FexistAccountChange" , "is" , playerid , inputtext ) ;
					
					//yesterday
					//before
				}
				else
				{
					ShowPlayerDialog(playerid,RENAME_DIALOG,1,"Введите новый ник","{FF0000}Это не РП ник!\n\n{"#cWHITE"}Ваш ник не соответствует правилам сервера.\nВведите новый ник в окошко и нажмите {9ACD32}Далее.\n\n{"#cWHITE"}Пример: {9ACD32}"PROJECT_EX_NICK,"Далее","Выход");
				}
			}
			else
			{
				ShowPlayerDialog (playerid, RENAME_DIALOG + 1, 0, "Вы уверены?","Вы собрались покинуть сервер.\nЕсли хотете сделать это нажмите 'Покинуть'.\nВ ином случае нажмите 'Отмена'","Покинуть","Отмена");
			}
		}
		case RENAME_DIALOG + 1 :
		{
			if ( response ) return Kick ( playerid ) ;

			ShowPlayerDialog  ( playerid,RENAME_DIALOG,1,"Введите новый ник","{"#cWHITE"}Ваш ник не соответствует правилам сервера.\nВведите новый ник в окошко и нажмите {9ACD32}Далее.\n\n{"#cWHITE"}Пример: {9ACD32}"PROJECT_EX_NICK,"Далее","Выход");

			return 1;
		}//is_create_station
		case dStationDelete:
		{
			if ( !response ) return 1;
			params[0] = 0;
			for ( new i = 0 ; i < MAX_ROUTE ; i++ )
			{
				if ( gRouteMysqlID[i] != -1 )
				{
					if ( listitem == params[0] )
					{
						format(stringer, 144, "Вы удалили маршрут: {FFFFFF}%s (%d)", gRouteName[i], i + 1 );
						SendClientMessage(playerid, CRED, stringer);

						foreach(x)
						{
							if(GetPVarInt(x, "current_station"))
							{
								if(GetPVarInt(x, "current_station")-1 == i)
								{
									DeletePVar(x, "current_station");
								}
							}
						}
						new names[90];
						format(names,90, "DELETE FROM `Station` WHERE `id` = '%d'", gRouteMysqlID[i]);
						mysql_pquery(connects, names, "", "");
						gRouteMysqlID[i] = -1;
						break;
					}
					params[0]++;
					//format(stringer, 1500, "%s%i. %s\n",stringer,i+1,gRouteName[i]);
					//break;
				}
			}

			return 1;
		}
		case dCreateStation:
		{
			if(!response) return 1;

			if(strlen(inputtext) < 0 || strlen(inputtext) >= 64) return ShowPlayerDialog(playerid,dCreateStation,DIALOG_STYLE_INPUT,"Создание новой маршрута", "Укажите название нового маршрута", "Ввод", "Отмена");
			new get_free_station = -1;
			for ( new i = 0 ; i < MAX_ROUTE ; i++ )
			{
				if ( gRouteMysqlID[i] == -1 )
				{
					get_free_station = i;
					break;
				}
			}
			if ( get_free_station == -1 ) return 1;

			SetPVarInt(playerid,"current_station", get_free_station + 1);
			strmid(gRouteName[get_free_station],inputtext,0,strlen(inputtext));
			//is_create_station=true;
			new names[90];
			format(names,90, "INSERT INTO `Station` (`name`) VALUES ('%s')", inputtext);
			mysql_pquery(connects, names, "CreateStation", "i", get_free_station);
			ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Создание нового маршрута",
			"/scp - для создания нового чекпоинта\n /sback - для отката на один чекпоинт\n/endstation - закрыть сохранить", "Закрыть", "");

			return 1;
		}
		case dCreateRace:
		{
			if(!response) return 1;

			if(strlen(inputtext) < 0 || strlen(inputtext) >= 64) return ShowPlayerDialog(playerid,dCreateRace,DIALOG_STYLE_INPUT,"Создание новой трассы", "Укажите название новой трассы", "Ввод", "Отмена");

			strmid(RaceName[TotalRaces],inputtext,0,strlen(inputtext));

			SetPVarInt(playerid,"current_races", TotalRaces + 1);
			is_create_race=true;

			new names[90];
			format(names,90, "INSERT INTO `Race` (`name`) VALUES ('%s')", inputtext);
			mysql_pquery(connects, names, "", "");

			ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Создание новой трассы", "/cp - для создания нового чекпоинта\n /back - для отката на один чекпоинт\n /pos [ 1 - 4] - позиции машин для старта гонки\n /endrace - закрыть сохранить", "Закрыть", "");

			return 1;
		}
		case D_INPUT_TABLE_DELL_LINE:
		{
			if(!response) return true;

			for(new i=0;i<25;i++)
			{
				if(br_player[playerid][br_objects][i] != INVALID_OBJECT)
				{
					DestroyDynamicObject ( br_player[playerid][br_objects][i] ) ;
					br_player[playerid][br_objects][i]=INVALID_OBJECT;
				}
			}

			if(blocktext[playerid] != Text3D:-1)
			{
				Delete3DTextLabel(blocktext[playerid]);
				blocktext[playerid]=Text3D:-1;
			}

			return true;
		}
		case D_INPUT_TABLE_DELL_NO_LINE:
		{
			if(!response) return 1;

			if(br_player[playerid][br_objects][0] != INVALID_OBJECT)
			{
				DestroyDynamicObject ( br_player[playerid][br_objects][0] ) ;
				br_player[playerid][br_objects][0] = INVALID_OBJECT;
			}


			if(blocktext[playerid] != Text3D:-1)
			{
				Delete3DTextLabel(blocktext[playerid]);
				blocktext[playerid]=Text3D:-1;
			}

			return true;
		}
		case D_INPUT_TABLE_DELL:
		{
			if(!response) return 1;

			if ( br_player[playerid][br_object_text][0] != INVALID_OBJECT ) DestroyDynamicObject ( br_player[ playerid ][ br_object_text ][ 0 ] ) ;
			if ( br_player[playerid][br_object_text][1] != INVALID_OBJECT ) DestroyDynamicObject ( br_player[ playerid ][ br_object_text ][ 1 ] ) ;

			br_player[playerid][br_object_text][0] = INVALID_OBJECT;
			br_player[playerid][br_object_text][1] = INVALID_OBJECT;


			if(blocktext[playerid] != Text3D:-1)
			{
				Delete3DTextLabel(blocktext[playerid]);
				blocktext[playerid]=Text3D:-1;
			}

			return true;
		}
		case D_INPUT_TABLE:
		{
			if(!response) return 1;

			new Float:X, Float:Y, Float:Z, Float:A;
			new count_spaces = 0, length = strlen(inputtext);
			//print ( "for D_INPUT_TABLE" ) ;
			for( new C = 0x0; inputtext[C] != 0x0; ++C )
			{
				if( inputtext[C] == 0x20 )
				{
					inputtext[C] = '\n';
					count_spaces ++;
				}
			}

			if(length < 5 || length >= 30 || count_spaces > 1)
			{
				ShowPlayerDialog(playerid, D_INPUT_TABLE, DIALOG_STYLE_INPUT, "{29A300}Установка информационной панели", "{"#cWHITE"}Введите текст\n{CC3300}- Максимальное количество символов 30\n{CC3300}- Если вы используете пробел, то он заменяется на перенос строки\n{CC3300}- Больше двух слов использовать нельзя\n", "Потвердить", "Отмена");
				return 0;
			}

			X = p_info[playerid][pX];
			Y = p_info[playerid][pY];
			Z = p_info[playerid][pZ];

			GetPlayerFacingAngle(playerid, A);

			if(br_player[playerid][br_object_text][0] == INVALID_OBJECT)
			{
				br_player[playerid][br_object_text][0] = CreateDynamicObject(19980, X + 3.0 * floatsin(-A, degrees), Y + 3.0 * floatcos(-A, degrees), Z - 2.0, 0.0, 0.0, A );

				SetDynamicObjectMaterial(br_player[playerid][br_object_text][0], 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0);
				SetDynamicObjectMaterial(br_player[playerid][br_object_text][0], 1, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0);
				SetDynamicObjectMaterial(br_player[playerid][br_object_text][0], 2, 10778, "airportcpark_sfse", "ws_fluorescent2", 0);
				EditDynamicObject(playerid, br_player[playerid][br_object_text][0]);

				Streamer_Update(playerid);

				strmid ( br_player[playerid][br_text] , inputtext, 0, strlen(inputtext), strlen(inputtext) + 1);
			}
		}
		case dBlMenu:
		{
			if ( ! response ) return 1 ;
			//if ( ! IsAGang ( playerid ) && ! ISAMAFIA ( playerid ) ) return 1 ;
			switch ( listitem )
			{
				case 0:
				{
					if ( p_info [ playerid ] [ tRank ] < f_info [ p_info [ playerid ] [ tMember ] ] [ f_bl_config ] [ 0 ] )
					{
						new text_string [ 128 ] ;
						format ( text_string, sizeof text_string, "* Вам нужен как минимум %d-й ранг!", f_info [ p_info [ playerid ] [ tMember ] ] [ f_bl_config ] [ 0 ] ) ;
						SendClientMessage ( playerid, COLOR_GREY, text_string ) ;
						return 1 ;
					}
					ShowPlayerDialog ( playerid, dBlInsert1, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "Введите ID игрока, которого хотите внести в ЧС организации", "Далее", "Назад");
				}
				case 1:
				{
					if ( p_info [ playerid ] [ tRank ] < f_info [ p_info [ playerid ] [ tMember ] ] [ f_bl_config ] [ 0 ] )
					{
						new text_string [ 128 ] ;
						format ( text_string, sizeof text_string, "* Вам нужен как минимум %d-й ранг!", f_info [ p_info [ playerid ] [ tMember ] ] [ f_bl_config ] [ 0 ] ) ;
						SendClientMessage ( playerid, COLOR_GREY, text_string ) ;
						return 1 ;
					}
					ShowPlayerDialog ( playerid, dBlDelete, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "Введите ID игрока, которого хотите вычеркнуть из ЧС организации", "Принять", "Назад");
				}
				case 2:
				{
					new sql_string [ 68 ] ;
					SetPVarInt ( playerid, "bl_page", 1 ) ;

					format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", p_info [ playerid ] [ tMember ] ) ;
					mysql_pquery(connects, sql_string, "bl_callback", "i", playerid );
				}
				case 3:
				{
					stringer = "Имя\t\t\t\tПричина\n\n{"#cWHITE"}";
					new COUNT_MEMBERS = 0 ;

					foreach(i)
					{
						if ( ! bl_info [ i ] [ bl_fraction ] [ p_info[playerid][tMember] ] )continue;

						format(stringer, 2400, "%s%s(%i)\t\t\t%s\n", stringer, NamePlayer [ i ], i, bl_info [ i ] [ bl_reason ] [ p_info[playerid][tMember] ] ) ;
						COUNT_MEMBERS ++ ;
					}
					if ( COUNT_MEMBERS == 0 ) return SendClientMessage ( playerid, COLOR_GREY, "Ваш чёрный список пуст!" ) ;
					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Черный список онлайн", stringer, "Закрыть", "");
				}
			}
			return 1 ;
		}
		case dBlDelete:
		{
			if ( ! response ) return ShowPlayerDialog(playerid,dBlMenu,DIALOG_STYLE_LIST,"{ffff00}Чёрный список", "Внести в ЧС\nВычеркнуть из ЧС\nПросмотреть ЧС\nПросмотреть ЧС{33AA33} [онлайн]", "Выбрать", "Закрыть");
			//if ( ! IsAGang ( playerid ) && ! ISAMAFIA ( playerid ) ) return 1 ;
			new pl_id = strval ( inputtext ) ;
			if ( pl_id < 0 || pl_id > MAX_PLAYERS ) return ShowPlayerDialog ( playerid, dBlDelete, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок не в сети!\n\nВведите ID игрока, которого хотите вычеркнуть из ЧС организации", "Принять", "Назад");
			if ( ! IsPlayerConnected ( pl_id ) ) return ShowPlayerDialog ( playerid, dBlDelete, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок не авторизован!\n\nВведите ID игрока, которого хотите вычеркнуть из ЧС организации", "Принять", "Назад");
			if ( !bl_info [ pl_id ] [ bl_fraction ] [ p_info [ playerid ] [ tMember ] ]  ) return ShowPlayerDialog ( playerid, dBlDelete, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок не в ЧС!\n\nВведите ID игрока, которого хотите вычеркнуть из ЧС организации", "Принять", "Назад");
			bl_info [ pl_id ] [ bl_fraction ] [ p_info [ playerid ] [ tMember ] ] = false ;
			bl_info [ pl_id ] [ bl_kills ] [ p_info [ playerid ] [ tMember ] ] = 0 ;

			new sql_string [ 74 + MAX_PLAYER_NAME + 6 ] ;
			format ( sql_string, sizeof ( sql_string ), "DELETE FROM `fraction_bl` WHERE `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", NamePlayer [ pl_id ], p_info [ playerid ] [ tMember ] ) ;
			mysql_pquery(connects, sql_string, "", "");

			format ( sql_string, 128, "[BLACK LIST] %s вычеркнул Вас из черного списка %s", NamePlayer [ playerid ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_name ] ) ;
			SendClientMessage ( pl_id, 0x01FCFFC8, sql_string ) ;
			format( sql_string, 128, "[BLACK LIST] %s вычеркнул %s из черного списка %s",  NamePlayer [ playerid ], NamePlayer [ pl_id ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_name ] ) ;
			SendFamilyMessage ( p_info[ playerid ] [ tMember], 0x01FCFFC8, sql_string ) ;


		 }
		case dBlInsert1:
		{
			if ( ! response ) return ShowPlayerDialog(playerid,dBlMenu,DIALOG_STYLE_LIST,"{ffff00}Чёрный список", "Внести в ЧС\nВычеркнуть из ЧС\nПросмотреть ЧС\nПросмотреть ЧС{33AA33} [онлайн]", "Выбрать", "Закрыть");
			//if ( ! IsAGang ( playerid ) && ! ISAMAFIA ( playerid ) ) return 1 ;
			if ( strval ( inputtext ) < 0 || strval ( inputtext ) > MAX_PLAYERS ) return ShowPlayerDialog ( playerid, dBlInsert1, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок не в сети!\n\nВведите ID игрока, которого хотите внести в ЧС организации", "Далее", "Назад");
			if ( ! IsPlayerConnected ( strval ( inputtext ) )  ) return ShowPlayerDialog ( playerid, dBlInsert1, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок не авторизован!\n\nВведите ID игрока, которого хотите внести в ЧС организации", "Далее", "Назад");
			if ( bl_info [ strval ( inputtext ) ] [ bl_fraction ] [ p_info [ playerid ] [ tMember ] ]  ) return ShowPlayerDialog ( playerid, dBlInsert1, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок уже в ЧС!\n\nВведите ID игрока, которого хотите внести в ЧС организации", "Далее", "Назад");
			if ( p_info [ playerid ] [ tMember ] ==  p_info [ strval ( inputtext ) ] [ tMember ] ) return ShowPlayerDialog ( playerid, dBlInsert1, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "* Игрок состоит в Вашей организации!\n\nВведите ID игрока, которого хотите внести в ЧС организации", "Далее", "Назад");
			bl_insert_id [ playerid ] = strval ( inputtext ) ;
			ShowPlayerDialog ( playerid, dBlInsert2, DIALOG_STYLE_INPUT,"{ffff00}Причина внесения", "Введите причину, по которой Вы хотите внести игрока в ЧС организации", "Принять", "Назад");
		}
		case dBlInsert2:
		{
			if ( ! response ) return DeletePVar ( playerid, "bl_insert_id" ), ShowPlayerDialog ( playerid, dBlInsert1, DIALOG_STYLE_INPUT,"{ffff00}ID игрока", "Введите ID игрока, которого хотите внести в ЧС организации", "Далее", "Назад");
			//if ( ! IsAGang ( playerid ) && ! ISAMAFIA ( playerid ) ) return 1 ;
			if ( strlen ( inputtext ) < 2 || strlen ( inputtext ) > 32 ) return ShowPlayerDialog ( playerid, dBlInsert2, DIALOG_STYLE_INPUT,"{ffff00}Причина внесения", "* Слишком длинная причина!\n\nВведите причину, по которой Вы хотите внести игрока в ЧС организации", "Принять", "Назад");
			new pl_id = bl_insert_id [ playerid ] ;

			bl_info [ pl_id ] [ bl_fraction ] [ p_info [ playerid ] [ tMember ] ] = true ;
			bl_info [ pl_id ] [ bl_kills ] [ p_info [ playerid ] [ tMember ] ] = 0 ;

			new sql_string [ 300 ] ;
			format(sql_string, 300, "INSERT INTO `fraction_bl` (`f_bl_id`, `f_bl_accused`, `f_bl_accuser`, `f_bl_date`, `f_bl_reason`) VALUES ('%i','%s','%s',NOW(),'%s')",
			p_info [ playerid ] [ tMember ], NamePlayer [ pl_id ], NamePlayer [ playerid ], inputtext ) ;
			mysql_pquery ( connects, sql_string, "", "" ) ;

			format ( bl_info [ pl_id ] [ bl_reason ] [ p_info [ playerid ] [ tMember ] ], 32, "%s", inputtext ) ;


			format ( sql_string, 128, "[BLACK LIST] %s внес Вас в черный список %s, причина: %s", NamePlayer [ playerid ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_name ], inputtext ) ;
			SendClientMessage ( pl_id, 0x01FCFFC8, sql_string ) ;
			format( sql_string, 128, "[BLACK LIST] %s внес %s в черный список %s, причина: %s",  NamePlayer [ playerid ], NamePlayer [ pl_id ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_name ], inputtext  ) ;
			SendFamilyMessage ( p_info[ playerid ] [ tMember], 0x01FCFFC8, sql_string ) ;
			bl_insert_id [ playerid ] = -1 ;
		}
		case dBlAllList:
		{
			if ( ! response )
			{
				DeletePVar ( playerid, "bl_page" ) ;
				DeletePVar ( playerid, "bl_rows" ) ;
				return ShowPlayerDialog(playerid,dBlMenu,DIALOG_STYLE_LIST,"{ffff00}Чёрный список", "Внести в ЧС\nВычеркнуть из ЧС\nПросмотреть ЧС\nПросмотреть ЧС{33AA33} [онлайн]", "Выбрать", "Закрыть");
			}
			if ( listitem == 0 )
			{
				new rows_list = GetPVarInt ( playerid, "bl_page" ) - 1 ;
				new sql_string [ 128 ] ;
				if ( rows_list == 0 )
				{
					format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", p_info [ playerid ] [ tMember ] ) ;
					mysql_pquery(connects, sql_string, "bl_callback", "i", playerid );
					SendClientMessage ( playerid, COLOR_GREY, "Это первая страница!" ) ;
					return 1 ;
				}
				SetPVarInt ( playerid, "bl_page", rows_list ) ;
				format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", p_info [ playerid ] [ tMember ] ) ;
				mysql_pquery(connects, sql_string, "bl_callback", "i", playerid );
			}
			else if ( listitem == 1 )
			{
				new rows_list = GetPVarInt ( playerid, "bl_page" ) - 1 ;
				new sql_string [ 128 ] ;
				if ( ( rows_list + 1 ) * 10 >= GetPVarInt ( playerid, "bl_rows" ) )
				{
					SendClientMessage ( playerid, COLOR_GREY, "[Ошибка] Это последняя страница!" ) ;
					format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", p_info [ playerid ] [ tMember ] ) ;
					mysql_pquery(connects, sql_string, "bl_callback", "i", playerid );
					return 1 ;
				}
				SetPVarInt ( playerid, "bl_page", rows_list + 2 ) ;
				format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", p_info [ playerid ] [ tMember ] ) ;
				mysql_pquery(connects, sql_string, "bl_callback", "i", playerid );
			}
			else
			{
				new sql_string [ 128 ] ;
				format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", p_info [ playerid ] [ tMember ] ) ;
				mysql_pquery(connects, sql_string, "bl_callback", "i", playerid );
			}
		}
		case 16:
		{
			if(response)
			{
				new i = GetPVarInt ( playerid, "capture_gz_id" ) ;
				DeletePVar ( playerid, "capture_gz_id" ) ;
				printf ( "[TRY] CAPTURE LOG: %s capture %s | PL_NAME: %s", GFrac(p_info[playerid][tMember]), GFrac(GZInfo[i][gFrakVlad] ), NamePlayer [ playerid ] ) ;
				if(zahvat == true) return SendErr(playerid, "В данный момент идёт захват территории");
				if(p_info[playerid][tMember] == GZInfo[i][gFrakVlad]) return SendErr(playerid,"Вы не можете захватить собственную территорию");
				if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SendErr(playerid, "Банда на которую вы собираетесь напасть нет в сети / Меньше трёх человек");
				printf ( "[TRY 2] CAPTURE LOG: %s capture %s | PL_NAME: %s", GFrac(p_info[playerid][tMember]), GFrac(GZInfo[i][gFrakVlad]), NamePlayer[playerid] ) ;
				new gang = -1;
				switch(GZInfo[i][gFrakVlad])
				{
					case 12: gang = MOROZ_BALLAS;
					case 13: gang = MOROZ_VAGOS;
					case 15: gang = MOROZ_GROVE;
					case 17: gang = MOROZ_AZTECAS;
					case 18: gang = MOROZ_RIFA;
				}
				if(gang != -1)
				{
					if(fracmoroz[gang] > unix)
					{
						SendErr(playerid,"Банду которую вы хотите захватить невозможно");
						SendErr(playerid,"Она заморожена администратором, ожидайте сообщения в чате когда заморозка будет снята");

						return 1;
					}
				}
				printf ( "[TRY 3]CAPTURE LOG: %s capture %s | PL_NAME: %s", GFrac(p_info[playerid][tMember]), GFrac(GZInfo[i][gFrakVlad]), NamePlayer[playerid] ) ;
				new attemptslot= -1;
				switch(p_info[playerid][tMember])
				{
					case 13: attemptslot = 0;
					case 12: attemptslot = 1;
					case 15: attemptslot = 2;
					case 18: attemptslot = 3;
					case 17: attemptslot = 4;
				}
				if(attemptslot != -1)
				{
					if(CaptureAttempt[attemptslot] >= MAX_ATTEMPT_GANG)
					{
						format(stringer,128,"Ваша банда уже воевала более %i раз",MAX_ATTEMPT_GANG);
						SendErr(playerid,stringer);
						return 1;
					}
				}
				printf ( "[TRY 4]CAPTURE LOG: %s capture %s | PL_NAME: %s", GFrac(p_info[playerid][tMember]), GFrac(GZInfo[i][gFrakVlad]), NamePlayer[playerid] ) ;
				if(zahvat == true) return SendErr(playerid, "В данный момент идёт захват территории");
				printf ( "CAPTURE LOG: %s capture %s | PL_NAME: %s", GFrac(p_info[playerid][tMember]), GFrac(GZInfo[i][gFrakVlad]), NamePlayer[playerid] ) ;
				zahvat = true;
				GZInfo[i][gTime] = 600;
				//GZInfo[i][gTime] = 30;
				GetPlayer2DZone(playerid,GZInfo[i][PlaceName],30);
				GZInfo[i][gNapad] = p_info[playerid][tMember];
				format(stringer, 112, "%s начал(a) захват территории банды %s в районе %s",GFrac(p_info[playerid][tMember]),GFrac(GZInfo[i][gFrakVlad]),GZInfo[i][PlaceName]);
				SendBand(COLOR_LIGHTRED,stringer);
				format(stringer,128,"Начал захват: %s",NamePlayer[playerid]);
				SendBand(-1,stringer);
				format(stringer, 144, "[A] Начался капт между бандой %s и %s",GFrac(p_info[playerid][tMember]),GFrac(GZInfo[i][gFrakVlad]));
				AdmMes(CADMIN_HELP_INFO, stringer, 1);
				GangZoneFlashForAll(GZInfo[i][gIDs],GetGangColor(GZInfo[i][gNapad]));
				GZInfo[i][ZoneOnBattle] = 1;
				GZInfo[i][TypeBattle] = GetPVarInt(playerid, "TypeBattle");
				DeletePVar(playerid, "TypeBattle");
				GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i, p_info[playerid][tMember], GZInfo[i][gFrakVlad]);
				if(attemptslot != -1) CaptureAttempt[attemptslot] ++;
			}
			else
			{
				SendSucc(playerid, "Вы отменили захват");
				DeletePVar ( playerid, "capture_gz_id" ) ;
			}

			return 1;
		}
		case 56:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					p_info[playerid][pSpawn] = 0;
				}
				case 1:
				{
					if(p_info[playerid][pHouse] == 0 && p_info[playerid][pTempKey] == 0 && p_info[playerid][pRoom] == 0) return SendErr(playerid, "У Вас нет дома");
					p_info[playerid][pSpawn] = 1;
				}
				case 2:
				{
					if(p_info[playerid][tMember] == 0) return SendErr(playerid, "Вы не состоите в организациях");
					p_info[playerid][pSpawn] = 0;
				}
				case 3:
				{
					if(p_info[playerid][pFamily] == 0) return SendErr(playerid, "Вы не состоите в семье");
					new bool:check_=false;
					for(new house = 1; house < TotalHouse; house++)
					{
						if ( gHouses[house][hFamily] == p_info[playerid][pFamily] )
						{
							check_ = true;
							break;
						}
					}
					if ( check_ )
						p_info[playerid][pSpawn] = 2;
					else return SendErr(playerid, "К вашей семье не привязан дом");
				}
			}
			UpdatePlayerData(playerid, "pSpawn", p_info[playerid][pSpawn]);
			SendSucc(playerid, "Ваше место появления в игре изменено");
		}
		case d_carjack+2:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			new i = GetPVarInt(playerid,"SelectedSlotBuyingCar");
			format(stringer,48,"Вы утилизировали авто за - {"#cGREEN"}$%d", i);
			SendClientMessage(playerid, COLOR_GREY, stringer);

			p_info[playerid][pCash] += i;
			UpdateMoney(playerid);

			TransferMoney(playerid,p_info[playerid][pCash]-i,i,"Утилизация авто");

			SetVehicleToRespawn(GetPlayerVehicleID(playerid));

			DeletePVar(playerid, "SelectedSlotBuyingCar");
			DeletePVar(playerid, "NormCar");
		}
		case d_carjack+1:
		{
			//print ( "for CarJack" ) ;
			if(!response) return DeletePVar(playerid, "CarJack");
			for(new i; i < 2; i++) PlayerTextDrawShow(playerid, YNText[playerid][i]);
			KeyYN{playerid} = RandomEx(0, 2);
			if(!(playerFlags[playerid] & YN)) playerFlags[playerid] ^= YN;
			switch(KeyYN{playerid})
			{
				case 0: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~N");
				case 1: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~Y");
			}
			PlayerTextDrawHide(playerid, YNText[playerid][1]);
			PlayerTextDrawShow(playerid, YNText[playerid][1]);
			universalbar[playerid] = CreatePlayerProgressBar(playerid, 256.000000, 131.000000, 140.0, 12.0, 0xFFFFFFFF, 5);
			ShowPlayerProgressBar(playerid, universalbar[playerid]);
			SetPlayerProgressBarMaxValue(playerid, universalbar[playerid], 600);
			SetPlayerProgressBarValue(playerid, universalbar[playerid], 35);
			CreateBarForPlayer[playerid] = 0;
			SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
			SetPVarInt(playerid, "Procedure", 2);
		}
		case d_carjack:
		{
			if(!response) return DeletePVar(playerid, "CarJack");
			for(new i; i < 2; i++) PlayerTextDrawShow(playerid, YNText[playerid][i]);
			KeyYN{playerid} = RandomEx(0, 2);
			if(!(playerFlags[playerid] & YN)) playerFlags[playerid] ^= YN;
			switch(KeyYN{playerid})
			{
				case 0: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~N");
				case 1: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~Y");
			}
			PlayerTextDrawHide(playerid, YNText[playerid][1]);
			PlayerTextDrawShow(playerid, YNText[playerid][1]);
			universalbar[playerid] = CreatePlayerProgressBar(playerid, 256.000000, 131.000000, 140.0, 12.0, 0xFFFFFFFF, 5);
			ShowPlayerProgressBar(playerid, universalbar[playerid]);
			SetPlayerProgressBarMaxValue(playerid, universalbar[playerid], 600);
			SetPlayerProgressBarValue(playerid, universalbar[playerid], 35);
			CreateBarForPlayer[playerid] = 1;
			SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
			SetPVarInt(playerid, "Procedure", 1);
		}
		/*case 990:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pPayDayHad] < 10) return SendErr(playerid, "Сперва отыграйте 10-ть часов");
					if(p_info[playerid][p_plane] != 0) return SendErr(playerid, "У вас уже есть авиа-транспорт");
					SetPVarInt(playerid, "AutoShop", 5);
					SetPVarInt(playerid, "CarShop", 5);
					ShowBuyCar(playerid);
				}
				case 1:
				{
					if(GetPVarInt(playerid, "is_plane") - 1 != 0)
					{
						DestroyVehicleOP(GetPVarInt(playerid, "is_plane") - 1);
						DeletePVar(playerid, "is_plane");
					}
					if(p_info[playerid][pPayDayHad] < 10) return SendErr(playerid, "Сперва отыграйте 10-ть часов");
					if(p_info[playerid][pCash] < 10000) return SendErr(playerid, "У Вас не достаточно денег");
					if(p_info[playerid][p_plane] == 0) return SendErr(playerid, "У вас нет авиа-транспорта");
					if(GetPVarInt(playerid, "is_plane") - 1 == 0) return SCM ( playerid, CWHITE, "• {AC0000}[Ошибка] {"#cWHITE"}Самолёт уже доставлен");
					new randomplane = 1 + random(4);
					switch(randomplane)
					{
						case 1:
						{
							new plane_id = CreateVehicleOP(p_info[playerid][p_plane], 1986.4695,-2381.9155,13.2740,90.1725, p_info[playerid][p_plane_color][0], p_info[playerid][p_plane_color][1], 7200);
							SetPVarInt(playerid, "is_plane", plane_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						case 2:
						{
							new plane_id = CreateVehicleOP(p_info[playerid][p_plane], 1986.3695,-2316.0283,13.2740,90.5950, p_info[playerid][p_plane_color][0], p_info[playerid][p_plane_color][1], 7200);
							SetPVarInt(playerid, "is_plane", plane_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						case 3:
						{
							new plane_id = CreateVehicleOP(p_info[playerid][p_plane], 1986.4280,-2249.5161,13.2739,90.0154, p_info[playerid][p_plane_color][0], p_info[playerid][p_plane_color][1], 7200);
							SetPVarInt(playerid, "is_plane", plane_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						case 4:
						{
							new plane_id = CreateVehicleOP(p_info[playerid][p_plane], 1920.1587,-2255.0303,13.2740,175.8488, p_info[playerid][p_plane_color][0], p_info[playerid][p_plane_color][1], 7200);
							SetPVarInt(playerid, "is_plane", plane_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						default:
						{
							new plane_id = CreateVehicleOP(p_info[playerid][p_plane], 1920.1587,-2255.0303,13.2740,175.8488, p_info[playerid][p_plane_color][0], p_info[playerid][p_plane_color][1], 7200);
							SetPVarInt(playerid, "is_plane", plane_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
					}
					TransferMoney(playerid,p_info[playerid][pCash]-10000,10000,"Покупка самолета");
					print("create plane");
				}
				case 2:
				{
					if(p_info[playerid][p_plane] == 0) return SendErr(playerid, "У вас нет авиа-транспорта");
					if(GetPVarInt(playerid, "is_plane") - 1 != 0)
					{
						DestroyVehicleOP(GetPVarInt(playerid, "is_plane") - 1);
						DeletePVar(playerid, "is_plane");
					}
					p_info[playerid][pCash] += 10000;
					UpdateMoney(playerid);
					TransferMoney(playerid,p_info[playerid][pCash]+10000,10000,"Продажа самолета");
					SCM(playerid, CGREEN, "Вы успешно продали свой авиа-транспорт");
					p_info[playerid][p_plane] = 0;
				}
			}
		}*/
  /*case 991:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pPayDayHad] < 10) return SendErr(playerid, "Сперва отыграйте 10-ть часов");
					if(p_info[playerid][p_boat] != 0) return SendErr(playerid, "У вас уже есть лодка");
					SetPVarInt(playerid, "AutoShop", 6);
					SetPVarInt(playerid, "CarShop", 6);
					ShowBuyCar(playerid);
				}
				case 1:
				{
					if(GetPVarInt(playerid, "is_boat") - 1 != 0)
					{
						DestroyVehicleOP(GetPVarInt(playerid, "is_boat") - 1);
						DeletePVar(playerid, "is_boat");
					}
					if(p_info[playerid][pPayDayHad] < 10) return SendErr(playerid, "Сперва отыграйте 10-ть часов");
					if(p_info[playerid][pCash] < 10000) return SendErr(playerid, "У Вас не достаточно денег");
					if(p_info[playerid][p_boat] == 0) return SendErr(playerid, "У вас нет лодки");
					if(GetPVarInt(playerid, "is_boat") - 1 == 0) return SCM ( playerid, CWHITE, "• {AC0000}[Ошибка] {"#cWHITE"}Лодка уже доставлена");
					new randomboat = 1 + random(3);
					switch(randomboat)
					{
						case 1:
						{
							new boat_id = CreateVehicleOP(p_info[playerid][p_boat], 336.0136,-1918.4197,-0.1770,187.0951, p_info[playerid][p_boat_color][0], p_info[playerid][p_boat_color][1], 7200);
							SetPVarInt(playerid, "is_boat", boat_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						case 2:
						{
							new boat_id = CreateVehicleOP(p_info[playerid][p_boat], 287.0001,-1914.0066,-0.1508,187.0951, p_info[playerid][p_boat_color][0], p_info[playerid][p_boat_color][1], 7200);
							SetPVarInt(playerid, "is_boat", boat_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						case 3:
						{
							new boat_id = CreateVehicleOP(p_info[playerid][p_boat], 199.4813,-1912.4694,-0.3040,187.0951, p_info[playerid][p_boat_color][0], p_info[playerid][p_boat_color][1], 7200);
							SetPVarInt(playerid, "is_boat", boat_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
						default:
						{
							new boat_id = CreateVehicleOP(p_info[playerid][p_boat], 199.4813,-1912.4694,-0.3040,187.0951, p_info[playerid][p_boat_color][0], p_info[playerid][p_boat_color][1], 7200);
							SetPVarInt(playerid, "is_boat", boat_id + 1);
							p_info[playerid][pCash] -= 10000;
							UpdateMoney(playerid);
						}
					}
					TransferMoney(playerid,p_info[playerid][pCash]-10000,10000,"Покупка лодки");
					print("create boat");
				}
				case 2:
				{
					if(p_info[playerid][p_boat] == 0) return SendErr(playerid, "У вас нет лодки");
					if(GetPVarInt(playerid, "is_boat") - 1 != 0)
					{
						DestroyVehicleOP(GetPVarInt(playerid, "is_boat") - 1);
						DeletePVar(playerid, "is_boat");
					}
					p_info[playerid][pCash] += 10000;
					UpdateMoney(playerid);
					TransferMoney(playerid,p_info[playerid][pCash]+10000,10000,"Продажа лодки");
					SCM(playerid, CGREEN, "Вы успешно продали свою лодку");
					p_info[playerid][p_boat] = 0;
				}
			}
		}*/
		case 989:
		{
			if(!response) return 1;
			if(p_info[playerid][pCash] < 10000) return SendErr(playerid, "У Вас не достаточно денег");
			if(PlayerCar[playerid][listitem] == 462 || PlayerCar[playerid][listitem] == 0) return SendErr(playerid, "У Вас нет этого автомобиля");
			p_info[playerid][pCash] -= 10000;
			TransferMoney(playerid,p_info[playerid][pCash]-10000,10000,"Покупка номера на машину");
			p_info[playerid][p_veh_number][listitem] = last_veh_number + 1;
			last_veh_number ++;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 120, "UPDATE `accounts` SET `last_veh_number` = '%d' WHERE `ID` = '%d'", last_veh_number, p_info[playerid][pID]);
			mysql_pquery(connects, mysql_query_string, "", "");

			UpdatePlayerData(playerid, "p_veh_number0", p_info[playerid][p_veh_number][0]);
			UpdatePlayerData(playerid, "p_veh_number1", p_info[playerid][p_veh_number][1]);

			SCM(playerid, CWHITE, "Вы успешно установили номер на автомобиль! (/fixcar)");
		}
		case 1500:
		{
			if(!response) return 1;
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pCash] < 1000) return SendErr(playerid, "У вас не достаточно денег");
					SetPVarInt(playerid,"ChooseStyle",1);
					SetPVarInt(playerid,"StartTraining",1);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
					p_info[playerid][pCash] -= 1000;
					Business[bizid][Bank] += 1000;
					AddMafiaBank(bizid, 1000);
					UpdateOtherBusiness(bizid);
					TransferMoney(playerid,p_info[playerid][pCash]-1000,1000,"Спортивный Зал");
					UpdateMoney(playerid);
				}
				case 1:
				{
					if(p_info[playerid][pCash] < 1000) return SendErr(playerid, "У вас не достаточно денег");
					SetPVarInt(playerid,"ChooseStyle",2);
					SetPVarInt(playerid,"StartTraining",1);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
					p_info[playerid][pCash] -= 1000;
					Business[bizid][Bank] += 1000;
					AddMafiaBank(bizid, 1000);
					UpdateOtherBusiness(bizid);
					TransferMoney(playerid,p_info[playerid][pCash]-1000,1000,"Спортивный Зал");
					UpdateMoney(playerid);
				}
				case 2:
				{
					if(p_info[playerid][pCash] < 5000) return SendErr(playerid, "У вас не достаточно денег");
					SCM(playerid, 0x6ab1ffaa, "Чтобы использовать тренажёры: {"#cWHITE"}Нажимайте: ЛКМ или ПРОБЕЛ. (По умолчанию)");
					SetPVarInt(playerid,"StartTraining",1);
					p_info[playerid][pCash] -= 5000;
					Business[bizid][Bank] += 5000;
					AddMafiaBank(bizid, 5000);
					UpdateOtherBusiness(bizid);
					TransferMoney(playerid,p_info[playerid][pCash]-5000,5000,"Спортивный Зал");
					UpdateMoney(playerid);
				}
			}
		}
		case 238:
		{
			if(!response) return 1;
			TogglePlayerSpectating(playerid,false);
			SpawnPlayer(playerid);
			return 1;
		}
		case dBuyCarSalon:
		{
			if ( !response ) return 1;
			ShowBuyCar(playerid);
			return 1;
		}
		case 23325:
		{
			if(listitem < 0 || listitem >= MAX_PLAYER_CAR) return 1;
			if(IsSellsCar(playerid, listitem + 1) != -1) return SendClientMessage(playerid,COLOR_GREY,"Недоступно. Данный автомобиль продается");
			new model = -1;
			switch(GetPVarInt(playerid,"AutoShop"))
			{
				case 1: model = class_economy[GetPVarInt(playerid, "SelectAvto")];
				case 2: model = class_standart[GetPVarInt(playerid, "SelectAvto")];
				case 3: model = class_sport[GetPVarInt(playerid, "SelectAvto")];
				case 4: model = class_moto[GetPVarInt(playerid, "SelectAvto")];
			}
			if ( model == -1 ) return 0;
			PlayerCar[playerid][listitem] = gTransport[model][trModel];
			UpdatePlayerData(playerid, (listitem == 0) ? ("pCar") : ("pCar2"), PlayerCar[playerid][listitem]);
			gPlayerTuning[playerid][listitem][1] = GetPVarInt(playerid,"BuyColor");
			UpdateTuning(playerid, listitem + 1);
			ExitCar(playerid);
			return 1;
		}
		case 232:
		{
			if(!response) return 1;
			new recon_id;
			if(sscanf(inputtext,"i",recon_id)) return ShowPlayerDialog(playerid,232,DIALOG_STYLE_INPUT,"Change","'	Используйте ид игрока	'","Далее","Отмена");
			pc_cmd_re(playerid,IntToStr(recon_id));
		}
		case 233:
		{
			if(!response) return 1;
			new WarnID, Days,Reason[64];
			if(sscanf(inputtext, "p<,>is[64]",Days,Reason)) return ShowPlayerDialog(playerid,233,DIALOG_STYLE_INPUT,"Warn","'	Используйте дни и причину (через запятую)	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %d %s", WarnID,Days,Reason);
			pc_cmd_warn(playerid,recon_send_data);
		}
		case 239:
		{
			if(!response) return 1;
			new WarnID, Days,Reason[64];
			if(sscanf(inputtext, "p<,>is[64]",Days,Reason)) return ShowPlayerDialog(playerid,239,DIALOG_STYLE_INPUT,"Тюрьма","'	Используйте время и причину присона (через запятую)	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %d %s", WarnID,Days,Reason);
			pc_cmd_prison(playerid,recon_send_data);
		}
		case 234:
		{
			if(!response) return 1;
			new WarnID, Reason[64];
			if(sscanf(inputtext, "s[64]",Reason)) return ShowPlayerDialog(playerid,234,DIALOG_STYLE_INPUT,"Kick","'	Используйте причину кика	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %s", WarnID,Reason);
			pc_cmd_kick(playerid,recon_send_data);
		}
		case 235:
		{
			if(!response) return 1;
			new WarnID, Days,Reason[64];
			if(sscanf(inputtext, "p<,>is[64]",Days,Reason)) return ShowPlayerDialog(playerid,235,DIALOG_STYLE_INPUT,"Ban","'	Используйте дни и причину бана (через запятую)	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %d %s", WarnID,Days,Reason);
			pc_cmd_ban(playerid,recon_send_data);
		}
		case 236:
		{
			if(!response) return 1;
			new WarnID, Days,Reason[64];
			if(sscanf(inputtext, "p<,>is[64]",Days,Reason)) return ShowPlayerDialog(playerid,236,DIALOG_STYLE_INPUT,"SBan","'	Используйте дни и причину бана (через запятую)	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %d %s", WarnID,Days,Reason);
			pc_cmd_sban(playerid,recon_send_data);
			return 1;
		}
		case 237:
		{
			if(!response) return 1;
			new WarnID,Reason[64];
			if(sscanf(inputtext, "s[64]",Reason)) return ShowPlayerDialog(playerid,237,DIALOG_STYLE_INPUT,"IBan","'	Используйте причину бана	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %s", WarnID,Reason);
			pc_cmd_iban(playerid,recon_send_data);
		}
		case 240:
		{
			if(!response) return 1;
			new WarnID, Days,Reason[64];
			if(sscanf(inputtext, "p<,>is[64]",Days,Reason)) return ShowPlayerDialog(playerid,240,DIALOG_STYLE_INPUT,"Mute","'	Используйте время и причину мута (через запятую)	'","Далее","Отмена");
			WarnID = GetPVarInt(playerid,"r_specid");
			format(recon_send_data,150,"%d %d %s", WarnID,Days,Reason);
			pc_cmd_mute(playerid,recon_send_data);
		}
		case 2324:
		{
			if(!response) return 1;
			new model = -1;
			switch(GetPVarInt(playerid,"AutoShop"))
			{
				case 1: model = class_economy[GetPVarInt(playerid, "SelectAvto")];
				case 2: model = class_standart[GetPVarInt(playerid, "SelectAvto")];
				case 3: model = class_sport[GetPVarInt(playerid, "SelectAvto")];
				case 4: model = class_moto[GetPVarInt(playerid, "SelectAvto")];
			}
			if ( model == -1 ) return 0;
			if(p_info[playerid][pCash] < gTransport[model][trPrice]) return SendErr(playerid,"У не достаточно денег");
			TransferMoney(playerid,p_info[playerid][pCash]-gTransport[model][trPrice],gTransport[model][trPrice],"купил машину");
			p_info[playerid][pCash] -= gTransport[model][trPrice];
			UpdateMoney(playerid);
			stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
			for(new i = 0; i < MAX_PLAYER_CAR; i++)
			{
				format(stringer, 100, "%sМашина %i\n", stringer,i+1);
			}
			ShowPlayerDialog(playerid,23325,DIALOG_STYLE_LIST,"{"#cINFO"}Выберите номер машины",stringer,"Выбрать","Отмена");
			return 1;
		}
		case 2425:
		{
			if(!response) return 1;
			ExitCar(playerid);
			return 1;
		}
		case 2426:
		{
			if(!response) return  SelectTextDraw(playerid, 0x0080FFFF);
			ExitCar(playerid);
			return 1;
		}
		case 3340:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return 1;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 74, "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", strlen(inputtext));
			mysql_pquery(connects, mysql_query_string, "Moderator", "isi",playerid,strlen(inputtext),1);
		}
		case 6565:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, 6566, DIALOG_STYLE_INPUT, "Редактор", "Используйте ID объекта:", "Готово", "Отмена");
				case 1: SelectObject(playerid);
			}
			return 1;
		}
	case 6566:
		{
			if(response)
			{
				if(!response) return pc_cmd_obj1(playerid);
				new model = strval(inputtext);
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 6566, DIALOG_STYLE_INPUT, "Редактор", "Используйте ID объекта:", "Готово", "Назад");
				if(strlen(inputtext) > 5) return ShowPlayerDialog(playerid, 6566, DIALOG_STYLE_INPUT, "Редактор", "Используйте ID объекта:", "Готово", "Назад");
				new Float:X, Float:Y, Float:Z, Float:A;
				X = p_info[playerid][pX];
				Y = p_info[playerid][pY];
				Z = p_info[playerid][pZ];
				GetPlayerFacingAngle(playerid, A);
				new objectid = CreateDynamicObject(model, 	X + (1.0 * floatsin(-A, degrees)),
															Y + (1.0 * floatcos(-A, degrees)), Z, 0.0, 0.0, 0.0, -1, -1, -1, 200.0, 200.0);
				SetPVarInt(playerid,"SelectedObject",objectid);
				EditDynamicObject(playerid, objectid);
			}
			return 1;
		}
	case 6567:
		{
			if(response)
			{
				EditDynamicObject(playerid, GetPVarInt(playerid, "SelectedObject"));
			}
			else
			{
				if(IsValidDynamicObject(GetPVarInt(playerid, "SelectedObject"))) DestroyDynamicObject(GetPVarInt(playerid, "SelectedObject"));
				SelectObject(playerid);

			}
			return 1;
		}
		case dEditRank:
		{
			if(!response) return 1;
			if(!p_info[playerid][tMember]) return 1;
			ShowPlayerDialog(playerid, dEditRankStep1, DIALOG_STYLE_LIST, ""neworange"Управление рангом", ""nwhite"Изменение названия ранга", "Выбрать", "Отмена");
			SetPVarInt(playerid,"edit_rank",listitem);
			return 1;
		}
		case dEditRankStep1:
		{
			if(!response) return 1;
			if(!p_info[playerid][tMember]) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dEditRankStep2, DIALOG_STYLE_INPUT, ""neworange"Изменение названия ранга", ""nwhite"Используйте название ранга", "Выбрать", "Отмена");
			}
			return 1;
		}
		case dEditRankStep2:
		{
			if(!response) return 1;
			if(!p_info[playerid][tMember]) return 1;
			if(strlen(inputtext) <= 0 || strlen(inputtext) >= 40) return ShowPlayerDialog(playerid, dEditRankStep2, DIALOG_STYLE_INPUT, ""neworange"Изменение названия ранга", ""nwhite"Используйте название ранга", "Выбрать", "Отмена");
			string_replace(inputtext, ''', ' ') ;
			new slot = GetPVarInt(playerid, "edit_rank");

			format ( stringer , 144, " %s изменил ранг #%d на с %s на %s " , NamePlayer[playerid], slot+1,fRankName[p_info[playerid][tMember]-1][slot],inputtext ) ;
			WriteLog ( TYPE_CHANGERANK, stringer , p_info[playerid][tMember] ) ;

			format(stringer,121,"Вы изменили ранг №%d с %s на %s",slot+1,fRankName[p_info[playerid][tMember]-1][slot],inputtext);
			SendSucc(playerid,stringer);

			strmid(fRankName[p_info[playerid][tMember]-1][slot], inputtext, 0, strlen(inputtext));

			mysql_query_string[0] = EOS;
			format(mysql_query_string,147,"UPDATE `fraction_ranks` SET `rang` = '%s' WHERE `fracid` = '%d' AND `numberrank` = '%d'",fRankName[p_info[playerid][tMember]-1][slot],p_info[playerid][tMember]-1,slot);
			mysql_pquery(connects,mysql_query_string);

			return 1;
		}
		case dDutyGun:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:AC_GivePlayerWeapon(playerid, 3, 1),SendClientMessage(playerid,CGREEN,"Вы взяли Дубинку");
				case 1:AC_GivePlayerWeapon(playerid, 24, 100),SendClientMessage(playerid,CGREEN,"Вы взяли Desert Eagle");
				case 2:AC_GivePlayerWeapon(playerid,23,30),SendClientMessage(playerid,CGREEN,"Вы взяли SD Pistol");
				case 3:AC_SetPlayerArmour(playerid, 100),SendClientMessage(playerid,CGREEN,"Вы надели Бронежилет");
				case 4:AC_GivePlayerWeapon(playerid, 29, 150),SendClientMessage(playerid,CGREEN,"Вы взяли MP-5");
				case 5:SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
			}
			ShowPlayerDialog(playerid, dDutyGun, 2, "Оружейная", "Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
			return 1;
		}
		case 9899:
		{
			if(!response) return 1;
			new code = strval(inputtext);
			new houseid = p_info[playerid][pHouse] ;
			if(isNumeric(inputtext) || strlen(inputtext) != 4 || code != gHouses[ houseid ][houseSafeCode]) return SendClientMessage(playerid,COLOR_GREY,"Код введен неверно");
			format(stringer,99,"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
			ShowPlayerDialog(playerid,dSafe,0,"Сейф",stringer,"Далее","Отмена");
		}
		case dSafe:
		{
			if(!response) return 1;
			else ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
		}
		case dSafeAction:
		{
			if(!response)
			{
				new houseid = p_info[playerid][pHouse];
				format(stringer,102,"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000 ${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
				return ShowPlayerDialog(playerid,dSafe,0,"Сейф",stringer,"Далее","Отмена");
			}
			switch(listitem)
			{
				case 0:	ShowPlayerDialog(playerid,dSafePutMoney,1,"Сейф","{"#cWHITE"}Укажите сумму, которую хотите положить в сейф:","Положить","Отмена");
				case 1: ShowPlayerDialog(playerid,dSafeGetMoney,1,"Сейф","{"#cWHITE"}Укажите сумму, которую хотите взять из сейфа:","Взять","Отмена");
				case 2: ShowPlayerDialog(playerid,dSafePutDrug,1,"Сейф","{"#cWHITE"}Укажите к-во наркотиков, которое Вы хотите положить в сейф","Положить","Отмена");
				case 3: ShowPlayerDialog(playerid,dSafeGetDrug,1,"Сейф","{"#cWHITE"}Укажите к-во наркотиков, которое Вы взять из сейфа","Взять","Отмена");
				case 4: ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Используйте новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
		}
		case dSafePutMoney:
		{
			if(!response) return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new money = strval(inputtext);
			if(money < 1 || money > 1000000)
			{
				SendErr(playerid, "Неверная сумма");
				return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			}
			if(p_info[playerid][pCash] < money)
			{
				SendErr(playerid, "У Вас не достаточно денег");
				return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			}
			new houseid = p_info[playerid][pHouse] ;
			if(gHouses[houseid][houseSafeMoney] + money > 1000000)
			{
				SendErr(playerid, "У Вас не достаточно места в сейфе");
				return ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			}

			gHouses[houseid][houseSafeMoney] += money;

			mysql_query_string[0] = EOS;
			format(mysql_query_string,120,"UPDATE `housetest` SET `safemoney` = '%d' WHERE `hID` = '%d'",gHouses[houseid][houseSafeMoney], gHouses[houseid][hID] );
			mysql_pquery(connects,mysql_query_string);

			p_info[playerid][pCash] -= money;
			UpdateMoney(playerid);
			MeAction(playerid,"положил(а) деньги в сейф");
			TransferMoney(playerid,p_info[playerid][pCash]-money,money,"положил деньгу в сейф");
			ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
		}
		case dSafeGetMoney:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new money = strval(inputtext);
			new houseid = p_info[playerid][pHouse];
			if(money < 1 || money > 1000000) SendClientMessage(playerid,COLOR_GREY,"Сумма должна быть от 1 до 1000000");
			else if(money > gHouses[houseid][houseSafeMoney]) SendClientMessage(playerid,COLOR_GREY,"У Вас не достаточно денег в сейфе");
			else
			{
				gHouses[houseid][houseSafeMoney] -= money;
				mysql_query_string[0] = EOS;
				format(mysql_query_string,120,"UPDATE `housetest` SET `safemoney` = '%d' WHERE `hID` = '%d'",gHouses[houseid][houseSafeMoney],gHouses[houseid][hID]);
				mysql_pquery(connects,mysql_query_string);
				p_info[playerid][pCash] += money;
				UpdateMoney(playerid);
				MeAction(playerid,"взял(а) деньги из сейфа");
				TransferMoney(playerid,p_info[playerid][pCash]+money,money,"взял деньгу из сейфа");
			}
			ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
		}
		case dSafePutDrug:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new drug = strval(inputtext);
			new houseid = p_info[playerid][pHouse];
			if(drug < 1 || drug > 2000) SendClientMessage(playerid,COLOR_GREY,"Вы не можете положить меньше 1 и больше 2000 г. наркотиков в сейф");
			else if(p_info[playerid][pDrugs] < drug) SendClientMessage(playerid,COLOR_GREY,"У Вас не достаточно наркотиков");
			else if(gHouses[houseid][houseDrugs] + drug > 2000) SendClientMessage(playerid,COLOR_GREY,"Не достаточно места в сейфе");
			else
			{
				gHouses[houseid][houseDrugs] += drug;

				mysql_query_string[0] = EOS;
				format(mysql_query_string,120,"UPDATE `housetest` SET `drugs` = '%d' WHERE `hID` = '%d'",gHouses[houseid][houseDrugs],gHouses[houseid][hID]);
				mysql_pquery(connects,mysql_query_string);

				p_info[playerid][pDrugs] -= drug;
				UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
				MeAction(playerid,"положил(а) наркотики в сейф");
			}
		}
		case dSafeGetDrug:
		{
			if(!response) ShowPlayerDialog(playerid,dSafeAction,2,"Сейф","Положить деньги\nВзять деньги\nПоложить наркотики\nВзять наркотики\nСменить код","ОК","Отмена");
			new drug = strval(inputtext);
			new houseid = p_info[playerid][pHouse];
			if(drug < 1 || drug > 2000) SendClientMessage(playerid,COLOR_GREY,"Вы не можете взять меньше 1 и больше 2000 г. наркотиков в сейф");
			else if(gHouses[houseid][houseDrugs] < drug) SendClientMessage(playerid,COLOR_GREY,"У Вас не достаточно наркотиков в сейфе");
			else
			{
				gHouses[houseid][houseDrugs] -= drug;

				mysql_query_string[0] = EOS;
				format(mysql_query_string,120,"UPDATE `housetest` SET `drugs` = '%d' WHERE `hID` = '%d'",gHouses[houseid][houseDrugs],gHouses[houseid][hID]);
				mysql_pquery(connects,mysql_query_string);

				p_info[playerid][pDrugs] += drug;
				UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
				MeAction(playerid,"взял(а) наркотики из сейфа");
			}
		}
		case dSafeCodeChange:
		{
			if(!response)
			{
				new houseid = p_info[playerid][pHouse];
				format(stringer,90,"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
				return ShowPlayerDialog(playerid,dSafe,0,"Сейф",stringer,"Далее","Отмена");
			}
			if(strlen(inputtext) != 4 || isNumeric(inputtext))
			{
				SendClientMessage(playerid,COLOR_GREY,"Код должен состоять из 4-х цифр");
				return ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Используйте новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
			new code = strval(inputtext);
			SetPVarInt(playerid,"safecode",code);
			ShowPlayerDialog(playerid,dSafeCodeChange2,1,"Сейф","{"#cWHITE"}Используйте новый код еще раз","Изменить","Отмена");
		}
		case dSafeCodeChange2:
		{
			new houseid = p_info[playerid][pHouse];
			if(!response)
			{
				format(stringer,90,"{"#cWHITE"}Наркотики [{"#cGREEN"}%d/10000{"#cWHITE"}]\nДеньги [{"#cGREEN"}%d$/1000000${"#cWHITE"}]",gHouses[houseid][houseDrugs],gHouses[houseid][houseSafeMoney]);
				return ShowPlayerDialog(playerid,dSafe,0,"Сейф",stringer,"Далее","Отмена");
			}
			if(strlen(inputtext) != 4 || isNumeric(inputtext))
			{
				SendClientMessage(playerid,COLOR_GREY,"Код должен состоять из 4-х цифр");
				return ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Используйте новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
			new code = strval(inputtext);
			if(code != GetPVarInt(playerid,"safecode"))
			{
				SendClientMessage(playerid,COLOR_GREY,"Коды не совпадают");
				return ShowPlayerDialog(playerid,dSafeCodeChange,1,"Сейф","{"#cWHITE"}Используйте новый код от сейфа в формате \"{"#cRED"}XXXX{"#cWHITE"}\"","Изменить","Отмена");
			}
			gHouses[houseid][houseSafeCode] = code;
			mysql_query_string[0] = EOS;
			format(mysql_query_string,79,"UPDATE `housetest` SET `safecode` = '%d' WHERE `hID` = '%d'",code,gHouses[houseid][hID]);
			mysql_pquery(connects,mysql_query_string);
			format(stringer,48,"Ваш новый код сейфа: %s. Не забудьте его!",inputtext);
			SendClientMessage(playerid,CGREEN,stringer);
		}
		case dWashRoom:
		{
			if(!response) return 1;
			AC_SetPlayerPos(playerid,210.0022,443.1751,2220.2769);
			SetPlayerFacingAngle(playerid,162.7688);
			AC_TogglePlayerControllable(playerid,0);
			SetPlayerCameraPos(playerid, 213.7358,439.9858,2220.2769);
			SetPlayerCameraLookAt(playerid, 214.7818,442.2412,2220.2769);
			SendClientMessage(playerid,CGREEN,"Вы начали принимать душ");
			SetTimerEx("EndWashRoom",30000,0,"i",playerid);
		}
		case dGoTazer:
		{
			if ( !response ) return 1;
			for(new i; i <= 11; i++)
			{
				new gunid, ammo, storeslot = -1;
				GetPlayerWeaponData(playerid, i, gunid,ammo);

				new gun_text[32];
				GetWeaponName(gunid,gun_text,32);

				switch (gunid)
				{
					case 23 , 24 , 30 , 31 : if ( strfind(inputtext,gun_text) != -1 ) storeslot ++;
				}

				if(!gunid || !ammo || storeslot == -1) continue;

				if ( storeslot != -1 )
				{
					format ( stringer , 200 , "[ ! ] {"#cWHITE"}Вы зарядили {AFAFAF}%s {"#cWHITE"}на 2 парализующих патрона . При выстреле человек будет оглушен " , gun_text  ) ;
					SendClientMessage ( playerid , CNGREEN , stringer ) ;

					format ( stringer, 128 , "заряжает %s парализующими патронами" , gun_text ) ;
					MeAction ( playerid , stringer ) ;

					SetPVarInt ( playerid, "tazershoot", 2 ) ;
					SetPVarInt ( playerid , "tazergun", gunid ) ;

					break;
				}
			}


			return 1;
		}
		case dStore:
		{
			if(!response) return 1;
			new houseid = p_info[playerid][pHouse];
			new klass = gHouses[houseid][hKlass]-1;
			switch(listitem)
			{
				case 0:
				{
					for(new id;id<9;id++)
					{
						if(gHouses[houseid][houseGun][id] > 0)
						{
							new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
							GetPlayerCameraPos(playerid,x,y,z);
							SetPVarFloat(playerid,"oldcx",x);
							SetPVarFloat(playerid,"oldcy",y);
							SetPVarFloat(playerid,"oldcz",z);
							//
							x2=0.7*floatsin(gHouseImproveItem[1][klass][7],degrees) + gHouseStoreItemPos_Gun[klass][id][0];
							y2=-0.7*floatcos(gHouseImproveItem[1][klass][7],degrees) + gHouseStoreItemPos_Gun[klass][id][1];
							z2=gHouseStoreItemPos_Gun[klass][id][2] + 0.4;
							//
							InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
							GetPlayerCameraFrontVector(playerid,x2,y2,z2);
							InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,gHouseStoreItemPos_Gun[klass][id][0],gHouseStoreItemPos_Gun[klass][id][1],gHouseStoreItemPos_Gun[klass][id][2],700,CAMERA_MOVE);

							SendClientMessage(playerid,CWHITE,"Используйте клавиши {"#cGREEN"}влево{"#cWHITE"} и {"#cGREEN"}вправо{"#cWHITE"} для выбора оружия");
							SendClientMessage(playerid,CWHITE,"Используйте клавишу {"#cGREEN"}входа / Выхода из транспорта{"#cWHITE"} для Выхода");
							SendClientMessage(playerid,CWHITE,"Используйте клавишу {"#cGREEN"}быстрого бега{"#cWHITE"} для подтверждения");

							new gunname[32];
							GetWeaponName(GetStoreGunID(id),gunname,32);
							format(stringer,48,"~w~%s (~g~%d~w~)",gunname,gHouses[houseid][houseGun][id]);
							GameTextForPlayer(playerid,stringer,100000,3);

							pStoreGun[playerid]=id;
							pSelectStoreGun[playerid]=false;
							SetTimerEx("SelectStoreGun",500,0,"i",playerid);
							AC_TogglePlayerControllable(playerid,0);
							return 1;
						}
					}
					return SendClientMessage(playerid,COLOR_GREY,"У Вас нет оружия в шкафу");
				}
				case 1: ShowGunList(playerid);
				case 2:
				{
					stringer[0] = EOS;
					new cnt;
					for(new i;i<3;i++)
					{
						if(gHouses[houseid][houseSkin][i] > 0)
						{
							format(stringer,40,"%sОдежда %d\n",stringer,i+1);
							cnt++;
						}

					}
					if(!cnt)
					{
						SendClientMessage(playerid,COLOR_GREY,"Нет одежды в шкафу");
						return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
					}
					else if(p_info[playerid][tMember] > 0)
					{
						strcat(stringer,"Фракционная одежда");
					}
					ShowPlayerDialog(playerid,dStoreSkin,2,"Шкаф",stringer,"Одеть","Отмена");
				}
				case 3:
				{
					stringer[0] = EOS;
					new cnt;
					for(new i;i<3;i++)
					{
						if(gHouses[houseid][houseSkin][i])
						{
							format(stringer,40,"%sОдежда %d\n",stringer,i+1);
							cnt++;
						}

					}
					if(!cnt)
					{
						SendClientMessage(playerid,COLOR_GREY,"Нет одежды в шкафу");
						return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
					}
					ShowPlayerDialog(playerid,dStoreSkinDelete,2,"Шкаф",stringer,"Удалить","Отмена");
				}
			}
			return 1;
		}
		case dStoreSkinDelete:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			new houseid = p_info[playerid][pHouse];
			for(new i;i<3;i++)
			{
				if(gHouses[houseid][houseSkin][i] && listitem == i)
				{
					gHouses[houseid][houseSkin][i] = 0;

					break;
				}
			}
			SaveHouseSkin(houseid);
			UpdateHouseDress(houseid);
			new cnt;
			stringer[0] = EOS;
			for(new i;i<3;i++)
			{
				if(gHouses[houseid][houseSkin][i])
				{
					format(stringer,40,"%sОдежда %d\n",stringer,i+1);
					cnt++;
				}

			}
			if(!cnt)
			{
				SendClientMessage(playerid,COLOR_GREY,"Нет одежды в шкафу");
				return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			}
			ShowPlayerDialog(playerid,dStoreSkinDelete,2,"Шкаф",stringer,"Удалить","Отмена");
		}
		case dStoreSkin:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			new skin = -1;
			new houseid = p_info[playerid][pHouse];
			if(!strcmp(inputtext,"Фракционная одежда",false))
			{
				skin = p_info[playerid][pModel];
				SetPlayerColorAc(playerid, p_info[playerid][tMember]);
			}
			else
			{
				//print ( "for store" ) ;

				SetPlayerColor(playerid,0xffffff11);
				for(new i;i<3;i++)
				{
					if(gHouses[houseid][houseSkin][i] > 0 && listitem == i)
					{
						p_info[playerid][pModel]=skin;
						p_info[playerid][pChar]=skin;
						skin = gHouses[houseid][houseSkin][i];

						break;
					}
				}
			//	SetPVarInt(playerid,"odetcol",1);
			//	pData[playerid][pSkin] = skin;
			//	UpdatePlayerData(playerid, "skin", skin);
			}
			if(skin > 0)
			{
				p_info[playerid][pModel]=skin;
				p_info[playerid][pChar]=skin;
				SetPlayerSkin(playerid,skin);
				MeAction(playerid,"переоделся(ась)");
			}
			else SendClientMessage(playerid,COLOR_GREY,"Полка пуста.");
			stringer[0] = EOS;
			new cnt;
			//print ( "for store 2" ) ;
			for(new i;i<3;i++)
			{
				if(gHouses[houseid][houseSkin][i])
				{
					format(stringer,40,"%sОдежда %d\n",stringer,i+1);
					cnt++;
				}

			}
			if(!cnt)
			{
				SendClientMessage(playerid,COLOR_GREY,"Нет одежды в шкафу");
				return ShowPlayerDialog(playerid,dStore,2,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			}
			else if(p_info[playerid][tMember] > 0)
			{
				strcat(stringer,"Фракционная одежда");
			}
			ShowPlayerDialog(playerid,dStoreSkin,2,"Шкаф",stringer,"Одеть","Отмена");
		}
		case dStorePut:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,DIALOG_STYLE_LIST,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			new cnt;
			new houseid = p_info[playerid][pHouse];
			//print ( "for store 3" ) ;
			for(new i;i<=11;i++)
			{
				new gunid,ammo,storeslot;
				GetPlayerWeaponData(playerid,i,gunid,ammo);
				storeslot = GetStoreGunSlot(gunid);
				if(!gunid || storeslot == -1 || ammo <= 0) continue;
				else if(listitem == cnt)
				{
					new cnt2;
					for(new i2;i2<9;i2++) if(gHouses[houseid][houseGun][i2] > 0 && storeslot != i2) cnt2++;
					if(cnt2 >= 9)
					{
						SendClientMessage(playerid,COLOR_GREY,"Вы не можете хранить больше 9-х видов оружия в шкафу");
						return ShowPlayerDialog(playerid,dStore,DIALOG_STYLE_LIST,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
					}
					if(gHouses[houseid][houseGun][storeslot] + ammo > 10000) return SendClientMessage(playerid,CWHITE,"У Вас в шкафу максимальное к-во патронов данного оружия");
					gHouses[houseid][houseGun][storeslot] += ammo;
					SaveHouseGun(houseid);
					Streamer_Update(playerid);
					UpdateHouseGun(houseid);
					SetPlayerAmmo(playerid,gunid,0);
					//ResetPlayerWeaponsEx(playerid,gunid);
					MeAction(playerid,"положил(а) оружие в шкаф");
					SendClientMessage(playerid,CGREEN,"Вы положили оружие в шкаф");
					SetTimerEx("ShowGunList",500,0,"i",playerid);
					break;
				}
				cnt++;
			}
			return 1;
		}
		case dStoreGet:
		{
			if(!response) return ShowPlayerDialog(playerid,dStore,DIALOG_STYLE_LIST,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			new ammo = strval(inputtext);
			new storeslot = pStoreGun[playerid];
			new houseid = p_info[playerid][pHouse];
			new gunname[32];
			GetWeaponName(gHintGunID[storeslot],gunname,32);
			if(ammo < 1)
			{
				format(stringer,102,"{"#cWHITE"}Укажите сколько патронов{"#cGREEN"}%s{"#cWHITE"} Вы хотите взять:",gunname);
				ShowPlayerDialog(playerid,dStoreGet,1,"Шкаф",stringer,"Взять","Отмена");
				return SendClientMessage(playerid,COLOR_GREY,"Нельзя брать меньше 1 патрона");
			}
			if(ammo > gHouses[houseid][houseGun][storeslot])
			{
				format(stringer,102,"{"#cWHITE"}Укажите сколько патронов{"#cGREEN"}%s{"#cWHITE"} Вы хотите взять:",gunname);
				ShowPlayerDialog(playerid,dStoreGet,1,"Шкаф",stringer,"Взять","Отмена");
				return SendClientMessage(playerid,COLOR_GREY,"Не достаточно патронов в шкафу");
			}
			gHouses[houseid][houseGun][storeslot] -= ammo;
			SaveHouseGun(houseid);
			//SaveStoreGun(houseid);
			Streamer_Update(playerid);
			UpdateHouseGun(houseid);
			AC_GivePlayerWeapon(playerid,GetStoreGunID(storeslot),ammo);
			GameTextForPlayer(playerid," ",100,3);
			MeAction(playerid,"взял(а) оружие и патроны из шкафа");
			new Float:x, Float:y, Float:z, Float:x1, Float:y1, Float:z1;
			x = GetPVarFloat(playerid,"oldcx");
			y = GetPVarFloat(playerid,"oldcy");
			z = GetPVarFloat(playerid,"oldcz");
			GetPlayerCameraPos(playerid,x1,y1,z1);
			InterpolateCameraPos(playerid,x1,y1,z1,x,y,z,700,CAMERA_MOVE);
			SetTimerEx("SetCameraBehindPlayerDelay",1000,0,"i",playerid);
			pSelectStoreGun[playerid]=false;
			pStoreGun[playerid]=0;
			GameTextForPlayer(playerid," ",100,3);
			AC_TogglePlayerControllable(playerid,1);
			return 1;
		}
		case dStorePutGun:
		{
			if(!response) return 1;
			new gun_text[10];
			switch(listitem)
			{
				case 0: gun_text = "SD Pistol";
				case 1: gun_text = "Deagle";
				case 2: gun_text = "Shotgun";
				case 3: gun_text = "SMG";
				case 4: gun_text = "AK-47";
				case 5: gun_text = "M4";
				case 6: gun_text = "Rifle";
			}
			SetPVarInt(playerid, "StorePutGun",listitem);
			format(stringer,84,"{"#cWHITE"}Укажите сколько патронов {"#cGREEN"}%s{"#cWHITE"} вы хотите положить:",gun_text);
			ShowPlayerDialog(playerid,dStorePut,DIALOG_STYLE_INPUT,"Шкаф",stringer,"Положить","Отмена");
		}
		case dPolice:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid, "ODEL_0") == 1)
					{
						RemovePlayerAttachedObject(playerid,0);
						RemovePlayerAttachedObject(playerid,1);
						SetPVarInt(playerid,"ODEL_0", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 0, 18641, 6, 0.083000, 0.037999, 0.053999, -166.600021, 0.000000, -1.899999, 1.000000, 1.000000, 1.000000, 0, 0);
						SetPlayerAttachedObject(playerid, 1, 18656, 6, 0.079999, 0.060999, 0.092000, 103.300025, 3.300000, 2.500002, 0.047000, 0.039000, 0.038000, 0, 0);
						SetPVarInt(playerid,"ODEL_0", 1);
					}
				}
				case 1:
				{
					if(GetPVarInt(playerid, "ODEL_1") == 1)
					{
						RemovePlayerAttachedObject(playerid,2);
						SetPVarInt(playerid,"ODEL_1", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 2, 19347, 1, 0.242000, 0.132000, 0.053999, -78.299949, 26.299999, -132.599975, 1.000000, 1.000000, 1.000000, 0, 0);
						SetPVarInt(playerid,"ODEL_1", 1);
					}
				}
				case 2:
				{
					if(GetPVarInt(playerid, "ODEL_2") == 1)
					{
						RemovePlayerAttachedObject(playerid,3);
						SetPVarInt(playerid,"ODEL_2", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 3, 18636, 2, 0.142000, 0.039000, -0.004999, 24.300001, 94.500007, 60.500003, 1.000000, 1.000000, 1.000000, 0, 0);
						SetPVarInt(playerid,"ODEL_2", 1);
					}
				}
				case 3:
				{
					if(GetPVarInt(playerid, "ODEL_3") == 1)
					{
						RemovePlayerAttachedObject(playerid,4);
						SetPVarInt(playerid,"ODEL_3", 0);
					}
					else
					{
						SetPlayerAttachedObject(playerid, 4, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
						AC_SetPlayerHealth(playerid, 100);
						SetPVarInt(playerid,"ODEL_3", 1);
					}
				}
			}
			stringer[0] = EOS;
			format(stringer,182,"{"#cWHITE"}Фонарик\t%s\nЗначек полицейского\t%s\nКепка\t%s\nЩит\t%s\n",
			GetPVarInt(playerid, "ODEL_0") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"),GetPVarInt(playerid, "ODEL_1") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"),
			GetPVarInt(playerid, "ODEL_2") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"),GetPVarInt(playerid, "ODEL_3") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"));
			ShowPlayerDialog(playerid, dPolice, DIALOG_STYLE_TABLIST, "{"#cINFO"}Экипировка",stringer, "Одеть", "Отмена");
			return 1;
		}
		case dBuySkin:
		{
			if(!response) return 1;
			new houseid = p_info[playerid][pHouse];
			new slot=-1;
			new skin = gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinID];
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			//print ( "for dBuySkin" ) ;
			for(new i;i<3;i++)
			{
				if(skin == gHouses[houseid][houseSkin][i]) return SendClientMessage(playerid,COLOR_GREY,"У Вас уже есть эта одежда в шкафу");
				if(!gHouses[houseid][houseSkin][i]) {slot = i; break;}
			}
			if(slot == -1) return SendErr(playerid, "У вас не достаточно места в шкафу");
			TransferMoney(playerid,p_info[playerid][pCash]-gSkins[slot][skinPrice],gSkins[slot][skinPrice],"купил одежду в магазине одежды");
			p_info[playerid][pCash] -= gSkins[slot][skinPrice];
			UpdateMoney(playerid);
		   	TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
			GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
		    p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
			Business[bizid][Bank] += gSkins[slot][skinPrice];
			AddMafiaBank(bizid, gSkins[slot][skinPrice]);
			gHouses[houseid][houseSkin][slot]=skin;
			SaveHouseSkin(houseid);
			UpdateHouseDress(houseid);
			SendClientMessage(playerid,CGREEN,"Одежда была доставлена в ваш шкаф");
			AC_TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"OldWorld"));
			SetPlayerSkin(playerid, GetPVarInt(playerid,"OldSkin"));
			SetPVarInt(playerid,"CloserInClothes", true);
			CancelSelectTextDraw(playerid);
			for(new i=0; i<5; i++)
			{
				if(gSkinShopDraw[i]==Text:-1) continue;
				TextDrawHideForPlayer(playerid,Text:gSkinShopDraw[i]);
			}
			if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
			{
				PlayerTextDrawHide(playerid,gSkinShopPriceDraw[playerid]);
			}
			DeletePVar(playerid,"PlayerSkinSlot");
			DeletePVar(playerid,"PlayerInClothes");
			DeletePVar(playerid,"OldWorld");
			DeletePVar(playerid,"OldSkin");
			return 1;
		}
		case dBizList:
		{
			//print ( "for dBizList" ) ;
			if(!response) return 1;
			new fracid = -1;
			new count_business = 1;
			switch(p_info[playerid][tMember])
			{
				case F_LCN:fracid = BANK_LCN;
				case F_YAKYZA:fracid = BANK_YAKUZA;
				case F_RM:fracid = BANK_RM;
			}
			stringer = "{"#cWHITE"}№. Название + Доход бизнеса за сегодня\n\n";
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][Mafia] != p_info[playerid][tMember]) continue;
				if(fracid != -1)
				{
					if(count_business <= 50)
					{
						count_business++;
						continue;
					}
					format(stringer, 5000, "%s%i. %s + {77FF1B}$%d{"#cWHITE"}\n",stringer, count_business, Business[i][BizName], gBankMafia[fracid][i]);
					count_business++;
				}
			}
			ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{"#cWHITE"}Бизнесы мафии", stringer, "Закрыть", "");
			return 1;
		}
		case 17504:
		{
			if(!response) return 1;

			if(strfind(inputtext, "http", true) == -1) return ShowPlayerDialog(playerid,17504,DIALOG_STYLE_INPUT,"{"#cWHITE"}Магнитофон","{"#cWHITE"}Используйте ссылку на поток / песню / радио которое вы хотите воспроизвести","Выбрать", "Закрыть");

			if(PlacedBB[playerid] != INVALID_OBJECT)
			{
				foreach(i)
				{
					if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
					{
						PlayStream(i, (inputtext), GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
					}
				}
				SetPVarString(playerid, "BBStation", (inputtext));
			}
			SendClientMessage(playerid,-1,"Вы поставили песню");
			return 1;
		}
		case dShowAll:
		{
			if(response) return 1;

			mysql_query_string[0] = EOS;
			format(mysql_query_string,200,"SELECT `tName`,`tRank` FROM `accounts` WHERE `tMember` = '%i' ORDER BY `tRank` LIMIT %d, 20", p_info[playerid][tMember],(SALLROWS[playerid] * 20));
			mysql_pquery(connects, mysql_query_string, "showall_callback", "i", playerid ) ;

			return 1;
		}
		/*case d_enter_to_tune:
		{
			print ( "for d_enter_to_tune" ) ;
			if(!response) return true;
			new vehicleid = GetPlayerVehicleID(playerid);
			AC_SetVehiclePos(vehicleid,-82.5608,183.2757,1003.7993);
			AC_SetVehicleZAngle(vehicleid,269.3516);
			AC_SetVehicleVirtualWorld(vehicleid, playerid + 1);
			SendClientMessage(playerid, -1, "Вы заехали в автомастеркую, чтобы выехать обратно нажмите 'H' еще раз");
			TextDrawShowForPlayer(playerid,BackTune[0]);
			TextDrawShowForPlayer(playerid,SupportButton[0]);
			TextDrawShowForPlayer(playerid,SupportButton[1]);

			for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawShowForPlayer(playerid,TuneList[i]);
			ShowTuneList[playerid][0] = true;
			SelectTextDraw(playerid, 0xC7C7C7AA);
			SetCameraBehindPlayer(playerid);

			return true;
		}*/
		case d_sucess_camera_0:
		{
			//print ( "for d_sucess_camera_0" ) ;
			if(!response) return 0;
			for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
			CameraFlag[playerid][0] |= 1 << 0;
			CameraFlag[playerid][0] |= 1 << 1;
			CameraFlag[playerid][0] |= 1 << 2;
			CameraFlag[playerid][0] |= 1 << 3;

			mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "DELETE FROM `cppd` WHERE `step` = '%d' AND `id` = '%d' LIMIT 1", CameraFlag[playerid][3] - 1, p_info[playerid][pID]);
			mysql_pquery(connects, mysql_query_string, "DROP_CCPD", "i", playerid);

			PrintCameraFlag(playerid, 0, "drop");
			PrintCameraFlag(playerid, 3, "drop");

			return_player_pos(playerid);
		}
		case d_sucess_camera_1:
		{
			if(!response) return 0;
			CreateMovePos(playerid, 0);
			step_cppd[playerid] = 1;
			CameraFlag[playerid][0] |= 1 << 2;
			PrintCameraFlag(playerid, 0, "create");
		}
		case d_sucess_camera_2:
		{
			if(!response) return 1;
			step_cppd[playerid] = CameraFlag[playerid][3] + 1;
			CreateMovePos(playerid, CameraFlag[playerid][3]);
			CameraFlag[playerid][0] |= 1 << 2;

			PrintCameraFlag(playerid, 0, "create");
			PrintCameraFlag(playerid, 3, "create");
		}
		case d_sucess_camera_3:
		{
			if(!response) return 1;
			for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
			SavePositionCamera(playerid, step_cppd[playerid] - 1);
			PrintCameraFlag(playerid, 0, "save_camera");
		}
		case d_report:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,d_report2,DIALOG_STYLE_INPUT,"Обратная связь","{ffffff}Хорошо, вы можете указать свои контактные данные\n- ваш ид вконтакте\nskype\nэлектронная почта\n\nчто-нибудь из того что перечислено выше, нам это нужно для уточнения недоработки\nспасибо :)", "Отправить","");
			SetPVarString(playerid,"d_report",inputtext);
			return 1;
		}
		case d_report2:
		{
			if(!response) return 1;
			new text_bugs[150];
			GetPVarString(playerid, "d_report", text_bugs, 150);
			stringer[0] = EOS;
			format(stringer, 1500, "INSERT INTO `bugs`(`date_bug`, `nick_bug`, `number_account_bug`, `ip_bug`, `text_bug`, `vk_or_skype`) VALUES (NOW(),'%s','%d','%s','%s','%s')",NamePlayer[playerid],p_info[playerid][pID],PlayerIp[playerid],text_bugs,inputtext);
			mysql_pquery(connects,stringer);
			SendClientMessage(playerid, 0xF0C419FF, "[ Успешно ] {"#cWHITE"}Спасибо за то что указали баг, в ближайшее время будет исправлено.");
			DeletePVar(playerid,"d_report");
			//print(text_bugs);
			return 1;
		}
		case dRank:
		{
			if(!response) return 1;
			if(listitem == -1) return 1;

			new rank_id = GetPVarInt(playerid,"id_giverank");

			format(stringer,100,"Вы повысили {"#cWHITE"}%s{ffff00} до ранга {"#cWHITE"}%s",NamePlayer[rank_id],GetRank(p_info[playerid][tMember],listitem+1));
			SendClientMessage(playerid,CYELLOW,stringer);

			format(stringer,100,"Вас повысил {"#cWHITE"}%s{ffff00} до ранга {"#cWHITE"}%s",NamePlayer[playerid],GetRank(p_info[playerid][tMember],listitem+1));
			SendClientMessage(rank_id,CYELLOW,stringer);

			format(stringer, 144, "[A] (Обычный игрок) %s повысил %s до ранга %s ( %d ) " , NamePlayer[ playerid ] , NamePlayer [ rank_id ] , GetRank(p_info[playerid][tMember], listitem+1) , listitem+1);
			AdmMes(COLOR_GREY, stringer, 1);

			format ( stringer, 100, " %s повысил %s до ранга %s ( %d ) " , NamePlayer[ playerid ] , NamePlayer [ rank_id ] , GetRank(p_info[playerid][tMember], listitem+1) , listitem+1);
			WriteLog ( TYPE_LOG_GIVE_RANK , stringer , p_info[playerid][tMember] ) ;

			p_info[rank_id][tRank] = listitem + 1;
			UpdatePlayerData(rank_id,"tRank",p_info[rank_id][tRank]);

			DeletePVar(playerid,"id_giverank");
			return 1;
		}
		case dSellPatr:
		{
			if(!response) return 1;
			new put = strval(inputtext);
			if(p_info[playerid][pPatron]>1000) return SendClientMessage(playerid,COLOR_GREY,"У вас больше 1000 патронов, вы не можете унести больше.");
			if(put<1 || put>1000) return ShowPlayerDialog(playerid,dSellPatr,DIALOG_STYLE_INPUT,"{ffff00}Покупка патронов","{"#cWHITE"}Используйте к-во патронов для покупки\nЦена одного патрона {ffff00}10$","Ввод","Закрыть");
			if(p_info[playerid][pCash]<(put*50)) return SendClientMessage(playerid,COLOR_GREY,"У вас не достаточно к-во патронов");
			p_info[playerid][pPatron] += put;
			TransferMoney(playerid,p_info[playerid][pCash]-(put * 50),(put * 50),"купил патронов");
			p_info[playerid][pCash] -= (put*50);
			UpdateMoney(playerid);
			format(stringer,62,"Вы купили {"#cWHITE"}%i {ffff00}патронов за {"#cWHITE"}%i$",put,(put*50));
			SendClientMessage(playerid,CYELLOW,stringer);
			return 1;
		}
		case dKazna:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,dKaznaPut,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата | Пожертвование","{"#cWHITE"}Используйте количество долларов которое вы хотите пожертвовать\nот {ffff00}1$ {"#cWHITE"}до {ffff00}500.000$","Ввод","Назад");
				case 1: ShowPlayerDialog(playerid,dKaznaGet,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата","{"#cWHITE"}Используйте количество долларов которое вы хотите взять\nот {ffff00}1$ {"#cWHITE"}до {ffff00}500.000$","Ввод","Назад");
				case 2: ShowPlayerDialog(playerid,dNalog,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата","{"#cWHITE"}Используйте количество долларов которое вы хотите сделать как налог\nот {ffff00}1$ {"#cWHITE"}до {ffff00}1$","Ввод","Назад");
				case 3: ShowZPEdit(playerid);
			}
			return 1;
		}
		case dZp:
		{
			if(!response)
			{
				if(p_info[playerid][tMember] != F_DEPJUST && p_info[playerid][tMember] != F_JTTF || p_info[playerid][tRank] < 12) ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги","Выбрать","Закрыть");
				else ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги\nВзять деньги из казны\nНазначить налог\nУправление зарплатой","Выбрать","Закрыть");
				return 1;
			}
			new clist;
			for(new i=1;i<fraction_amount;i++)
			{
				if ( i == 23 || i == 24 || i == 12 || i == 13 || i == 14 || i == 15 || i == 17 || i == 18 || i == 5 || i == 6 ) continue;
				if(clist==listitem){
					SetPVarInt(playerid,"Zp",i);
				}
				clist++;
			}
			ShowPlayerDialog(playerid,dZp2,DIALOG_STYLE_INPUT,"{"#cWHITE"}Управление зарплатой","{"#cWHITE"}Используйте желаемую зарплату для этой организации","Ввод","Назад");
			return 1;
		}
		case dZp2:
		{
			if(!response) return ShowZPEdit(playerid);
			new sum;
			if(sscanf(inputtext,"i",sum)) return ShowPlayerDialog(playerid,dZp2,DIALOG_STYLE_INPUT,"{"#cWHITE"}Управление зарплатой","{"#cWHITE"}Используйте желаемую зарплату для этой организации","Ввод","Назад");
			if(sum < 500 || sum > 7000) return ShowPlayerDialog(playerid,dZp2,DIALOG_STYLE_INPUT,"{"#cWHITE"}Управление зарплатой","{"#cWHITE"}Используйте желаемую зарплату для этой организации","Ввод","Назад");
			new zp_listitem = GetPVarInt(playerid,"Zp");
			f_info[zp_listitem][f_salary]=sum;
			format(stringer,144,"Вы установили зарплату для {"#cBLUE"}' %s ' - {"#cGRAY"}%d$ ( %i$ за ранг )", f_info[zp_listitem][f_name],f_info[zp_listitem][f_salary],floatround(f_info[zp_listitem][f_salary]*0.25));
			SCM(playerid,CGRAY,stringer);
			DeletePVar(playerid,"Zp");
			new query_save_zp[512];
			format(query_save_zp,512,"UPDATE `fractions` SET `f_salary` = '%d' WHERE `f_id` = '%d'",f_info[zp_listitem][f_salary],f_info[zp_listitem][f_id]);
			mysql_pquery(connects,query_save_zp,"","");
			ShowZPEdit(playerid);
			return 1;
		}
		case dNalog:
		{
			if(!response)
			{
				if(p_info[playerid][tMember] != F_DEPJUST && p_info[playerid][tMember] != F_JTTF || p_info[playerid][tRank] < 12) ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги","Выбрать","Закрыть");
				else ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги\nВзять деньги из казны\nНазначить налог\nУправление зарплатой","Выбрать","Закрыть");
				return 1;
			}
			new sum;
			if(sscanf(inputtext,"i",sum))return ShowPlayerDialog(playerid,dNalog,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата","{"#cWHITE"}Используйте количество долларов которое вы хотите сделать как налог\nот {ffff00}1$ {"#cWHITE"}до {ffff00}1$","Ввод","Назад");
			if(sum < 1 || sum > 5000) return ShowPlayerDialog(playerid,dNalog,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата","{"#cWHITE"}Используйте количество долларов которое вы хотите сделать как налог\nот {ffff00}1$ {"#cWHITE"}до {ffff00}1$","Ввод","Назад");
			nalog = sum;
			new update_meria[300];
			format(update_meria,300,"UPDATE `loadmeria` SET `Nalog` = '%d'", nalog);
			mysql_pquery(connects,update_meria);
			format(stringer,84,"[Государственные Новости] Мэр штата %s установил налог в сумму %i$",NamePlayer[playerid], nalog);
			SendClientMessageToAll(0x4466ccff,stringer);
			format(stringer,82,"{"#cWHITE"}Казна штата: {ffff00}%i$\n{"#cWHITE"}Налог государства: {ffff00}%i$", kazna, nalog);
			UpdateDynamic3DTextLabelText(frac_text[7], -1, stringer);
			/// UpdateFractionStore(7);
			return 1;
		}
		case dKaznaPut:
		{
			if(!response)
			{
				if(p_info[playerid][tMember] != F_DEPJUST && p_info[playerid][tMember] != F_WHOUSE || p_info[playerid][tRank] < 12) ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги","Выбрать","Закрыть");
				else ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги\nВзять деньги из казны\nНазначить налог\nУправление зарплатой","Выбрать","Закрыть");
				return 1;
			}
			new sum;
			if(sscanf(inputtext,"i",sum)) return ShowPlayerDialog(playerid,dKaznaPut,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата | Пожертвование","{"#cWHITE"}Используйте количество долларов которое вы хотите пожертвовать\nот {ffff00}1$ {"#cWHITE"}до {ffff00}500.000$","Ввод","Назад");
			if(sum < 1 || sum > 500000) return ShowPlayerDialog(playerid,dKaznaPut,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата | Пожертвование","{"#cWHITE"}Используйте количество долларов которое вы хотите пожертвовать\nот {ffff00}1$ {"#cWHITE"}до {ffff00}500.000$","Ввод","Назад");
			if(p_info[playerid][pCash] < sum) return SendErr(playerid,"У вас не достаточно денег наличными");
			TransferMoney(playerid,p_info[playerid][pCash]-sum,sum,"пожертвовал казне штата");
			p_info[playerid][pCash] -= sum;
			UpdateMoney(playerid);
			format(stringer,57,"Вы пожертвовали {ffff00}%i${"#cWHITE"} казне штата",sum);
			SendClientMessage(playerid,-1,stringer);
			kazna += sum;
			new update_meria[300];
			format(update_meria,300,"UPDATE `loadmeria` SET `Kazna` = '%d'", kazna);
			mysql_pquery(connects,update_meria);
			format(stringer,82,"{"#cWHITE"}Казна штата: {ffff00}%i$\n{"#cWHITE"}Налог государства: {ffff00}%i$", kazna, nalog);
			UpdateDynamic3DTextLabelText(frac_text[7], -1, stringer);
			// UpdateFractionStore(7);
			return 1;
		}
		case dKaznaGet:
		{
			if(!response)
			{
				if(p_info[playerid][tMember] != F_DEPJUST && p_info[playerid][tMember] != F_WHOUSE || p_info[playerid][tRank] < 12) ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги","Выбрать","Закрыть");
				else ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги\nВзять деньги из казны\nНазначить налог\nУправление зарплатой","Выбрать","Закрыть");
				return 1;
			}
			new sum;
			if(sscanf(inputtext,"i",sum)) return ShowPlayerDialog(playerid,dKaznaGet,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата","{"#cWHITE"}Используйте количество долларов которое вы хотите взять\nот {ffff00}50.000$ {"#cWHITE"}до {ffff00}500.000$","Ввод","Назад");
			if(sum < 50000 || sum > 500000) return ShowPlayerDialog(playerid,dKaznaGet,DIALOG_STYLE_INPUT,"{"#cWHITE"}Казна штата","{"#cWHITE"}Используйте количество долларов которое вы хотите взять\nот {ffff00}50.000$ {"#cWHITE"}до {ffff00}500.000$","Ввод","Назад");
			if(kazna < sum) return 1;
			TransferMoney(playerid,p_info[playerid][pCash]+sum,sum,"взял из казны штата");
			p_info[playerid][pCash] += sum;
			UpdateMoney(playerid);
			format(stringer,53,"Вы взяли {ffff00}%i${"#cWHITE"} из казны штата",sum);
			SendClientMessage(playerid,-1,stringer);
			kazna -= sum;
			new update_meria[300];
			format(update_meria,300,"UPDATE `loadmeria` SET `Kazna` = '%d'", kazna);
			mysql_pquery(connects,update_meria);
			format(stringer,82,"{"#cWHITE"}Казна штата: {ffff00}%i$\n{"#cWHITE"}Налог государства: {ffff00}%i$", kazna, nalog);
			UpdateDynamic3DTextLabelText(frac_text[7], -1, stringer);
			// UpdateFractionStore(7);
			return 1;
		}
		case dPaintBall:
		{
			if(!response) return 1;

			if(p_info[playerid][pCash] < 2000) return SendErr(playerid,"Нужно 2000$ для игры");

			TransferMoney(playerid,p_info[playerid][pCash]-2000,2000,"отдал за PaintBall");
			p_info[playerid][pCash]-=2000;
			UpdateMoney(playerid);

			TotalPaintBall++;

			format(stringer,46,"Вы зарегистрировались под номером %i",TotalPaintBall);
			SendClientMessage(playerid,CBLUE,stringer);
			SetPVarInt(playerid,"pteam",true);
			return 1;
		}
		case dRace:
		{
			//print ( "for dRace" ) ;
			if(!response) return 1;
			TypeRace = listitem;
			TimeRace = GetPVarInt(playerid,"time_race");
			for(new C = 0; C < 25; C++) RaceWinners[C][0] = EOS;
			COUNT_RACE_POINT = 0;
			administrator_tp_race = true;

			TextDrawSetString(race_back_text[3], "0");

			vehicle_admin_race = GetPVarInt(playerid,"veh_race");
			vehicle_admin_race_color_first = GetPVarInt(playerid,"veh_race_color_first");
			vehicle_admin_race_color_second = GetPVarInt(playerid,"veh_race_color_second");

			new send_race_string [ 200 ] ;

			format ( send_race_string, 200, "Администратор {"#cWHITE"}%s{07f6b3} создал гонку по трассе {"#cWHITE"}%s{07f6b3}", NamePlayer[playerid],RaceName[TypeRace]);
			SendClientMessageToAll(0x07f6b3FF,send_race_string);
			format ( send_race_string, 200, "Время на регистрацию: {"#cWHITE"}%d {07f6b3}секунд . Для участия введите команду: {"#cWHITE"}/joinrace", TimeRace);
			SendClientMessageToAll(0x07f6b3FF,send_race_string);

			DeletePVar(playerid, "time_race");
			DeletePVar(playerid, "veh_race");
			DeletePVar(playerid, "veh_race_color_first");
			DeletePVar(playerid, "veh_race_color_second");
			return 1;
		}
		case dMakeGun:
		{
			if(!response) return 1;
			if(p_info[playerid][pMats]<MakeGunData[listitem][mgunamount])
			{
				format(stringer, 52, "Вам нужно %d ед. оружия для сборки этого оружия",MakeGunData[listitem][mgunamount]);
				SendClientMessage(playerid,COLOR_GREY,stringer);
				return 1;
			}
			ShowPlayerDialog(playerid,dMakeGun2,1,"Сборка оружия","{"#cWHITE"}Сколько патронов вы хотите использовать для этого оружия?","Собрать","Отмена");
			SetPVarInt(playerid,"makegun_listitem",listitem);
			return 1;
		}
		case dMakeGun2:
		{
			if(!response) return 1;

			new ammos = strval(inputtext);
			new listitem_gun = GetPVarInt(playerid,"makegun_listitem");
			if(ammos < 1 || ammos > 500) return ShowPlayerDialog(playerid,dMakeGun2,1,"Сборка оружия","{"#cWHITE"}Сколько патронов вы хотите использовать для этого оружия?\n\n- от 1 до 500 патронов","Собрать","Отмена");
			if(p_info[playerid][pPatron]<ammos) return SendErr(playerid, "У вас нет столько патронов");

			AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos);

			MeAction(playerid,"сделал(а) оружие из металла");
			SetPlayerChatBubble(playerid, "собрал оружие", CPURPLE, 30.0, 10000);

			p_info[playerid][pPatron] -= ammos;
			if(GetPlayerWeapon(playerid) != MakeGunData[listitem_gun][mgunid])
			{
				p_info[playerid][pMats] -= MakeGunData[listitem_gun][mgunamount];
			}

			UpdatePlayerData(playerid,"pPatron",p_info[playerid][pPatron]);
			UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);

			DeletePVar(playerid,"makegun_listitem");
			return 1;
		}
		case dSelectPatr:
		{
			GetPatron(playerid,response+1);
			SetPVarInt(playerid,"get_type",response+1);
			return 1;
		}
		case dSelectFrac:
		{
			//print ( "for dSelectFrac" ) ;
			if(!response) return 1;
			new slot = -1;
			for(new place=0;place<fraction_amount;place++)
			{
				if(place != 12 && place != 13 && place != 15 && place != 17 && place != 18 && place != 5 && place != 6 && place != 14 && place != 1 && place != 10 && place != 21 && place != 3 && place != 19 && place != 7) continue;
				if(strfind(inputtext,f_info[place][f_name]) != -1)
				{
					slot = place;
					break;
				}
			}
			if(slot == -1) return 1;
			if(frac_place_put[slot][0] == 0.0)
			{
				SendClientMessage(playerid,COLOR_GREY,"Фракция дорабатывается");
				return 1;
			}
			SetPlayerCheckpoint(playerid,frac_place_put[slot][0],frac_place_put[slot][1],frac_place_put[slot][2],6.0);
			SCM(playerid, CORANGE, "Метка {"#cWHITE"}на карте указана в виде {"#cRED"}красной{"#cWHITE"} метки");
			return 1;
		}
		case dInv:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new count_acc_ss=0;
					stringer[0] = EOS;
					for(new index=0; index < 5; index++)
					{
						if(acc_player[playerid][acc_object_id][index] == -1) continue;
						for(new g=0; g<11; g++)
						{
							for(new h=0; h<33; h++)
							{
								if(acc_player[playerid][acc_object_id][index] == id_acc[g][h])
								{
									format(stringer, 512, "%s[%d]\t%s\n", stringer, (index + 1),acc_name[g]);
									count_acc_ss++;
									break;
								}
							}
						}

					}
					if ( count_acc_ss != 0 )
						ShowPlayerDialog(playerid, dAccesories, DIALOG_STYLE_TABLIST,"{ffff00}Аксессуары", stringer, "Выбрать", "Закрыть");
					else SendClientMessage(playerid,COLOR_GREY,"У вас нет аксессуаров , приобретите их в магазине /gps");
				}
			}
			return 1;
		}

		case dAccesories:
		{
			if(!response) return pc_cmd_inv(playerid);
			new count_acc_ss=0;
			for(new index=0;index<5;index++)
			{
				if(acc_player[playerid][acc_object_id][index] == -1) continue;
				for(new g=0; g<11; g++)
				{
					for(new h=0; h<33; h++)
					{
						if(acc_player[playerid][acc_object_id][index] == id_acc[g][h])
						{
							if ( listitem == count_acc_ss )
							{
								//format(stringer, 100, "[%d] %s", (index+1),acc_name[g]);
								//SendClientMessage(playerid,-1,stringer);

								SetPVarInt(playerid,"dSelectAccesories_index", index + 1);
								SetPVarInt(playerid,"dSelectAccesories_g", g + 1);

								ShowPlayerDialog(playerid, dSelectAccesories, DIALOG_STYLE_LIST, "{FF0000}Потверждение", "Изменить\nУдалить\nСнять / Одеть", "Выбрать", "Закрыть");
							}
							count_acc_ss++;
							break;
						}
					}
				}
			}
			return 1;
		}
		case dSelectAccesories:
		{
			if ( !response )
			{
				DeletePVar ( playerid , "dSelectAccesories_index" ) ;
				DeletePVar ( playerid , "dSelectAccesories_g" ) ;
			}
			else
			{
				new index = GetPVarInt ( playerid , "dSelectAccesories_index" ) - 1;
				new g = GetPVarInt ( playerid , "dSelectAccesories_g" ) - 1;

				switch(listitem)
				{
					case 0:
					{
						SendClientMessage(playerid, 0xFFFFFFFF, "Информация: Используйте {FFFF00}ПРОБЕЛ{"#cWHITE"} чтобы осмотреть ваш аксессуар");
						EditAttachedObject(playerid, index + 5);
					}
					case 1:
					{
						acc_player[playerid][acc_object_id][index] = -1;
						acc_player[playerid][acc_object_x][index] = 0.0;
						acc_player[playerid][acc_object_y][index] = 0.0;
						acc_player[playerid][acc_object_z][index] = 0.0;

						RemovePlayerAttachedObject(playerid, index + 5);

						UpdateAccesories ( playerid ) ;

						SendClientMessage(playerid,-1,"Вы {33aa33}успешно{"#cWHITE"} удалили аксессуар с своего {33aa33}персонажа{"#cWHITE"}");
					}
					case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(playerid, index + 5))
						{
							RemovePlayerAttachedObject(playerid, index + 5);
							SendClientMessage(playerid,-1,"Вы {33aa33}успешно{"#cWHITE"} сняли аксессуар с своего {33aa33}персонажа{"#cWHITE"}");
						}
						else
						{
							new Float:frx, Float:fry, Float:frz;
							GetOffsetAttachedAccesories(acc_player[playerid][acc_object_id][index],frx,frx,frx,frx,fry,frz);

							if(g == 9) SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],6,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
							else if(g == 10) SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],1,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
							else SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],2,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);

							SendClientMessage(playerid,-1,"Вы {33aa33}успешно{"#cWHITE"} одели аксессуар с своего {33aa33}персонажа{"#cWHITE"}");
						}
					}
				}

				if ( listitem != 0 )
				{
					DeletePVar ( playerid , "dSelectAccesories_index" ) ;
					DeletePVar ( playerid , "dSelectAccesories_g" ) ;
				}
			}
			return 1;
		}
		case dSu:
		{
			if(!response) return 1;
			SetPVarInt(playerid,"su_listitem",listitem);
			ShowPlayerDialog(playerid,dSu2,DIALOG_STYLE_LIST,"Выберите причину",suspect_player[listitem][suspect_name_reason],"Выбрать","Назад");
			return 1;
		}
		case dSu2:
		{
			if(!response || suspect_player[params[1]][suspect_level][listitem] == -1)
			{
				stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
				for(new i=0; i<13; i++)
				{
					format(stringer,1000,"%s%s\n",stringer,suspect_player[i][suspect_name_folder]);
				}
				ShowPlayerDialog(playerid,dSu,DIALOG_STYLE_LIST,"Выберите раздел",stringer,"Выбрать","Закрыть");
				DeletePVar(playerid,"su_listitem");
				return 1;
			}
			params[0]=GetPVarInt(playerid,"su_player");
			params[1]=GetPVarInt(playerid,"su_listitem");

			format(stringer,107,"%s объявил вас в розыск. Причина: %s. Уровень: %d",NamePlayer[playerid],(inputtext),suspect_player[params[1]][suspect_level][listitem]);
			SendClientMessage(params[0],0xFF182DFF,stringer);

			p_info[params[0]][pWanted] += suspect_player[params[1]][suspect_level][listitem];
			if(p_info[params[0]][pWanted]>6) p_info[params[0]][pWanted]=6;

			format(stringer,260,"[Внимание] %s объявлен в розыск [%i / 6]. Обвинитель: %s. Причина: %s.",NamePlayer[params[0]],p_info[params[0]][pWanted],NamePlayer[playerid],(inputtext));
			SendTeamMessage(0x007FFFFF, stringer);

			UpdatePlayerData(params[0],"pWanted",p_info[params[0]][pWanted]);
			SetPlayerWantedLevel(params[0], p_info[params[0]][pWanted]);
			DeletePVar(playerid,"su_player");
			DeletePVar(playerid,"su_listitem");
			return 1;
		}
		case dSubleader:
		{
			if(!response) return 1;
			params[0]=GetPVarInt(playerid,"subplayerid");
			switch(p_info[playerid][tRank])
			{
				case 10:
				{
					switch(listitem)
					{
						case 0: GetFrak(playerid,1,1146),SetPVarInt(playerid,"level",1);
						case 1: GetFrak(playerid,21,1146),SetPVarInt(playerid,"level",21);
						case 2: GetFrak(playerid,10,1146),SetPVarInt(playerid,"level",10);
						case 3: GetFrak(playerid,25,1146),SetPVarInt(playerid,"level",25);
					}
				}
				case 9:
				{
					switch(listitem)
					{
						case 0: GetFrak(playerid,3,1146),SetPVarInt(playerid,"level",3);
					}
				}
				case 8:
				{
					switch(listitem)
					{
						case 0: GetFrak(playerid,4,1146),SetPVarInt(playerid,"level",4);
						case 1: GetFrak(playerid,20,1146),SetPVarInt(playerid,"level",20);
						case 2: GetFrak(playerid,22,1146),SetPVarInt(playerid,"level",22);
					}
				}
			}
			SetPVarInt(playerid,"mkl",params[0]);
			DeletePVar(playerid,"subplayerid");
			return 1;
		}
		case dEditFamily:
		{
			if(!response) return 1;
			new PlayerFamily = p_info[playerid][pFamily] - 1;
			//
			stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
			format(stringer,300,"%s{%s}Цвет{"#cWHITE"}\n",stringer,FamilyChatColor[_family[PlayerFamily][family_chat_color]]);
			format(stringer,300,"%sНациональность:\t%s\n",stringer,FamilyNation[_family[PlayerFamily][family_national]]);
			strcat(stringer,"{"#cWHITE"}Управление машинами\n");
			strcat(stringer,"{ff0000}Исключение из семьи в оффлайне\n");
			strcat(stringer,"{ff0000}Сменить имя семьи\n");
			strcat(stringer,"{"#cWHITE"}Помощь\n");
			strcat(stringer,"{"#cWHITE"}Привязать семью к своему дому\n");
			ShowPlayerDialog(playerid,dSelectEditFamily,DIALOG_STYLE_LIST, "{ff0000}Управление семьей", stringer, "Изменить", "Закрыть");
			return 1;
		}
		case dSelectEditVehicle:
		{
			if(!response)return pc_cmd_family(playerid);
			new f = p_info[playerid][pFamily] - 1;
			if(_family[f][family_vehicle_model][listitem]<400 || _family[f][family_vehicle_model][listitem] > 611)
			{
				ShowPlayerDialog(playerid,dSelectEditVehicle1,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель", "{"#cWHITE"}Введите {AFAFAF}модель машины, номер цвета 1, номер цвета 2\n{"#cWHITE"}Все нужно вводить через запятую\nПример: {33AA33}541,1,2", "Ввод", "Отмена");
			}
			else
			{
				if(!IsValidVehicle(_family[f][family_vehicle_id][listitem])) ShowPlayerDialog(playerid,dSelectEditVehicle6,DIALOG_STYLE_MSGBOX,"{ff0000}Изменение машин семьи | Информация", " \n \t{"#cWHITE"}Вы хотите заспавнить этот автомобиль?", "Да", "Нет");
				else
				{
					stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
					format(stringer, 600, "%sМодель машины: {"#cORANGE"}%s\n", stringer, VehicleNames [ _family[f][family_vehicle_model][listitem] - 400 ]);
					format(stringer, 600, "%s{"#cWHITE"}Цвет машины 1: {"#cORANGE"}%d\n", stringer, _family[f][family_vehicle_v1][listitem]);
					format(stringer, 600, "%s{"#cWHITE"}Цвет машины 2: {"#cORANGE"}%d\n", stringer, _family[f][family_vehicle_v2][listitem]);
					ShowPlayerDialog(playerid,dSelectEditVehicle2,DIALOG_STYLE_MSGBOX,"{ff0000}Изменение машин семьи | Информация", stringer, "Изменить", "Отмена");
				}
			}
			SetPVarInt(playerid,"v_family_listitem_", listitem + 1);
			return 1;
		}
		case dSelectEditVehicle6:
		{
			if(!response) return pc_cmd_family(playerid);
			new f = p_info[playerid][pFamily] - 1;
			new vfl = GetPVarInt(playerid, "v_family_listitem_") - 1;
			if(IsValidVehicle(_family[f][family_vehicle_id][vfl])) return SCM(playerid, COLOR_GREY, "Ошибка!");
			_family[f][family_vehicle_id][vfl] =
			CreateVehicleOP(_family[f][family_vehicle_model][vfl],
							_family[f][family_vehicle_pos_x][vfl],
							_family[f][family_vehicle_pos_y][vfl],
							_family[f][family_vehicle_pos_z][vfl],
							_family[f][family_vehicle_pos_a][vfl],
							_family[f][family_vehicle_v1][vfl],
							_family[f][family_vehicle_v2][vfl],600_000);

			gVehicles[_family[f][family_vehicle_id][vfl]-1][vFamily] = f;
			SCM(playerid, COLOR_GREY, "Машина заспавнена.");
			return 1;
		}
		case dSelectEditVehicle2:
		{
			if(!response)return pc_cmd_family(playerid);
			ShowPlayerDialog(playerid,dSelectEditVehicle5,DIALOG_STYLE_LIST,"{ff0000}Изменение машин семьи", "{"#cWHITE"}Изменить позицию автомобиля\nИзменить модель автомобиля\nИзменить цвета автомобиля\nУдалить автомобиль", "Выбрать", "Отмена");
			return 1;
		}
		case dSelectEditVehicle5:
		{
			if(!response)return pc_cmd_family(playerid);
			new v_family_listitem = GetPVarInt(playerid, "v_family_listitem_") - 1;
			new f = p_info[playerid][pFamily] - 1;
			switch(listitem)
			{
				case 0:
				{
					SCM(playerid, COLOR_GREY, "Поставьте машину на удобную вам позицию, и введите {"#cORANGE"}/vfamilyfinish");
					AC_PutPlayerInVehicle(playerid, _family[f][family_vehicle_id][v_family_listitem], 0);
				}
				case 1: ShowPlayerDialog(playerid,dSelectEditVehicle3,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель","{"#cWHITE"}Введите в окошко желаемую модель автомобиля", "Ввод", "Отмена");
				case 2: ShowPlayerDialog(playerid,dSelectEditVehicle4,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Цвета","{"#cWHITE"}Введите в окошко желаемый цвет автомобиля, через запятую\n{AFAFAF}Пример: 1,15", "Ввод", "Отмена");
				case 3:
				{
					if(IsValidVehicle(_family[p_info[playerid][pFamily] - 1][family_vehicle_id][v_family_listitem]))
					{
						SCM(playerid, COLOR_GREY, "Успешно. Семейная машина удалена");
						_family[f][family_vehicle_model][v_family_listitem] = 0;
						_family[f][family_vehicle_v1][v_family_listitem] = 0;
						_family[f][family_vehicle_v2][v_family_listitem] = 0;
						_family[f][family_vehicle_pos_x][v_family_listitem] = 0.0;
						_family[f][family_vehicle_pos_y][v_family_listitem] = 0.0;
						_family[f][family_vehicle_pos_z][v_family_listitem] = 0.0;
						_family[f][family_vehicle_pos_a][v_family_listitem] = 0.0;
						SaveFamily(f);
						DestroyVehicleOP(_family[f][family_vehicle_id][v_family_listitem]);
						stringer[0] = EOS;
						for(new A=0;A<5;A++)
						{
							if(_family[p_info[playerid][pFamily] - 1][family_vehicle_model][A] > 400 &&
							_family[p_info[playerid][pFamily] - 1][family_vehicle_model][A] < 611)
								format(stringer, 600, "%s{AFAFAF}-- %d{"#cWHITE"}\t%s\n", stringer, A + 1 , VehicleNames [ _family[p_info[playerid][pFamily] - 1][family_vehicle_model][A] - 400 ]);
							else format(stringer, 600, "%s{AFAFAF}-- %d{"#cWHITE"}\tСлот пустой\n", stringer,  A + 1 );
						}
						//print (stringer);
						ShowPlayerDialog(playerid,dSelectEditVehicle,DIALOG_STYLE_LIST,"{ff0000}Изменение машин семьи", stringer, "Далее", "Отмена");
					}
				}
			}
			return 1;
		}
		case dSelectEditVehicle3:
		{
			if(!response)return pc_cmd_family(playerid);
			new id_model;
			if(sscanf(inputtext,"i", id_model))return ShowPlayerDialog(playerid,dSelectEditVehicle3,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель","{"#cWHITE"}Введите в окошко желаемую модель автомобиля", "Ввод", "Отмена");
			if(id_model<400 || id_model>611)
			{
				SCM(playerid, COLOR_GREY, "Модель машины должна быть не меньше 400 и не больше 611");
				return ShowPlayerDialog(playerid,dSelectEditVehicle3,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель","{"#cWHITE"}Введите в окошко желаемую модель автомобиля", "Ввод", "Отмена");
			}
			if(IsABadFamilyModel(id_model))//
			{
				SCM(playerid, COLOR_GREY, "Данная модель машины запрещенна");
				return ShowPlayerDialog(playerid,dSelectEditVehicle3,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель","{"#cWHITE"}Введите в окошко желаемую модель автомобиля", "Ввод", "Отмена");
			}
			if(GetPVarInt(playerid, "v_family_listitem_")>0)
			{
				_family[p_info[playerid][pFamily] - 1][family_vehicle_model][GetPVarInt(playerid, "v_family_listitem_") - 1] = id_model;
				SCM(playerid,COLOR_GREY,"Вы успешно изменили модель автомобиля");
				RecreateFamilyVehicle(p_info[playerid][pFamily] - 1,GetPVarInt(playerid, "v_family_listitem_") - 1);
				SaveFamily(p_info[playerid][pFamily] - 1);
			}
			return 1;
		}
		case dSelectEditVehicle4:
		{
			if(!response)return pc_cmd_family(playerid);
			new id_color_one, id_color_two;
			if(sscanf(inputtext,"p<,>ii", id_color_one, id_color_two))return ShowPlayerDialog(playerid,dSelectEditVehicle4,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Цвета","{ffffff}Введите в окошко желаемый цвет автомобиля, через запятую\n{AFAFAF}Пример: 1,15", "Ввод", "Отмена");
			if((id_color_one<0||id_color_one>255) || (id_color_two<0||id_color_two>255))
			{
				SCM(playerid, CGRAY, "Цвет должен быть не меньше 0 и не больше 255");
				return ShowPlayerDialog(playerid,dSelectEditVehicle4,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Цвета","{ffffff}Введите в окошко желаемый цвет автомобиля, через запятую\n{AFAFAF}Пример: 1,15", "Ввод", "Отмена");
			}
			if(GetPVarInt(playerid, "v_family_listitem_")>0)
			{
				_family[p_info[playerid][pFamily] - 1][family_vehicle_v1][GetPVarInt(playerid, "v_family_listitem_") - 1]=id_color_one;
				_family[p_info[playerid][pFamily] - 1][family_vehicle_v2][GetPVarInt(playerid, "v_family_listitem_") - 1]=id_color_two;
				SCM(playerid,CGRAY,"Вы успешно изменили цвета автомобиля");
				RecreateFamilyVehicle(p_info[playerid][pFamily] - 1,GetPVarInt(playerid, "v_family_listitem_") - 1);
				SaveFamily(p_info[playerid][pFamily] - 1);
			}
			return 1;
		}
		case dSelectEditVehicle1:
		{
			if(!response)return pc_cmd_family(playerid);
			new id_model, id_Cone, id_Ctwo;
			if(sscanf(inputtext,"p<,>iii",id_model,id_Cone,id_Ctwo))return ShowPlayerDialog(playerid,dSelectEditVehicle1,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель", "{"#cWHITE"}Введите {AFAFAF}модель машины, номер цвета 1, номер цвета 2\n{"#cWHITE"}Все нужно вводить через запятую\nПример: {33AA33}541,1,2", "Ввод", "Отмена");
			if((id_Cone<0||id_Cone>255) || (id_Ctwo<0||id_Ctwo>255))
			{
				SCM(playerid, COLOR_GREY, "Цвет должен быть не меньше 0 и не больше 255");
				return ShowPlayerDialog(playerid,dSelectEditVehicle1,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель", "{"#cWHITE"}Введите {AFAFAF}модель машины, номер цвета 1, номер цвета 2\n{"#cWHITE"}Все нужно вводить через запятую\nПример: {33AA33}541,1,2", "Ввод", "Отмена");
			}
			if(id_model<400 || id_model>611)
			{
				SCM(playerid, COLOR_GREY, "Модель машины должна быть не меньше 400 и не больше 611");
				return ShowPlayerDialog(playerid,dSelectEditVehicle1,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель", "{"#cWHITE"}Введите {AFAFAF}модель машины, номер цвета 1, номер цвета 2\n{"#cWHITE"}Все нужно вводить через запятую\nПример: {33AA33}541,1,2", "Ввод", "Отмена");
			}//p_info[playerid][pFamily]
			if(IsABadFamilyModel(id_model))//if(id_model==425 || id_model==432 || id_model==520 || id_model==406 || id_model==520)
			{
				SCM(playerid, COLOR_GREY, "Данная модель машины запрещенна");
				return ShowPlayerDialog(playerid,dSelectEditVehicle1,DIALOG_STYLE_INPUT,"{ff0000}Изменение машин семьи | Модель", "{"#cWHITE"}Введите {AFAFAF}модель машины, номер цвета 1, номер цвета 2\n{"#cWHITE"}Все нужно вводить через запятую\nПример: {33AA33}541,1,2", "Ввод", "Отмена");
			}
			new v_family_listitem = GetPVarInt(playerid, "v_family_listitem_") - 1;
			format(stringer,128,"(Отладка) id_model: %d", id_model);
			SCM(playerid,-1,stringer);
			format(stringer,128,"(Отладка) id_Cone: %d", id_Cone);
			SCM(playerid,-1,stringer);
			format(stringer,128,"(Отладка) id_Ctwo: %d", id_Ctwo);
			SCM(playerid,-1,stringer);
			new Float:x, Float:y, Float:z, Float:a, family = p_info[playerid][pFamily] - 1;
			if ( family == -1 || v_family_listitem == -1) return SendClientMessage(playerid,CGRAY,"#0111");
			x = p_info[playerid][pX];
			y = p_info[playerid][pY];
			z = p_info[playerid][pZ];
			GetPlayerFacingAngle(playerid,a);
			SCM(playerid,-1,"Установите машину так как вы хотите, и введите {"#cORANGE"}/vfamilyfinish");
			if(IsValidVehicle(_family[family][family_vehicle_temp_id][v_family_listitem]))
			{
				DestroyVehicleOP(_family[family][family_vehicle_temp_id][v_family_listitem]);
			}
			_family[family][family_vehicle_model][v_family_listitem] = id_model;
			_family[family][family_vehicle_v1][v_family_listitem] = id_Cone;
			_family[family][family_vehicle_v2][v_family_listitem] = id_Ctwo;
			_family[family][family_vehicle_temp_id][v_family_listitem] =	CreateVehicleOP(id_model,x,y,z,a,id_Cone,id_Ctwo,600_000);
			AC_PutPlayerInVehicle(playerid,_family[family][family_vehicle_temp_id][v_family_listitem],0);
			print("create family 2");
			return 1;
		}
		case dSelectEditFamilyHouse:
		{
			if(!response) return 1;
			if(gHouses[p_info[playerid][pHouse]][hFamily] == p_info[playerid][pFamily]) return 1;
			new code_house_family[32];
			if(sscanf(inputtext,"s[32]",code_house_family)) return ShowPlayerDialog(playerid, dSelectEditFamilyHouse, DIALOG_STYLE_INPUT, "{"#cWHITE"}Безопасность семьи", "Введите секретный код, по которому игроки смогут вступать в вашу семью", "Ввод", "Отмена");
			gHouses[p_info[playerid][pHouse]][hFamily] = p_info[playerid][pFamily];
			strmid(gHouses[p_info[playerid][pHouse]][hFamilyCode], code_house_family, 0, strlen(code_house_family), 32);
			SendClientMessage(playerid, COLOR_GREY, "Успешно. Вы привязали свой дом к семье. Используйте /spawnchange, чтобы появляться в доме семьи.");
			format(stringer, 128, "Секретный код: %s", code_house_family);
			SendClientMessage(playerid, -1, stringer);
			
			SendClientMessage(playerid, COLOR_GREY, "Для того, чтоб отвязать семью от дома, введите \"/hmenu\" и нажмите \"Изменить\"");

			mysql_query_string[0] = EOS;
			format(mysql_query_string, 512, "UPDATE `housetest` SET `hFamily` = '%d', `hFamilyCode` = '%s' WHERE `hID` = '%d'", gHouses[p_info[playerid][pHouse]][hFamily], gHouses[p_info[playerid][pHouse]][hFamilyCode], gHouses[p_info[playerid][pHouse]][hID]);
			mysql_pquery(connects, mysql_query_string, "", "");

			return 1;
		}
		case dEditFamilyNameChange:
		{
			if(!response) return 1;
			new new_name_family[32];
			if(sscanf(inputtext,"s[32]", new_name_family)) return ShowPlayerDialog(playerid, dEditFamilyNameChange, DIALOG_STYLE_INPUT, "{"#cWHITE"}> Имя семьи <", "{"#cWHITE"}Введите новое имя семьи", "Далее", "Отмена");
			string_replace(new_name_family, ''', ' ') ;
			strmid(_family[p_info[playerid][pFamily] - 1][family_create_name], new_name_family, 0, strlen(new_name_family), 32);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 512, "UPDATE `family` SET `gCreateFamilyName` = '%s' WHERE `ID` = '%d'", _family[p_info[playerid][pFamily] - 1][family_create_name], _family[p_info[playerid][pFamily] - 1][family_mysql_id]);

			mysql_pquery(connects, mysql_query_string, "", "");
			SendClientMessage(playerid, -1, "Вы успешно изменили имя семьи");
			return 1;
		}
		case dSelectEditFamily:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(strcmp(_family[p_info[playerid][pFamily] - 1][family_owner_create_name],NamePlayer[playerid],true)) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
					stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
					for(new Color = 0; Color < 5; Color++)
					{
						format(stringer,120,"%s{%s}Цвет: %i\n",stringer,FamilyChatColor[Color],Color+1);
					}
					ShowPlayerDialog(playerid,dSelectEditColor,DIALOG_STYLE_LIST,"{ff0000}Изменение цвета", stringer, "Далее", "Отмена");
				}
				case 1:
				{
					if(strcmp(_family[p_info[playerid][pFamily] - 1][family_owner_create_name],NamePlayer[playerid],true)) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
					stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
					for(new Nation = 0; Nation < 9; Nation++)
					{
						format(stringer,220,"%s%s\n",stringer,FamilyNation[Nation]);
					}
					ShowPlayerDialog(playerid,dSelectEditNation,DIALOG_STYLE_LIST,"{ff0000}Изменение национальности", stringer, "Далее", "Отмена");
				}
				case 2:
				{
					if(strcmp(_family[p_info[playerid][pFamily] - 1][family_owner_create_name],NamePlayer[playerid],true)) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
					stringer[0] = EOS;
					for(new A=0;A<5;A++)
					{
						if(_family[p_info[playerid][pFamily] - 1][family_vehicle_model][A] > 400 &&
						_family[p_info[playerid][pFamily] - 1][family_vehicle_model][A] < 611)
							format(stringer, 600, "%s{AFAFAF}-- %d{"#cWHITE"}\t%s\n", stringer, A + 1 , VehicleNames [ _family[p_info[playerid][pFamily] - 1][family_vehicle_model][A] - 400 ]);
						else format(stringer, 600, "%s{AFAFAF}-- %d{"#cWHITE"}\tСлот пустой\n", stringer,  A + 1 );
					}
					//print (stringer);
					ShowPlayerDialog(playerid,dSelectEditVehicle,DIALOG_STYLE_LIST,"{ff0000}Изменение машин семьи", stringer, "Далее", "Отмена");
				}
				case 3:
				{
					if(strcmp(_family[p_info[playerid][pFamily] - 1][family_owner_create_name],NamePlayer[playerid])) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
					mysql_query_string[0] = EOS;
					format(mysql_query_string,81,"SELECT `tName`,`family` FROM `accounts` WHERE `family` = '%i'",p_info[playerid][pFamily]);
					mysql_pquery(connects, mysql_query_string, "family_members", "i", playerid ) ;
				}
				case 4:
				{
					if(strcmp(_family[p_info[playerid][pFamily] - 1][family_owner_create_name],NamePlayer[playerid])) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
					ShowPlayerDialog(playerid, dEditFamilyNameChange, DIALOG_STYLE_INPUT, "{"#cWHITE"}> Имя семьи <", "{"#cWHITE"}Введите новое имя семьи", "Далее", "Отмена");
				}
				case 5:
				{
					stringer[0] = EOS;
					strcat(stringer,"{"#cINFO"}/family {"#cWHITE"}- Управление семьей\n",800);
					strcat(stringer,"{"#cINFO"}/k {"#cWHITE"}- Чат семьи\n",800);
					strcat(stringer,"{"#cINFO"}/fleave {"#cWHITE"}- Покинуть семью\n",800);
					strcat(stringer,"{"#cINFO"}/finvite {"#cWHITE"}- Принять в семью\n",800);
					strcat(stringer,"{"#cINFO"}/funinvite {"#cWHITE"}- Исключить из семьи\n",800);
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{ff0000}Помощь", stringer, "Закрыть", "");
				}
				case 6:
				{
					if ( p_info[playerid][pHouse] == 0 || gHouses[p_info[playerid][pHouse]][hFamily] == p_info[playerid][pFamily]) return SendClientMessage ( playerid, COLOR_GREY , "У вас нету дома / дом привязан" );
					ShowPlayerDialog(playerid, dSelectEditFamilyHouse, DIALOG_STYLE_INPUT, "{"#cWHITE"}Безопасность семьи", "Введите секретный код, по которому игроки смогут вступать в вашу семью", "Ввод", "Отмена");
				}
			}
			return 1;
		}
		case dOffUninviteFamily:
		{
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) > MAX_PLAYER_NAME-1) return SendClientMessage(playerid,COLOR_GREY,"Ошибка, Используйте еще раз.");
			if(!strcmp(inputtext,_family[p_info[playerid][pFamily] - 1][family_owner_create_name], true)) return SCM(playerid, COLOR_GREY, "Вы не можете уволить самого себя");
			mysql_query_string[0] = EOS;
			format(mysql_query_string,104,"SELECT `family` FROM `accounts` WHERE `tName` = '%s' AND `family` = '%d' LIMIT 1",(inputtext),p_info[playerid][pFamily]);
			mysql_pquery(connects,mysql_query_string,"OffUninviteFamily", "is", playerid,(inputtext));
			return 1;
		}
		case dSelectEditColor:
		{
			if(!response) return 1;
			new PlayerFamily = p_info[playerid][pFamily] - 1;
			_family[PlayerFamily][family_chat_color]=listitem;
			SendClientMessage(playerid,FamilyColor[_family[PlayerFamily][family_chat_color]],"Цвет успешно изменен!");
			SaveFamily(PlayerFamily);
			return 1;
		}

		case dSelectEditNation:
		{
			if(!response) return 1;
			new PlayerFamily = p_info[playerid][pFamily] - 1;
			_family[PlayerFamily][family_national] = listitem;
			format(stringer,73,"Вы сменили национальность на {"#cINFO"}%s",FamilyNation[_family[PlayerFamily][family_national]]);
			SendClientMessage(playerid,-1,stringer);
			SaveFamily(PlayerFamily);
			return 1;
		}
		case dLeaderMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
					{
						if(gVehicles[i-1][vFraction] != p_info[playerid][tMember]) continue;
						if(IsVehicleOccupied(i)) continue;
						SetVehicleToRespawn(i);
					}
					format(stringer,92,"[L] %s %s заспавнил незанятые машины", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],playerid);
					SendFamilyMessage(p_info[playerid][tMember],COLOR_LIGHTRED, stringer);
				}
				case 1..3:
				{
					stringer[0] = EOS;
					for(new i=1; i<=FractionRank[p_info[playerid][tMember]-1]-1; i++)
					{
						new frac_rank_check = -1;
						if ( listitem == 1 ) frac_rank_check = f_info [ p_info[playerid][tMember] ] [ f_rank_invite ] ;
						else if ( listitem == 2 ) frac_rank_check = f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ] ;
						else if ( listitem == 3 ) frac_rank_check = f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ] ;
						if(frac_rank_check == -1) return true;
						format(stringer,1240,"%s%i. %s%s\n", stringer,i,(i==frac_rank_check)?("{ff0000}"):("{"#cWHITE"}"),GetRank(p_info[playerid][tMember],i));
						//format(stringer,1240,"%s%i. %s%s\n", stringer,i,(i==gFractionRank[p_info[playerid][tMember]-1][listitem-1])?("{ff0000}"):("{"#cWHITE"}"),GetRank(p_info[playerid][tMember],i));
					}
					SetPVarInt(playerid,"leader_rank", listitem);
					ShowPlayerDialog(playerid,dLeaderRank,DIALOG_STYLE_LIST,"{ffff00}Выберите ранг",stringer,"Выбрать", "Закрыть");
				}
				case 4:
				{
					if(p_info[playerid][pAdmin] == 0) return
						SendClientMessage(playerid,COLOR_GREY,"Данная функция ограничена и доступна только для администрации в воспитательных целях");
					stringer[0] = EOS, strcat(stringer, ""nwhite"");
					for(new i = 1; i <= FractionRank[p_info[playerid][tMember]-1]; i++)
					{
						format(stringer,1240,"%s%s\n",stringer,GetRank(p_info[playerid][tMember],i));
					}
					ShowPlayerDialog(playerid,dEditRank,DIALOG_STYLE_LIST,""neworange"Выберите ранг",stringer,"Выбрать","Закрыть");
					return 1;
				}
				/*case 5:
				{
					if ( ! p_info [ playerid ] [ tLeader ] )return SendErr ( playerid, "Функция доступна только лидерам" ) ;
					if ( GetPlayerState ( playerid ) != 2 )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
					if ( gVehicles[ GetPlayerVehicleID ( playerid ) - 1 ] [ vFraction ] != p_info [ playerid ] [ tMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей банды" ) ;

					ShowPlayerDialog(playerid,dEditVehicle,DIALOG_STYLE_LIST,""neworange"Управление автомобилем фракции","Сменить место спавна автомобиля\nИзменить модель автомобиля","Выбрать","Назад");
					return 1;
				}*/
				case 5:
				{
					if(p_info[playerid][pAdmin] == 0) return SendClientMessage(playerid,COLOR_GREY,"Данная функция ограничена и доступна только для администрации в воспитательных целях");
					if(p_info[playerid][pAdmin] != 12) return SCM(playerid,COLOR_GREY,"Нет!");
					if ( ! p_info [ playerid ] [ tLeader ] )return SendErr ( playerid, "Функция доступна только лидерам" ) ;
					GetPlayerPos ( playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ] ) ;
					GetPlayerFacingAngle ( playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] ) ;
					f_info [ p_info[playerid][tMember] ] [ f_spawn_int ] = GetPlayerInterior ( playerid ) ;
					f_info [ p_info[playerid][tMember] ] [ f_spawn_virt ] = GetPlayerVirtualWorld ( playerid ) ;

					SendSucc(playerid, "Место спавна успешно изменено");

					new sql_string [200];
					format(sql_string, 200, "UPDATE `fractions` SET `f_spawn` = '%f,%f,%f,%f,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ],
					f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ], f_info [ p_info[playerid][tMember] ] [ f_spawn_int ], f_info [ p_info[playerid][tMember] ] [ f_spawn_virt ], f_info [ p_info[playerid][tMember] ] [ f_id ]);
					mysql_pquery(connects, sql_string, "", "");

					format ( stringer, 144, "[A] лидер %s изменил спавн фракции", NamePlayer [ playerid ] );
					AdmMes ( COLOR_GREY , stringer , 1 );

					return 1;
				}
				case 6:
				{
					if(p_info[playerid][pAdmin] == 0) return SendClientMessage(playerid,COLOR_GREY,"Данная функция ограничена и доступна только для администрации в воспитательных целях");
					if ( ! p_info [ playerid ] [ tLeader ] )return SendErr ( playerid, "Функция доступна только лидерам" ) ;
					GetPlayerPos ( playerid, f_info [ p_info[playerid][tMember] ] [ f_bank ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_bank ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_bank ] [ 2 ] ) ;

					DestroyDynamic3DTextLabel ( frac_text [ p_info[playerid][tMember] ] ) ;
					DestroyDynamicCP ( frac_areaid_cp [ p_info[playerid][tMember] ]  ) ;
					DestroyDynamicArea ( frac_areaid [ p_info[playerid][tMember] ] ) ;
					f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank_virt ] = GetPlayerVirtualWorld ( playerid ) ;

					frac_areaid [ p_info[playerid][tMember] ] = CreateDynamicSphere ( f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 2 ],1.0, f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank_virt ] ) ;
					frac_areaid_cp [ p_info[playerid][tMember] ] = CreateDynamicCP ( f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 2 ],1.0, f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank_virt ] ) ;
					frac_text[ p_info[playerid][tMember] ] = CreateDynamic3DTextLabel("___",-1, f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank ] [ 2 ] + 1.5, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, f_info [ p_info [ playerid ] [ tMember ] ] [ f_bank_virt ] ) ;
					UpdateStoreGang ( p_info [ playerid ] [ tMember ] ) ;
					SendSucc(playerid, "Место склада успешно изменено");
					new sql_string [200];
					format(sql_string, 200, "UPDATE `fractions` SET `f_bank` = '%f,%f,%f,0,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[playerid][tMember] ] [ f_bank ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_bank ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_bank ] [ 2 ],
					f_info [ p_info[playerid][tMember] ] [ f_bank_virt ],  f_info [ p_info[playerid][tMember] ] [ f_id ] );
					mysql_pquery(connects, sql_string, "", "");

					format ( stringer, 144, "[A] лидер %s изменил место склада", NamePlayer [ playerid ] );
					AdmMes ( COLOR_GREY , stringer , 1 );

					return 1;
				}
				case 7:
				{
					if(p_info[playerid][pAdmin] == 0) return SendClientMessage(playerid,COLOR_GREY,"Данная функция ограничена и доступна только для администрации в воспитательных целях");
					if ( ! p_info [ playerid ] [ tLeader ] )return SendErr ( playerid, "Функция доступна только лидерам" ) ;
					if ( GetPlayerInterior ( playerid ) != 0 || GetPlayerVirtualWorld ( playerid ) != 0 ) return SendErr ( playerid, "Место разгрузки можно установить только на улице" ) ;
					GetPlayerPos ( playerid, frac_place_put[ p_info[playerid][tMember] ] [ 0 ], frac_place_put[ p_info[playerid][tMember] ] [ 1 ], frac_place_put[ p_info[playerid][tMember] ] [ 2 ] ) ;

					DestroyDynamic3DTextLabel ( frac_place_put_areaid_text [ p_info[playerid][tMember] ] ) ;
					DestroyDynamicPickup ( frac_place_put_areaid_cp [ p_info[playerid][tMember] ]  ) ;
					DestroyDynamicArea ( frac_place_put_areaid[ p_info[playerid][tMember] ] ) ;

					frac_place_put_areaid_text [ p_info[playerid][tMember] ] = CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{"#cBLUE"}металла и патронов", 0xFFFFFF20, frac_place_put[ p_info [ playerid ] [ tMember ] ][0],frac_place_put[ p_info [ playerid ] [ tMember ] ][1],frac_place_put[ p_info [ playerid ] [ tMember ] ][2]+0.8, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
					frac_place_put_areaid_cp [ p_info[playerid][tMember] ] = CreateDynamicPickup(1239,1,frac_place_put[ p_info [ playerid ] [ tMember ] ] [ 0 ],frac_place_put[ p_info [ playerid ] [ tMember ] ] [ 1 ],frac_place_put[ p_info [ playerid ] [ tMember ] ] [ 2 ]);
					frac_place_put_areaid[ p_info[playerid][tMember] ] = CreateDynamicSphere ( frac_place_put[ p_info [ playerid ] [ tMember ] ] [ 0 ], frac_place_put[ p_info [ playerid ] [ tMember ] ] [ 1 ], frac_place_put[ p_info [ playerid ] [ tMember ] ] [ 2 ], 1.0);
					SendSucc(playerid, "Место разгрузки успешно изменено");

					for ( new j = 0 ; j < 5 ; j ++ )DestroyDynamicMapIcon ( gang_map_icons [ j ] ) ;

					gang_map_icons [ 0 ] = CreateDynamicMapIcon(frac_place_put [ 12 ] [ 0 ], frac_place_put [ 12 ] [ 1 ], frac_place_put [ 12 ] [ 2 ],59,0);  // баллас
					gang_map_icons [ 1 ] = CreateDynamicMapIcon(frac_place_put [ 13 ] [ 0 ], frac_place_put [ 13 ] [ 1 ], frac_place_put [ 13 ] [ 2 ],60,0);  // вагос
					gang_map_icons [ 2 ] = CreateDynamicMapIcon(frac_place_put [ 15 ] [ 0 ], frac_place_put [ 15 ] [ 1 ], frac_place_put [ 15 ] [ 2 ],62,0);  // грув
					gang_map_icons [ 3 ] = CreateDynamicMapIcon(frac_place_put [ 17 ] [ 0 ], frac_place_put [ 17 ] [ 1 ], frac_place_put [ 17 ] [ 2 ],58,0);  // ацтек
					gang_map_icons [ 4 ] = CreateDynamicMapIcon(frac_place_put [ 18 ] [ 0 ], frac_place_put [ 18 ] [ 1 ], frac_place_put [ 18 ] [ 2 ],61,0);  // рифа

					new sql_string [ 200 ] ;
					format(sql_string, 200, "UPDATE `fractions` SET `f_put` = '%f,%f,%f' WHERE `f_id` = '%d'", frac_place_put [ p_info[playerid][tMember] ] [ 0 ], frac_place_put [ p_info[playerid][tMember] ] [ 1 ], frac_place_put [ p_info[playerid][tMember] ] [ 2 ],
					f_info [ p_info[playerid][tMember] ] [ f_id ]);
					mysql_pquery(connects, sql_string, "", "");

					format ( stringer, 144, "[A] лидер %s изменил место разгрузки", NamePlayer [ playerid ] );
					AdmMes ( COLOR_GREY , stringer , 1 );

					return 1;
				}
				case 8:
				{
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "{"#cWHITE"}Ранг для добавления в ЧС {ffff00}[%i]\n{"#cWHITE"}Сумма выхода из ЧС {ffff00}[$%i]\n{"#cWHITE"}Расплат кровью для выхода из ЧС {ffff00}[%i]",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialog ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ffff00}Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
				}
				case 9: ShowPlayerDialog ( playerid, dSetFractionMessage, DIALOG_STYLE_INPUT, "{ffff00}Сообщение фракции", "Введите сообщение которое будет показывать при входе", "Ввод", "Отмена" ) ;
			}
		}
		case dSetFractionMessage:
		{
			if(!response)return 1;
			new message_[144];
			if(sscanf(inputtext,"s[144]",message_)) return ShowPlayerDialog ( playerid, dSetFractionMessage, DIALOG_STYLE_INPUT, "{ffff00}Сообщение фракции", "Введите сообщение которое будет показывать при входе", "Ввод", "Отмена" ) ;
			strmid(f_info[p_info[playerid][tMember]][f_message],message_,0,strlen(message_),32);
			format(stringer,144,"Вы успешно поставили сообщение %s",message_);
			SendClientMessage(playerid,-1,stringer);
			return 1;
		}
		case dEditBl:
		{
			if( ! response )
			{
				if(!p_info[ playerid ] [ tMember]) return 1;
				else if(p_info[ playerid ] [ tRank] != FractionRank[p_info[ playerid ] [ tMember]-1]) return 1;

				//new Member = p_info[ playerid ] [ tMember] - 1;
				stringer = "{"#cWHITE"}Респавн машин\n";
				format(stringer,1500,"%sМожет принимать:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]),f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]);
				format(stringer,1500,"%sМожет увольнять:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ]),f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ]);
				format(stringer,1500,"%sМожет повышать:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ]),f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ]);
				strcat(stringer, "Управление рангами\n");
				strcat(stringer, "Управление автомобилем\n");
				strcat(stringer, "Изменить место спавна\n");
				strcat(stringer, "Изменить место склада\n");
				strcat(stringer, "Изменить место разгрузки\n");
				strcat(stringer, "Управление чёрным списком\n");
				ShowPlayerDialog(playerid,dLeaderMenu,DIALOG_STYLE_LIST,"{ffff00}Панель лидера", stringer, "Выбрать", "Закрыть");
				return 1 ;
			}
			else
			{
				switch ( listitem )
				{
					case 0:
					{
						stringer[0] = EOS;
						for(new i=1; i<=FractionRank[p_info[ playerid ] [ tMember]-1]-1; i++)
						{
							format(stringer,1240,"%s%i. %s%s\n", stringer,i,(i==f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ])?("{ff0000}"):("{"#cWHITE"}"),GetRank(p_info[ playerid ] [ tMember],i));
						}
						ShowPlayerDialog(playerid,dEditBlParam,DIALOG_STYLE_LIST,"{ffff00}Выберите ранг",stringer,"Выбрать", "Назад");
					}
					case 1: ShowPlayerDialog ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ffff00}Сумма выхода из ЧС", "Введите сумму выхода из ЧС:", "Принять", "Назад" ) ;
					case 2: ShowPlayerDialog ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ffff00}Расплата кровью", "Введите кол-во расплат кровью для выхода из ЧС:", "Принять", "Назад" ) ;
				}
				SetPVarInt ( playerid, "dEditBlParam", listitem) ;
			}
		}

		case dEditBlParam:
		{
			if ( ! response )
			{
				new dialog_string [ 178 ] ;
				format ( dialog_string, sizeof ( dialog_string ), "{"#cWHITE"}Ранг для добавления в ЧС {ffff00}[%i]\n{"#cWHITE"}Сумма выхода из ЧС {ffff00}[$%i]\n{"#cWHITE"}Расплат кровью для выхода из ЧС {ffff00}[%i]",
				f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ] ) ;
				ShowPlayerDialog ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ffff00}Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
				DeletePVar ( playerid, "dEditBlParam" ) ;
				return 1 ;
			}
			switch ( GetPVarInt ( playerid, "dEditBlParam") )
			{
				case 0:
				{
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ] = listitem + 1;
					DeletePVar ( playerid, "dEditBlParam" ) ;
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "{"#cWHITE"}Ранг для добавления в ЧС {ffff00}[%i]\n{"#cWHITE"}Сумма выхода из ЧС {ffff00}[$%i]\n{"#cWHITE"}Расплат кровью для выхода из ЧС {ffff00}[%i]",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialog ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ffff00}Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
					format(dialog_string, 178, "UPDATE `fractions` SET `f_bl_config` = '%d,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ],
					f_info [ p_info[playerid][tMember] ] [ f_id ] );
					mysql_pquery(connects, dialog_string, "", "");
				}
				case 1:
				{
					if ( strval ( inputtext ) < 1 || strval ( inputtext ) > 10000000 )
					{
						ShowPlayerDialog ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ffff00}Сумма выхода из ЧС", "* Сумма не может быть меньше 1 и больше 10000000$\n\nВведите сумму выхода из ЧС:", "Принять", "Назад" ) ;
						return 0;
					}
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ] = strval ( inputtext ) ;
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "{"#cWHITE"}Ранг для добавления в ЧС {ffff00}[%i]\n{"#cWHITE"}Сумма выхода из ЧС {ffff00}[$%i]\n{"#cWHITE"}Расплат кровью для выхода из ЧС {ffff00}[%i]",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialog ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ffff00}Чёрный список", dialog_string, "Выбрать", "Назад" ) ;

					DeletePVar ( playerid, "dEditBlParam" ) ;
					format(dialog_string, 178, "UPDATE `fractions` SET `f_bl_config` = '%d,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ],
					f_info [ p_info[playerid][tMember] ] [ f_id ]);
					mysql_pquery(connects, dialog_string, "", "");

				}
				case 2:
				{
					if ( strval ( inputtext ) < 1 || strval ( inputtext ) > 25 )
					{
						ShowPlayerDialog ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ffff00}Расплата кровью", "* Кол-во расплат кровью не может быть меньше 1 и больше 25!\n\nВведите кол-во расплат кровью для выхода из ЧС:", "Принять", "Назад" ) ;
						return 0;
					}
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ] = strval ( inputtext ) ;
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "{"#cWHITE"}Ранг для добавления в ЧС {ffff00}[%i]\n{"#cWHITE"}Сумма выхода из ЧС {ffff00}[$%i]\n{"#cWHITE"}Расплат кровью для выхода из ЧС {ffff00}[%i]",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialog ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ffff00}Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
					DeletePVar ( playerid, "dEditBlParam" ) ;
					format(dialog_string, 178, "UPDATE `fractions` SET `f_bl_config` = '%d,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 2 ],
					f_info [ p_info[playerid][tMember] ] [ f_id ] );
					mysql_pquery(connects, dialog_string, "", "");

				}
			}
		}
		case dEditVehicle:
		{
			if( ! response )
			{
				if(!p_info[playerid][tMember]) return 1;
				else if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1]) return 1;

//				new Member = p_info[playerid][tMember] - 1;

				stringer = "{"#cWHITE"}Респавн машин\n";
				format(stringer,1500,"%sМожет принимать:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]),f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]);
				format(stringer,1500,"%sМожет увольнять:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ]),f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ]);
				format(stringer,1500,"%sМожет повышать:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ]),f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ]);
				strcat(stringer, "Управление рангами\n");
				strcat(stringer, "Управление автомобилем\n");
				strcat(stringer, "Изменить место спавна\n");
				strcat(stringer, "Изменить место склада\n");
				strcat(stringer, "Изменить место разгрузки\n");
				strcat(stringer, "Управление чёрным списком\n");
				ShowPlayerDialog(playerid,dLeaderMenu,DIALOG_STYLE_LIST,"{ffff00}Панель лидера", stringer, "Выбрать", "Закрыть");
				return 1 ;
			}
			if ( listitem == 0 )
			{
				new veh_id = GetPlayerVehicleID ( playerid ) ;
				if( GetPlayerState( playerid ) != 2 ) return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
				if ( veh_id == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
				if ( gVehicles[ veh_id - 1 ] [ vFraction ] != p_info [ playerid ] [ tMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей банды" ) ;

				GetVehiclePos ( veh_id, gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ] ) ;
				GetVehicleZAngle( veh_id, gVehicles [ veh_id - 1 ] [ veA ] ) ;

				gVehicles [ veh_id - 1 ] [ vModel ] = GetVehicleModel ( GetPlayerVehicleID ( playerid ) );
				DestroyVehicleOP ( veh_id ) ;
				gVehicles [ veh_id - 1 ] [ vID ] = INVALID_VEHICLE_ID ;
				gVehicles [ veh_id - 1 ] [ vID ] = CreateVehicleOP ( gVehicles [ veh_id - 1 ] [ vModel ], gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ], gVehicles [ veh_id - 1 ] [ veA ], gVehicles [ veh_id - 1 ] [ vCol1 ], gVehicles [ veh_id - 1 ] [ vCol2 ], 600_000 ) ;
				print("create fraction vehicle spawn");

				VehPos[veh_id][0]=gVehicles [ veh_id - 1 ] [ veX ];
				VehPos[veh_id][1]=gVehicles [ veh_id - 1 ] [ veY ];
				VehPos[veh_id][2]=gVehicles [ veh_id - 1 ] [ veZ ];
				VehPos[veh_id][3]=gVehicles [ veh_id - 1 ] [ veA ];
				VehHealth[veh_id]=1000.0;
				VehTime[veh_id]=5;

				// gVehicles[veh_id-1][vEngine] = false;
				gVehicles[veh_id-1][vLamp] = false;
				gVehicles[veh_id-1][vHealth] = 1000.0;
				gVehicles[veh_id-1][vDrived] = 0.0;

				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh_id, false, lights, alarm, doors, bonnet, boot, objective);

				new fractionid = gVehicles[veh_id-1][vFraction];

				if(fractionid == 12 || fractionid == 13 || fractionid == 15 || fractionid == 17 || fractionid == 18 || fractionid == 5 || fractionid == 6 || fractionid == 14 || fractionid == 23)
				{
					SetVehicleNumberPlate(veh_id-1, "[ БЕЗ НОМЕРА ]");
				}

				if(fractionid == 0 || fractionid == 1 || fractionid == 2 || fractionid == 3 || fractionid == 4 || fractionid == 7 || fractionid == 8 || fractionid == 9 || fractionid == 10
				|| fractionid == 11 || fractionid == 16 || fractionid == 19 || fractionid == 20 || fractionid == 21 || fractionid == 22 || fractionid == 25 || fractionid == 26)
				{
					new Random1[2], string[128];

					Random1[0] = random(99);
					Random1[1] = random(99);

					format(string,128, "%d-GOS-%d", Random1[0], Random1[1]);
					SetVehicleNumberPlate(veh_id-1, string);
				}
				new sql_string[250];
				format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_pos_x` = '%f',`f_c_pos_y` = '%f',`f_c_pos_z` = '%f',`f_c_pos_a` = '%f' WHERE `f_c_id` = '%d'",
				gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ], gVehicles [ veh_id - 1 ] [ veA ],
				gVehicles [ veh_id - 1 ] [ vInc ] );
				mysql_pquery(connects, sql_string, "", "");
				printf(sql_string);


				SendSucc(playerid, "Место спавна автомобиля успешно изменено");
				ShowPlayerDialog(playerid,dEditVehicle,DIALOG_STYLE_LIST,""neworange"Управление автомобилем фракции","Сменить место спавна автомобиля\nИзменить модель автомобиля","Выбрать","Назад");
			}
			else
			{
				if ( GetPlayerState ( playerid ) != 2 )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
				if ( gVehicles[ GetPlayerVehicleID ( playerid ) - 1 ] [ vFraction ] != p_info [ playerid ] [ tMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей банды" ) ;
				if ( GetVehicleModel ( GetPlayerVehicleID ( playerid ) ) == 482 ) return SendErr ( playerid, "Вы не можете сменить модель данного автомобиля" ) ;

				new m_param ;
				if ( IsAGang ( playerid ) )m_param = 0 ;
				else if ( ISAMAFIA ( playerid ) )m_param = 1 ;
				else if ( IsAMedic ( playerid ) )m_param = 2 ;
				else if ( IsACop ( playerid ) )m_param = 3 ;
				else if ( p_info [ playerid ] [ tMember ] == 23 )m_param = 4 ;
				new line_string [ 78 ] ;

				stringer[0] = EOS;
				for ( new j = 0; j < 15; j ++ )
				{
					if ( model_change [ m_param ] [ j ] == 0 ) break ;
					format ( line_string, 78, "- %s | цена: %d\n", VehicleNames [ model_change [ m_param ] [ j ] - 400 ], model_change [ m_param ] [ j ] * 1000 ) ;
					strcat(stringer, line_string ) ;
				}
				ShowPlayerDialog(playerid,dModelEdit,DIALOG_STYLE_LIST,"Модель автомобиля", stringer, "Купить", "Закрыть");
			}
			return 1 ;
		}
		case dModelEdit:
		{
			if ( ! response )return ShowPlayerDialog(playerid,dEditVehicle,DIALOG_STYLE_LIST,""neworange"Управление автомобилем фракции","Сменить место спавна автомобиля\nИзменить модель автомобиля","Выбрать","Назад");
			new veh_id = GetPlayerVehicleID ( playerid ) ;
			if ( veh_id == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
			if ( gVehicles[ veh_id - 1 ] [ vFraction ] != p_info [ playerid ] [ tMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей банды" ) ;
			new m_param ;
			if ( IsAGang ( playerid ) )m_param = 0 ;
			else if ( ISAMAFIA ( playerid ) )m_param = 1 ;
			else if ( IsAMedic ( playerid ) )m_param = 2 ;
			else if ( IsACop ( playerid ) )m_param = 3 ;
			else if ( p_info [ playerid ] [ tMember ] == 23 )m_param = 4 ;
			if ( p_info [ playerid ] [ pCash ] < model_change [ m_param ] [ listitem ] * 1000 ) return SendErr ( playerid, "У Вас не достаточно денег");

			gVehicles [ veh_id - 1 ] [ vModel ] = model_change [ m_param ] [ listitem ] ;
			TransferMoney(playerid,p_info[playerid][pCash]-model_change [ m_param ] [ listitem ] * 1000,model_change [ m_param ] [ listitem ] * 1000,"заплатил в диалоге dModelEdit");
			p_info [ playerid ] [ pCash ] -= model_change [ m_param ] [ listitem ] * 1000 ;
			UpdateMoney ( playerid ) ;

			DestroyVehicleOP ( veh_id ) ;
			gVehicles [ veh_id - 1 ] [ vID ] = INVALID_VEHICLE_ID ;
			gVehicles [ veh_id - 1 ] [ vID ] = CreateVehicleOP ( gVehicles [ veh_id - 1 ] [ vModel ], gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ], gVehicles [ veh_id - 1 ] [ veA ], gVehicles [ veh_id - 1 ] [ vCol1 ], gVehicles [ veh_id - 1 ] [ vCol2 ], 600_000 ) ;
			print("create fraction vehicle spawn 2");

			VehPos[veh_id][0]=gVehicles [ veh_id - 1 ] [ veX ];
			VehPos[veh_id][1]=gVehicles [ veh_id - 1 ] [ veY ];
			VehPos[veh_id][2]=gVehicles [ veh_id - 1 ] [ veZ ];
			VehPos[veh_id][3]=gVehicles [ veh_id - 1 ] [ veA ];
			VehHealth[veh_id]=1000.0;
			VehTime[veh_id]=5;

			///gVehicles[veh_id-1][vEngine] = false;
			gVehicles[veh_id-1][vLamp] = false;
			gVehicles[veh_id-1][vHealth] = 1000.0;
			gVehicles[veh_id-1][vDrived] = 0.0;

			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, false, lights, alarm, doors, bonnet, boot, objective);

			new fractionid = gVehicles[veh_id-1][vFraction];
			if(fractionid == 12 || fractionid == 13 || fractionid == 15 || fractionid == 17 || fractionid == 18 || fractionid == 5 || fractionid == 6 || fractionid == 14 || fractionid == 23)
			{
				SetVehicleNumberPlate(veh_id-1, "[ БЕЗ НОМЕРА ]");
			}
			if(fractionid == 0 || fractionid == 1 || fractionid == 2 || fractionid == 3 || fractionid == 4 || fractionid == 7 || fractionid == 8 || fractionid == 9 || fractionid == 10
			|| fractionid == 11 || fractionid == 16 || fractionid == 19 || fractionid == 20 || fractionid == 21 || fractionid == 22 || fractionid == 25 || fractionid == 26)
			{
				new Random1[2], string[128];
				Random1[0] = random(99);
				Random1[1] = random(99);
				format(string,128, "%d-GOS-%d", Random1[0], Random1[1]);
				SetVehicleNumberPlate(veh_id-1, string);
			}

			SendSucc(playerid, "Модель автомобиля успешно изменена");
			ShowPlayerDialog(playerid,dEditVehicle,DIALOG_STYLE_LIST,""neworange"Управление автомобилем фракции","- Сменить место спавна автомобиля\n - Изменить модель автомобиля","Выбрать","Назад");


			new sql_string[200];
			format(sql_string, 200, "UPDATE `fr_vehicles` SET `f_c_model` = '%d' WHERE `f_c_id` = '%d'",
			gVehicles [ veh_id - 1 ] [ vModel ], gVehicles [ veh_id - 1 ] [ vInc ] );
			mysql_pquery(connects, sql_string, "", "");
			return 1 ;
		}

		case dLeaderRank:
		{
			if(!response) return DeletePVar(playerid,"leader_rank");
			if(!p_info[playerid][tMember]) return 1;
			new select_listitem = GetPVarInt(playerid,"leader_rank");
			new who_update[32];
			if ( select_listitem == 1 ) f_info [ p_info[playerid][tMember] ] [ f_rank_invite ] = listitem + 1, who_update = "f_rank_invite";
			else if ( select_listitem == 2 ) f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ] = listitem + 1, who_update = "f_rank_uninvite";
			else if ( select_listitem == 3 ) f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ] = listitem + 1, who_update = "f_rank_giverank";
			else return true;

			new msql_set[312];
			format(msql_set, 312, "UPDATE `fractions` SET `%s` = '%d' WHERE `f_id` = '%d'", who_update, listitem + 1, f_info [ p_info[playerid][tMember] ] [ f_id ] ) ;
			mysql_pquery(connects,msql_set,"","");
			//SaveFrac(playerid);
			DeletePVar(playerid,"leader_rank");
			pc_cmd_lmenu(playerid);
			return 1;
		}
		case dSpawnCars:
		{
			if(!response) return 1;
			for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
			{
				if(gVehicles[i-1][vFraction] != listitem) continue;
				if(IsVehicleOccupied(i)) continue;
				SetVehicleToRespawn(i);
			}
			format(stringer,96,"%s заспавнил машины для фракции '%s'", NamePlayer[playerid],f_info[listitem][f_name]);
			AdmMes(CADMIN_INFO, stringer, 1);//
			return 1;
		}
		case dUnit:
		{
			if(!response) return 1;

			switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid,dCreateUnit,DIALOG_STYLE_INPUT,"{"#cWHITE"}Создание подразделения", "{"#cWHITE"}\n \tИспользуйте название подразделения\t \n", "Ввод", "Закрыть");
					default:
					{
						SetPVarInt(playerid,"unit_listitem", listitem - 1);
						if(strlen(unit_name[p_info[playerid][tMember]-1][listitem-1])) ShowPlayerDialog(playerid,dEditUnit,DIALOG_STYLE_LIST,unit_name[p_info[playerid][tMember]-1][listitem-1],"{"#cWHITE"}Изменить имя подразделения\n{"#cWHITE"}Назначить лидера подразделения", "Выбрать","Закрыть");
					}
				}

			return 1;
		}//unit_leader
		case dEditUnit:
		{
			if(!response) return DeletePVar(playerid,"unit_listitem");
			switch(listitem)
				{
					case 0:
						ShowPlayerDialog(playerid,dEditNameUnit,DIALOG_STYLE_INPUT, "{"#cWHITE"}Изменение имени подразделения", "\n \t{"#cWHITE"}Используйте новое имя подразделения\t \n", "Ввод", "Закрыть");
					case 1:
						ShowPlayerDialog(playerid,dMakeUnitLeader,DIALOG_STYLE_INPUT, "{"#cWHITE"}Назначение лидера подразделения", "\n \t{"#cWHITE"}Используйте {ff0000}ник{"#cWHITE"} лидера подразделения\t \n", "Ввод", "Закрыть");
				}
			return 1;
		}
		case dMakeUnitLeader:
		{
			if(!response) return DeletePVar(playerid,"unit_listitem");
			new name_leader[24];
			if (sscanf(inputtext,"s[24]", name_leader)) return ShowPlayerDialog(playerid,dMakeUnitLeader,DIALOG_STYLE_INPUT, "{"#cWHITE"}Назначение лидера подразделения", "\n \t{"#cWHITE"}Используйте {ff0000}ник{"#cWHITE"} лидера подразделения\t \n", "Ввод", "Закрыть");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			foreach(i)
			{
				if(!strcmp(NamePlayer[i],inputtext))
				{
					if(PlayerToPoint(10.0,i,X,Y,Z))
					{
						if(p_info[i][tMember] != p_info[playerid][tMember]) return SendErr(playerid, "Игрок не состоит в вашей организации");
						if(p_info[i][pSubLeader]) return SendErr(playerid, "Игрок состоит в подразделении");
						new f = p_info[playerid][tMember]-1;
						new p = GetPVarInt(playerid,"unit_listitem");
						strmid(unit_leader[f][p],name_leader,0,strlen(name_leader),MAX_PLAYER_NAME);
						format(stringer,156,"[P] {"#cWHITE"}%s {"#cINFO"} назначил лидером подразделения {"#cWHITE"}%s {"#cINFO"}сотрудника {"#cWHITE"}%s",NamePlayer[playerid],unit_name[f][p],unit_leader[f][p]);
						SendFamilyMessage(p_info[playerid][tMember], CINFO, stringer);
						p_info[i][pSubLeader] = p + 1;
						UpdatePlayerData(i,"pSubLeader",p_info[i][pSubLeader]);
						SaveUnit(f, p);
					}
					else SendErr(playerid, "Игрок не рядом с вами");
					return 1;
				}
			}
			SendErr(playerid, "Игрок не рядом с вами");
			DeletePVar(playerid,"unit_listitem");
			return 1;
		}
		case dEditNameUnit:
		{
			if(!response) return DeletePVar(playerid,"unit_listitem");
			if (!(strlen(inputtext)) || (strlen(inputtext)) >31) return ShowPlayerDialog(playerid,dEditNameUnit,DIALOG_STYLE_INPUT, "{"#cWHITE"}Изменение имени подразделения", "{"#cWHITE"}\n \tИспользуйте новое имя подразделения\t \n", "Ввод", "Закрыть");
			new f=p_info[playerid][tMember]-1;
			new p=GetPVarInt(playerid,"unit_listitem");
			strmid(unit_name[f][p],inputtext,0,strlen(inputtext),32);
			SendClientMessage(playerid,CGREEN,"Имя успешно изменено!");
			SaveUnit(f,p);
			pc_cmd_unit(playerid);
			DeletePVar(playerid,"unit_listitem");
			return 1;
		}
		case dCreateUnit:
		{
			if(!response) return 1;
			if (!(strlen(inputtext)) || (strlen(inputtext)) >31) return ShowPlayerDialog(playerid,dCreateUnit,DIALOG_STYLE_INPUT,"{"#cWHITE"}Создание подразделения", "{"#cWHITE"}\n \tИспользуйте название подразделения\t \n", "Ввод", "Закрыть");

			for(new i=0; i<MAX_UNITS; i++)
			{
				if (!strlen(unit_name[p_info[playerid][tMember]-1][i]))
				{
					new f=p_info[playerid][tMember]-1;
					mysql_query_string[0] = EOS;
					format(mysql_query_string,512,"INSERT INTO `unit_settings`(`fracid`, `subid`, `unit_name`) VALUES ('%i','%i','%s')",f,i,inputtext);
					new Cache:result = mysql_query(connects,mysql_query_string);
					unit_inc[f][i]=cache_insert_id();
					strmid(unit_name[f][i],inputtext,0,strlen(inputtext),32);
					format(stringer,68,"Вы создали подразделение: {ff0000}%s",unit_name[f][i]);
					SendClientMessage(playerid,-1,stringer);
					SendClientMessage(playerid,CBLUE,"Управление: {"#cWHITE"}/unit");
					cache_delete(result);
					return 1;
				}
			}
			SendClientMessage(playerid,COLOR_GREY,"Ошибка. Создать больше подразделений нельзя");
			return 1;
		}
		case 22115:
		{
			new veh = GetPVarInt(playerid,"veh");
			if(!response)
			{
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
				MeAction(playerid,"закрыл(а) багажник");
				DeletePVar(playerid,"veh");
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid,"tipster"))
					{
						SCM(playerid,COLOR_GREY, "У вас уже есть жучок");
						MeAction(playerid,"закрыл(а) багажник");
						new engine, lights, alarm, doors, bonnet, boot, objective;
						GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
						return 1;
					}
					SendClientMessage(playerid,CINFO, "Вы взяли {"#cWHITE"}1{"#cINFO"} жучок  Для использования Используйте {"#cWHITE"}/tipster");
					SetPVarInt(playerid,"tipster", true);
					MeAction(playerid,"взял(а) жучок");
				}
			}
			MeAction(playerid,"закрыл(а) багажник");
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);

			DeletePVar(playerid,"veh");
			return 1;
		}
		case 9217:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					stringer = "{"#cWHITE"}";
					for(new i = 0; i < MAX_VOTES; i++)
					{
						if(strlen(vote_name[i]))
						{
							format(stringer, 430, "%s%i. %s (%i голосов)\n", stringer, i+1, vote_name[i],vote_count[i]);
						}
						else format(stringer,430,"%s%i. -\n",stringer, i+1);
					}
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Список кандитатов",stringer,"Закрыть","");
				}
				case 1:
				{
					for(new i = 0; i < MAX_VOTES; i++)
					{
						if(!strlen(vote_name[i]))
						{
							SetPVarInt(playerid,"vote_slot", i);
							ShowPlayerDialog(playerid,9217 + 1, DIALOG_STYLE_INPUT, "{"#cWHITE"}Добавление кандитата", "{"#cWHITE"}Используйте имя кандитата","Ввод","Отмена");
							return 1;
						}
					}
					SCM(playerid,COLOR_GREY,"Достигнут лимит кандитатов");
				}
				case 2:
				{
					stringer[0] = EOS;
					for(new i = 0; i < MAX_VOTES; i++)
					{
						if(strlen(vote_name[i]))
						{
							format(stringer,480, "%s%s\n",stringer,vote_name[i]);
						}
						else strcat(stringer,"-\n");
					}
					if(!strlen(stringer)) return SCM(playerid,COLOR_GREY,"Кандитатов нет");
					ShowPlayerDialog(playerid,9217 + 3, DIALOG_STYLE_LIST, "{"#cWHITE"}Удаление кандитата", stringer, "Выбрать", "Закрыть");
				}
				case 3:
				{
					new win_count = 0;
					new win_slot = 0;
					for(new i = 0; i < MAX_VOTES; i++)
					{
						if(strlen(vote_name[i]))
						{
							if(vote_count[i] > win_count)
							{
								win_count = vote_count[i];
								win_slot = i;
								mysql_query_string[0] = EOS;
								format(mysql_query_string,70,"DELETE FROM `vote` WHERE `vote_name` = '%s'",vote_name[i]);
								mysql_pquery(connects, mysql_query_string, "", "");
								vote_count[i] = 0;
							}
						}
					}
					format(stringer, 144, "[Гос.Новости] %s [%d]: Уважаемые жители штата", NamePlayer[playerid], playerid);
					SendClientMessageToAll(0x4466ccff, stringer);
					format(stringer, 144, "[Гос.Новости] %s [%d]: Выборы окончены. Новый президент штата: %s (%i голосов)", NamePlayer[playerid], playerid, vote_name[win_slot], win_count);
					SendClientMessageToAll(0x4466ccff, stringer);
					format(stringer, 144, "[Гос.Новости] %s [%d]: Спасибо за внимание", NamePlayer[playerid], playerid);
					SendClientMessageToAll(0x4466ccff, stringer);
					foreach(i)
					{
						if(GetPVarInt(i,"pGolos")) DeletePVar(i,"pGolos");
					}
					mysql_pquery(connects, "UPDATE `accounts` SET `pGolos` = '0'", "", "");
					for(new i = 0; i < MAX_VOTES; i++)
					{
						if(strlen(vote_name[i]))
						{
							strmid(vote_name[i],"",strlen(""),MAX_PLAYER_NAME);
						}
					}
				}
			}
			return 1;
		}
		case 9217 + 3:
		{
			if(!response) return 1;
			if(!strcmp(inputtext,"-")) return 1;
			format(stringer, 52, "Вы убрали %s с выборов", vote_name[listitem]);
			SCM(playerid,CBADINFO,stringer);
			mysql_query_string[0] = EOS;
			format(mysql_query_string,67,"DELETE FROM `vote` WHERE `vote_name` = '%s'",vote_name[listitem]);
			mysql_pquery(connects, mysql_query_string, "", "");
			strmid(vote_name[listitem],"",strlen(""),MAX_PLAYER_NAME);
			vote_count[listitem] = 0;
			return 1;
		}

		case 9217 + 1:
		{
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext)>23) return SCM(playerid,COLOR_GREY,"Ты че-то дохуя символов ввел или нихуя не ввел");
			new slot = GetPVarInt(playerid,"vote_slot");
			strmid(vote_name[slot],inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			format(stringer,128,"Вы добавили кандитата %s", inputtext);
			SendSucc(playerid,stringer);
			mysql_query_string[0] = EOS;
			format(mysql_query_string,350,"INSERT INTO `vote`(`vote_name`, `vote_count`) VALUES ('%s','%i')",vote_name[slot],vote_count[slot]);
			mysql_pquery(connects, mysql_query_string, "", "");
			DeletePVar(playerid,"vote_slot");
			return 1;//8016 - окончил
		}
		case 9271 + 2:
		{
			if(!response) return 1;
			if(!strlen(vote_name[listitem])) return SCM(playerid,COLOR_GREY,"Кандитат не назначен");
			vote_count[listitem]++;
			mysql_query_string[0] = EOS;
			format(mysql_query_string,128,"UPDATE `vote` SET `vote_count` = '%i' WHERE `vote_name` = '%s'",vote_count[listitem],vote_name[listitem]);
			mysql_pquery(connects, mysql_query_string, "", "");
			format(stringer,200,"Вы проголосовали за {"#cGREEN"}%s {"#cINFO"}Проголосовало: {"#cGREEN"}%i {"#cINFO"}человек",vote_name[listitem],vote_count[listitem]);
			SCM(playerid,CINFO,stringer);
			SCM(playerid,CPINK,"Благодарим за участие в голосовании");
			SetPVarInt(playerid,"pGolos", 1);
			UpdatePlayerData(playerid,"pGolos",GetPVarInt(playerid,"pGolos"));
			RemovePlayerAttachedObject(playerid,8);
			if(GetPVarInt(playerid,"anti_sbiv_time") <= unix) FIXES_ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
			DeletePVar(playerid,"vote");
			return 1;
		}
		case dStopLoad:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!vehicleid) return 1;
			if(gVehicleGun[vehicleid][vGunLoading] == false && gVehicleGun[vehicleid][vGunUnloading] == false) return 1;
			gVehicleGun[vehicleid][vGunLoading] = false;
			gVehicleGun[vehicleid][vGunUnloading] = false;
			if(IsValidDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText])) DestroyDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]);
			DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
			DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
			gVehicleGun[vehicleid][vGunArea] = 0;
			gVehicleGun[vehicleid][vGunPickup] = 0;
			SendClientMessage(playerid,CGREEN,"Загрузка / разгрузка завершена");
			//print ( "Itter_Remove(VehicleGun, vehicleid);" ) ;
			//SetTimerEx("Itter_OPDCInternal_VehicleGun", 0, false, "i", vehicleid);
			//Itter_Remove(VehicleGun, vehicleid);

			return 1;
		}
		case dGunPD:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:AC_GivePlayerWeapon(playerid,3,1);
				case 1:AC_GivePlayerWeapon(playerid,24,50);
				case 2:AC_GivePlayerWeapon(playerid,25,50);
				case 3:AC_GivePlayerWeapon(playerid,29,150);
				case 4:AC_GivePlayerWeapon(playerid,31,150);
				case 5:AC_SetPlayerArmour(playerid,100.0);
				case 6:
				{
					p_info[playerid][pShield] = 100.0;
					SetPlayerAttachedObjectEx(playerid, 6, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
					SendClientMessage(playerid, CWHITE, "У вас есть щит. Зажмите клавижу {33CCFF}Быстрого бега{"#cWHITE"} и клавишу {33CCFF}медленной ходьбы{"#cWHITE"} чтобы его использовать");
				}
			}
			stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nDesert Eagle\t50\nShotgun\t50\nMP5\t150\nM4\t150\nБронежилет\nЩит";
			ShowPlayerDialog(playerid,dGunPD,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
			return 1;
		}
		case dGunFBI:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:AC_GivePlayerWeapon(playerid,3,1);
				case 1:AC_GivePlayerWeapon(playerid,24,50);
				case 2:AC_GivePlayerWeapon(playerid,25,50);
				case 3:AC_GivePlayerWeapon(playerid,29,150);
				case 4:AC_GivePlayerWeapon(playerid,31,150);
				case 5:AC_GivePlayerWeapon(playerid,34,30);
				case 6:AC_SetPlayerArmour(playerid,100.0);
			}
			stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nDesert Eagle\t50\nShotgun\t50\nMP5\t150\nM4\t150\nSniper Rifle\t30\nБронежилет";
			ShowPlayerDialog(playerid,dGunFBI,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
			return 1;
		}
		case dGunAP:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:AC_GivePlayerWeapon(playerid,3,1);
				case 1:AC_GivePlayerWeapon(playerid,23,50);
				case 2:AC_GivePlayerWeapon(playerid,29,150);
				case 3:AC_SetPlayerArmour(playerid,100.0);
			}
			stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nSilenced Pistol\t50\nMP5\t150\nБронежилет";
			ShowPlayerDialog(playerid,dGunAP,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
			return 1;
		}
		case dKrup:
		{
			if(!response) return 1;
			SCM(playerid,-1,(GetPVarInt(playerid,"krup")) ? ("Вы закончили свою работу крупье") : ("Вы устроились на работу крупье. С каждой игры вам будет идти {"#cRED"}процент"));
			if(!GetPVarInt(playerid,"krup"))
			{
				SetPVarInt(playerid,"oldskinkrup",GetPlayerSkin(playerid));
				SCM(playerid,CINFO,"Чтобы сделать ставку, подойдите к столу и нажмите {"#cPINK"}'H'{"#cINFO"}. После чего Используйте значение ставки");
			}
			new skin_fix = (p_info[playerid][pSex] == 1) ? (171) : (194);
			SetPlayerSkin(playerid,(GetPVarInt(playerid,"krup")) ? (GetPVarInt(playerid,"oldskinkrup")) : (skin_fix));
			SetPVarInt(playerid,"krup",(GetPVarInt(playerid,"krup")) ? (false) : (true));
			return 1;
		}
		case dExamResult:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"pExamCandidate")-1;
			if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
			else if(!listitem)
			{
				if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
				format(stringer,200,"%s экзамен:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",NamePlayer[actplayerid]);
				ShowPlayerDialog(playerid,dExamResult,2,"Экзамен",stringer,"OK","Отмена");
			}
			else if(listitem == 1)
			{
				Lic[actplayerid][0] = 1;
				SendClientMessage(actplayerid,CGREEN,"Поздравляем. Вы сдали экзамен");
				SendClientMessage(playerid,CGREEN,"Экзамен завершен");

				DeletePVar(actplayerid,"pWaitingExam");
				DeletePVar(playerid,"pExamCandidate");

				if(QuestStep[0][actplayerid]==6)
				{
					ShowPlayerDialog(actplayerid,0000,0," ", "{AFAFAF}Вы успешно выполнили это задание, теперь отправляйтесь к Джону за наградой\n", "Ок", "");
					QuestStep[0][actplayerid] = 7;
					SendClientMessage(actplayerid, -1, "Вы успешно выполнили это задание, следить за квестами можно через команду {"#cRED"}( /quest )");
					UpdatePlayerQuestStep(actplayerid);
				}
			}
			else if(listitem == 2)
			{
				SendClientMessage(actplayerid,CBADINFO,"Вы провалили экзамен");
				SendClientMessage(playerid,CGREEN,"Экзамен завершен");

				DeletePVar(actplayerid,"pWaitingExam");
				DeletePVar(playerid,"pExamCandidate");
			}
			UpdateLicenses(actplayerid);
			return 1;
		}
		case dExamResult1:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"pExamCandidate1")-1;
			if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Тестируемый вышел. Тест завершен");
			else if(!listitem)
			{
				if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Тестируемый вышел. Тест завершен");
				format(stringer,200,"%s тест:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",NamePlayer[actplayerid]);
				ShowPlayerDialog(playerid,dExamResult1,2,"Тест",stringer,"OK","Отмена");
			}
			else if(listitem == 1)
			{
				new bizid = p_info[actplayerid][pPbiskey]-1;
				Business[bizid][bLicenses] = 1;
				UpdateOtherBusiness(bizid);
				SendClientMessage(actplayerid,CGREEN,"Поздравляем. Вы сдали тест");
				SendClientMessage(playerid,CGREEN,"Тест завершен");

				DeletePVar(actplayerid,"pWaitingExam1");
				DeletePVar(playerid,"pExamCandidate1");
			}
			else if(listitem == 2)
			{
				SendClientMessage(actplayerid,CBADINFO,"Вы провалили тест");
				SendClientMessage(playerid,CGREEN,"Тест завершен");

				DeletePVar(actplayerid,"pWaitingExam1");
				DeletePVar(playerid,"pExamCandidate1");
			}
			return 1;
		}
		case dExamResult2:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"pExamCandidate2") - 1;
			if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Тестируемый вышел. Тест завершен");
			else if(!listitem)
			{
				if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Тестируемый вышел. Тест завершен");
				format(stringer,200,"%s тест:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",NamePlayer[actplayerid]);
				ShowPlayerDialog(playerid,dExamResult1,2,"Тест",stringer,"OK","Отмена");
			}
			else if(listitem == 1)
			{
				Lic[actplayerid][3] = 1;
				SendClientMessage(actplayerid,CGREEN,"Поздравляем. Вы сдали тест");
				SendClientMessage(playerid,CGREEN,"Тест завершен");

				DeletePVar(actplayerid,"pWaitingExam2");
				DeletePVar(playerid,"pExamCandidate2");
			}
			else if(listitem == 2)
			{
				SendClientMessage(actplayerid,CBADINFO,"Вы провалили тест");
				SendClientMessage(playerid,CGREEN,"Тест завершен");

				DeletePVar(actplayerid,"pWaitingExam2");
				DeletePVar(playerid,"pExamCandidate2");
			}
			UpdateLicenses(actplayerid);
			return 1;
		}
		case dAutoExam1:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
			strcat(stringer,"Общие положения:\n");
			strcat(stringer,"1.Разрешенная скорость передвижения для т/с, по городу - 60 км/ч, за городом - 110 км/ч, на автомагистралях - 150 км/ч.\n");
			strcat(stringer,"2.При необходимости, водитель обязан пропустить т/с со спец.сигналом (Полиция,Служба спасения,Скорая помощь) , а именно: постепенно снижая скорость, прижаться к обочине.\n");
			strcat(stringer,"3.Перекрестки в штате являются нерегулируемыми. Разрешается проезд на запрещающие сигналы светофора.\n");
			strcat(stringer,"4.По требованию работника правоoхранительных органов, водитель обязан остановиться и выполнить все перечисленные требования сотрудника правоохранительных органов.\n");
			strcat(stringer,"5.В случае возникновения ДТП(Дорожно-транспортного происшествия) водитель обязан: \n");
			strcat(stringer,"  а) оставаться на месте ДТП;\n");
			strcat(stringer,"  б) Вызвать сотрудников правоохоранительных органов;\n");
			strcat(stringer,"  в) Вызвать сотрудников скорой помощи, если того требует ситуация.\n");
			strcat(stringer,"6.Водитель обязан пропускать пешеходов, в специальных местах для перехода (перекрестки, специальная разметка).\n");
			strcat(stringer,"7.Водитель обязан осуществлять парковку транспортного средства только на стоянках, либо на обочине, заезжая при этом только 2-мя колесами.\n");
			strcat(stringer,"Запрещается:\n");
			strcat(stringer,"1. Выезд на полосу встречного движения при очевидной угрозе лобового столкновения.\n");
			strcat(stringer,"2. Экстренное торможение без везкой причины, в случае возникновения поломки т/с, по мере возможности Вам следует:\n");
			strcat(stringer," а) прижаться к обочине;\n");
			strcat(stringer," б) включить сигнал, оповещающий об аварийной ситуации.\n");
			strcat(stringer,"3.Обгон впереди движущегося т/с с правой стороны,обгон разрешен лишь в случае поворота впереди движущегося т/с.\n");
			strcat(stringer,"4.Нарушение установленного скоростного лимита.\n");
			strcat(stringer,"5.Управление транспортным средством в нетрезвом виде.\n");
			strcat(stringer,"6. Разворот в туннелях строго запрещен.\n");
			strcat(stringer,"7. Движение транспортного средства задним ходом разрешается при условии, что этот маневр будет безопасен и не создаст помех другим участникам движения.\n");
			strcat(stringer,"При необходимости водитель должен прибегнуть к помощи других лиц.\n");
			strcat(stringer,"8. На автомагистралях запрещается: движение задним ходом и учебная езда.\n");
			ShowPlayerDialog(playerid,dAutoExam2,0,"Школа вождения",stringer,"Далее","Отмена");
			return 1;
		}
		case dAutoExam2:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			ShowPlayerDialog(playerid,dAutoExam3,0,"Школа вождения","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 5 вопросов","Далее","Отмена");
			return 1;
		}
		case dAutoExam3:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			ShowTestQuestion(playerid,0,5,dAutoTest1);
			return 1;
		}
		case dAutoTest1:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,0,2,dAutoTest1,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален"),DeletePVar(playerid,"AutoExam");
			ShowTestQuestion(playerid,5,10,dAutoTest2);
			return 1;
		}
		case dAutoTest2:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,2,4,dAutoTest2,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален"),DeletePVar(playerid,"AutoExam");
			ShowTestQuestion(playerid,10,15,dAutoTest3);
			return 1;
		}
		case dAutoTest3:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,4,6,dAutoTest3,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален"),DeletePVar(playerid,"AutoExam");
			ShowTestQuestion(playerid,15,20,dAutoTest4);
			return 1;
		}
		case dAutoTest4:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,6,8,dAutoTest4,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален"),DeletePVar(playerid,"AutoExam");
			ShowTestQuestion(playerid,20,25,dAutoTest5);
			return 1;
		}
		case dAutoTest5:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,8,12,dAutoTest5,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален"),DeletePVar(playerid,"AutoExam");
			ShowPlayerDialog(playerid,dAutoTest6,0,"Школа вождения", "{"#cWHITE"}\t\tВыберите вариант получения прав: \t \n\n\t{"#cINFO"}1){"#cWHITE"} С помощью инструктора\n\t{"#cINFO"}2){"#cWHITE"} Автоматически {"#cGREEN"}300$", "1", "2");
			return 1;
		}
		case dAutoTest6:
		{
			if(!response)
			{

				if(p_info[playerid][pCash] < 300)
				{
					SendClientMessage(playerid,COLOR_GREY,"У вас нет {"#cGREEN"}300$");
					ShowPlayerDialog(playerid,dAutoTest6,0,"Школа вождения", "{"#cWHITE"}\t\tВыберите вариант получения прав: \t \n\n\t{"#cINFO"}1){"#cWHITE"} С помощью инструктора\n\t{"#cINFO"}2){"#cWHITE"} Автоматически {"#cGREEN"}300$", "1", "2");
					DeletePVar(playerid,"AutoExam");
					DeletePVar(playerid,"LessonSlot");
					return 1;
				}
				SCM(playerid,CGREEN,"Поздравляем, Вы сдали тест. Вы выбрали автоматическую сдачу экзамена");
				SCM(playerid,CGREEN,"Садитесь в учебный автомобиль, и проходите тест.");
				AC_SetPlayerPos(playerid,AutoCP[0][0],AutoCP[0][1],AutoCP[0][2]);
				SetPlayerFacingAngle(playerid,104.0143);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,0);
				TransferMoney(playerid,p_info[playerid][pCash]-300,300,"заплатил за сдачу прав.");
				p_info[playerid][pCash] -= 300;
				UpdateMoney(playerid);
			}
			else
			{
				if(gDSTurn[19] != INVALID_PLAYER_ID)
				{
					SendClientMessage(playerid,COLOR_GREY,"К сожалению все места в очереди заняты");
					ShowPlayerDialog(playerid,dAutoTest6,0,"Школа вождения", "{"#cWHITE"}\t\tВыберите вариант получения прав: \t \n\n\t{"#cINFO"}1){"#cWHITE"} С помощью инструктора\n\t{"#cINFO"}2){"#cWHITE"} Автоматически {"#cGREEN"}500$", "1", "2");
					DeletePVar(playerid,"AutoExam");
					DeletePVar(playerid,"LessonSlot");
					return 1;
				}
				for(new i=19;i>=0;i--)
				{
					if(gDSTurn[i] == playerid)
					{
						SendClientMessage(playerid,COLOR_GREY,"Вы уже стоите в очереди");
						DeletePVar(playerid,"AutoExam");
						DeletePVar(playerid,"LessonSlot");
						return 1;
					}
					if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
					gDSTurn[i+1] = playerid;
					break;
				}
				SCM(playerid,CGREEN,"Поздравляем, Вы сдали тест. Ждите, Вас Вызовут для прохождения экзамена.");
				SCM(playerid,CGREEN,"Не Выходите из автошколы");
			}
			SetPVarInt(playerid,"WaitExam", true);
			SetPVarInt(playerid,"ExamType", response + 1);
			SetPVarInt(playerid,"pWaitingExam", true);
			DeletePVar(playerid,"AutoExam");
			DeletePVar(playerid,"LessonSlot");
			return 1;
		}
		case dGiveLic:
		{
			if(!response) return DeletePVar(playerid,"givelic");
			new acter = GetPVarInt(playerid,"givelic");
			if(Lic[acter][listitem + 1] != 0) return SCM(playerid,-1,"У игрока уже есть эта лицензия");
			switch(listitem)
			{
				case 0:
				{
					if(p_info[acter][pCash] < 20000) return SendErr(playerid,"У игрока нет столько денег.");
					format(stringer, 128, "Вы предложили {"#cWHITE"}%s {"#cBLUE"} купить лицензию пилота",NamePlayer[acter]);
					SendClientMessage(playerid,CBLUE,stringer);

					format(stringer, 255, "{"#cWHITE"}%s {"#cBLUE"} предлагает вам купить лицению на пилота за {"#cWHITE"}20.000$\n{"#cBLUE"}Для покупки нажмите {"#cWHITE"}'Да'{"#cBLUE"} иначе {"#cWHITE"}'Нет'",NamePlayer[playerid]);
					ShowPlayerDialog(acter,dGiveLic2,DIALOG_STYLE_MSGBOX,""ORG"Покупка лицензии",stringer,"Да", "Нет");
				}
				case 1:
				{
					if(p_info[acter][pCash] < 10000) return SendErr(playerid,"У игрока нет столько денег.");
					format(stringer, 128, "Вы предложили {"#cWHITE"}%s {"#cBLUE"} купить лицензию водного транспорта",NamePlayer[acter]);
					SendClientMessage(playerid,CBLUE,stringer);

					format(stringer, 255, "{"#cWHITE"}%s {"#cBLUE"} предлагает вам купить лицению на водный транспорт за {"#cWHITE"}10.000$\n\
							{"#cBLUE"}Для покупки нажмите {"#cWHITE"}'Да'{"#cBLUE"} иначе {"#cWHITE"}'Нет'",NamePlayer[playerid]);
					ShowPlayerDialog(acter,dGiveLic2,DIALOG_STYLE_MSGBOX,""ORG"Покупка лицензии",stringer,"Да", "Нет");
				}
			}
			SetPVarInt(acter,"givelic2",listitem);
			SetPVarInt(acter,"givelic2p",playerid);
			DeletePVar(playerid,"givelic");
			return 1;
		}
		case dGiveLic2:
		{
			new idd = GetPVarInt(playerid,"givelic2p");
			new switem = GetPVarInt(playerid,"givelic2");
			if(!response)
			{
				SendClientMessage(playerid,CRED,"Вы отказались от предложения");
				SendClientMessage(idd,CRED,"Игрок отказался от предложения");
			}
			else
			{
				switch(switem)
				{
					case 0:
					{
						SendClientMessage(playerid,CGREEN,"Вы купили {"#cWHITE"}лицензию пилота {"#cGREEN"}за {"#cWHITE"}20.000$");
						SendClientMessage(playerid,-1,"Для просмотра лицензий Используйте /licenses");

						format(stringer, 128,"%s {"#cGREEN"}купил {"#cWHITE"}лицензию пилота {"#cGREEN"}за {"#cWHITE"}20.000$", NamePlayer[playerid]);
						SendClientMessage(idd,-1,stringer);

						TransferMoney(playerid,p_info[playerid][pCash]-20000,20000,"заплатил за сдачу лицензию пилота.");
						TransferMoney(idd,p_info[idd][pCash]+2000,2000,"получил деньги с того что продал лицензию пилота");
						p_info[playerid][pCash] -= 20000;
						p_info[idd][pCash] += 2000;

						Lic[playerid][1]=1;
					}
					case 1:
					{
						SendClientMessage(playerid,CGREEN,"Вы купили {"#cWHITE"}лицензию на водный транспорт {"#cGREEN"}за {"#cWHITE"}10.000$");
						SendClientMessage(playerid,-1,"Для просмотра лицензий Используйте /licenses");

						format(stringer, 128,"%s {"#cGREEN"}купил {"#cWHITE"}лицензию на водный транспорт {"#cGREEN"}за {"#cWHITE"}10.000$", NamePlayer[playerid]);
						SendClientMessage(idd,-1,stringer);

						TransferMoney(playerid,p_info[playerid][pCash]-10000,10000,"заплатил за сдачу лицензию пилота");
						TransferMoney(idd,p_info[idd][pCash]+1000,1000,"получил деньги с того что продал лицензию пилота");
						p_info[playerid][pCash] -= 10000;
						p_info[idd][pCash] += 1000;

						Lic[playerid][2]=1;
					}
				}

				UpdateMoney(idd);
				UpdateMoney(playerid);

				UpdateLicenses(playerid);
			}
			DeletePVar(playerid,"givelic2p");
			DeletePVar(playerid,"givelic2");
		}
		case dTakeLic:
		{
			if(!response) return DeletePVar(playerid,"takelic");
			new acter = GetPVarInt(playerid,"takelic");
			if(!IsPlayerStream(10.0, playerid, acter)) return SendErr(playerid, "Игрок не рядом с вами!");
			if(listitem < 4)
			{
				if(!Lic[acter][listitem]) return SCM(playerid,-1,"У игрока нет этой лицензии");
			}

			if(listitem >= 4)
			{
				switch(listitem)
				{
					case 4:
					{
						if(p_info[acter][pDrugs] == 0) return SCM(playerid,-1,"У игрока нет наркотиков");
						format(stringer, 128, "Вы забрали у игрока {"#cWHITE"}%s наркотики", NamePlayer[acter]);
						SCM(playerid, CINFO, stringer);
						format(stringer, 128, "У вас забрал наркотики сотрудник {"#cWHITE"}%s", NamePlayer[playerid]);
						SCM(acter, CINFO, stringer);
						p_info[acter][pDrugs] = 0;
					}
					case 5:
					{
						if(p_info[acter][pMats] == 0) return SCM(playerid,-1,"У игрока нет металла");
						format(stringer, 128, "Вы забрали у игрока {"#cWHITE"}%s наркотики", NamePlayer[acter]);
						SCM(playerid, CINFO, stringer);
						format(stringer, 128, "У вас забрал металл сотрудник {"#cWHITE"}%s", NamePlayer[playerid]);
						SCM(acter, CINFO, stringer);
						p_info[acter][pMats] = 0;
					}
					case 6:
					{
						if(p_info[acter][pPatron] == 0) return SCM(playerid,-1,"У игрока нет патрон");
						format(stringer, 144, "Вы забрали у игрока {"#cWHITE"}%s патроны", NamePlayer[acter]);
						SCM(playerid, CINFO, stringer);
						format(stringer, 144, "У вас забрал патроны сотрудник {"#cWHITE"}%s", NamePlayer[playerid]);
						SCM(acter, CINFO, stringer);
						p_info[acter][pPatron] = 0;
					}
				}

				DeletePVar(playerid,"takelic");
				return 1;
			}

			format(stringer, 128, "Вы забрали у игрока {"#cWHITE"}%s лицензию", NamePlayer[acter]);
			SCM(playerid, CINFO, stringer);
			format(stringer, 128, "У вас забрал лицензию сотрудник {"#cWHITE"}%s", NamePlayer[playerid]);
			SCM(acter, CINFO, stringer);
			Lic[acter][listitem]=0;
			UpdateLicenses(acter);
			DeletePVar(playerid,"takelic");
			return 1;
		}
		case dSpy:
		{
			if(!response) return 1;
			if(listitem == 0)
			{
				SetPlayerSkin(playerid, 78);
				SetPlayerColorAc(playerid, 0);
				SetPVarInt(playerid,"mask", 1);
				format(stringer, 128, "Вы скрылись в одежде фракции {"#cWHITE"}'%s'", f_info[0][f_name]);
				SCM(playerid,CINFO,stringer);
				SCM(playerid,CINFO,"Используйте {"#cWHITE"}/unmask {"#cINFO"}чтобы снять маскировку");
				return 1;
			}
			if(!strcmp(inputtext,"null")) return SCM(playerid,-1," ");
			stringer = "{"#cWHITE"}";
			for(new i = 0; i < 10; i++)
			{
				if(!fChangeSkin[listitem - 1][i]) continue;
				format(stringer, 1500, "%s%i\n",stringer,fChangeSkin[listitem - 1][i]);
			}
			ShowPlayerDialog(playerid, dSpy2, DIALOG_STYLE_LIST, "Выберите скин", stringer, "Выбрать", "Закрыть");
			SetPVarInt(playerid, "spy_member", listitem);
			return 1;
		}
		case dSpy2:
		{
			if(!response) return DeletePVar(playerid,"spy_member");
			new fraction = GetPVarInt(playerid,"spy_member");
			SetPlayerSkin(playerid,fChangeSkin[fraction - 1][listitem]);
			SetPlayerColorAc(playerid, fraction);
			SetPVarInt(playerid,"mask", fraction + 1);
			format(stringer, 128, "Вы скрылись в одежде фракции {"#cWHITE"}'%s'", f_info[fraction][f_name]);
			SCM(playerid,CINFO,stringer);
			SCM(playerid,CINFO,"Используйте {"#cWHITE"}/unmask {"#cINFO"}чтобы снять маскировку");
			DeletePVar(playerid,"spy_member");
			return 1;
		}
		case dEndTaxi:
		{
			if(!response) return 0;
			EndTaxi(playerid);
			return 1;
		}
		case dArendaTaxi:
		{
			if(!response)
			{
				AC_RemovePlayerFromVehicle(playerid);
				return 0;
			}
			if(p_info[playerid][pCash] < 200)
			{
				SCM(playerid,COLOR_GREY, "У вас не достаточно денег для аренды такси");
				AC_RemovePlayerFromVehicle(playerid);
				return 0;
			}
			SetPVarInt(playerid,"arendataxi", true);
			SendClientMessage(playerid, 0x9ACD32AA, "Для того, чтобы начать работу таксиста {"#cORANGE"}нажмите 2");
			GameTextForPlayer(playerid, "~r~-200$", 5000, 1);
			TransferMoney(playerid,p_info[playerid][pCash]-200,200,"арендовал такси");
			p_info[playerid][pCash] -= 200;
			UpdateMoney(playerid);
			return 1;
		}
		case dStartTaxi:
		{
			if(strlen(inputtext) <= 0 && response || strlen(inputtext) > 15 && response)
			{
				ShowPlayerDialog(playerid, dStartTaxi, DIALOG_STYLE_INPUT, "{"#cORANGE"}Название такси","{"#cWHITE"}Придумайте название для вашего такси\nМаксимальная длина 15 символов\n\nЕсли вы не хотите как то называться\nНажмите кнопку \"Пропустить\"","Далее","Пропустить");
				return 0;
			}
			SetPVarString(playerid,"taxiname",(!response) ? ("") : (inputtext));
			ShowPlayerDialog(playerid, dTaxi, DIALOG_STYLE_TABLIST_HEADERS, "{"#cORANGE"}Выберите тип вашего такси","Тип\tОписание{"#cWHITE"}\n1. По счётчику\tУказанная Вами сумма будет сниматься со счета клиента каждые 30 сек поездки\n2. По договору\tВы сами договариваетесь с каждым клиентом о сумме поездки","Выбрать","Отмена");
			return 1;
		}
		case dTaxi:
		{
			if(!response || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				DeletePVar(playerid,"taxiname");
				return 0;
			}
			if( T_IsValid3DTextLabel ( TaxiText[playerid] ) ) DestroyDynamic3DTextLabelEx(TaxiText[playerid]);
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, dTaxiAction, DIALOG_STYLE_INPUT, "{ffff00}Настройка счётчика", "{"#cWHITE"}Укажите тариф по которому будет работать ваше такси\nЭта сумма будет сниматься с пассажира каждые 30 секунд поездки\nТарифная ставка может быть от 1$ до 200$", "Ок", "Отмена");
				return 0;
			}
			new taxi_name[15+1];
			GetPVarString(playerid, "taxiname", taxi_name, 15);

			format(stringer, 128, "{4682B4}%s%s%s",taxi_name, (strlen(taxi_name)) ? ("\n") : (""), (listitem == 1) ? ("{"#cORANGE"}Цена договорная") : (""));
			TaxiText[playerid] = CreateDynamic3DTextLabel(stringer,0x4682B4AA, 0.0, 0.0, 0.0, 20.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,TaxiText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,TaxiText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 1.5);

			ChangeVehicleColor(GetPlayerVehicleID(playerid), (!listitem) ? (16) : (listitem == 2) ? (17) : (0), 0);
			DeletePVar(playerid,"taxiname");
			DeletePVar(playerid,"arendataxi");
			SetPVarInt(playerid,"taxijob", GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"taxitype", listitem + 1);
			//MeAction(playerid,"начал работу таксиста");
			SendClientMessage(playerid,-1,"Управление замком автомобиля: {FF9900}/lock 4");
			return 1;
		}
		case dTaxiAction:
		{
			if(!response)
			{
				AC_RemovePlayerFromVehicle(playerid);
				return 0;
			}
			if(strval(inputtext) < 1 || strval(inputtext) > 200)
			{
				ShowPlayerDialog(playerid, dTaxiAction, DIALOG_STYLE_INPUT, "{ffff00}Настройка счётчика", "{"#cWHITE"}Укажите тариф по которому будет работать ваше такси\nЭта сумма будет сниматься с пассажира каждые 30 секунд поездки\nТарифная ставка может быть от 1$ до 200$", "Ок", "Отмена");
				return 0;
			}
			new taxi_name[15+1];
			GetPVarString(playerid, "taxiname", taxi_name, 15);

			format(stringer, 128, "{4682B4}%s%s{ffff00}Тариф: %i$",taxi_name, (strlen(taxi_name)) ? ("\n") : (""),strval(inputtext));
			TaxiText[playerid] = CreateDynamic3DTextLabel(stringer,0x4682B4AA, 0.0, 0.0, 0.0, 20.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,TaxiText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,TaxiText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 1.5);

			ChangeVehicleColor(GetPlayerVehicleID(playerid), 6, 0);
			DeletePVar(playerid,"taxiname");
			DeletePVar(playerid,"arendataxi");
			SetPVarInt(playerid,"taxijob", GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"taxitype", 1);
			SetPVarInt(playerid,"taxifare", strval(inputtext));
			//MeAction(playerid,"начал работу таксиста");
			return 1;
		}
		case dRefill:
		{
			new id_mhnk = GetPVarInt(playerid,"id_refill")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_refill");
			new litres = GetPVarInt(id_mhnk,"litres_refill");
			if(!response)
			{
				SendClientMessage(id_mhnk,CRED,"Игрок отказался от предложения");
				SendClientMessage(playerid,CRED,"Вы отказались от предложения");
			}
			else
			{
				format(stringer,128, "Вам заправил автомобиль {"#cWHITE"}%s {"#cGREEN"} на {"#cWHITE"}%d{"#cGREEN"} литров за {"#cWHITE"}%i$",NamePlayer[id_mhnk],litres,price_mhnk);
				SendClientMessage(playerid,CGREEN,stringer);

				format(stringer,128, "Вы заправили автомобиль {"#cWHITE"}%s {"#cGREEN"}на {"#cWHITE"}%d{"#cGREEN"} литров {"#cWHITE"}%i$",NamePlayer[playerid],litres,price_mhnk);
				SendClientMessage(id_mhnk,CGREEN,stringer);

				format(stringer, 144, "~r~- %i$", price_mhnk),GameTextForPlayer(playerid, stringer, 2000, 1);
				format(stringer, 144, "~g~+ %i$", price_mhnk),GameTextForPlayer(id_mhnk, stringer, 2000, 1);

				TransferMoney(id_mhnk,p_info[id_mhnk][pCash]+price_mhnk,price_mhnk,"получил деньги за то что заправил игроку автомобиль");
				TransferMoney(playerid,p_info[playerid][pCash]-price_mhnk,price_mhnk,"заплатил механику за заправку автомобиля");

				p_info[id_mhnk][pCash] += price_mhnk;
				p_info[playerid][pCash] -= price_mhnk;



				UpdateMoney(id_mhnk);
				UpdateMoney(playerid);

				new vehicleid = GetPlayerVehicleID(playerid);

				if(vehicleid) gVehicles[vehicleid - 1][vFuel] += float(litres);
				SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") - litres);

				new mehname [32];
				GetPVarString(playerid,"MehName",mehname,31);

				if(strlen(mehname) > 0)
				{
					format(stringer, 128,"{"#cWHITE"}<< "ORG"%s {"#cWHITE"}>>\n{"#cGRAY"}Топливо: %d л.",mehname,GetPVarInt(playerid,"toplivo"));
					UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, stringer);
				}
				else
				{
					format(stringer, 128,"{"#cGRAY"}Топливо: %d л.",GetPVarInt(playerid,"toplivo"));
					UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, stringer);
				}
			}
			DeletePVar(id_mhnk,"id_repair");
			DeletePVar(id_mhnk,"price_repair");
			DeletePVar(playerid,"id_repair");
			return 1;
		}
		case dRepair:
		{
			new id_mhnk = GetPVarInt(playerid,"id_repair")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_repair");
			if(!response)
			{
				SendClientMessage(id_mhnk,CRED,"Игрок отказался от предложения");
				SendClientMessage(playerid,CRED,"Вы отказались от предложения");
			}
			else
			{
				format(stringer,128, "Вам починил автомобиль {"#cWHITE"}%s {"#cGREEN"}за {"#cWHITE"}%i$",NamePlayer[id_mhnk],price_mhnk);
				SendClientMessage(playerid,CGREEN,stringer);

				format(stringer,128, "Вы починили автомобиль {"#cWHITE"}%s {"#cGREEN"}за {"#cWHITE"}%i$",NamePlayer[playerid],price_mhnk);
				SendClientMessage(id_mhnk,CGREEN,stringer);

				TransferMoney(id_mhnk,p_info[id_mhnk][pCash]+price_mhnk,price_mhnk,"получил деньги за то что починил игроку автомобиль");
				TransferMoney(playerid,p_info[playerid][pCash]-price_mhnk,price_mhnk,"заплатил механику за починку автомобиля");

				format(stringer, 144, "~r~- %i$", price_mhnk),GameTextForPlayer(playerid, stringer, 2000, 1);
				format(stringer, 144, "~g~+ %i$", price_mhnk),GameTextForPlayer(id_mhnk, stringer, 2000, 1);

				p_info[id_mhnk][pCash] += price_mhnk;
				p_info[playerid][pCash] -= price_mhnk;

				UpdateMoney(id_mhnk);
				UpdateMoney(playerid);

				AC_SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
				RepairVehicle(GetPlayerVehicleID(playerid));
			}
			DeletePVar(id_mhnk,"id_repair");
			DeletePVar(id_mhnk,"price_repair");
			DeletePVar(playerid,"id_repair");
			return 1;
		}
		case dStartMehJob:
		{
			if(!response) return 1;

			ShowPlayerDialog(playerid,dStartMehJob2,DIALOG_STYLE_INPUT,"{"#cORANGE"}Автомеханик",
				"{"#cWHITE"}Используйте название вашей технической службы \nили оставьте поле пустым", "Готово", "Отмена");

			return 1;
		}
		case dStartMehJob2:
		{
			if(!response) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(strlen(inputtext) > 0)
			{
				SetPVarString(playerid,"MehName",(inputtext));
				format(stringer, 128,"{"#cWHITE"}<< "ORG"%s {"#cWHITE"}>>\n{"#cGRAY"}Топлива нет",(inputtext));
				PlayerMehText[playerid] = CreateDynamic3DTextLabel(stringer,-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,vehicleid);
			}
			else
			{
				PlayerMehText[playerid] = CreateDynamic3DTextLabel("{"#cGRAY"}Топлива нет",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,vehicleid);
			}
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerMehText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			MeAction(playerid,"начал работу автомеханика",10.0);
			SetPVarInt(playerid,"meh_car", GetPlayerVehicleID(playerid));
			SendClientMessage(playerid,-1,"Управление замком: {"#cORANGE"}/lock 4");
			return 1;
		}
		case dFContract:
		{
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return SendClientMessage(playerid,COLOR_GREY,"Количество бензина вводить нужно цифрами");

			new litres = strval(inputtext);
			if((litres%2) > 0 || litres == 0) return SendClientMessage(playerid,COLOR_GREY,"Количество бензина должно быть кратным двум.");

			new mehname [32];
			GetPVarString(playerid,"MehName",mehname,31);

			if(strlen(mehname) > 0)
			{
				format(stringer, 128,"{"#cWHITE"}<< "ORG"%s {"#cWHITE"}>>\n{"#cGRAY"}Топливо: %d л.",mehname,GetPVarInt(playerid,"toplivo") + litres);
				UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, stringer);
			}
			else
			{
				format(stringer, 128,"{"#cGRAY"}Топливо: %d л.",GetPVarInt(playerid,"toplivo") + litres);
				UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, stringer);
			}

			TransferMoney(playerid,p_info[playerid][pCash]-Business[GetPVarInt(playerid,"f_biz")][EnterPrice] * litres,Business[GetPVarInt(playerid,"f_biz")][EnterPrice] * litres,"заплатил за покупку топлива");

			p_info[playerid][pCash] -= Business[GetPVarInt(playerid,"f_biz")][EnterPrice] * litres;
			UpdateMoney(playerid);

			SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") + litres);
			DeletePVar(playerid,"f_biz");
			return 1;
		}
		case dRieltor1:
		{
			if(!response) return 1;

			new houseid = strval(inputtext);
			if(isNumeric(inputtext)) return ShowPlayerDialog(playerid,dRieltor1,DIALOG_STYLE_INPUT,""ORG"Информация о дома", "{"#cWHITE"}Используйте номер дома о котором хотите получить информацию", "Далее", "Отмена");
			if(houseid < 1 || houseid >= TotalHouse) return ShowPlayerDialog(playerid,dRieltor1,DIALOG_STYLE_INPUT,""ORG"Информация о дома", "{"#cWHITE"}Используйте номер дома о котором хотите получить информацию", "Далее", "Отмена");

			stringer[0] = EOS;
			format(stringer, 1000, ""ORG"Номер дома:\t{"#cWHITE"}%i\n"ORG"Стоимость:{"#cWHITE"}\t%i$\n"ORG"Статус:\t\t{"#cWHITE"}%s\n\n{"#cWHITE"}Вы также можете посмотреть как выглядит дом снаружи.\nДля этого нажмите кнопку \"Осмотр\"",houseid,gHouses[ houseid ][hValue],(!strcmp(gHouses[ houseid ][houseOwner],"The State")) ? ("{"#cGREEN"}Продается") : ("{"#cRED"}Куплен"));
			ShowPlayerDialog(playerid,dRieltor2,DIALOG_STYLE_MSGBOX, "{"#cINFO"}Информация о выбранном доме",stringer,"Осмотр","Закрыть");

			SetPVarInt(playerid,"hrieltor", houseid);
			SetPVarInt(playerid,"hrieltor1", houseid);
			return 1;
		}

		case dRieltor2:
		{
			if(!response) return DeletePVar(playerid,"hrieltor");

			new houseid = GetPVarInt(playerid,"hrieltor");

			GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
			
			printf("Сохранено: %f, %f, %f",p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);

			SetPVarFloat(playerid,"rielX",p_info[playerid][pX]);
			SetPVarFloat(playerid,"rielY",p_info[playerid][pY]);
			SetPVarFloat(playerid,"rielZ",p_info[playerid][pZ]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			AC_SetPlayerPos(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]-50.0);
			AC_TogglePlayerControllable(playerid,0);

			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);

			SetPlayerCameraPos(playerid,gHouses[houseid][houseX] + (-8.0 * floatsin(gHouses[houseid][houseA], degrees)),gHouses[houseid][houseY] + (5.0 * floatcos(gHouses[houseid][houseA], degrees)), gHouses[houseid][houseZ]+0.3);
			SetPlayerCameraLookAt(playerid, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);

			SendClientMessage(playerid,-1,"Для выхода нажмите "ORG"~k~~PED_JUMPING~");
			SendClientMessage(playerid,-1,"Чтобы поставить метку к дому Используйте "ORG"/chome");
			return 1;
		}
		case dHeal:
		{
			if(!response)
			{
				SendClientMessage(GetPVarInt(playerid,"HealOffer")-1,COLOR_GREY,"Пациент отказался от лечения");
				DeletePVar(playerid,"HealOffer");
				return 1;
			}
			if(p_info[playerid][pCash] < healpric) return SendClientMessage(playerid,COLOR_GREY,"У Вас не достаточно денег");
			TransferMoney(playerid,p_info[playerid][pCash]-healpric,healpric,"заплатил за лечение в больнице");
			p_info[playerid][pCash] -= healpric;
			AC_SetPlayerHealth(playerid, 100.0);
			p_info[playerid][Disease][0] = 0;
			UpdatePlayerData(playerid, "Disease0", p_info[playerid][Disease][0]);
			p_info[playerid][Disease][1] = 0;
			UpdatePlayerData(playerid, "Disease1", p_info[playerid][Disease][1]);
			p_info[playerid][Disease][2] = 0;
			UpdatePlayerData(playerid, "Disease2", p_info[playerid][Disease][2]);
			DeletePVar(playerid,"pHospital");

			if(gKilledWithAntiDeath[playerid] > 0)
			{
				if(damage_text[playerid]!=Text3D:-1)
				{
					Delete3DTextLabel(damage_text[playerid]);
					damage_text[playerid]=Text3D:-1;
				}
				SetCameraBehindPlayer(playerid);
				AC_TogglePlayerControllable(playerid, true);
				FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
				gKilledWithAntiDeath[playerid] = 0;
				SetPlayerDrunkLevel(playerid, 0);
				for(new i = 0; i < MAX_DAMAGES_STRING; i++)
				{
					if(gDamagesData[playerid][i][gdBody]==-1) continue;
					gDamagesData[playerid][i][gdBody] = -1;
					gDamagesData[playerid][i][gdTime] = 0;
					gDamagesData[playerid][i][gdGun] = 0;
					gDamagesData[playerid][i][gdDamage] = 0.0;
					gDamagesData[playerid][i][gdNameDamages][0] = EOS;
					gDamagesData[playerid][i][gdNameID] = 0;
				}
			}

			SendClientMessage(GetPVarInt(playerid,"HealOffer")-1,CGREEN,"Пациент согласился на лечение");
			SendClientMessage(playerid,CGREEN,"Вы были вылечены");
			DeletePVar(playerid,"HealOffer");
			DeletePVar(playerid, "anti_sbiv_time");
			UpdateMoney(playerid);
			return 1;
		}
		case dDaiving:
		{
			if(!response) return 1;
			AC_SetPlayerPos(playerid,677.5334,-2218.0964,4.1355);
			SCM(playerid,-1,"Чтобы выйти из дайвинга Используйте команду {"#cINFO"}/leave");
			SetPVarInt(playerid,"daiving", true);
			return 1;
		}
		case dBuyFuel:
		{
			if(!response) return DeletePVar(playerid,"buyfuel"), 1;
			new bizid = GetPVarInt(playerid,"buyfuel");
			if(p_info[playerid][pCash] < Business[bizid][BuyPrice]) return SendErr(playerid,"У вас не достаточно денег для покупки данного бизнеса!"),DeletePVar(playerid,"buyfuel"), 1;

			p_info[playerid][pPbiskey] = bizid + 1;
			UpdatePlayerData(playerid,"pPbiskey",p_info[playerid][pPbiskey]);
			Business[bizid][bCheckPower] += (bPowerTax * 5);
			UpdateOtherBusiness(bizid);
			format(stringer, 144, "Поздравляем! Вы приобрели бизнес: %s.", Business[bizid][BizName]);
			SendClientMessage(playerid,CGREEN, stringer);
			SendClientMessage(playerid,CLIGHTGREEN, "Бизнес автоматически оплачен на 5 часов. Примечание: Заплатить за электричество бизнеса можно в банкомате.");
			SendClientMessage(playerid,CLIGHTGREEN, "Управление бизнесом: "ORG"/business");

			//stringer[0] = EOS;
			//format(stringer, 400, "{"#cWHITE"}Поздравляем! Вы приобрели бизнес {269BD8}%s\n\n{"#cWHITE"}Расходы:\n\n{"#cWHITE"}- За оплату помещения: {269BD8}$%i\n{"#cWHITE"}- За оплату продуктов: {269BD8}$%i\n{"#cWHITE"}Бюджет бизнеса: {269BD8}$%i\n\n{"#cWHITE"}Панель управления бизнесом {269BD8}/business\n\n\n{"#cWHITE"}Примечание: {269BD8}Оплата за помещение и продукты, отнимается из бюджета бизнеса",
			//Business[bizid][BizName],Business[bizid][PayRoom],Business[bizid][PayProducts],Business[bizid][Cash]);
			//ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{"#cWHITE"}Покупка бизнеса", stringer, "Хорошо", "");
			strmid(Business[bizid][Owner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 31);
			SaveBusiness(bizid);
			Update3DTextLabelBusiness(bizid);
			TransferMoney(playerid,p_info[playerid][pCash]-Business[bizid][BuyPrice],Business[bizid][BuyPrice],"купил заправку");
			p_info[playerid][pCash] -= Business[bizid][BuyPrice];
			UpdateMoney(playerid);
			DeletePVar(playerid,"buyfuel");
			return 1;
		}
		case dAmmo:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAmmo2, DIALOG_STYLE_INPUT, "{"#cINFO"}Меню аммо | {"#cWHITE"}Патроны", "{"#cWHITE"}Используйте количество патронов для покупки", "Далее", "Отмена");
			SetPVarInt(playerid,"slot_ammo", listitem);
			return 1;
		}

		case dAmmo2:
		{
			if(!response) return DeletePVar(playerid,"slot_ammo");
			new slot = GetPVarInt(playerid,"slot_ammo");
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			if(strval(inputtext) <= 0 || strval(inputtext) > 500) return ShowPlayerDialog(playerid,dAmmo2, DIALOG_STYLE_INPUT, "{"#cINFO"}Меню аммо | {"#cWHITE"}Патроны", "{"#cWHITE"}Используйте количество патронов для покупки", "Далее", "Отмена");
			if(p_info[playerid][pCash] < gSellGunPrice[slot] * strval(inputtext)) return SendErr(playerid,"У вас не достаточно наличных для покупки");
			if(Business[bizid][bProd] < 0) return SendErr(playerid, "В бизнесе не достаточно продуктов");
			new gun_name[32 + 1];
			GetWeaponName(gSellGun[slot],gun_name,32);
			format(stringer, 128, "Вы приобрели %s (%i патронов) за %i$",gun_name,strval(inputtext), gSellGunPrice[slot] * strval(inputtext));
			SCM(playerid,CINFO, stringer);
			if(Business[bizid][bProd]>0)Business[bizid][bProd] -= 10;
			Business[bizid][Bank] += (gSellGunPrice[slot] * strval(inputtext));
			UpdateOtherBusiness(bizid);
			AddMafiaBank(bizid, gSellGunPrice[slot] * strval(inputtext));
			AC_GivePlayerWeapon(playerid,gSellGun[slot],strval(inputtext));
			TransferMoney(playerid,p_info[playerid][pCash]-gSellGunPrice[slot] * strval(inputtext),gSellGunPrice[slot] * strval(inputtext),"купил в аммуниции ган");
			p_info[playerid][pCash] -= gSellGunPrice[slot] * strval(inputtext);
			UpdateMoney(playerid);
			DeletePVar(playerid,"slot_ammo");
			return 1;
		}
		case dStartJobArmy:
		{
			if(!response && !GetPVarInt(playerid,"start_job_army")) return 1;
			SendSucc(playerid,response ? ("Вы начали охрану базы") : ("Вы закончили охрану базы"));
			SetPVarInt(playerid,"start_job_army", response);
			return 1;
		}
		case dStartJobPolice:
		{
			if(!response && !GetPVarInt(playerid,"start_job_police")) return 1;
			SendSucc(playerid,response ? ("Вы начали охрану больницы") : ("Вы закончили охрану больницы"));
			SetPVarInt(playerid,"start_job_police", response);
			return 1;
		}
		case dTempMember:
		{
			if(!response)return true;
			params[0]=listitem+1;
			if(!strcmp(f_info[params[0]][f_name], "None", true))
			{
			    SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Данная фракция не создана");
			    pc_cmd_tempmember(playerid, "");
			    return 1;
			}
			if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
			{
				format(stringer, 128, "[A] %s[%d] временно вступил(а) в фракцию {%06x}%s",NamePlayer[playerid],playerid,fraction_color[params[0]] >>> 8,f_info[params[0]][f_name]);
				SendClientMessage(playerid, CADMIN_HELP_INFO,stringer);
				return 1;
			}
			ChangePlayerFraction(playerid, params[0]);
			p_info[playerid][tRank] = 1;
			UpdatePlayerData(playerid,"tRank",p_info[playerid][tRank]);
			format(stringer, 128, "[A] %s[%d] временно вступил(а) в фракцию {%06x}%s",NamePlayer[playerid],playerid,fraction_color[params[0]] >>> 8,f_info[params[0]][f_name]);
			AdmMes(CADMIN_HELP_INFO,stringer,1);

			format(stringer, 128, "%s [%d] временно вступил(а) в фракцию %s",NamePlayer[playerid],playerid,f_info[params[0]][f_name]);
			WriteLog(TYPE_LOG_TEMPMEMBER,stringer);

			if(StartWork(playerid))
			{
				start_work[playerid] = 1;
				UpdatePlayerData(playerid, "start_work", start_work[playerid]);
				SCM(playerid,CBLUE,"Рабочий день начат");
			}

			/// SetSpawnInfoEx(playerid, p_info[playerid][pModel], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] );
			return true;
		}
		case d_select_football_team:
		{
			//if(!response) return true;
			Select_Football_Team[playerid]=response;
			stringer[0] = EOS;
			stringer = "{"#cWHITE"}";
			for(new i=0;i<11;i++)
			{
				format(stringer,800,"%s%s\t%s\n",stringer,Name_Position_FootBall[i],(Position_Football_Active[response][i]) ? ("{FF636E}[Место занято]{"#cWHITE"}") : ("{00CC00}[Место свободно]{"#cWHITE"}"));
			}
			ShowPlayerDialog(playerid,d_select_football_position,DIALOG_STYLE_TABLIST,"Выберите позицию",stringer,"Выбрать", "Отмена");
			return true;
		}
		case d_select_football_position:
		{
			if(!response)
			{
				Select_Football_Team[playerid]=-1;
				return true;
			}
			if(Position_Football_Active[Select_Football_Team[playerid]][listitem])
			{
				SCM(playerid,COLOR_GREY,"Место занято.");
				return true;
			}

			format(stringer,144,"- Вы зарегистрировались на матч под футболкой {4EBA6F}< %d (%s) >",listitem+1,Name_Position_FootBall[listitem]);
			SCM(playerid, 0xdad2bfFF, stringer);
			SCM(playerid, 0xdad2bfFF, "- Управление: {4EBA6F}ЛКМ - забрать, ПКМ - пасс, F - навес, ALT - удар.");
			Select_Football_Position[playerid]=listitem;
			Position_Football_Active[Select_Football_Team[playerid]][listitem]=true;
			SpawnPlayer(playerid);
			return true;
		}
		case BED_DIALOG:
		{
			if( !response ) return SendClientMessage( playerid, -1, "* Вы отказались от аренды койки" ),MyBed[ playerid ] = 255;
			new Float:healthss;
			GetPlayerHealth(playerid,healthss);
			if(healthss < 80)
			{
				new p_Bed = MyBed[ playerid ],str[ 128 ];
				BedInfo[ p_Bed ][ Busy ] = true;
				//BedInfo[ p_Bed ][ b_Time ] = 59;
				SendClientMessage( playerid, -1, "* Вы арендовали койку, это увеличит скорость выздоравления" );
				TransferMoney(playerid,p_info[playerid][pCash]-BedPrice,BedPrice,"заплатил за койку.");
				p_info[playerid][pCash] -= BedPrice;
				UpdateMoney(playerid);

				//AC_TogglePlayerControllable(playerid, 0);
				//AC_SetPlayerPos( playerid, BedInfo[ p_Bed ][ k_X ], BedInfo[ p_Bed ][ k_Y ], BedInfo[ p_Bed ][ k_Z ] );
				//SetPlayerFacingAngle(playerid,BedInfo[ p_Bed ][ k_A ]);
				PlayerTimerBolk[ playerid ] = SetTimerEx( "MinusTimer", 2000, true, "d", playerid );
				format( str, sizeof( str ), "{"#cWHITE"}Койка №%d\n\n{FFD700}Пациент: %s", p_Bed+1, NamePlayer[playerid]);
				UpdateDynamic3DTextLabelText( Bed3D[ p_Bed ], 0xFFFFFF20, str );
			}
			else
			{
				SendClientMessage( playerid, -1, "* Вы не больны, зачем вам койка?" );
				MyBed[ playerid ] = 255;
				DeletePVar(playerid,"pHospital");
			}
			return 1;
		}
		case DIALOG_CASINO_SET:
		{
			if ( ! response ) return 1 ;
			new bet_amount = strval ( inputtext ) ;
			if ( bet_amount < 0 || bet_amount > 100000 ) return SendClientMessage ( playerid, -1, "* Размер ставки може быть не меньше 0$ или больше 100000$!" ) ;
			if ( p_info[playerid][pCash] < bet_amount ) return SendClientMessage ( playerid, -1, "* У вас нет такого количества денег!" ) ;
			SetPVarInt ( playerid, "sm_bet", bet_amount ) ;
			new td_string [ 14 ] ;
			format ( td_string, 14, "bet:  %d$", bet_amount ) ;
			PlayerTextDrawSetString ( playerid, sm_ptd [ playerid ], td_string ) ;
		}
		case INFO_DIALOG:
		{
			if( !response ) return 1;
			if(BedInfo[ listitem ][ Busy ] == true) return SendClientMessage( playerid, -1, "* Койка уже кем то занята." );
			SendClientMessage( playerid, -1, "* Койка отмечена на вашем радаре." );
			MyBed[ playerid ] = listitem;
		}
		case dLowStavka:
		{
			if(!response) return DeletePVar(playerid, "lowrider_area");
			new sum;
			if(sscanf(inputtext, "i", sum)) return ShowPlayerDialog(playerid, dLowStavka, DIALOG_STYLE_INPUT, "{"#cWHITE"}Ставка", "{"#cWHITE"}Введите сумму ставки", "Далее", "Отмена");
			if(sum < 1000 || sum > 20000)
			{
				SendClientMessage(playerid,-1,"Ошибка. {AFAFAF}от 1000$ до 20.000$");
				return ShowPlayerDialog(playerid, dLowStavka, DIALOG_STYLE_INPUT, "{"#cWHITE"}Ставка", "{"#cWHITE"}Введите сумму ставки", "Далее", "Отмена");
			}
			else if(sum > p_info[playerid][pCash])
			{
				SendClientMessage(playerid,-1,"Ошибка. {AFAFAF}У вас недостаточно денег.");
				return ShowPlayerDialog(playerid, dLowStavka, DIALOG_STYLE_INPUT, "{"#cWHITE"}Ставка", "{"#cWHITE"}Введите сумму ставки", "Далее", "Отмена");
			}
			SetPVarInt(playerid, "cLowrideV", 0);
			LoadLowCoToSelect(playerid);
			for(new i = 0; i < 5; i++)
			{
				TextDrawShowForPlayer(playerid, lowrideSelectVehicle_TD[i]);
			}
			SelectTextDraw ( playerid , 0xC7C7C7AA ) ;
			SelectLowride[playerid][3] = 1;
			LowRideStavka += sum;
			TransferMoney(playerid,p_info[playerid][pCash]+sum,sum,"ставка лоурайдеров");
			p_info[playerid][pCash] -= sum;
			UpdateMoney(playerid);
			return 1;
		}
		case dContact:
		{
			if(!response) return DeletePVar(playerid, "book_show_list");
			if(listitem>=0 && listitem <= 4)
			{
				stringer[0] = EOS;
				strcat(stringer, "1. Позвонить\n");
				strcat(stringer, "2. Отправить SMS сообщение\n");
				strcat(stringer, "3. Изменить имя контакта\n");
				strcat(stringer, "4. Изменить номер контакта\n");
				strcat(stringer, "5. Удалить контакт");
				ShowPlayerDialog(playerid, dContactSelect, DIALOG_STYLE_LIST, "{"#cORANGE"}Варианты", stringer, "Выбрать", "Назад");
				SetPVarInt(playerid, "contact_select_id", listitem);
				DeletePVar(playerid, "book_show_list");
			}
			else if(listitem==5)
			{
				SetPVarInt(playerid,"book_show_list", GetPVarInt(playerid,"book_show_list") + 1);
				return pc_cmd_book(playerid);
			}
			else if(listitem==6)
			{
				SetPVarInt(playerid,"book_show_list", GetPVarInt(playerid,"book_show_list") - 1);
				return pc_cmd_book(playerid);
			}
			return 1;
		}
		case dContactSelect:
		{
			if(!response)
			{
				pc_cmd_book(playerid);
				return DeletePVar(playerid, "contact_select_id");
			}
			new slot = GetPVarInt(playerid, "contact_select_id");
			switch(listitem)
			{
				case 0:
				{
					mysql_query_string[0] = EOS;
					mysql_format(connects,mysql_query_string,512,"SELECT `number`,`name_id` FROM `phone_book_w` WHERE `id` = '%d'", LoadBookID[playerid][slot]);
					new Cache:result = mysql_query(connects, mysql_query_string);
					new rows = cache_num_rows();
					if(rows == 0)
					{
						cache_delete(result);
						return SendClientMessage(playerid, COLOR_GREY, "Техническая ошибка. Номер не найден!");
					}
					new t = -1;

					new ID_M_name;
					new ID_M_number;
					cache_get_value_index_int(0,0,ID_M_name);
					cache_get_value_index_int(0,1,ID_M_number);
					foreach(i)
					{
						if(p_info[i][pID] == ID_M_number)
						{
							t = i;
							break;
						}
					}

					if(t == -1)
					{
						cache_delete(result);
						return SendClientMessage(playerid, COLOR_GREY, "Звонок не возможен, игрок не в сети!");
					}

					if(GetPVarInt(t,"called")) return SendErr(playerid, "Абонент занят");
					if(GetPVarInt(t,"PhoneOnline")) return SendErr(playerid, "Телефон абонента отключен");

					format(stringer, 128, "Исходящий звонок | Номер: %i "ORG"| Ожидание ответа от %s",ID_M_name,NamePlayer[t]);
					SCM(playerid,CBLUE,stringer);

					format(stringer, 128, "Входящий звонок | Номер: "ORG"%i",p_info[playerid][pPnumber]);
					SCM(t,CBLUE,stringer);
					SCM(t,-1,"Чтобы поднять трубку Используйте {"#cGREEN"}/p{"#cWHITE"} для завершения Используйте {"#cRED"}/h");

					SetPVarInt(playerid,"called",t+1);
					SetPVarInt(t,"called",playerid+1);

					MeAction(playerid,"достал(а) телефон", 5.0);
					DoAction(t,"Звонит телефон");

					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
					SetPlayerAttachedObject(playerid,2,p_info[playerid][pModelPhone],6,0.09,0.019,-0.011,88.90,-176.40,0.49,0.787,0.753,0.562);

					cache_delete(result);
					return DeletePVar(playerid, "contact_select_id");
				}
				case 1: ShowPlayerDialog(playerid, dSendSMS, DIALOG_STYLE_INPUT, "{"#cORANGE"}Отправка SMS сообщения", "{"#cWHITE"}-\t\t\tВведите текст SMS сообщения:\t\t\t-", "Отправить", "Назад");
				case 2: ShowPlayerDialog(playerid, dContactChangeName, DIALOG_STYLE_INPUT, "{"#cORANGE"}Изменение имени контакта", "{"#cWHITE"}-\t\t\tВведите новое имя для контакта:\t\t\t-", "Изменить", "Назад");
				case 3: ShowPlayerDialog(playerid, dContactChangeNumber, DIALOG_STYLE_INPUT, "{"#cORANGE"}Изменение номера контакта", "{"#cWHITE"}-\t\t\tВведите новый номер для контакта:\t\t\t-", "Изменить", "Назад");
				case 4:
				{
					mysql_query_string[0] = EOS;
					mysql_format(connects,mysql_query_string,512,"DELETE FROM `phone_book_w` WHERE `id` = '%d'", LoadBookID[playerid][slot]);
					mysql_pquery(connects, mysql_query_string);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Контакт удален с памяти телефона!");
				}
			}
			return 1;
		}
		case dContactChangeName:
		{
			if(!response)return pc_cmd_book(playerid);
			new new_name[MAX_PLAYER_NAME];
			new slot = GetPVarInt(playerid, "contact_select_id");
			if(sscanf(inputtext,"s[128]",new_name)) return ShowPlayerDialog(playerid, dContactChangeName, DIALOG_STYLE_INPUT, "{"#cORANGE"}Изменение имени контакта", "{"#cWHITE"}-\t\t\tВведите новое имя для контакта:\t\t\t-", "Изменить", "Назад");
			mysql_query_string[0] = EOS;
			mysql_format(connects,mysql_query_string,512,"UPDATE `phone_book_w` SET `name` = '%s' WHERE `id` = '%d'", new_name, LoadBookID[playerid][slot]);
			mysql_pquery(connects,mysql_query_string);
			SendClientMessage(playerid, CLIGHTGREEN, "Вы успешно изменили имя контакта");
			DeletePVar(playerid, "contact_select_id");
			return 1;
		}
		case dContactChangeNumber:
		{
			if(!response)return pc_cmd_book(playerid);
			new new_number;
///		    new slot = GetPVarInt(playerid, "contact_select_id");
			if(sscanf(inputtext,"i",new_number)) return ShowPlayerDialog(playerid, dContactChangeNumber, DIALOG_STYLE_INPUT, "{"#cORANGE"}Изменение номера контакта", "{"#cWHITE"}-\t\t\tВведите новый номер для контакта:\t\t\t-", "Изменить", "Назад");
			if(strlen(inputtext) < 3 || strlen(inputtext) > 8)
			{
				SendClientMessage(playerid,COLOR_GREY,"Длина номера должна быть от 3 до 8 символов.");
				return ShowPlayerDialog(playerid, dContactChangeNumber, DIALOG_STYLE_INPUT, "{"#cORANGE"}Изменение номера контакта", "{"#cWHITE"}-\t\t\tВведите новый номер для контакта:\t\t\t-", "Изменить", "Назад");
			}
			mysql_query_string[0] = EOS;
			mysql_format(connects,mysql_query_string,512,"SELECT * FROM `phone_book_w` WHERE `number` = '%d' AND `player_id` = '%d'", new_number, p_info[playerid][pID]);
			mysql_pquery(connects, mysql_query_string, "ChangeBookNumber", "ii", playerid, new_number);
			return 1;
		}
		case dSendSMS:
		{
			if(!response)return pc_cmd_book(playerid);
			new sms_text[128];
			new slot = GetPVarInt(playerid, "contact_select_id");
			if(sscanf(inputtext,"s[128]",sms_text)) return ShowPlayerDialog(playerid, dSendSMS, DIALOG_STYLE_INPUT, "{"#cORANGE"}Отправка SMS сообщения", "{"#cWHITE"}-\t\t\tВведите текст SMS сообщения:\t\t\t-", "Отправить", "Назад");
			mysql_query_string[0] = EOS;
			mysql_format(connects,mysql_query_string,512,"SELECT `name_id` FROM `phone_book_w` WHERE `id` = '%d'", LoadBookID[playerid][slot]);
			mysql_pquery(connects, mysql_query_string, "SendBookSMS", "is", playerid, sms_text);
			return 1;
		}
		case dContactAdd:
		{
			if(!response) return 1;
			params[1] = GetPVarInt(playerid,"contact_id");
			if(sscanf(inputtext,"i",params[0]))
			{
				format(stringer,144,"{"#cWHITE"}Введите номер телефона для контакта %s",NamePlayer[params[1]]);
				ShowPlayerDialog(playerid, dContactAdd, DIALOG_STYLE_INPUT, "{"#cORANGE"}Добавление нового контакта", stringer, "Добавить", "Отмена");
				return 1;
			}
			else if(strlen(inputtext) < 3 || strlen(inputtext) > 8)
			{
				SendClientMessage(playerid, COLOR_GREY, "От 3 до 8 символов");
				format(stringer,144,"{"#cWHITE"}Введите номер телефона для контакта %s",NamePlayer[params[1]]);
				ShowPlayerDialog(playerid, dContactAdd, DIALOG_STYLE_INPUT, "{"#cORANGE"}Добавление нового контакта", stringer, "Добавить", "Отмена");
				return 1;
			}
			if(!IsPlayerConnected(params[1])) return SendErr(playerid,"Ошибка. Игрок не в сети");
			mysql_query_string[0] = EOS;
			mysql_format(connects,mysql_query_string,512,"SELECT COUNT(*) FROM `phone_book_w` WHERE `number` = '%d' AND `player_id` = '%d'", params[0], NamePlayer[params[1]], p_info[playerid][pID]);
			new Cache:result = mysql_query(connects, mysql_query_string);
			new count;
			cache_get_value_index_int(0,0,count);
			if(count > 0)
			{
				cache_delete(result);
				SendClientMessage(playerid, COLOR_GREY, "Такой номер телефона / игрок уже есть в вашей телефонной книге");
				format(stringer,144,"{"#cWHITE"}Введите номер телефона для контакта %s",NamePlayer[params[1]]);
				return ShowPlayerDialog(playerid, dContactAdd, DIALOG_STYLE_INPUT, "{"#cORANGE"}Добавление нового контакта", stringer, "Добавить", "Отмена");
			}
			cache_delete(result);
			format(stringer,144,"Вы добавили %s (тел. %d) в свой список контактов", NamePlayer[params[1]], params[0]);
			SendClientMessage(playerid,CLIGHTGREEN,stringer);
			mysql_query_string[0] = EOS;
			mysql_format(connects,mysql_query_string,512,"INSERT INTO `phone_book_w` (`player_id`, `name`, `name_id`, `number`)  VALUES ('%d','%s','%d','%d')", p_info[playerid][pID],NamePlayer[params[1]],p_info[params[1]][pID], params[0]);
			mysql_pquery(connects, mysql_query_string);
			DeletePVar(playerid, "contact_id");
			return 1;
		}
		case dBuyCarSells:
		{
			if(!response) return DeletePVar(playerid, "g_car_sells_id");
			new g = GetPVarInt(playerid,"g_car_sells_id") - 1;
			if(IsSellsCar(playerid, 1) == g || IsSellsCar(playerid, 2) == g) return SendErr(playerid,"Вы не можете купить машину которую продаете");
			SendInf(playerid,"Выберите слот машины которую хотите заменить 1 или 2.");
			ShowPlayerDialog(playerid, dBuyCarSells2, DIALOG_STYLE_LIST, "Информация", "Машина 1\nМашина 2", "Выбор", "Отмена");
		}//
		case dBuyCarSells2:
		{
			if(!response) return DeletePVar(playerid, "g_car_sells_id");
			new g = GetPVarInt(playerid,"g_car_sells_id") - 1;
			if(IsSellsCar(playerid, 1) == g || IsSellsCar(playerid, 2) == g) return SendErr(playerid,"Вы не можете купить машину которую продаете");
			if(p_info[playerid][pCash] < gCarSells[g][SellsPrice]) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег для покупки");
			p_info[playerid][pCash] -= gCarSells[g][SellsPrice];
			UpdateMoney(playerid);
			PlayerCar[playerid][listitem] = gCarSells[g][SellsModel];
			UpdatePlayerData(playerid, (listitem == 0) ? ("pCar") : ("pCar2"), PlayerCar[playerid][listitem]);
			for(new i = 0; i < 12; i++) gPlayerTuning[playerid][listitem][i] = gCarSells[g][SellsTuning][i];
			UpdateTuning(playerid, listitem + 1);
			format(stringer, 128, "Вы купили автомобиль {"#cBLUE"}%s{"#cGRAY"} за {"#cGREEN"}%d$", VehicleNames[gCarSells[g][SellsModel]-400], gCarSells[g][SellsPrice]);
			SCM(playerid,CGRAY,stringer);
			new slot_id=-1;
			new querka[300];
			format(querka,300,"SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1",gCarSells[g][SellsOwner]);
			new Cache:result = mysql_query(connects,querka);
			new car,car2,id;
			cache_get_value_index_int(0,0,id);//ID
			cache_get_value_index_int(0,62,car);//pCar
			cache_get_value_index_int(0,74,car2);//pCar2
			cache_delete(result);
			printf("car %d car 2 %d gCarSells[g][SellsModel] %d", car, car2, gCarSells[g][SellsModel]);
			if(car == gCarSells[g][SellsModel]) slot_id = 0;
			else if(car2 == gCarSells[g][SellsModel]) slot_id = 1;
			if ( slot_id != -1 )
			{
				format(querka,300,"UPDATE `accounts` SET `%s` = '462', `%s` = '1,255,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1', `pCash` = `pCash` + '%d' WHERE `ID` = '%d'",(slot_id == 0) ? ("pCar") : ("pCar2"),(slot_id == 0) ? ("cVehcom") : ("cVehcom2"),gCarSells[g][SellsPrice],id);
				mysql_pquery(connects,querka);
				print(querka);
			}
			foreach(check_id)
			{
				if(!strcmp(NamePlayer[check_id], gCarSells[g][SellsOwner]) && IsPlayerConnected(check_id))
				{
					if(IsSellsCar(playerid, 1)!=-1) slot_id = 0;
					else if(IsSellsCar(playerid, 2)!=-1) slot_id = 1;
					if ( slot_id != -1 )
					{
						gPlayerTuning[check_id][slot_id][0] = 1;
						gPlayerTuning[check_id][slot_id][1] = 255;
						for(new i=2;i<12;i++) gPlayerTuning[check_id][slot_id][i] = -1;
						UpdateTuning(check_id, slot_id + 1);
						p_info[check_id][pCash] += gCarSells[g][SellsPrice];
						UpdateMoney(check_id);
						PlayerCar[check_id][slot_id] = 462;
						UpdatePlayerData(check_id, (slot_id == 0) ? ("pCar") : ("pCar2"), PlayerCar[check_id][slot_id]);
					}
					break;
				}
			}
			gCarSells[g][SellsModel] = 0;
			gCarSells[g][SellsTime] = 0;
			gCarSells[g][SellsPrice] = 0;
			format(gCarSells[g][SellsOwner],24,"The State");
			gCarSells[g][SellsTuning][0] = 1;
			gCarSells[g][SellsTuning][1] = 255;
			for(new i=2;i<12;i++) gCarSells[g][SellsTuning][i] = -1;
			DestroyVehicleOP(gCarSells[g][SellsVID]);
			new update_car_sells[512];
			format(update_car_sells,512,"UPDATE `gCarSells` SET `SellsModel` = '%d', `SellsTime` = '%d', `SellsPrice` = '%d', `SellsOwner` = '%s', `SellsTuning` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `SellsMysqlID` = '%d'",
			gCarSells[g][SellsModel],gCarSells[g][SellsTime],gCarSells[g][SellsPrice],gCarSells[g][SellsOwner],gCarSells[g][SellsTuning][0],gCarSells[g][SellsTuning][1],gCarSells[g][SellsTuning][2],gCarSells[g][SellsTuning][3],gCarSells[g][SellsTuning][4],gCarSells[g][SellsTuning][5],gCarSells[g][SellsTuning][6],gCarSells[g][SellsTuning][7],gCarSells[g][SellsTuning][8],gCarSells[g][SellsTuning][9],gCarSells[g][SellsTuning][10],gCarSells[g][SellsTuning][11],gCarSells[g][SellsMysqlID]);
			mysql_pquery(connects, update_car_sells);
			print(update_car_sells);
			LoadCarSells(g);
		}//
		case dProdRent:
		{
			if(GetPlayerState(playerid) != 2) return 1;
			if(!response) return AC_RemovePlayerFromVehicle(playerid),1;
			new veh = GetPlayerVehicleID(playerid);
			DeletePVar(playerid,"prod_id");
			SetPVarInt(playerid,"prod_vehicle_id",veh);
			format(stringer, 144, "{f0f0f0}[%s: 0/1000]\n{5DD174}Бизнес: Не выбран",(gVehicles[veh-1][vJob]==3) ? ("Топлива") : ("Продуктов"));
			gPlayerProdText[playerid][0] =
				CreateDynamic3DTextLabel(stringer, 0xFFFFFF20, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));

			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid][0],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid][0],E_STREAMER_ATTACH_OFFSET_Z, 2.0);

			SendClientMessage(playerid,CINFO,"Вы арендовали автомобиль, чтобы загрузить ресурсы вам нужно подъехать к "newred"красному{"#cINFO"} маркеру.");
			SendClientMessage(playerid,-1,"Управление замком автомобиля: {FF9900}/lock 4");
			SetPlayerRaceCheckpoint(playerid, 1, -116.87, -320.27, 1.42, 0.0,0.0,0.0, 5.0);
			//TogglePlayerDynamicCP(playerid, prodCP, true);
			return 1;
		}
		case dProdPut:
		{
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER)
			{
				//DeletePVar(playerid,"count_prod2");
				return 1;
			}
			new veh = GetPlayerVehicleID(playerid);
			if(!response)
			{
				stringer[0] = EOS;
				if(gVehicles[veh-1][vJob]==1)
					strcat(stringer, "{919191}[номер] - {A8413A}[имя бизнеса] - {5364A3}[цена за один продукт] - {5364A3}[к-во требуемых продуктов]\n\n");
				else strcat(stringer, "{919191}[номер] - {A8413A}[имя заправки] - {5364A3}[цена за один литр] - {5364A3}[к-во требуемого топлива]\n\n");
				//
				new prod_next = GetPVarInt(playerid,"prod_next");
				new count_est=0;
				for(new i=0; i<CountBusiness; i++)
				{
					if(i >= CountBusiness) break;
					if(Business[i][bProdOrder] <= 0)continue;
					if(gVehicles[veh-1][vJob]==3 && Business[i][bType]!=13) continue;
					if(count_est>=15) break;
					if(count_est < prod_next)continue;
					format(stringer,2400,"%s{919191}%d. "nwhite"- {A8413A}\" %s \" "nwhite"- {5364A3}'%d' "nwhite"- {5364A3}'%d'\n",stringer,i+1,Business[i][BizName],Business[i][bProdOrderPrice],Business[i][bProdOrder]);
					count_est++;
				}
				strcat(stringer,"\n\n"nwhite"Используйте "newgreen"номер "nwhite"бизнеса в поле ниже\n{A8413A}0 {"#cWHITE"}для выхода из меню");
				if(count_est==0) return 1;
				if ( count_est >= 15 && GetPVarInt(playerid, "prod_next")>=20)
				{
					SetPVarInt(playerid,"prod_next",prod_next+20);
					ShowPlayerDialog(playerid,dProdPut,DIALOG_STYLE_INPUT,""neworange"Бизнес",stringer,"Выбрать","Далее >>");
				}
				else if ( count_est < 15 && GetPVarInt(playerid, "prod_next")>=20)
				{
					SetPVarInt(playerid,"prod_next",prod_next-20);
					ShowPlayerDialog(playerid,dProdPut,DIALOG_STYLE_INPUT,""neworange"Бизнес",stringer,"Выбрать","Отмена");
				}
				else
				{
					ShowPlayerDialog(playerid,dProdPut,DIALOG_STYLE_INPUT,""neworange"Бизнес",stringer,"Выбрать","Отмена");
				}
				return 1;
			}
			new biz = strval(inputtext)-1;
			if(biz < 0 || biz >= CountBusiness) return 1;

			if(Business[biz][bProdOrder] <= 0)
			{
				if(gVehicles[veh-1][vJob]==1)
					SendErr(playerid, "Владелец бизнеса не заказывал продукты");
				else if(gVehicles[veh-1][vJob]==3)
					SendErr(playerid, "Владелец бизнеса не заказывал топлива");
				DeletePVar(playerid,"prod_next");
				SetTimerEx("LoadProd",0,0,"i",playerid);
				return 1;
			}
			if(gVehicles[veh-1][vJob]==1)
				format(stringer, 255, "Вы выбрали бизнес: %s - Цена за 1 продукт: %d $ - Количество требуемых продуктов: %d шт.", Business[biz][BizName],Business[biz][bProdOrderPrice],Business[biz][bProdOrder]);
			else if(gVehicles[veh-1][vJob]==3)
				format(stringer, 255, "Вы выбрали заправку: %s - Цена за 1 литр: %d $ - Количество требуемых литров: %d шт.", Business[biz][BizName],Business[biz][bProdOrderPrice],Business[biz][bProdOrder]);
			SendClientMessage(playerid,COLOR_LIGHTRED,stringer);
			//
			format(stringer,144,"{f0f0f0}[%s: %d/1000]\n{5DD174}Бизнес: %s", (gVehicles[veh-1][vJob]==3) ? ("Топлива") : ("Продуктов"), GetPVarInt(playerid,"count_prod"),Business[biz][BizName]);
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid][0],0xFFFFFF20,stringer);
			//
			SCM(playerid,CNBLUE,"Бизнес отмечен на карте "newred"красной"newblue" меткой.");
			SetPlayerGPS(playerid,80,Business[biz][PickupEnterX],Business[biz][PickupEnterY],Business[biz][PickupEnterZ],Streamer_GetIntData(STREAMER_TYPE_MAP_ICON, Business[biz][bMapIcon], E_STREAMER_TYPE),-1,MAPICON_GLOBAL_CHECKPOINT);
			//
			gPlayerProdText[playerid][1]=CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{5DD174}продуктов для бизнеса", 0xFFFFFF20, Business[biz][PickupEnterX] + (3.5 * floatsin(-Business[biz][EnterR], degrees)),Business[biz][PickupEnterY] + (3.5 * floatcos(-Business[biz][EnterR], degrees)),Business[biz][PickupEnterZ]+1.0, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, playerid);
			gPlayerProdCP[playerid] = CreateDynamicCP(Business[biz][PickupEnterX] + (3.5 * floatsin(-Business[biz][EnterR], degrees)),Business[biz][PickupEnterY] + (3.5 * floatcos(-Business[biz][EnterR], degrees)),Business[biz][PickupEnterZ],8.0,-1,-1,playerid,100.0);
			//
			SetPVarInt(playerid,"prod_id", biz + 1);
			DeletePVar(playerid,"prod_next");
			return 1;
		}
		case dProdGet:
		{
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return 1;
			new veh = GetPlayerVehicleID(playerid);
			if(gVehicles[veh-1][vJob]==1)
			{
				if(!response) return ShowPlayerDialog(playerid,dProdGet,DIALOG_STYLE_INPUT,""neworange"Продукты",""nwhite"Используйте количество продуктов которое вы хотите закупить "newgray"(от 100 до 1000)","Ввод","Отмена");
				if(strval(inputtext) < 100 || strval(inputtext) > 1000) return ShowPlayerDialog(playerid,dProdGet,DIALOG_STYLE_INPUT,""neworange"Продукты",""nwhite"Используйте количество продуктов которое вы хотите закупить "newgray"(от 100 до 1000)","Ввод","Отмена");
			}
			else if(gVehicles[veh-1][vJob]==3)
			{
				if(!response) return ShowPlayerDialog(playerid,dProdGet,DIALOG_STYLE_INPUT,""neworange"Топливо",""nwhite"Используйте количество топлива которое вы хотите закупить "newgray"(от 100 до 1000 литров)","Ввод","Отмена");
				if(strval(inputtext) < 100 || strval(inputtext) > 1000) return ShowPlayerDialog(playerid,dProdGet,DIALOG_STYLE_INPUT,""neworange"Топливо",""nwhite"Используйте количество топлива которое вы хотите закупить "newgray"(от 100 до 1000 литров)","Ввод","Отмена");
			}
			if(gVehicles[veh-1][vJob]==1)
				SendClientMessage(playerid,CLIGHTBLUE,"Вы купили продукты, сейчас они загрузятся в Вашу машину");
			else SendClientMessage(playerid,CLIGHTBLUE,"Вы купили топливо, сейчас они загрузятся в Вашу машину");
			SetTimerEx("LoadProd",0,0,"i",playerid);
			SetPVarInt(playerid,"count_prod2", strval(inputtext));
			return 1;
		}
		case dBusRent:
		{
			if(!response) return AC_RemovePlayerFromVehicle(playerid),1;
			stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
			new get_free_station = -1;
			for ( new i = 0 ; i < MAX_ROUTE ; i++ )
			{
				if ( gRouteMysqlID[i] != -1 )
				{
					format(stringer, 1500, "%s%i. %s\n",stringer,i+1,gRouteName[i]);
					get_free_station = i;
				   // break;
				}
			}
			if(get_free_station==-1) return SendErr(playerid,"Маршруты не добавлены, ожидайте");
			ShowPlayerDialog(playerid,dBusRoute,DIALOG_STYLE_LIST,""ORG"Выберите маршрут",stringer,"Выбрать", "Отмена");
			return 1;
		}
		case dBusRoute:
		{
			if(!response) return AC_RemovePlayerFromVehicle(playerid);
			SetPVarInt(playerid,"route_item",listitem);
			ShowPlayerDialog(playerid,dBusPrice,1,""ORG"Цена за проезд","{"#cWHITE"}Используйте цену билета:","ОК","Отмена");
			return 1;
		}
		case dBusPrice:
		{
			if(!response) return AC_RemovePlayerFromVehicle(playerid);
			if(!strlen(inputtext) || isNumeric(inputtext))
			{
				SendErr(playerid,"Цена должна быть указана цифрами");
				return ShowPlayerDialog(playerid,dBusPrice,1,""ORG"Цена за проезд","{"#cWHITE"}Используйте цену билета:","ОК","Отмена");
			}
			new price = strval(inputtext);
			if(price < 5 || price > 100)
			{
				SendErr(playerid,"Цена должна быть от 5 до 100 $");
				return ShowPlayerDialog(playerid,dBusPrice,1,""ORG"Цена за проезд","{"#cWHITE"}Используйте цену билета:","ОК","Отмена");
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			new route = GetPVarInt(playerid,"route_item");
			DeletePVar(playerid,"route_item");
			if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
			SendSucc(playerid,"Вы начали работу водителя автобуса, следуйте за чекпоинтами.");
			format(stringer,200,""ORG"%s\n{"#cWHITE"}<< "ORG"Стоимость билета: {"#cGREEN"}%i$ {"#cWHITE"}>>",gRouteName[route],price);

			gPlayerBusText[playerid] = CreateDynamic3DTextLabel(stringer,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);

			SetPVarInt(playerid,"route",route + 1);
			SetNextBusCP(playerid);
			SetPVarInt(playerid,"bus_price", price);
			SetPVarInt(playerid,"bus_id",vehicleid);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			TransferMoney(playerid,p_info[playerid][pCash]-200,200,"начал работу автобусника, заплатил за аренду");
			p_info[playerid][pCash] -= 200;
			UpdateMoney(playerid);

			SendClientMessage(playerid,-1,"Управление замком автомобиля: {FF9900}/lock 4");
			return 1;
		}
		case dWanted:
		{
			if(!response) return 1;
			new count_wanted = 0;
			stringer = "\tДело\tИмя преступника\tУровень розыска\n\n";
			foreach(i)
			{
				if(p_info[i][pWanted])
				{
					if(count_wanted >= 45)
					{
						format(stringer,2400,"%s\t\t%d\t%s\t\t%d\n",stringer,i,NamePlayer[i],p_info[i][pWanted]);
					}
					count_wanted++;
				}
			}
			ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Список преступников", stringer, "Закрыть", "");
			return 1;
		}
		/*case 105:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new cost;
						for(new i; i < 5; i ++)
						{
							new fish = PlayerFish[playerid][i];
							if(fish != 0) cost += FishMassa[playerid][i] * FishCost[fish];
						}
						if(cost < 1) return SendClientMessage(playerid, CRED, "[Ошибка] {"#cWHITE"}Рыбу менее чем на $1 не принимаем");
						for(new i; i < 5; i ++)
						{
							PlayerFish[playerid][i] = 0;
							FishMassa[playerid][i] = 0;
						}
						GiveMoney(playerid, cost);
						//aml(51, playerid, "", "Продажа рыбы", cost);
						format(string, sizeof(string), "[Информация] {"#cWHITE"}Вы продали всю рыбу за {73B461}$%d", cost);
						SendClientMessage(playerid, CVALIK, string);
					}
				}
			}
			else ShowPlayerDialog(playerid,104,2,"Что продать?","Рыбу","Выбор","Отмена");
		}*/
		case 263:
		{
			if(response)
			{
				if(listitem < 5)
				{
					new fish = PlayerFish[playerid][listitem];
					if(fish != 0)
					{
						format(stringer, 144, "Вы выбросили %s массой %d Kg", FishName[fish], FishMassa[playerid][listitem]);
						SendClientMessage(playerid, CVALIK, stringer);
						PlayerFish[playerid][listitem] = 0;
						FishMassa[playerid][listitem] = 0;
					}
				}
				else
				{
					for(new i; i < 5; i++)
					{
						PlayerFish[playerid][i] = 0;
						FishMassa[playerid][i] = 0;
					}
					SendClientMessage(playerid, CVALIK, "Вы выбросили всю рыбу");
				}
			}
		}
		case 212:
		{
			if(response) pc_cmd_go_fished(playerid, "");
		}
		case 154:
		{
			if(!response) return 1;
			new status_job = GetPVarInt(playerid,"lesopilka");
			if(!status_job)
			{
				SetPVarInt(playerid,"id_derevo",random(38));
				SetPVarInt(playerid,"lesopilka",true);
				SetPVarInt(playerid,"old_skin", GetPlayerSkin(playerid));
				//
				new slot = GetPVarInt(playerid, "id_derevo");
				SetPlayerCheckpoint(playerid, Derevo[slot][0],Derevo[slot][1],Derevo[slot][2], 3.0);
				AC_GivePlayerWeapon(playerid, 9, 1);
				SetPlayerSkin(playerid, 260);
				SendClientMessage(playerid, -1, "Рабочий день {"#cGREEN"}начат{"#cWHITE"}");
				SendClientMessage(playerid, -1, "Следуйте к красному маркеру около дерева");

				format(stringer, 128, "PROCENT: %i % ~n~AMOUNT: %d KG",GetPVarInt(playerid,"count_les"),GetPVarInt(playerid,"coung_kg"));
				PlayerTextDrawSetString(playerid,MinerDraw[playerid],stringer);
				PlayerTextDrawShow(playerid,MinerDraw[playerid]);
			}
			else
			{
				AC_ResetPlayerWeapons(playerid);
				PlayerTextDrawHide(playerid,MinerDraw[playerid]);
				SendClientMessage(playerid, -1,"Рабочий день {"#cRED"}окончен");
				format(stringer, 128, "Вы заработали: {"#cGREEN"}%i$",(GetPVarInt(playerid,"coung_kg")*2));
				SendInf(playerid, stringer);
				SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");
				p_info[playerid][pSalary] += (GetPVarInt(playerid,"coung_kg")*2);
				UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);
				SetPlayerSkin(playerid, GetPVarInt(playerid,"old_skin"));
				DeletePVar(playerid,"id_derevo");
				DeletePVar(playerid,"lesopilka");
				DeletePVar(playerid,"count_les");
				DeletePVar(playerid,"coung_kg");
				ClearAnimations(playerid);
				DisablePlayerCheckpoint(playerid);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			}
			return 1;
		}
		case dVipAd:
		{
			if(!response) return 1;
			if(p_info[playerid][pMuteTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас бан чата.");
			if(GetPVarInt(playerid,"CountFlood") > unix) return SendErr(playerid,"Нельзя посылать чаще одного объявления в минуту");
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid, dVipAd, DIALOG_STYLE_INPUT, "{"#cWHITE"}Аня", "{"#cWHITE"}Привет, меня зовут Аня\nЯ здесь работаю репортером\n\nА именно принимаю "ORG"VIP {"#cWHITE"}объявление\nЦена одного объявления: {"#cGREEN"}8000$\n\n\
				Если вы располагаете такой суммой, Используйте текст объявления в поле ниже", "Ввод", "Отмена");
				return 1;
			}
			if(strval(inputtext) > 64)
			{
				SendErr(playerid, "Максимум 64 символа");
				ShowPlayerDialog(playerid, dVipAd, DIALOG_STYLE_INPUT, "{"#cWHITE"}Аня", "{"#cWHITE"}Привет, меня зовут Аня\nЯ здесь работаю репортером\n\nА именно принимаю "ORG"VIP {"#cWHITE"}объявление\nЦена одного объявления: {"#cGREEN"}8000$\n\n\
				Если вы располагаете такой суммой, Используйте текст объявления в поле ниже", "Ввод", "Отмена");
				return 1;
			}

			if(p_info[playerid][pCash] < 8000) return SendErr(playerid,"Не достаточно наличных. Требуемая сумма 8000$");
			ShowPlayerDialog(playerid, dVipSend, DIALOG_STYLE_LIST, "{"#cWHITE"}Выберите категорию", "{"#cWHITE"}Недвижимость\nБизнес\nУслуги\nЗнакомства\nДругое", "Выбрать", "Отмена");
			SetPVarString(playerid,"vip_text", inputtext);
			return 1;
		}
		case dVipSend:
		{
			if(!response) return DeletePVar(playerid,"vip_text");

			new ad_text[64+1];
			GetPVarString(playerid,"vip_text", ad_text, 64);
			DeletePVar(playerid,"vip_text");

			gAdvertCount ++;
			new slot = -1;
			//
			for(new i;i<15;i++)
			{
				if(!gAdvert[i][adBusy])
				{
					slot = i;
					break;
				}
			}
			//
			if(slot == -1)
			{
				slot = 14;
			}
			//
			format(gAdvert[slot][adSender],24,"%s",NamePlayer[playerid]);
			gAdvert[slot][adID] = playerid;
			gAdvert[slot][adPhone] = p_info[playerid][pPnumber];
			format(gAdvert[slot][adText],100,"[%s]: %s",(inputtext),ad_text);
			gAdvert[slot][adTime] = gAdvertTime;
			gAdvertTime += 15;
			format(gAdvert[slot][adCheker],MAX_PLAYER_NAME,"%s",NamePlayer[playerid]);
			gAdvert[slot][adCheckID] = playerid;
			gAdvert[slot][adCheking] = false;
			gAdvert[slot][adCheked] = true;
			//
			TransferMoney(playerid,p_info[playerid][pCash]-8000,8000,"отправил объявление");
			p_info[playerid][pCash] -= 8000;
			UpdateMoney(playerid);
			SendClientMessage(playerid,CGREEN,"Объявление отправлено на обработку, ожидайте публикации");
			SetPVarInt(playerid,"CountFlood",unix + 30);
			return 1;
		}
		case dGunWork:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid,"GunWork"))
			{
				SetPlayerSkin(playerid,GetPVarInt(playerid,"OldGunSkin"));
				format(stringer, 128, "Рабочая смена окончена. Заработано: %i$",GetPVarInt(playerid,"WorkSalary"));
				SendClientMessage(playerid,CGREEN, stringer);

				SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");
				p_info[playerid][pSalary] += GetPVarInt(playerid,"WorkSalary");
				UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);

				DeletePVar(playerid,"GunWork");
				DeletePVar(playerid,"OldGunSkin");
				DeletePVar(playerid,"gunamount");
				DeletePVar(playerid,"WorkSalary");
				DeletePVar(playerid,"pgunmodel");
				DeletePVar(playerid,"pgunlocat");
				return 1;
			}
			SetPVarInt(playerid,"OldGunSkin",GetPlayerSkin(playerid));
			SetPlayerSkin(playerid, 27);
			SendClientMessage(playerid,CGREEN, "Рабочая смена начата. Возьмите заготовку на желтом пикапе и отнесите ее на стол");
			SetPVarInt(playerid,"GunWork", true);
			return 1;
		}
		case dBanner:
		{
			if(!response)
			{
				AC_TogglePlayerControllable(playerid, 1);
				AC_SetPlayerPos(playerid, GetPVarFloat(playerid,"oldX"), GetPVarFloat(playerid,"oldY"), GetPVarFloat(playerid,"oldZ"));
				SetPlayerInterior(playerid, GetPVarInt(playerid,"oldInt"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"oldVw"));
				DeletePVar(playerid,"oldX");
				DeletePVar(playerid,"oldY");
				DeletePVar(playerid,"oldZ");
				DeletePVar(playerid,"oldInt");
				DeletePVar(playerid,"oldVw");
				return 1;
			}
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dBannerText, DIALOG_STYLE_INPUT, ""ORG"Текст баннера", "{"#cWHITE"}Используйте текст баннера", "Ввод", "Отмена");
			}
			return 1;
		}
		case dBannerText:
		{
			new idbox = GetPVarInt(playerid, "idbox");
			new sizetext, fontsize, fontface[32], fontcolor, bold, textalignment, backcolor;
			if(!response)
			{
				GetDynamicObjectMaterialText(addnews[idbox], 0, fontface, sizetext, fontface, fontsize, bold, fontcolor, backcolor, textalignment);
				stringer = "{00FF00}Параметр\t{00FF00}Значение\n";
				format(stringer, 800, "%s{"#cWHITE"}Текст объявления\t{8b4513}Изменить...\n{"#cWHITE"}Цвета фона\tБелый\nРазмер текста\t%i\nШрифт\t%s\nВыравнивание\t%s",stringer,fontsize,fontface,(textalignment == OBJECT_MATERIAL_TEXT_ALIGN_LEFT) ? ("Слева") : (textalignment == OBJECT_MATERIAL_TEXT_ALIGN_CENTER) ? ("По центру") : ("Справа"));
				ShowPlayerDialog(playerid, dBanner, DIALOG_STYLE_TABLIST_HEADERS, "Настройка баннера", stringer, "Выбрать", "Выйти");
				return 1;
			}
			if(strlen(inputtext) < 1 || strlen(inputtext) >= 64) return ShowPlayerDialog(playerid, dBannerText, DIALOG_STYLE_INPUT, ""ORG"Текст баннера", "{"#cWHITE"}Используйте текст баннера", "Ввод", "Отмена");
			GetDynamicObjectMaterialText(addnews[idbox], 0, fontface, sizetext, fontface, fontsize, bold, fontcolor, backcolor, textalignment);
			SetDynamicObjectMaterialText(addnews[idbox], 0, (inputtext), sizetext, fontface, fontsize, bold, fontcolor, backcolor, textalignment);
			GetDynamicObjectMaterialText(addnews[idbox], 0, fontface, sizetext, fontface, fontsize, bold, fontcolor, backcolor, textalignment);
			stringer = "{00FF00}Параметр\t{00FF00}Значение\n";
			format(stringer, 800, "%s{"#cWHITE"}Текст объявления\t{8b4513}Изменить...\n{"#cWHITE"}Цвета фона\tБелый\nРазмер текста\t%i\nШрифт\t%s\nВыравнивание\t%s",stringer,fontsize,fontface,(textalignment == OBJECT_MATERIAL_TEXT_ALIGN_LEFT) ? ("Слева") : (textalignment == OBJECT_MATERIAL_TEXT_ALIGN_CENTER) ? ("По центру") : ("Справа"));
			ShowPlayerDialog(playerid, dBanner, DIALOG_STYLE_TABLIST_HEADERS, "Настройка баннера", stringer, "Выбрать", "Выйти");
			return 1;
		}
		case dEPLAYER:
		{
			SetPVarInt(playerid, "EPLAYER", response);
			if(response)
			{
				new Float:x = GetPVarFloat(playerid,"e_X");
				new Float:y = GetPVarFloat(playerid,"e_Y");
				new Float:z = GetPVarFloat(playerid,"e_Z");
				SetSpawnInfoEx(playerid, p_info[playerid][pModel], x, y, z, 0.0 );
			}
			SpawnPlayer(playerid);
			return 1;
		}
		case dFloor:
		{
			if(!response) return 1;
			AC_SetPlayerPos(playerid,1429.8015,-1541.9271,1084.3739);
			SetPlayerFacingAngle(playerid,94.2909);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, listitem);
			return 1;
		}
		case dFlatScore: return pc_cmd_rmenu(playerid);
		case dFlatUi0: return ShowPlayerDialog(playerid, dFlatUi2, DIALOG_STYLE_LIST, ""ORG"Отель", ""ORG"1.{"#cWHITE"} Информация о комнате\n"ORG"2.{"#cWHITE"} Подыскать свободную комнату\n"ORG"3.{"#cWHITE"} Оплата комнаты в отеле", "Далее", "Отмена");
		case dFlatUi:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid, dFlatUi2, DIALOG_STYLE_LIST, ""ORG"Отель", ""ORG"1.{"#cWHITE"} Информация о комнате\n"ORG"2.{"#cWHITE"} Подыскать свободную комнату\n"ORG"3.{"#cWHITE"} Оплата комнаты в отеле", "Далее", "Отмена");
			return 1;
		}
		case dFlatUi2:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid, dFlatUi3, DIALOG_STYLE_INPUT, ""ORG"Информация о комнате", "{"#cWHITE"}Используйте номер комнаты и этаж через запятую\nПример: {"#cPINK"}10,5 {"#cWHITE"}(10 - номер комнаты | 50 - этаж)", "Далее", "Отмена");
				case 1:
				{
					for(new floor = 0; floor != MAX_FLOORS; ++floor)
					{
						for(new room = 0; room != MAX_ROOMS; ++room)
						{
							if(!strcmp(gRoomOwner[floor][room],"The State"))
							{
								format(stringer, 255, "Управляющий отеля: {"#cWHITE"}Мы подыскали Вам свободный номер в отеле. Этаж: {"#cGRAY"}%i {"#cWHITE"}Комната: {"#cGRAY"}%i",floor+1, room+1);
								SendClientMessage(playerid,COLOR_GREY,stringer);
								SendClientMessage(playerid,COLOR_GREY,"Управляющий отеля: {"#cWHITE"}Отправляйтесь к лифту, и купите комнату.");
								return 1;
							}
						}
					}
				}
				case 2:
				{
					if(!p_info[playerid][pRoom]) return SendErr(playerid, "У вас нет комнаты в отеле");
					ShowPlayerDialog(playerid, dFlatUi4, DIALOG_STYLE_INPUT, ""ORG"Оплата комнаты в отеле", "{"#cWHITE"}Используйте к-во дней {"#cPINK"}(от 1 до 10)", "Далее", "Отмена");
				}
			}
			return 1;
		}
		case dFlatUi4:
		{
			if(!response) return 1;
			if(isNumeric(inputtext)) return ShowPlayerDialog(playerid, dFlatUi4, DIALOG_STYLE_INPUT, ""ORG"Оплата комнаты в отеле", "{"#cWHITE"}Используйте к-во дней {"#cPINK"}(от 1 до 10)", "Далее", "Отмена");
			if(strval(inputtext) < 1 || strval(inputtext) > 10) return ShowPlayerDialog(playerid, dFlatUi4, DIALOG_STYLE_INPUT, ""ORG"Оплата комнаты в отеле", "{"#cWHITE"}Используйте к-во дней {"#cPINK"}(от 1 до 10)", "Далее", "Отмена");
			if(p_info[playerid][pCash] < (1200 * strval(inputtext))) return SendErr(playerid, "Не достаточно денег для оплаты номера в отеле");

			new room = p_info[playerid][pRoom] - 1;
			new floor = p_info[playerid][pFloor] - 1;

			gRoomScore[floor][room] = unix + (86400 * strval(inputtext));
			UpdateHotel(floor,room);

			format(stringer, 128, "Вы оплатили комнату на %i дней",strval(inputtext));
			SendSucc(playerid,stringer);

			TransferMoney(playerid,
				p_info[playerid][pCash]-(1200 * strval(inputtext)),(1200 * strval(inputtext)),"оплатил комнату в отеле");
			p_info[playerid][pCash] -= (1200 * strval(inputtext));
			UpdateMoney(playerid);
			return 1;
		}
		case dFlatUi3:
		{
			if(!response) return 1;
			if(sscanf(inputtext,"p<,>ii",params[0],params[1])) return ShowPlayerDialog(playerid, dFlatUi3, DIALOG_STYLE_INPUT, ""ORG"Информация о комнате", "{"#cWHITE"}Используйте номер комнаты и этаж через запятую\nПример: {"#cPINK"}10,5 {"#cWHITE"}(10 - номер комнаты | 50 - этаж)", "Далее", "Отмена");
			if(params[0] < 1 || params[0] > MAX_ROOMS || params[1] < 1 || params[1] > MAX_FLOORS) return ShowPlayerDialog(playerid, dFlatUi3, DIALOG_STYLE_INPUT, ""ORG"Информация о комнате", "{"#cWHITE"}Используйте номер комнаты и этаж через запятую\nПример: {"#cPINK"}10,5 {"#cWHITE"}(10 - номер комнаты | 50 - этаж)", "Далее", "Отмена");

			new room = params[0]-1;
			new floor = params[1]-1;
			new year, month, day, hour, minute, second;

			timestamp_to_date(gRoomScore[floor][room]-unix, year, month, day, hour, minute, second);
			format(stringer, 300, "{"#cRADIO"}Комната: {"#cWHITE"}%i\n{"#cRADIO"}Этаж: {"#cWHITE"}%i\n{"#cRADIO"}Владелец: {"#cWHITE"}%s\n{"#cRADIO"}Оплата дома истекает через: {"#cWHITE"}%i дней %i часов %i минут %i секунд",room+1,floor+1,gRoomOwner[floor][room],day-1, hour, minute, second);
			ShowPlayerDialog(playerid, dFlatUi0, DIALOG_STYLE_MSGBOX, ""ORG"Информация о комнате", stringer, "Назад", "");
			return 1;
		}
		case dFlatMenu:
		{
			if(!response) return 1;
			new floor = p_info[playerid][pFloor] - 1;
			new room = p_info[playerid][pRoom] - 1;
			switch(listitem)
			{
				case 0:
				{
					new year, month, day, hour, minute, second;
					timestamp_to_date(gRoomScore[floor][room]-unix, year, month, day, hour, minute, second);
					format(stringer, 128, "{"#cRADIO"}Ваша комната оплачена на: {"#cWHITE"}%i дней %i часов %i минут %i секунд\n\n{"#cRADIO"}Пополнить счет вы можете на Reception",day-1, hour, minute, second);
					ShowPlayerDialog(playerid, dFlatScore, DIALOG_STYLE_MSGBOX, ""ORG"Управление счетом", stringer, "Назад", "");
				}
				case 1:
				{
					if(caridhouse[playerid][0]) DestroyVehicleOP(caridhouse[playerid][0]),caridhouse[playerid][0]=0;
					p_info[playerid][pRoom] = 0;
					p_info[playerid][pFloor] = 0;
					UpdatePlayerData(playerid, "pRoom",p_info[playerid][pRoom]);
					UpdatePlayerData(playerid, "pFloor",p_info[playerid][pFloor]);
					strmid(gRoomOwner[floor][room],"The State",0,strlen("The State"),31);
					UpdateHotel(floor,room);
					SendSucc(playerid, "Вы выселены из отеля по собственному желанию");
					SpawnPlayer(playerid);
				}
			}
			return 1;
		}
		case dBuyRoom:
		{
			if(!response)
			{
				DeletePVar(playerid,"id_room");
				DeletePVar(playerid,"id_floor");
				return 1;
			}
			if(p_info[playerid][pRoom]) return SendErr(playerid, "У вас уже есть комната в отеле.");
			if(p_info[playerid][pCash] < 8000) return SendErr(playerid, "У вас не достаточно денег для покупки этого номера в отеле");

			new floor = GetPVarInt(playerid,"id_floor");
			new room = GetPVarInt(playerid,"id_room");
			strmid(gRoomOwner[floor][room],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),31);

			SCM(playerid,CRADIO,"Поздравляем! Вы приобрели комнату в отеле {"#cWHITE"}'MARIGOLD'");
			format(stringer, 128, "Номер в отеле: {"#cWHITE"}%i{"#cRADIO"} Этаж: {"#cWHITE"}%i", room+1, floor+1);
			SCM(playerid,CRADIO,stringer);
			SCM(playerid,CRADIO,"Управление комнатой: {"#cWHITE"}/rmenu");
			AC_SetPlayerPos(playerid,2076.3784 + (1.6 * floatsin(-1.2861, degrees)),-3433.2544 + (1.6 * floatcos(-1.2861, degrees)),1669.9690);
			SetPlayerFacingAngle(playerid,1.2861);
			SetPlayerInterior(playerid, room+1);
			SetPlayerVirtualWorld(playerid, floor+1);

			// gRoomScore[floor][room] = unix + (3600 * 5);
			gRoomScore[floor][room] = unix + 300;

			p_info[playerid][pRoom] = room + 1;
			p_info[playerid][pFloor] = floor + 1;

			UpdatePlayerData(playerid, "pRoom",p_info[playerid][pRoom]);
			UpdatePlayerData(playerid, "pFloor",p_info[playerid][pFloor]);
			UpdateHotel(floor,room);

			TransferMoney(playerid,p_info[playerid][pCash]-8000,8000,"купил комнату в отеле");
			p_info[playerid][pCash] -= 8000;
			UpdateMoney(playerid);

			SetHotelCar(playerid);
			return 1;
		}
		case dEnterRoom:
		{
			if(!response)
			{
				DeletePVar(playerid,"id_room");
				DeletePVar(playerid,"id_floor");
				return 1;
			}
			new floor = GetPVarInt(playerid,"id_floor");
			new room = GetPVarInt(playerid,"id_room");
			AC_SetPlayerPos(playerid,2076.3784 + (1.6 * floatsin(-1.2861, degrees)),-3433.2544 + (1.6 * floatcos(-1.2861, degrees)),1669.9690);
			SetPlayerFacingAngle(playerid,1.2861);
			SetPlayerInterior(playerid, room+1);
			SetPlayerVirtualWorld(playerid, floor+1);
			return 1;
		}
		/*case dGraff:
		{
			new gf=GetPVarInt(playerid,"gf")-1;
			if(gf == -1) return 1;
			if(!response)
			{
				SetCameraBehindPlayer(playerid);
				DestroyDynamicObject(graff_obj[gf]);
				DeletePVar(playerid,"gf");
				return 1;
			}
			if(strlen(inputtext) < 1 || strlen(inputtext) > 64) return ShowPlayerDialog(playerid, dGraff, DIALOG_STYLE_INPUT, "{"#cINFO"}Текст", "{"#cWHITE"}Используйте текст вашего граффити", "Ввод", "Отмена");
			new color = (!IsAGang(playerid)) ? (0x000000FF) : (Fractions[p_info[playerid][tMember]][fractionColor]);
			format(stringer,255,"{%06x}%s",color>>>8,inputtext);
			SetDynamicObjectMaterialText(graff_obj[gf],  0, stringer,120, "Arial", 35, 1, 0xFFFFFFFF, 0, 1);
			EditDynamicObject(playerid, graff_obj[gf]);
			SendInf(playerid,"Редактируйте текст по своему усмотрению.");
			return 1;
		}*/
		case dTDFuel:
		{
			if(!response) return 1;
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new step = GetPVarInt(playerid,"td_step")+1;
			new Float:cfuel = GetPVarFloat(playerid,"start_fuel");
			new price_fill = floatround(((step * 5)-floatround(cfuel)) * Business[fuel][EnterPrice]);
			new count_fill = floatround((step * 5)-floatround(cfuel));
			if(p_info[playerid][pCash] < price_fill)
			{
				SendErr(playerid,"У вас не достаточно наличных для заправки");
			}//Business[i][bProd]
			else if(Business[fuel][bProd] - count_fill <= 0)
			{
				SendErr(playerid,"На заправке недостаточно литров для заправки");
			}
			else
			{
				///format(stringer, 144, "BIZ: %d", fuel);
				///SendClientMessage(playerid,-1,stringer);
				TransferMoney(playerid,p_info[playerid][pCash]-price_fill,price_fill,"заплатил за заправку автомобиля.");
				p_info[playerid][pCash] -= price_fill;
				Business[fuel][bProd] -= count_fill;
				//printf("-prod: %d", floatround((step * 5)-floatround(cfuel)));
				Business[fuel][Bank] += price_fill;
				AddMafiaBank(fuel, price_fill);
				UpdateOtherBusiness(fuel);
				Update3DTextLabelBusiness(fuel);
				SendInf(playerid,"Идет заправка автомобиля");
				ToggleEngine(GetPlayerVehicleID(playerid));
				SetTimerEx("FuelCar",500,0,"i",playerid);
			}
			TD_EndFuel(playerid);
			////DeletePVar(playerid,"fuelid");
			DeletePVar(playerid,"start_fuel");
			return 1;
		}
		case dOr:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dOr2, DIALOG_STYLE_LIST, "Оружие", "SD Pistol\nDesert Eagle\nShotgun\nMP5\nAK-47\nM4", "Выбрать", "Отмена");
		}
		case dOr2:
		{
			if(!response) return 1;

			new gam[6][2]={
				{23, 500},
				{24, 400},
				{25, 400},
				{29, 700},
				{30, 700},
				{31, 700}
			};

			AC_GivePlayerWeapon(playerid, gam[listitem][0], gam[listitem][1]);

			reset_or(playerid, 0, true);
			reset_or(playerid, 1, true);

			ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Информация", "Попадайте по мишеням.\nЗа каждую пораженную мишень ваш уровень стрельбы будет увеличиваться", "Стрелять!", "");

			SetPVarInt(playerid, "opc_time", unix + 300);
			return 1;
		}
		case dTuningSucces:
		{
			if(!response) return 1;
			ShowPlayerDialog ( playerid , dTuningSucces2, DIALOG_STYLE_LIST, "{"#cORANGE"}Выберите автомобиль", "{"#cWHITE"}Машина №1\nМашина №2", "Выбрать", "Отмена");
			return 1;
		}
		case dTuningSucces2:
		{
			if ( !response ) return 1;
			if ( !caridhouse[playerid][listitem] ) return SendClientMessage ( playerid , COLOR_GREY , "Ошибка. Автомобиль не создан, введите /fixcar [ 1-2 ]" ) ;
			if ( GetVehicleModel(caridhouse[playerid][listitem]) == 462 ) return SendClientMessage ( playerid , COLOR_GREY , "Ошибка. Нельзя тюнинговать мопед" ) ;

			SelectCarToTune[playerid] = listitem;

			GetPlayerPos(playerid, OldTuningPos[playerid][0], OldTuningPos[playerid][1], OldTuningPos[playerid][2]);
			GetPlayerFacingAngle(playerid, OldTuningPos[playerid][3]);

			OldTuningVI[playerid][0] = GetPlayerVirtualWorld(playerid);
			OldTuningVI[playerid][1] = GetPlayerInterior(playerid);

			ShowTuneList[playerid][0] = true;

			AC_SetVehicleVirtualWorld(caridhouse[playerid][listitem], playerid + 1);
			SetPlayerVirtualWorld ( playerid , playerid + 1 ) ;
			SetPlayerInterior(playerid, 0);

			AC_LinkVehicleToInterior(caridhouse[playerid][listitem], 0);
			AC_SetVehiclePos(caridhouse[playerid][listitem],-82.8133,183.3843,1003.6896 + 0.2);
			AC_SetVehicleZAngle(caridhouse[playerid][listitem],270.0);
			AC_PutPlayerInVehicle(playerid, caridhouse[playerid][listitem], 0);
			AC_SetVehicleZAngle(caridhouse[playerid][listitem],270.0);

			TextDrawShowForPlayer(playerid,BackTune[0]);
			TextDrawShowForPlayer(playerid,SupportButton[0]);
			TextDrawShowForPlayer(playerid,SupportButton[1]);
			for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawShowForPlayer(playerid,TuneList[i]);

			SelectTextDraw(playerid, 0xC7C7C7AA);
			SetCameraBehindPlayer(playerid);

			return 1;
		}
		case dTuningSucces3:
		{
			if (!response) return 1;
			if ( SelectCarToTune [ playerid ] == -1 ) return SendClientMessage ( playerid , COLOR_GREY , "Ошибка. \" SelectCarToTune \" = -1." ) ;
			new count_zakaz = 0;
			for(new i = 0; i < 12; i++)
			{
				if(TempTuningPlayer [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] == -1) continue;
				if(listitem == count_zakaz)
				{
					if(p_info[playerid][pCash] < TuneListPrice [ i ] ) return SendClientMessage ( playerid, COLOR_GREY , "У вас не достаточно наличных для оплаты" ) ;

					TransferMoney(playerid,p_info[playerid][pCash]-TuneListPrice [ i ],TuneListPrice [ i ],"заплатил за тюнинг (dTuningSucces3).");

					p_info[playerid][pCash] -= TuneListPrice [ i ] ;
					UpdateMoney(playerid);

					format(stringer, 300, "Вы успешно приобрели \"{ffff00}%s{"#cWHITE"}\", за {33aa33}%d {"#cWHITE"}$ для вашего автомобиля", TuneListLabel [ i ] , TuneListPrice [ i ] ) ;
					SendClientMessage(playerid, -1, stringer);

					new sql_put_tune[312];
					format ( sql_put_tune , 312, "INSERT INTO `log_tune`(`accountid`,`remain`, `detail`, `date`) VALUES ('%d','%d','%s',NOW())", p_info[playerid][pID], TuneListPrice [ i ], TuneListLabel [ i ] );
					mysql_pquery(connects, sql_put_tune, "", "");

					gPlayerTuning [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] = TempTuningPlayer [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] ;
					TempTuningPlayer [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] = -1;
					UpdateTuning(playerid,SelectCarToTune[playerid] + 1);
					break;
				}

				count_zakaz++;
			}

			count_zakaz = 1;
			stringer[0] = EOS;
			for(new i = 0; i < 12; i++)
			{
				if(TempTuningPlayer [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] == -1) continue;
				format(stringer, 1500, "%s{"#cWHITE"}%d.\t%d$\t%s\t{33aa33}Оплатить\n", stringer, count_zakaz, TuneListPrice [ i ] , TuneListLabel [ i ] ) ;
				count_zakaz++;
			}
			if ( count_zakaz != 1 ) ShowPlayerDialog ( playerid , dTuningSucces3, DIALOG_STYLE_TABLIST, "{"#cORANGE"}Оплата услуг", stringer, "Выбрать", "Отмена");

			return 1;
		}
		case dTuningMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(UpdateActorTextMast_Timer[0] != -1) return SendClientMessage(playerid,COLOR_GREY,"Занято. Соблюдайте очередь");

					new
						Float:X, Float:Y, Float:Z, Float:A,
						Float:X2, Float:Y2, Float:Z2,
						Float:CamX, Float:CamY, Float:CamZ, virtualworld = GetPlayerVirtualWorld(playerid);
					if ( virtualworld != 0 ) return SendClientMessage(playerid,COLOR_GREY,"Ошибка. Вы не в мастерской !");
					GetActorPos(mast_actor [ virtualworld ], X, Y, Z);
					GetActorFacingAngle(mast_actor [ virtualworld ], A);

					GetPlayerCameraPos(playerid, CamX, CamY, CamZ);

					X2 = 2.7 * floatsin(A + 190.0, degrees) + X;
					Y2 = -2.7 * floatcos(A + 190.0, degrees) + Y;
					Z2 = Z + 0.8;

					InterpolateCameraPos(playerid,CamX,CamY,CamZ,X2,Y2,Z2,700,CAMERA_MOVE);
					GetPlayerCameraFrontVector(playerid,X2,Y2,Z2);
					InterpolateCameraLookAt(playerid,CamX + X2, CamY + Y2, CamZ + Z2, X, Y, Z, 700, CAMERA_MOVE);

					mast_actor_id [ virtualworld ] = playerid;
					SetPVarInt(playerid, "UpdateActorTextMast_ID", virtualworld + 1 );
					UpdateActorTextMast_Timer[0] = SetTimerEx ( "UpdateActorTextMast", 15, 0, "ii", virtualworld, 0);
					//-1722.7828, 267.1957, 1074.1749, 131.7022
				}
				case 1:
				{
					new count_zakaz = 1;
					stringer[0] = EOS;
					for(new i = 0; i < 12; i++)
					{
						if(SelectCarToTune [ playerid ] == -1) continue;
						if(TempTuningPlayer [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] == -1) continue;
						format(stringer, 1500, "%s{"#cWHITE"}%d.\t%d$\t%s\t{33aa33}Оплатить\n", stringer, count_zakaz, TuneListPrice [ i ] , TuneListLabel [ i ] ) ;
						count_zakaz++;
					}
					if ( count_zakaz != 1 )
					{
						ShowPlayerDialog ( playerid , dTuningSucces3, DIALOG_STYLE_TABLIST, "{"#cORANGE"}Оплата услуг", stringer, "Выбрать", "Отмена");
					}
					else
					{
						ShowPlayerDialog ( playerid , dTuningSucces4, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}Информация", "{"#cWHITE"}Вы не заказывали тюнинг\nВыберите первый пункт меню:\n{AFAFAF}-- {"#cWHITE"}Заказ тюнинга", "Назад", "");
					}
				}
				case 2:
				{
					new sql_put_tune[312];
					format ( sql_put_tune , 312, "SELECT * FROM `log_tune` WHERE `accountid` = '%d'", p_info[playerid][pID] );
					mysql_pquery(connects, sql_put_tune, "OnPlayerLoadTune", "i", playerid);
				}
				case 3:
				{
					ShowPlayerDialog ( playerid , dTuningSucces4, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}Информация", "{"#cWHITE"}В нашем СТО, вы можете модернизировать ваш транспорт.\nМы используем только новые технологии\n\nДля того чтобы начать модернизацию\nВыберите первый пункт меню:\n{AFAFAF}-- {"#cWHITE"}Заказ тюнинга", "Назад", "");
				}
			}

			return 1;
		}
		case dTuningSucces4:
		{
			ShowPlayerDialog(playerid,dTuningMenu,DIALOG_STYLE_LIST, "{"#cORANGE"}Меню", "{AFAFAF}-- {"#cWHITE"}Заказ тюнинга\n{AFAFAF}-- {"#cWHITE"}Оформить заказ\n{AFAFAF}-- {"#cWHITE"}Просмотр заказанных услуг\n{AFAFAF}-- {"#cWHITE"}Информация", "Выбрать", "Закрыть");
		}//ALTER TABLE  `admin` ADD  `uAdmin` VARCHAR( 64 ) NOT NULL DEFAULT  '1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1'
		case dUAdmin:
		{
			if ( !response ) return true;
			new adm_u_admin = GetPVarInt(playerid,"adm_u_admin");
			uAdmin[adm_u_admin][listitem]=(uAdmin[adm_u_admin][listitem] == 1)?(0):(1);
			new show_u_admin_dialog[712]="{"#cWHITE"}";
			for(new i=0; i<17; i++) format(show_u_admin_dialog,712,"%s%s\t%s\n",show_u_admin_dialog,uAdmin_Name[i],(uAdmin[adm_u_admin][i] == 1) ? ("( {00CC00}Разрешено{"#cWHITE"} )") : ("( {FF636E}Запрещенно{"#cWHITE"} )"));
			ShowPlayerDialog(playerid,dUAdmin,DIALOG_STYLE_LIST,"Управление командами",show_u_admin_dialog,"Выбрать", "Закрыть");
			format(show_u_admin_dialog, 200, "UPDATE `admin` SET `uAdmin` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `Name` = '%s'",
			uAdmin[adm_u_admin][0],uAdmin[adm_u_admin][1],uAdmin[adm_u_admin][2],uAdmin[adm_u_admin][3],uAdmin[adm_u_admin][4],uAdmin[adm_u_admin][5],uAdmin[adm_u_admin][6],uAdmin[adm_u_admin][7],uAdmin[adm_u_admin][8],uAdmin[adm_u_admin][9],uAdmin[adm_u_admin][10],uAdmin[adm_u_admin][11],uAdmin[adm_u_admin][12],uAdmin[adm_u_admin][13],uAdmin[adm_u_admin][14],uAdmin[adm_u_admin][15],uAdmin[adm_u_admin][16],NamePlayer[adm_u_admin]);
			mysql_pquery(connects, show_u_admin_dialog, "", "");
			return true;
		}
		case dGunRIM:
		{
			if(!response) return 1;
			AC_GivePlayerWeapon(playerid,gun_rim[listitem],gun_rim_patron[listitem]);
			format(stringer,144,"Вы взяли: {"#cORANGE"}%s {AFAFAF}| %d патронов",gun_name_rim[listitem],gun_rim_patron[listitem]);
			SendClientMessage(playerid,-1,stringer);
			new gun_rim_string[700];
			strcat(gun_rim_string,"{"#cWHITE"}");
			for(new i=0;i<5;i++)format(gun_rim_string,700,"%s-%s\n",gun_rim_string,gun_name_rim[i]);
			ShowPlayerDialog(playerid,dGunRIM,DIALOG_STYLE_LIST,"Оружие",gun_rim_string,"Выбрать","Отмена");
			return 1;
		}
		case dGiveGunTD:
		{
			if(!response) return true;
			if(p_info[playerid][tMember]==F_NONE) return true;

			if(strfind(inputtext, "Бронежилет") != -1)
			{
				AC_SetPlayerArmour(playerid, 100.0);
				return true;
			}
			if(strfind(inputtext, "Щит") != -1)
			{
				p_info[playerid][pShield] = 100.0;
				SetPlayerAttachedObjectEx(playerid, 6, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
				SendClientMessage(playerid, CWHITE, "У вас есть щит. Зажмите клавижу {33CCFF}Быстрого бега{"#cWHITE"} и клавишу {33CCFF}медленной ходьбы{"#cWHITE"} чтобы его использовать");
				return true;
			}
			if(listitem>=10) return true;
			if(GunTickGet[playerid][listitem]>0)
			{
				format(stringer, 144, "Подождите %d секунд ..",GunTickGet[playerid][listitem]);
				SendClientMessage(playerid,-1,stringer);
				return true;
			}
			GunTickGet[playerid][listitem] = 30;
			for(new i = 0 ; i < 10 ; i++)
			{
				if(strfind(inputtext, FW[i][p_info[playerid][tMember]][fwName]) != -1)
				{
					new count_minus = 100;
					switch(FW[i][p_info[playerid][tMember]][fwGunID])
					{
						case 24: count_minus = 50;
						case 25: count_minus = 50;
						case 29: count_minus = 70;
						case 31: count_minus = 100;
						case 34: count_minus = 250;
						default: count_minus = 100;
					}
					if(frac_metall[p_info[playerid][tMember]]<count_minus) return SCM(playerid,COLOR_GREY,"Недостаточно металла");
					if(frac_patron[p_info[playerid][tMember]]<FW[i][p_info[playerid][tMember]][fwGunAmmo]) return
						SCM(playerid,COLOR_GREY,"Недостаточно патрон на складе");
					if(p_info[playerid][tRank] < FW[i][p_info[playerid][tMember]][fwRank] && FW[i][p_info[playerid][tMember]][fwRank] != 0)
					{
						format(stringer,144,"Доступно с %d ранга",FW[i][p_info[playerid][tMember]][fwRank]);
						SCM(playerid,COLOR_GREY,stringer);
						return true;
					}
					frac_metall[p_info[playerid][tMember]] -= count_minus;
					frac_patron[p_info[playerid][tMember]] -= FW[i][p_info[playerid][tMember]][fwGunAmmo];
					AC_GivePlayerWeapon(playerid,FW[i][p_info[playerid][tMember]][fwGunID],FW[i][p_info[playerid][tMember]][fwGunAmmo]);
					break;
				}
			}
			if(p_info[playerid][tMember]==F_NAVY)
			{
				AC_SetPlayerHealth(playerid,100);
				if(frac_metall[p_info[playerid][tMember]]>10){
					frac_metall[p_info[playerid][tMember]] -= 10;
					UpdateFractionStore(p_info[playerid][tMember]);
				}
			}
			ShowGetGun(playerid);
			return true;
		}
		case 5576: // Казино 1
		{
			if(!response) return true;
			if(RuletSum[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали ставку!");
			new summa;
			if(sscanf(inputtext,"i",summa)) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{"#cWHITE"}Минимальная ставка {00CC00}50.000 $\n{"#cWHITE"}Максимальная ставка {00CC00}100.000 $\n{"#cWHITE"}Введите {00CC00}сумму:","Играть","Назад");
			if(p_info[playerid][pCash] < summa) return SendErr(playerid,"У вас нет столько денег!");
			if(summa < 50000 || summa > 100000) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{"#cWHITE"}Минимальная ставка {00CC00}50.000 $\n{"#cWHITE"}Максимальная ставка {00CC00}100.000 $\n{"#cWHITE"}Введите {00CC00}сумму:","Играть","Назад");
			TransferMoney(playerid,p_info[playerid][pCash]-summa,summa,"поставил ставку (5576)");
			p_info[playerid][pCash] -= summa;
			UpdateMoney(playerid);
			RuletSum[playerid] = summa;
			DestroyPlayerObject(playerid, Fishka[playerid]);
			Fishka[playerid] 		= 	CreatePlayerObject(playerid, 1930,fishechkax[playerid],fishechkay[playerid],fishechkaz[playerid],0.00,0.00,0.00);
			Upravakazino[playerid] 	=	false;
			SendClientMessage(playerid, -1, "Ставка сделана");
		}
		case 5577: // Казино 2
		{
			if(!response) return true;
			if(RuletSum[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали ставку!");
			new summa;
			if(sscanf(inputtext,"i",summa)) return ShowPlayerDialog(playerid,5577,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{"#cWHITE"}Минимальная ставка {00CC00}100.000 $\n{"#cWHITE"}Максимальная ставка {00CC00}500.000 $\n{"#cWHITE"}Введите {00CC00}сумму:","Играть","Назад");
			if(p_info[playerid][pCash] < summa) return SendErr(playerid,"У вас нет столько денег!");
			if(summa < 100000 || summa > 500000)return ShowPlayerDialog(playerid,5577,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{"#cWHITE"}Минимальная ставка {00CC00}100.000 $\n{"#cWHITE"}Максимальная ставка {00CC00}500.000 $\n{"#cWHITE"}Введите {00CC00}сумму:","Играть","Назад");
			TransferMoney(playerid,p_info[playerid][pCash]-summa,summa,"поставил ставку (5577)");
			p_info[playerid][pCash] -= summa;
			UpdateMoney(playerid);
			RuletSum[playerid] = summa;
			DestroyPlayerObject(playerid, Fishka[playerid]);
			Fishka[playerid] 		= 	CreatePlayerObject(playerid, 1930,fishechkax[playerid],fishechkay[playerid],fishechkaz[playerid],0.00,0.00,0.00);
			Upravakazino[playerid] 	=	false;
			SendClientMessage(playerid, -1, "Ставка сделана");
		}
		case 5578: // Казино 3
		{
			if(!response) return true;
			if(RuletSum[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали ставку!");
			new summa;
			if(sscanf(inputtext,"i",summa)) return ShowPlayerDialog(playerid,5578,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{"#cWHITE"}Минимальная ставка {00CC00}$500.000\n{"#cWHITE"}Максимальная ставка {00CC00}$1.000.000\n{"#cWHITE"}Введите {00CC00}сумму:","Играть","Назад");
			if(p_info[playerid][pCash] < summa) return SendErr(playerid,"У вас нет столько денег!");
			if(summa < 500000 || summa > 1000000)return ShowPlayerDialog(playerid,5578,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{"#cWHITE"}Минимальная ставка {00CC00}$500.000\n{"#cWHITE"}Максимальная ставка {00CC00}$1.000.000\n{"#cWHITE"}Введите {00CC00}сумму:","Играть","Назад");
			TransferMoney(playerid,p_info[playerid][pCash]-summa,summa,"поставил ставку (5578)");
			p_info[playerid][pCash] -= summa;
			UpdateMoney(playerid);
			RuletSum[playerid] = summa;
			DestroyPlayerObject(playerid, Fishka[playerid]);
			Fishka[playerid] 		= 	CreatePlayerObject(playerid, 1930,fishechkax[playerid],fishechkay[playerid],fishechkaz[playerid],0.00,0.00,0.00);
			Upravakazino[playerid] 	=	false;
			SendClientMessage(playerid, -1, "Ставка сделана");
		}
		case D_FARM_PANEL:
		{
			if(response==0)return 1;
			new f = GetPVarInt(playerid,"owner_farm")-1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,D_FARM_PANEL+1,DIALOG_STYLE_LIST,"Управление бюджетом", "{"#cWHITE"}1. Снять с баланса\n2. Положить на баланс\n3. Взять в долг у правительства", "Выбрать", "Отмена");
				case 2:
					ShowPlayerDialog(playerid,D_FARM_PANEL+2,DIALOG_STYLE_INPUT," ", " \t\n{6495ED}Введите цену оплаты рабочим за куст", "Ввод", "Отмена");
				case 4:
				{
					SendClientMessage(playerid,0xFAAC58FF,"__________________| {"#cWHITE"}Вы продали свою ферму {FAAC58}|__________________");
					if(_farm[f][farm_cash]>1)
					{
						format(stringer,128,"---- Выручка: {42B02C}%d$", _farm[f][farm_cash]);
					}
					else format(stringer,128,"---- Выручка: {42B02C}Нету");
					SendClientMessage(playerid,-1,stringer);
					p_info[playerid][pCash] += _farm[f][farm_cash];
					UpdateMoney(playerid);
					_farm[f][farm_cash] = 0;
					strmid(_farm[f][farm_owner],"The State",0,strlen("The State"),MAX_PLAYER_NAME);
					UpdateFarm(f);
				}
				default: pc_cmd_fpanel(playerid);
			}
			return 1;
		}
		case D_FARM_PANEL+1:
		{
			if(response==0)return pc_cmd_fpanel(playerid);
			switch(listitem)
			{
				case 0:
					ShowPlayerDialog(playerid,D_FARM_PANEL+3,DIALOG_STYLE_INPUT," ","{"#cWHITE"}Введите сумму которую хотите снять с баланса", "Ввод", "Отмена");
				case 1:
					ShowPlayerDialog(playerid,D_FARM_PANEL+4,DIALOG_STYLE_INPUT," ","{"#cWHITE"}Введите сумму которую хотите положить на баланс", "Ввод", "Отмена");
				case 2:
					SendClientMessage(playerid, -1, "{82A3DF}Ожидайте в следующем обновлении");
			}
			return 1;
		}
		case D_FARM_PANEL+3:
		{
			new f = GetPVarInt(playerid,"owner_farm")-1;
			if(f==-1) return 1;
			if(sscanf(inputtext,"i",params[0])) return ShowPlayerDialog(playerid,D_FARM_PANEL+3,DIALOG_STYLE_INPUT," ","{"#cWHITE"}Введите сумму которую хотите снять с баланса", "Ввод", "Отмена");
			if(params[0] < 1 || params[0] > _farm[f][farm_cash]) return SendClientMessage(playerid,0xAFAFAFFF,"В Бюджете фермы нет такой суммы, либо введенная сумма неверна.");

			_farm[f][farm_cash] -= params[0];
			p_info[playerid][pCash] += params[0];
			UpdateMoney(playerid);
			UpdateFarm(f);
		}
		case D_FARM_PANEL+4:
		{
			new f = GetPVarInt(playerid,"owner_farm")-1;
			if(f==-1) return 1;
			if(sscanf(inputtext,"i",params[0])) return ShowPlayerDialog(playerid,D_FARM_PANEL+4,DIALOG_STYLE_INPUT," ","{"#cWHITE"}Введите сумму которую хотите положить на баланс", "Ввод", "Отмена");
			if(params[0] < 1 || params[0] > p_info[playerid][pCash]) return SendClientMessage(playerid,0xAFAFAFFF,"У вас нет такой суммы, либо введенная сумма неверна.");
			_farm[f][farm_cash] += params[0];
			p_info[playerid][pCash]-=params[0];
			UpdateMoney(playerid);
			UpdateFarm(f);
		}
		case D_FARM_PANEL+2:
		{
			new f = GetPVarInt(playerid,"owner_farm")-1;
			if(f==-1) return 1;
			if(response==0)return pc_cmd_fpanel(playerid);
			if(sscanf(inputtext,"i",params[0])) return ShowPlayerDialog(playerid,D_FARM_PANEL+1,DIALOG_STYLE_INPUT," ", " \t\n{6495ED}Введите цену оплаты рабочим за куст", "Ввод", "Отмена");
			if(params[0]<10||params[0]>100) return SendClientMessage(playerid,0xAFAFAFFF,"Ошибка. От 10 до 100"), ShowPlayerDialog(playerid,D_FARM_PANEL+1,DIALOG_STYLE_INPUT," ", " \t\n{6495ED}Введите цену оплаты рабочим за куст", "Ввод", "Отмена");
			_farm[f][farm_cost_flow]=params[0];
			pc_cmd_fpanel(playerid);
			SendClientMessage(playerid,0x82A3DFFF,"Вы успешно изменили оплату рабочим за куст");
			UpdateFarm(f);
			return 1;
		}
		case 18996:
		{
			if(!response) return 1;
			new f = GetPVarInt(playerid, "who_is_farm");
			DeletePVar(playerid, "who_is_farm");
			switch(listitem)
			{
				case 0:
				{
					if(!GetPVarInt(playerid,"start_farm"))
					{
						SetPVarInt(playerid, "old_farm_skin", GetPlayerSkin(playerid));
						if(p_info[playerid][pSex] == 1) SetPlayerSkin(playerid, 133);
						if(p_info[playerid][pSex] == 2) SetPlayerSkin(playerid, 131);
						SetPVarInt(playerid,"start_farm", f + 1);
						SendClientMessage(playerid,0x73B461FF,"[Информация]{"#cWHITE"} Вы переоделись в форму начинающего фермера!");
						//SendClientMessage(playerid,0x73B461FF,"[Информация]{"#cWHITE"} Отправляйтесь по красному маркеру и переносите сено на склад!");
					}
					else
					{
						SetPlayerSkin(playerid, GetPVarInt(playerid, "old_farm_skin"));
						DeletePVar(playerid, "old_farm_skin");
						FinishJobFarm(playerid);
					}
				}
			}
			return 1;
		}
		case 18995:
		{
			if ( !response) return 1;
			new f = GetPVarInt(playerid, "use_farm");
			new f2 = GetPVarInt(playerid, "use_farm_vehicle")-1;
			if ( _farm[f][farm_count_flows][f2] == 0 )
				return SendClientMessage(playerid,0xAFAFAFFF, "В машине нет зерна");
			StartFarmLoad(playerid);
			return 1;
		}
		case dSAP:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					if(BONUS_PAYDAY) SendClientMessage(playerid, -1, !"Вы успешно {FF0000}отключили {FFFFFF}x4"), BONUS_PAYDAY = 0;
					else SendClientMessage(playerid, -1, !"Вы успешно {00CC00}включили {FFFFFF}x4"), BONUS_PAYDAY = 1;

					if(BONUS_PAYDAY) SendRconCommand("hostname "ON_SERVER_BONUS"");
					else SendRconCommand("hostname "OFF_SERVER_BONUS"");
					
     				mysql_query_string[0] = EOS;
					format(mysql_query_string, 50, "UPDATE `server_settings` SET `BONUS_PAYDAY` = '%d'", BONUS_PAYDAY);
					mysql_pquery(connects, mysql_query_string, "", "");
				}
    			case 1:
				{
	   		        for(new i;i<110;i++)
					{
					    if(PodarokInfo[i][porCreat]==-1) PodarokInfo[i][porCreat] = CreateDynamicPickup(19056,1,PodarokInfo[i][porPos][0], PodarokInfo[i][porPos][1], PodarokInfo[i][porPos][2],-1);
					}
					SendClientMessageToAll(0xFF8A1Cff,"[ Подсказка ]{FFFFFF} Где-то недалеко от вас появились подарки!");
				}
			}
			return 1;
		}
		case dQuestShow:
		{
			if(GetPVarInt(playerid, "pass_photo"))
			{
				if(flash_timer_td[playerid]==-1) flash_timer_td[playerid] = SetTimerEx("FlashPlayer", 100, 1, "i", playerid);
				DeletePVar(playerid, "pass_photo");
				SetPVarInt(playerid, "take_photo", true);
			}
			else
			{
				SetCameraBehindPlayer(playerid);
			}
			DeletePVar(playerid,"talk_bot");
		}
		case dRegistrationPass:
		{
			new reg_day,reg_month,reg_year;
			if(!response)
			{
				return FIXES_ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1,  0, 0, 0, 0, 1, 1);
			}
			else if(sscanf(inputtext,"p<.>iii",reg_day,reg_month,reg_year))
			{
				return ShowPlayerDialog(playerid,dRegistrationPass,1,"{FFFFFF}Заполнение бланка паспорта", "{FFFFFF}Введите дату вашего рождения:", "Далее", "Отмена");
			}
			else if(reg_year < 1900 || reg_year > 1993)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы неверно указали год");
				return ShowPlayerDialog(playerid,dRegistrationPass,1,"{FFFFFF}Заполнение бланка паспорта", "{FFFFFF}Введите дату вашего рождения, через запятую. Пример:\n{FF6347}13.09.1993 {AFAFAF}(Год должен быть от 1900 до 1993)", "Далее", "Отмена");
			}
			else if(reg_month < 1 || reg_month > 12)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы неверно указали месяц");
				return ShowPlayerDialog(playerid,dRegistrationPass,1,"{FFFFFF}Заполнение бланка паспорта", "{FFFFFF}Введите дату вашего рождения, через запятую. Пример:\n{FF6347}13.09.1993 {AFAFAF}(Год должен быть от 1900 до 1993)", "Далее", "Отмена");
			}
			else if((reg_month == 2 && reg_day > 28) || (reg_day < 1 || reg_day > 31))
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы неверно указали день");
				return ShowPlayerDialog(playerid,dRegistrationPass,1,"{FFFFFF}Заполнение бланка паспорта", "{FFFFFF}Введите дату вашего рождения, через запятую. Пример:\n{FF6347}13.09.1993 {AFAFAF}(Год должен быть от 1900 до 1993)", "Далее", "Отмена");
			}
			strmid(date_password[playerid], inputtext, 0, strlen(inputtext), 64);

			mysql_query_string[0]=EOS;
			mysql_format(connects,mysql_query_string,512,"UPDATE `accounts` SET `date_password` = '%e' WHERE `ID` = '%d'", inputtext,p_info[playerid][pID]);
			mysql_pquery(connects,mysql_query_string);

			SetPVarInt(playerid,"take_photo_day",reg_day);
			SetPVarInt(playerid,"take_photo_month",reg_month);
			SetPVarInt(playerid,"take_photo_year",reg_year);
			AC_SetPlayerPos(playerid, 2295.6533,-1992.3228,-34.1641);
			SetPlayerFacingAngle(playerid, 271.9487);
			SetPVarInt(playerid, "pass_photo", true);
			FIXES_ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1,  0, 0, 0, 0, 1, 1);
			new Float:x, Float:y, Float:z, Float:a;
			x = 2295.6533;
			y = -1992.3228;
			z = -34.1641;
			a = 271.9487;
			InterpolateCameraPosToPoint(playerid, x + 1.0 * floatsin(-a, degrees),y + 1.0 * floatcos(-a, degrees),z+0.4,a-200.0);
			QuestStep[0][playerid]=3;
			UpdatePlayerQuestStep(playerid);
			ShowPlayerDialog(playerid,dQuestShow,0," ", "{FFFFFF}Скажите: Чиссс (фотография на паспорт)", "Ок", "");
			return 1;
		}
		case dQuestShowList:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: // Начало
				{
					if ( QuestStep[0][playerid] == 0 )
					{
						ShowPlayerDialog(playerid,0000,0,"   ", "{AFAFAF}Для того чтобы начать этот квест, вам нужно отправиться к Джону\n- Он находится на респавне новичков", "Ок", "");
					}
					else if ( QuestStep[0][playerid] >= 1 && QuestStep[0][playerid] <= 8)
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}");

						if(QuestStep[0][playerid] >= 1 && QuestStep[0][playerid] < 2) strcat(stringer, "1. Аренда скутера\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 2) strcat(stringer, "1. Аренда скутера\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[0][playerid] >= 2 && QuestStep[0][playerid] < 3) strcat(stringer, "2. Получение гражданства в мэрии\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 3) strcat(stringer, "2. Получение гражданства в мэрии\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[0][playerid] >= 3 && QuestStep[0][playerid] < 4) strcat(stringer, "3. Встреча с Джоном для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 4) strcat(stringer, "3. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[0][playerid] >= 4 && QuestStep[0][playerid] < 5) strcat(stringer, "4. Регистрация банковского счета\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 5) strcat(stringer, "4. Регистрация банковского счета\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[0][playerid] >= 5 && QuestStep[0][playerid] < 6) strcat(stringer, "5. Встреча с Джоном для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 6) strcat(stringer, "5. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[0][playerid] >= 6 && QuestStep[0][playerid] < 7) strcat(stringer, "6. Получение водительских прав\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 7) strcat(stringer, "6. Получение водительских прав\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[0][playerid] >= 7 && QuestStep[0][playerid] < 8) strcat(stringer, "7. Заверешение первой линии квеста, и получение награды\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[0][playerid] >= 8) strcat(stringer, "7. Заверешение первой линии квеста, и получение награды\t{"#cGREEN"}[Завершено]\n");

						ShowPlayerDialog(playerid,dQuestShowStepOne,2,"{"#cINFO"}Начало", stringer, "Далее", "Отмена");
					}
				}
				case 1: // Трудовые будни
				{
					if ( QuestStep[1][playerid] == 0 )
					{
						ShowPlayerDialog(playerid,0000,0,"   ", "{AFAFAF}Для того чтобы начать этот квест, вам нужно отправиться к Джону\n- Он находится на респавне новичков", "Ок", "");
					}
					else if ( QuestStep[1][playerid] >= 1 && QuestStep[1][playerid] <= 9)
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}");

						if(QuestStep[1][playerid] >= 1 && QuestStep[1][playerid] < 2) strcat(stringer, "1. Шахтёр\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 2) strcat(stringer, "1. Шахтёр\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 2 && QuestStep[1][playerid] < 3) strcat(stringer, "2. Встреча с Джоном для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 3) strcat(stringer, "2. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 3 && QuestStep[1][playerid] < 4) strcat(stringer, "3. Садовник\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 4) strcat(stringer, "3. Садовник\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 4 && QuestStep[1][playerid] < 5) strcat(stringer, "4. Встреча с Джоном для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 5) strcat(stringer, "4. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 5 && QuestStep[1][playerid] < 6) strcat(stringer, "5. Лесоруб\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 6) strcat(stringer, "5. Лесоруб\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 6 && QuestStep[1][playerid] < 7) strcat(stringer, "6. Встреча с Джоном для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 7) strcat(stringer, "6. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 7 && QuestStep[1][playerid] < 8) strcat(stringer, "7. Сборщик оружия\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 8) strcat(stringer, "7. Сборщик оружия\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[1][playerid] >= 8 && QuestStep[1][playerid] < 9) strcat(stringer, "8. Встреча с Джоном для завершения квестовой линии\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[1][playerid] >= 9) strcat(stringer, "8. Встреча с Джоном для завершения квестовой линии\t{"#cGREEN"}[Завершено]\n");

						ShowPlayerDialog(playerid,dQuestShowStepTwo,2,"{"#cINFO"}Первая работа", stringer, "Далее", "Отмена");
					}
				}
				case 2: // Модный приговор
				{
					if ( QuestStep[2][playerid] == 0 )
					{
						ShowPlayerDialog(playerid,0000,0,"   ", "{AFAFAF}Для того чтобы начать этот квест, вам нужно отправиться к Джону\n- Он находится на респавне новичков", "Ок", "");
					}
					else if ( QuestStep[2][playerid] >= 1 && QuestStep[2][playerid] <= 5)
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}");

						if(QuestStep[2][playerid] >= 1 && QuestStep[2][playerid] < 2) strcat(stringer, "1. Покупка новой одежды\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[2][playerid] >= 2) strcat(stringer, "1. Покупка новой одежды\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[2][playerid] >= 2 && QuestStep[2][playerid] < 3) strcat(stringer, "2. Встреча с Джоном для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[2][playerid] >= 3) strcat(stringer, "2. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[2][playerid] >= 3 && QuestStep[2][playerid] < 4) strcat(stringer, "3. Легкие аксессуары\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[2][playerid] >= 4) strcat(stringer, "3. Легкие аксессуары\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[2][playerid] >= 4 && QuestStep[2][playerid] < 5) strcat(stringer, "4. Встреча с Джоном для завершения квестовой линии\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[2][playerid] >= 5) strcat(stringer, "4. Встреча с Джоном для завершения квестовой линии\t{"#cGREEN"}[Завершено]\n");

						ShowPlayerDialog(playerid,dQuestShowStepThree,2,"{"#cINFO"}Модный приговор", stringer, "Далее", "Отмена");
					}
				}
				case 3: // Трудовые будни
				{
					if ( QuestStep[3][playerid] <= 1 )
					{
						ShowPlayerDialog(playerid,0000,0,"   ", "{AFAFAF}Для того чтобы начать этот квест, вам нужно отправиться к Патрику\n- Он находится возле Больницы Лос Сантос", "Ок", "");
					}
					else if ( QuestStep[3][playerid] >= 2 && QuestStep[3][playerid] <= 8)
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}");

						if(QuestStep[3][playerid] >= 2 && QuestStep[3][playerid] < 3) strcat(stringer, "1. Устройся таксистом, возьми в аренду спец. машину, развези "#MAX_QUEST_TAXI" людей.\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[3][playerid] >= 3) strcat(stringer, "1. Устройся таксистом, возьми в аренду спец. машину, развези "#MAX_QUEST_TAXI" людей.\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[3][playerid] >= 3 && QuestStep[3][playerid] < 4) strcat(stringer, "2. Встреча с Патриком для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[3][playerid] >= 4) strcat(stringer, "2. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[3][playerid] >= 4 && QuestStep[3][playerid] < 5) strcat(stringer, "3. Проделай "#MAX_QUEST_BUS" рейсов, водителем автобуса\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[3][playerid] >= 5) strcat(stringer, "3. Проделай "#MAX_QUEST_BUS" рейсов, водителем автобуса\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[3][playerid] >= 5 && QuestStep[3][playerid] < 6) strcat(stringer, "4. Встреча с Патриком для получения задания\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[3][playerid] >= 6) strcat(stringer, "4. Встреча с Джоном для получения задания\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[3][playerid] >= 6 && QuestStep[3][playerid] < 7) strcat(stringer, "5. Развези продукты "#MAX_QUEST_PROD" заказчикам.\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[3][playerid] >= 7) strcat(stringer, "5. Развези продукты "#MAX_QUEST_PROD" заказчикам.\t{"#cGREEN"}[Завершено]\n");

						if(QuestStep[3][playerid] >= 7 && QuestStep[3][playerid] < 8) strcat(stringer, "6. Встреча с Патриком для завершения квестовой линии\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[3][playerid] >= 8) strcat(stringer, "6. Встреча с Патриком для завершения квестовой линии\t{"#cGREEN"}[Завершено]\n");

						ShowPlayerDialog(playerid,dQuestShowStepFour,2,"{"#cINFO"}Трудовые будни", stringer, "Далее", "Отмена");
					}
				}
				case 4: // Средства связи
				{
					if ( QuestStep[4][playerid] == 0 )
					{
						ShowPlayerDialog(playerid,0000,0,"   ", "{AFAFAF}Для того чтобы начать этот квест, вам нужно отправиться к Патрику\n- Он находится возле Больницы Лос Сантос", "Ок", "");
					}
					else if ( QuestStep[4][playerid] >= 1 && QuestStep[4][playerid] <= 3)
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}");
						if(QuestStep[4][playerid] >= 1 && QuestStep[4][playerid] < 2) strcat(stringer, "1. Купи его в ближайшем магазинчике.\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[4][playerid] >= 2) strcat(stringer, "1. Купи его в ближайшем магазинчике.\t{"#cGREEN"}[Завершено]\n");
						if(QuestStep[4][playerid] >= 2 && QuestStep[4][playerid] < 3) strcat(stringer, "2. Встреча с Патриком для завершения квестовой линии\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[4][playerid] >= 3) strcat(stringer, "2. Встреча с Патриком для завершения квестовой линии\t{"#cGREEN"}[Завершено]\n");
						ShowPlayerDialog(playerid,dQuestShowStepFive,2,"{"#cINFO"}Средства связи", stringer, "Далее", "Отмена");
					}
				}
				case 5: // Лесник
				{
					if ( QuestStep[5][playerid] == 0 )
					{
						ShowPlayerDialog(playerid,0000,0,"   ", "{AFAFAF}Для того чтобы начать этот квест, вам нужно отправиться к Патрику\n- Он находится возле Больницы Лос Сантос", "Ок", "");
					}
					else if ( QuestStep[5][playerid] >= 1 && QuestStep[5][playerid] <= 3)
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}");
						if(QuestStep[5][playerid] >= 1 && QuestStep[5][playerid] < 2) strcat(stringer, "1. Собери 30 растений.\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[5][playerid] >= 2) strcat(stringer, "1. Собери 30 растений.\t{"#cGREEN"}[Завершено]\n");
						if(QuestStep[5][playerid] >= 2 && QuestStep[5][playerid] < 3) strcat(stringer, "2. Поймай 15 рыбёшек\t{"#cRED"}[Доступно]\n");
						else if(QuestStep[5][playerid] >= 3) strcat(stringer, "2. Поймай 15 рыбёшек\t{"#cGREEN"}[Завершено]\n");
						ShowPlayerDialog(playerid,dQuestShowStepSix,2,"{"#cINFO"}Лесник", stringer, "Далее", "Отмена");
					}
				}
			}

			return 1;
		}
		case dQuestShowStepOne:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			strcat(stringer, "{"#cWHITE"}");
			switch(listitem)
			{
				case 0:
				{
					if(QuestStep[0][playerid] >= 1 && QuestStep[0][playerid] < 2) strcat(stringer, "{AFAFAF}Арендуйте скутер, для этого подойдите к маркеру возле палатки на спавне\n");
					else if(QuestStep[0][playerid] >= 2) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 1:
				{
					if(QuestStep[0][playerid] >= 2 && QuestStep[0][playerid] < 3) strcat(stringer, "{AFAFAF}Вам нужно получить гражданство в штате\nдля этого отправляйтесь в Мэрию, используйте {FFFFFF}/gps > Важные места\n");
					else if(QuestStep[0][playerid] >= 3) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 2:
				{
					if(QuestStep[0][playerid] >= 3 && QuestStep[0][playerid] < 4) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Джона.\n");
					else if(QuestStep[0][playerid] >= 4) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 3:
				{
					if(QuestStep[0][playerid] >= 4 && QuestStep[0][playerid] < 5) strcat(stringer, "{AFAFAF}Отправляйтесь в банк для регистрации банковского счета\nчтобы добраться до него используйте {FFFFFF}/gps > Важные места\n");
					else if(QuestStep[0][playerid] >= 5) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 4:
				{
					if(QuestStep[0][playerid] >= 5 && QuestStep[0][playerid] < 6) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Джона.\n");
					else if(QuestStep[0][playerid] >= 6) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 5:
				{
					if(QuestStep[0][playerid] >= 6 && QuestStep[0][playerid] < 7) strcat(stringer, "{AFAFAF}Получите водительские права в автошколе\n чтобы добраться до нее используйте {FFFFFF}/gps > Важные места\n");
					else if(QuestStep[0][playerid] >= 7) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 6:
				{
					if(QuestStep[0][playerid] >= 7 && QuestStep[0][playerid] < 8) strcat(stringer, "{AFAFAF}Завершите первую линию квеста\nДля этого нужно приехать к Джону\n");
					else if(QuestStep[0][playerid] >= 8) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				default: return 1;
			}
			ShowPlayerDialog(playerid,0000,0,"   ", stringer, "Ок", "");
			return 1;
		}
		case dQuestShowStepTwo:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			strcat(stringer, "{"#cWHITE"}");
			new progress_string[128];
			switch(listitem)
			{
				case 0:
				{
					if(QuestStep[1][playerid] >= 1 && QuestStep[1][playerid] < 2)
					{
						strcat(stringer, "{AFAFAF}Отправляйся на шахту, там тебе нужно сделать "#MAX_QUEST_MINER" подходов\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_MINER"", quest_amount_miner[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[1][playerid] >= 2) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 1:
				{
					if(QuestStep[1][playerid] >= 2 && QuestStep[1][playerid] < 3) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Джона.\n");
					else if(QuestStep[1][playerid] >= 3) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 2:
				{
					if(QuestStep[1][playerid] >= 3 && QuestStep[1][playerid] < 4)
					{
						strcat(stringer, "{AFAFAF}Отправляйся в сад, обработай "#MAX_QUEST_GARDEN" участков\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_GARDEN"", quest_amount_garden[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[1][playerid] >= 4) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 3:
				{
					if(QuestStep[1][playerid] >= 4 && QuestStep[1][playerid] < 5) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Джона.\n");
					else if(QuestStep[1][playerid] >= 5) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 4:
				{
					if(QuestStep[1][playerid] >= 5 && QuestStep[1][playerid] < 6)
					{
						strcat(stringer, "{AFAFAF}Отправляйся на лесопилку, там тебе нужно вырубить "#MAX_QUEST_LESOPILKA" деревьев.\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_LESOPILKA"", quest_amount_lesopilka[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[1][playerid] >= 6) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 5:
				{
					if(QuestStep[1][playerid] >= 6 && QuestStep[1][playerid] < 7) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Джона.\n");
					else if(QuestStep[1][playerid] >= 7) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 6:
				{
					if(QuestStep[1][playerid] >= 7 && QuestStep[1][playerid] < 8)
					{
						strcat(stringer, "{AFAFAF}Отправляйся на оружейный завод, там тебе нужно собрать "#MAX_QUEST_FARM" оружий.\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_FARM"", quest_amount_farm[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[1][playerid] >= 8) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 7:
				{
					if(QuestStep[1][playerid] >= 8 && QuestStep[1][playerid] < 9) strcat(stringer, "{AFAFAF}Для завершения сюжетной линии, вам нужно навестить Джона.\n");
					else if(QuestStep[1][playerid] >= 9) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				default: return 1;
			}
			ShowPlayerDialog(playerid,0000,0,"   ", stringer, "Ок", "");
			return 1;
		}
		case dQuestShowStepThree:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			strcat(stringer, "{"#cWHITE"}");
			switch(listitem)
			{
				case 0:
				{
					if(QuestStep[2][playerid] >= 1 && QuestStep[2][playerid] < 2) strcat(stringer, "{AFAFAF}Направляйся в магазин одежды, купи там что-нибудь.\n");
					else if(QuestStep[2][playerid] >= 2) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 1:
				{
					if(QuestStep[2][playerid] >= 2 && QuestStep[2][playerid] < 3) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Джона.\n");
					else if(QuestStep[2][playerid] >= 3) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 2:
				{
					if(QuestStep[2][playerid] >= 3 && QuestStep[2][playerid] < 4) strcat(stringer, "{AFAFAF}Ступай в магазин аксессуаров, укрась себя.\n");
					else if(QuestStep[2][playerid] >= 4) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 3:
				{
					if(QuestStep[2][playerid] >= 4 && QuestStep[2][playerid] < 5) strcat(stringer, "{AFAFAF}Для завершения сюжетной линии, вам нужно навестить Джона.\n");
					else if(QuestStep[2][playerid] >= 5) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				default: return 1;
			}
			ShowPlayerDialog(playerid,0000,0,"   ", stringer, "Ок", "");
			return 1;
		}
		case dQuestShowStepFour:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			strcat(stringer, "{"#cWHITE"}");
			new progress_string[128];
			switch(listitem)
			{
				case 0:
				{
					if(QuestStep[3][playerid] >= 2 && QuestStep[3][playerid] < 3)
					{
						strcat(stringer, "{AFAFAF}Многие когда-то подвозили людей за небольшой подарочек.\nЭто можно делать профессионально.\nУстройся таксистом, возьми в аренду спец. машину, развези "#MAX_QUEST_TAXI" людей.\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_TAXI"", quest_amount_taxi[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[3][playerid] >= 3) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 1:
				{
					if(QuestStep[3][playerid] >= 3 && QuestStep[3][playerid] < 4) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Патрика.\n");
					else if(QuestStep[3][playerid] >= 4) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 2:
				{
					if(QuestStep[3][playerid] >= 4 && QuestStep[3][playerid] < 5)
					{
						strcat(stringer, "{AFAFAF}Неплохо ездишь.\nТеперь пересядь на авто покрупнее.\nТы будешь водителем автобуса.\nВ этом нет ничего сложного, просто проделай "#MAX_QUEST_BUS" рейсов.\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_BUS"", quest_amount_bus[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[3][playerid] >= 5) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 3:
				{
					if(QuestStep[3][playerid] >= 6 && QuestStep[3][playerid] < 7) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Патрика.\n");
					else if(QuestStep[3][playerid] >= 7) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 4:
				{
					if(QuestStep[3][playerid] >= 6 && QuestStep[3][playerid] < 7)
					{
						strcat(stringer, "{AFAFAF}Почувствовал габариты, как тебе разница?\nУстройся водителем грузовика, поработай на клиентов.\nРазвези продукты "#MAX_QUEST_PROD" заказчикам.\n");
						format(progress_string,128,"Прогресс: %d из "#MAX_QUEST_PROD"", quest_amount_prod[playerid]);
						strcat(stringer, progress_string);
					}
					else if(QuestStep[3][playerid] >= 7) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 5:
				{
					if(QuestStep[3][playerid] >= 7 && QuestStep[3][playerid] < 8) strcat(stringer, "{AFAFAF}Для завершения сюжетной линии, вам нужно навестить Патрика.\n");
					else if(QuestStep[3][playerid] >= 8) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				default: return 1;
			}
			ShowPlayerDialog(playerid,0000,0,"   ", stringer, "Ок", "");
			return 1;
		}
		case dQuestShowStepFive:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			strcat(stringer, "{"#cWHITE"}");
			switch(listitem)
			{
				case 0:
				{
					if(QuestStep[4][playerid] >= 1 && QuestStep[4][playerid] < 2) strcat(stringer, "{AFAFAF}Наверное, ты уже познакомился с людьми нашего штата.\nНужно с ними общаться, а как, если все далеко друг от друга?\nПравильно, тебе нужен мобильный телефон.\nКупи его в ближайшем магазинчике.\n");
					else if(QuestStep[4][playerid] >= 2) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 1:
				{
					if(QuestStep[4][playerid] >= 2 && QuestStep[4][playerid] < 3) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Патрика.\n");
					else if(QuestStep[4][playerid] >= 3) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				default: return 1;
			}
			ShowPlayerDialog(playerid,0000,0,"   ", stringer, "Ок", "");
			return 1;
		}
		case dQuestShowStepSix:
		{
			if(!response) return 1;
			stringer[0] = EOS;
			strcat(stringer, "{"#cWHITE"}");
			switch(listitem)
			{
				case 0:
				{
					if(QuestStep[5][playerid] >= 1 && QuestStep[5][playerid] < 2) strcat(stringer, "{AFAFAF}Выберись на природу!\nСейчас пора бурной растительности.\nГрибы, цветы, что только угодно.\nТебе нужно сделать запас на зиму.\nСобери 30 растений.\n");
					else if(QuestStep[5][playerid] >= 2) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				case 1:
				{
					if(QuestStep[5][playerid] >= 2 && QuestStep[5][playerid] < 3) strcat(stringer, "{AFAFAF}Для получения нового задания, вам нужно навестить Патрика.\n");
					else if(QuestStep[5][playerid] >= 3) strcat(stringer, "{AFAFAF}Вы уже завершили этот квест\n");
				}
				default: return 1;
			}
			ShowPlayerDialog(playerid,0000,0,"   ", stringer, "Ок", "");
			return 1;
		}
		case dObjectList:
		{
			if(!response)return true;
			if(objects_player_create[playerid][listitem] != -1)
			{
				SetPVarInt(playerid,"object_read_list", listitem);
				return ShowPlayerDialog(playerid,dObjectListEdit,DIALOG_STYLE_LIST,object_list[listitem][object_list_name], "Редактировать позицию\nУдалить этот обьект", "Выбрать", "Отмена");
			}
			new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);
			objects_player_create[playerid][listitem] = CreateDynamicObject(object_list[listitem][object_list_id], 	X + (1.0 * floatsin(-A, degrees)),
														Y + (1.0 * floatcos(-A, degrees)), Z, 0.0, 0.0, 0.0, -1, -1, -1, 200.0, 200.0);
			EditDynamicObject(playerid, objects_player_create[playerid][listitem]);
			return true;
		}
		case dObjectListEdit:
		{
			if(!response)return pc_cmd_object(playerid);
			new j=GetPVarInt(playerid,"object_read_list");
			switch(listitem)
			{
				case 0:EditDynamicObject(playerid, objects_player_create[playerid][j]);
				case 1:
				{
						DestroyDynamicObject ( objects_player_create[playerid][j] ) ;
						objects_player_create[playerid][j] = -1;
				}
			}
			return true;
		}
		case dZombieReg:
		{
			if(!response)return 1;
			SetPVarInt(playerid,"set_zombie",listitem+1);
			if(listitem==1)
			{
				if(ZombieCountHumans<5) ZombieCountHumans++;
				else
				{
					new str_zombie[64];
					format(str_zombie,64,"{ffffff}Зомби\nЛюди {%s}[ %d из 5 ]",(ZombieCountHumans>=5)?("ff0000"):("33aa33"),ZombieCountHumans);
					ShowPlayerDialog(playerid,dZombieReg,DIALOG_STYLE_LIST,"  ", str_zombie, "Выбрать", "Закрыто");
				}
			}
			else ZombieCountZombie++;
			SendClientMessage(playerid,-1,"Вы успешно зарегистрировались, ожидайте старта");
			return 1;
		}
		case 2115:
		{
			if(!response) return 1;
			FurnShow{playerid}=false;
			AC_SetPlayerPos(playerid,1250.5789,-1545.7523,2062.6479);
			CancelSelectTextDraw(playerid);
			PlayerTextDrawHide(playerid,ptd_furniture[playerid][0]);
			PlayerTextDrawHide(playerid,ptd_furniture[playerid][1]);
			for(new j=0;j<7;j++) TextDrawHideForPlayer(playerid,td_furniture[j]);
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"old_furn_vw"));
			DeletePVar(playerid,"old_furn_vw");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid,1);
			if(furniture_pickup[playerid] != -1)
			{
				DestroyPickup(furniture_pickup[playerid]);
				furniture_pickup[playerid]=-1;
			}
			return 1;
		}
		case 2116:
		{
			if(!response) return 1;
			SetPlayerCameraPos(playerid, 1248.993774, -1549.302001, 2023.924804);
			SetPlayerCameraLookAt(playerid, 1244.421264, -1549.158569, 2021.906982);
			AC_SetPlayerPos(playerid, 1250.20, -1554.12, 2021.90);
			TogglePlayerControllable(playerid,0);
			SetPlayerVirtualWorld(playerid,playerid+1);
			if(ptd_furniture[playerid][0]==PlayerText:-1){
				ptd_furniture[playerid][0] = CreatePlayerTextDraw(playerid, 326.090850, 288.749938, "SOFAS");
				ptd_furniture[playerid][1] = CreatePlayerTextDraw(playerid, 326.153839, 321.249908, "5000$");
				for(new j=0;j<2;j++){
					PlayerTextDrawLetterSize(playerid, ptd_furniture[playerid][j], 0.362854, 1.284999);
					PlayerTextDrawTextSize(playerid, ptd_furniture[playerid][j], 298.448242, 90.416664);
					PlayerTextDrawAlignment(playerid, ptd_furniture[playerid][j], 2);
					PlayerTextDrawColor(playerid, ptd_furniture[playerid][j], -1);
					PlayerTextDrawUseBox(playerid, ptd_furniture[playerid][j], true);
					PlayerTextDrawBoxColor(playerid, ptd_furniture[playerid][j], 77);
					PlayerTextDrawSetShadow(playerid, ptd_furniture[playerid][j], 1);
					PlayerTextDrawBackgroundColor(playerid, ptd_furniture[playerid][j], 170);
					PlayerTextDrawFont(playerid, ptd_furniture[playerid][j], 2);
					PlayerTextDrawSetProportional(playerid, ptd_furniture[playerid][j], 1);
				}
			}
			PlayerTextDrawSetString(playerid, ptd_furniture[playerid][0], "BEDS");
			PlayerTextDrawShow(playerid,ptd_furniture[playerid][0]);
			PlayerTextDrawShow(playerid,ptd_furniture[playerid][1]);
			for(new j=0;j<7;j++) TextDrawShowForPlayer(playerid,td_furniture[j]);
			FurnShow{playerid}=true;
			SelectTextDraw(playerid,0xFFFFFFAA);
			furniture_class{playerid} = 0;
			furniture_select{playerid} = 0;
			furniture_create_pickup(playerid);
		}
		case 2117:
		{
			if(!response) return 1;
			if ( p_info[playerid][pCash] < GetPVarInt(playerid,"Furn_Price") ) return SendClientMessage(playerid,CRED,"У вас недостаточно денег для покупки данной мебели");
			p_info[playerid][pCash] -= GetPVarInt(playerid,"Furn_Price");
			UpdateMoney(playerid);
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			Business[bizid][Bank] += GetPVarInt(playerid,"Furn_Price");
			AddMafiaBank(bizid, GetPVarInt(playerid,"Furn_Price"));
			new h = p_info[playerid][pHouse], check = 0 ;
			for(new j=0;j<MAX_SLOT_FURNITURE;j++){
				if(gHouseFurniture[h][j][Furn_Model] == 0){
					static Furn_Str[144];
					format(Furn_Str,144,"Успешно, {"#cGRAY"}Вы приобрели данную мебель за {"#cGREEN"}%d$ {"#cGRAY"}на слот номер {"#cLIGHTBLUE"}[%d]", GetPVarInt(playerid,"Furn_Price"), j + 1 );
					SendClientMessage(playerid,CORANGE,Furn_Str);
					gHouseFurniture[h][j][Furn_Model] = GetPVarInt(playerid,"Furn_Model");
					UpdateFurnitureHouse(h,j);
					check++;
					break ;
				}
			}
			if ( check == 0 ) SendClientMessage(playerid,CGRAY,"Вы не можете купить в дом более "#MAX_SLOT_FURNITURE" типов мебели.");
		}
		case dCarSellsRent:
		{
			if(!response) return DeletePVar(playerid, "g_car_sells_id");
			new sum, days, slotveh, g = GetPVarInt(playerid, "g_car_sells_id")-1;
			if(sscanf(inputtext,"p<,>iii",days, sum, slotveh)) return ShowInfoInputSells(playerid);
			if ( days < 1 || days > 10 )
			{
				SCM(playerid,CGRAY, "Дни: от 1 до 10 дней");
				return ShowInfoInputSells(playerid);
			}
			else if ( sum < 90000 || sum > 5000000 )
			{
				SCM(playerid,CGRAY, "Сумма: от 90.000 $ до 5.000.000 $");
				return ShowInfoInputSells(playerid);
			}
			else if(slotveh != 1 && slotveh != 2)
			{
				SCM(playerid,CGRAY, "Слот автомобиля: 1 или 2");
				return ShowInfoInputSells(playerid);
			}
			else if ( g == -1 ) return SCM(playerid,CGRAY, "#0111");
			else if ( strcmp(gCarSells[g][SellsOwner], "The State") ) return SCM(playerid,CGRAY, "Место занято");
			else if(IsSellsCar(playerid, slotveh) != -1) return SCM(playerid,CGRAY, "Этот слот автомобиля уже продается");
			new price_rent = floatround(days * gCarPriceRent);
			if(p_info[playerid][pCash] < price_rent)
			{
				format(stringer, 128, "Ошибка. Стоимость аренды {"#cGREEN"}$%d{"#cGRAY"} за {"#cBLUE"}%d{"#cGRAY"} дней",price_rent,days);
				SendClientMessage(playerid,CGRAY,stringer);
				return 1;
			}
			p_info[playerid][pCash] -= price_rent;
			UpdateMoney(playerid);
			new vehicleid = caridhouse[playerid][slotveh - 1];
			if (!IsValidVehicle(vehicleid)) return SCM(playerid,CGRAY, "Ваш личный автомобиль не доступен");
			new model = GetVehicleModel(vehicleid);
			if ( model < 400 || model > 611 || model == 462 || IsABadFamilyModel(model)) return SCM(playerid,CGRAY, "Вы не можете выставить на продажу данный автомобиль");
			strmid(gCarSells[g][SellsOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 24);
			gCarSells[g][SellsTime] = days;
			gCarSells[g][SellsPrice] = sum;
			gCarSells[g][SellsModel] = model;
			for(new i = 0; i < 12; i++) gCarSells[g][SellsTuning][i] = gPlayerTuning[playerid][slotveh - 1][i];
			new update_car_sells[512];
			format(update_car_sells,512,"UPDATE `gCarSells` SET `SellsModel` = '%d', `SellsTime` = '%d', `SellsPrice` = '%d', `SellsOwner` = '%s', `SellsTuning` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `SellsMysqlID` = '%d'",
			gCarSells[g][SellsModel],gCarSells[g][SellsTime],gCarSells[g][SellsPrice],gCarSells[g][SellsOwner],gCarSells[g][SellsTuning][0],gCarSells[g][SellsTuning][1],gCarSells[g][SellsTuning][2],gCarSells[g][SellsTuning][3],gCarSells[g][SellsTuning][4],gCarSells[g][SellsTuning][5],gCarSells[g][SellsTuning][6],gCarSells[g][SellsTuning][7],gCarSells[g][SellsTuning][8],gCarSells[g][SellsTuning][9],gCarSells[g][SellsTuning][10],gCarSells[g][SellsTuning][11],gCarSells[g][SellsMysqlID]);
			mysql_pquery(connects, update_car_sells);
			print(update_car_sells);
			LoadCarSells(g);
			SetVehicleToHouse(playerid, slotveh);
			return 1;
		}
		case D_SET_BET:
		{
			if(!response) return true;
			new s = Casino_Flag[playerid][select_casino_table];
			if(s==-1) return 1;
			if(InfoDice[s][dice_stavka] != 0) return SendClientMessage(playerid,CWHITE,"Ошибка. Ставка уже установлена!");
			new stavka;
			if(sscanf(inputtext,"i",stavka)) return ShowPlayerDialog(playerid, D_SET_BET, 1, "{"#cINFO"}Ставка", "{"#cWHITE"}Введите сумму ставки!\nСтавка должна быть не менее "#MIN_STAVKA" {"#cGREEN"}$\n{"#cWHITE"}и не более "#MAX_STAVKA" {"#cGREEN"}$", "Далее", "Отмена");
			if(stavka < MIN_STAVKA || stavka > MAX_STAVKA) return SendClientMessage(playerid,CWHITE,"Ошибка. Неверная ставка"),ShowPlayerDialog(playerid, D_SET_BET, 1, "{"#cINFO"}Ставка", "{"#cWHITE"}Введите сумму ставки!\nСтавка должна быть не менее "#MIN_STAVKA" {"#cGREEN"}$\n{"#cWHITE"}и не более "#MAX_STAVKA" {"#cGREEN"}$", "Далее", "Отмена");
			if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid,CWHITE,"Ошибка. Вы не можете изменить ставку в процессе игры!");
			InfoDice[s][dice_stavka] = stavka;
			SendClientMessage(playerid,CGREEN,"Ставка успешно установлена!");
			UpdateTextCasino(s);
			new string_set_bet[170];
			format(string_set_bet, 170, "%s {"#cINFO"}установил ставку {"#cGREEN"}%d$ {"#cINFO"}Нажмите {"#cWHITE"}SET BET {"#cINFO"}чтобы её поддержать", NamePlayer[playerid], stavka);
			for(new p = 0; p < 5; p++)
			{
				if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
				SendClientMessage(InfoDice[s][dice_gamer][p],-1,string_set_bet);
			}
			if(InfoDice[s][dice_crup]!=INVALID_PLAYER_ID)SendClientMessage(InfoDice[s][dice_crup],-1,string_set_bet);
		}
		case dBankMainMenu:
		{
			if(!response) return 1;
			if(!strcmp(inputtext, "• Открыть новый счёт"))
			{
				new query_string[64+6+1],
					bank_rand_number = 100_000+random(899_999);

				format(query_string, sizeof(query_string), "SELECT b_account_id FROM bank_accounts WHERE b_account_number = %d", bank_rand_number);
				mysql_pquery(connects, query_string, "OnBankAccountInTable", "ii", playerid, bank_rand_number);
			}
			else if(strfind(inputtext, "Открыть дополнительный счёт") != -1)
			{
				for(new a; a < MAX_BANK_ACCOUNTS; a++)
				{
					if(gBankInfo[playerid][b_acc_number][a] == -1)
					{
						new query_string[64+6+1],
						bank_rand_number = 100_000+random(899_999);

						format(query_string, sizeof(query_string), "SELECT b_account_id FROM bank_accounts WHERE b_account_number = %d", bank_rand_number);
						mysql_pquery(connects, query_string, "OnBankAccountInTable", "ii", playerid, bank_rand_number);
						return 1;
					}
				}
			}
			else ShowBankOptionMenuForPlayer(playerid, listitem);
			return 1;
		}
		case dBankMenu_OptionList:
		{
			if(!response)
			{
				DeletePVar(playerid, "BankAccountID");
				return ShowBankMainMenuForPlayer(playerid);
			}
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			switch(listitem)
			{
				case 0:// Снять деньги
				{
					if(gBankInfo[playerid][b_acc_money][b_account_id] == 0)
					{
						DeletePVar(playerid, "BankAccountID");
						SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}На Вашем счету недостаточно средств для совершения данного действия");
						return ShowBankOptionMenuForPlayer(playerid, b_account_id);
					}
					new dialog_string[101+10+1];
					format(dialog_string, sizeof(dialog_string), "{FFFFFF}Доступно для снятия: %d$ (без учёта комиссии)\n\"-1\" чтобы снять всё.\n\nВведите сумму для снятия:", gBankInfo[playerid][b_acc_money][b_account_id]);
					return ShowPlayerDialog(playerid, dBankMenu_WithdrawMoney, DIALOG_STYLE_INPUT, "Снять со счёта", dialog_string, "Далее", "Назад");
				}
				case 1:// Пополнить счёт
				{
					if(p_info[playerid][pCash]<= 0)
					{
						DeletePVar(playerid, "BankAccountID");
						SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}У Вас на руках недостаточно средств для совершения данного действия");
						return ShowBankOptionMenuForPlayer(playerid, b_account_id);
					}
					new dialog_string[171+10+10+1];
					format(dialog_string, sizeof(dialog_string), "{FFFFFF}Доступно для пополнения: %d$ (будет внесено %d$ с учётом комиссии)\nКомиссия составляет 0.2%% (+1$ на каждые 500$)\n\"-1\" чтобы положить всё.\n\nВведите сумму для пополнения:",p_info[playerid][pCash], p_info[playerid][pCash]-GetBankPercent(p_info[playerid][pCash]*0.2/100));
					return ShowPlayerDialog(playerid, dBankMenu_DepositMoney, DIALOG_STYLE_INPUT, "Пополнить счёт", dialog_string, "Далее", "Назад");
				}
				case 2:// Перевести на другой счёт
				{
					if(gBankInfo[playerid][b_acc_money][b_account_id] == 0)
					{
						DeletePVar(playerid, "BankAccountID");
						SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}На Вашем счету недостаточно средств для совершения данного действия");
						return ShowBankOptionMenuForPlayer(playerid, b_account_id);
					}
					new dialog_string[145+10+1];
					format(dialog_string, sizeof(dialog_string), "{FFFFFF}Введите номер счёта и сумму для передачи (прим. \"453212 600\"\n\nДоступно для перевода: %d$\nКомиссия составляет 0.2%% (+1$ на каждые ~200$)", gBankInfo[playerid][b_acc_money][b_account_id]);
					return ShowPlayerDialog(playerid, dBankMenu_TransferMoney, DIALOG_STYLE_INPUT, "Перевод средств", dialog_string, "Далее", "Назад");
				}
				case 3:// Удалить счёт
				{
					if(gBankInfo[playerid][b_acc_money][b_account_id] == 0)
					{
						new dialog_string[47+6+1];
						format(dialog_string, sizeof(dialog_string), "Вы действительно хотите удалить данный счёт? [%d]", gBankInfo[playerid][b_acc_number][b_account_id]);
						ShowPlayerDialog(playerid, dBankMenu_DeleteAccount, DIALOG_STYLE_MSGBOX, "Удаление счёта", dialog_string, "Удалить", "Отмена");
					}
					else if(b_account_id == 0 && gBankInfo[playerid][b_acc_number][1] == -1)
					{
						new dialog_string[108+6+10+1];
						format(dialog_string, sizeof(dialog_string), "Вы действительно хотите удалить данный счёт? [%d]\n\nВсе деньги [%d$], находящиеся на этом счету, будут обналичены", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id]);
						ShowPlayerDialog(playerid, dBankMenu_DeleteAccount, DIALOG_STYLE_MSGBOX, "Удаление счёта", dialog_string, "Удалить", "Отмена");
					}
					else
					{
						new dialog_string[127+6+10+1];
						format(dialog_string, sizeof(dialog_string), "Вы действительно хотите удалить данный счёт? [%d]\n\nВсе деньги [%d$], находящиеся на этом счету, будут переведены на другой Ваш счёт", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id]);
						ShowPlayerDialog(playerid, dBankMenu_DeleteAccount, DIALOG_STYLE_MSGBOX, "Удаление счёта", dialog_string, "Удалить", "Отмена");
					}
					return 1;
				}
				case 4:// Вклады
				{
					if(gBankInfo[playerid][b_acc_money][b_account_id] == 0 && gBankInfo[playerid][cb_id][0] == -1)
					{
						new dialog_string[47+6+1];
						format(dialog_string, sizeof(dialog_string), "Вы действительно хотите удалить данный счёт? [%d]", gBankInfo[playerid][b_acc_number][b_account_id]);
						ShowPlayerDialog(playerid, dBankMenu_DeleteAccount, DIALOG_STYLE_MSGBOX, "Удаление счёта", dialog_string, "Удалить", "Отмена");
					}
					ShowContributionMenu(playerid, b_account_id);
				}
			}
			return 1;
		}
		case dBankMenu_WithdrawMoney:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");
			DeletePVar(playerid, "BankAccountID");

			if(!response) return ShowBankOptionMenuForPlayer(playerid, b_account_id);

			new b_money = strval(inputtext);

			if(b_money == -1) b_money = gBankInfo[playerid][b_acc_money][b_account_id];
			else if(!(1 < b_money <= gBankInfo[playerid][b_acc_money][b_account_id]))
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Указана неверная сумма. Повторите попытку.");
				new dialog_string[67+10+1];
				format(dialog_string, sizeof(dialog_string), "{FF0000}Доступно для снятия: %d$\n\n{FFFFFF}Введите сумму для снятия:", gBankInfo[playerid][b_acc_money][b_account_id]);
				return ShowPlayerDialog(playerid, dBankMenu_WithdrawMoney, DIALOG_STYLE_INPUT, "Снять со счёта", dialog_string, "Далее", "Назад");
			}
			new string[19+10+1];
			format(string, sizeof(string), "Вы успешно сняли %d$", b_money);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "Остаток на счету: %d$", gBankInfo[playerid][b_acc_money][b_account_id]-=b_money);
			SendClientMessage(playerid, -1, string);
			UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][b_account_id], gBankInfo[playerid][b_acc_number][b_account_id]);
			p_info[playerid][pCash] += b_money;
			UpdateMoney(playerid);
			return ShowBankOptionMenuForPlayer(playerid, b_account_id);
		}
		case dBankMenu_DepositMoney:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");
			DeletePVar(playerid, "BankAccountID");

			if(!response) return ShowBankOptionMenuForPlayer(playerid, b_account_id);

			new b_money = strval(inputtext),
				p_money = p_info[playerid][pCash];

			new b_commission = GetBankPercent((b_money == -1 ? p_money : b_money)*0.2/100);	//Kommiss

			if(b_money == -1) b_money = p_money;
			else if(!(0 < b_money <= p_money))
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Указана неверная сумма. Повторите попытку.");

				new dialog_string[144+10+1];
				format(dialog_string, sizeof(dialog_string), "Максиимально доступная сумма для пополнения: %d", p_money-b_commission);
				SendClientMessage(playerid, -1, dialog_string);
				format(dialog_string, sizeof(dialog_string), "{FF0000}Доступно для пополнения: %d$ (будет внесено %d$ с учётом комиссии){FFFFFF}\nКомиссия составляет 0.2%% (+1$ на каждые 500$)\n\"-1\" чтобы положить всё.\n\nВведите сумму для пополнения:", p_money, p_money-GetBankPercent(p_money*0.2/100));
				return ShowPlayerDialog(playerid, dBankMenu_DepositMoney, DIALOG_STYLE_INPUT, "Пополнить счёт", dialog_string, "Далее", "Назад");
			}
			new string[27+10+1];
			format(string, sizeof(string), "Вы успешно внесли %d$ на счёт", b_money);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "Комиссия составила %d$", b_commission);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "Текущее значение: %d$", gBankInfo[playerid][b_acc_money][b_account_id]+=(b_money-b_commission));
			SendClientMessage(playerid, -1, string);
			UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][b_account_id], gBankInfo[playerid][b_acc_number][b_account_id]);
			p_info[playerid][pCash] -= b_money;
			UpdateMoney(playerid);
			return ShowBankOptionMenuForPlayer(playerid, b_account_id);
		}
		case dBankMenu_TransferMoney:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			if(!response) return ShowBankOptionMenuForPlayer(playerid, b_account_id), DeletePVar(playerid, "BankAccountID");
			new b_account_number = -1,
				b_account_money = -1,
				dialog_string[141+10+1],
				b_commission;
			sscanf(inputtext, "ii", b_account_number, b_account_money);

			b_commission = GetBankPercent(b_account_money*0.3/100);

			if(!(0 <= b_account_number))
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Номер счёта указан в неверном формате.");
				///SendClientMessage(playerid, 0xFFFFFFFF, "* Нормер счёта состоит из 6 символов (от 100000 до 999999)");
				format(dialog_string, sizeof(dialog_string), "{FFFFFF}Введите номер счёта и сумму для передачи (прим. \"453212 600\"\n\nДоступно для перевода: %d$\nКомиссия составляет 0.2%% (+1$ на каждые ~200$)", gBankInfo[playerid][b_acc_money][b_account_id]);
				return ShowPlayerDialog(playerid, dBankMenu_TransferMoney, DIALOG_STYLE_INPUT, "Перевод средств", dialog_string, "Далее", "Назад");
			}
			if(!(0 < b_account_money <= gBankInfo[playerid][b_acc_money][b_account_id]))
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Указана неверная сумма для передачи или на вашем аккаунте недостаточно средств.");

				format(dialog_string, sizeof(dialog_string), "Максимально доступная сумма для передачи: %d (с учётом коммисии будет переведено: %d)", b_account_money, b_account_money-b_commission);
				SendClientMessage(playerid, -1, dialog_string);

				format(dialog_string, sizeof(dialog_string), "{FFFFFF}Введите номер счёта и сумму для передачи (прим. \"453212 600\"\n\nДоступно для перевода: %d$\nКомиссия составляет 0.2%% (+1$ на каждые ~200$)", gBankInfo[playerid][b_acc_money][b_account_id]);
				return ShowPlayerDialog(playerid, dBankMenu_TransferMoney, DIALOG_STYLE_INPUT, "Перевод средств", dialog_string, "Далее", "Назад");
			}
			if(gBankInfo[playerid][b_acc_money][b_acc_number] == b_account_number)
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Вы указали текущий счёт.");
				format(dialog_string, sizeof(dialog_string), "{FFFFFF}Введите номер счёта и сумму для передачи (прим. \"453212 600\"\n\nДоступно для перевода: %d$\nКомиссия составляет 0.2%% (+1$ на каждые ~200$)", gBankInfo[playerid][b_acc_money][b_account_id]);
				return ShowPlayerDialog(playerid, dBankMenu_TransferMoney, DIALOG_STYLE_INPUT, "Перевод средств", dialog_string, "Далее", "Назад");
			}
			new query_string[53+6+1];
			format(query_string, sizeof(query_string), "SELECT * FROM bank_accounts WHERE b_account_number = %d", b_account_number);
			mysql_pquery(connects, query_string, "OnBankAccountInTableForTransfer", "iiiii", playerid, b_account_number, b_account_money, b_commission, b_account_id);
			return DeletePVar(playerid, "BankAccountID");
		}
		case dBankMenu_DeleteAccount:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			if(!response) return ShowBankOptionMenuForPlayer(playerid, b_account_id), DeletePVar(playerid, "BankAccountID");
			if(gBankInfo[playerid][b_acc_money][b_account_id] == 0)
			{
				new query_string[53+6+1];
				format(query_string, sizeof(query_string), "DELETE FROM `bank_accounts` WHERE b_account_number = %d", gBankInfo[playerid][b_acc_number][b_account_id]);
				mysql_pquery(connects, query_string);

				format(query_string, sizeof(query_string), "Счёт %d успешно удалён.", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id]);
				SendClientMessage(playerid, -1, query_string);

				gBankInfo[playerid][b_acc_number][b_account_id] = -1;
				gBankInfo[playerid][b_acc_money][b_account_id] = 0;

				for(new a; a < MAX_BANK_ACCOUNTS-1; a++)
				{
					if(gBankInfo[playerid][b_acc_number][a] == -1 && gBankInfo[playerid][b_acc_number][a+1] != -1)
					{
						gBankInfo[playerid][b_acc_number][a] = gBankInfo[playerid][b_acc_number][a+1];
						gBankInfo[playerid][b_acc_money][a] = gBankInfo[playerid][b_acc_money][a+1];
						gBankInfo[playerid][b_acc_number][a+1] = -1;
						gBankInfo[playerid][b_acc_money][a+1] = 0;
					}
				}
			}
			else if(b_account_id == 0 && gBankInfo[playerid][b_acc_number][1] == -1)
			{
				new query_string[53+6+1];
				format(query_string, sizeof(query_string), "DELETE FROM `bank_accounts` WHERE b_account_number = %d", gBankInfo[playerid][b_acc_number][b_account_id]);
				mysql_pquery(connects, query_string);

				format(query_string, sizeof(query_string), "Счёт %d успешно удалён. %d$ выдано наличными.", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id]);
				SendClientMessage(playerid, -1, query_string);

				gBankInfo[playerid][b_acc_number][b_account_id] = -1;

				p_info[playerid][pCash] += gBankInfo[playerid][b_acc_money][b_account_id];
				UpdateMoney(playerid);

				gBankInfo[playerid][b_acc_money][b_account_id] = 0;
			}
			else
			{
				new bank_string[((6+4+4+10)*MAX_BANK_ACCOUNTS)+(31+2)];
				for(new a; a < MAX_BANK_ACCOUNTS; a++)
				{
					if(gBankInfo[playerid][b_acc_number][a] == -1) continue;
					if(b_account_id == MAX_BANK_ACCOUNTS-1)
					{
						if(a == b_account_id)
						{
							format(bank_string, sizeof(bank_string), "%sВывести наличными", bank_string);// (31+2)
						}
						else
						{
							format(bank_string, sizeof(bank_string), "%sПеревести на %d [%d$]\n", bank_string, gBankInfo[playerid][b_acc_number][a], gBankInfo[playerid][b_acc_money][a]);
						}
					}
					else
					{
						if(a == MAX_BANK_ACCOUNTS-1)
						{
							if(gBankInfo[playerid][b_acc_number][a] != -1) format(bank_string, sizeof(bank_string), "%sПеревести на %d [%d$]\n", bank_string, gBankInfo[playerid][b_acc_number][a], gBankInfo[playerid][b_acc_money][a]);
							format(bank_string, sizeof(bank_string), "%sВывести наличными", bank_string);// (31+2)
						}
						else if(a == b_account_id) continue;
						else
						{
							format(bank_string, sizeof(bank_string), "%sПеревести на %d [%d$]\n", bank_string, gBankInfo[playerid][b_acc_number][a], gBankInfo[playerid][b_acc_money][a]);
						}
					}
				}
				return ShowPlayerDialog(playerid, dBankMenu_DeleteAccount_Money, DIALOG_STYLE_LIST, "Выберите действие", bank_string, "Выбрать", "Назад");
			}
			DeletePVar(playerid, "BankAccountID");
			ShowBankMainMenuForPlayer(playerid);
			return 1;
		}
		case dBankMenu_DeleteAccount_Money:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			if(!response)
			{
				new dialog_string[127+6+10+1];
				format(dialog_string, sizeof(dialog_string), "Вы действительно хотите удалить данный счёт? [%d]\n\nВсе деньги [%d$], находящиеся на этом счету, будут переведены на другой Ваш счёт", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id]);
				return ShowPlayerDialog(playerid, dBankMenu_DeleteAccount, DIALOG_STYLE_MSGBOX, "Удаление счёта", dialog_string, "Удалить", "Отмена");
			}

			new query_string[57+6+10+6+1];
			format(query_string, sizeof(query_string), "DELETE FROM `bank_accounts` WHERE b_account_number = %d", gBankInfo[playerid][b_acc_number][b_account_id]);
			mysql_pquery(connects, query_string);

			if(strfind(inputtext, "Вывести наличными") != -1)
			{
				format(query_string, sizeof(query_string), "Счёт %d успешно удалён. %d$ выдано наличными.", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id]);
				SendClientMessage(playerid, -1, query_string);

				p_info[playerid][pCash] += gBankInfo[playerid][b_acc_money][b_account_id];
				UpdateMoney(playerid);

				gBankInfo[playerid][b_acc_number][b_account_id] = -1;
				gBankInfo[playerid][b_acc_money][b_account_id] = 0;

				for(new a; a < MAX_BANK_ACCOUNTS-1; a++)
				{
					if(gBankInfo[playerid][b_acc_number][a] == -1 && gBankInfo[playerid][b_acc_number][a+1] != -1)
					{
						gBankInfo[playerid][b_acc_number][a] = gBankInfo[playerid][b_acc_number][a+1];
						gBankInfo[playerid][b_acc_money][a] = gBankInfo[playerid][b_acc_money][a+1];
						gBankInfo[playerid][b_acc_number][a+1] = -1;
						gBankInfo[playerid][b_acc_money][a+1] = 0;
					}
				}
			}
			else
			{
				strmid(query_string, inputtext, 13, 19, 8);
				new input_acc_id = strval(query_string);
				for(new a; a < MAX_BANK_ACCOUNTS; a++)
				{
					if(gBankInfo[playerid][b_acc_number][a] != input_acc_id) continue;
					format(query_string, sizeof(query_string), "Счёт %d успешно удалён. %d$ переведено на Ваш другой счёт [%d].", gBankInfo[playerid][b_acc_number][b_account_id], gBankInfo[playerid][b_acc_money][b_account_id], gBankInfo[playerid][b_acc_number][a]);
					SendClientMessage(playerid, -1, query_string);

					gBankInfo[playerid][b_acc_money][a] += gBankInfo[playerid][b_acc_money][b_account_id];

					UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][a], gBankInfo[playerid][b_acc_number][a]);

					format(query_string, sizeof(query_string), "Баланс счёта №%d: %d$", gBankInfo[playerid][b_acc_number][a], gBankInfo[playerid][b_acc_money][a]);
					SendClientMessage(playerid, -1, query_string);

					gBankInfo[playerid][b_acc_number][b_account_id] = -1;
					gBankInfo[playerid][b_acc_money][b_account_id] = 0;
					for(a = 0; a < MAX_BANK_ACCOUNTS-1; a++)
					{
						if(gBankInfo[playerid][b_acc_number][a] == -1 && gBankInfo[playerid][b_acc_number][a+1] != -1)
						{
							gBankInfo[playerid][b_acc_number][a] = gBankInfo[playerid][b_acc_number][a+1];
							gBankInfo[playerid][b_acc_money][a] = gBankInfo[playerid][b_acc_money][a+1];
							gBankInfo[playerid][b_acc_number][a+1] = -1;
							gBankInfo[playerid][b_acc_money][a+1] = 0;
						}
					}
					break;
				}
			}
			ShowBankMainMenuForPlayer(playerid);
			return DeletePVar(playerid, "BankAccountID");
		}
		case dContributionMenu:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			if(!response)
			{
				DeletePVar(playerid, "ContributMoney");
				DeletePVar(playerid, "ContributDay");
				ShowBankOptionMenuForPlayer(playerid, b_account_id);
				return 1;
			}
			if(!strcmp(inputtext, "• Открыть новый вклад") || strfind(inputtext, "Открыть дополнительный вклад") != -1)
			{
				if(gBankInfo[playerid][b_acc_money][b_account_id] == 0)
				{
					SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}На Вашем счету недостаточно средств для совершения данного действия");
					return ShowContributionMenu(playerid, b_account_id);
				}
				ShowNewContributionMenu(playerid);
			}
			else
			{
				ShowPlayerDialog(playerid, dContributionMenu_Return, DIALOG_STYLE_MSGBOX, "Банк [Вклады]", "{FFFFFF}Желаете забрать текущий вклад?\n\n{FF0000}Внимание: Данное действие удалит текущий вклад, перенеся все деньги на банковский счёт\nНажав \"Продолжить\" Вы не сможете отменить удаление", "Продолжить", "Назад");
				SetPVarInt(playerid, "ContributID", listitem);
			}
			return 1;
		}
		case dContributionMenu_Create:
		{
			if(!response) return ShowContributionMenu(playerid);
			new b_account_id = GetPVarInt(playerid, "BankAccountID");
			switch(listitem)
			{
				case 0:
				{
					new bank_string[68+10+1];
					format(bank_string, sizeof(bank_string), "{FFFFFF}Введите сумму вклада.\nМинимальная сумма - 1$\nМаксимальная - %d", gBankInfo[playerid][b_acc_money][b_account_id]);// (31+2)
					ShowPlayerDialog(playerid, dContributionMenu_NewMoney, DIALOG_STYLE_INPUT, "Банк [Новый вклад]", bank_string, "Далее", "Назад");
				}
				case 1:
				{
					ShowPlayerDialog(playerid, dContributionMenu_NewDays, DIALOG_STYLE_INPUT, "Банк [Новый вклад]", "{FFFFFF}Введите число дней, на которое Вы хотите сделать вклад.\nМинимум - 30 дней\nМаксимум - 90 дней\n\nПроцентная ставка:\n30 дней - 10%% от суммы\nОт 30 до 90 дней - +0.5%% за каждый день", "Далее", "Назад");
				}
				default:
				{
					if(!GetPVarInt(playerid, "ContributMoney") || !GetPVarInt(playerid, "ContributDay"))
						return ShowNewContributionMenu(playerid, GetPVarInt(playerid, "ContributMoney"), GetPVarInt(playerid, "ContributDay"));
					new dialog_string[(13+2)+(17+10)+(20+3)+(38+10)],
						b_period = GetPVarInt(playerid, "ContributDay"),
						b_money = GetPVarInt(playerid, "ContributMoney"),
						Float:interest_rate = (b_period > 30 ? (float(b_period-30)*0.5)+10.0 : 10.0),
						Float: money_result = float(b_money)+(float(b_money)*interest_rate/100.0);

					format(dialog_string, sizeof(dialog_string), "Срок: %d дней.\n", b_period);//13+2
					format(dialog_string, sizeof(dialog_string), "%sСумма вклада: %d$.\n", dialog_string, b_money);//17+10
					format(dialog_string, sizeof(dialog_string), "%sПроцентная ставка: %0.0f%%\n", dialog_string, interest_rate);//20+3
					format(dialog_string, sizeof(dialog_string), "%sИтог: %0.0f$\n\nЗавершить регистрацию вклада?", dialog_string, money_result);//38+10
					ShowPlayerDialog(playerid, dContributionMenu_NewContribut, DIALOG_STYLE_MSGBOX, "Банк [Новый вклад]", dialog_string, "Далее", "Назад");
				}
			}
			return 1;
		}
		case dContributionMenu_NewMoney:
		{
			if(!response) return ShowNewContributionMenu(playerid, GetPVarInt(playerid, "ContributMoney"), GetPVarInt(playerid, "ContributDay"));
			new contribut_money = strval(inputtext),
				b_account_id = GetPVarInt(playerid, "BankAccountID");


			if(!(1 <= contribut_money <= gBankInfo[playerid][b_acc_money][b_account_id]))
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Вы ввели недействительную сумму");
				new bank_string[76+10+1];
				format(bank_string, sizeof(bank_string), "{FFFFFF}Введите сумму вклада.\n{FF0000}Минимальная сумма - 1$\nМаксимальная - %d", gBankInfo[playerid][b_acc_money][b_account_id]);// (31+2)
				ShowPlayerDialog(playerid, dContributionMenu_NewMoney, DIALOG_STYLE_INPUT, "Банк [Новый вклад]", bank_string, "Далее", "Назад");
				return 1;
			}
			ShowNewContributionMenu(playerid, contribut_money);
			SetPVarInt(playerid, "ContributMoney", contribut_money);
			return 1;
		}
		case dContributionMenu_NewDays:
		{
			if(!response) return ShowNewContributionMenu(playerid, GetPVarInt(playerid, "ContributMoney"), GetPVarInt(playerid, "ContributDay"));
			new contribut_days = strval(inputtext);
			if(!(30 <= contribut_days <= 90))
			{
				SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Вы ввели недействительную дату");
				ShowPlayerDialog(playerid, dContributionMenu_NewDays, DIALOG_STYLE_INPUT, "Банк [Новый вклад]", "{FFFFFF}Введите число дней, на которое Вы хотите сделать вклад.\n{FF0000}Минимум - 30 дней\nМаксимум - 90 дней{FFFFFF}\n\nПроцентная ставка:\n30 дней - 10%% от суммы\nОт 30 до 90 дней - +0.5%% за каждый день", "Далее", "Назад");
				return 1;
			}
			ShowNewContributionMenu(playerid, GetPVarInt(playerid, "ContributMoney"), contribut_days);
			SetPVarInt(playerid, "ContributDay", contribut_days);
			return 1;
		}
		case dContributionMenu_NewContribut:
		{
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			if(!response) return ShowNewContributionMenu(playerid, GetPVarInt(playerid, "ContributMoney"), GetPVarInt(playerid, "ContributDay"));

			new dialog_string[270+10+1],
				b_period = GetPVarInt(playerid, "ContributDay"),
				b_money = GetPVarInt(playerid, "ContributMoney"),
				Float:interest_rate = (b_period > 30 ? (float(b_period-30)*0.5)+10.0 : 10.0),
				Float: money_result = float(b_money)+(float(b_money)*interest_rate/100.0);

			SendClientMessage(playerid, -1, "Вклад принят.");
			format(dialog_string, sizeof(dialog_string), "Срок: %d дней.", b_period);
			SendClientMessage(playerid, -1, dialog_string);

			format(dialog_string, sizeof(dialog_string), "Сумма вклада: %d$.", b_money);
			SendClientMessage(playerid, -1, dialog_string);

			format(dialog_string, sizeof(dialog_string), "Процентная ставка: %0.0f%%", interest_rate);
			SendClientMessage(playerid, -1, dialog_string);

			format(dialog_string, sizeof(dialog_string), "Итог: %0.0f$", money_result);
			SendClientMessage(playerid, -1, dialog_string);

			CreateNewContribution(playerid, b_money, b_period, interest_rate);
			UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][b_account_id]-=b_money, gBankInfo[playerid][b_acc_number][b_account_id]);
			return 1;
		}
		case dContributionMenu_Return:
		{
			if(!response)
			{
				DeletePVar(playerid, "ContributID");
				ShowContributionMenu(playerid);
				return 1;
			}
			new b_account_id = GetPVarInt(playerid, "BankAccountID");

			new contrib_string[51+10+1],
				c_id = GetPVarInt(playerid, "ContributID"),
				c_period = gBankInfo[playerid][cb_days][c_id],
				c_money = gBankInfo[playerid][cb_money][c_id],
				days_passed;

			if((days_passed = (c_period - (gBankInfo[playerid][cb_unixtime][c_id]-gettime())/86400)) > 30)
			{
				new Float:interest_rate = (float(days_passed-30)*0.5)+10.0,
					money_result = floatround(float(c_money)+(float(c_money)*interest_rate/100.0));

				format(contrib_string, sizeof(contrib_string), "На Ваш банковский счёт переведено %d$", money_result);

				UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][b_account_id]+=money_result, gBankInfo[playerid][b_acc_number][b_account_id]);
			}
			else
			{
				UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][b_account_id]+=c_money, gBankInfo[playerid][b_acc_number][b_account_id]);
				format(contrib_string, sizeof(contrib_string), "На Ваш банковский счёт переведено %d$", c_money);
			}
			SendClientMessage(playerid, -1, contrib_string);
			format(contrib_string, sizeof(contrib_string), "Текущий баланс: %d$", gBankInfo[playerid][b_acc_money][b_account_id]);
			SendClientMessage(playerid, -1, contrib_string);

			format(contrib_string, sizeof(contrib_string), "DELETE FROM bank_contribution WHERE contribut_id = %d", gBankInfo[playerid][cb_id][c_id]);
			mysql_pquery(connects, contrib_string);
			gBankInfo[playerid][cb_id][c_id] = -1;
			gBankInfo[playerid][cb_money][c_id] = 0;
			gBankInfo[playerid][cb_days][c_id] = 0;
			gBankInfo[playerid][cb_percent][c_id] = 0.0;
			gBankInfo[playerid][cb_unixtime][c_id] = 0;

			for(new a; a < MAX_CONTRIBUTIONS-1; a++)
			{
				if(gBankInfo[playerid][cb_id][a] == -1 && gBankInfo[playerid][cb_id][a+1] != -1)
				{
					gBankInfo[playerid][cb_id][a] = gBankInfo[playerid][cb_id][a+1];
					gBankInfo[playerid][cb_id][a+1] = -1;
					gBankInfo[playerid][cb_money][a] = gBankInfo[playerid][cb_money][a+1];
					gBankInfo[playerid][cb_money][a+1] = 0;
					gBankInfo[playerid][cb_days][a] = gBankInfo[playerid][cb_days][a+1];
					gBankInfo[playerid][cb_days][a+1] = 0;
					gBankInfo[playerid][cb_percent][a] = gBankInfo[playerid][cb_percent][a+1];
					gBankInfo[playerid][cb_percent][a+1] = 0.0;
					gBankInfo[playerid][cb_unixtime][a] = gBankInfo[playerid][cb_unixtime][a+1];
					gBankInfo[playerid][cb_unixtime][a+1] = 0;
				}
			}
			DeletePVar(playerid, "ContributID");
			return 1;
		}
		case dRentFlyBall:
		{
			if ( !response ) return DeletePVar(playerid, "f_ball_rent");
			new f = GetPVarInt(playerid, "f_ball_rent")-1;
			InterpolateCameraPosToPoint(playerid,fly_ball_pos_spawn[f][0] - (30.0 * floatsin(- -160.0,degrees)),fly_ball_pos_spawn[f][1] - (30.0 * floatcos(- -160.0,degrees)),fly_ball_pos_spawn[f][2] + 10.0,-160.0);
			for(new j = 0; j < 3; j++) TextDrawShowForPlayer(playerid, SelectBallObjectTextures[j]);
			show_select_ball[playerid][0]=1;
			SelectTextDraw(playerid,0xC7C7C7FF);
			return 1;
		}
		case dRentBike:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid,"rent_bike"))
			{
				DestroyVehicleOP(GetPVarInt(playerid,"rent_bike"));
				DeletePVar(playerid,"rent_bike");
			}
			new vehicleid;
			if(PlayerToPoint(30.0,playerid,397.3976,-1509.4215,31.7119))
			{
				vehicleid = CreateVehicleOP(510,397.3976,-1509.4215,31.7119,66.5857,1,1,600_000);
			}
			else
			{
				vehicleid = CreateVehicleOP(510,-2367.8081,-2168.6594,32.9705,180.0667,1,1,600_000);
			}
			gVehicles[vehicleid-1][vRentPlayer] = playerid;
			if(gVehicles[vehicleid-1][vRentPlayerText] != Text3D:-1)
			{
				DestroyDynamic3DTextLabel(gVehicles[vehicleid-1][vRentPlayerText]);
				gVehicles[vehicleid-1][vRentPlayerText] = Text3D:-1;
			}
			format(stringer, 128, "{00FF66}Велосипед\nАрендовал: {00FF99}[%s]\n{00FF66}Статус замка: {00FF99}[Закрыт]", NamePlayer[playerid]);
			gVehicles[vehicleid-1][vRentPlayerText] =
				CreateDynamic3DTextLabel(stringer, 0xFFFFFFAA, 20.0, 20.0, 20.0, 5.0, INVALID_PLAYER_ID, vehicleid);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gVehicles[vehicleid-1][vRentPlayerText],E_STREAMER_ATTACH_OFFSET_X, 0.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gVehicles[vehicleid-1][vRentPlayerText],E_STREAMER_ATTACH_OFFSET_Y, 0.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gVehicles[vehicleid-1][vRentPlayerText],E_STREAMER_ATTACH_OFFSET_Z, 0.0);
			ToggleLock(vehicleid, (gVehicles[vehicleid-1][vLock]) ? (false) : (true));
			SendClientMessage(playerid,CLIGHTGREEN,"Вы арендовали велосипед, абсолютно {FFFFFF}бесплатно");
			SendClientMessage(playerid,CYELLOW,"Открыть / Закрыть велосипед можно командой: {"#cGREEN"}/lock");
			SetPVarInt(playerid,"rent_bike", vehicleid);
			if(QuestStep[0][playerid]==1)
			{
				InterpolateCameraPosToPoint(playerid, 394.7378,-1511.6241,32.2464+0.3,213.5694);
				SendBotMessage(playerid, "Молодец!\nТеперь направляйся в мэрию, мой друг даст тебе пару баксов на регистрацию.\nВ кабинете сделай себе паспорт.\nПосле вернись к Джону.");
				SetTimerEx("SetCameraBehindPlayerDelay",5000,0,"i",playerid);
				format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[7][f_name]);
				SendClientMessage(playerid,CORANGE,stringer);
				SetPlayerGPS(playerid,80,1481.6715,-1743.1469,13.5469,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				QuestStep[0][playerid]=2;
				SendClientMessage(playerid, -1, "Вы успешно выполнили это задание, следить за квестами можно через команду {"#cRED"}( /quest )");
				UpdatePlayerQuestStep(playerid);
			}
			else
			{
				SendBotMessage(playerid, "Вы арендовали велосипед\nПользуйтесь им бережно!");
			}
			return 1;
		}
		case 1449:
		{
      		if(response)
			{
				switch(listitem)
				{
				    case 0:
						SendBotMessage(playerid,"Я приехал из другого города искать работу, и тут наткнулся на это.\nПостараюсь проработать тут все лето, а дальше посмотрим.\nЕсли что, я занимаюсь обменом подарков на шкатулки, так что подходи. {FFFEFE}*Улыбается*");
        			case 1:
						SendBotMessage(playerid,"Для обмена необходимо 30 подарков,\nкоторые можно найти по всему штату. Собственно они\nпоявляются раз в 20 минут, так что найти их будет не просто!\n");
        			case 2:
						SendBotMessage(playerid,"В штате стали возникать проблемы с экономикой, вот и какой-то засранец\nрешил побаловаться, дав вам шанс подзаработать.");
					case 3:
					{
					    if(p_info[playerid][pNewYear]<30)return SendBotMessage(playerid,"Дружище, я обменяю тебе шкатулку, только если ты принесешь 30 подарков!");
					    switch(random(55))
						{
							case 0..10:
							{
							    p_info[playerid][pCash] += 100000;
							    UpdateMoney(playerid);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои 100 штук!");
							    p_info[playerid][pNewYear] -= 30;
							    UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
							}
							case 11..12:
							{
							    p_info[playerid][pCash] += 100000;
							    UpdateMoney(playerid);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои 100 штук!");
							    p_info[playerid][pNewYear] -= 30;
							    UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
							}
							case 13..14:
							{
							    if(p_info[playerid][pFeFinder]==0)
							    {
								    p_info[playerid][pFeFinder]=1;
								    UpdatePlayerData(playerid,"pFeFinder",p_info[playerid][pFeFinder]);
								    SendBotMessage(playerid,"Ну хоть что-то. Теперь круче ездить будешь!");
									ShowPlayerDialog(playerid,0,0,"","Вы получили умение 'Шумахер'.\n{752121}Введите /mm - улучшение и посмотрите информацию.","Закрыть","");
									p_info[playerid][pNewYear] -= 30;
									UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
								}
								else SendBotMessage(playerid,"Брат, ты бы мог получить навык шумахер, но уж так получается он у тебя уже есть\nВозращаю твои 30 подарков обратно!");
							}
							case 15..17:
							{
							    p_info[playerid][pDrugs] += 50;
           						SendBotMessage(playerid,"Чувак, да мне это в руках страшно держать, вот забирай быстрей свою траву!");
           						ShowPlayerDialog(playerid,0,0,"","Вы получили 50г наркотиков.\n{752121}Введите /stats - чтобы посмотреть свой инвентарь.","Закрыть","");
           						p_info[playerid][pNewYear] -= 30;
           						UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
							}
							case 18..25:
							{
							    p_info[playerid][pCash] += 50000;
							    UpdateMoney(playerid);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои 50 штук!");
							    p_info[playerid][pNewYear] -= 30;
							    UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
							}
							case 26..30:
							{
							    p_info[playerid][pCash] += 1000000;
							    UpdateMoney(playerid);
							    p_info[playerid][pNewYear] -= 30;
							    UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
							    SendBotMessage(playerid,"Еперный бабай!!\nДа у меня таких денег сроду не было!");
							}
                            case 31..34:
                            {
                                p_info[playerid][tDonatemoney2] += 40;
                                UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
                                ShowPlayerDialog(playerid,0,0,"","Вам удалось получить 40 донат-очков.\nНе забудьте запечатлить этот момент, нажав клавишу F8.","Закрыть","");
                               	p_info[playerid][pNewYear] -= 30;
                               	UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
                            }
                            case 35..37:
                            {
                                p_info[playerid][tDonatemoney2] += 80;
                                UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
                                ShowPlayerDialog(playerid,0,0,"","Вам удалось получить 80 донат-очков.\nНе забудьте запечатлить этот момент, нажав клавишу F8.","Закрыть","");
                               	p_info[playerid][pNewYear] -= 30;
                               	UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
                            }
                            case 38..40:
                            {
       							p_info[playerid][pRouble] += 100;
                                UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
                                ShowPlayerDialog(playerid,0,0,"","Вам удалось получить 100 рублей.\nНе забудьте запечатлить этот момент, нажав клавишу F8.","Закрыть","");
                               	p_info[playerid][pNewYear] -= 30;
                               	UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
                                format(stringer,144,"Открыв СУНДУК с подарками, игрок %s получил 100 рублей на счет!",NamePlayer[playerid]);
								SendClientMessageToAll(COLOR_ORANGE,stringer);
                            }
                            case 41..42:
                            {
       							p_info[playerid][pRouble] += 150;
                                UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
                                ShowPlayerDialog(playerid,0,0,"","Вам удалось получить 150 рублей.\nНе забудьте запечатлить этот момент, нажав клавишу F8.","Закрыть","");
                               	p_info[playerid][pNewYear] -= 30;
                               	UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
                                format(stringer,144,"Открыв СУНДУК с подарками, игрок %s получил 150 рублей на счет!",NamePlayer[playerid]);
								SendClientMessageToAll(COLOR_ORANGE,stringer);
                            }
                            case 43:
                            {
								if(p_info[playerid][pDonateRank]>=5)
								{
	       							p_info[playerid][pRouble] += 150;
	                                UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
	                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
	                                ShowPlayerDialog(playerid,0,0,"","Вам удалось получить 150 рублей.\nНе забудьте запечатлить этот момент, нажав клавишу F8.","Закрыть","");
	                               	p_info[playerid][pNewYear] -= 30;
	                               	UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
	                                format(stringer,144,"Открыв СУНДУК с подарками, игрок %s получил 150 рублей на счет!",NamePlayer[playerid]);
									SendClientMessageToAll(COLOR_ORANGE,stringer);
								}
								else
								{
									p_info[playerid][pDonateRank] = 5;
									UpdatePlayerData(playerid,"pDonateRank",p_info[playerid][pDonateRank]);
	                                SendBotMessage(playerid,"Вот это да!\nЭто же самая ценная вещь из шкатулки!");
	                                ShowPlayerDialog(playerid,0,0,"","Вам удалось получить самый ценный предмет из шкатулки!\nНе забудьте запечатлить этот момент, нажав клавишу F8.\n\n\n{C79B9B}Теперь вы будете получать х2 EXP и 1 wc coins каждый payday.","Закрыть","");
                                	format(stringer,144,"Открыв СУНДУК с подарками, игрок %s получил VIP FIFTH",NamePlayer[playerid]);
									SendClientMessageToAll(COLOR_ORANGE,stringer);
									p_info[playerid][pNewYear] -= 30;
									UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
								}
                            }
							case 44..54:
							{
							    p_info[playerid][pCash] += 50000;
							    UpdateMoney(playerid);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои 50 штук!");
							    p_info[playerid][pNewYear] -= 30;
							    UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
							}
						}
					}
				}
			}
		}
		case dRent:
		{
			if(!response)
			{
				AC_RemovePlayerFromVehicle(playerid);
				// ClearAnimations(playerid, true);
				DeletePVar(playerid,"rent_array");
				return 1;
			}
			new v = GetPVarInt(playerid,"rent_array") - 1;
			if ( v == -1 ) return 1;
			if(p_info[playerid][pCash] < 4200)
			{
				AC_RemovePlayerFromVehicle(playerid);
				// ClearAnimations(playerid, true);
				SendErr(playerid,"У вас не достаточно денег наличными");
				DeletePVar(playerid,"rent_array");
				return 1;
			}
			TransferMoney(playerid,p_info[playerid][pCash]-4200,4200,"аренда транспорта (/rent)");
			p_info[playerid][pCash] -= 4200;
			UpdateMoney(playerid);
			V_RENT[v][V_RENT_PLAYER] = playerid;
			UpdateTextRent(v);
			// SetPVarInt(playerid,"rent_car",V_RENT[v][V_RENT_VEHICLE]);
			SendClientMessage(playerid,CORANGE, "» {"#cWHITE"}Вы арендовали транспорт");
			SendClientMessage(playerid,CORANGE, "» {"#cWHITE"}Управление арендой {"#cORANGE"}/rent");
			DeletePVar(playerid,"rent_array");
			return 1;
		}
		case D_RACE:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:SetPVarInt(playerid,"rVehicle",503);
				case 1:SetPVarInt(playerid,"rVehicle",506);
				case 2:SetPVarInt(playerid,"rVehicle",541);
				case 3:SetPVarInt(playerid,"rVehicle",603);
				case 4:SetPVarInt(playerid,"rVehicle",411);
				case 5:SetPVarInt(playerid,"rVehicle",451);
			}
			ShowPlayerDialog(playerid,D_RACE+1,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите первый цвет машины для гонки","{2D26FF}Синий\n{FF0000}Красный\n{F7FF03}Желтый\n{26FF05}Зеленый\n{FFBA19}Оранжевый\n{"#cWHITE"}Белый\n{CF29BE}Фиолетовый","Выбрать","");
			return 1;
		}
		case D_RACE+1:
		{
			if(!response) return ShowPlayerDialog(playerid,D_RACE+1,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите цвет машины для гонки","{2D26FF}Синий\n{FF0000}Красный\n{F7FF03}Желтый\n{26FF05}Зеленый\n{FFBA19}Оранжевый\n{"#cWHITE"}Белый\n{CF29BE}Фиолетовый","Выбрать","");
			switch(listitem)
			{
				case 0:SetPVarInt(playerid,"rColor",198);
				case 1:SetPVarInt(playerid,"rColor",181);
				case 2:SetPVarInt(playerid,"rColor",194);
				case 3:SetPVarInt(playerid,"rColor",154);
				case 4:SetPVarInt(playerid,"rColor",183);
				case 5:SetPVarInt(playerid,"rColor",0);
				case 6:SetPVarInt(playerid,"rColor",171);
			}
			CreateRaceText(playerid);
			TotalRacePlayer ++;
			SetPVarInt(playerid,"InRaces", TotalRacePlayer );
			RaceTime[playerid][0] = GetTickCount();
			RaceTime[playerid][1] = 0;
			format(stringer, 144,"Вы зарегистрировались на гонку под номером %d, ожидайте старта" , GetPVarInt(playerid, "InRaces"));
			SendClientMessage(playerid,-1,stringer);
			SendClientMessage(playerid,-1,"Если вы покинете помещение, тогда вы не попадете на гонку");

			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);

			SetPVarFloat(playerid, "JoinRace_X", X);
			SetPVarFloat(playerid, "JoinRace_Y", Y);
			SetPVarFloat(playerid, "JoinRace_Z", Z);

			SetPVarInt(playerid,   "JoinRace_Interior", GetPlayerInterior(playerid));
			SetPVarInt(playerid,   "JoinRace_Virtual", GetPlayerVirtualWorld(playerid));

			new update_race_player[100];

			format(update_race_player,100,"~y~   TIME: ~w~00:00~n~~n~~n~~n~~n~~n~~n~~y~  POINT: ~w~0 / 0~n~~y~LOOP: ~w~0 / %d", RaceLoop[TypeRace]);
			PlayerTextDrawSetString(playerid,race_text[playerid][0],update_race_player);

			format(update_race_player, 32, "%d", GetPVarInt(playerid,"InRaces"));
			PlayerTextDrawSetString(playerid,race_text[playerid][1],update_race_player);

			format(stringer, 32, "%d", TotalRacePlayer);
			TextDrawSetString(race_back_text[3], stringer);

			for ( new i = 0; i < 5; i++)
			{
				TextDrawShowForPlayer(playerid,race_back_text[i]);
			}
			PlayerTextDrawShow(playerid,race_text[playerid][0]);
			PlayerTextDrawShow(playerid,race_text[playerid][1]);

			number_player = (number_player != 3) ? ( number_player + 1 ) : ( 0 ) ;

			new vehicle = CreateVehicleOP(GetPVarInt(playerid,"rVehicle"),
					SpawnCarRacePos[TypeRace][number_player][0],
					SpawnCarRacePos[TypeRace][number_player][1],
					SpawnCarRacePos[TypeRace][number_player][2],
					SpawnCarRacePos[TypeRace][number_player][3],
					GetPVarInt(playerid,"rColor"),0,600_000);
			SetPlayerInterior(playerid, 0);
			AC_LinkVehicleToInterior(vehicle, 0);
			AC_SetVehicleVirtualWorld(vehicle, number_world);
			SetPlayerVirtualWorld( playerid , number_world);

			AC_PutPlayerInVehicle(playerid,vehicle,0);

			GameTextForPlayer(playerid, "~p~~h~ START!", 3000, 4);

			SetPVarInt (playerid,"RaceCar", vehicle);

			DisablePlayerRaceCheckpoint(playerid);

			gVehicles[vehicle - 1][vFuel] += 50.0;
			if(number_player == 3) number_world ++;

			return 1;
		}
		case dRandom:
		{
			if(!response) return 1;
			CreateBizzType(playerid,listitem);
			return 1;
		}
		case dDrink:
		{
			if(!response) return 1;
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			if(p_info[playerid][pCash] < SHOP_CLUB_PRICE[listitem]) return SendErr(playerid,"У вас не достаточно денег наличными");
			SCM(playerid, -1, "Используйте "ORG"/drink{"#cWHITE"}, чтобы выпить купленное.");
			SetPVarInt(playerid, "dRink", listitem+1);
			format(stringer, 32, "купил(-а) напиток %s",SHOP_CLUB[listitem]);
			MeAction(playerid, stringer);
			Business[bizid][Bank] += SHOP_CLUB_PRICE[listitem];
			UpdateOtherBusiness(bizid);
			AddMafiaBank(bizid, SHOP_CLUB_PRICE[listitem]);
			TransferMoney(playerid,p_info[playerid][pCash]-SHOP_CLUB_PRICE[listitem],SHOP_CLUB_PRICE[listitem],"покупка напитка");
			p_info[playerid][pCash] -= SHOP_CLUB_PRICE[listitem];
			UpdateMoney(playerid);
			SetPlayerSpecialAction(playerid, 20);
			return 1;
		}
		case dBuyBurger:
		{
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			if(!response) return 1;
			if(p_info[playerid][pCash] < SHOP_CLUB_PRICE[listitem]) return SendErr(playerid,"У вас не достаточно денег наличными");
			Business[bizid][Bank] += SHOP_CLUB_PRICE[listitem];
			UpdateOtherBusiness(bizid);
			AddMafiaBank(bizid, SHOP_CLUB_PRICE[listitem]);
			TransferMoney(playerid,p_info[playerid][pCash]-SHOP_CLUB_PRICE[listitem],SHOP_CLUB_PRICE[listitem],"покупка в закусочной");
			p_info[playerid][pCash] -= SHOP_CLUB_PRICE[listitem];
			UpdateMoney(playerid);
			SetPVarString(playerid,"EatString", SHOP_BURGER[listitem]);
			format(stringer, 64,"{"#cWHITE"}Прием пищи обойдется Вам в {"#cRED"}$%i{"#cWHITE"}.",SHOP_BURGER_PRICE[listitem]);
			ShowPlayerDialog(playerid, dBuyBurger2, DIALOG_STYLE_MSGBOX, "Закусочная",stringer,"Купить","Отмена");
		}
		case dModelPhone:
		{
			if(!response) return 1;
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			new slot = GetPVarInt(playerid,"selected_slot")-1;
			if(slot == -1) return 1;
			if(p_info[playerid][pCash] < ((slot+1)*5000)) return SendErr(playerid,"У вас не достаточно денег наличными");

			p_info[playerid][pModelPhone] = id_phones[slot];
			UpdatePlayerData(playerid,"pModelPhone",p_info[playerid][pModelPhone]);

			Business[bizid][Bank] += ((slot+1)*5000);
			UpdateOtherBusiness(bizid);
			AddMafiaBank(bizid, ((slot+1)*5000));

			TransferMoney(playerid,p_info[playerid][pCash]-((slot+1)*5000),((slot+1)*5000),"покупка новой модели телефона");

			p_info[playerid][pCash] -= ((slot+1)*5000);
			UpdateMoney(playerid);

			if(QuestStep[4][playerid]==1)
			{
					SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
					QuestStep[4][playerid] = 2;
					UpdatePlayerQuestStep(playerid);
			}

			SendSucc(playerid, "Вы приобрели себе новую модель телефона");
			return 1;
		}
		case dBuyBurger2:
		{
			if(!response) return 1;
			SetPlayerSpecialAction(playerid, 25);
			//SetPlayerAttachedObject(playerid, 0, 2215, 3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			SCM(playerid, -1, "Используйте "ORG"/eat{"#cWHITE"}, чтобы употребить купленное");
			SetPVarInt(playerid, "burger", 10);
		}
		case dBusiness:
		{
			if(!response) return 1;
			if(!p_info[playerid][pPbiskey]) return 1;
			new bizid = p_info[playerid][pPbiskey] - 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,dBusinessBank,DIALOG_STYLE_LIST,"Бизнес","1. Посмотреть сумму в кассе\n2. Положить деньги в кассу\n3. Снять деньги с кассы","Далее","Назад");
				case 1: ShowBusinessInformation(playerid,bizid);
				case 2:
				{
					if(Business[bizid][Lock] == 0) return Business[bizid][Lock] = 1,SCM(playerid, CREDD, "Вы закрыли свой бизнес."),Update3DTextLabelBusiness(bizid);
					if(Business[bizid][Lock] == 1) return Business[bizid][Lock] = 0,SCM(playerid, CGREEN, "Вы открыли свой бизнес."),Update3DTextLabelBusiness(bizid);
				}
				case 3:
				{
					SendClientMessage(playerid,-1,"<< {"#cORANGE"}_____________{"#cBLUE"}Бизнес продан{"#cORANGE"}___________________ {ffffff} >>");
					Business[bizid][Lock] = 0;
					format(stringer, 128, "Выручка: {ffffff}%d $", (Business[bizid][BuyPrice]/2));
					SendClientMessage(playerid,CORANGE,stringer);
					TransferMoney(playerid,p_info[playerid][pCash]+(Business[bizid][BuyPrice]/2),(Business[bizid][BuyPrice]/2),"продал бизнес.");
					p_info[playerid][pCash] += (Business[bizid][BuyPrice]/2);
					UpdateMoney(playerid);
					SendClientMessage(playerid,-1,"<< {"#cORANGE"}___________________________________ {ffffff} >>");
					p_info[playerid][pPbiskey] = 0;
					UpdatePlayerData(playerid,"pPbiskey",p_info[playerid][pPbiskey]);
					strmid(Business[bizid][Owner], "The State", 0, strlen("The State"), 31);
					Update3DTextLabelBusiness(bizid);
					SaveBusiness(bizid);
					Business[bizid][bLicenses] = 0;
					UpdateOtherBusiness(bizid);
				}
				case 4:
				{
					if(Business[bizid][bType] != 13)
					{
						ShowPlayerDialog(playerid,dBusinessEnter,1,"Бизнес","{"#cWHITE"}Используйте цену за вход, которую хотите установить:","Принять","Отмена");
					}
					else ShowPlayerDialog(playerid,dBusinessEnter,1,"Бизнес","{"#cWHITE"}Используйте цену за литр, которую хотите установить:","Принять","Отмена");
				}
				case 5:
				{
					SCM(playerid, CORANGE, "Метка {"#cWHITE"}на карте указана в виде {"#cRED"}красного{"#cWHITE"} флажка");
					SetPlayerGPS(playerid,80,Business[bizid][EnterX],Business[bizid][EnterY],Business[bizid][EnterZ],19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 6:
				{
					if(Business[bizid][bType] != 13)
					{
						ShowPlayerDialog(playerid,dBusinessProd,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте количество продуктов которое вы хотите заказать\nЗаказывать можно от 100 до 5000 продуктов", "Далее", "Отмена");
					}
					else ShowPlayerDialog(playerid,dBusinessProd,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте количество топлива которое вы хотите заказать\nЗаказывать можно от 100 до 5000 литров", "Далее", "Отмена");
				}
				case 7:
				{
					ShowPlayerDialog(playerid,dBusinessUpgrade,DIALOG_STYLE_LIST,"Улучшения",
					"1. Автоматические продукты ({00FF00}500.000${ffffff})\n\
					2. Расширение склада ({00FF00}70.000$ + 1000 Прод.{ffffff})\n\
					3. Аптечка в бизнес ({00FF00}20.000${ffffff})","Далее","Назад");
				}
			}
		}
		case dBusinessUpgrade:
		{
			if(!response) return pc_cmd_business(playerid);
			if(!p_info[playerid][pPbiskey]) return 1;
			new bizid = p_info[playerid][pPbiskey]-1;
			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pCash] < 500000) return SendErr(playerid, "Не достаточно средств");
					if(Business[bizid][bAvtoProd] == 1) SendErr(playerid, "У вас уже есть данное улучшение");
					SendSucc(playerid, "Вы приобрели улучшение 'Автоматические продукты'");
					Business[bizid][bAvtoProd] = 1;
					UpdateOtherBusiness(bizid);
					TransferMoney(playerid,p_info[playerid][pCash]-500000,500000,"dBusinessUpgrade 0");
					p_info[playerid][pCash] -= 500000;
					UpdateMoney(playerid);
				}
				case 1:
				{
					if(p_info[playerid][pCash] < 70000) return SendErr(playerid, "Не достаточно средств");
					if(Business[bizid][bProdMax] >= 20000) SendErr(playerid, "У вас приобретено максимальное расширение");
					SendSucc(playerid, "Вы приобрели расширение склада");
					Business[bizid][bProdMax] += 1000;
					UpdateOtherBusiness(bizid);
					TransferMoney(playerid,p_info[playerid][pCash]-70000,70000,"dBusinessUpgrade 1");
					p_info[playerid][pCash] -= 70000;
					UpdateMoney(playerid);
				}
				case 2:
				{
					if(p_info[playerid][pCash] < 20000) return SendErr(playerid, "Не достаточно средств");
					if(Business[bizid][bHel] == 1) SendErr(playerid, "У вас приобретено данное улучшение");
					SendSucc(playerid, "Вы приобрели улучшение 'Аптечка'");
					Business[bizid][bHel] = 1;
					UpdateOtherBusiness(bizid);
					TransferMoney(playerid,p_info[playerid][pCash]-20000,20000,"dBusinessUpgrade 2");
					p_info[playerid][pCash] -= 20000;
					UpdateMoney(playerid);
				}
			}
		}
		case dBusinessProd:
		{
			new put = strval(inputtext);
			new bizid = p_info[playerid][pPbiskey]-1;
			if(!response) return pc_cmd_business(playerid);
			if(Business[bizid][bType] != 13)
			{
				if(put < 100 || put > 5000) return ShowPlayerDialog(playerid,dBusinessProd,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте количество продуктов которое вы хотите заказать\n{ff0000}Заказывать можно от 100 до 5000 продуктов", "Далее", "Отмена");
				if(Business[bizid][bProd]+put >= Business[bizid][bProdMax]) return ShowPlayerDialog(playerid,dBusinessProd,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте количество продуктов которое вы хотите заказать\n{ff0000}Заказать можно не более максимального склада", "Далее", "Отмена");
			}
			else
			{
				if(put < 100 || put > 5000) return ShowPlayerDialog(playerid,dBusinessProd,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте количество топлива которое вы хотите заказать\nЗаказывать можно от 100 до 5000 литров", "Далее", "Отмена");
				if(Business[bizid][bProd]+put >= Business[bizid][bProdMax]) return ShowPlayerDialog(playerid,dBusinessProd,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте количество топлива которое вы хотите заказать\nЗаказывать можно от 100 до 5000 литров\n{ff0000}Заказать можно не более максимального склада", "Далее", "Отмена");
			}
			Business[bizid][bProdOrder] = put;
			UpdateOtherBusiness(bizid);
			if(Business[bizid][bType] != 13)
				ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте цену за 1 продукт\nВ разумных пределах экономики {afafaf}(с 1 до 5$)", "Далее", "");
			else
				ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте цену за 1 литр\nВ разумных пределах экономики {afafaf}(с 1 до 5$)", "Далее", "");
			return 1;
		}
		case dBusinessProd2:
		{
			new put;
			new bizid = p_info[playerid][pPbiskey]-1;
			if(Business[bizid][bType] != 13)
			{
				if(!response) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте цену за 1 продукт\nВ разумных пределах экономики {afafaf}(до 5$)", "Далее", "Отмена");
				if(sscanf(inputtext,"i",put)) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте цену за 1 продукт\nВ разумных пределах экономики {afafaf}(до 5$)", "Далее", "Отмена");
				if(put < 1 || put > 5) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте цену за 1 продукт\nВ разумных пределах экономики {afafaf}(до 5$)", "Далее", "Отмена");
				if(Business[bizid][bProd] + put >= Business[bizid][bProdMax]) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ продуктов", "{ffffff}Используйте количество продуктов которое вы хотите заказать\n{ff0000}Заказать можно не более максимального склада", "Далее", "Отмена");
			}
			else
			{
				if(!response) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте цену за 1 литр\nВ разумных пределах экономики {afafaf}(до 5$)", "Далее", "Отмена");
				if(sscanf(inputtext,"i",put)) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте цену за 1 литр\nВ разумных пределах экономики {afafaf}(до 5$)", "Далее", "Отмена");
				if(put < 1 || put > 5) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте цену за 1 литр\nВ разумных пределах экономики {afafaf}(до 5$)", "Далее", "Отмена");
				if(Business[bizid][bProd] + put >= Business[bizid][bProdMax]) return ShowPlayerDialog(playerid,dBusinessProd2,DIALOG_STYLE_INPUT,"Заказ топлива", "{ffffff}Используйте цену за 1 литр\nВ разумных пределах экономики {afafaf}(до 5$)\n{ff0000}Заказать можно не более максимального склада", "Далее", "Отмена");
			}
			new need_price_prod = floatround((Business[bizid][bProdOrder] * Business[bizid][bProdOrderPrice])  - (Business[bizid][bProdOrder] * Business[bizid][bProdOrderPrice]) * 0.25);
			if(p_info[playerid][pCash]<need_price_prod)
			{
				format(stringer, 144, "У вас недостаточно средств наличными. Нужно: %d",need_price_prod);
				SendClientMessage(playerid,-1,stringer);
				return 1;
			}
			TransferMoney(playerid,p_info[playerid][pCash]-need_price_prod,need_price_prod,"заказал продуктов");
			p_info[playerid][pCash] -= need_price_prod;
			UpdateMoney(playerid);
			Business[bizid][bProdOrderPrice] = put;
			UpdateOtherBusiness(bizid);
			if(Business[bizid][bType] != 13)
			{
				format(stringer, 128, "Вы успешно заказали %d продуктов за %d$ за каждый",Business[bizid][bProdOrder],Business[bizid][bProdOrderPrice]);
				SendClientMessage(playerid,CINFO,stringer);
				SendClientMessage(playerid,CYELLOW2,"- Ожидайте пока вам доставят продукты");
				SendClientMessage(playerid,CYELLOW2,"- Также вы можете устроиться развозчиком продуктов, и доставить сами {afafaf}(/gps > Важные места > Мэрия)");
			}
			else
			{
				format(stringer, 128, "Вы успешно заказали топлива, %d литров за %d$ за каждый",Business[bizid][bProdOrder],Business[bizid][bProdOrderPrice]);
				SendClientMessage(playerid,CINFO,stringer);
				SendClientMessage(playerid,CYELLOW2,"- Ожидайте пока вам доставят топливо");
				SendClientMessage(playerid,CYELLOW2,"- Также вы можете устроиться развозчиком топлива, и доставить сами {afafaf}(/gps > Важные места > Мэрия)");
			}
			//
			return 1;
		}
		case dBusinessBank:
		{
			if(!response) return pc_cmd_business(playerid);
			if(!p_info[playerid][pPbiskey]) return 1;
			new biz = p_info[playerid][pPbiskey] - 1;
			switch(listitem)
			{
				case 0: format(stringer,100,"{"#cWHITE"}В кассе: {"#cGREEN"}$%i",Business[biz][Bank]),ShowPlayerDialog(playerid,dBankReturn,0,"Бизнес",stringer,"Назад","");
				case 1: ShowPlayerDialog(playerid,dBusinessPut,DIALOG_STYLE_INPUT,"Бизнес","Укажите сумму, которую вы хотите положить в кассу","Положить","Отмена");
				case 2: ShowPlayerDialog(playerid,dBusinessGet,DIALOG_STYLE_INPUT,"Бизнес","Укажите сумму, которую вы хотите взять из кассы","Взять","Отмена");
			}
		}
		case dBankReturn:
		{
			ShowPlayerDialog(playerid,dBusinessBank,DIALOG_STYLE_LIST,"Бизнес","1. Посмотреть сумму в кассе\n2. Положить деньги в кассу\n3. Снять деньги с кассы","Далее","Назад");
			return 1;
		}
		case dBusinessEnter:
		{
			if(!response) return pc_cmd_business(playerid);
			if(!p_info[playerid][pPbiskey]) return 1;
			new biz = p_info[playerid][pPbiskey]-1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return 1;
			if(strval(inputtext) < 20 || strval(inputtext) > 500) return SCM(playerid,COLOR_GREY,"Неверная сумма (20$-500$)");
			Business[biz][EnterPrice] = strval(inputtext);
			if(Business[biz][bType] != 13) SCM(playerid, CGREEN, "Цена за вход успешно установлена.");
			else SCM(playerid, CGREEN, "Цена за литр успешно установлена.");
			Update3DTextLabelBusiness(biz);
			return 1;
		}
		case dBusinessPut:
		{
			if(!response) return ShowPlayerDialog(playerid,dBusinessBank,DIALOG_STYLE_LIST,"Бизнес","1. Посмотреть сумму в кассе\n2. Положить деньги в кассу\n3. Снять деньги с кассы","Далее","Назад");
			new sum;
			if ( sscanf(inputtext,"i",sum) ) return ShowPlayerDialog(playerid,dBusinessPut,DIALOG_STYLE_INPUT,"Бизнес","Укажите сумму, которую вы хотите положить в кассу","Положить","Отмена");
			else if(sum < 1) return SendClientMessage(playerid,COLOR_GREY,"Неверная сумма");
			else if(p_info[playerid][pCash] < sum) return SendErr(playerid,"У вас не достаточно денег наличными");
			if(!p_info[playerid][pPbiskey]) return 1;
			new biz = p_info[playerid][pPbiskey] - 1;
			if(strcmp(Business[biz][Owner], NamePlayer[playerid])) return SendClientMessage(playerid,COLOR_GREY,"Ошибка. Вы не имеете доступа к кассе.");
			Business[biz][Bank] += sum;
			TransferMoney(playerid,p_info[playerid][pCash]-sum,sum,"положил деньги в кассу.");
			p_info[playerid][pCash] -= sum;
			UpdateMoney(playerid);
			MeAction(playerid,"положил деньги в кассу");
			SaveBusiness(biz);
			return 1;
		}
		case dBusinessGet:
		{
			if(!response) return ShowPlayerDialog(playerid,dBusinessBank,DIALOG_STYLE_LIST,"Бизнес","1. Посмотреть сумму в кассе\n2. Положить деньги в кассу\n3. Снять деньги с кассы","Далее","Назад");
			if(!p_info[playerid][pPbiskey]) return SendErr(playerid, "Вы не имеете бизнеса");
			new biz = p_info[playerid][pPbiskey]-1;
			new sum;
			if ( sscanf(inputtext,"i",sum) ) return ShowPlayerDialog(playerid,dBusinessGet,DIALOG_STYLE_INPUT,"Бизнес","Укажите сумму, которую вы хотите взять из кассы","Взять","Отмена");
			if(sum < 1) return SendErr(playerid, "Неверная сумма");
			if(Business[biz][Bank] < sum) return SendErr(playerid, "В кассе нет столько денег");
			if(Business[biz][Bank] <=0) return SendErr(playerid, "В кассе денег меньше или равно 0.");
			if(strcmp(Business[biz][Owner], NamePlayer[playerid])) return SendErr(playerid, "Вы не имеете доступа к кассе");
			Business[biz][Bank] -= sum;
			TransferMoney(playerid,p_info[playerid][pCash]+sum,sum,"взял деньги с кассы.");
			p_info[playerid][pCash] += sum;
			UpdateMoney(playerid);
			MeAction(playerid,"взял деньги с кассы");
			SaveBusiness(biz);
			return 1;
		}
		case dBuyFood:
		{
			if(!response) return 1;
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			if(p_info[playerid][pCash] < SHOP_CLUB_PRICE[listitem]) return SendErr(playerid,"У вас не достаточно денег наличными");

			Business[bizid][Bank] += SHOP_CLUB_PRICE[listitem];
			UpdateOtherBusiness(bizid);
			AddMafiaBank(bizid, SHOP_CLUB_PRICE[listitem]);

			TransferMoney(playerid,p_info[playerid][pCash]-SHOP_CLUB_PRICE[listitem],SHOP_CLUB_PRICE[listitem],"покупка в закусочной");
			p_info[playerid][pCash] -= SHOP_CLUB_PRICE[listitem];
			UpdateMoney(playerid);
			SetPVarInt(playerid,"food_listitem",listitem);
			format(stringer, 64,"{"#cWHITE"}Прием пищи обойдется Вам в {"#cRED"}$%i{"#cWHITE"}.",SHOP_PIZZA_PRICE[listitem]);
			ShowPlayerDialog(playerid, dBuyFood2, DIALOG_STYLE_MSGBOX, "Закусочная",stringer,"Купить","Отмена");
			return 1;
		}
		case dBuyFood2:
		{
			if(!response) return 1;
			SCM(playerid, -1, "Используйте "ORG"/eat{"#cWHITE"}, чтобы употребить купленное");
			SetPVarInt(playerid, "burger", 10);
			SetPlayerSpecialAction(playerid, 25);
			//SetPlayerAttachedObject(playerid, 0, 2220, 3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			SetPVarString(playerid,"EatString", SHOP_PIZZA[GetPVarInt(playerid,"food_listitem")]);
			DeletePVar(playerid,"food_listitem");
			p_info[playerid][pEat] += 20;
			UpdatePlayerHunger(playerid);
			return 1;
		}
		case dSim:
		{
			if(!response) return Show247(playerid);
			if(isNumeric(inputtext)) return ShowPlayerDialog(playerid, dSim, DIALOG_STYLE_INPUT, "{"#cGREEN"}Покупка номера", "{"#cWHITE"}Используйте номер ниже\n\n{"#CLIGHTRED"}Примечание:\n\n{"#cWHITE"}- Номер должен быть 6-значным,\nнапример: 123456\n- Номер не должен начинаться с 0", "Ввод", "Отмена");
			if(inputtext[0] == '0') return ShowPlayerDialog(playerid, dSim, DIALOG_STYLE_INPUT, "{"#cGREEN"}Покупка номера", "{"#cWHITE"}Используйте номер ниже\n\n{"#CLIGHTRED"}Примечание:\n\n{"#cWHITE"}- Номер должен быть 6-значным,\nнапример: 123456\n- Номер не должен начинаться с 0", "Ввод", "Отмена");
			if(strlen(inputtext) <= 0 || strlen(inputtext) > 6 || strlen(inputtext) < 6) return ShowPlayerDialog(playerid, dSim, DIALOG_STYLE_INPUT, "{"#cGREEN"}Покупка номера", "{"#cWHITE"}Используйте номер ниже\n\n{"#CLIGHTRED"}Примечание:\n\n{"#cWHITE"}- Номер должен быть 6-значным,\nнапример: 123456\n- Номер не должен начинаться с 0", "Ввод", "Отмена");
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 128, "SELECT `pPnumber` FROM `accounts` WHERE `pPnumber` = '%i'", strval(inputtext));
			mysql_pquery(connects, mysql_query_string, "CheckSim", "i", playerid);
			SetPVarInt(playerid,"sim_number",strval(inputtext));
			return 1;
		}
		case dShop:
		{
			if(!response) return 1;
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			if(Business[bizid][bProd] < shop_prod_sell[listitem]) return SendErr(playerid,"В бизнесе не достаточно продуктов");
			if(p_info[playerid][pCash] < shop_price_sell[listitem]) return SendErr(playerid,"У вас не достаточно денег наличными");
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dSim, DIALOG_STYLE_INPUT, "{"#cGREEN"}Покупка номера", "{"#cWHITE"}Используйте номер ниже\n\n{"#CLIGHTRED"}Примечание:\n\n{"#cWHITE"}- Номер должен быть 6-значным,\nнапример: 123456\n- Номер не должен начинаться с 0", "Ввод", "Отмена");
				case 1: SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели телефонную книгу");
				case 2: SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели справочник"),SCM(playerid,CINFO,"Используйте: {"#cWHITE"}/dir");
				case 3:
				{
					if(p_info[playerid][pHouse] == 0) return SendErr(playerid, "У вас нет дома");
					SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели аптечки в дом! (5 штук)");
					gHouses[p_info[playerid][pHouse]][hHel] += 5;
				}
				case 4: SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели фотоаппарат"),AC_GivePlayerWeapon(playerid, 43, 10);
				case 5:
				{
					SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели цветы");
					SCM(playerid,-1,"Чтобы подарить их, введите: {"#cBLUE"}/present");
					AC_GivePlayerWeapon(playerid, 14, 1);
				}
				case 6: SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели презерватив");
				case 7: SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели перцовый балончик"),AC_GivePlayerWeapon(playerid, 41, 500);
				case 8:
				{
					SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели набор отмычек");
					p_info[playerid][pOtmbI4ka]=5;
					UpdatePlayerData(playerid,"pOtmbI4ka",5);
				}
				case 9: p_info[playerid][pVerevka] ++,SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели верёвку"),UpdatePlayerData(playerid,"pVerevka",p_info[playerid][pVerevka]);
				case 10:
				{
					if(GetPVarInt(playerid,"pMask")) return SendErr(playerid, "У вас уже есть");
					SetPVarInt(playerid,"pMask", true), SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели маску! (/mask)");
				}
				case 11:
				{
					if(GetPVarInt(playerid,"pHealing")) return SendErr(playerid, "У вас уже есть аптечки");
					SetPVarInt(playerid,"pHealing", true), SCM(playerid, CYELLOW, "Поздравляем! Вы приобрели три аптечки! (/healme)");
				}
				case 12:
				{
					if(GetPVarInt(playerid, "boomBox")) return SendErr(playerid, "Вы уже имеете магнитофон");
					SetPVarInt(playerid, "boomBox",1);
					SCM(playerid,-1,"Вы купили магнитофон '/recorder' - установить");
				}
				case 13:
				{
					if(p_info[playerid][pSpining]==0)
					{
						SCM(playerid,-1,"Вы купили {73B461}'удочку для рыбалки'{FFFFFF}");
						SCM(playerid,-1,"{73B461}Ловить рыбу можно на пирсе LS.{FFFFFF}");
						p_info[playerid][pSpining]=1;
						UpdatePlayerData(playerid,"pSpining",p_info[playerid][pSpining]);
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"[Ошибка] {FFFFFF}У вас уже есть удочка");
					}
				}
				case 14:
				{
					p_info[playerid][pWorms] += 15;
					SCM(playerid,-1,"Вы купили {73B461}'баночку червей'{FFFFFF}");
					UpdatePlayerData(playerid,"pWorms",p_info[playerid][pWorms]);
				}
			}
			if(Business[bizid][bProd] > 0)
			{
				Business[bizid][bProd] -= shop_prod_sell[listitem];
				UpdateOtherBusiness(bizid);
			}
			if(listitem != 0) Show247(playerid);

			Business[bizid][Bank] += shop_price_sell[listitem];
			AddMafiaBank(bizid, shop_price_sell[listitem]);
			UpdateOtherBusiness(bizid);
			TransferMoney(playerid,p_info[playerid][pCash]-shop_price_sell[listitem],shop_price_sell[listitem],"покупка в 24/7");
			p_info[playerid][pCash] -= shop_price_sell[listitem];
			UpdateMoney(playerid);
			return 1;
		}
		case 1642:
		{
			if(!response) return 1;
			if(!start_work[playerid])
			{
				start_work[playerid] = 1;
				SCM(playerid,CBLUE,"Рабочий день начат");
				SetPlayerSkin(playerid,p_info[playerid][pModel]);
				SetPlayerColorAc(playerid,p_info[playerid][tMember]);
				DeletePVar(playerid,"mask");
				return 1;
			}
			SCM(playerid,CBLUE,"Рабочий день окончен");
			start_work[playerid] = 0;
			SetPlayerSkin(playerid,p_info[playerid][pChar]);
			SetPlayerColorAc(playerid,p_info[playerid][tMember]);
			UpdatePlayerData(playerid, "start_work", start_work[playerid]);
			return 1;
		}
		case 7166:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 50000) return SCM(playerid, 0x00D900C8, "Подсказка: {"#cWHITE"}Допустимые значения: 1 - 50000");
			if(frac_money[p_info[playerid][tMember]]<put) return SendClientMessage(playerid, 0x00D900C8, "{"#cWHITE"}Не достаточно денег в общаке");
			frac_money[p_info[playerid][tMember]] -=put;

			format(stringer,128,"Вы взяли из банка своей банды: $%i",put);
			SendClientMessage(playerid,CBLUE,stringer);

			TransferMoney(playerid,p_info[playerid][pCash]+put,put,"взял деньги из общака банды");
			p_info[playerid][pCash] += put;
			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case 7167:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 1000000) return SCM(playerid, 0x00D900C8, "Подсказка: {"#cWHITE"}Допустимые значения: 1 - 1000000");
			if(p_info[playerid][pCash] < put) return SendClientMessage(playerid, 0x00D900C8, "{"#cWHITE"}Не достаточно денег наличными");
			if( frac_money[p_info[playerid][tMember]] + put > 1000000) return SCM(playerid, 0x00D900C8, "Подсказка: {"#cWHITE"}На складе может быть максимум 1.000.000$");
			frac_money[p_info[playerid][tMember]] +=put;
			format(stringer, 128,"Вы положили в банк своей банды: $%i",put);
			SCM(playerid,CBLUE,stringer);
			TransferMoney(playerid,p_info[playerid][pCash]-put,put,"положил деньги в общак банды");
			p_info[playerid][pCash] -= put;
			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case 7168:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 500) return ShowPlayerDialog(playerid,7168,DIALOG_STYLE_INPUT,""neworange"Взять металл:",""nwhite"Используйте количество в строчку ниже:\n\n{"#cBLUE"}Доспустимые значения: {"#cWHITE"}1 - 500","Взять","Назад");
			if(frac_metall[p_info[playerid][tMember]] < put) return ShowPlayerDialog(playerid,7168,DIALOG_STYLE_INPUT,""neworange"Взять металл:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}На складе не достаточно металла","Взять","Назад");
			frac_metall[p_info[playerid][tMember]] -= put;
			p_info[playerid][pMats] += put;
			UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);

			format(stringer, 128, "%s [id %d] взял(а) с склада {3399FF}%i кг{66CC00} металла",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateStoreGang(p_info[playerid][tMember]);
			UpdateFractionStore(p_info[playerid][tMember]);
			return 1;
		}
		case dPatronGet:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 500) return ShowPlayerDialog(playerid,dPatronGet,DIALOG_STYLE_INPUT,""neworange"Взять патроны:",""nwhite"Используйте количество в строчку ниже:\n\n{"#cBLUE"}Доспустимые значения: {"#cWHITE"}1 - 500","Взять","Назад");
			if(frac_patron[p_info[playerid][tMember]] < put) return ShowPlayerDialog(playerid,dPatronGet,DIALOG_STYLE_INPUT,""neworange"Взять патроны:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}На складе не достаточно патронов","Взять","Назад");
			frac_patron[p_info[playerid][tMember]] -= put;
			p_info[playerid][pPatron] +=put;
			UpdatePlayerData(playerid,"pPatron",p_info[playerid][pPatron]);

			format(stringer, 128, "%s [id %d] взял(а) с склада {3399FF}%i шт{66CC00} патрон",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case dPatronPut:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1) return ShowPlayerDialog(playerid,dPatronPut,DIALOG_STYLE_INPUT,""neworange"Положить патроны:",""nwhite"Используйте количество в строчку ниже:\n\n{"#cBLUE"}Доспустимые значения: {"#cWHITE"}1 - 500","Положить","Назад");
			if(p_info[playerid][pPatron] < put) return ShowPlayerDialog(playerid,dPatronPut,DIALOG_STYLE_INPUT,""neworange"Положить патроны:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}У вас не достаточно патронов с собой","Положить","Назад");
			if((frac_patron[p_info[playerid][tMember]] + put) > 25000) return SendErr(playerid, "Нельзя положить больше");
			frac_patron[p_info[playerid][tMember]] += put;
			p_info[playerid][pPatron] -=put;
			UpdatePlayerData(playerid,"pPatron",p_info[playerid][pPatron]);

			format(stringer, 128, "%s [id %d] положил(а) на склад {3399FF}%i шт{66CC00} патрон",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case dDrugsGet:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 500 || !strlen(inputtext)) return ShowPlayerDialog(playerid,dDrugsGet,DIALOG_STYLE_INPUT,""neworange"Взять наркотики:",""nwhite"Используйте количество в строчку ниже:\n\n{"#cBLUE"}Доспустимые значения: {"#cWHITE"}1 - 500","Взять","Назад");
			if(frac_drugs[p_info[playerid][tMember]] < put) return ShowPlayerDialog(playerid,dDrugsGet,DIALOG_STYLE_INPUT,""neworange"Взять наркотики:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}На складе не достаточно наркотиков","Взять","Назад");
			frac_drugs[p_info[playerid][tMember]] -= put;
			p_info[playerid][pDrugs] +=put;
			UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);

			format(stringer, 128, "%s [id %d] взял(а) с склада {3399FF}%i г{66CC00} наркотиков",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case dDrugsPut:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialog(playerid,dDrugsPut,DIALOG_STYLE_INPUT,""neworange"Положить наркотики:",""nwhite"Используйте количество в строчку ниже:\n\n{"#cBLUE"}Доспустимые значения: {"#cWHITE"}1 - 1000","Положить","Назад");
			if(p_info[playerid][pDrugs] < put) return ShowPlayerDialog(playerid,dDrugsPut,DIALOG_STYLE_INPUT,""neworange"Положить наркотики:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}У вас не достаточно наркотиков с собой","Положить","Назад");
			if((frac_drugs[p_info[playerid][tMember]] + put) > 20000) return SendErr(playerid, "Нельзя положить больше");
			frac_drugs[p_info[playerid][tMember]] += put;
			p_info[playerid][pDrugs] -=put;
			UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);

			format(stringer, 128, "%s [id %d] положил(а) на склад {3399FF}%i г{66CC00} наркотиков",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case 7169:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialog(playerid,7169,DIALOG_STYLE_INPUT,""neworange"Положить металл:",""nwhite"Используйте количество в строчку ниже:\n\n{"#cBLUE"}Доспустимые значения: {"#cWHITE"}1 - 1000","Положить","Назад");
			if(p_info[playerid][pMats] < put) return ShowPlayerDialog(playerid,7169,DIALOG_STYLE_INPUT,""neworange"Положить металл:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}У вас не достаточно металла с собой","Положить","Назад");
			if((frac_metall[p_info[playerid][tMember]] + put) > 30000) return SendClientMessage(playerid,COLOR_GREY,"Нельзя положить больше");
			frac_metall[p_info[playerid][tMember]] +=put;
			p_info[playerid][pMats] -=put;
			UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);

			format(stringer, 128, "%s [id %d] положил(а) на склад {3399FF}%i кг{66CC00} металла",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateStoreGang(p_info[playerid][tMember]);
			UpdateFractionStore(p_info[playerid][tMember]);
			return 1;
		}
		case 7171:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,dDrugsPut,DIALOG_STYLE_INPUT,""neworange"Положить наркотики:",""nwhite"Используйте количество в строчку ниже:","Положить","Назад");
				case 1: ShowPlayerDialog(playerid,dPatronPut,DIALOG_STYLE_INPUT,""neworange"Положить патроны:",""nwhite"Используйте количество в строчку ниже:","Положить","Назад");
				case 2: ShowPlayerDialog(playerid,7169,DIALOG_STYLE_INPUT,""neworange"Положить металл:",""nwhite"Используйте количество в строчку ниже:","Положить","Назад");
				case 3: ShowPlayerDialog(playerid,1135,DIALOG_STYLE_INPUT,""neworange"Положить деньги:",""nwhite"Используйте количество в строчку ниже:","Положить","Назад");
				case 4: ShowPlayerDialog(playerid,dDrugsGet,DIALOG_STYLE_INPUT,""neworange"Взять наркотики:",""nwhite"Используйте количество в строчку ниже:","Взять","Назад");
				case 5:	ShowPlayerDialog(playerid,dPatronGet,DIALOG_STYLE_INPUT,""neworange"Взять патроны:",""nwhite"Используйте количество в строчку ниже:","Взять","Назад");
				case 6:	ShowPlayerDialog(playerid,7168,DIALOG_STYLE_INPUT,""neworange"Взять металл:",""nwhite"Используйте количество в строчку ниже:","Взять","Назад");
				case 7: ShowPlayerDialog(playerid,1136,DIALOG_STYLE_INPUT,""neworange"Взять деньги:",""nwhite"Используйте количество в строчку ниже:","Взять","Назад");
			}
			return 1;
		}
		case 1135:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put >= MONEY_LIMIT || !strlen(inputtext)) return ShowPlayerDialog(playerid,1135,DIALOG_STYLE_INPUT,""neworange"Положить деньги:",""nwhite"Используйте количество в строчку ниже:","Положить","Назад");
			if(p_info[playerid][pCash] < put) return ShowPlayerDialog(playerid,1135,DIALOG_STYLE_INPUT,""neworange"Положить деньги:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}У вас не достаточно денег с собой","Положить","Назад");
			if( frac_money[p_info[playerid][tMember]] + put > 1000000) return SCM(playerid, 0x00D900C8, "Подсказка: {"#cWHITE"}На складе может быть максимум 1.000.000$");
			frac_money[p_info[playerid][tMember]] += put;
			TransferMoney(playerid,p_info[playerid][pCash]-put,put,"положил на склад");
			p_info[playerid][pCash] -=put;
			UpdatePlayerData(playerid,"pCash",p_info[playerid][pCash]);

			format(stringer, 128, "%s [id %d] положил(а) на склад {3399FF}%i{66CC00} $",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case 1136:
		{
			if(!response) return GangMenu(playerid);
			if(p_info[playerid][tMember] == 0) return 1;
			if(p_info[playerid][tRank] < FractionRank[p_info[playerid][tMember]-1]-1) return SendErr(playerid, "Доступно только лидерам или заместителям");
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialog(playerid,1136,DIALOG_STYLE_INPUT,""neworange"Взять деньги:",""nwhite"Используйте количество в строчку ниже:","Взять","Назад");
			if(put < 1 || put > 1000000) return SCM(playerid, 0x00D900C8, "Подсказка: {"#cWHITE"}Допустимые значения: 1 - 1000000");
			if(frac_money[p_info[playerid][tMember]] < put) return ShowPlayerDialog(playerid,1136,DIALOG_STYLE_INPUT,""neworange"Взять деньги:",""nwhite"Используйте количество в строчку ниже:\n\n{ff0000}На складе не достаточно денег","Взять","Назад");
			frac_money[p_info[playerid][tMember]] -= put;
			TransferMoney(playerid,p_info[playerid][pCash]+put,put,"взял с склада");
			p_info[playerid][pCash] +=put;
			UpdatePlayerData(playerid,"pCash",p_info[playerid][pCash]);

			format(stringer, 128, "%s [id %d] взял(а) с склада {3399FF}%i{66CC00} $",NamePlayer[playerid], playerid, put);
			SendFamilyMessage(p_info[playerid][tMember], 0x66CC00FF, stringer);

			UpdateFractionStore(p_info[playerid][tMember]);
			UpdateStoreGang(p_info[playerid][tMember]);
			return 1;
		}
		case 1147:
		{
			if(!response) return DeletePVar(playerid,"invite");
			params[0] = GetPVarInt(playerid,"invite");
			ChangeSkin(p_info[playerid][tMember],params[0],listitem);
			p_info[params[0]][tRank] = 1;
			UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
			ChangePlayerFraction(params[0],p_info[playerid][tMember]);
			SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
			format(stringer,128,"%s был принят во фракцию %s",NamePlayer[params[0]],f_info[p_info[playerid][tMember]][f_name]);
			SCM(playerid,CBLUE,stringer);
			format(stringer,128,"Вы были приняты во фракцию %s",f_info[p_info[playerid][tMember]][f_name]);
			SCM(params[0],CBLUE,stringer);
			if(IsAGang(playerid))
			{
				format(stringer, 128, "[F] %s [%i] принял в фракцию игрока %s [%i] на первый ранг", NamePlayer[playerid], playerid, NamePlayer[params[0]], params[0]);
				SendFamilyMessage(p_info[playerid][tMember], CINFO, stringer);
			}

			format(stringer, 128, "%s [%i] принял в фракцию игрока %s [%i] на первый ранг", NamePlayer[playerid], playerid, NamePlayer[params[0]], params[0]);
			WriteLog(TYPE_LOG_INV, stringer , p_info[playerid][tMember]);

			if ( p_info [ params[0] ] [ pAdmin ] == 0 )
			{
				p_info[params[0]][pAvig]=0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][pPoint]=0;
				UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
			}
			/* —————————————————Новые строки в коде——————————— */
			p_info[params[0]][pCHits]=0;
			UpdatePlayerData(params[0],"pCHits",p_info[params[0]][pCHits]);
			p_info[params[0]][pCHits]=0;
			UpdatePlayerData(params[0],"pFHits",p_info[params[0]][pFHits]);
			/* ——————————————————————————————————————————————— */
			DeletePVar(playerid,"invite");
			if(StartWork(playerid))
			{
				SCM(params[0],CBLUE,"Рабочий день начат");
				start_work[params[0]] = 1;
				SetWBook(params[0]);
			}
			UpdatePlayerData(params[0], "start_work", start_work[params[0]]);
			/// SetSpawnInfoEx(params[0], p_info[params[0]][pModel], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			return 1;
		}
		case 1146:
		{
			if(!response)
			{
				DeletePVar(playerid,"mkl");
				DeletePVar(playerid,"level");
				return 1;
			}
			params[0] = GetPVarInt(playerid,"mkl");
			params[1] = GetPVarInt(playerid,"level");
			if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
			{
				format(stringer, 128, "%s {"#cWHITE"}был назначен лидером фракции {"#cINFO"}%s", NamePlayer[params[0]],f_info[p_info[params[0]][tMember]][f_name]);
				SCM(playerid, 0xFFFF00AA, stringer);
				return 1;
			}

			p_info[params[0]][tRank] = FractionRank[params[1]-1];
			if(AntiSlivTime[playerid]==0)
			{
				AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
			}
			else
			{
				AntiSlivCount[playerid]++;
			}
			ChangeSkin(params[1],params[0],listitem);
			UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
			p_info[params[0]][tLeader] = params[1];
			UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
			ChangePlayerFraction(params[0],params[1]);
			p_info[params[0]][pJob] = 0;
			UpdatePlayerData(params[0],"pJob",p_info[params[0]][pJob]);

			if(p_info[params[0]][pAdmin] == 0)
			{
				format(stringer, 128, "%s %s назначил %s лидером фракции %s",(p_info[playerid][pAdmin]) ? ("Администратор") : ("Министр"),NamePlayer[playerid], NamePlayer[params[0]],f_info[p_info[params[0]][tMember]][f_name]);
				SendClientMessageToAll(0xff0000ff,stringer);
			}

			format(stringer, 128, "%s %s назначил вас лидером фракции %s", (p_info[playerid][pAdmin]) ? ("Администратор") : ("Министр"),NamePlayer[playerid],f_info[p_info[params[0]][tMember]][f_name]);
			SCM(params[0], 0x269BD8FF, stringer);

			format(stringer, 128, "%s %s назначил %s лидером фракции %s",(p_info[playerid][pAdmin]) ? ("Администратор") : ("Министр"),NamePlayer[playerid], NamePlayer[params[0]],f_info[p_info[params[0]][tMember]][f_name]);
			WriteLog(TYPE_LOG_MKL,stringer);

			format(stringer, 128, "%s {"#cWHITE"}был назначен лидером фракции {"#cINFO"}%s", NamePlayer[params[0]],f_info[p_info[params[0]][tMember]][f_name]);
			SCM(playerid, 0xFFFF00AA, stringer);
			if ( p_info [ params[0] ] [ pAdmin ] == 0 )
			{
				p_info[params[0]][pAvig]=0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][pPoint]=0;
				UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"UPDATE `accounts` SET `pLeaderDate` = '%d-%s%d-%s%d %02d:%02d:%02d' WHERE `ID` = '%d'",tmpday, ((tmpmonth < 10) ? ("0") : ("")), tmpmonth, (tmpyear < 10) ? ("0") : (""), tmpyear, tmphour, tmpminute, tmpsecond,p_info[params[0]][pID]);
			mysql_pquery(connects,mysql_query_string);
			SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
			DeletePVar(playerid,"mkl");
			DeletePVar(playerid,"level");
			if(StartWork(params[0]))
			{
				start_work[params[0]] = 1;
				SCM(params[0],CBLUE,"Рабочий день начат");
			}
			UpdatePlayerData(params[0], "start_work", start_work[params[0]]);
			SetPVarInt(playerid,"makeleader_time", unix + 300);
			/// SetSpawnInfoEx(params[0], p_info[params[0]][pModel], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			return 1;
		}
		case 1145:
		{
			if(!response) return DeletePVar(playerid,"change");
			params[0] = GetPVarInt(playerid,"change");
			if(!p_info[playerid][tMember]) return 1;
			if(!fChangeSkin[p_info[playerid][tMember]-1][listitem]) return SendClientMessage(playerid,CGRAY,"Слот пуст!");
			SetPVarInt(params[0], "InviteSkin", fChangeSkin[p_info[playerid][tMember]-1][listitem]);
			p_info[params[0]][pModel] = fChangeSkin[p_info[playerid][tMember]-1][listitem];
			UpdatePlayerData(params[0],"pModel",p_info[params[0]][pModel]);
			SetPlayerSkin(params[0],fChangeSkin[p_info[playerid][tMember]-1][listitem]);
			format(stringer,128,"%s Выдал Вам новую фракционную одежду",NamePlayer[playerid]);
			SCM(params[0],CBLUE,stringer);
			format(stringer,128,"%s получил новую фракционную одежду",NamePlayer[params[0]]);
			SCM(playerid,CBLUE,stringer);
			DeletePVar(playerid,"change");
			return 1;
		}
		case 2423:
		{
			if(!response) return 1;
			TransferMoney(playerid,p_info[playerid][pCash]-3000,3000,"купил одежду для свядьбы");
			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pCash] < 3000) return SendErr(playerid,"У вас не достаточно денег наличными");
					p_info[playerid][pCash] -=3000;
					UpdateMoney(playerid);
					SetPlayerSkin(playerid, 68);
					SCM(playerid, CGREEN, "Вы выбрали форму свещеника");
				}
				case 1:
				{
					if(p_info[playerid][pCash] < 3000) return SendErr(playerid,"У вас не достаточно денег наличными");
					p_info[playerid][pCash] -=3000;
					UpdateMoney(playerid);
					SetPlayerSkin(playerid, 147);
					SCM(playerid, CGREEN, "Вы купили форму свидетеля");
				}
				case 2:
				{
					if(p_info[playerid][pCash] < 3000) return SendErr(playerid,"У вас не достаточно денег наличными");
					p_info[playerid][pCash] -=3000;
					UpdateMoney(playerid);
					SetPlayerSkin(playerid, 93);
					SCM(playerid, CGREEN, "Вы купили форму свидетельницы");
				}
				case 3:
				{
					if(p_info[playerid][pCash] < 5000) return SendErr(playerid,"У вас не достаточно денег наличными");
					p_info[playerid][pCash] -=5000;
					SetPlayerSkin(playerid, 186);
					SCM(playerid, CGREEN, "Вы купили форму жениха");
				}
				case 4:
				{
					if(p_info[playerid][pCash] < 5000) return SendErr(playerid,"У вас не достаточно денег наличными");
					p_info[playerid][pCash] -=5000;
					SetPlayerSkin(playerid, 219);
					SCM(playerid, CGREEN, "Вы купили форму невесты");
				}
			}
			UpdateMoney(playerid);
			return 1;
		}
	case 1228:
		{
			if(!response) return 1;
			mysql_query_string[0] = EOS;
			switch(GetPVarInt(playerid,"ChangePass"))
			{
				case 0:
				{
					format(mysql_query_string, 128,"SELECT * FROM `admin` WHERE `name` = '%s' AND `password` = '%s' LIMIT 1", NamePlayer[playerid], inputtext);
					mysql_pquery(connects, mysql_query_string, "changepass","ds", playerid, inputtext);
				}
				case 1:
				{
					format(stringer, 128+64, "Вы изменили свой пароль на: %s",inputtext);
					SCM(playerid, CREDD, stringer);
					format(mysql_query_string, 128, "UPDATE `admin` SET  `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, NamePlayer[playerid]);
					mysql_pquery(connects,mysql_query_string);
				}
			}
			return 1;
		}
		case 888:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowPlayerDialog(playerid,889,DIALOG_STYLE_MSGBOX,"Информация о проекте "PROJECT_NAME_SHORT,"{"#cWHITE"}Наш сайт: "PROJECT_WEBSITE"\nНаш форум: "PROJECT_FORUM"\nМы Vkontakte: "PROJECT_VK"\n\nIP сервера: "PROJECT_IP_PORT"\n\nЖанр сервера Role Play (RP) - ролевая игра.","Назад","Отмена");
				case 1: ShowPlayerDialog(playerid,889,DIALOG_STYLE_MSGBOX,"Статистика и навыки","{"#cWHITE"}При активной игре, Ваш игровой аккаунт \"прокачивается\"\n\n- Чтобы посмотреть статистику своего персонажа, Используйте команды /mm, далее выберите < Статистика персонажа >\n- Чтобы посмотреть навыки своего персонажа, Используйте команду /myskill","Назад","Отмена");
				case 2:
					{
						stringer[0] = EOS;
						format(stringer,1000,"{"#cWHITE"}Получить приглашение в какую-либо организацию, Вы сможете от лидеров или их заместителей (/dir > Лидеры)\nНе забывайте отыгрывать роль своего персонажа (делайте все так, как Вы бы сделали в реальном мире, при этом не нарушая правил сервера).\nПомните! В любую секунду за вами может наблюдать администратор сервера.\nНа сервере присутствуют: государственные службы (Мэрия, полиция, медики, автошкола, армии, банды, мафии казино и другие).");
						ShowPlayerDialog(playerid, 889, DIALOG_STYLE_MSGBOX, "Организации", stringer, "Назад", "Отмена");
					}
				case 3: ShowPlayerDialog(playerid,889,DIALOG_STYLE_MSGBOX,"Безопасность","{"#cWHITE"}Чтобы обезопасить себя от взлома, активируйте все защиты безопасности.\nИспользуйте команду /mm, далее выберите < Безопасность >\nОстерегайтесь нечестных игроков, которые могут обмануть Вас при какой-либо сделки.\nНикому не говорите свои пароли и нигде их не используйте!\nВ случае взлома, Ваш аккаунт будет удален главными администраторами.","Назад","Отмена");
				}
			}
			else return SetPVarInt(playerid,"SHOWDIALOGID",unix+4), DeletePVar(playerid,"showhelp");
			return 1;
		}
		case 889:
		{
			if(response) return ShowPlayerDialog(playerid,888,DIALOG_STYLE_LIST,"Помощь по игре","[1] > Информация о проекте "PROJECT_NAME_SHORT"\n[2] > Статистика и навыки персонажа\n[3] > Огранизации\n[4] > Безопасность","Выбрать","Отмена");
			else return 1;
		}
		case 1227:
		{
			if(!response) return 1;
			mysql_query_string[0] = EOS;
			switch(GetPVarInt(playerid,"aLogin"))
			{
				case 1:
				{
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=",true) != -1 || strfind(inputtext, "'",true) != -1) return ShowPlayerDialog(playerid,1227,DIALOG_STYLE_PASSWORD, "Админ-авторизация", "{a9c4e4}Используйте пароль\n\nПароль должен состоять из латинских букв и цифр, размером от 6 до 15 символов", "Вход", "Отмена");
					SetPVarString(playerid,"inputtext",inputtext);
					format(mysql_query_string, 300, "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", NamePlayer[playerid]);
					mysql_pquery(connects, mysql_query_string, "alogin", "ds",playerid,NamePlayer[playerid]);
				}
				case 0:
				{
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1227,DIALOG_STYLE_PASSWORD, "Админ-авторизация", "{a9c4e4}Используйте пароль\n\nПароль должен состоять из латинских букв и цифр, размером от 6 до 15 символов", "Вход", "Отмена");
					format(mysql_query_string, 300, "SELECT * FROM `admin` WHERE `name` = '%s' AND `password` = '%s' LIMIT 1", NamePlayer[playerid], inputtext);
					mysql_pquery(connects, mysql_query_string, "password","ds", playerid, inputtext);
				}
			}
			return 1;
		}
		case 123:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
				case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
				case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
				case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
				case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
				case 5: FIXES_ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
				case 6: FIXES_ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
				case 7: FIXES_ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
				case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
				case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
				case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
				case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
				case 12: FIXES_ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
				case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
				case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
				case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
				case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
				case 17: FIXES_ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
				case 18: GoAnim(playerid,"PED","handsup",4.1,1,0,0,0,0,0);
				case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
				case 20: FIXES_ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
				case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
				case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
				case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
				case 24: FIXES_ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
				case 25: FIXES_ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
				case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
				case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
				case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
				case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
				case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
				case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
				case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
				case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
				case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
				case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
				case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
				case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
				case 38: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
				case 39: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
				case 40: FIXES_ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
				case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
				case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
				case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
				case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
				case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
				case 46: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
				case 47: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
				case 48: FIXES_ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
				case 49: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
				case 50: FIXES_ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
				case 51: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
				case 52: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
				case 53: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
				case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
				case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
				case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
				case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
				case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
				case 59: FIXES_ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
				case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
				case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
				case 62: FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
				case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
			}
			SetPVarInt(playerid,"Animation", 2);
			TextDrawShowForPlayer(playerid, AnimDraw);
			return 1;
		}
		case 516:
		{
			if(!response) return 1;
			if(gAdvertCount >= 15) return SCM(playerid,0xAFAFAFAA," К сожалению, очередь на объявления занята, попробуйте позже");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = strlen(text) * gAdvertPrice;
			if(p_info[playerid][pCash] < price) return SCM(playerid,0xAFAFAFAA," У вас не достаточно денег");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<15;i++)
			{
				if(!gAdvert[i][adBusy])
				{
					slot = i;
					break;
				}
			}
			if(slot == -1) return SendErr(playerid, "Нет места для объявлений");
			TransferMoney(playerid,p_info[playerid][pCash]-price,price,"заплатил за объявление");
			p_info[playerid][pCash] -= price;
			UpdateMoney(playerid);
			format(gAdvert[slot][adSender],24,"%s",NamePlayer[playerid]);
			gAdvert[slot][adID] = playerid;
			gAdvert[slot][adPhone] = p_info[playerid][pPnumber];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			SetPVarInt(playerid,"CountFlood",unix + 30);
			SendSucc(playerid,"Ваше объявление отправлено на обработку");
			format(stringer,128,"[R] Пришло новое объявление от {"#cWHITE"}%s(%d) {4682B4}для редактирования Используйте{"#cWHITE"} /edit",NamePlayer[playerid],playerid);
			SendRadioMessage(16, 0x4682B4AA, stringer);
		}
		case 517:
		{
			if(!response) return 1;
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			SetPVarInt(playerid,"editadvert",listitem);
			gAdvert[listitem][adCheking] = true;
			SetPVarInt(playerid,"adchecking_fix",listitem+1);
			format(stringer,512,"%s\n1.Отправить\n2.Редактировать\n3.Удалить и отправить администрации\n4.Удалить",gAdvert[listitem][adText]);
			ShowPlayerDialog(playerid,518,2,gAdvert[listitem][adSender],stringer,"ОК","Отмена");
		}
		case 518:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				DeletePVar(playerid,"adchecking_fix");
				return ShowAdvertList(playerid);
			}
			switch(listitem)
			{
				case 1:
				{
					gAdvert[id][adTime] = gAdvertTime;
					gAdvertTime += 15;
					format(gAdvert[id][adCheker],MAX_PLAYER_NAME,"%s",NamePlayer[playerid]);
					gAdvert[id][adCheckID] = playerid;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adCheked] = true;
					DeletePVar(playerid,"adchecking_fix");
					ShowAdvertList(playerid);
				}
				case 2:
				{
					ShowPlayerDialog(playerid,519,1,gAdvert[id][adSender],gAdvert[id][adText],"OK","Отмена");
				}
				case 3:
				{
					format(stringer,160,"[A] [Объявление] %s: %s",gAdvert[id][adSender],gAdvert[id][adText]);
					AdmMes(CBADINFO, stringer,1);
					SCM(playerid,0xFFFF00AA,stringer);
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					gAdvert[id][adCheckID] = -1;
					gAdvert[id][adID] = -1;
					gAdvert[id][adBusy] = false;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
				}
				case 4:
				{
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					gAdvert[id][adCheckID] = -1;
					gAdvert[id][adID] = -1;
					gAdvert[id][adBusy] = false;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
				}
				default: {gAdvert[id][adCheking] = false; ShowAdvertList(playerid);}
			}
		}
		case 519:
		{
			if(!response)
			{
				gAdvert[GetPVarInt(playerid,"editadvert")][adCheking] = false;
				ShowAdvertList(playerid);
				return 1;
			}
			new id = GetPVarInt(playerid,"editadvert");
			if(strfind(inputtext,"{") != -1) return ShowPlayerDialog(playerid,519,1,gAdvert[id][adSender],gAdvert[id][adText],"OK","Отмена");

			format(gAdvert[id][adText],100,"%s",inputtext);
			gAdvert[id][adTime] = gAdvertTime;
			gAdvertTime += 15;
			format(gAdvert[id][adCheker],MAX_PLAYER_NAME,"%s",NamePlayer[playerid]);
			gAdvert[id][adCheckID] = playerid;
			gAdvert[id][adCheking] = false;
			DeletePVar(playerid,"adchecking_fix");
			gAdvert[id][adCheked] = true;
			ShowAdvertList(playerid);
		}
		case 1:
		{
			if(!response) return KickEx(playerid);

			format(stringer,400,"{fcfcfd}Добро пожаловать на {00A388}"PROJECT_NAME"\n\n{fcfcfd}Персонаж с ником {79BD8F}%s{fcfcfd} не существует. \nИспользуйте пароль:",NamePlayer[playerid]);
			ShowPlayerDialog(playerid,113,DIALOG_STYLE_INPUT,"{00A388}Регистрация",stringer,"Далее","Отмена");
			return 1;
		}
		case 113:
		{
			if(!response) return KickEx(playerid);

			if(strlen(inputtext)>=64)
			{
				format(stringer,400,"{fcfcfd}Добро пожаловать на {00A388}"PROJECT_NAME"\n\n{fcfcfd}Персонаж с ником {79BD8F}%s{fcfcfd} не существует. \nИспользуйте пароль:",NamePlayer[playerid]);
				ShowPlayerDialog(playerid,113,DIALOG_STYLE_INPUT,"{00A388}Регистрация",stringer,"Далее","Отмена");

				return 1;
			}

			SetPVarString(playerid,"reg_password", (inputtext));

			if(strlen(inputtext) > 5 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				stringer[0] = EOS;
				strcat(stringer,"{79BD8F}1.{fcfcfd} Игровой процесс\nЗапрещено:\n{00A388}1.1{fcfcfd} Использование любых программ скриптов читов и.т.п. дающие нечестное преймущество в игре.\n{00A388}1.2{fcfcfd} Использование багов (Ошибок, Неисправностей мода).\n");
				strcat(stringer,"{79BD8F}1.3{fcfcfd} Использовать ESC в целях ухода от погони/смерти.\n{00A388}1.4{fcfcfd} Убивать игроков на спавне (Место возрождения, базы организаций).\n{00A388}1.5{fcfcfd} Убивать игроков при помощи транспорта (Давить, Стрелять с водительского места).\n");
				strcat(stringer,"{79BD8F}1.6{fcfcfd} Убийство/нанесение физического вреда игрокам без причины (ДМ - Death Match).\n{00A388}1.7{fcfcfd} Развод игроков на деньги.\n{00A388}1.8{fcfcfd} Просьбы, вымогательство паролей от аккаунта.\n");
				strcat(stringer,"{79BD8F}1.9{fcfcfd} Выдаче себя за членов администрации.\n{00A388}2.0{fcfcfd} Злоупотребление игровыми возможностями для создания неудобств игрокам.\n\n{00A388}2.{fcfcfd} Ник в игре\n{"#cGRAY"}(Сменить ник можно через /mm >> Сменить ник){fcfcfd}\n");
				strcat(stringer,"{79BD8F}2.1{fcfcfd} Ник должен состоять из Имени_Фамилии с заглавных букв.\n{00A388}2.2{fcfcfd} Использовать чужие (уже кем-то занятые ники).\n{00A388}2.3{fcfcfd} Использовать ники, содержащие Нецензурные или оскорбительные слова.\n{00A388}2.4{fcfcfd} Отправлять более одной заявки в час (Исключение: Просьба администрации).\n");
				strcat(stringer,"{79BD8F}2.5{fcfcfd} Если вам отказали в смени ника, Значить нельзя.");
				ShowPlayerDialog(playerid,114,DIALOG_STYLE_MSGBOX,"{00A388}Регистрация {fcfcfd}нового персонажа Этап {79BD8F}(1)", stringer, "Согласен", "");
			}
			else
			{
				format(stringer,400,"{fcfcfd}Добро пожаловать на {00A388}"PROJECT_NAME"\n\n{fcfcfd}Персонаж с ником {79BD8F}%s{fcfcfd} не существует. \nИспользуйте пароль:",NamePlayer[playerid]);
				ShowPlayerDialog(playerid,113,DIALOG_STYLE_INPUT,"{00A388}Регистрация",stringer,"Далее","Отмена");
			}
		}
		case 114:
		{
			stringer[0] = EOS;
			strcat(stringer,"{79BD8F}3.{fcfcfd} Чат Сервера.\n{"#cGRAY"}OOC (Out Of Charecter) {fcfcfd}- это все, что касается реального мира.\n{"#cGRAY"}IC (In Charecter) - {fcfcfd}это все, что касается виртуального мира, то есть игры.\nЗапрещено:\n");
			strcat(stringer,"{79BD8F}3.1{fcfcfd} Ругательство, оскорбления или нецензурная речь.\n{00A388}3.2{fcfcfd} Угрозы игрокам (Не относящиеся к игровому процессу).\n{00A388}3.3{fcfcfd} Писать сообщения в верхнем регистре (Caps Lock).\n{00A388}3.4{fcfcfd} Писать в чат объявлений сообщения не относящихся к Role Play.\n");
			strcat(stringer,"{79BD8F}3.5{fcfcfd} Писать одно и тоже сообщение слишком часто.\n{00A388}3.6{fcfcfd} Обсуждать, критиковать действия администрации.\n{00A388}3.7{fcfcfd} Реклама сторонних ресурсов.\n\n{00A388}4.{fcfcfd} Администрация сервера\n\n{00A388}4.1{fcfcfd} Сообщять администрации о каких либо нарушениях из данных правил (/mm >> Репорт).\n");
			strcat(stringer,"{79BD8F}4.2{fcfcfd} Администрация самостоятельно выбирает штрафные санкции для каждого из случаев.\n{00A388}4.3{fcfcfd} Запрещено препятствовать администрации в работе.\n{00A388}4.4{fcfcfd} Решение администрации является окончательным и не подлежит обсуждению.\n\n{00A388}5.{fcfcfd} Торговля.\n");
			strcat(stringer,"{79BD8F}5.1{fcfcfd} Запрещены любые денежные махинации.\n{00A388}5.2{fcfcfd} Запрещена продажа / покупка чего либо, за реальные деньги.\n{00A388}5.3{fcfcfd} Запрещен обмен внеигровых предметов в любой форме, на игровые.\n{00A388}5.4{fcfcfd} Запрещен обмен чего либо между игровыми серверами.\n{00A388}5.5{fcfcfd} Запрещена продажа / передача аккаунтов.");
			ShowPlayerDialog(playerid,115,DIALOG_STYLE_MSGBOX,"{00A388}Регистрация {fcfcfd}нового персонажа Этап {79BD8F}(1)", stringer, "Согласен", "");
			return 1;
		}
		case 115:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"{00A388}Регистрация {fcfcfd}нового персонажа Этап {79BD8F}(2)","{79BD8F}Пожалуйста{fcfcfd} Используйте ваш {79BD8F}E-mail {fcfcfd}это поможет в случае если вы забудите пароль или ваш аккаунт будет взломан\n{79BD8F}Если{fcfcfd} захотите вписать его позже, вы {79BD8F}всегда{fcfcfd} сможете это сделать в {79BD8F}настройках","Далее","Пропустить");
		}
		case dError:
		{
			if(!response) return 1;
			format(stringer, 400, "{fcfcfd}Добро пожаловать на {BEEB9F}"PROJECT_NAME"\n\n{fcfcfd}Персонаж с ником {BEEB9F}%s {fcfcfd}зарегистрирован.\nИспользуйте пароль",NamePlayer[playerid]);
			ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{79BD8F}Авторизация",stringer,"Вход","Выход");
			return 1;
		}
		case 2://Авторизация
		{
			if(!response && !IsBotServer(playerid))
			{
				if(LOG_KICK)
						print ("Авторизация Kick()");
				Kick(playerid);
				return 1;
			}
			if(!strlen(inputtext))
			{
				stringer[0] = EOS;
				format(stringer, 400, "{fcfcfd}Добро пожаловать на {BEEB9F}"PROJECT_NAME"\n\n{fcfcfd}Персонаж с ником {BEEB9F}%s {fcfcfd}зарегистрирован.\nИспользуйте пароль",NamePlayer[playerid]);
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{79BD8F}Авторизация",stringer,"Вход","Выход");
			}
			else if(strcmp(UserKey[playerid],MD5_Hash(inputtext),true))
			{
				if(GetPVarInt(playerid, "wrongPass") == 2)
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX,"{D95A41}Внимание","{D95A41} Вы были кикнуты с сервера\n Используйте \"/q\", Чтобы выйти","Закрыть","");
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					KickEx(playerid);
					return 1;
				}
				SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
				format(stringer, 128, "{D95A41}Внимание! Вы ввели неверный пароль!\n          У вас осталось (%d) попытки\n После вы будете на время забанены",3-GetPVarInt(playerid, "wrongPass"));
				ShowPlayerDialog(playerid,dError,DIALOG_STYLE_MSGBOX,"{D95A41}Ошибка!",stringer,"Повтор","Выйти");
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			}
			else
			{
				//new get_load_data[200];
				//format(get_load_data, 200, "SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1", NamePlayer[playerid]);
				//mysql_pquery(connects, get_load_data, "LoadPlayerData", "i", playerid);
				LoadPlayerData(playerid);
			}
			return 1;
		}
		case 7:
		{
			if(!response)
			{
				strmid(Email[playerid],"No-ne",0,strlen("No-ne"),31);
				ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{00A388}Регистрация {fcfcfd}нового персонажа Этап {79BD8F}(3)","{79BD8F}Пожалуйста{"#cWHITE"} Используйте ник {79BD8F}игрока {"#cWHITE"}которые вас пригласил на сервер\n{79BD8F}Когда{"#cWHITE"}, вы достигнете {79BD8F}4{"#cWHITE"} уровня он получит {79BD8F}приз","Далее","Пропустить");
				return 1;
			}
			if(strlen(inputtext) > 1 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				strmid(Email[playerid],inputtext,0,strlen(inputtext),31);
				ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"{00A388}Регистрация {fcfcfd}нового персонажа Этап {79BD8F}(3)","{79BD8F}Пожалуйста{"#cWHITE"} Используйте ник {79BD8F}игрока {"#cWHITE"}которые вас пригласил на сервер\n{79BD8F}Когда{"#cWHITE"}, вы достигнете {79BD8F}4{"#cWHITE"} уровня он получит {79BD8F}приз","Далее","Пропустить");
			}
			else
			{
				ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"{00A388}Регистрация {fcfcfd}нового персонажа Этап {79BD8F}(2)","{79BD8F}Пожалуйста{"#cWHITE"} Используйте ваш {79BD8F}E-mail {"#cWHITE"}это поможет в случае если вы забудите пароль или ваш аккаунт будет взломан\n{79BD8F}Если{"#cWHITE"} захотите вписать его позже, вы {79BD8F}всегда{"#cWHITE"} сможете это сделать в {79BD8F}настройках","Далее","Пропустить");
			}
		}
		case 117:
		{
			if(!response)
			{
				SetPVarString(playerid,"pDrug","No-ne");
				ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX,"{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(4)","\t{"#cWHITE"}Выберите пол {79BD8F}вашего{"#cWHITE"} персонажа, будьте {79BD8F}внимательны{"#cWHITE"} при выборе\n","Мужчина","Женщина");
				return 1;
			}
			if(strlen(inputtext) > 5 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				if(strlen(inputtext) > 24)
				{
					ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(3)","{79BD8F}Пожалуйста{"#cWHITE"} Используйте ник {79BD8F}игрока {"#cWHITE"}которые вас пригласил на сервер\n{79BD8F}Когда{"#cWHITE"}, вы достигнете {79BD8F}4{"#cWHITE"} уровня он получит {79BD8F}приз","Далее","Пропустить");
					return 1;
				}
				SetPVarString(playerid,"pDrug",(inputtext));
				ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX,"{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(4)","\t{"#cWHITE"}Выберите пол {79BD8F}вашего{"#cWHITE"} персонажа, будьте {79BD8F}внимательны{"#cWHITE"} при выборе\n","Мужчина","Женщина");
			}
			else
			{
				ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(3)","{79BD8F}Пожалуйста{"#cWHITE"} Используйте ник {79BD8F}игрока {"#cWHITE"}которые вас пригласил на сервер\n{79BD8F}Когда{"#cWHITE"}, вы достигнете {79BD8F}4{"#cWHITE"} уровня он получит {79BD8F}приз","Далее","Пропустить");
			}
		}
		case 116:
		{
			if(!response) return pc_cmd_mm(playerid);
			new setting = 1 << listitem;
			if(!(Settings[playerid] & setting)) Settings[playerid] |= setting;
			else Settings[playerid] ^= setting;
			//UpdatePlayerData(playerid,"settings",pData[playerid][pSettings]);
			if(setting == setShowNickname)
			{
				if(Settings[playerid] & setShowNickname)
				{
					foreach(i) ShowPlayerNameTagForPlayer(playerid,i,1);
				}
				else
				{
					foreach(i) ShowPlayerNameTagForPlayer(playerid,i,0);
				}
			}
			ShowSettings(playerid);

			return 1;
		}
		case 9829:
		{
			new bizid = GetPVarInt(playerid,"BUSINESS_ID");
			if(!response) return 1;
			else if(p_info[playerid][pCash] < Business[bizid][EnterPrice]) return SendErr(playerid,"У вас не достаточно денег наличными");
			TransferMoney(playerid,p_info[playerid][pCash]-Business[bizid][EnterPrice],Business[bizid][EnterPrice],"заплатил за вход в бизнес");
			p_info[playerid][pCash] -= Business[bizid][EnterPrice];
			Business[bizid][Bank] += Business[bizid][EnterPrice];
			SaveBusiness(bizid);
			UpdateMoney(playerid);
			Business[bizid][bVisitors]++;
			SetPlayerPosBusiness(playerid, bizid);
			player_enter_price[playerid][bizid]=true;
			return 1;
		}
		case 9828:
		{
			if(response)
			{
				SetPlayerPosBusiness(playerid, GetPVarInt(playerid,"BUSINESS_ID"));
			}
			else	BuyBusiness(playerid, GetPVarInt(playerid,"BUSINESS_ID"));
		}
		case 1022:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:	StopAudioStreamForPlayer(playerid);//
				case 1: PlayAudioStreamForPlayer(playerid, "http://46.105.180.202:8099/stream");
			}

			return 1;
		}
		case 1025:
		{
			if(!response) return ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Телепорт меню", "[1] > Важные места\n[2] > Базы организаций\n[3] > Развлечения", "Выбрать", "Назад");
			switch(listitem)
			{
				case 0:
				{
					if (GetPlayerState(playerid) == 2) return AC_SetVehiclePos(GetPlayerVehicleID(playerid), 1479.5551,-1723.4257,13.5469);
					AC_SetPlayerPos(playerid, 1479.5551,-1723.4257,13.5469);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 1:
				{
					if (GetPlayerState(playerid) == 2) return AC_SetVehiclePos(GetPlayerVehicleID(playerid), -2046.7970,-92.4588,35.1718);
					AC_SetPlayerPos(playerid, -2046.7970,-92.4588,35.1718);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 2:
				{
					if (GetPlayerState(playerid) == 2)	return AC_SetVehiclePos(GetPlayerVehicleID(playerid), 1154.3717,-1769.2594,16.5938);
					AC_SetPlayerPos(playerid, 1154.3717,-1769.2594,16.5938);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 3:
				{
					if (GetPlayerState(playerid) == 2)	return AC_SetVehiclePos(GetPlayerVehicleID(playerid), -1990.8562,141.7591,27.5391);
					AC_SetPlayerPos(playerid, -1990.8562,141.7591,27.5391);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 4:
				{
					if (GetPlayerState(playerid) == 2) return AC_SetVehiclePos(GetPlayerVehicleID(playerid), 2830.0520,1291.2742,10.7724);
					AC_SetPlayerPos(playerid, 2830.0520,1291.2742,10.7724);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 5:
				{
					if (GetPlayerState(playerid) == 2) return AC_SetVehiclePos(GetPlayerVehicleID(playerid), -1982.6603,1117.1691,53.1241);
					AC_SetPlayerPos(playerid, -1982.6603,1117.1691,53.1241);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 6:
				{
					if (GetPlayerState(playerid) == 2) return AC_SetVehiclePos(GetPlayerVehicleID(playerid), 2284.3079,-1385.1919,24.1074);
					AC_SetPlayerPos(playerid, 2284.3079,-1385.1919,24.1074);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			case 7:
				{
					if (GetPlayerState(playerid) == 2)	return AC_SetVehiclePos(GetPlayerVehicleID(playerid), 1659.9182,2193.1094,10.8203);
					AC_SetPlayerPos(playerid, 1659.9182,2193.1094,10.8203);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					return 1;
				}
			}
		}
		case 1023:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1537.8055,-1683.7101,5.8906);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1537.8055,-1683.7101,5.8906);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 1:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -1579.4552,714.3129,-5.2422);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, -1579.4552,714.3129,-5.2422);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 2:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 674.4134,-599.1913,16.1859);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 674.4134,-599.1913,16.1859);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 3:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -1328.8890,465.4548,7.1875);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, -1328.8890,465.4548,7.1875);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 4:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 214.3500,1912.0774,17.6406);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 214.3500,1912.0774,17.6406);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 5:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 305.8541,1960.7563,17.6406);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 305.8541,1960.7563,17.6406);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 6:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -2438.7434,506.0541,29.9403);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, -2438.7434,506.0541,29.9403);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 7:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 289.8230,-1624.1536,33.1488);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 289.8230,-1624.1536,33.1488);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 8:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -2029.2954,481.1077,35.1719);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, -2029.2954,481.1077,35.1719);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 9:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 2650.8120,1177.6479,10.8203);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 2650.8120,1177.6479,10.8203);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 10:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1437.3210,751.9976,10.8203);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1437.3210,751.9976,10.8203);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 11:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1463.9346,2771.7905,10.6719);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1463.9346,2771.7905,10.6719);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 12:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 964.9061,1735.1936,8.6484);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 964.9061,1735.1936,8.6484);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 13:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -2656.1780,625.5262,14.4531);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, -2656.1780,625.5262,14.4531);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 14:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 2646.4475,-2003.2625,13.3828);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 2646.4475,-2003.2625,13.3828);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 15:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 2781.7249,-1610.8099,10.9219);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 2781.7249,-1610.8099,10.9219);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 16:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 2497.2100,-1664.9871,13.3438);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 2497.2100,-1664.9871,13.3438);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 17:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1688.6929,-2112.6204,13.4804);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1688.6929,-2112.6204,13.4804);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 18:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 2179.2788,-1800.3375,13.3660);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 2179.2788,-1800.3375,13.3660);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 20:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1175.3523,-1323.0835,14.3906);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1175.3523,-1323.0835,14.3906);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 21:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -1093.3384,-1650.8413,76.3739);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, -1093.3384,-1650.8413,76.3739);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 22:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1303.1321,1287.0455,10.8203);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1303.1321,1287.0455,10.8203);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 23:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 306.7477,-1520.7653,24.9219);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 306.7477,-1520.7653,24.9219);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				case 19:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1658.2358,2258.2202,10.8203);
							return 1;
						}
						else
						{
							AC_SetPlayerPos(playerid, 1658.2358,2258.2202,10.8203);
						}
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return 1;
					}
				}
			}
			else ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Телепорт меню", "[1] > Важные места\n[2] > Базы организаций\n[3] > Развлечения", "Выбрать", "Назад");
		}
	case 1024:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1544.2843,-1353.7676,329.4735);
						}
						else AC_SetPlayerPos(playerid, 1544.2843,-1353.7676,329.4735);
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				case 1:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1420.2240,-2492.3525,13.5547);
						}
						else AC_SetPlayerPos(playerid, 1420.2240,-2492.3525,13.5547);
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				case 2:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -1664.5912,-171.0089,14.1484);
						}
						else AC_SetPlayerPos(playerid, -1664.5912,-171.0089,14.1484);
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				case 3:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 1477.1882,1201.8468,10.8203);
						}
						else AC_SetPlayerPos(playerid, 1477.1882,1201.8468,10.8203);
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				case 4:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, -219.3477,1410.4385,27.7734);
						}
						else AC_SetPlayerPos(playerid, -219.3477,1410.4385,27.7734);
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				case 5:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							AC_SetVehiclePos(tmpcar, 2689.4490,-1700.0789,10.4793);
						}
						else AC_SetPlayerPos(playerid, 2689.4490,-1700.0789,10.4793);
						SCM(playerid, CWHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				}
			}
			else ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Телепорт меню", "[1] > Важные места\n[2] > Базы организаций\n[3] > Развлечения", "Выбрать", "Назад");
		}
		case 1004:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 1025, DIALOG_STYLE_LIST, " Важные места", "- Мэрия\n- Автошкола\n- Респа LS\n- Респа SF\n- Респа LV\n- Церковь\n- Центр Getto\n- Автомастерская LV", "Выбрать", "Назад");
					case 1: ShowPlayerDialog(playerid, 1023, DIALOG_STYLE_LIST, " Базы организаций", "- Police Department\n- SFPD\n- San Andreas Sheriff Department\n- Армия SF\n- Армия LV\n- Склад Армия LV\n- FBI\n- LS News\n- SF News\n- LV News\n- La Cosa Nostra\n- Якудза\n- Русская Мафия\n- CФ\n- The Ballas Gang\n- The Vagos Gang\n- Grove Street Gang\n- Aztek Gang\n- The Rifa Gang\n- Casino Rich\n- Мчс LS\n- Похоронное бюро\n- Street Rasers\n- SWAT", "Выбрать", "Назад");
					case 2: ShowPlayerDialog(playerid, 1024, DIALOG_STYLE_LIST, " Развлечения", "- Небоскрёб LS\n- Аэропорт LS\n- Аэропорт SF\n- Аэропорт LV\n- Prison Cheater's\n- Paint Ball", "Выбрать", "Назад");
				}
			}
			else ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "{"#cPINK"}Админ-панель", "{"#cORANGE"}-{ffffff} Команды\n{"#cORANGE"}-{ffffff} Запустить развлечения\n{"#cORANGE"}-{ffffff} Телепорт меню\n{"#cORANGE"}-{ffffff} Устроиться на работу\n{"#cORANGE"}-{ffffff} Игроки с одинаковым IP - адресом\n{"#cORANGE"}-{ffffff} Информация о игроках с варном\n{"#cORANGE"}-{ffffff} Информация о игроках с баном чата\n{"#cORANGE"}-{ffffff} Выдать PayDay", "Выбрать", "Отмена");
		}
		case dCreateMPAdm:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0: pc_cmd_startpb(playerid);
				case 1: pc_cmd_startrace(playerid, "");
			}

			return 1;
		}
		case 1001:
		{
			if(!response) return 0;
			switch(listitem)
			{
				case 0:
				{
					stringer[0] = EOS;
					if(p_info[playerid][pAdmin] >= 1) strcat(stringer, "{FFFFFF}1 уровень: {FFC919}/prisoners, /prison, /mute, /unmute, /rmute, /unrmute, /unjail, /re, /cw, /ap, /togphone, /aheal, /admin, /a, /goto, /gethere, /knocklist, /offjail, /hp, /tp, /startregzombie, /ans, /object\n");
					if(p_info[playerid][pAdmin] >= 2) strcat(stringer, "{FFFFFF}2 уровень: {FFC919}/getstats, /slap, /skin, /iwep, /sp, /freeze, /unfreeze\n");
					if(p_info[playerid][pAdmin] >= 3) strcat(stringer, "{FFFFFF}3 уровень: {FFC919}/kick, /skick, /getip, /alock, /get, /mark, /gotomark \n");
					if(p_info[playerid][pAdmin] >= 4) strcat(stringer, "{FFFFFF}4 уровень: {FFC919}/amusic, /sban, /adellaction, /warnmans, /mutelist, /offmute, /getban, /int\n");
					if(p_info[playerid][pAdmin] >= 5) strcat(stringer, "{FFFFFF}5 уровень: {FFC919}/uval, /iban, /ban, /ainvite, /fid, /atipster, /spawncars, /chatsms, /chatpm, /offban, /unban, /veh, /delveh, /pgetip, /agetip, /gotogz, /gzcolor\n");
					if(p_info[playerid][pAdmin] >= 6) strcat(stringer, "{FFFFFF}6 уровень: {FFC919}/warn, /tempmember, /setname, /aad, /clear, /unwarn, /offunwarn, /offwarn, /sethp, /gotospawn, /weather, /unbanip, /banip, /agetipreg, /setbizwar, /createmp\n");
					if(p_info[playerid][pAdmin] >= 7) strcat(stringer, "{FFFFFF}7 уровень: {FFC919}/agetstats, /fuelcars, /startpb, /startrace, /checkpbtime, /checkracetime, /mp, /givegun, /alldelveh, /gangfreeze, /mafiafreeze\n");
					if(p_info[playerid][pAdmin] >= 8) strcat(stringer, "{FFFFFF}8 уровень: {FFC919}/tempskin, /offgoto, /biz, /hbject, /hbjectedit\n");
					if(p_info[playerid][pAdmin] >= 9) strcat(stringer, "{FFFFFF}9 уровень: {FFC919}/setskin, /spveh, /agiverank\n");
					if(p_info[playerid][pAdmin] >= 10) strcat(stringer, "{FFFFFF}10 уровень: {FFC919}/house, /ranks, /deletehit, /contracts\n");
					if(p_info[playerid][pAdmin] >= 11) strcat(stringer, "{FFFFFF}11 уровень: {FFC919}/lmenu, /elections, /makeleader, /changerank, /offleader, /hpoint, /lpoint, /avigl, /unvigl, /changefractiongun, /changefractionskin\n");
					if(p_info[playerid][pAdmin] >= 12) strcat(stringer, "{FFFFFF}12 уровень: {FFC919}/setstats /delacc /giverouble /agivevip /addhouse /changehousepos /changehouseposcar /addbizz /point /createost /avig /admstat /sethouseklass /loadmap /deletemap\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{ffffff}Команды администратора",stringer,"Закрыть","");
				}
				case 1:ShowPlayerDialog(playerid,dCreateMPAdm,DIALOG_STYLE_LIST, ""ORG"Развлечения", "{ffffff}Paintball\nГонки", "Выбрать", "Отмена");
				case 2:ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Телепорт меню", "[1] > Важные места\n[2] > Базы организаций\n[3] > Развлечения", "Выбрать", "Назад");
				case 3:
				{
					ShowPlayerDialog(playerid,10098,DIALOG_STYLE_TABLIST,"{"#cWHITE"}Работа","{"#cORANGE"}1.{"#cWHITE"} Водитель автобуса \t{"#cORANGE"}(2 лвл)\n\
							{"#cORANGE"}2.{"#cWHITE"} Таксист \t{"#cORANGE"}(2 лвл)\n\
							{"#cORANGE"}3.{"#cWHITE"} Механик \t{"#cORANGE"}(3 лвл)\n\
							{"#cORANGE"}4.{"#cWHITE"} Развозчик продуктов \t{"#cORANGE"}(2 лвл)\n\
							{"#cORANGE"}5.{"#cWHITE"} Развозчик топлива \t{"#cORANGE"}(2 лвл)","ОК","Отмена");
				}
				case 4:
				{
					for(new i=0;i<MAX_PLAYERS;i++)
					{
					    if(!IsPlayerConnected(i)) continue;
						for(new i2=0;i2<MAX_PLAYERS;i2++)
						{
						    if(!IsPlayerConnected(i2)) continue;
							if(i2 == i) continue;
							if(!strcmp(PlayerIp[i], PlayerIp[i2]) && !IsBotServer(i))
							{
								format(stringer, 128, "%s[%i]: %s", NamePlayer[i], i,PlayerIp[i]);
								SendClientMessage(playerid, -1, stringer);

								break;
							}
						}
					}
				}
				case 5:
				{
					new countwarn = 0;

					foreach(i)
					{
						if(p_info[i][pWarns] <= 0) continue;

						format(stringer, 128, "%d) %s[%d]: Дата снятия: %s", countwarn+1, NamePlayer[i],i,date("%dd/%mm/%yyyy в %hh:%ii",p_info[i][punWarnstime]));
						SendClientMessage(playerid,-1,stringer);

						countwarn++;
					}
					if(countwarn == 0) return SendErr(playerid, "Нет игроков с варнами");

					return 1;
				}
				case 6:
				{
					new countmute = 0;

					foreach(i)
					{
						if(p_info[i][pMuteTime] <= 0) continue;

						format(stringer, 128, "%d) %s[%d]: Cекунд до снятия: %i", countmute+1, NamePlayer[i],i,p_info[i][pMuteTime]);
						SendClientMessage(playerid,-1,stringer);

						countmute++;
					}
					if(countmute == 0) return SendErr(playerid, "Нет игроков с мутами");
				}
				case 7:
				{
	   				if(p_info[playerid][pAdmin] < 12) return SendErr(playerid, "Вам недоступна данная команда.");
					PayDay();
					return 1;
				}
			}
		}
		case 10:
		{
			if(!response) return ShowPlayerDialog(playerid, dAdmCommun, DIALOG_STYLE_LIST, "{ffff00}Связь с администрацией", "{"#cORANGE"}1.{"#cWHITE"} Отправить жалобу\n{"#cORANGE"}2.{"#cWHITE"} Задать вопрос", "Далее", "Назад"), DeletePVar ( playerid, "adm_msg_type" ) ;
			if( strfind(inputtext,"}") != -1 ) return SendClientMessage(playerid,-1,"Нельзя цвета в репорт");
			if(!strlen(inputtext) || strlen(inputtext)>100) return SendErr(playerid, "Вы ввели пустое сообщение или оно слишком длинное");
			if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас затычка");
			if(GetPVarInt(playerid,"pReportTime") > unix) return SendErr(playerid, "Подождите немного...");


			format(stringer, 128, "%s [%d]: "nwhite"%s",NamePlayer[playerid], playerid, (inputtext));
			SCM(playerid, 0x008e8cff, stringer);
			SCM(playerid, -1, "Ожидайте ответа администратора");
			if ( GetPVarInt ( playerid, "adm_msg_type" ) == 1 )
			{
				new send_dm_message[200];
				send_dm_message[0]=EOS;
				if(strfind(inputtext," dm") != -1 || strfind(inputtext," дм") != -1)
				{
					format(send_dm_message, 200, "[Памятка] {008e8c}Игрок пожаловался на ДМ, используйте /damages %d (посмотреть) и /aheal %d (вылечить)", playerid, playerid);
				}
				foreach(i)
				{
					if(p_info[i][pAdmin] < 1) continue;
					format(stringer, 128, "[PM] %s [%d]: {"#cWHITE"}%s", NamePlayer[playerid], playerid, (inputtext));
					SCM(i, 0x008e8cff, stringer);
					if(send_dm_message[0] != EOS) SCM(i, 0xAFAFAFff, send_dm_message);
				}
			}
			if ( GetPVarInt ( playerid, "adm_msg_type" ) == 2 )
			{
				foreach(i)
				{
					if(p_info[i][tHelper] < 1 && p_info[i][pAdmin] < 1) continue;
					if(p_info[i][tHelper] > 1) { HelperStat[i][0] += 1; }
					format(stringer, 128, "[QE] %s [%d]: {"#cWHITE"}%s", NamePlayer[playerid], playerid, (inputtext));
					SCM(i, 0x008e8cff, stringer);
				}
				SetPVarInt ( playerid, "is_question", 1 ) ;
				SetTimerEx ( "clear_player_pvar", 180000, 0, "i", params [ 0 ] ) ;
			}
			DeletePVar ( playerid, "adm_msg_type" ) ;
			SetPVarInt(playerid,"pReportTime", unix + 10);
			return 1;
		}
	case 7765:
		{
			if(!response) return 1;
			if(p_info[playerid][pCash]<(10000*(listitem+1)))
			{
				SendErr(playerid, "У вас не достаточно денег");
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 4, 1);
				}
				case 1:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 31, 500);
					AC_GivePlayerWeapon(playerid, 4, 1);
				}
				case 2:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 30, 500);
					AC_GivePlayerWeapon(playerid, 4, 1);
				}
				case 3:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 31, 500);
					AC_GivePlayerWeapon(playerid, 4, 1);
					AC_GivePlayerWeapon(playerid, 34, 20);
				}
				case 4:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 30, 500);
					AC_GivePlayerWeapon(playerid, 4, 1);
					AC_GivePlayerWeapon(playerid, 34, 20);
				}
				case 5:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 31, 500);
					AC_GivePlayerWeapon(playerid, 4, 1);
					AC_GivePlayerWeapon(playerid, 34, 20);
				}
				case 6:
				{
					AC_GivePlayerWeapon(playerid, 24, 50);
					AC_GivePlayerWeapon(playerid, 29, 500);
					AC_GivePlayerWeapon(playerid, 25, 50);
					AC_GivePlayerWeapon(playerid, 30, 500);
					AC_GivePlayerWeapon(playerid, 4, 1);
					AC_GivePlayerWeapon(playerid, 34, 20);
				}
			}
			if(listitem>4)
			{
				AC_SetPlayerArmour(playerid,100.0);
			}
			format(stringer, 128, "Вы приобрели комплект оружия № %i", (listitem+1));
			SCM(playerid,CLIGHTBLUE, stringer);
			TransferMoney(playerid,p_info[playerid][pCash]-(10000*(listitem+1)),(10000*(listitem+1)),"приобрел комлект оружия");
			p_info[playerid][pCash] -= (10000*(listitem+1));
			UpdateMoney(playerid);
			return 1;
		}
	case 22572:
		{
			if(!response) return 1;
			if(p_info[playerid][pCash] < sellgun3) return SCM(playerid,CGRAD1,"У вас не достаточно денег");
			format(stringer, 128,"Вы продали оружие - %s",NamePlayer[playerid]);
			SCM(sellgun4,0x6ab1ffaa,stringer);
			format(stringer, 128, "Вы купили оружие у - %s",NamePlayer[sellgun4]);
			SCM(playerid,0x6ab1ffaa,stringer);
			TransferMoney(playerid,p_info[playerid][pCash]-sellgun3,sellgun3,"купил оружие у кого-то");
			p_info[sellgun][pCash] -=sellgun3;
			AC_GivePlayerWeapon(sellgun,sellgun1,sellgun2);
			p_info[sellgun4][pMats] -= (2*sellgun2);
			p_info[sellgun4][pPatron] -= sellgun2;
			UpdatePlayerData(sellgun4,"pMats",p_info[sellgun4][pMats]);
			UpdatePlayerData(sellgun4,"pPatron",p_info[sellgun4][pPatron]);
			TransferMoney(sellgun4,p_info[sellgun4][pCash]+sellgun3,sellgun3,"продал оружие у кому-то");
			p_info[sellgun4][pCash] +=sellgun3;
			UpdateMoney(playerid);
			format(stringer, 128, "сделал оружие из металла и передал в руки %s",NamePlayer[sellgun4]);
			MeAction(playerid,stringer, 10.0);
			return 1;
		}
	case 3002:
		{

			if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT,"Цена за Звонки и SMS","Используйте сумму","Ок","Отмена");
				new moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
				{
					SCM(playerid, CWHITE, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT,"Цена за Звонки и SMS","Используйте сумму","Ок","Отмена");
					return 1;
				}

				format(stringer, 128, "[LS News] Цена за Звонки и SMS, в размере %d $. установлена Главным редактором %s.", moneys, NamePlayer[playerid]);
				SendFamilyMessage(16,CYELLOW2, stringer);
				smspricels = moneys;
				return 1;
			}
			else
			{
				return 1;
			}
		}
	case 32:
		{

			if(response)
			{
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Цена за объявления","Используйте сумму","Ок","Отмена");
				}
				new moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
				{
					SCM(playerid, CWHITE, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Цена за объявления","Используйте сумму","Ок","Отмена");
					return 1;
				}

				format(stringer, 128, "Цена за объявления, в размере %d $. установлена Главным редактором %s.", moneys, NamePlayer[playerid]);
				SendFamilyMessage(16,CYELLOW2, stringer);
				return 1;
			}
			else
			{
				return 1;
			}
		}
	case 2224:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid,"TalkingLivels") == 2)
					{
						SCM(playerid, 0x6ab1ffaa, "Прямой эфир завершён");
						DeletePVar(playerid,"TalkingLivels");
						format(stringer, 128, "[LS News] %s вышел(а) из прямого эфира", NamePlayer[playerid]);
						SendFamilyMessage(16,CBLUE, stringer);
						return 1;
					}
					else
					{
						format(stringer, 128, "[LS News] %s вошел(а) в прямой эфир", NamePlayer[playerid]);
						SendFamilyMessage(16,CBLUE, stringer);
						SetPVarInt(playerid,"TalkingLivels", 2);
						return 1;
					}
				}
				case 1:
				{
					if(smsls) return SCM(playerid,COLOR_GREY,"Приём звонков от слушателей начат");
					format(stringer, 128, "[F] %s начал(а) приём звонков от слушателей", NamePlayer[playerid]);
					SendFamilyMessage(16,CBLUE, stringer);
					smsls = true;
				}
				case 2:
				{
					if(!smsls) return SCM(playerid,COLOR_GREY,"Приём звонков от слушателей не начат");
					format(stringer, 128, "[F] %s завершил(а) приём звонков от слушателей", NamePlayer[playerid]);
					SendFamilyMessage(16,CBLUE, stringer);
					smsls = false;
				}
				case 3:if(p_info[playerid][tLeader] ==16)return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT,"Цена за Звонки и SMS на номер 11888","Используйте сумму","Ок","Отмена");
				case 4:if(p_info[playerid][tLeader] ==16)return ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Цена Объявления","Используйте сумму","Ок","Отмена");
			}
		}
	case dRentGarage:
		{
			new i = p_info[playerid][pTempKey];
			if(response)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				AC_SetPlayerPos(playerid,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
				SetPlayerFacingAngle(playerid, gHouses[i][houseA]);
			}
			else
			{
				FreezePlayerForTime(playerid,1000);
				SetPlayerInterior(playerid, gHouseExitInterior[gHouses[i][hKlass]-1]);
				SetPlayerVirtualWorld(playerid, i);
				AC_SetPlayerPos(playerid,892.3206,604.1663,1000.2886);
				SetPlayerFacingAngle(playerid,268.9163);
			}
			return 1;
		}
	case 70:
		{
			new i = p_info[playerid][pHouse];
			if(response)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				AC_SetPlayerPos(playerid,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
				SetPlayerFacingAngle(playerid, gHouses[i][houseA]);
				return 1;
			}
			else
			{
				FreezePlayerForTime(playerid,1000);
				SetPlayerInterior(playerid, gHouseExitInterior[gHouses[i][hKlass]-1]);
				SetPlayerVirtualWorld(playerid, i);
				AC_SetPlayerPos(playerid,892.3206,604.1663,1000.2886);
				SetPlayerFacingAngle(playerid,268.9163);
				return 1;
			}
		}
		case 9010:
		{
			if ( ! response ) return 1 ;
			if ( listitem == 0 )
			{
				new COUNT_MEMBERS = 0 ;
				if(StartWork(playerid))
				{
					stringer[0] = EOS;
					strcat(stringer,"Имя\tРанг\tТелефон\tУровень\n\n{FF8000}На работе:{"#cWHITE"}\n\n");
					foreach(i)
					{
						if (p_info[i][tMember] != p_info[playerid][tMember])continue;
						if(p_info[i][tRank]<1 || p_info[i][tMember]<1) continue;
						if (!start_work[i]) continue;
						format(stringer, 2400, "%s%s(%i)\t%s(%i)\t%i\t%i %s %s\n",stringer,NamePlayer[i],i,GetRank(p_info[i][tMember],p_info[i][tRank]),p_info[i][tRank],p_info[i][pPnumber],p_info[i][pLevel],(unix - p_info[i][pAFK] > 3) ? ("{ffff00}[AFK]{"#cWHITE"}") : (""),(p_info[i][pJailTime] > 0) ? ("{ffff00}[КПЗ]{"#cWHITE"}") : (""));
					}
					strcat(stringer,"\nНе на работе:\n\n");
					foreach(i)
					{
						if (p_info[i][tMember] != p_info[playerid][tMember])continue;
						if(p_info[i][tRank]<1 || p_info[i][tMember]<1) continue;
						if (start_work[i]) continue;
						format(stringer, 2400, "%s%s(%i)\t%s(%i)\t%i\t%i %s %s\n",stringer,NamePlayer[i],i,GetRank(p_info[i][tMember],p_info[i][tRank]),p_info[i][tRank],p_info[i][pPnumber],p_info[i][pLevel],(unix - p_info[i][pAFK] > 3) ? ("{ffff00}[AFK]{"#cWHITE"}") : (""),(p_info[i][pJailTime] > 0) ? ("{ffff00}[КПЗ]{"#cWHITE"}") : (""));
					}
					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Члены организации онлайн", stringer, "Закрыть", "");
				}
				else
				{
					stringer[0] = EOS, strcat(stringer, "Имя\t\t\t\t\tРанг\t\t\tТелефон\t\tУровень\n\n{"#cWHITE"}");
					foreach(i)
					{
						if (p_info[i][tMember] != p_info[playerid][tMember])continue;
						if(p_info[i][tRank]<1 || p_info[i][tMember]<1) continue;
						format(stringer, 2400, "%s%s(%i)\t\t\t%s(%i)\t\t%i\t\t\t%i %s %s\n",stringer,NamePlayer[i],i,GetRank(p_info[i][tMember],p_info[i][tRank]),p_info[i][tRank],p_info[i][pPnumber],p_info[i][pLevel],(unix - p_info[i][pAFK] > 3) ? ("{ffff00}[AFK]{"#cWHITE"}") : (""),(p_info[i][pJailTime] > 0) ? ("{ffff00}[КПЗ]{"#cWHITE"}") : (""));
						COUNT_MEMBERS++;
					}
					format(stringer,2400,"%s\n\nВсего: %i человек",stringer,COUNT_MEMBERS);
					ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Члены организации онлайн", stringer, "Закрыть", "");
				}
			}
			else if ( listitem == 1 )
			{
				if(m_members_timer [ playerid ] != 0) return SendClientMessage(playerid, COLOR_GREY, "Карта уже открыта");
				new members_count = 0 ;
				foreach(i)
				{
					if ( p_info[ i ][tMember] != p_info[ playerid ][tMember] || p_info[i][tMember]<1 || GetPlayerInterior ( i ) != 0 && i != playerid || GetPlayerVirtualWorld ( i ) != 0 && i != playerid ) continue ;
					if ( p_info [ i ] [ pY ] < -3000 || p_info [ i ] [ pY ] > 3000 || p_info [ i ] [ pX ] < -3000 || p_info [ i ] [ pX ] > 3000 ) continue ;

					new Float:td_pos_x, Float:td_pos_y;

					if ( p_info [ i ] [ pY ] < 0 ) td_pos_y = 253.6 + 146 * -p_info [ i ] [ pY ] / 3000 ;
					else if ( p_info [ i ] [ pY ] >= 0 ) td_pos_y = 253.6 - 151 * p_info [ i ] [ pY ] / 3000 ;
					if ( p_info [ i ] [ pX ] < 0 ) td_pos_x = 315.7 - 170 * -p_info [ i ] [ pX ] / 3000 ;
					else if ( p_info [ i ] [ pX ] >= 0 ) td_pos_x = 315.7 + 184 * p_info [ i ] [ pX ] / 3000 ;

					members_pos_td [ playerid ] [ 0 ] [ members_count ] = CreatePlayerTextDraw ( playerid, td_pos_x, td_pos_y, "hud:radar_light" ) ;
					PlayerTextDrawFont ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ], 4 ) ;
					PlayerTextDrawSetProportional ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ], 1 ) ;
					PlayerTextDrawTextSize ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ], 6.000000, 7.000000 ) ;

					new td_string [ MAX_PLAYER_NAME + 14 ] ;
					format ( td_string, sizeof ( td_string ), "~y~%s ~w~(%d)", NamePlayer [ i ], i ) ;

					members_pos_td [ playerid ] [ 1 ] [ members_count ] = CreatePlayerTextDraw ( playerid, td_pos_x + 5, td_pos_y - 5, td_string ) ;
					PlayerTextDrawFont ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 2 ) ;
					PlayerTextDrawAlignment( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 2);
					PlayerTextDrawSetProportional ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 1 ) ;
					PlayerTextDrawLetterSize ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 0.16, 0.6 ) ;
					PlayerTextDrawSetOutline ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 1);

					PlayerTextDrawShow ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ] ) ;
					PlayerTextDrawShow ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ] ) ;
					TextDrawShowForPlayer ( playerid, members_map_td ) ;

					members_count ++ ;

				}
				m_members_count [ playerid ] = members_count;
				m_members_timer [ playerid ] = SetTimerEx ( "members_update", 2500, 1, "i", playerid ) ;
				SendClientMessage ( playerid, COLOR_LIGHTRED, "Нажмите \"Esc\", чтобы закрыть карту!" ) ;
				SelectTextDraw(playerid, 0xAFAFAFAA) ;

			}
			return 1 ;
		}
		case 10098:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pLevel] < 2 && p_info[playerid][pAdmin] == 0) return SendErr(playerid, "Вам требуется 2 уровень");
					p_info[playerid][pJob] = 8;
					SendSucc(playerid,"Вы устроились на работу водителя автобуса");
				}
				case 1:
				{
					if(p_info[playerid][pLevel] < 2 && p_info[playerid][pAdmin] == 0) return SendErr(playerid, "Вам требуется 2 уровень");
					p_info[playerid][pJob] = 4;
					SendSucc(playerid,"Вы устроились на работу таксиста");
				}
				case 2:
				{
					if(p_info[playerid][pLevel] < 2 && p_info[playerid][pAdmin] == 0) return SendErr(playerid, "Вам требуется 2 уровень");
					p_info[playerid][pJob] = 2;
					SendSucc(playerid,"Вы устроились на работу механика");
					SendInf(playerid,"Посмотреть команды вы можете в /mm > Команды сервера > Работа");
				}
				case 3:
				{
					if(p_info[playerid][pLevel] < 2 && p_info[playerid][pAdmin] == 0) return SendErr(playerid, "Вам требуется 2 уровень");
					p_info[playerid][pJob] = 1;
					SendSucc(playerid,"Вы устроились на работу развозчика продуктов");
					SendInf(playerid,"Загрузить продукты вы можете в /gps > Работы > Оружейный завод");
				}
				case 4:
				{
					if(p_info[playerid][pLevel] < 2 && p_info[playerid][pAdmin] == 0) return SendErr(playerid, "Вам требуется 2 уровень");
					p_info[playerid][pJob] = 3;
					SendSucc(playerid,"Вы устроились на работу развозчика топлива");
					SendInf(playerid,"Загрузить топливо вы можете в /gps > Работы > Оружейный завод");
				}
			}
			UpdatePlayerData(playerid,"pJob", p_info[playerid][pJob]);
			return 1;
		}
		case 6622:
		{
			new id = GetPVarInt(playerid,"FreeOffer") - 1;
			if(p_info[playerid][pCash] < GetPVarInt(playerid,"FreePrice"))
			{
				SendErr(id, "У этого человека нет столько денег на руках");
				SendErr(playerid, "У Вас нет столько денег");
				return 1;
			}
			TransferMoney(id,p_info[id][pCash]+GetPVarInt(playerid,"FreePrice"),GetPVarInt(playerid,"FreePrice"),"адвокат получку получил");
			TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"FreePrice"),GetPVarInt(playerid,"FreePrice"),"заплатил адвокату");
			p_info[id][pCash] += GetPVarInt(playerid,"FreePrice");
			p_info[playerid][pCash] -= GetPVarInt(playerid,"FreePrice");
			UpdateMoney(playerid);
			UpdateMoney(id);
			//
			format(stringer, 128, "Адвокат %s выпустил вас за %d $!",NamePlayer[id], GetPVarInt(playerid,"FreePrice"));
			SendClientMessage(playerid,0x6ab1ffaa,stringer);
			//
			format(stringer, 128, "Вы выпустили %s за %d $!",NamePlayer[playerid], GetPVarInt(playerid,"FreePrice"));
			SendClientMessage(GetPVarInt(playerid,"FreeOffer") - 1,0x6ab1ffaa,stringer);
			//
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);//Тюрьма
			SetPlayerFacingAngle(playerid, 95.0636);
			p_info[playerid][pJailTime] = 0;
			UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pJailTime]);
			p_info[playerid][pMestoJail] = 0;
			UpdatePlayerData(playerid,"pMestoJail",p_info[playerid][pMestoJail]);
			SetPlayerSkin(playerid, (p_info[playerid][tMember]) ? (p_info[playerid][pModel]) : (p_info[playerid][pChar]));
			p_info[playerid][pWanted] = 0;
			UpdatePlayerData(playerid,"pWanted",p_info[playerid][pWanted]);
			SetPlayerWantedLevel(playerid, p_info[playerid][pWanted]);
			SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~g~~h~FREEDOM", 5000, 1);
			return 1;
		}
		case 9956:
		{
			if(!response) return true;
			ShowPlayerDialog(playerid,9957,DIALOG_STYLE_INPUT,"Месторасположение","Опишите ваше месторасположение", "Далее", "Отмена");
			SetPVarInt(playerid,"service_listitem", listitem);
			return true;
		}
		case 9957:
		{
			if(!response) return DeletePVar(playerid, "service_listitem");
			foreach(i)
			{
				if(playerid == i) continue;
				switch(GetPVarInt(playerid,"service_listitem")){
					case 0: if(p_info[i][pJob] != 4) continue;
					case 1: if(p_info[i][tMember] != 4) continue;
					case 2: if(p_info[i][pJob] != 2) continue;
					case 3: if(!IsACop(i)) continue;
				}
				format(stringer, 144, "Диспетчер: {ffffff}Вас вызывает {afafaf}%s{ffffff}. Чтобы принять вызов введите: {"#cORANGE"}/to %d", NamePlayer[playerid],playerid);
				SendClientMessage(i,CBLUE,stringer);
				format(stringer, 144, "Месторасположение: {ffffff}%s", inputtext);
				SendClientMessage(i,CBLUE,stringer);
			}
			SetPVarInt(playerid,"service_to", true);
			return true;
		}
		case 5455:
		{
			if(!response) return 1;
			Streamer_UpdateEx(playerid, -2331.239,-1582.520,485.700);
			AC_SetPlayerPos(playerid,-2331.5310,-1580.9639,486.7859);
			SetPlayerFacingAngle(playerid,188.0276);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			FreezePlayerForTime(playerid,800);
			return 1;
		}
		case 5454:
		{
			if(!response) return 1;
			if(listitem == 3) return pc_cmd_leaders(playerid);
			strdel(inputtext,0,strfind(inputtext,".") + 2);
			format(stringer, 64, "%s в сети:", inputtext);
			SendClientMessage(playerid,CORANGE,stringer);
			foreach(i)
			{
				if ( listitem == 3 && p_info[ i ] [ tMember ]>0){
					if( p_info[ i ] [tRank] == FractionRank[p_info[ i ] [ tMember ] - 1]){
						format(stringer,144,"%s[%d] тел. %d",NamePlayer[i],i,p_info[i][pPnumber]);
						SendClientMessage(playerid,COLOR_GREY,stringer);
						continue;
					}
				}
				if(	(p_info[i][tMember] == F_DEPJUST && p_info[i][tRank] == 5 && listitem == 0) || (p_info[i][pJob] == 4 && listitem == 1) ||
					(Casino_Flag[i][casino_crup] == 1 && listitem == 2) || (p_info[i][tMember] == 11 && listitem == 4) || (p_info[i][pJob] == 2 && listitem == 5) || (p_info[i][tMember] == 4 && listitem == 6) ){
						format(stringer,144,"%s[%d] тел. %d",NamePlayer[i],i,p_info[i][pPnumber]);
						SendClientMessage(playerid,COLOR_GREY,stringer);
				}
			}
			return 1;
		}
	case 8240:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				AC_SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				AC_SetPlayerPos(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return 1;
			}
		}
	case 8241:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				AC_SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				AC_SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return 1;
			}
		}
	case 8242:
		{
			if(response)
			{
				SetPlayerInterior(playerid,15);
				FreezePlayerForTime(playerid, 500);
				AC_SetPlayerPos(playerid,999.5983,1000.0139,1999.7999);
				SetPlayerFacingAngle(playerid, 268.4196);
				SetPlayerVirtualWorld(playerid, 1);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid,0);
				AC_SetPlayerPos(playerid,1650.2810,-1640.6709,83.7788);
				SetPlayerFacingAngle(playerid, 313.9981);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		}
	case 8243:
		{
			if(response)
			{
				SetPlayerInterior(playerid,15);
				AC_SetPlayerPos(playerid,999.5983,1000.0139,1999.7999);
				SetPlayerFacingAngle(playerid, 268.4196);
				SetPlayerVirtualWorld(playerid, 2);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid,0);
				AC_SetPlayerPos(playerid,-2047.0208,450.5458,139.7422);
				SetPlayerFacingAngle(playerid, 153.7635);
				return 1;
			}
		}
		case 9596:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					format(stringer,64,"В банке мафии: %d $", frac_money[p_info[playerid][tMember]]);
					SCM(playerid,0x6ab1ffaa,stringer);
				}
				case 1: ShowPlayerDialog(playerid,22255,DIALOG_STYLE_INPUT,"Используйте сумму","Пополнение счета банка мафии","Oк","X");
				case 2:
				{
					if(p_info[playerid][tRank] < 9) return SCM(playerid,CWHITE,"Вам не доступна данная команда.");
					ShowPlayerDialog(playerid,22256,DIALOG_STYLE_INPUT,"Используйте сумму","Снятие денег с банка мафии","Oк","X");
				}
				case 3:
				{
					format(stringer,128,"На складе мафии %d металла", frac_metall[p_info[playerid][tMember]]);
					SCM(playerid,0x6ab1ffaa,stringer);
				}
			}
			return 1;
		}
		case 26:
		{
			if(response)
			{
				stringer[0] = EOS;
				new VehicleID = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				new EngineStatus[50], DoorsStatus[50], LightsStatus[50], LimiterStatus[50];
				switch(listitem)
				{
					case 0:
					{
						if ( GetPVarInt ( playerid, "RaceCar" ) == VehicleID && !RaceStatus) return SendClientMessage(playerid,COLOR_GREY,"Вы не можете включить двигатель пока не начата гонка");
						if(engine == 0)
						{
							engine = 1;
							ToggleEngine(GetPlayerVehicleID(playerid));
							SetPlayerChatBubble(playerid, "завел(а) двигатель", CPURPLE, 5.0, 10000);
						}
						else
						{
							engine = 0;
							ToggleEngine(GetPlayerVehicleID(playerid));
							SetPlayerChatBubble(playerid, "заглушил(а) двигатель", CPURPLE, 5.0, 10000);
						}
					}
					case 1:
					{
						if(IsVehicleAir(VehicleID))
						{
							pc_cmd_lock(playerid, "");
						}
						else
						{
							if(lights == 0)
							{
								lights = 1;
								ToggleLamp(GetPlayerVehicleID(playerid));
								SetPlayerChatBubble(playerid, "включил(а) фары", CPURPLE, 5.0, 10000);
							}
							else
							{
								lights = 0;
								ToggleLamp(GetPlayerVehicleID(playerid));
								SetPlayerChatBubble(playerid, "выключил(а) фары", CPURPLE, 5.0, 10000);
							}
						}
					}
					case 2: pc_cmd_lock(playerid, "");
					case 3:
					{
						if(!GetPVarInt(playerid, "slimit"))
						{
							SetPVarInt(playerid, "slimit", 60);
							SetPlayerChatBubble(playerid, "включил(а) ограничитель", CPURPLE, 5.0, 10000);
						}
						else
						{
							DeletePVar(playerid,"slimit");
							SetPlayerChatBubble(playerid, "выключил(а) ограничитель", CPURPLE, 5.0, 10000);
						}
					}
				}
				SetVehicleParamsEx(VehicleID, engine, lights, alarm, doors, bonnet, boot, objective);
				if(engine == 1) EngineStatus = "{33AA33}Включен";
				else EngineStatus = "{FF6347}Выключен";
				if(doors == 1) DoorsStatus = "{FF6347}Закрыты";
				else DoorsStatus = "{33AA33}Открыты";
				if(lights == 1) LightsStatus = "{33AA33}Включены";
				else LightsStatus = "{FF6347}Выключены";
				if(GetPVarInt(playerid, "slimit")) LimiterStatus = "{33AA33}Включен";
				else LimiterStatus = "{FF6347}Выключен";
				if(IsVehicleAir(VehicleID))
				{
					format(stringer, 250, ""ORG"1.{"#cWHITE"} Двигатель [%s{FFFFFF}]\n"ORG"2.{"#cWHITE"} Двери [%s{FFFFFF}]", EngineStatus, DoorsStatus);
					ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffff00}Управление транспортом", stringer, "Изменить", "Выйти");
				}
				else if(IsVehicleMoto(VehicleID))
				{
					format(stringer, 250, ""ORG"1.{"#cWHITE"} Двигатель [%s{FFFFFF}]\n"ORG"2.{"#cWHITE"} Фары [%s{FFFFFF}]", EngineStatus, LightsStatus);
					ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffff00}Управление транспортом", stringer, "Изменить", "Выйти");
				}
				else
				{
					format(stringer, 250, ""ORG"1.{"#cWHITE"} Двигатель [%s{FFFFFF}]\n"ORG"2.{"#cWHITE"} Фары [%s{FFFFFF}]\n"ORG"3.{"#cWHITE"} Двери [%s{FFFFFF}]\n"ORG"4.{"#cWHITE"} Ограничитель [%s{FFFFFF}]", EngineStatus, LightsStatus, DoorsStatus, LimiterStatus);
					ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffff00}Управление транспортом", stringer, "Изменить", "Выйти");
				}
			}
		}
		case 2929:
		{
			if(!response) return 1;
			if(!p_info[playerid][pPbiskey]) return 1;
			new bouse = p_info[playerid][pPbiskey]-1;
			new put = strval(inputtext);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT,"Перевод денег на счёт бизнеса",stringer,"Ok","Отмена");
			if(put < 1 || put > (bPowerTax * 240)) return SCM(playerid, -1, "Вы вводите либо слишком маленькую сумму, либо слишком большую");
			if(p_info[playerid][pCash] < put) return SendErr(playerid,"У вас недостаточно денег наличными.");
			p_info[playerid][pCash] -= put;
			UpdateMoney(playerid);
			Business[bouse][bCheckPower] += put;
			UpdateOtherBusiness(bouse);
			format(stringer, 144, "Вы пополнили счёт для оплаты электроэнергии бизнеса на %d$", put);
			SCM(playerid, CBLUE, stringer);
			SaveBusiness(bouse);
			return 1;
		}
		case 9699:
		{///////////////////------
			if(!response) return 1;

			new count_drugs;
			if(sscanf(inputtext, "i", count_drugs)) return ShowPlayerDialog(playerid, 9699, DIALOG_STYLE_INPUT, "{ffff00}Покупка наркотиков", "{FFFFFF}Стоимость наркотиков: {7FB151}50$/грамм\n{FFFFFF}Используйте нужное количество:", "Принять", "Выйти");
			if(count_drugs < 1) return ShowPlayerDialog(playerid, 9699, DIALOG_STYLE_INPUT, "{ffff00}Покупка наркотиков", "{FFFFFF}Стоимость наркотиков: {7FB151}50$/грамм\n{FFFFFF}Используйте нужное количество:\n\n{AFAFAF}* Нельзя купить менее 1 грамма", "Принять", "Выйти");
			if(p_info[playerid][pDrugs]+count_drugs > 500) return ShowPlayerDialog(playerid, 9699, DIALOG_STYLE_INPUT, "{ffff00}Покупка наркотиков", "{FFFFFF}Стоимость наркотиков: {7FB151}50$/грамм\n{FFFFFF}Используйте нужное количество:\n\n{AFAFAF}* Нельзя носить больше 500 грамм", "Принять", "Выйти");
			if(p_info[playerid][pCash] < (count_drugs * 50)) return ShowPlayerDialog(playerid, 9699, DIALOG_STYLE_INPUT, "{ffff00}Покупка наркотиков", "{FFFFFF}Стоимость наркотиков: {7FB151}50$/грамм\n{FFFFFF}Используйте нужное количество:\n\n{AFAFAF}* У вас не достаточно денег", "Принять", "Выйти");
			TransferMoney(playerid,p_info[playerid][pCash]-(count_drugs * 50),(count_drugs * 50),"купил грамм наркотиков (9699)");
			p_info[playerid][pCash] -= (count_drugs * 50);
			p_info[playerid][pDrugs] += count_drugs;
			format(stringer, 200, "Вы купили {7FB151}%d {"#cWHITE"}грамм наркотиков за {7FB151}%d${"#cWHITE"}. (С собой %d из 500 грамм)", count_drugs, (count_drugs * 50), p_info[playerid][pDrugs]);
			SendClientMessage(playerid, CWHITE, stringer);
			UpdateMoney(playerid);
			UpdatePlayerData(playerid, "pDrugs", p_info[playerid][pDrugs]);
			return 1;
		}
		case 8900:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if( p_info[playerid][pHouse] == 0 ) return SCM(playerid, COLOR_GREY, "У вас нет дома");
					ShowPlayerDialog(playerid, 9521, 1, "{"#cGREEN"}Оплата за дом","{"#cWHITE"}Используйте количество дней на которое\nжелаете оплатить квартплату за дом","Принять", "Выход");
					return 1;
				}
				case 1:
				{
					if(0 == p_info[playerid][pTempKey]) return SCM(playerid, CWHITE, "У вас нет дома");
					ShowPlayerDialog(playerid,dRentOplata,DIALOG_STYLE_LIST,"{ffff00}Банкомат","- на 3 дня\n- на 5 дней\n- на 7 дней\n- на 10 дней","Перевести", "Выход");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,8907,DIALOG_STYLE_INPUT,"{ffff00}Банкомат","{"#cWHITE"}Пополнение мобильного счёта\nИспользуйте сумму от 500$ до 500.000$","Ввести","Закрыть");
				}
				case 3:
				{
					if(p_info[playerid][pPbiskey] == 0) return SendErr(playerid,"У вас нет бизнеса");
					ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT,"Перевод на счёт бизнеса","Используйте сумму, которую вы хотите перести","Ок","Отмена");
				}
			}
			return 1;
		}
		case 8907:
		{
			if(!response) return pc_cmd_atm(playerid);
			new sum;
			if(sscanf(inputtext,"i",sum)) return ShowPlayerDialog(playerid,8907,DIALOG_STYLE_INPUT,"{ffff00}Банкомат","{"#cWHITE"}Пополнение мобильного счёта\nИспользуйте сумму от 500$ до 500.000$","Ввести","Закрыть");
			if(sum < 500 || sum > 500000) return ShowPlayerDialog(playerid,8907,DIALOG_STYLE_INPUT,"{ffff00}Банкомат","{"#cWHITE"}Пополнение мобильного счёта\nИспользуйте сумму от 500$ до 500.000$","Ввести","Закрыть");
			if(p_info[playerid][pCash] < sum) return SendClientMessage(playerid,CGRAY,"У вас недостаточно средств");
			TransferMoney(playerid,p_info[playerid][pCash]-sum,sum,"пополнил мобильный счёт (8907)");
			p_info[playerid][pCash] -= sum;
			UpdateMoney(playerid);
			p_info[playerid][pMobile] += sum;
			UpdatePlayerData(playerid,"pMobile",p_info[playerid][pMobile]);
			SendClientMessage(playerid,CGREEN,"Вы пополнили свой мобильный счёт");
			return 1;
		}
		case dRentOplata:
		{
			if(!response) return 1;
			new tempkey = p_info[playerid][pTempKey];
			new sum = 0;
			switch(listitem)
			{
				case 0: sum = (gHouses[tempkey][RentAllPlata] * 24) / 3  ;
				case 1: sum = (gHouses[tempkey][RentAllPlata] * 24) / 5  ;
				case 2: sum = (gHouses[tempkey][RentAllPlata] * 24) / 7  ;
				case 3: sum = (gHouses[tempkey][RentAllPlata] * 24) / 10 ;
			}
			if(!sum)
			{
				format(stringer,128,"Ошибка #RentOplata (%d)",sum);
				SendClientMessage(playerid,COLOR_GREY,stringer);
			}
			if(p_info[playerid][pCash] < sum) return SendClientMessage(playerid,COLOR_GREY,"У вас не достаточно денег.");

			for(new i = 0; i < 5; i++)
			{
				if(!strcmp(gHouseArendator[tempkey][i],NamePlayer[playerid]))
				{
					gHouses[tempkey][RentPlata][i] += sum;
					format(stringer,128,"Вы успешно оплатили аренду на {"#cWHITE"}$%d",gHouses[tempkey][RentPlata][i]);
					SendClientMessage(playerid,CORANGE,stringer);
					break;
				}
			}
			format(stringer,128,"В час снимает по {"#cWHITE"}$%d",gHouses[tempkey][RentAllPlata]);
			SendClientMessage(playerid,CORANGE,stringer);
			TransferMoney(playerid,p_info[playerid][pCash]-sum,sum,"оплата аренды");
			p_info[playerid][pCash] -= sum;
			UpdateMoney(playerid);
			SaveHome(tempkey);
			return 1;
		}
		case 8905: if(response) return ShowATMMenu(playerid);
		case 9521:
		{
			if(!response) return 1;
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,COLOR_GREY,"Количество дней введено неверно");
				ShowPlayerDialog(playerid, 9521, 1, "{"#cGREEN"}Оплата за дом","{"#cWHITE"}Используйте количество дней на которое\nжелаете оплатить квартплату за дом","Принять", "Выход");
				return 1;
			}
			new odays = strval(inputtext);
			new houseid = p_info[playerid][pHouse] ;
			new subsidia = floatround(gHouses[houseid][hValue] * 0.005);
			if(gHouses[houseid][houseImprove][3]) subsidia = subsidia / 2;
			new oplata = subsidia * odays;
			if(odays < 1 || odays > 10) return SendClientMessage(playerid,COLOR_GREY,"От 1 до 10");
			else if(oplata > p_info[playerid][pCash]) return SendClientMessage(playerid,-1,"У вас не хватает денег наличными");
			else if(gHouses[houseid][hDays] + odays > 10) return SendClientMessage(playerid, -1,"Максимальное количество оплаченных дней 10");

			TransferMoney(playerid,p_info[playerid][pCash]-oplata,oplata,"оплатил дом");
			p_info[playerid][pCash] -= oplata;
			UpdateMoney(playerid);
			gHouses[houseid][hDays] += odays;
			SaveHome(houseid);
			SendClientMessage(playerid, CGREEN, "Вы успешно продлили аренду недвижимости. Спасибо!");
			return 1;
		}
		case dRentMenu:
		{
			if(!response) return 1;
			new tempkey = p_info[playerid][pTempKey];
			switch(listitem)
			{
				case 0:
				{
					for(new i = 0; i < 5; i++)
					{
						if(!strcmp(gHouseArendator[tempkey][i],NamePlayer[playerid]))
						{
							strmid(gHouseArendator[tempkey][i],"The State",0,strlen("The State"),31);
							break;
						}
					}
					SendClientMessage(playerid,COLOR_GREY,"Вы выселились из арендуемого дома.");
					p_info[playerid][pTempKey] = 0;
					UpdatePlayerData(playerid,"pTempKey",p_info[playerid][pTempKey]);
					if(caridhouse[playerid][0])DestroyVehicleOP(caridhouse[playerid][0]),caridhouse[playerid][0]=0;
					if(caridhouse[playerid][1])DestroyVehicleOP(caridhouse[playerid][1]),caridhouse[playerid][1]=0;
					SpawnPlayer(playerid);
				}
				case 1:
				{
					for(new i = 0; i < 5; i++)
					{
						if(!strcmp(gHouseArendator[tempkey][i],NamePlayer[playerid]))
						{
							format(stringer,200,"На счету аренды: {"#cWHITE"}$%d",gHouses[tempkey][RentPlata][i]);
							SendClientMessage(playerid,CORANGE,stringer);
							break;
						}
					}
				}
			}
			SaveHome(tempkey);
			return 1;
		}
	case 5301:
		{
			if(!response) return 1;
			format(stringer, sizeof(stringer), "{"#cORANGE"}[ 1 ]{"#cWHITE"}. Открыть или закрыть дом\n{"#cORANGE"}[ 2 ]{"#cWHITE"}. Продать дом\n{"#cORANGE"}[ 3 ]{"#cWHITE"}. Восстановить здоровье (Осталось: %d аптечек)\n{"#cORANGE"}[ 4 ]{"#cWHITE"}. Улучшения\n{"#cORANGE"}[ 5 ]{"#cWHITE"}. Ремонт\n{"#cORANGE"}[ 6 ]{"#cWHITE"}. Арендаторы\n{"#cORANGE"}[ 7 ]{"#cWHITE"}. Аренда %s\n{"#cORANGE"}[ 8 ]{"#cWHITE"}. Управление мебелью\n{"#cORANGE"}[ 9 ]{"#cWHITE"}. Отвязка семьи от дома",
			gHouses[ p_info[playerid][pHouse] ][hHel],(gHouses[ p_info[playerid][pHouse] ][gRentStatus]) ? ("{"#cORANGE"}[Включена]") : ("{"#cORANGE"}[Отключена]"));
			ShowPlayerDialog(playerid, 5300, DIALOG_STYLE_LIST, "Дом", stringer, "Выбрать", "Закрыть");
		}
	case 5300:
		{
			new house = p_info[playerid][pHouse] ;
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					gHouses[house][hLock] = (gHouses[house][hLock]) ? (0) : (1);
					GameTextForPlayer(playerid, (gHouses[house][hLock]) ? ("~r~~h~CLOSE") : ("~g~~h~OPEN"), 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					SaveHome(house);
					return 1;
				}
				case 1: return ShowPlayerDialog(playerid,5032,DIALOG_STYLE_MSGBOX,"Продажа имущества","Внимание! Вы собираетесь продать Квартиру\n\nПродать Квартиру?\n{"#cRED"}ЕСЛИ вы продаете дом, то получается только 10% ПРОЦЕНТОВ от суммы!","Да","Нет");
				//case 2: //return cmd::healm(playerid,"");
				case 3:
				{
					stringer[0] = EOS;
					for(new i;i<4;i++)
					{
						new c[7];
						if(gHouses[house][houseImprove][i]) c = ""#cGREEN"";
						else if(!i || gHouses[house][houseImprove][i-1]) c = "ffffff";
						else c = ""#cGRAY"";
						format(stringer,512,"%s{"#cORANGE"}[ %d ]{ffffff}.\t{%s}%s\t{"#cBLUE"}%d $\n",stringer,i+1,c,gHouseImproveName[i],gHouseImprovePrice[i]);
					}
					ShowPlayerDialog(playerid,5466,DIALOG_STYLE_TABLIST,"Улучшение",stringer,"Купить","Отмена");
				}
				case 4:
				{
					new klass=gHouses[house][hKlass]-1,Cremont [8];
					if(GetPlayerVirtualWorld(playerid) != p_info[playerid][pHouse]) return SendErr(playerid, "Вы не дома");
					stringer[0] = EOS;
					for(new i = 0; i < 4; i++)
					{
						if(klass == i)
						{
							Cremont = ""#cGREEN"";
						}
						else Cremont = "ffffff";

						format(stringer,512,"%s{"#cORANGE"}[ %d ]{ffffff}. {%s}%s\n",stringer,i+1,Cremont,gHousesClassName[i]);
					}//
					ShowPlayerDialog(playerid,dRemont,DIALOG_STYLE_LIST,"Ремонт",stringer,"Выбрать","Закрыть");
				}
				case 5:
				{//
					stringer = "Номер\tАрендатор\tТип\n";
					for(new i = 0; i < 5; i++)
					{
						if(!strcmp(gHouseArendator[house][i],"The State"))
						{
							format(stringer,1000,"%s[%i] {"#cWHITE"}Арендатор:\t{"#cORANGE"}[Место свободно]\n", stringer,i+1);
						}
						else format(stringer,1000,"%s{"#cORANGE"}[%i] {"#cWHITE"}Арендатор:\t{"#cORANGE"}[%s]\t[%s]\n",stringer,i+1,gHouseArendator[house][i],(!gHouses[house][RentStatus][i]) ?  ("Арендатор") : ("Житель"));
					}
					ShowPlayerDialog(playerid,dArendator,DIALOG_STYLE_TABLIST_HEADERS,"Управление арендаторами",stringer,"Выбрать","Закрыть");
				}
				case 6:
				{
					if(gHouses[house][gRentStatus])
					{
						gHouses[house][gRentStatus] = 0;
						SendClientMessage(playerid,CORANGE,"Аренда {"#cWHITE"}отключена");
						SaveHome(house);
						return 1;
					}
					ShowPlayerDialog(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT,"Управление арендаторами","{"#cWHITE"}Установите {"#cORANGE"}плату {"#cWHITE"}за аренду вашего дома\nПримечание:\n- Сумма должна быть от {"#cORANGE"}$5000 {"#cWHITE"}до {"#cORANGE"}$500000 {"#cWHITE"}в час","Далее","Отмена");
					return 1;
				}
				case 7:
				{
					if(GetPlayerVirtualWorld(playerid) != p_info[playerid][pHouse]) return SendErr(playerid, "Вы не дома");
					SendClientMessage(playerid,CGRAY,"Вы также можете использовать команду {"#cBLUE"}/hfurn");
					pc_cmd_hfurn(playerid);
				}
				case 8:
				{
					if(!strlen(gHouses[house][hFamilyCode])) return SendErr(playerid,"К вашему дому не привязана семья");
					gHouses[house][hFamilyCode][0] = EOS;
					gHouses[house][hFamily]=0;
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 512, "UPDATE `housetest` SET `hFamily` = '%d', `hFamilyCode` = '%s' WHERE `hID` = '%d'", gHouses[house][hFamily], gHouses[house][hFamilyCode], gHouses[house][hID]);
					mysql_pquery(connects, mysql_query_string, "", "");
					SendSucc(playerid,"Вы отвязяли семью от дома.");
				}
			}
		}
		case dRentSelectPlata:
		{
			if(!response) return 1;
			new house = p_info[playerid][pHouse] ;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT,"Управление арендаторами","{"#cWHITE"}Установите {"#cORANGE"}плату {"#cWHITE"}за аренду вашего дома\nПримечание:\n- Сумма должна быть от {"#cORANGE"}$20000 {"#cWHITE"}до {"#cORANGE"}$500000 {"#cWHITE"}в час","Далее","Отмена");
			if(isNumeric(inputtext)) return ShowPlayerDialog(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT,"Управление арендаторами","{"#cWHITE"}Установите {"#cORANGE"}плату {"#cWHITE"}за аренду вашего дома\nПримечание:\n- Сумма должна быть от {"#cORANGE"}$20000 {"#cWHITE"}до {"#cORANGE"}$500000 {"#cWHITE"}в час","Далее","Отмена");
			if(strval(inputtext) < 500 || strval(inputtext) > 500000)  return ShowPlayerDialog(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT,"Управление арендаторами","{"#cWHITE"}Установите {"#cORANGE"}плату {"#cWHITE"}за аренду вашего дома\nПримечание:\n- Сумма должна быть от {"#cORANGE"}$20000 {"#cWHITE"}до {"#cORANGE"}$500000 {"#cWHITE"}в час","Далее","Отмена");
			gHouses[house][RentAllPlata] = strval(inputtext);
			format(stringer,128,"Плата за аренду вашего дома: {"#cWHITE"}%d",gHouses[house][RentAllPlata]);
			SendClientMessage(playerid,CORANGE,stringer);
			gHouses[house][gRentStatus] = 1;
			SendClientMessage(playerid,CORANGE,"Аренда {"#cWHITE"}включена");
			SaveHome(house);
			return 1;
		}
		case dArendator:
		{
			if(!response) return 1;
			new house = p_info[playerid][pHouse] ;
			if(!strcmp(gHouseArendator[house][listitem],"The State"))
			{
				ShowPlayerDialog(playerid,dArendatorAction,DIALOG_STYLE_INPUT,"Управление арендаторами","{"#cWHITE"}Используйте {"#cORANGE"}ник игрока{"#cWHITE"}\n- Он должен быть в сети\n- И должен находиться рядом с Вами","Выбрать","Закрыть");
			}
			else
			{
				if(!gHouses[house][RentStatus][listitem])
				{
					ShowPlayerDialog(playerid,dArendatorSettings,DIALOG_STYLE_LIST,"Управление арендаторами","{"#cORANGE"}[ 1 ]{"#cWHITE"}. Выселить арендатора\n{"#cORANGE"}[ 2 ]{"#cWHITE"}. Изменить тип арендатора\n{"#cORANGE"}[ 3 ]{"#cWHITE"}. Посмотреть счет арендатора","Выбрать","Закрыть");
				}
				else
				{
					ShowPlayerDialog(playerid,dZhitelSettings,DIALOG_STYLE_LIST,"Управление арендаторами","{"#cORANGE"}[ 1 ]{"#cWHITE"}. Выселить жители\n{"#cORANGE"}[ 2 ]{"#cWHITE"}. Изменить тип жителя","Выбрать","Закрыть");
				}
			}
			SetPVarInt(playerid,"arenda_listitem",listitem+1);
			return 1;
		}
		case dArendatorSettings:
		{
			if(!response) return 1;
			new house = p_info[playerid][pHouse] ;
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;
			switch(listitem)
			{
				case 0:
				{
					mysql_query_string[0] = EOS;
					format(stringer, 128, "Вы выселили арендатора из комнаты номер {"#cWHITE"}%i", id_rent+1);
					SendClientMessage(playerid,CORANGE,stringer);
					new bool:check_online = false;
					foreach(i)
					{
						if(!strcmp(gHouseArendator[house][id_rent],NamePlayer[i]))
						{
							UpdatePlayerData(i,"pTempKey",0);
							p_info[i][pTempKey] = 0;
							if(caridhouse[i][0])DestroyVehicleOP(caridhouse[i][0]),caridhouse[i][0]=0;
							if(caridhouse[i][1])DestroyVehicleOP(caridhouse[i][1]),caridhouse[i][1]=0;
							SendClientMessage(i,COLOR_GREY,"Владелец выселил Вас из дома");
							check_online = true;
							break;
						}
					}
					if(!check_online)
					{
						format(mysql_query_string,128,"UPDATE `accounts` SET `pTempKey` = '0' WHERE `tName` = '%s' LIMIT 1",gHouseArendator[house][id_rent]);
						mysql_pquery(connects, mysql_query_string, "", "");
					}
					strmid(gHouseArendator[house][id_rent],"The State",0,strlen("The State"),31);
				}
				case 1:
				{
					format(stringer, 128, "Вы изменили тип {"#cWHITE"}арендатора{"#cORANGE"} комнаты номер {"#cWHITE"}%i{"#cORANGE"} на тип {"#cWHITE"}житель",id_rent+1);
					SendClientMessage(playerid,CORANGE,stringer);
					gHouses[house][RentStatus][id_rent] = 1;
				}
				case 2:
				{
					format(stringer,128,"На счету у арендатора: {"#cWHITE"}$%d",gHouses[house][RentPlata][id_rent]);
					SendClientMessage(playerid,CORANGE,stringer);
				}
			}
			SaveHome(house);
			return 1;
		}
		case dZhitelSettings:
		{
			if(!response) return 1;
			new house = p_info[playerid][pHouse] ;
			new id_rent = GetPVarInt(playerid,"arenda_listitem") - 1;
			mysql_query_string[0] = EOS;
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 128, "Вы выселили жителя из комнаты номер {"#cWHITE"}%i", id_rent+1);
					SendClientMessage(playerid,CORANGE,stringer);
					new bool:check_online = false;
					foreach(i)
					{
						if(!strcmp(gHouseArendator[house][id_rent],NamePlayer[i]))
						{
							UpdatePlayerData(i,"pTempKey",0);
							p_info[i][pTempKey] = 0;
							if(caridhouse[i][0])DestroyVehicleOP(caridhouse[i][0]),caridhouse[i][0]=0;
							if(caridhouse[i][1])DestroyVehicleOP(caridhouse[i][1]),caridhouse[i][1]=0;
							SendClientMessage(i,COLOR_GREY,"Владелец выселил Вас из дома");
							check_online = true;
							break;
						}
					}
					if(!check_online)
					{
						format(mysql_query_string,128,"UPDATE `accounts` SET `pTempKey` = '0' WHERE `tName` = '%s' LIMIT 1",gHouseArendator[house][id_rent]);
						mysql_pquery(connects, mysql_query_string, "", "");
					}
					strmid(gHouseArendator[house][id_rent],"The State",0,strlen("The State"),31);
				}
				case 1:
				{
					format(stringer, 128, "Вы изменили тип {"#cWHITE"}жителя{"#cORANGE"} комнаты номер {"#cWHITE"}%i{"#cORANGE"} на тип {"#cWHITE"}арендатора",id_rent+1);
					SendClientMessage(playerid,CORANGE,stringer);
					gHouses[house][RentStatus][id_rent] = 1;
				}
			}

			SaveHome(house);

			return 1;
		}
		case dArendatorAction:
		{
			if(!response) return 1;
			new house = p_info[playerid][pHouse] ;
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;
			new bool:check_online = false;

			if(!strlen(inputtext)) return 1;

			foreach(i)
			{
				if(!strcmp(NamePlayer[i],inputtext,true))
				{
					if(p_info[i][pTempKey] > 0 || p_info[i][pHouse] > 0)  return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть дом.");
					if(!IsPlayerStream(5.0, playerid, i)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
					UpdatePlayerData(i,"pTempKey",house);
					p_info[i][pTempKey] = house;
					UpdateTempVehicle(i,1);
					UpdateTempVehicle(i,2);
					SendClientMessage(i,CORANGE,"Вас прописали в доме, используйте: {"#cWHITE"}/hmenu");
					SendClientMessage(i,CORANGE,"Управление автомобилем: {"#cWHITE"}/fixcar {"#cORANGE"}и {"#cWHITE"}/lock");
					check_online=true;
					break;
				}
			}
			if(!check_online) return SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");//
			strmid(gHouseArendator[house][id_rent],inputtext,0,strlen(inputtext),31);
			format(stringer,144,"Вы добавили нового жителя: {"#cWHITE"}%s{"#cORANGE"} в комнату номер {"#cWHITE"}%i",gHouseArendator[house][id_rent],id_rent+1);
			SendClientMessage(playerid,CORANGE,stringer);
			ShowPlayerDialog(playerid,dArendatorType,DIALOG_STYLE_MSGBOX,"Управление арендаторами","{"#cWHITE"}Выберите {"#cORANGE"}тип","Житель","Арендатор");
			SaveHome(house);
			return 1;
		}
		case dArendatorType:
		{
			new house = p_info[playerid][pHouse] ;
			gHouses[house][RentStatus][GetPVarInt(playerid,"arenda_listitem") - 1] = response;
			SendClientMessage(playerid,CORANGE,(!response) ? ("Тип: {"#cWHITE"}Арендатор") : ("Тип: {"#cWHITE"}Житель"));
			DeletePVar(playerid,"arenda_listitem");
			SaveHome(house);
			return 1;
		}
		case 9090:
		{
			if(!response) return 1;
			new price,name[24];
			switch(listitem)
			{
				case 0: price = 200, strcat(name,"хот-дог"),SetPlayerAttachedObject(playerid,0,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
				case 1: price = 400, strcat(name,"бургер"),SetPlayerAttachedObject(playerid,0,2214,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
				case 2: price = 600, strcat(name,"пиццу"),SetPlayerAttachedObject(playerid,0,2220,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			}
			if(p_info[playerid][pCash] < price) return SendErr(playerid,"У вас не достаточно денег наличными");
			TransferMoney(playerid,p_info[playerid][pCash]-price,price,"взял из холодильника");
			p_info[playerid][pCash] -= price;
			UpdateMoney(playerid);
			if(listitem) SetPlayerSpecialAction(playerid, 25);
			format(stringer,128,"взял(а) %s из холодильника",name);
			MeAction(playerid,stringer);
			SetPVarInt(playerid, "burger", listitem+1);
			SCM(playerid,CORANGE,"Чтобы съесть напишите {"#cWHITE"}/eat");
			return 1;
		}
		case dRemont:
		{
			if(!response) return 1;
			new house = p_info[playerid][pHouse] ;
			if(( gHouses[house][hKlass]-1 ) == listitem)
			{
				stringer[0] = EOS;
				for(new i = 0; i < 4; i++)
				{
					format(stringer,240,"%s{"#cORANGE"}[ %d ]{ffffff}.\t%s%s\n",stringer,i+1,(gHouses[house][hKlass]==(i+1)) ? ("{"#cGREEN"}") : ("{ffffff}"),gHousesClassName[i]);
				}
				ShowPlayerDialog(playerid,dRemont,DIALOG_STYLE_LIST,"Ремонт",stringer,"Выбрать","Закрыть");
				SendClientMessage(playerid,COLOR_GREY,"Ошибка. На данный момент у вас интерьер этого класса.");
				return 1;
			}

			SetPVarInt(playerid,"listitem_remont",listitem + 1);
			SendClientMessage(playerid,CBLUE,"Вы были телепортированы в ваш интерьер для осмотра.");
			SendClientMessage(playerid,CBLUE,"Чтобы купить этот интерьер Используйте {"#cWHITE"}/buyinterior{33AAFF} и выберите {"#cWHITE"}'Да'{33AAFF},иначе {"#cWHITE"}'Нет'");

			SetPlayerInterior(playerid,gHouseExitInterior[listitem]);
			AC_SetPlayerPos(playerid,	gHouseExitInteriorPos[listitem][0]+(1.5 * floatsin(-gHouseExitInteriorPos[listitem][3], degrees)),
										gHouseExitInteriorPos[listitem][1]+(1.5 * floatcos(-gHouseExitInteriorPos[listitem][3], degrees)),gHouseExitInteriorPos[listitem][2]);
			SetPlayerFacingAngle(playerid,gHouseExitInteriorPos[listitem][3]);
			return 1;
		}
		case dBuyInterior:
		{
			new house = p_info[playerid][pHouse] ;

			if(response)
			{
				new isitem=GetPVarInt(playerid,"listitem_remont");
				gHouses[house][hKlass] = isitem ;

				mysql_query_string[0] = EOS;
				format(mysql_query_string,300,"UPDATE `housetest` SET `hDiscript` = '%d' WHERE `hID` = '%d' LIMIT 1",isitem,gHouses[house][hID]);
				mysql_pquery(connects, mysql_query_string, "", "");

				SendClientMessage(playerid,CBLUE,"Поздравляю! Вы приобрели новый интерьер для вашего дома.");
			}
			SpawnPlayer(playerid);
			DeletePVar(playerid,"listitem_remont");
			return 1;
		}
		case 137:
		{
			if(!response) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!vehicleid) return 0;
			if(gVehicles[vehicleid-1][skiing])
			{
				new Float:X,Float:Y,Float:Z;
				GetVehiclePos(vehicleid, X,Y,Z);
				AC_SetPlayerPos(playerid, X,Y,Z+0.9);
				DestroyVehicleOP(vehicleid);
			}
			countsport--;
			format(stringer, 90, "Лыжи в прокате: %d/20",countsport);
			SetDynamicObjectMaterialText(textsport[1],  0,stringer, 130, "Arial", 34, 1, -1, 0, 1);
			SendClientMessage(playerid,0xFFA500FF,"{ffff00}Информация: {FFFFFF}Мы забрали у вас полный {ffff00}комплект {FFFFFF}спортивную одежду, {ffff00}лыжи {FFFFFF}шлем...");
			SendClientMessage(playerid,0xFFA500FF,"{ffff00}Информация: {FFFFFF}Удачной вам игры на {ffff00}"PROJECT_NAME_SHORT);
			return 1;
		}
		case 136:
		{
			if(!response) return 1;
			if(countsport >= 20) return SendErr(playerid, "Лыжи все заняты");
			/*if(p_info[playerid][pLevel] > 10)
			{
				if(p_info[playerid][pCash] < 150000) return SendClientMessage(playerid,COLOR_GREY,"Необходимо 150000 $!");
				GiveMoney(playerid, -150000);
				kazna+=150000;
				GameTextForPlayer(playerid,"~r~-150000$",3000,1);
			}
			else
			{
				if(p_info[playerid][pCash] < 50000) return SendClientMessage(playerid,COLOR_GREY,"Необходимо 50000 $!");
				GiveMoney(playerid, -50000);
				kazna+=50000;
				GameTextForPlayer(playerid,"~r~-50000$",3000,1);
			}*/
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			new vehicleid = CreateVehicleOP(441, X,Y,Z, 0.0, 4, 1, 600_000);
			AC_LinkVehicleToInterior(vehicleid, 1);
			AC_PutPlayerInVehicle(playerid, vehicleid, 0);
			print("create vehicle between swoom");
			//
			gVehicles[vehicleid-1][skiing] = true;
			//
			if(gAttachedObjectToVehicle[vehicleid-1][0] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][0]=CreateDynamicObject(1897,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][1] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][1]=CreateDynamicObject(1897,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][2] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][2]=CreateDynamicObject(2905,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][3] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][3]=CreateDynamicObject(2905,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][4] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][4]=CreateDynamicObject(2907,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][5] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][5]=CreateDynamicObject(2906,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][6] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][6]=CreateDynamicObject(2906,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][7] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][7]=CreateDynamicObject(18977,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][8] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][8]=CreateDynamicObject(3004,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][9] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][9]=CreateDynamicObject(3004,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][10] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][10]=CreateDynamicObject(1310,0,0,-1000,0,0,0, -1, -1, -1, 300.0, 300.0);
			//
			if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][0], 0, 3881, "apsecurity_sfxrf", "leather_seat_256", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][1] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][1], 0, 3881, "apsecurity_sfxrf", "leather_seat_256", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][2] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][2], 0, 2819, "gb_bedroomclths01", "GB_clothesbed04", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][3] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][3], 0, 2819, "gb_bedroomclths01", "GB_clothesbed04", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][4] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][4], 0, 2819, "gb_bedroomclths01", "GB_clothesbed02", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][5] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][5], 0, 2381, "cloth_trackies", "trackTrblue", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][6] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][6], 0, 2381, "cloth_trackies", "trackTrblue", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][7] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][7], 0, 3881, "apsecurity_sfxrf", "leather_seat_256", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][8] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][8], 0, 18049, "ammu_twofloor", "gun_ceiling2", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][9] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][9], 0, 18049, "ammu_twofloor", "gun_ceiling2", 0);
			if(gAttachedObjectToVehicle[vehicleid-1][10] != INVALID_OBJECT) SetDynamicObjectMaterial(gAttachedObjectToVehicle[vehicleid-1][10], 0, 972, "tunnel", "panlantic_128", 0);
			//
			if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][0], vehicleid, 0.109999,0.000000,-0.210000,90.000114,-0.000000,0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][1] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][1], vehicleid, -0.129999,0.000000,-0.210000,90.000114,-0.000000,0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][2] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][2], vehicleid, -0.099999,0.000000,0.329999,-90.000114,87.480110,0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][3] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][3], vehicleid, 0.100000,0.000000,0.329999,-90.000114,87.480110,0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][4] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][4], vehicleid, -0.029999,-0.039999,1.059999,-90.000114,0.000000,0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][5] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][5], vehicleid, 0.260000,0.009999,1.159999,-49.680049,-46.800045,-54.720058);
			if(gAttachedObjectToVehicle[vehicleid-1][6] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][6], vehicleid, -0.270000,0.029999,1.149999,-49.680049,212.400314,39.240032);
			if(gAttachedObjectToVehicle[vehicleid-1][7] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][7], vehicleid, 0.009999,-0.039999,1.579998,-0.000000,0.000000,90.000114);
			if(gAttachedObjectToVehicle[vehicleid-1][8] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][8], vehicleid, 0.369999,-0.499999,-0.319999,59.400066,-0.000000,-0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][9] != INVALID_OBJECT)  AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][9], vehicleid, -0.359999,-0.499999,-0.319999,59.400066,-0.000000,-0.000000);
			if(gAttachedObjectToVehicle[vehicleid-1][10] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][10], vehicleid, 0.009999,-0.170000,0.999999,-0.000000,-0.000000,-0.000003);
			//
			SendClientMessage(playerid,0xffa500FF,"Информация: {FFFFFF}Вы взяли на прокат {ffff00}лыжный комплект {FFFFFF}спортивную одежду, {ffff00}лыжи {FFFFFF}шлем...");
			SendClientMessage(playerid,0xffa500FF,"Информация: {FFFFFF}Просим вас не покидать {ffff00}Зону{FFFFFF}- отдыха иначе, {ffff00}вам {FFFFFF}присвоют штраф в виде {ffff00}600000 {FFFFFF}$");
			SendClientMessage(playerid,0xffa500FF,"Информация: {FFFFFF}Что-бы вернуть лыжи {ffff00}обратно {FFFFFF}нажмите клавишу {ffff00}`F`.");
			SendClientMessage(playerid,0xffa500FF,"Информация: {FFFFFF}Удачной вам игры на {ffff00}"PROJECT_NAME_SHORT);
			//GetVehicleParamsEx(tookfaggio[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
			//SetVehicleParamsEx(tookfaggio[playerid],true,false,alarm,doors,bonnet,boot,objective);
			AC_SetVehiclePos(vehicleid,-2337.9688,-1658.9425,482.9138);
			AC_SetVehicleZAngle(vehicleid, 207.5115);
			countsport++;
			format(stringer, 90, "Лыжи в прокате: %d/20",countsport);
			SetDynamicObjectMaterialText(textsport[1],  0,stringer, 130, "Arial", 34, 1, -1, 0, 1);
			//Fuell[tookfaggio[playerid]] = 110;
			return 1;
		}
		case 5466:
		{
			if(!response) return pc_cmd_hmenu(playerid);
			new houseid = p_info[playerid][pHouse] ;
			if(gHouses[houseid][houseImprove][listitem])
			{
				SendClientMessage(playerid,CGREEN,"У Вас уже установлено это улучшение");
			}
			else if((!listitem && !gHouses[houseid][houseImprove][listitem]) || (gHouses[houseid][houseImprove][listitem-1] && !gHouses[houseid][houseImprove][listitem]))
			{
				format(stringer, 256,"{"#cWHITE"}Вы хотите купить улучшение: {"#cORANGE"}\"%s\"{"#cWHITE"}?\nОно обойдется Вам в {"#cRED"}$%d",gHouseImproveName[listitem],gHouseImprovePrice[listitem]);
				ShowPlayerDialog(playerid,5467,0,"Управление домом",stringer,"Да","Нет");
				SetPVarInt(playerid,"improveid",listitem);

				return 1;
			}
			else SendClientMessage(playerid,COLOR_GREY,"Это улучшение еще не доступно Вам");
			format(stringer, 350, "{"#cORANGE"}[ 1 ]{"#cWHITE"}. Открыть или закрыть дом\n{"#cORANGE"}[ 2 ]{"#cWHITE"}. Продать дом\n{"#cORANGE"}[ 3 ]{"#cWHITE"}. Восстановить здоровье (Осталось: %d аптечек)\n{"#cORANGE"}[ 4 ]{"#cWHITE"}. Улучшения\n{"#cORANGE"}[ 5 ]{"#cWHITE"}. Ремонт\n{"#cORANGE"}[ 6 ]{"#cWHITE"}. Арендаторы\n{"#cORANGE"}[ 7 ]{"#cWHITE"}. Аренда %s",
			gHouses[ p_info[playerid][pHouse] ][hHel],(gHouses[ p_info[playerid][pHouse] ][gRentStatus]) ? ("{"#cORANGE"}[Включена]") : ("{"#cORANGE"}[Отключена]"));
			ShowPlayerDialog(playerid, 5300, DIALOG_STYLE_LIST, "Дом", stringer, "Выбрать", "Закрыть");
			return 1;
		}
		case 5467:
		{
			if(!response) return 1;
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			new price = gHouseImprovePrice[improveid];
			if(p_info[playerid][pCash] < price) return SendClientMessage(playerid,COLOR_GREY,"У Вас не достаточно денег");
			new houseid = p_info[playerid][pHouse] ;
			//new klass = gHouses[houseid][hKlass]-1;
			gHouses[houseid][houseImprove][improveid] = 1;
			SaveImprove(houseid);
			TransferMoney(playerid,p_info[playerid][pCash]-price,price,"купил улучшения");
			p_info[playerid][pCash] -= price;
			/*if(improveid < 3)
			{
				CreateDynamicObject(gHouseImproveModelid[improveid],gHouseImproveItem[improveid][klass][0],gHouseImproveItem[improveid][klass][1],gHouseImproveItem[improveid][klass][2],gHouseImproveItem[improveid][klass][3],gHouseImproveItem[improveid][klass][4],gHouseImproveItem[improveid][klass][5],houseid,-1, -1, 300.0, 300.0);
				CreateDynamicCP(gHouseImproveItem[improveid][klass][0]+(1.0 * floatsin(-gHouseImproveItem[improveid][klass][6], degrees)),gHouseImproveItem[improveid][klass][1]+(1.0 * floatcos(-gHouseImproveItem[improveid][klass][6], degrees)),gHouseImproveItem[improveid][klass][2],1.0,houseid);
			}*/
			UpdateMoney(playerid);
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы купили улучшение для дома");
			if(improveid == 0)
			{
				SendClientMessage(playerid,CINFO,"Код сейфа по умолчанию: \"{"#cGRAY"}0000{"#cINFO"}\"");
				gHouses[houseid][houseSafeCode] = 0;
			}
			return 1;
		}
		case 5032:
		{
			new house = p_info[playerid][pHouse] ;
			if(!response) return 1;
			if ( !house ) return SendClientMessage (playerid,COLOR_GREY,"У вас нет дома");

			format(stringer, 512, "[HOUSE SELL]: %s HOUSEID: %d | PRICE: %d | MYSQL_ID: %d\n", gHouses[house][houseOwner], house, gHouses[house][hValue], gHouses[house][hID]);
			WriteHouseLog(NamePlayer[playerid], stringer);

			gHouses[house][hHel] = 0;
			gHouses[house][hLock] = 1;
			DestroyVehicleOP(caridhouse[playerid][0]);
			caridhouse[playerid][0] = 0;
			DestroyVehicleOP(caridhouse[playerid][1]);
			caridhouse[playerid][1] = 0;
			strmid(gHouses[house][houseOwner], "The State", 0, strlen("The State"), 31);
			TransferMoney(playerid,p_info[playerid][pCash]+(gHouses[house][hValue]/2),(gHouses[house][hValue]/2),"продал дом");
			p_info[playerid][pCash] += (gHouses[house][hValue]/2);
			format(stringer, 144, "Дом продан за {"#cORANGE"}%d{ffffff} $", (gHouses[house][hValue]/2));
			SendClientMessage(playerid, -1, stringer);
			p_info[playerid][pHouse] = 0;
			UpdatePlayerData(playerid,"pPhousekey",p_info[playerid][pHouse]);
			UpdateHome(house);
			UpdateMoney(playerid);
			SaveHome(house);


			return 1;
		}
	case 9979:
		{
			if(response)
			{
				if(p_info[playerid][pJob] != 14)
				{
					SCM(playerid, CRED, "Вы устроились на работу боксёра. (( /mm> команды сервера ))");
					p_info[playerid][pJob] = 14;
					UpdatePlayerData(playerid,"pJob",p_info[playerid][pJob]);
				}
				else SCM(playerid, CRED, "Вы уже работаете на работе боксёра.");
			}
		}
	case 19:
		{
			if(response)
			{
				if(p_info[playerid][tMember] != F_NONE) return SCM(playerid,CGRAD1,"Вы состоите во фракции");
				if(p_info[playerid][pJob] == 7) return SCM(playerid,CGRAD1,"Вы уже устроились");
				SetPlayerSkin(playerid,27);
				p_info[playerid][pJob] = 7;
				UpdatePlayerData(playerid,"pJob",p_info[playerid][pJob]);
				SCM(playerid,CGREEN,"Принимайте заказы от заказчиков, и зарабатывайте деньги");
				SCM(playerid,CWHITE,"Более подробно о работе можно узнать в INFO");
			}
			else
			{
				if(p_info[playerid][pJob] == 0) return SCM(playerid,CGRAD1,"Вы не брали работу");
				SCM(playerid,CYELLOW,"::: Рабочий день завершён :::");
				SetPlayerSkin(playerid,p_info[playerid][pChar]);
				p_info[playerid][pJob] = 0;
				UpdatePlayerData(playerid,"pJob",p_info[playerid][pJob]);
				return 1;
			}
		}
		case dEnterFamilyHouse:
		{
			new h = GetPVarInt(playerid, "HOUSE_ID");
			if(!response)
			{
				new subsidia = floatround(gHouses[h][hValue] * 0.005);
				if(gHouses[h][houseImprove][3]) subsidia = subsidia / 2;
				new raion[30];
				GetPlayer2DZone(playerid,raion,30);
				new status_online[32] = "{AA3333}Оффлайн", id;
				sscanf(gHouses[h][houseOwner], "u", id);
				if(id != INVALID_PLAYER_ID) status_online = "{33AA33}Онлайн";
				stringer[0] = EOS;
				format(stringer, 1024, "{f0f0f0}Владелец: %s %s\n{f0f0f0}Класс: %s\nКвартплата: %d$ за 1 день\nНомер дома: %d (%d)\nОплачено дней: %d\nГосударственная цена: %d\nРайон: %s\n",
				gHouses[h][houseOwner],status_online,gHousesClassName[gHouses[h][hKlass]-1],subsidia,gHouses[h][hID],h,gHouses[h][hDays],gHouses[h][hValue],raion);
				strcat(stringer,"\nУстановки:\n\n");
				strcat(stringer,(gHouses[h][houseImprove][0]) ? ("Сейф для хранения наркотиков и денег: Есть\n") : ("Сейф для хранения наркотиков и денег: Нет\n"));
				strcat(stringer,(gHouses[h][houseImprove][1]) ? ("Шкаф для одежды и оружия: Есть\n") : ("Шкаф для одежды и оружия: Нет\n"));
				strcat(stringer,(gHouses[h][houseImprove][2]) ? ("Холодильник: Есть\n") : ("Холодильник: Нет\n"));
				strcat(stringer,(gHouses[h][houseImprove][3]) ? ("Субсидии для снижения кварт. платы: Есть\n") : ("Субсидии для снижения кварт. платы: Нет\n"));
				if(gHouses[h][gRentStatus])
				{
					strcat(stringer,"\nАренда: Включена {e7e7e7}(/renthome)\n");
				}
				ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX,"Дом занят",stringer,"Войти","Отмена");
				return 1;
			}
			new check_code_family[32];
			if(sscanf(inputtext,"s[32]", check_code_family))
			{
				format(stringer, 250, "{f0f0f0}Внимание!\nЭтот дом принадлежит семье ' %s '.\n\nУ вас есть возможность вступить в эту семью, для этого нужно ввести секретный код в поле ниже.\nЕсли не желаете просто нажмите 'Отмена'", _family[gHouses[h][hFamily]-1][family_create_name]);
				ShowPlayerDialog(playerid,dEnterFamilyHouse,DIALOG_STYLE_INPUT,"{F0F0F0}Информация",stringer,"Ввод","Отмена");
				return 1;
			}
			if(strcmp(gHouses[h][hFamilyCode], check_code_family))
			{
				SendClientMessage(playerid, COLOR_GREY, "Неверный код");
				format(stringer, 250, "{f0f0f0}Внимание!\nЭтот дом принадлежит семье ' %s '.\n\nУ вас есть возможность вступить в эту семью, для этого нужно ввести секретный код в поле ниже.\nЕсли не желаете просто нажмите 'Отмена'", _family[gHouses[h][hFamily]-1][family_create_name]);
				ShowPlayerDialog(playerid,dEnterFamilyHouse,DIALOG_STYLE_INPUT,"{F0F0F0}Информация",stringer,"Ввод","Отмена");
				return 1;
			}
			p_info[playerid][pFamily] = gHouses[h][hFamily];
			UpdatePlayerData(playerid,"family",p_info[playerid][pFamily]);

			format(stringer,128,"Вы вступили в семью {ffff00}%s",_family[gHouses[h][hFamily]][family_create_name]);
			SendClientMessage(playerid,-1,stringer);
			return 1;
		}
		case 10075:
		{
			if(!response) return 1;
			new houseid = GetPVarInt(playerid,"HOUSE_ID");

			if(gHouses[houseid][hFamily] == p_info[playerid][pFamily] || p_info[playerid][pTempKey] == houseid || gHouses[houseid][hLock] == 1 || p_info[playerid][pHouse] == houseid || IsACop(playerid)|| IsAArm(playerid))
			{
				SetExitHousePos(playerid,houseid);
				SetPlayerVirtualWorld(playerid,houseid);
			}
			else
			{
				GameTextForPlayer(playerid, "~r~~h~CLOSED", 5000, 1);

				DeletePVar(playerid,"HOUSE_ID");
			}
			return 1;
		}
		case 10027:
		{
			new h = GetPVarInt(playerid,"HOUSE_ID");
			DeletePVar(playerid,"HOUSE_ID");
			if(!response)
			{
				if(p_info[playerid][pHouse] > 0) return SendErr(playerid,"У вас уже есть дом! (/hmenu > Изменить > Продать)");
				else if(p_info[playerid][pTempKey] > 0) return SendErr(playerid,"Вы арендуете дом! (/hmenu > Выселиться)");
				else if(p_info[playerid][pCash] < gHouses[h][hValue]) return	SendErr(playerid, "У вас нет столько денег на руках");
				if ( strcmp(gHouses[h][houseOwner], "The State") ) return SendClientMessage(playerid,COLOR_GREY,"Дом не продаётся!");
				p_info[playerid][pHouse] = h ;
				UpdatePlayerData(playerid,"pPhousekey",p_info[playerid][pHouse]);
				gHouses[h][hHel] = 0;
				strmid(gHouses[h][houseOwner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 31);
				TransferMoney(playerid,p_info[playerid][pCash] - gHouses[h][hValue],gHouses[h][hValue],"купил дом");
				p_info[playerid][pCash] -= gHouses[h][hValue];
				UpdateMoney(playerid);
				SendSucc(playerid, "Вы купили дом");
				SetVehicleToHouse(playerid, 1, true);
				SetVehicleToHouse(playerid, 2, true);
				gHouses[h][houseSafeCode] = 0;
				gHouses[h][houseSafeMoney] = 0;
				gHouses[h][houseDrugs] = 0;
				for(new z = 0; z < 9; z++) gHouses[h][houseGun][z] = 0;
				for(new d = 0; d < 3; d++) gHouses[h][houseSkin][d] = 0;
				for(new f = 0; f < 4; f++) gHouses[h][houseImprove][f] = 0;
				gHouses[h][RentAllPlata] = 20000;
				gHouses[h][gRentStatus] = 1;
				gHouses[h][hDays] = 1;
				gHouses[h][houseSafeCode] = 0;
				p_info [ playerid ] [ p_car_fuel ][ 0 ] = 50.0;
				p_info [ playerid ] [ p_car_fuel ][ 1 ] = 50.0;
				UpdateHome( h );
				SaveHome( h );
			}
			SetExitHousePos(playerid, h );
			SetPlayerVirtualWorld(playerid, h );
			return 1;
		}
		case 10026:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,10027,DIALOG_STYLE_MSGBOX,"Дом продается","{f0f0f0}Выберите желаемое действие:","Осмотреть","Купить");
			return 1;
		}
		case 4:
		{
			p_info[playerid][pSex] = (response) ? (1) : (2);
			AC_SetPlayerHealth(playerid, 100);
			p_info[playerid][pJailTime] = 0;
			p_info[playerid][pAdmin] = 0;
			ShowPlayerDialog(playerid,623,DIALOG_STYLE_LIST,"{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(5)", "{ffffff}Выберите национальность:\nАмериканец\nРусский\nМексиканец\nКитаец\nИтальянец", "Выбор", "");
			return 1;
		}
		case 623:
		{
			if(!response || !listitem) return ShowPlayerDialog(playerid,623,DIALOG_STYLE_LIST, "{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(5)", "{ffffff}Выберите национальность:\nАмериканец\nРусский\nМексиканец\nКитаец\nИтальянец", "Выбор", "");

			ShowPlayerDialog(playerid,624,DIALOG_STYLE_INPUT, "{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(6)", "\t{ffffff}Укажите Ваш возраст {"#cGRAY"}(игровой){ffffff} от {79BD8F}18 {ffffff}до {79BD8F}110{ffffff}", "Ввод", "");
			p_info[playerid][pNation] = listitem-1;

			return 1;
		}
		case 624:
		{
			if(!response) return ShowPlayerDialog(playerid,624,DIALOG_STYLE_INPUT, "{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(6)", "\t{ffffff}Укажите Ваш возраст {"#cGRAY"}(игровой){ffffff} от {79BD8F}18 {ffffff}до {79BD8F}110{ffffff}", "Ввод", "");
			if(isNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid,624,DIALOG_STYLE_INPUT, "{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(6)", "\t{ffffff}Укажите Ваш возраст {"#cGRAY"}(игровой){ffffff} от {79BD8F}18 {ffffff}до {79BD8F}110{ffffff}", "Ввод", "");
			if(strval(inputtext) < 18 || strval(inputtext) > 110) return ShowPlayerDialog(playerid,624,DIALOG_STYLE_INPUT, "{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(6)", "\t{ffffff}Укажите Ваш возраст {"#cGRAY"}(игровой){ffffff} от {79BD8F}18 {ffffff}до {79BD8F}110{ffffff}", "Ввод", "");

			ShowPlayerDialog(playerid,625,DIALOG_STYLE_MSGBOX, "{00A388}Регистрация {"#cWHITE"}нового персонажа Этап {79BD8F}(7)", "\t{ffffff}Выберите {79BD8F}цвет {ffffff}вашей {79BD8F}кожи", "Белый", "Черный");
			p_info[playerid][pAge] = strval(inputtext);

			return 1;
		}
		case 625:
		{
			SetPVarInt(playerid,"color_player", response);
			chose_player[playerid]=true;
			SetPlayerSkin(playerid, gRegSkins[p_info[playerid][pSex]-1][GetPVarInt(playerid,"color_player")][0]);
			SetPlayerAuthorized(playerid, PLAYER_ONLINE);
			SpawnPlayer(playerid);
			DeletePVar(playerid,"request_use");
			return 1;
		}
		case 10025:
		{
			if(!response) return pc_cmd_mm(playerid);
			switch(listitem)
			{
				case 0:
				{
					stringer[0] = EOS;
					strcat(stringer,"{"#cORANGE"}/time - {"#cWHITE"}Посмотреть время\n");
					strcat(stringer,"{"#cORANGE"}/id - {"#cWHITE"}Узнать ид/имя игрока в игре\n");
					strcat(stringer,"{"#cORANGE"}/pass - {"#cWHITE"}Показать паспорт\n");
					strcat(stringer,"{"#cORANGE"}/showlicenses - {"#cWHITE"}Показать лицензии\n");
					strcat(stringer,"{"#cORANGE"}/skill - {"#cWHITE"}Показать выписку из тира\n");
					strcat(stringer,"{"#cORANGE"}/licenses - {"#cWHITE"}Посмотреть лицензии\n");
					strcat(stringer,"{"#cORANGE"}/pay - {"#cWHITE"}Передать деньги\n");
					strcat(stringer,"{"#cORANGE"}/gps - {"#cWHITE"}Навигатор\n");
					strcat(stringer,"{"#cORANGE"}/buy - {"#cWHITE"}Купить еду в магазине\n");
					strcat(stringer,"{"#cORANGE"}/drink - {"#cWHITE"}Купить напитки в магазине\n");
					strcat(stringer,"{"#cORANGE"}/eat - {"#cWHITE"}Купить закуску в магазине\n");
					strcat(stringer,"{"#cORANGE"}/atm - {"#cWHITE"}Воспользоваться банкоматом\n");
					strcat(stringer,"{"#cORANGE"}/dice - {"#cWHITE"}Сыграть в кости\n");
					strcat(stringer,"{"#cORANGE"}/kiss - {"#cWHITE"}Поцеловать игрока\n");
					strcat(stringer,"{"#cORANGE"}/viphelp - {"#cWHITE"}Узнать информацию о VIP-статусе\n");
					strcat(stringer,"{"#cORANGE"}/myskill - {"#cWHITE"}Посмотреть свои скиллы\n");
					strcat(stringer,"{"#cORANGE"}/divorse - {"#cWHITE"}Развестись\n");
					strcat(stringer,"{"#cORANGE"}/propose - {"#cWHITE"}Предложить руку и сердце\n");
					strcat(stringer,"{"#cORANGE"}/witness - {"#cWHITE"}Предложить стать свидетелем на свадьбе\n");
					strcat(stringer,"{"#cORANGE"}/givepatr - {"#cWHITE"}Передать патроны\n");
					strcat(stringer,"{"#cORANGE"}/giveguns - {"#cWHITE"}Передать металл\n");
					strcat(stringer,"{"#cORANGE"}/givehealme - {"#cWHITE"}Передать аптечку\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
					return 1;
				}
				case 1:
				{
					stringer[0] = EOS;
					strcat(stringer,"{"#cORANGE"}/o - {"#cWHITE"}Глобальный чат\n");
					strcat(stringer,"{"#cORANGE"}/todo - {"#cWHITE"}Глобальный чат\n");
					strcat(stringer,"{"#cORANGE"}/ad - {"#cWHITE"}Подать объявление\n");
					strcat(stringer,"{"#cORANGE"}/s - {"#cWHITE"}Крик\n");
					strcat(stringer,"{"#cORANGE"}/throwfish - {"#cWHITE"}Выбросить рыбу\n");
					strcat(stringer,"{"#cORANGE"}/fishes - {"#cWHITE"}Список рыбы\n");
					strcat(stringer,"{"#cORANGE"}/me - {"#cWHITE"}Действие (Пример: Имя_Фамилия пожал руку)\n");
					strcat(stringer,"{"#cORANGE"}/try - {"#cWHITE"}Действие (Пример: Имя_Фамилия пожал руку | удачно)\n");
					strcat(stringer,"{"#cORANGE"}/do - {"#cWHITE"}Действие (Пример: Имя_Фамилия (пожал руку))\n");
					strcat(stringer,"{"#cORANGE"}/ad - {"#cWHITE"}Подать объявление\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
					return 1;
				}
				case 2:
				{
					stringer[0] = EOS;
					strcat(stringer,"{"#cORANGE"}(/c)all - {"#cWHITE"}Позвонить (Номер телефона можно узнать через /number)\n");
					strcat(stringer,"{"#cORANGE"}/sms - {"#cWHITE"}Отправить СМС сообщение\n");
					strcat(stringer,"{"#cORANGE"}(/p)ickup - {"#cWHITE"}Ответить на звонок\n");
					strcat(stringer,"{"#cORANGE"}(/h)angup - {"#cWHITE"}Завершить телефонный разговор\n");
					strcat(stringer,"{"#cORANGE"}/mbalance - {"#cWHITE"}Проверить баланс\n");
					strcat(stringer,"{"#cORANGE"}/number - {"#cWHITE"}Узнать номер\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
					return 1;
				}
				case 3:
				{
					switch(p_info[playerid][pJob])
					{
						case 2:
						{
							stringer[0] = EOS;
							strcat(stringer,"{"#cORANGE"}/repair - {"#cWHITE"}Починить автомобиль\n");
							strcat(stringer,"{"#cORANGE"}/refill - {"#cWHITE"}Заправить автомобиль\n");
							strcat(stringer,"{"#cORANGE"}/fcontract - {"#cWHITE"}Подписать контракт с заправкой\n");
							strcat(stringer,"{"#cORANGE"}/trailer - {"#cWHITE"}Прицепить автомобиль\n");
							strcat(stringer,"{"#cORANGE"}/untrailer - {"#cWHITE"}Отцепить автомобиль\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						default: SendErr(playerid,"Для Вас нет доступных команд.");
					}
					return 1;
				}
				case 4:
				{
					switch(p_info[playerid][tMember])
					{
						case F_AUTOS:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/d - {"#cWHITE"}Депортамент\n");
							strcat(stringer,""ORG"/take - {"#cWHITE"}Забрать лицензии\n");
							strcat(stringer,""ORG"/exam - {"#cWHITE"}Провести экзамен\n");
							strcat(stringer,""ORG"/skipexam - {"#cWHITE"}Выгнать игрока из очереди\n");
							strcat(stringer,""ORG"/givelic - {"#cWHITE"}Выдать лицензии\n");
							strcat(stringer,""ORG"/skipgunlic - {"#cWHITE"}Выставить из очереди на лицензию\n");
							strcat(stringer,""ORG"/examgunlic - {"#cWHITE"}Начать тест на лицензию\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_SAPD,F_FBI,F_PMC,F_SWAT,F_JTTF:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/r - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/d - {"#cWHITE"}Депортамент\n");
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат между гос. структурами\n");
							strcat(stringer,""ORG"/gov - {"#cWHITE"}Воспользоваться гос. новостями\n");
							strcat(stringer,""ORG"/megaphone - {"#cWHITE"}Громкоговоритель\n");
							strcat(stringer,""ORG"/su - {"#cWHITE"}Выдать розыск\n");
							strcat(stringer,""ORG"/arrest - {"#cWHITE"}Арестовать игрока\n");
							strcat(stringer,""ORG"/wanted - {"#cWHITE"}Посмотреть список разыскиваемых\n");
							strcat(stringer,""ORG"/cuff - {"#cWHITE"}Надеть наручники\n");
							strcat(stringer,""ORG"/break - {"#cWHITE"}Поставить ограждение\n");
							strcat(stringer,""ORG"/channel - {"#cWHITE"}Подключиться к защищенному каналу\n");
							strcat(stringer,""ORG"/rl - {"#cWHITE"}Разговаривать по защищенному каналу\n");
							strcat(stringer,""ORG"/uncuff - {"#cWHITE"}Снять наручники\n");
							strcat(stringer,""ORG"/frisk - {"#cWHITE"}Обыскать игрока\n");
							strcat(stringer,""ORG"/find - {"#cWHITE"}Найти игрока\n");
							strcat(stringer,""ORG"/take - {"#cWHITE"}Забрать лицензии\n");
							strcat(stringer,""ORG"/ticket - {"#cWHITE"}Выписать штраф\n");
							strcat(stringer,""ORG"/givecopkeys - {"#cWHITE"}Дать ключи от здания\n");
							strcat(stringer,""ORG"/cput (incar) - {"#cWHITE"}Посадить заключенного в машину\n");
							strcat(stringer,""ORG"/ceject - {"#cWHITE"}Выкинуть игрока из машины\n");
							strcat(stringer,""ORG"/gotome - {"#cWHITE"}Вести за собой\n");
							strcat(stringer,""ORG"/spikes - {"#cWHITE"}Поставить шипы\n");
							strcat(stringer,""ORG"/showudost - {"#cWHITE"}Показать удостоверение\n");
							strcat(stringer,""ORG"(/un)bk - {"#cWHITE"}Отменить/Вызывать подкрепление\n");
							strcat(stringer,""ORG"/radar - {"#cWHITE"}Поставить радар\n");
							if(p_info[playerid][tMember] == F_FBI)
							{
								strcat(stringer,""ORG"/tipster - {"#cWHITE"}Установить жучок\n");
								strcat(stringer,""ORG"/ftazer - {"#cWHITE"}Оглушить стоящих рядом\n");
								strcat(stringer,""ORG"/spy - {"#cWHITE"}Маскировка\n");
								strcat(stringer,""ORG"/bizlock - {"#cWHITE"}Открыть/Закрыть бизнес\n");
								strcat(stringer,""ORG"/takebizlic - {"#cWHITE"}Отобрать лицензию у бизнеса\n");
							}
							else if(p_info[playerid][tMember] == F_JTTF)
							{
								strcat(stringer,""ORG"/openswat - {"#cWHITE"}Открыть ворота\n");
							}
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_NAVY,F_NATGUARD:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/r - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/d - {"#cWHITE"}Депортамент\n");
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат между гос. структурами\n");
							strcat(stringer,""ORG"/gov - {"#cWHITE"}Воспользоваться гос. новостями\n");
							strcat(stringer,""ORG"/megaphone - {"#cWHITE"}Громкоговоритель\n");
							strcat(stringer,""ORG"/showudost - {"#cWHITE"}Показать удостоверение\n");
							strcat(stringer,""ORG"/getgun - {"#cWHITE"}Взять оружие (из багажника машины)\n");
							strcat(stringer,""ORG"/markload - {"#cWHITE"}Доставка оружия (Развозочные фуры)\n");
							strcat(stringer,"{"#cINFO"}/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_HITMAN:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/hpanel - {"#cWHITE"}Панель наёмника\n");
							strcat(stringer,""ORG"/unmask - {"#cWHITE"}Маскировка\n");
							strcat(stringer,""ORG"/execute - {"#cWHITE"}Убийство с одного выстрела\n");
							strcat(stringer,""ORG"/find - {"#cWHITE"}Найти игрока\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						/*case F_T_ANGEL:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}*/
						case F_WHOUSE:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/r - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/d - {"#cWHITE"}Депортамент\n");
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат между гос. структурами\n");
							strcat(stringer,""ORG"/gov - {"#cWHITE"}Воспользоваться гос. новостями\n");
							strcat(stringer,""ORG"/subleader - {"#cWHITE"}Назначить лидера (Для министров)\n");
							strcat(stringer,""ORG"/subspy - {"#cWHITE"}Прослушивать чат фракции (Для министров)\n");
							strcat(stringer,""ORG"/submembers - {"#cWHITE"}Просматривать состав фракции (Для министров)\n");
							strcat(stringer,""ORG"/subvig - {"#cWHITE"}Выдать выговор фракции (Для министров)\n");
							strcat(stringer,""ORG"/unsubvig - {"#cWHITE"}Снять выговор фракции (Для министров)\n");
							strcat(stringer,""ORG"/demote - {"#cWHITE"}Повысить/Понизить гос. сотрудника\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_DEPJUST,F_CHSF,F_CHLV:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/r - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/d - {"#cWHITE"}Депортамент\n");
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат между гос. структурами\n");
							strcat(stringer,""ORG"/gov - {"#cWHITE"}Воспользоваться гос. новостями\n");
							strcat(stringer,""ORG"/free - {"#cWHITE"}Выпустить игрока (Для адвокатов)\n");
							strcat(stringer,""ORG"/mleave - {"#cWHITE"}Выставить за дверь мэрии\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							strcat(stringer,""ORG"/skiplic - {"#cWHITE"}Выставить из очереди на лицензию\n");
							strcat(stringer,""ORG"/examlic - {"#cWHITE"}Начать тест на лицензию\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_MCLS:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/r - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/d - {"#cWHITE"}Депортамент\n");
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат между гос. структурами\n");
							strcat(stringer,""ORG"/gov - {"#cWHITE"}Воспользоваться гос. новостями\n");
							strcat(stringer,""ORG"/heal - {"#cWHITE"}Вылечить игрока\n");
							strcat(stringer,""ORG"/sethpprice - {"#cWHITE"}Установить цену за лечение\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_LCN,F_YAKYZA,F_RM,F_T_ANGEL:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/tie - {"#cWHITE"}Связать игрока\n");
							strcat(stringer,""ORG"/takephone - {"#cWHITE"}Забрать телефон\n");
							strcat(stringer,""ORG"/bizlist - {"#cWHITE"}Посмотреть список бизнесов\n");
							strcat(stringer,""ORG"/bizwar - {"#cWHITE"}Начать войну за бизнес\n");
							strcat(stringer,""ORG"/makegun - {"#cWHITE"}Сделать оружие\n");
							strcat(stringer,""ORG"/mask - {"#cWHITE"}Одеть маску\n");
							strcat(stringer,""ORG"/loadgun - {"#cWHITE"}Начать загрузку\n");
							strcat(stringer,""ORG"/unloadgun - {"#cWHITE"}Закончить загрузку\n");
							// strcat(stringer,""ORG"/setdebt - {"#cWHITE"}Назначить должника\n");
							// strcat(stringer,""ORG"/debtors - {"#cWHITE"}Должники\n");
							strcat(stringer,""ORG"/close - {"#cWHITE"}Закрыть/Открыть склад\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							strcat(stringer,""ORG"/bl - {"#cWHITE"}Черный список\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_BALLAS,F_VAGOS,F_GROVE,F_AZTECAS,F_RIFA:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/bandchat - {"#cWHITE"}Чат банд\n");
							strcat(stringer,""ORG"/selldrugs - {"#cWHITE"}Продать наркотики\n");
							strcat(stringer,""ORG"/sellzone - {"#cWHITE"}Продать ганг-зону\n");
							strcat(stringer,""ORG"/sellgun - {"#cWHITE"}Продать оружие\n");
							strcat(stringer,""ORG"/robhouse - {"#cWHITE"}Ограбить дом\n");
							strcat(stringer,""ORG"/mask - {"#cWHITE"}Одеть маску\n");
							strcat(stringer,""ORG"/capture - {"#cWHITE"}Захватить территорию\n");
							strcat(stringer,""ORG"/makegun - {"#cWHITE"}Сделать оружие\n");
							strcat(stringer,""ORG"/close - {"#cWHITE"}Закрыть/Открыть склад\n");
							strcat(stringer,""ORG"/loadgun - {"#cWHITE"}Начать загрузку\n");
							strcat(stringer,""ORG"/unloadgun - {"#cWHITE"}Закончить загрузку\n");
							strcat(stringer,""ORG"/keys - {"#cWHITE"}Посмотреть список ключей\n");
							strcat(stringer,""ORG"/switchskin - {"#cWHITE"}Одеть военный скин\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							strcat(stringer,""ORG"/bl - {"#cWHITE"}Черный список\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						case F_SANN:
						{
							stringer[0] = EOS;
							strcat(stringer,""ORG"/f - {"#cWHITE"}Чат организации\n");
							strcat(stringer,""ORG"/edit - {"#cWHITE"}Редактировать объявления\n");
							strcat(stringer,""ORG"/live - {"#cWHITE"}Взять интервью\n");
							strcat(stringer,""ORG"/yes - {"#cWHITE"}Принять звонок\n");
							strcat(stringer,""ORG"/off - {"#cWHITE"}Отключить звонок\n");
							strcat(stringer,""ORG"/npanel - {"#cWHITE"}Панель новостей\n");
							strcat(stringer,""ORG"/newsbank - {"#cWHITE"}Банк новостей\n");
							strcat(stringer,""ORG"/newswithdraw - {"#cWHITE"}Снять деньги с банка новостей\n");
							strcat(stringer,""ORG"/topadvert - {"#cWHITE"}Просмотр лучших сотрудников\n");
							strcat(stringer,""ORG"/members - {"#cWHITE"}Посмотреть состав организации\n");
							ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
						}
						default: SendErr(playerid,"Вы не состоите в фракции");
					}
				}
				case 5:
				{
					if(!p_info[playerid][tMember]) return 1;
					if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1]) return SendErr(playerid,"Вы не лидер");
					stringer[0] = EOS;
					strcat(stringer,""ORG"/showall - {"#cWHITE"}Посмотреть состав организации оффлайн\n");
					strcat(stringer,""ORG"/lmenu - {"#cWHITE"}Панель лидера\n");
					strcat(stringer,""ORG"/offuninvite - {"#cWHITE"}Уволить игрока в оффлайне\n");
					strcat(stringer,""ORG"/unit - {"#cWHITE"}Управление подразделениями\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
				}
				case 6:
				{
					if( p_info[playerid][pHouse] == 0 ) return SendErr(playerid,"У вас нет дома");
					stringer[0] = EOS;
					strcat(stringer,""ORG"/hmenu - {"#cWHITE"}Главное меню(Настройки дома)\n");
					strcat(stringer,""ORG"/home - {"#cWHITE"}Поставить метку у дома (GPS)\n");
					strcat(stringer,""ORG"/changehouse - {"#cWHITE"}Продать дом игроку\n");
					strcat(stringer,""ORG"/exit - {"#cWHITE"}Управление сейфом\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
				}
				case 7:
				{
					if(p_info[playerid][pPbiskey] == 0) return SCM(playerid, CWHITE, "У вас нет бизнеса!");
					SCM(playerid,0x20A8A8AA,"{009BFF}/sellbiz {FEFEFE}- Продать бизнес");
					SCM(playerid,0x20A8A8AA,"{009BFF}/changebizz {FEFEFE}- Продать бизнес игроку");
					SCM(playerid,0x20A8A8AA,"{009BFF}/bizlock {FEFEFE}- Закрыть/Открыть бизнес");
					SCM(playerid,0x20A8A8AA,"{009BFF}/business {FEFEFE}- Статистика бизнеса");
				}
				case 8:
				{
					stringer[0] = EOS;
					strcat(stringer,""ORG"/carpass - {"#cWHITE"}Посмотреть документы на автомобиль\n");
					strcat(stringer,""ORG"/showcarpass - {"#cWHITE"}Показать документы на автомобиль\n");
					strcat(stringer,""ORG"/sellcar - {"#cWHITE"}Продать автомобиль\n");
					strcat(stringer,""ORG"/changecar - {"#cWHITE"}Продать автомобиль игроку\n");
					strcat(stringer,""ORG"/fixcar - {"#cWHITE"}Доставить автомобиль к дому\n");
					strcat(stringer,""ORG"/lock - {"#cWHITE"}Открыть автомобиль\n");
					strcat(stringer,""ORG"/parkcar - {"#cWHITE"}Изменить парковку автомобиля\n");
					strcat(stringer,""ORG"/fill - {"#cWHITE"}Заправить автомобиль\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
				}
				case 9:
				{
					if(!p_info[playerid][pFamily]) return SendErr(playerid,"Вы не состоите в семье");
					stringer[0] = EOS;
					strcat(stringer,""ORG"/createfamily - {"#cWHITE"}Создать семью\n");
					strcat(stringer,""ORG"/k - {"#cWHITE"}Чат семьи\n");
					strcat(stringer,""ORG"/finvite - {"#cWHITE"}Принять игрока в семью\n");
					strcat(stringer,""ORG"/funinvite {"#cWHITE"}- Исключить из семьи\n");
					strcat(stringer,""ORG"/fleave {"#cWHITE"}- Покинуть семью\n");
					ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Команды",stringer,"ОК","");
				}
			}
			return 1;
		}
		case 5346:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 5346, DIALOG_STYLE_INPUT,"Выдача оружия", "Используйте id оружия и патроны\nПример: {"#cWHITE"}31,500\nГде 31 m4 а 500 патроны", "Выдать", "Закрыть");
			if(strfind(inputtext,",", true) == -1) return 1;
			new razdel[2];
			sscanf(inputtext,"p<,>ii",razdel[0],razdel[1]);
			if(razdel[0] == 9 || razdel[0] == 26 || razdel[0] == 16 || razdel[0] == 27 || razdel[0] == 37 || razdel[0] == 38 || razdel[0] == 35 ||
			razdel[0] == 36 || razdel[0] == 39 || razdel[0] == 44 || razdel[0] == 45) return SCM(playerid, CGRAD1, "Нельзя выдавать запрещенное оружие");
			foreach(i)
			{
				AC_GivePlayerWeapon(playerid, razdel[0], razdel[1]);
				if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
				{
					AC_GivePlayerWeapon(i, razdel[0], razdel[1]);
					format(stringer, 128, "Администратор %s[%d] выдал вам оружие", NamePlayer[playerid],playerid);
					SCM(i, CYELLOW,stringer);
				}
			}
			return 1;
		}
		case 5343:
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, 5346, DIALOG_STYLE_INPUT,"Выдача оружия", "{"#cWHITE"}Используйте id оружия и патроны\n{"#cWHITE"}Пример: {FF0000}31,500\n{"#cWHITE"}Где {FF0000}31 m4 {"#cWHITE"}а {FF0000}500 патроны", "Выдать", "Закрыть");
				}
				if(listitem == 1)
				{
					foreach(i)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							AC_SetPlayerHealth(i, 100.0);
							format(stringer, 128, "Администратор %s[%d] пополнил вам уровень здоровья",NamePlayer[playerid],playerid);
							SCM(i, CYELLOW,stringer);
						}
					}
					AC_SetPlayerHealth(playerid, 100.0);
				}
				if(listitem == 2)
				{
					foreach(i)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							AC_ResetPlayerWeapons(i);
							format(stringer, 128, "Администратор %s[%d] забрал у вас оружие",NamePlayer[playerid],playerid);
							SCM(i, CYELLOW,stringer);
						}
					}
				}
			}
		}
		case 9894:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						stringer[0] = EOS;
						if(!p_info[playerid][pWarns]) return  SCM(playerid, CWHITE, "Ошибка. У вас нет предупреждения");
						SCM(playerid, CGREEN, "Вы подали заявку на снятия предупреждения.");
						format(stringer,255, "[A] %s[%d] [уровень: %i] подал заявку на снятие предупреждения", NamePlayer[playerid],playerid,p_info[playerid][pLevel]);
						AdmMes(CADMIN_HELP_INFO,stringer,1);
						return 1;
					}
					case 1: ShowPlayerDialog(playerid, dSetWalk, 2, " ", ""ORG"1.{"#cWHITE"} Стандартная\n"ORG"2.{"#cWHITE"} П - 1\n"ORG"3.{"#cWHITE"} П - 2\n"ORG"4.{"#cWHITE"} П - 3\n"ORG"5.{"#cWHITE"} П - 4\n"ORG"6.{"#cWHITE"} П - 5\n"ORG"7.{"#cWHITE"} П - 6\n"ORG"8.{"#cWHITE"} П - 7\n"ORG"9.{"#cWHITE"} П - 8\n"ORG"10.{"#cWHITE"} П - 9\n"ORG"11.{"#cWHITE"} П - 10\n"ORG"12.{"#cWHITE"} П - 11", "Дальше", "Закрыть");
					case 2: ShowPlayerDialog(playerid, dSetAnim, 2, " ", ""ORG"1.{"#cWHITE"} Стандартный\n"ORG"2.{"#cWHITE"} Стиль 1\n"ORG"3.{"#cWHITE"} Стиль 2\n"ORG"4.{"#cWHITE"} Стиль 3\n"ORG"5.{"#cWHITE"} Стиль 4\n"ORG"6.{"#cWHITE"} Стиль 5\n"ORG"7.{"#cWHITE"} Стиль 6", "Дальше", "Закрыть");
					case 3: pc_cmd_inv(playerid);
				}
			}
			else return pc_cmd_mm(playerid);
		}
		case dSetWalk:
		{
			if(!response) return 1;
			p_info[playerid][pSetWalk] = listitem;
			UpdatePlayerData(playerid, "pSetWalk", p_info[playerid][pSetWalk]);
			SendSucc(playerid, "Вы выбрали новый стиль походки для своего персонажа");
		}
		case dSetAnim:
		{
			if(!response) return 1;
			p_info[playerid][pSetAnim] = listitem;
			UpdatePlayerData(playerid, "pSetAnim", p_info[playerid][pSetAnim]);
			SendSucc(playerid, "Вы выбрали новый стиль разговора для своего персонажа");
		}
		case 26363:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(p_info[playerid][tDonatemoney2] < 15) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 15 донат-очков.");
						if(p_info[playerid][pSex] >= 2)
						{
							SCM(playerid,CWHITE,"DONATE: Вы сменили пол на Мужской за {baffc3}15 {"#cWHITE"}рублей.");
							p_info[playerid][pSex]=1;
						}
						else if(p_info[playerid][pSex] <= 1)
						{
							SCM(playerid,CWHITE,"DONATE: Вы сменили пол на Женский за {baffc3}15 {"#cWHITE"}рублей.");
							p_info[playerid][pSex]=2;

						}
						p_info[playerid][tDonatemoney2] -= 15;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
						UpdatePlayerData(playerid,"pSex",p_info[playerid][pSex]);
					}
					case 1:
					{
						if(p_info[playerid][tDonatemoney2] < 5) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 5 донат-очков.");
						p_info[playerid][Disease][0] = 0;
						p_info[playerid][Disease][1] = 0;
						p_info[playerid][Disease][2] = 0;
						p_info[playerid][tDonatemoney2] -= 5;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
						UpdatePlayerData(playerid, "Disease0", p_info[playerid][Disease][0]);
						UpdatePlayerData(playerid, "Disease1", p_info[playerid][Disease][1]);
						UpdatePlayerData(playerid, "Disease2", p_info[playerid][Disease][2]);
					}
					case 2:
					{
						if(p_info[playerid][tDonatemoney2] < 30) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 30 донат-очков.");
						if(IsAUseDonate[playerid][0]) return SCM(playerid, 0xFF0000FF, "Вы уже использовали эту услугу");
						IsAUseDonate[playerid][0] = true;
						p_info[playerid][tDonatemoney2] -= 30;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
						p_info[playerid][pMuteTime] = 0;
						UpdatePlayerData(playerid,"pMuteTime",p_info[playerid][pMuteTime]);

					}
					case 3:
					{
						if(p_info[playerid][tDonatemoney2] < 30) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 30 донат-очков.");
						if(IsAUseDonate[playerid][1]) return SCM(playerid, 0xFF0000FF, "Вы уже использовали эту услугу");
						IsAUseDonate[playerid][1] = true;
						p_info[playerid][tDonatemoney2] -= 30;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
						p_info[playerid][pJailTime] = 0;
						UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pJailTime]);
						p_info[playerid][pMestoJail] = 0;
						UpdatePlayerData(playerid,"pMestoJail",p_info[playerid][pMestoJail]);
						SpawnPlayer(playerid);
					}
				}
			}
			else return pc_cmd_donate(playerid);
			return 1;
		}
	case dDonate:
	{
		if(!response) return 1;
		UpdateDonate(playerid);
		switch(listitem)
		{
			case 0: //проверка баланса OK
			{
				format(stringer,128,"У вас {"#cWHITE"}%i{269BD8} рублей и {"#cWHITE"}%i{269BD8} донат-очков",p_info[playerid][pRouble],p_info[playerid][tDonatemoney2]);
				SendClientMessage(playerid,CINFO,stringer);
				SendClientMessage(playerid,CINFO,"Пополнить баланс вы можете на сайте: {"#cWHITE"}"PROJECT_WEBSITE" > Пополнение баланса");
				pc_cmd_donate(playerid);
			}
			case 1: //Именная машина OK
			{
				if(p_info[playerid][pRouble] < 200)
				{
					pc_cmd_donate(playerid);
					SendErr(playerid,"Стоимость машины 200 рублей");
					return 1;
				}
				if( p_info[playerid][pHouse] == 0 ) return SendErr(playerid,"Вы не имеете дом");
				SendSucc(playerid, "Вы приобрели VIP-машину");
				p_info[playerid][pVipCar] = 1;
				UpdatePlayerData(playerid, "pVipCar", p_info[playerid][pVipCar]);
				p_info[playerid][pRouble] -= 200;
				UpdatePlayerData(playerid, "pRouble", p_info[playerid][pRouble]);
			}
			case 2:
			{
			    stringer = "";
				format(stringer, 200, "{ffffff}Действующий тариф: {ffff00}"NAME_TARIF" {ffffff}(1 к "ROUBLE_DOLLARS" $)\n\nНа счету вашего аккаунта {ffff00}%d {ffffff}рублей\n\nМаксимально доступная выручка с обмена составляет %d $", p_info[playerid][pRouble], p_info[playerid][pRouble] * ROUBLE_DOLLARS_INT);
				ShowPlayerDialog(playerid, 12953, DIALOG_STYLE_INPUT, "{ffff00}Донат | {baffc3}Конвертер виртуальных средств", stringer, "Далее", "Назад");
			}
   			case 3:
			{
				format(stringer, 200, "{"#cWHITE"}Действующий тариф: {ffff00}'Русский стандарт' {"#cWHITE"}(1 к 5 донат-очкам)\n\nНа счету вашего аккаунта {ffff00}%d {"#cWHITE"}рублей\n\nМаксимально доступная выручка с обмена составляет %d донат-очков", p_info[playerid][pRouble], p_info[playerid][pRouble] * 5);
				ShowPlayerDialog(playerid, 12954, DIALOG_STYLE_INPUT, "{ffff00}Донат | {baffc3}Конвертер донат-очков", stringer, "Далее", "Назад");
			}
			case 4: ShowPlayerDialog(playerid, 9943, DIALOG_STYLE_INPUT, "{ffff00}Донат | {baffc3}Смена ника", "{"#cWHITE"}Данная услуга стоит 20 рублей\n\nНапишите новый никнейм в окошко\n\nНапример: "PROJECT_EX_NICK"\n\nЧтобы не было лишних проблем, проверьте каждый знак своего будущего никнейма", "Отправить", "Назад");
			case 5:
			{
				if(p_info[playerid][pRouble] < 25) return SendClientMessage(playerid,COLOR_GREY,"У вас нет 25 рублей на балансе");
				if(p_info[playerid][pWarns] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет варнов");

				p_info[playerid][pWarns] = 0;
				UpdatePlayerData(playerid,"pWarns",p_info[playerid][pWarns]);
				p_info[playerid][punWarnstime] = 0;
				UpdatePlayerData(playerid,"punWarnstime",0);
				//
				p_info[playerid][pRouble] -= 25;
				UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);

				SendSucc(playerid,"С вас были сняты предупреждения за {baffc3}25{"#cWHITE"} рублей");
				return 1;
			}
			case 6:
			{
				stringer[0] = EOS;
				strcat(stringer,"{"#cORANGE"}1.{"#cWHITE"} Сменить пол \t{baffc3}15 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}2.{"#cWHITE"} Вылечиться от болезней \t{baffc3}5 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}3.{"#cWHITE"} Снять затычку\t{baffc3}30 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}4.{"#cWHITE"} Освобождение из тюрьмы \t{baffc3}30 донат-очков\n");
				ShowPlayerDialog(playerid, 26363, DIALOG_STYLE_TABLIST, "{ffff00}Донат | {baffc3}Игровые привелегии",stringer, "Выбрать", "Назад");
			}
			case 7:
			{
				stringer[0] = EOS;
				strcat(stringer,"{00A388}[1]{"#cWHITE"} VIP FIRST\t{baffc3}50 рублей\n");
				strcat(stringer,"{00A388}[2]{"#cWHITE"} VIP SECOND\t{baffc3}100 рублей\n");
				strcat(stringer,"{00A388}[3]{"#cWHITE"} VIP THIRD\t{baffc3}150 рублей\n");
				strcat(stringer,"{00A388}[4]{"#cWHITE"} VIP FOURTH\t{baffc3}200 рублей\n");
				strcat(stringer,"{00A388}[5]{"#cWHITE"} VIP FIFTH\t{baffc3}250 рублей\n");
				strcat(stringer,"{79BD8F}[FAQ]{"#cWHITE"} VIP HELP\n");
				ShowPlayerDialog(playerid, 5559,  DIALOG_STYLE_TABLIST, "{ffff00}Донат | {baffc3}Приобретение VIP", stringer, "Выбрать", "Назад");
			}
			case 8:
			{
				stringer[0] = EOS;
				strcat(stringer,"{"#cORANGE"}1.{"#cWHITE"} Получить все навыки оружия\t{baffc3}30 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}2.{"#cWHITE"} Получить 2.500 металла и 200 наркотиков\t{baffc3}30 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}3.{"#cWHITE"} Получить законопослушность\t{baffc3}30 донат-очков\n");
				ShowPlayerDialog(playerid, 10059, DIALOG_STYLE_TABLIST, "{ffff00}Донат | {baffc3}Улучшения для персонажа",stringer, "Выбрать", "Назад");
			}
			case 9:
			{
				if( p_info[playerid][pHouse] == 0 && 0 == p_info[playerid][pTempKey] && 0 == p_info[playerid][pRoom]) return SCM(playerid,CRED,"У вас нет дома или вы его не арендуете / номера в отеле.");
				stringer[0] = EOS;
				strcat(stringer,"{"#cORANGE"}1.{"#cWHITE"} Лимузин\n");
				strcat(stringer,"{"#cORANGE"}2.{"#cWHITE"} Seasparrow\n");
				strcat(stringer,"{"#cORANGE"}3.{"#cWHITE"} Cop Car LS\n");
				strcat(stringer,"{"#cORANGE"}4.{"#cWHITE"} Patriot\n");
				strcat(stringer,"{"#cORANGE"}5.{"#cWHITE"} Freeway\n");
				strcat(stringer,"{"#cORANGE"}6.{"#cWHITE"} FBI Rancher\n");
				strcat(stringer,"{"#cORANGE"}7.{"#cWHITE"} Квадроцикл\n");
				strcat(stringer,"{"#cORANGE"}8.{"#cWHITE"} Автобус\n");
				strcat(stringer,"{"#cORANGE"}9.{"#cWHITE"} Спортивный велик\n");
				strcat(stringer,"{"#cORANGE"}10.{"#cWHITE"} Вертолет\n");
				strcat(stringer,"{"#cORANGE"}11.{"#cWHITE"} Monster\n");
				strcat(stringer,"{"#cORANGE"}12.{"#cWHITE"} Petrol\n");
				strcat(stringer,"{"#cORANGE"}13.{"#cWHITE"} Bandito\n");
				strcat(stringer,"{"#cORANGE"}14.{"#cWHITE"} Kart\n");
				strcat(stringer,"{"#cORANGE"}15.{"#cWHITE"} Фургон мороженщика\n");
				strcat(stringer,"{"#cORANGE"}16.{"#cWHITE"} Фургон хиппи\n");
				strcat(stringer,"{"#cORANGE"}17.{"#cWHITE"} Гоночный грузовик\n");
				strcat(stringer,"{"#cORANGE"}18.{"#cWHITE"} Машина для дерби\n");
				strcat(stringer,"{"#cORANGE"}19.{"#cWHITE"} Hotring\n");
				strcat(stringer,"{"#cORANGE"}20.{"#cWHITE"} Hotring-2\n");
				ShowPlayerDialog(playerid, 10060, DIALOG_STYLE_TABLIST, "{ffff00}Донат | {baffc3}Покупка домашней машины",stringer, "Выбрать", "Закрыть");
			}
			case 10:
			{
				stringer[0] = EOS;
				strcat(stringer,"{"#cORANGE"}1.{"#cWHITE"} Лицензия на вождение\t{baffc3}20 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}2.{"#cWHITE"} Лицензия на полёт\t{baffc3}20 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}3.{"#cWHITE"} Лицензия на водный транспорт\t{baffc3}20 донат-очков\n");
				strcat(stringer,"{"#cORANGE"}4.{"#cWHITE"} Лицензия на оружие\t{baffc3}20 донат-очков\n");
				ShowPlayerDialog(playerid, 10062, DIALOG_STYLE_TABLIST, "{ffff00}Донат | {baffc3}Лицензии",stringer, "Выбрать", "Назад");
			}
		}
		return 1;
	}
	case 10062:
	{
		if(!response) return pc_cmd_donate(playerid);
		if(p_info[playerid][tDonatemoney2] < 20) return SCM(playerid, CWHITE, "DONATE: Недостаточное количество донат-очков");
		p_info[playerid][tDonatemoney2] -= 20;
		UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
		Lic[playerid][listitem] = 1;
		pc_cmd_licenses(playerid);
		SendClientMessage(playerid,CBLUE, "Вы приобрели лицензию за {"#cORANGE"}20 донат-очков");
		UpdateLicenses(playerid);
		return 1;
	}


		case 9943:
		{
			if(response)
			{
				if(p_info[playerid][pRouble] < 20)
				{
					SCM(playerid, CWHITE, "DONATE: Стоимость услуги: рублей");
					return 1;
				}
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 9943, DIALOG_STYLE_INPUT, "DONATE: Сменить никнейм", "{"#cWHITE"}Напишите новый никнейм в окошко\n\nНапример: "PROJECT_EX_NICK"\n\n{FF0000}Проверяйте каждый знак, чтобы не были проблемы", "Отправить", "Назад");
				if(IsTextInvalid(inputtext)) return ShowPlayerDialog(playerid, 9943, DIALOG_STYLE_INPUT, "DONATE: Сменить никнейм", "{"#cWHITE"}Напишите новый никнейм в окошко\n\nНапример: "PROJECT_EX_NICK"\n\n{FF0000}Проверяйте каждый знак, чтобы не были проблемы", "Отправить", "Назад");
				if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 9943, DIALOG_STYLE_INPUT, "DONATE: Сменить никнейм", "{"#cWHITE"}Напишите новый никнейм в окошко\n\nНапример: "PROJECT_EX_NICK"\n\n{FF0000}Проверяйте каждый знак, чтобы не были проблемы", "Отправить", "Назад");
				if(!IsARPName(inputtext)) return ShowPlayerDialog(playerid, 9943, DIALOG_STYLE_INPUT, "DONATE: Сменить никнейм", "{"#cWHITE"}Напишите новый никнейм в окошко\n\nНапример: "PROJECT_EX_NICK"\n\n{FF0000}Проверяйте каждый знак, чтобы не были проблемы", "Отправить", "Назад");
				SetPVarString(playerid,"WantNickChange", inputtext);
				mysql_query_string[0] = EOS;
				format(mysql_query_string,128, "SELECT `tName` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", inputtext);
				mysql_pquery(connects, mysql_query_string, "GrandChangeName", "d", playerid);
				return 1;
			}
			else
			{
				pc_cmd_donate(playerid);
			}
			return 1;
		}
		case 12954:
		{
			if(!response) return pc_cmd_donate(playerid);
			new moneys;
			if ( sscanf(inputtext,"i", moneys) )
			{
				format(stringer, 200, "{"#cWHITE"}Действующий тариф: {ffff00}'Русский стандарт' {"#cWHITE"}(1 к 5 донат-очкам)\n\nНа счету вашего аккаунта {ffff00}%d {"#cWHITE"}рублей\n\nМаксимально доступная выручка с обмена составляет %d донат-очков", p_info[playerid][pRouble], p_info[playerid][pRouble] * 5);
				return ShowPlayerDialog(playerid, 12954, DIALOG_STYLE_INPUT, "{ffff00}Донат | {baffc3}Конвертер донат-очков", stringer, "Далее", "Назад");
			}
			if(p_info[playerid][pRouble] < moneys) return SCM(playerid, CWHITE, "DONATE: Недостаточное количество рублей");
			if(moneys > 10000 || moneys < 1) return SCM(playerid, CWHITE, "Нельзя меньше 1 и больше 10000");
			p_info[playerid][tDonatemoney2] += moneys * 5;
			UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
			SCM(playerid, CWHITE, "DONATE: Ваш аккаунт успешно пополнен, для приобретения донат-средств (используйте - /donate)");
			p_info[playerid][pRouble] -= moneys;
			UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
			return 1;
		}
		case 12953:
		{
			if(!response) return pc_cmd_donate(playerid);
			new moneys;
			if(sscanf(inputtext,"i", moneys))
			{
				format(stringer, 200, "{"#cWHITE"}Действующий тариф: {ffff00}"NAME_TARIF" {"#cWHITE"}(1 к "ROUBLE_DOLLARS" $)\n\nНа счету вашего аккаунта {ffff00}%d {"#cWHITE"}рублей\n\nМаксимально доступная выручка с обмена составляет %d $", p_info[playerid][pRouble], p_info[playerid][pRouble]*ROUBLE_DOLLARS_INT);
				ShowPlayerDialog(playerid, 12953, DIALOG_STYLE_INPUT, "{ffff00}Донат | {baffc3}Конвертер виртуальных средств", stringer, "Далее", "Назад");
				return 1;
			}
			if(p_info[playerid][pRouble] < moneys) return SCM(playerid, CWHITE, "DONATE: Недостаточное количество рублей");
			if(moneys > 10000 || moneys < 1) return SCM(playerid, CWHITE, "Нельзя меньше 1 и больше 10000");
			p_info[playerid][pCash] += moneys * ROUBLE_DOLLARS_INT;
			UpdateMoney(playerid);
			SCM(playerid, CWHITE, "DONATE: Ваш аккаунт успешно пополнен");
			p_info[playerid][pRouble] -= moneys;
			UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
			return 1;
		}
		case 10057:
		{
			if(!response) return pc_cmd_mm(playerid);
			new price_money = (!listitem) ? (3000) : (listitem == 1) ? (6000) : (listitem == 2) ? (9000) : (listitem == 3) ? (6000) : (15000);
			new give_money = (!listitem) ? (990000) : (listitem == 1) ? (1990000) : (listitem == 2) ? (5990000) : (listitem == 3) ? (11990000) : (19990000);
			if(p_info[playerid][pRouble] < price_money)
			{
				format(stringer, 128, "Стоимость услуги: %i рублей",price_money);
				SendClientMessage(playerid, COLOR_GREY, stringer);
				pc_cmd_mm(playerid);
				return 1;
			}
			TransferMoney(playerid,p_info[playerid][pCash]+give_money,give_money,"купил деньги за донат-очки");
			p_info[playerid][pCash] += give_money;
			UpdateMoney(playerid);
			p_info[playerid][pRouble] -= price_money;
			UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
			return 1;
		}
		case 5559:
		{
			if(!response) return pc_cmd_donate(playerid);
			new price_vip = (listitem == 0) ? (50) : (listitem == 1) ? (100) : (listitem == 2) ? (150) : (listitem == 3) ? (200) : (listitem == 4) ? (250) : (-1);
			if ( price_vip == -1 ) return ShowVIPHelp(playerid) ;
			if(p_info[playerid][pRouble] < price_vip)
			{
				format(stringer, 128, "Стоимость услуги: %i рублей",price_vip);
				SendClientMessage(playerid, COLOR_GREY, stringer);
				pc_cmd_donate(playerid);
				return 1;
			}
			SendClientMessage(playerid,CGREEN, "Вы приобрели VIP-услугу");
			SendClientMessage(playerid, -1, (listitem == 0) ? ("Ваш статус: {00A388}VIP FIRST") : (listitem == 1) ? ("Ваш статус: {00A388}VIP SECOND") : (listitem == 2) ? ("Ваш статус: {00A388}VIP THIRD") : (listitem == 3) ? ("Ваш статус: {00A388}VIP FOURTH") : ("Ваш статус: {00A388}VIP FIFTH"));
			p_info[playerid][pRouble] -= price_vip;
			p_info[playerid][pDonateRank] = listitem + 1;
			UpdatePlayerData(playerid,"pDonateRank",p_info[playerid][pDonateRank]);
			UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
			return 1;
		}
	case 10059:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(p_info[playerid][tDonatemoney2] < 30) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 30 донат-очков.");
						p_info[playerid][pGunSkill][0] = 100;
						p_info[playerid][pGunSkill][1] = 100;
						p_info[playerid][pGunSkill][2] = 100;
						p_info[playerid][pGunSkill][3] = 100;
						p_info[playerid][pGunSkill][4] = 100;
						p_info[playerid][pGunSkill][5] = 100;
						UpdatePlayerData(playerid,"pSDPistol",p_info[playerid][pGunSkill][0]);
						UpdatePlayerData(playerid,"pDesertEagle",p_info[playerid][pGunSkill][1]);
						UpdatePlayerData(playerid,"pShotGun",p_info[playerid][pGunSkill][2]);
						UpdatePlayerData(playerid,"pMP5",p_info[playerid][pGunSkill][3]);
						UpdatePlayerData(playerid,"pAK47",p_info[playerid][pGunSkill][4]);
						UpdatePlayerData(playerid,"pM4",p_info[playerid][pGunSkill][5]);
						SCM(playerid, CWHITE, "DONATE: Вы получили все навыки оружия за {baffc3}30 {"#cWHITE"}донат-очков.");
						p_info[playerid][tDonatemoney2] -= 30;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);

						SetPlayerSkills(playerid);
					}
					case 1:
					{
						if(p_info[playerid][tDonatemoney2] < 30) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 30 донат-очков.");
						p_info[playerid][pDrugs] += 200;
						p_info[playerid][pMats] += 2500;
						UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
						UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);
						SCM(playerid, CWHITE, "DONATE: Вы получили 2,500 металла и 200 наркотиков за {baffc3}30 {"#cWHITE"}донат-очков.");
						p_info[playerid][tDonatemoney2] -= 30;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
					}
					case 2:
					{
						if(p_info[playerid][tDonatemoney2] < 30) return SCM(playerid, CWHITE, "DONATE: Стоимость услуги: 30 донат-очков.");
						p_info[playerid][pZakonp] = 100;
						UpdatePlayerData(playerid,"pZakonp",p_info[playerid][pZakonp]);
						SCM(playerid, CWHITE, "DONATE: Вы стали законопослушным гражданином за {baffc3}30 {"#cWHITE"}рублей.");
						p_info[playerid][tDonatemoney2] -= 30;
						UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
					}
				}
			}
			else pc_cmd_donate(playerid);
		}
		case 10060:
		{
			if(!response) return pc_cmd_donate(playerid);
			if(p_info[playerid][pRouble] < 150) return SendClientMessage(playerid,COLOR_GREY,"Стоимость услуги 150 рублей");
			SetPVarInt(playerid,"donate_listitem",listitem);
			ShowPlayerDialog(playerid,10061,DIALOG_STYLE_MSGBOX,"  ","Выберите какую машину вы хотите купить?","Вторую","Первую");
			return 1;
		}
		case 10061:
		{
			switch(GetPVarInt(playerid,"donate_listitem"))
			{
				case 0: PlayerCar[playerid][response] = 409;
				case 1: PlayerCar[playerid][response] = 447;
				case 2: PlayerCar[playerid][response] = 596;
				case 3: PlayerCar[playerid][response] = 470;
				case 4: PlayerCar[playerid][response] = 463;
				case 5: PlayerCar[playerid][response] = 490;
				case 6: PlayerCar[playerid][response] = 471;
				case 7: PlayerCar[playerid][response] = 437;
				case 8: PlayerCar[playerid][response] = 510;
				case 9: PlayerCar[playerid][response] = 487;
				case 10: PlayerCar[playerid][response] = 444;
				case 11: PlayerCar[playerid][response] = 514;
				case 12: PlayerCar[playerid][response] = 568;
				case 13: PlayerCar[playerid][response] = 571;
				case 14: PlayerCar[playerid][response] = 423;
				case 15: PlayerCar[playerid][response] = 483;
				case 16: PlayerCar[playerid][response] = 508;
				case 17: PlayerCar[playerid][response] = 531;
				case 18: PlayerCar[playerid][response] = 573;
				case 19: PlayerCar[playerid][response] = 504;
				case 20: PlayerCar[playerid][response] = 502;
				case 21: PlayerCar[playerid][response] = 503;
			}
			if(IsSellsCar(playerid, (!response) ? (1) : (2)) != -1) return SendClientMessage(playerid,COLOR_GREY,"Недоступно. Данный автомобиль продается");
			UpdatePlayerData(playerid,(!response) ? ("pCar") : ("pCar2"),PlayerCar[playerid][response]);
			p_info[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
			SendSucc(playerid, "Поздравляем, вы приобрели VIP-машину. Она у вас в гараже");
			SetVehicleToHouse(playerid, response + 1, true);
			DeletePVar(playerid,"donate_listitem");
			return 1;
		}
		case 9619:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[3][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,-1538.7625,488.0730,7.1797,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9620:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[1][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,1550.5873,-1676.3281,15.4782,30,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[21][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,674.4134,-599.1913,16.1859,30,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[10][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,-1568.0438,674.7668,7.1875,30,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[25][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,2487.7705,2769.0037,10.7820,30,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9621:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[26][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,623.3298,-1637.1558,16.3730,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[7][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,1481.9396,-1771.3960,13.5469,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9622:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 250, "{"#cORANGE"}1.{"#cWHITE"} %s\n{"#cORANGE"}2.{"#cWHITE"} %s", f_info[26][f_name], f_info[7][f_name]);
					ShowPlayerDialog(playerid, 9621, DIALOG_STYLE_LIST, "{ffff00}GPS - Правительство", stringer, "Выбрать", "Отмена");
				}
				case 1:
				{
					stringer[0] = EOS;
					format(stringer, 512, "{"#cORANGE"}1.{"#cWHITE"} %s\n{"#cORANGE"}2.{"#cWHITE"} %s\n{"#cORANGE"}3.{"#cWHITE"} %s\n{"#cORANGE"}4.{"#cWHITE"} %s", f_info[1][f_name],f_info[21][f_name],f_info[10][f_name],f_info[25][f_name]);
					ShowPlayerDialog(playerid, 9620, DIALOG_STYLE_LIST, "{ffff00}GPS - Министерство внутренних дел", stringer, "Выбрать", "Отмена");
				}
				case 2:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[10][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,288.4434,-1643.5240,33.3125,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3: ShowPlayerDialog(playerid, 9619, DIALOG_STYLE_LIST, "{ffff00}GPS - Министерство обороны", "{"#cORANGE"}1.{"#cWHITE"} Национальная Гвардия", "Выбрать", "Отмена");
				case 4:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[4][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,1187.5457,-1324.1946,13.5592,22,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 5:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[11][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,-2026.5245,-96.6737,35.1641,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9642:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[5][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 5 ] [ 0 ], frac_place_put [ 5 ] [ 1 ], frac_place_put [ 5 ] [ 2 ], 19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[6][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 6 ] [ 0 ], frac_place_put [ 6 ] [ 1 ], frac_place_put [ 6 ] [ 2 ],19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[14][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 14 ] [ 0 ], frac_place_put [ 14 ] [ 1 ], frac_place_put [ 14 ] [ 2 ],19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9643:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[18][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 18 ] [ 0 ], frac_place_put [ 18 ] [ 1 ], frac_place_put [ 18 ] [ 2 ],61,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[15][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 15 ] [ 0 ], frac_place_put [ 15 ] [ 1 ], frac_place_put [ 15 ] [ 2 ],62,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[12][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 12 ] [ 0 ], frac_place_put [ 12 ] [ 1 ], frac_place_put [ 12 ] [ 2 ],59,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[13][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 13 ] [ 0 ], frac_place_put [ 13 ] [ 1 ], frac_place_put [ 13 ] [ 2 ],60,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 4:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[17][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,frac_place_put [ 17 ] [ 0 ], frac_place_put [ 17 ] [ 1 ], frac_place_put [ 17 ] [ 2 ],58,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9644:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[16][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,1787.5613,-1291.7507,13.6130,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[23][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,-2484.8770,2402.8594,16.1649,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[24][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,690.5193,-476.9266,16.3359,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9645:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[7][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,1481.6715,-1743.1469,13.5469,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[11][f_name]);
					SendClientMessage(playerid,CORANGE,stringer);
					SetPlayerGPS(playerid,80,-2029.0027,-95.9474,35.1641,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					SendClientMessage(playerid,CORANGE,"Тюрьма Лос Сантос отмеченa меткой на мини-карте");
					SetPlayerGPS(playerid,80,1825.2490,-1538.4697,13.5469,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					SendClientMessage(playerid,CORANGE,"Банк Лос Сантос отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,1463.0807,-1021.3668,23.9861,52,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9646:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,CORANGE,"Мастерская LS отмеченa меткой на мини-карте");
					SetPlayerGPS(playerid,80,944.5289,-1738.4126,13.5546,27,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					SendClientMessage(playerid,CORANGE,"Мастерская SF отмеченa меткой на мини-карте");
					SetPlayerGPS(playerid,80,944.5289,-1738.4126,13.5546,27,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					SendClientMessage(playerid,CORANGE,"Мастерская LV отмеченa меткой на мини-карте");
					SetPlayerGPS(playerid,80,944.5289,-1738.4126,13.5546,27,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					SendClientMessage(playerid,CORANGE,"Автосалон (Эконом класс) отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,554.0256,-1287.5737,17.2482,55,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 4:
				{
					SendClientMessage(playerid,CORANGE,"Автосалон (Стандарт класс) отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-1969.9467,293.4651,35.1719,55,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 5:
				{
					SendClientMessage(playerid,CORANGE,"Автосалон (Спорт класс) отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,1661.6849,2195.1252,10.8203,55,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 6:
				{
					SendClientMessage(playerid,CORANGE,"Автосалон (Мото класс) отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,2128.9172,-1145.8602,24.6273,55,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9647:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,CORANGE,"Jizzy Club отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-2621.6013,1405.7349,7.1016,48,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					SendClientMessage(playerid,CORANGE,"Alhambra Club отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,1828.7570,-1683.5811,13.5469,48,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					SendClientMessage(playerid,CORANGE,"Mitsy Club отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-2246.1272,-88.1271,35.3203,48,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					SendClientMessage(playerid,CORANGE,"Pig Pen Club отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,2421.0645,-1226.5785,25.0291,48,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9648:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,CORANGE,"PaintBall отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,2689.2502,-1697.0194,10.1737,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					SendClientMessage(playerid,CORANGE,"Гонки отмечены меткой на мини-карте");
					SetPlayerGPS(playerid,80,1960.86, -2178.48, 13.55,53,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					SendClientMessage(playerid,CORANGE,"Казино 4 дракона отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,2019.4891,1007.6440,10.8203,44,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					SendClientMessage(playerid,CORANGE,"Казино 4 дракона отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-2141.7246,-438.2932,35.3359,53,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 4:
				{
					SendClientMessage(playerid,CORANGE,"Сёрфинг-клуб отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,391.9629,-1762.3689,7.9696,53,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 5:
				{
					/*new max_distance = 100000;
					new id_biz = -1;
					for ( new C = 0; C < MAX_BA_PLACES; C++ )
					{
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid,B_Place_Pos[C][4],B_Place_Pos[C][5],B_Place_Pos[C][6])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid),B_Place_Pos[C][4],B_Place_Pos[C][5],B_Place_Pos[C][6]));
						if(here_distance < max_distance)
						{
							id_biz = C;
							max_distance = here_distance;
						}
					}
					if(max_distance == 100000 || id_biz == -1) return 0;
					format(stringer,128,"Баскетбольное поле номер %d отмеченa меткой на мини-карте", id_biz);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,B_Place_Pos[id_biz][4],B_Place_Pos[id_biz][5],B_Place_Pos[id_biz][6],53,-1,MAPICON_GLOBAL_CHECKPOINT);*/
				}
			}
			return 1;
		}
		case 8772:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,CORANGE,"Шахта отмеченa меткой на мини-карте");
					SetPlayerGPS(playerid,80,-2365.99, -2194.26, 37.93,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 1:
				{
					SendClientMessage(playerid,CORANGE,"Сад отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-1059.4337,-1205.3889,129.2188,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 2:
				{
					SendClientMessage(playerid,CORANGE,"Лесопилка отмеченa меткой на мини-карте");
					SetPlayerGPS(playerid,80,-761.89, -135.24, 65.68,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 3:
				{
					SendClientMessage(playerid,CORANGE,"Оружейный завод отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-151.8914,-311.7426,1.4218,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 4:
				{
					SendClientMessage(playerid,CORANGE,"Ферма №0 отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-2.0922,60.7689,3.1172,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 5:
				{
					SendClientMessage(playerid,CORANGE,"Ферма №1 отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,-111.5278,8.4279,3.1172,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 6:
				{
					SendClientMessage(playerid,CORANGE,"Ферма №2 отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,1934.1910,170.7909,37.2752,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 7:
				{
					new max_distance = 100000;
					new id_vehicle = -1;
					new Float:player_pos[3];
					for(new v = 1; v < MAX_VEHICLES; v++)
					{
						if ( gVehicles[v-1][vJob] == 8 && gVehicles[v-1][vOccupied] == -1)
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
							{
								GetVehiclePos(GetPlayerVehicleID(playerid), player_pos[0], player_pos[1], player_pos[2]);
							}
							else
							{
								GetPlayerPos(playerid, player_pos[0], player_pos[1], player_pos[2]);
							}
							new here_distance = floatround(PointToPoint(player_pos[0], player_pos[1], player_pos[2], gVehicles[v-1][veSpawnX], gVehicles[v-1][veSpawnY], gVehicles[v-1][veSpawnZ]));
							if(here_distance < max_distance)
							{
								id_vehicle = v;
								max_distance = here_distance;
							}
						}
					}
					if(max_distance == -1 || id_vehicle == -1) return SendClientMessage(playerid, COLOR_GREY, "Автобусных парков рядом не обнаружено.");
					SendClientMessage(playerid, CORANGE, "Автобусный парк отмечен меткой на мини-карте");
					SetPlayerGPS(playerid,80,gVehicles[id_vehicle-1][veSpawnX], gVehicles[id_vehicle-1][veSpawnY], gVehicles[id_vehicle-1][veSpawnZ],47,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 8:
				{
					new max_distance = 100000;
					new id_vehicle = -1;
					new Float:player_pos[3];
					for(new v = 1; v < MAX_VEHICLES; v++)
					{
						if ( gVehicles[v-1][vJob] == 4 && gVehicles[v-1][vOccupied] == -1)
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
							{
								GetVehiclePos(GetPlayerVehicleID(playerid), player_pos[0], player_pos[1], player_pos[2]);
							}
							else
							{
								GetPlayerPos(playerid, player_pos[0], player_pos[1], player_pos[2]);
							}
							new here_distance = floatround(PointToPoint(player_pos[0], player_pos[1], player_pos[2], gVehicles[v-1][veSpawnX], gVehicles[v-1][veSpawnY], gVehicles[v-1][veSpawnZ]));
							if(here_distance < max_distance)
							{
								id_vehicle = v;
								max_distance = here_distance;
							}
						}
					}
					if(max_distance == -1 || id_vehicle == -1) return SendClientMessage(playerid, COLOR_GREY, "Стоянок такси рядом не обнаружено.");
					SendClientMessage(playerid, CORANGE, "Стоянка такси отмечена меткой на мини-карте");
					SetPlayerGPS(playerid,80,gVehicles[id_vehicle-1][veSpawnX], gVehicles[id_vehicle-1][veSpawnY], gVehicles[id_vehicle-1][veSpawnZ],47,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 9:
				{
					new max_distance = 100000;
					new id_vehicle = -1;
					new Float:player_pos[3];
					for(new v = 1; v < MAX_VEHICLES; v++)
					{
						if ( gVehicles[v-1][vJob] == 2 && gVehicles[v-1][vOccupied] == -1)
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
							{
								GetVehiclePos(GetPlayerVehicleID(playerid), player_pos[0], player_pos[1], player_pos[2]);
							}
							else
							{
								GetPlayerPos(playerid, player_pos[0], player_pos[1], player_pos[2]);
							}
							new here_distance = floatround(PointToPoint(player_pos[0], player_pos[1], player_pos[2], gVehicles[v-1][veSpawnX], gVehicles[v-1][veSpawnY], gVehicles[v-1][veSpawnZ]));
							if(here_distance < max_distance)
							{
								id_vehicle = v;
								max_distance = here_distance;
							}
						}
					}
					if(max_distance == -1 || id_vehicle == -1) return SendClientMessage(playerid, COLOR_GREY, "Стоянок механиков рядом не обнаружено.");
					SendClientMessage(playerid, CORANGE, "Стоянки механиков отмечены меткой на мини-карте");
					SetPlayerGPS(playerid,80,gVehicles[id_vehicle-1][veSpawnX], gVehicles[id_vehicle-1][veSpawnY], gVehicles[id_vehicle-1][veSpawnZ],47,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 10:
				{
					new max_distance = 100000;
					new id_vehicle = -1;
					new Float:player_pos[3];
					for(new v = 1; v < MAX_VEHICLES; v++)
					{
						if ( gVehicles[v-1][vJob] == 1 && gVehicles[v-1][vOccupied] == -1)
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
							{
								GetVehiclePos(GetPlayerVehicleID(playerid), player_pos[0], player_pos[1], player_pos[2]);
							}
							else
							{
								GetPlayerPos(playerid, player_pos[0], player_pos[1], player_pos[2]);
							}
							new here_distance = floatround(PointToPoint(player_pos[0], player_pos[1], player_pos[2], gVehicles[v-1][veSpawnX], gVehicles[v-1][veSpawnY], gVehicles[v-1][veSpawnZ]));
							if(here_distance < max_distance)
							{
								id_vehicle = v;
								max_distance = here_distance;
							}
						}
					}
					if(max_distance == -1 || id_vehicle == -1) return SendClientMessage(playerid, COLOR_GREY, "Машин для развозчиков продуктов рядом не обнаружено.");
					SendClientMessage(playerid, CORANGE, "Машины для развозчиков продуктов отмечены меткой на мини-карте");
					SetPlayerGPS(playerid,80,gVehicles[id_vehicle-1][veSpawnX], gVehicles[id_vehicle-1][veSpawnY], gVehicles[id_vehicle-1][veSpawnZ],47,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 11:
				{
					new max_distance = 100000;
					new id_vehicle = -1;
					new Float:player_pos[3];
					for(new v = 1; v < MAX_VEHICLES; v++)
					{
						if ( gVehicles[v-1][vJob] == 3 && gVehicles[v-1][vOccupied] == -1)
						{
							if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
							{
								GetVehiclePos(GetPlayerVehicleID(playerid), player_pos[0], player_pos[1], player_pos[2]);
							}
							else
							{
								GetPlayerPos(playerid, player_pos[0], player_pos[1], player_pos[2]);
							}
							new here_distance = floatround(PointToPoint(player_pos[0], player_pos[1], player_pos[2], gVehicles[v-1][veSpawnX], gVehicles[v-1][veSpawnY], gVehicles[v-1][veSpawnZ]));
							if(here_distance < max_distance)
							{
								id_vehicle = v;
								max_distance = here_distance;
							}
						}
					}
					if(max_distance == -1 || id_vehicle == -1) return SendClientMessage(playerid, COLOR_GREY, "Машин для развозчиков топлива рядом не обнаружено.");
					SendClientMessage(playerid, CORANGE, "Машины для развозчиков топлива отмечены меткой на мини-карте");
					SetPlayerGPS(playerid,80,gVehicles[id_vehicle-1][veSpawnX], gVehicles[id_vehicle-1][veSpawnY], gVehicles[id_vehicle-1][veSpawnZ],47,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 8771:
		{
			if(!response) return pc_cmd_gps(playerid);
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,CORANGE,"Marigold отмечен(-а) меткой на мини-карте");
					SetPlayerGPS(playerid,80,1307.2302,-1374.5427,13.6293,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
			}
			return 1;
		}
		case 9624:
		{
			if(!response) return 1;//
			switch(listitem)
			{
				case 0:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 13) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					format(stringer,128,"%s отмеченa меткой на мини-карте",Business[id_biz][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[id_biz][PickupEnterX],Business[id_biz][PickupEnterY],Business[id_biz][PickupEnterZ],47,-1,MAPICON_GLOBAL_CHECKPOINT);
					return 1;
				}
				case 1:
				{
					stringer[0] = EOS;
					format(stringer,512,""ORG"1.{"#cWHITE"} %s\n"ORG"2.{"#cWHITE"} %s\n"ORG"3.{"#cWHITE"} Тюрьма Лос Сантос\n"ORG"4.{"#cWHITE"} Банк Лос Сантос",f_info[7][f_name],f_info[11][f_name]);
					ShowPlayerDialog(playerid, 9645, DIALOG_STYLE_LIST, "{ffff00}GPS - Важные места", stringer, "Выбрать", "Назад");
				}
				case 2: ShowPlayerDialog(playerid, 8772, DIALOG_STYLE_LIST, "{ffff00}GPS - Работы", "{"#cORANGE"}1.{"#cWHITE"} Шахта\n{"#cORANGE"}2.{"#cWHITE"} Сад\n{"#cORANGE"}3.{"#cWHITE"} Лесопилка\n{"#cORANGE"}4.{"#cWHITE"} Оружейный завод\n{"#cORANGE"}5.{"#cWHITE"} Ферма №1\n{"#cORANGE"}6.{"#cWHITE"} Ферма №2\n{"#cORANGE"}7.{"#cWHITE"} Ферма №3\n{"#cORANGE"}8. {"#cWHITE"}Автобусный парк\n{"#cORANGE"}9. {"#cWHITE"}Стоянка такси\n{"#cORANGE"}10. {"#cWHITE"}Стоянка механиков\n\
				{"#cORANGE"}11. {"#cWHITE"}Машины для развозки продуктов\n{"#cORANGE"}12. {"#cWHITE"}Машины для развозки топлива", "Выбрать", "Назад");
				case 3:
				{
					stringer[0] = EOS;
					format(stringer,512,"{"#cORANGE"}1.{"#cWHITE"} Правительство\n{"#cORANGE"}2.{"#cWHITE"} Министерство Внутренних Дел\n{"#cORANGE"}3.{"#cWHITE"} %s\n{"#cORANGE"}4.{"#cWHITE"} %s\n{"#cORANGE"}5.{"#cWHITE"} %s\n{"#cORANGE"}6.{"#cWHITE"} %s",f_info[2][f_name],f_info[3][f_name],f_info[4][f_name],f_info[11][f_name]);
					ShowPlayerDialog(playerid, 9622, DIALOG_STYLE_LIST, "{ffff00}GPS - Государственные службы", stringer, "Выбрать", "Назад");
				}//f_info[25][f_name]
				case 4: ShowPlayerDialog(playerid, 9642, DIALOG_STYLE_LIST, "{ffff00}GPS - Мафии", "{"#cORANGE"}1.{"#cWHITE"} La Cosa Nostra\n{"#cORANGE"}2.{"#cWHITE"} Yakuza\n{"#cORANGE"}3.{"#cWHITE"} Русская мафия", "Выбрать", "Назад");
				case 5: ShowPlayerDialog(playerid, 9643, DIALOG_STYLE_LIST, "{ffff00}GPS - Банды", "{"#cORANGE"}1.{"#cWHITE"} The Rifa Gang\n{"#cORANGE"}2.{"#cWHITE"} Grove Street Gang\n{"#cORANGE"}3.{"#cWHITE"} The Ballas Gang\n{"#cORANGE"}4.{"#cWHITE"} Los Santos Vagos Gang\n{"#cORANGE"}5.{"#cWHITE"} Varios Los Aztecas Gang", "Выбрать", "Назад");
				case 6: ShowPlayerDialog(playerid, 9644, DIALOG_STYLE_LIST, "{ffff00}GPS - Бизнес организации", "{"#cORANGE"}1.{"#cWHITE"} SA News\n{"#cORANGE"}2.{"#cWHITE"} Кладбище\n{"#cORANGE"}3.{"#cWHITE"} Warlock MC", "Выбрать", "Назад");
				case 7: ShowPlayerDialog(playerid, 9646, DIALOG_STYLE_LIST, "{ffff00}GPS - Автосалоны/Мастерские", "{"#cORANGE"}1.{"#cWHITE"} Мастерская LS\n{"#cORANGE"}2.{"#cWHITE"} Мастерская SF\n{"#cORANGE"}3.{"#cWHITE"} Мастерская LV\n{"#cORANGE"}4.{"#cWHITE"} Автосалон (Эконом класс)\n{"#cORANGE"}5.{"#cWHITE"} Автосалон (Стандарт класс)\n{"#cORANGE"}6.{"#cWHITE"} Автосалон (Спорт класс)\n{"#cORANGE"}7.{"#cWHITE"} Автосалон (Мото класс)", "Выбрать", "Назад");
				case 8: ShowPlayerDialog(playerid, 9647, DIALOG_STYLE_LIST, "{ffff00}GPS - Клубы", "[1] > Jizzy Club\n[2] > Alhambra Club\n[3] > Mitsy Club\n[4] > Pig Pen Club", "Выбрать", "Назад");
				case 9: ShowPlayerDialog(playerid, 9648, DIALOG_STYLE_LIST, "{ffff00}GPS - Развлечения", "{"#cORANGE"}1.{"#cWHITE"} PaintBall\n{"#cORANGE"}2.{"#cWHITE"} Гонки\n{"#cORANGE"}3.{"#cWHITE"} Казино 4 дракона\n{"#cORANGE"}4.{"#cWHITE"} Футбольный стадион\n{"#cORANGE"}5.{"#cWHITE"} Сёрфинг-Клуб\n{"#cORANGE"}6.{"#cWHITE"} Баскетбол\n", "Выбрать", "Назад");//843.0797,-2065.4934,12.8672
				case 10:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 10) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9649, DIALOG_STYLE_LIST, "{ffff00}GPS - Магазины оружия", stringer, "Выбрать", "Назад");
				}
				case 11:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 11) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9650, DIALOG_STYLE_LIST, "{ffff00}GPS - Магазины одежды", stringer, "Выбрать", "Назад");
				}
				case 12:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 4) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9651, DIALOG_STYLE_LIST, "{ffff00}GPS - Бар", stringer, "Выбрать", "Назад");
				}
				case 13:
				{
					SendClientMessage(playerid,CORANGE,"Место добычи металл/патрон отмеченo меткой на мини-карте");
					SetPlayerGPS(playerid,80,-1742.7588,29.1501,3.5547,19,-1,MAPICON_GLOBAL_CHECKPOINT);
				}
				case 14:
				{
					ShowPlayerDialog(playerid,8771,DIALOG_STYLE_LIST,"{ffff00}GPS - Отели", "{"#cWHITE"}Marigold", "Выбрать", "Назад");
				}
				case 15:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 14) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9652, DIALOG_STYLE_LIST, "{ffff00}GPS - Риэлторские агенства", stringer, "Выбрать", "Назад");
				}
				case 16:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 15) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "{ffff00}GPS - Салоны связи", stringer, "Выбрать", "Назад");
				}
				case 17:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 16) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9654, DIALOG_STYLE_LIST, "{ffff00}GPS - Спортивные залы", stringer, "Выбрать", "Назад");
				}
				case 18:
				{
					stringer[0] = EOS;
					new count_ammo = 1;
					for(new i=0; i<CountBusiness; i++)
					{
						if(Business[i][bType] != 18) continue;
						format(stringer,(count_ammo*80),"%s{"#cORANGE"}%d.{"#cWHITE"} %s\n",stringer,count_ammo,Business[i][BizName]);
						count_ammo++;
					}
					ShowPlayerDialog(playerid, 9655, DIALOG_STYLE_LIST, "{ffff00}GPS - Магазины мебели", stringer, "Выбрать", "Назад");
				}
			}
		}
		case 9655:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 18) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмечен(-а) меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],51,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case 9654:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 16) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмечен(-а) меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],54,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case 9653:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 15) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмечен(-а) меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],42,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case 9652:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 14) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмечен(-а) меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],34,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case 9651:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 4) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмечен(-а) меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],49,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case 9650:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 11) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмечен(-а) меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],45,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case 9649:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1;
			for(new i=0; i<CountBusiness; i++)
			{
				if(Business[i][bType] != 10) continue;
				if((count_ammo-1) == listitem)
				{
					format(stringer,128,"%s отмеченa меткой на мини-карте",Business[i][BizName]);
					SendClientMessage(playerid, CORANGE, stringer);
					SetPlayerGPS(playerid,80,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ],6,-1,MAPICON_GLOBAL_CHECKPOINT);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case dAdmCommun:
		{
			if ( ! response )return ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{"#cWHITE"}Меню игрока", "{"#cORANGE"}1.{"#cWHITE"} Личные настройки\n{"#cORANGE"}2.{"#cWHITE"} Статистика игрока\n{"#cORANGE"}3.{"#cWHITE"} Список команд\n{"#cORANGE"}4.{"#cWHITE"} Связь с администрацией\n{"#cORANGE"}5.{"#cWHITE"} Безопасность\n{"#cORANGE"}6.{"#cWHITE"} Донат\n{"#cORANGE"}7.{"#cWHITE"} Доступ к игре\n{"#cORANGE"}8.{"#cWHITE"} Смена нонРП ника", "Ок", "Выход");
			if ( listitem == 0 )
			{
				if(p_info[playerid][pMuteTime] > 0) return SCM(playerid, COLOR_LIGHTRED, "У вас затычка");
				if(GetPVarInt(playerid,"pReportTime") > unix) return SCM(playerid, COLOR_GREY, "Подождите немного ...");
				stringer[0] = EOS;
				strcat(stringer, "{ffffff}[!] Вы собираетесь написать в сообщение Администрации.");
				strcat(stringer, "\n[!] Перед тем как отправить сообщение убедитесь,");
				strcat(stringer, "\n[!] что не один из пунктов помощи не дал Вам ответа на Ваш вопрос.");
				strcat(stringer, "\n\n{ff0000}[!] Запрещено:");
				strcat(stringer, "\n[!] 1. Флуд, оскорбление, оффтоп.");
				strcat(stringer, "\n[!] 2. Просьбы (Дайте денег, дайте лидерку , дайте дайте..)");
				strcat(stringer, "\n[!] 3. Ложные сообщения.");
				strcat(stringer, "\n\n{cd5c5c}[!] За нарушения правил администрация может:");
				strcat(stringer, "\n[!] 1. Предупредить (Warn)");
				strcat(stringer, "\n[!] 2. Выкинуть из сервера (Kick)");
				strcat(stringer, "\n[!] 3. Заблокировать аккаунт (Ban)");
				strcat(stringer, "\n[!] 4. Удалить аккаунт (Dell)");
				strcat(stringer, "\n\n{50c878}[!] Помните.");
				strcat(stringer, "\n[!] Мы всегда готовы помочь если вы соблюдаете правила.");
				strcat(stringer, "\n[!] Данные правила установлены для всех игроков проекта.");
				strcat(stringer, "\n\n{ffffff}[!] Если Вам долго не отвечают, подождите пару минут, вы не один на сервере.");
				strcat(stringer, "\n[!] Спасибо за понимание, c уважением администрация сервера.");
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "{ffff00}Отправить жалобу", stringer, "Отправить", "Назад");
				SetPVarInt ( playerid, "adm_msg_type", 1 ) ;
				return 1 ;
			}
			else if ( listitem == 1 )
			{
				if(p_info[playerid][pMuteTime] > 0) return SCM(playerid, COLOR_LIGHTRED, "У вас затычка");
				if(GetPVarInt(playerid,"pReportTime") > unix) return SCM(playerid, COLOR_GREY, "Подождите немного ...");
				stringer[0] = EOS;
				strcat(stringer, "{ffffff}[!] Вы собираетесь написать в сообщение Администрации.");
				strcat(stringer, "\n[!] Перед тем как отправить сообщение убедитесь,");
				strcat(stringer, "\n[!] что не один из пунктов помощи не дал Вам ответа на Ваш вопрос.");
				strcat(stringer, "\n\n{ff0000}[!] Запрещено:");
				strcat(stringer, "\n[!] 1. Флуд, оскорбление, оффтоп.");
				strcat(stringer, "\n[!] 2. Просьбы (Дайте денег, дайте лидерку , дайте дайте..)");
				strcat(stringer, "\n[!] 3. Ложные сообщения.");
				strcat(stringer, "\n\n{cd5c5c}[!] За нарушения правил администрация может:");
				strcat(stringer, "\n[!] 1. Предупредить (Warn)");
				strcat(stringer, "\n[!] 2. Выкинуть из сервера (Kick)");
				strcat(stringer, "\n[!] 3. Заблокировать аккаунт (Ban)");
				strcat(stringer, "\n[!] 4. Удалить аккаунт (Dell)");
				strcat(stringer, "\n\n{50c878}[!] Помните.");
				strcat(stringer, "\n[!] Мы всегда готовы помочь если вы соблюдаете правила.");
				strcat(stringer, "\n[!] Данные правила установлены для всех игроков проекта.");
				strcat(stringer, "\n\n{ffffff}[!] Если Вам долго не отвечают, подождите пару минут, вы не один на сервере.");
				strcat(stringer, "\n[!] Спасибо за понимание, c уважением администрация сервера.");
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "{ffff00}Задать вопрос", stringer, "Отправить", "Назад");
				SetPVarInt ( playerid, "adm_msg_type", 2 ) ;
				return 1 ;
			}
		}
		case 9623:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowSettings(playerid);
					case 1: ShowStats(playerid,playerid);
					case 2: ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "{"#cWHITE"}Команды сервера", "{"#cORANGE"}1.{"#cWHITE"} Обычные\n{"#cORANGE"}2.{"#cWHITE"} Чат\n{"#cORANGE"}3.{"#cWHITE"} Телефон\n{"#cORANGE"}4.{"#cWHITE"} Работа\n{"#cORANGE"}5.{"#cWHITE"} Фракция\n{"#cORANGE"}6.{"#cWHITE"} Лидерам\n{"#cORANGE"}7.{"#cWHITE"} Дом\n{"#cORANGE"}8.{"#cWHITE"} Бизнес\n{"#cORANGE"}9.{"#cWHITE"} Автомобиль\n{"#cORANGE"}10.{"#cWHITE"} Семья", "Выбрать", "Отмена");
					case 3: ShowPlayerDialog(playerid, dAdmCommun, DIALOG_STYLE_LIST, "{ffff00}Связь с администрацией", "{"#cORANGE"}1.{"#cWHITE"} Отправить жалобу\n{"#cORANGE"}2.{"#cWHITE"} Задать вопрос", "Далее", "Назад");
					case 4: ShowPlayerDialog(playerid,118,2,"Безопасность",""ORG"1.{"#cWHITE"} Изменить пароль\n"ORG"2.{"#cWHITE"} Защитный код\n"ORG"3.{"#cWHITE"} Активировать и установить ключ защиты по IP-адресу\n"ORG"4.{"#cWHITE"} Деактивировать защиту по IP-адресу\n"ORG"5.{"#cWHITE"} Потверждение EMAIL","Выбрать","Назад");
					case 5: pc_cmd_donate(playerid);
					case 6: ShowPlayerDialog(playerid,9894,DIALOG_STYLE_LIST,"Доступ к игре",""ORG"1.{"#cWHITE"} Подать заявку на снятие предупреждения\n"ORG"2.{"#cWHITE"} Смена стиля походки\n"ORG"3.{"#cWHITE"} Смена стиля разговора\n"ORG"4.{"#cWHITE"} Аксессуары","Выбрать","Отмена");
					case 7:
					{
						if(p_info[playerid][pPbiskey] > 0) return SendClientMessage(playerid,COLOR_GREY,"Владельцам бизнеса запрещенно менять ники");
						ShowPlayerDialog(playerid, dChangeName, DIALOG_STYLE_INPUT, ""ORG"Смена ника", "{"#cWHITE"}Используйте желаемый ник для вашего персонажа\nПример: "ORG"Имя_Фамилия","Далее","Назад");
					}
				}
			}
			else return 1;
		}
	case dChangeName:
		{
			if(!response) return pc_cmd_mm(playerid);

			if(!IsARPName(NamePlayer [ playerid ])) return SendClientMessage ( playerid, COLOR_GREY , "У вас рп ник" ) ;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dChangeName, DIALOG_STYLE_INPUT, "Смена ника", "Используйте желаемый ник для вашего персонажа\nПример: Имя_Фамилия","Далее","Закрыть");
			if(!IsARPName(inputtext)) return ShowPlayerDialog(playerid, dChangeName, DIALOG_STYLE_INPUT, "Смена ника", "Используйте желаемый ник для вашего персонажа\nПример: Имя_Фамилия","Далее","Закрыть");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 22) return ShowPlayerDialog(playerid, dChangeName, DIALOG_STYLE_INPUT, "Смена ника", "Используйте желаемый ник для вашего персонажа\nПример: Имя_Фамилия","Далее","Закрыть");
			SetPVarString(playerid,"WantNickChange", inputtext);
			mysql_query_string[0] = EOS;
			format(mysql_query_string,128, "SELECT `tName` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", inputtext);
			mysql_pquery(connects, mysql_query_string,  "CallChangeName", "d", playerid);
			return 1;
		}
		case dHelperStat:
		{
			if(!response) return DeletePVar(playerid,"hstats");
			new helperid = GetPVarInt(playerid,"hstats");
			HelperStat[helperid][listitem] = 0;

			format(stringer,450,"{"#cORANGE"}Вопросов принято: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Отвечено: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}PayDay отыграно: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Сменил скин: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n",
			HelperStat[helperid][0],HelperStat[helperid][1],HelperStat[helperid][2],HelperStat[helperid][3]);
			ShowPlayerDialog(playerid,dHelperStat,DIALOG_STYLE_TABLIST,NamePlayer[params[0]],stringer,"Выбрать","Закрыть");

			SetPVarInt(playerid,"hstats",helperid);
			return 1;
		}
		case dStat:
		{
			if(!response) return DeletePVar(playerid,"admstat");
			new adminid = GetPVarInt(playerid,"admstat");
			gAdmin[adminid][listitem] = 0;

			format(stringer,450,"{"#cORANGE"}Киков: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Банов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Мутов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Ответов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Варнов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Джайлов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]",gAdmin[adminid][0],gAdmin[adminid][1],gAdmin[adminid][2],gAdmin[adminid][3],gAdmin[adminid][4],gAdmin[adminid][5]);
			ShowPlayerDialog(playerid,dStat,DIALOG_STYLE_TABLIST,NamePlayer[adminid],stringer,"Выбрать","Закрыть");

			SetPVarInt(playerid,"admstat",adminid);
			return 1;
		}
		case 669:
		{
			if(response) return 1;
			else return ShowPlayerDialog(playerid,118,2,"Безопасность",""ORG"1.{"#cWHITE"} Изменить пароль\n"ORG"2.{"#cWHITE"} Защитный код\n"ORG"3.{"#cWHITE"} Активировать и установить ключ защиты по IP-адресу\n"ORG"4.{"#cWHITE"} Деактивировать защиту по IP-адресу\n"ORG"5.{"#cWHITE"} Потверждение EMAIL","Выбрать","Назад");
		}
		case 663:
		{
			if(!response) return pc_cmd_mm(playerid);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,663,DIALOG_STYLE_INPUT,"Безопасность по IP-адресу","Используйте ваш новый ключ:\n\n\n- не используйте русские буквы\n- ключ не должен совпадать с паролем от аккаунта\n- длина ключа должна быть от 6 до 15 символов","Готово","Назад");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 16) return ShowPlayerDialog(playerid,663,DIALOG_STYLE_MSGBOX, "Ошибка!", "{FF6347}Длина ключа должна быть от 6 до 15 символов", "Повтор", "");
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					{
						ShowPlayerDialog(playerid,663,DIALOG_STYLE_MSGBOX,"{00FF00}Ошибка!","Введенный вами пароль содержит русские буквы.\nСмените раскладку клавиатуры!","Повтор","");
						return 1;
					}
				}
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string,200,"UPDATE `accounts` SET `pSuperKey` = '%s' WHERE `tName` = '%s' LIMIT 1", (inputtext), NamePlayer[playerid]);
			mysql_pquery(connects,mysql_query_string);
			p_info[playerid][pCheckKey] = 1;
			UpdatePlayerData(playerid,"pCheckKey",p_info[playerid][pCheckKey]);
			format(stringer, 128, "Защита по IP-адресу включена. Действующий ключ: %s", inputtext);
			SCM(playerid, CYELLOW, stringer);
			SCM(playerid, 0x09B000AA,"Мы рекомендуем вам сделать скриншот. Клавиша F8");
			return 1;
		}
		case dEnterCode:
		{
			new code[65];
			GetPVarString(playerid,"SCode", code, 64);
			if(!response && !IsBotServer(playerid))
			{
				if(LOG_KICK)
					print ("dEnterCode Kick()");
				Kick(playerid);
			}
			else if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid, dEnterCode, DIALOG_STYLE_PASSWORD, "Безопасность", "Пожалуйста Используйте защитный код:", "Далее", "Отмена");
			}
			else if(strcmp(code, inputtext, false))
			{
				if(GetPVarInt(playerid, "wrongPass!") == 3)
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX,"{D95A41}Внимание","{D95A41} Вы были кикнуты с сервера\n Используйте \"/q\", Чтобы выйти","Закрыть","");
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					KickEx(playerid);
				}
				SetPVarInt(playerid, "wrongPass!", GetPVarInt(playerid, "wrongPass!")+1);
				format(stringer, 128, "Пожалуйста Используйте защитный код:\n{D95A41}Вы ввели неверный код! (%d/3)",3-GetPVarInt(playerid, "wrongPass!"));
				ShowPlayerDialog(playerid, dEnterCode, DIALOG_STYLE_PASSWORD, "Безопасность", stringer, "Далее", "Отмена");
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			}
			else
			{
				SetPVarInt(playerid,"Check_Code",1);
				AC_TogglePlayerControllable(playerid,false);
				if ( biz_war_gangzone != -1 ) GangZoneShowForPlayer ( playerid, biz_war_gangzone, GetColor( MZInfo [ bFrakVlad ] ) ) ;
				GangZoneShowForPlayer(playerid, Army, 0xCF4F2DBB);
				SetPlayerAuthorized(playerid, PLAYER_ONLINE);
				if((GetPVarFloat(playerid,"e_X")!=CameraPosJoin[0][2][0] && GetPVarFloat(playerid,"e_X")!=CameraPosJoin[1][2][0] && GetPVarFloat(playerid,"e_X")!=CameraPosJoin[2][2][0]) && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0) ShowPlayerDialog(playerid, dEPLAYER, DIALOG_STYLE_MSGBOX, ""ORG"Вернуться", "{"#cWHITE"}Вы хотите вернуться на ту позицию, где вы вышли из игры?", "Да", "Нет");
				else SpawnPlayer(playerid);
				DeletePVar(playerid,"request_use");
				DeletePVar(playerid,"Logged");
			}
		}
		case dChangeCode:
		{
			if(!response) return ShowPlayerDialog(playerid,118,2,"Безопасность",""ORG"1.{"#cWHITE"} Изменить пароль\n"ORG"2.{"#cWHITE"} Защитный код\n"ORG"3.{"#cWHITE"} Активировать и установить ключ защиты по IP-адресу\n"ORG"4.{"#cWHITE"} Деактивировать защиту по IP-адресу\n"ORG"5.{"#cWHITE"} Потверждение EMAIL","Выбрать","Назад");
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dCode, DIALOG_STYLE_PASSWORD, "Защитный код:", "|                                      Используйте ваш новый защитный код                                       |","Далее","Отмена");
				case 1:
				{
					DeletePVar(playerid,"SCode");
					SendSucc(playerid, "Защитный код отключен");

					mysql_query_string[0] = EOS;
					format(mysql_query_string,200,"UPDATE `accounts` SET `SCode` = '0' WHERE `tName` = '%s'",NamePlayer[playerid]);
					mysql_pquery(connects,mysql_query_string);
				}
			}
		}
		case dCode:
		{
			if(!response) return 1;
			if(strlen(inputtext)>63 || !strlen(inputtext)) return ShowPlayerDialog(playerid, dCode, DIALOG_STYLE_PASSWORD, "Защитный код:", "|                                      Используйте ваш новый защитный код                                       |","Далее","Отмена");

			format(stringer,128,"Ваш новый защитный код: %s. Он будет запрашиваться при входе",(inputtext));
			SCM(playerid, CWHITE,stringer);

			mysql_query_string[0] = EOS;
			format(mysql_query_string,200,"UPDATE `accounts` SET `SCode` = '%s' WHERE `tName` = '%s'",(inputtext),NamePlayer[playerid]);
			mysql_pquery(connects,mysql_query_string);
			return 1;
		}
		case 8005:
		{
			if(response) return true;
			ShowPlayerDialog(playerid,8006, DIALOG_STYLE_LIST, "Безопасность аккаунта", "- Изменить пароль\n- Активировать и установить ключ защиты по IP-адресу\n- Деактивировать защиту по IP-адресу\n- Подтвердить электронный адрес", "Выбрать", "Назад");
		}
		case 8006:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,155,DIALOG_STYLE_PASSWORD,"Смена пароля","|                                      Используйте свой старый пароль                                        |", "Готово", "Отмена");
				case 1:
				{
					if(p_info[playerid][pCheckKey] == 0)
					{
						ShowPlayerDialog(playerid,663,DIALOG_STYLE_INPUT,"Безопасность по IP-адресу","{"#cWHITE"}Используйте ваш новый ключ:\n\n- не используйте русские буквы\n- ключ не должен совпадать с паролем от аккаунта\n- длина ключа должна быть от 6 до 15 символов","Готово","Назад");
						return 1;
					}
					else SendErr(playerid, "У вас уже активирована защита по IP-адресу");
				}
				case 2:
				{
					if(p_info[playerid][pCheckKey] == 1)
					{
						p_info[playerid][pCheckKey] = 0;
						UpdatePlayerData(playerid,"pCheckKey",p_info[playerid][pCheckKey]);
						SCM(playerid, COLOR_LIGHTRED, "Вы отключили проверку по IP-адресу, Ваш аккаунт под угрозой взлома злоумышленниками");
						return 1;
					}
					else SCM(playerid, COLOR_LIGHTRED, "[Ошибка!] У вас не активирована защита по IP-адресу");
				}
				case 3: ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "E-Mail", "{FFFFFF}Используйте Ваш действующий электронный адрес:", "Далее","Назад");
			}
		}
		case 118:
		{
			if(!response) return pc_cmd_mm(playerid);
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,155,DIALOG_STYLE_PASSWORD,"Смена пароля","|                                      Используйте свой старый пароль                                        |", "Готово", "Отмена");
				case 1:
				{
					new code[65];
					GetPVarString(playerid,"SCode", code, 64);
					if(!strcmp(code, "0", true))
					{
						ShowPlayerDialog(playerid, dCode, DIALOG_STYLE_PASSWORD, "Защитный код:", "|                                      Используйте ваш защитный код                                        |","Далее","Отмена");
					}
					else ShowPlayerDialog(playerid, dChangeCode, DIALOG_STYLE_LIST, "Защитный код:","Сменить код\nОтключить код","Выбрать", "Назад");
				}
				case 2:
				{
					if(p_info[playerid][pCheckKey] == 0)
					{
						ShowPlayerDialog(playerid,663,DIALOG_STYLE_INPUT,"Безопасность по IP-адресу","{"#cWHITE"}Используйте ваш новый ключ:\n\n- не используйте русские буквы\n- ключ не должен совпадать с паролем от аккаунта\n- длина ключа должна быть от 6 до 15 символов","Готово","Назад");
						return 1;
					}
					else SendErr(playerid, "У вас уже активирована защита по IP-адресу");
					return 1;
				}
				case 3:
				{
					if(p_info[playerid][pCheckKey] == 1)
					{
						p_info[playerid][pCheckKey] = 0;
						UpdatePlayerData(playerid,"pCheckKey",p_info[playerid][pCheckKey]);
						SCM(playerid, COLOR_LIGHTRED, "Вы отключили проверку по IP-адресу, Ваш аккаунт под угрозой взлома злоумышленниками");
						return 1;
					}
					else SendErr(playerid, "У вас не активирована защита по IP-адресу");
					return 1;
				}
				case 4:
				{
					if(strfind(Email[playerid], "@", false) != -1 && strfind(Email[playerid], ".", false) != -1) return SendClientMessage(playerid,COLOR_GREY,"У вас подтвержден EMAIL !");
					ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{"#cWHITE"}Потверждение EMAIL", "{"#cWHITE"}Используйте свой EMAIL в поле ниже", "Ввод","Закрыть");
					return 1;
				}
				case 5:
				{
					new code[65];
					GetPVarString(playerid,"SCode", code, 64);
					stringer[0] = EOS;
					format(stringer,1000,"%sПотверждение E-Mail: %s{"#cWHITE"}",stringer,(strfind(Email[playerid], "@", false) != -1 && strfind(Email[playerid], ".", false) != -1) ? ("{00b953}Включено"):("{ff0000}Отключено"));
					format(stringer,1000,"%sЗащитный код: %s{"#cWHITE"}",stringer,(strcmp(code,"0",false)) ? ("{00b953}Включено"):("{ff0000}Отключено"));
				}
			}
		}
		case dMail:
		{
			if(!response) return 1;
			if(strlen(inputtext)>63 || !strlen(inputtext) || strfind(inputtext, "@", false) == -1 || strfind(inputtext, ".", false) == -1) return ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{"#cWHITE"}Потверждение EMAIL", "{"#cWHITE"}Используйте свой EMAIL в поле ниже", "Ввод","Закрыть");
			new	code = RandomEx(10000,99999);
			stringer[0] = EOS;
			format(stringer,300,"%s?authkey=%s&email=%s&code=%d",EMAIL_ACTIVE,EMAIL_AUTHKEY,inputtext,code);
			new result = HTTP(0,HTTP_HEAD,stringer,"","");
			SetPVarInt(playerid,"authcode",code);
			SetPVarString(playerid,"newemail",inputtext);
			if(!result) return SendClientMessage(playerid,COLOR_GREY,"Произошла ошибка при http запросе");
			ShowPlayerDialog(playerid, dMailAction, DIALOG_STYLE_INPUT, "{"#cWHITE"}Потверждение EMAIL", "{"#cWHITE"}Используйте сюда код который вам пришёл на почту", "Ввод","Закрыть");
			return 1;
		}
		case dMailAction:
		{
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, dMailAction, DIALOG_STYLE_INPUT, "{"#cWHITE"}Потверждение EMAIL", "{"#cWHITE"}Используйте сюда код который вам пришёл на почту", "Ввод","Закрыть");
			if(GetPVarInt(playerid,"authcode") != strval(inputtext)) return ShowPlayerDialog(playerid, dMailAction, DIALOG_STYLE_INPUT, "{"#cWHITE"}Потверждение EMAIL", "{"#cWHITE"}Используйте сюда код который вам пришёл на почту\n\n{ffff00}Неверный код, повторите попытку ввода", "Ввод","Закрыть");
			new get_email[64+1];
			GetPVarString(playerid, "newemail", get_email, 63);
			strmid(Email[playerid],get_email,0,strlen(get_email),63);
			format(stringer,128,"Ваш новый E-Mail: {"#cWHITE"}%s",Email[playerid]);
			SendClientMessage(playerid,0x00b953ff,stringer);
			SendClientMessage(playerid,0x00b953ff,"Поздравляем вы успешно потвердили ваш E-Mail!");

			mysql_query_string[0] = EOS;
			format(mysql_query_string,300,"UPDATE `accounts` SET `pEmail` = '%s' WHERE `tName` = '%s' LIMIT 1",Email[playerid],NamePlayer[playerid]);
			mysql_pquery(connects, mysql_query_string, "","");


			DeletePVar(playerid,"authcode");
			DeletePVar(playerid,"newemail");
			return 1;
		}
	case 3130:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: format(stringer,64, "Баланс телефона %d $",p_info[playerid][pMobile]), ShowPlayerDialog(playerid,3130,0,"Баланс счёта телефона", stringer, "Скрыть", "");
				case 1: format(stringer,64, "Номер телефона %d",p_info[playerid][pPnumber]), ShowPlayerDialog(playerid,3130,0,"Ваш нормер телефона",stringer, "Скрыть", "");
				case 2: pc_cmd_service(playerid);
				case 3: pc_cmd_dir(playerid);
				case 4: pc_cmd_togphone(playerid);
				case 5: pc_cmd_time(playerid);
				case 6:
					{
						format(stringer,128, "На счету вашего телефона: %d $\nИспользуйте сумму, которую вы хотите положить на телефон",p_info[playerid][pMobile]);
						ShowPlayerDialog(playerid,9999,DIALOG_STYLE_INPUT,"My World Telecom",stringer,"Ок","X");
						return 1;
					}
				}
			}
			else return pc_cmd_mm(playerid);
		}
		/*case 1567:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					if(p_info[playerid][pCash] < 12) return SendErr(playerid,"У вас не достаточно денег для этой покупки");
					FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
					SendClientMessage(playerid,CORANGE,"Продавец: {ffffff}Благодарю за покупку, держите ваше пирожное \"Картошка\"");
					p_info[playerid][pCash] -= 12;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~~h~~h~																				-12 $", 5000, 3);
				}
				case 1:
				{
					if(p_info[playerid][pCash] < 36) return SendErr(playerid,"У вас не достаточно денег для этой покупки");
					FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
					SendClientMessage(playerid,CORANGE,"Продавец: {ffffff}Благодарю за покупку, держите ваше маковое пирожное.");
					p_info[playerid][pCash] -= 36;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~~h~~h~																				-36 $", 5000, 3);
				}
				case 2:
				{
					if(p_info[playerid][pCash] < 28) return SendErr(playerid,"У вас не достаточно денег для этой покупки");
					FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
					SendClientMessage(playerid,CORANGE,"Продавец: {ffffff}Благодарю за покупку, держите ваш чиз-кейк");
					p_info[playerid][pCash] -= 28;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~~h~~h~																				-28 $", 5000, 3);
				}
				case 3:
				{
					if(p_info[playerid][pCash] < 21) return SendErr(playerid,"У вас не достаточно денег для этой покупки");
					FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
					SendClientMessage(playerid,CORANGE,"Продавец: {ffffff}Благодарю за покупку, держите ваше мороженое");
					p_info[playerid][pCash] -= 21;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~~h~~h~																				-21 $", 5000, 3);
				}
				case 4:
				{
					if(p_info[playerid][pCash] < 26) return SendErr(playerid,"У вас не достаточно денег для этой покупки");
					FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
					SendClientMessage(playerid,CORANGE,"Продавец: {ffffff}Благодарю за покупку, держите ваше крем брюле с малиной");
					p_info[playerid][pCash] -= 26;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~~h~~h~																				-26 $", 5000, 3);
				}
				case 5:
				{
					if(p_info[playerid][pCash] < 33) return SendErr(playerid,"У вас не достаточно денег для этой покупки");
					FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
					SendClientMessage(playerid,CORANGE,"Продавец: {ffffff}Благодарю за покупку, держите ваш штрудель по-венски");
					p_info[playerid][pCash] -= 33;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~~h~~h~																				-33 $", 5000, 3);
				}

			}
			//pGolod[playerid] = ((pGolod[playerid]+20.0) >= 100.0) ? (100.0) : (pGolod[playerid] + 20.0);
			//UpdateGolod(playerid);
			UpdateMoney(playerid);
			return 1;
		}*/
		case 156:
		{
			if(response)
			{
				if(strlen(inputtext) > 5 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
				{
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 300, "UPDATE `accounts` SET `tKey` = MD5('%s') WHERE `tName` = '%s' LIMIT 1",inputtext,NamePlayer[playerid]);
					mysql_pquery(connects,mysql_query_string);
					format(stringer, 128, "{"#cWHITE"}Ваш новый пароль: {ffff00}%s", inputtext);
					SCM(playerid, CWHITE, stringer);
					SCM(playerid, CWHITE, "{"#cWHITE"}Мы рекомендуем вам сделать скриншот. Клавиша {ffff00}F8");
					return 1;
				}
				else
				{
					ShowPlayerDialog(playerid,155,1, "Смена пароля", "Чтобы не подвергнуть аккаунт взлому, рекомедуем придумать трудный пароль.\nСодержащий набор букв и цифр", "Сменить", "Назад");
				}
			}
		}
		case 155:
		{
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 5) return ShowPlayerDialog(playerid,155,DIALOG_STYLE_PASSWORD,"Смена пароля","|                                      Используйте свой старый пароль                                        |", "Готово", "Отмена");
			if(strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "SELECT * FROM `accounts` WHERE `tName` = '%s' AND `tKey` = MD5('%s') LIMIT 1",NamePlayer[playerid],inputtext);
				mysql_pquery(connects, mysql_query_string, "OnPlayerSelectPassword", "is",playerid, inputtext);
				return 1;
			}
			else ShowPlayerDialog(playerid,155,DIALOG_STYLE_PASSWORD,"Смена пароля","|                                      Используйте свой старый пароль                                        |", "Готово", "Отмена");
		}
	}
	return 1;
}


public OnPlayerDisconnect(playerid, reason)
{
    for(new i=0;i<players;i++)
    {
        if(Players[i]==playerid)
        {
            Players[i]=Players[--players];
            Players[players]=-1;
            break;
        }
    }
    CountVezit2--;
	new boot_id = GetPVarInt(playerid, "VehicleBootID");
	if(boot_id != 0)
	{
		SendClientMessage(bootInfo[boot_id][_b_kidnapper_id], -1, "Игрок, которого Вы засунули в багажник, вышел с сервера");
		SendClientMessage(bootInfo[boot_id][_b_kidnapper_id], -1, "При следующем входе он вновь появится в багажнике");
	}

 	new Float: pos_x,
		Float: pos_y,
		Float: pos_z;
    for(new v; v < sizeof(bootInfo); v++)
	{
		if(bootInfo[v][_b_kidnapper_id] != playerid) continue;
		GetCoordBootVehicle(v, pos_x, pos_y, pos_z);

	 	SetPVarFloat(bootInfo[v][_b_target_id], "bootX", pos_x);
		SetPVarFloat(bootInfo[v][_b_target_id], "bootY", pos_y);
		SetPVarFloat(bootInfo[v][_b_target_id], "bootZ", pos_z);
		SetPVarInt(bootInfo[v][_b_target_id], "bootInt", GetPlayerInterior(playerid));
		SetPVarInt(bootInfo[v][_b_target_id], "bootVw", GetPlayerVirtualWorld(playerid));

		TogglePlayerSpectating(bootInfo[v][_b_target_id], false);
		SendClientMessage(bootInfo[v][_b_target_id], -1, "Игрок, который затащил Вас в багажник, вышел с сервера");

		bootInfo[v][_b_target_id] = -1;
		bootInfo[v][_b_target_name][0] = 0;
		bootInfo[v][_b_kidnapper_id] = -1;
	}
	if(GetPVarInt(playerid,"lesopilka"))
	{
		AC_ResetPlayerWeapons(playerid);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	}
	if ( WLabels[playerid] != Text3D:-1 )
	{
		DestroyDynamic3DTextLabel(WLabels[playerid]);
		WLabels[playerid] = Text3D:-1;
	}
	if ( eda[playerid] != INVALID_PLAYER_BAR_ID )
	{
		DestroyPlayerProgressBar(playerid, eda[playerid]);
		eda[playerid] = INVALID_PLAYER_BAR_ID;
	}
	if(Casino_Flag[playerid][select_casino_table] != -1){
		ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		Casino_Flag[playerid][select_casino_table] = -1;
	}
	if(PTD_DiceStat[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,PTD_DiceStat[playerid]);
		PTD_DiceStat[playerid]=PlayerText:-1;
	}
	player_show_FIND[playerid] = false;
	g_MysqlRaceCheck[playerid]++;
	show_furn_p_td[playerid][0] = false;
	show_furn_p_td[playerid][1] = false;
	FurnShow{playerid}=false;
	furniture_class{playerid} = -1;
	furniture_select{playerid} = 0;
	furniture_pickup[playerid] = -1;
	for(new d = 0; d < MAX_SLOT_FURNITURE; d++){
		if ( d < 4 ){
			PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][d]);
			p_td_furn_select[playerid][d]=PlayerText:-1;
		}
		if ( p_td_furn_object[playerid][d] != PlayerText:-1){
			PlayerTextDrawDestroy(playerid, p_td_furn_object[playerid][d]);
			p_td_furn_object[playerid][d] = PlayerText:-1 ;
		}
		if ( p_td_furn_text[playerid][d] != PlayerText:-1){
			PlayerTextDrawDestroy(playerid, p_td_furn_text[playerid][d]);
			p_td_furn_text[playerid][d] = PlayerText:-1 ;
		}
	}
	if(ptd_furniture[playerid][0]==PlayerText:-1){
		PlayerTextDrawDestroy(playerid,ptd_furniture[playerid][0]);
		ptd_furniture[playerid][0]=PlayerText:-1;
	}
	else if(ptd_furniture[playerid][1]==PlayerText:-1){
		PlayerTextDrawDestroy(playerid,ptd_furniture[playerid][1]);
		ptd_furniture[playerid][1]=PlayerText:-1;
	}
	if(furniture_pickup[playerid] != -1)
	{
		DestroyPickup(furniture_pickup[playerid]);
		furniture_pickup[playerid]=-1;
	}
	if(GotHit[playerid] > 0)
	{
		if(GetChased[playerid] != INVALID_PLAYER_ID)
		{
			if(IsPlayerConnected(GetChased[playerid]))
			{
				SendErr(GetChased[playerid], "Ваша жертва покинула сервер.");
				GoChase[GetChased[playerid]] = INVALID_PLAYER_ID;
			}
		}
	}
	if(GoChase[playerid] != INVALID_PLAYER_ID)
	{
		GetChased[GoChase[playerid]] = INVALID_PLAYER_ID;
		GotHit[GoChase[playerid]] = INVALID_PLAYER_ID;
	}
	if ( SpeedFlyBall[playerid] != PlayerText:-1 )
	{
		PlayerTextDrawDestroy(playerid,SpeedFlyBall[playerid]);
		SpeedFlyBall[playerid] = PlayerText:-1;
	}
	EndZombie(playerid,false);
	for(new j = 0; j < MAX_CREATE_OBJECT_PLAYER; j++)
	{
		if ( objects_player_create[playerid][j] != -1 )
		{
			DestroyDynamicObject(objects_player_create[playerid][j]);
			objects_player_create[playerid][j] = -1;
		}
	}
	for(new d=0;d<27;d++)
	{
		if(ReconPlayerText[playerid][d]!=PlayerText:-1)PlayerTextDrawDestroy(playerid,ReconPlayerText[playerid][d]);
		ReconPlayerText[playerid][d]=PlayerText:-1;
	}
	if(ShopText[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid,ShopText[playerid]);
		ShopText[playerid] = PlayerText:-1;
	}
	if(GetPVarInt(playerid,"pgunlocat"))
	{
		gGunWorkTableStat[GetPVarInt(playerid,"pgunlocat") - 1] = false;
	}
	new save_quest[1000];
	format(save_quest, 1000, "UPDATE `accounts` SET `quest_step_0` = '%d', `quest_step_1` = '%d', `quest_step_2` = '%d', `quest_step_3` = '%d', `quest_step_4` = '%d', `quest_step_5` = '%d' WHERE `ID` = '%d'",
	QuestStep[0][playerid],
	QuestStep[1][playerid],
	QuestStep[2][playerid],
	QuestStep[3][playerid],
	QuestStep[4][playerid],
	QuestStep[5][playerid],p_info[playerid][pID]);
	mysql_pquery(connects, save_quest, "", "");
	//
	if ( GetPVarInt ( playerid, "current_station" ) )
	{
		new names[90];
		format(names,90, "DELETE FROM `Station` WHERE `id` = '%d'", gRouteMysqlID[GetPVarInt ( playerid, "current_station" )-1]);
		mysql_pquery(connects, names, "", "");
		gRouteMysqlID[GetPVarInt ( playerid, "current_station" )-1] = -1;
	}
	if(GetPVarInt(playerid,"rent_bike"))
	{
		DestroyVehicleOP(GetPVarInt(playerid,"rent_bike"));
		DeletePVar(playerid,"rent_bike");
	}
	if(flash_td[playerid]!=PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, flash_td[playerid]);
		flash_td[playerid] = PlayerText:-1;
	}
	if(GetPVarInt(playerid,"rent_bike"))
	{
		DestroyVehicleOP(GetPVarInt(playerid,"rent_bike"));
		DeletePVar(playerid,"rent_bike");
	}
	if ( lowrideCarToSelect[playerid] != PlayerText:-1 )
	{
		PlayerTextDrawDestroy(playerid, lowrideCarToSelect[playerid]);
		lowrideCarToSelect[playerid] = PlayerText:-1;
	}
	for ( new i = 0; i < 3; i++)
	{
		if ( lowrideArrow[playerid][i] != PlayerText:-1 )
		{
			PlayerTextDrawDestroy(playerid,lowrideArrow[playerid][i]);
			lowrideArrow[playerid][i] = PlayerText:-1;
		}
	}
	/*if(p_info[playerid][pCalling]!=-1)
	{
		if(p_info[playerid][pONPhoneTalk]>0)
		{
			format(stringer,144,"[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%d секунд.",p_info[playerid][pONPhoneTalk]);
			SendClientMessage(playerid,COLOR_GREY,stringer);

			RemovePlayerAttachedObjectEx(playerid, 6);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);

			format(stringer,144,"[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%d секунд.",p_info[p_info[playerid][pCalling]][pONPhoneTalk]);
			SendClientMessage(p_info[playerid][pCalling],COLOR_GREY,stringer);

			RemovePlayerAttachedObjectEx(p_info[playerid][pCalling], 6);
			SetPlayerSpecialAction(p_info[playerid][pCalling],SPECIAL_ACTION_STOPUSECELLPHONE);
		}

		if(p_info[p_info[playerid][pCalling]][pONPhoneTalk]==0)
		{
			stringer[0] = EOS;
			format(stringer,250,"UPDATE `phonebook` SET `num`=`num`+1 WHERE `Namez`='%s' AND `Name`='%s'",PN(playerid), PN(p_info[playerid][pCalling]));
			mysql_pquery(mysql, stringer);
		}
		for(new i;i<9;i++)TextDrawHideForPlayer(p_info[playerid][pCalling],Sphone[i]);
		TextDrawHideForPlayer(p_info[playerid][pCalling], Calling[0]);
		TextDrawHideForPlayer(p_info[playerid][pCalling], Calling[1]);
		TextDrawHideForPlayer(p_info[playerid][pCalling], Calling[2]);
		TextDrawHideForPlayer(p_info[playerid][pCalling], Calling[3]);
		PlayerTextDrawDestroy(p_info[playerid][pCalling],callname[p_info[playerid][pCalling]]);
		PlayerTextDrawDestroy(p_info[playerid][pCalling],calltime[p_info[playerid][pCalling]]);
		p_info[p_info[playerid][pCalling]][pONPhoneTalk] = 0;
		TextDrawHideForPlayer(playerid, Calling[1]);
		TextDrawHideForPlayer(playerid, Calling[3]);
		for(new i;i<9;i++)TextDrawHideForPlayer(playerid,Sphone[i]);
		PlayerTextDrawDestroy(playerid,callname[playerid]);
		PlayerTextDrawDestroy(playerid,calltime[playerid]);
		p_info[playerid][pCalling]=-1;
		p_info[playerid][pONPhoneTalk] = 0;
	}else{
		for(new i;i<9;i++)TextDrawHideForPlayer(playerid,Sphone[i]);
		if(p_info[playerid][pONPhoneTalk]>0)
		{
			format(stringer,144,"[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%d секунд.",p_info[playerid][pONPhoneTalk]);
			SendClientMessage(playerid,COLOR_GREY,stringer);
			RemovePlayerAttachedObjectEx(playerid, 6);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		}
		TextDrawHideForPlayer(playerid, Calling[0]);
		TextDrawHideForPlayer(playerid, Calling[1]);
		TextDrawHideForPlayer(playerid, Calling[2]);
		TextDrawHideForPlayer(playerid, Calling[3]);
		PlayerTextDrawDestroy(playerid,callname[playerid]);
		PlayerTextDrawDestroy(playerid,calltime[playerid]);
		p_info[playerid][pONPhoneTalk] = 0;
		foreach(new id:Player)
		{
			if(p_info[id][pCalling]==playerid) break;
			if(id<MAX_PLAYERS)
			{
				if(p_info[id][pONPhoneTalk]>0)
				{
					format(stringer,144,"[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%d секунд.",p_info[id][pONPhoneTalk]);
					SendClientMessage(id,COLOR_GREY,stringer);
					RemovePlayerAttachedObjectEx(id, 6);
					SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
				}
				for(new i;i<9;i++)TextDrawHideForPlayer(id,Sphone[i]);
				TextDrawHideForPlayer(id, Calling[1]);
				TextDrawHideForPlayer(id, Calling[3]);
				PlayerTextDrawDestroy(id,callname[id]);
				PlayerTextDrawDestroy(id,calltime[id]);
				p_info[id][pCalling]=-1;
				p_info[id][pONPhoneTalk] = 0;
			}
		}
	}*/
	ResetVariables(playerid);
	Kazvihod(playerid);
	if ( GetPVarInt ( playerid, "p_sm_used" ) )
	{
		PlayerTextDrawDestroy ( playerid, sm_ptd [ playerid ] ) ;
		sm_ptd [ playerid ] = PlayerText:INVALID_TEXT_DRAW ;
		for ( new i = 0 ; i < 4 ; i ++ )
		{
			TextDrawHideForPlayer ( playerid, sm_td [ i ] ) ;
		}
		new p_sm = GetPVarInt ( playerid, "p_sm_used" ) ;
		new i = ( p_sm * 2 + ( p_sm - 2 ) ) - 1 ;
		new get_vw = GetPlayerVirtualWorld(playerid);
		MoveDynamicObject ( sm_slot [ i ] [ get_vw ], sm_slot_coord [ i ] [ 0 ], sm_slot_coord [ i ] [ 1 ], sm_slot_coord [ i ] [ 2 ], 1, sm_slot_coord [ i ] [ 3 ], sm_slot_coord [ i ] [ 4 ], sm_slot_coord [ i ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 1 ] [ get_vw ], sm_slot_coord [ i + 1 ] [ 0 ], sm_slot_coord [ i + 1 ] [ 1 ], sm_slot_coord [ i + 1 ] [ 2 ], 1, sm_slot_coord [ i + 1 ] [ 3 ], sm_slot_coord [ i + 1 ] [ 4 ], sm_slot_coord [ i + 1 ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 2 ] [ get_vw ], sm_slot_coord [ i + 2 ] [ 0 ], sm_slot_coord [ i + 2 ] [ 1 ], sm_slot_coord [ i + 2 ] [ 2 ], 1, sm_slot_coord [ i + 2 ] [ 3 ], sm_slot_coord [ i + 2 ] [ 4 ], sm_slot_coord [ i + 2 ] [ 5 ] ) ;

		sm_used [ p_sm - 1 ] = false ;
	}
	if(show_info_band[playerid])
	{
		PlayerTextDrawHide(playerid, GangInfo_P_TD[playerid][0]);
		PlayerTextDrawHide(playerid, GangInfo_P_TD[playerid][1]);
		for(new J = 0; J < 28; J++) TextDrawHideForPlayer(playerid, GangInfo_TD[J]);
		show_info_band[playerid] = false;
	}
	if(show_info_mafia[playerid])
	{
		PlayerTextDrawHide(playerid, GangInfo_P_TD[playerid][1]);
		show_info_mafia[playerid] = false;
	}
	if(GangInfo_P_TD[playerid][0] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, GangInfo_P_TD[playerid][0]);
		GangInfo_P_TD[playerid][0] = PlayerText:-1;
	}
	if(GangInfo_P_TD[playerid][1] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, GangInfo_P_TD[playerid][1]);
		GangInfo_P_TD[playerid][1] = PlayerText:-1;
	}
	/*if(Count_Slot_Player_Object [ playerid ] != 0 )
	{
		for(new i = 0; i < Count_Slot_Player_Object[playerid]; i++)
		{
			DestroyPlayerObject(playerid,gPlayerObject[playerid][i]);
		}
		Count_Slot_Player_Object[playerid] = 0;
	}*/
	if(UpdateCarInfo_Timer[playerid] != -1){
		KillTimer(UpdateCarInfo_Timer[playerid]);
		UpdateCarInfo_Timer[playerid] = -1;
	}
	if( MyBed[ playerid ] != 255 )
	{
		new p_Bed = MyBed[ playerid ];
		stringer[0] = EOS;
		KillTimer( PlayerTimerBolk[ playerid ] );
		//PlayerCounter[ playerid ] = 0;
		BedInfo[ p_Bed ][ Busy ] = false;
		ClearAnimations( playerid );
		DeletePVar(playerid,"pHospital");
		MyBed[ playerid ] = 255;
		AC_TogglePlayerControllable(playerid, 1);
		SetPlayerDrunkLevel( playerid, 0 );
		AC_SetPlayerPos( playerid, BedInfo[ p_Bed ][ b_X ], BedInfo[ p_Bed ][ b_Y ], BedInfo[ p_Bed ][ b_Z ] );
		format( stringer, 128, "{FFFFFF}Койка №%d\n{33AA33}Свободна\n\n{AFAFAF}Используйте /heal чтобы занять её", p_Bed+1);
		UpdateDynamic3DTextLabelText( Bed3D[ p_Bed ], 0xFFFFFF20, stringer );
	}
	//if ( g_bot_timer[playerid] != -1 )
	//{
		//KillTimer ( g_bot_timer[playerid] ) ;
	//}
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(unix-PlayerReconnectTime[i]<15) continue;
		PlayerReconnectTime[i]=unix;
		format(PlayerReconnectIP[i],16,"%s",PlayerIp[playerid]);
		break;
	}
	if(damage_text[playerid]!=Text3D:-1)
	{
		Delete3DTextLabel(damage_text[playerid]);
		damage_text[playerid]=Text3D:-1;
	}
/*	if(Select_Football_Team[playerid] != -1 && Select_Football_Position[playerid] != -1)
	{
		Position_Football_Active[Select_Football_Team[playerid]][Select_Football_Position[playerid]]=false;
		TextDrawHideForPlayer(playerid,TD_Time_Football);
	} */
	/*if(BallHolder == playerid)
		 RecreateBall();
	if ( pPowerTD[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, pPowerTD[playerid]);
		pPowerTD[playerid] = PlayerText:-1;
	}
	if ( pPowerTD_BSKT[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, pPowerTD_BSKT[playerid]);
		pPowerTD_BSKT[playerid] = PlayerText:-1;
	}*/



	/*if(PoolAimer == playerid)
	{
		PoolAimer = -1;
		TextDrawHideForPlayer(playerid, PoolTD[0]);
		TextDrawHideForPlayer(playerid, PoolTD[1]);
		TextDrawHideForPlayer(playerid, PoolTD[2]);
		TextDrawHideForPlayer(playerid, PoolTD[3]);
		if(AimObject != -1) DestroyObject(AimObject);
		//AimObject = -1;
	}
	if(PlayingPool[playerid])
	{
		PlayingPool[playerid] = 0;
		new
			count = GetPoolPlayersCount();
		if(count <= 0)
		{
			PoolStarted = 0;
			RespawnPoolBalls();
		}
	}*/
	if(SurfPlayerUseSlot[playerid]!=-1)
	{
		Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,surf_pos_id[SurfPlayerUseSlot[playerid]], E_STREAMER_WORLD_ID, 0);
		SurfPlayerUseSlot[playerid]=-1;
	}
	if(SurfPlayerUse[playerid] != -1)
	{
		DestroySurfboard(SurfPlayerUse[playerid],true);
	}
	if(p_mh[playerid]!=PlayerText:-1)
	{
			PlayerTextDrawHide(playerid,p_mh[playerid]);
			PlayerTextDrawDestroy(playerid,p_mh[playerid]);
			p_mh[playerid]=PlayerText:-1;
	}
	if(counthead[playerid] != -1)
	{
		KillTimer(counthead[playerid]);
		counthead[playerid] = -1;
	}
	if(TextHead[playerid] != Text3D:-1)
	{
		Delete3DTextLabel(TextHead[playerid]);
		TextHead[playerid] = Text3D:-1;
	}
	if(GetPVarInt(playerid,"id_pvp")>0)
	{
		new pp=GetPVarInt(playerid,"id_pvp")-1;
		SendClientMessage(pp,COLOR_GREY,"Дуэль не состоиться, игрок вышел из игры");
		if(GetPVarInt(pp,"id_gun")>0) DeletePVar(pp, "id_gun");
		if(GetPVarInt(pp,"money_pvp")>0) DeletePVar(pp, "money_pvp");
		if(GetPVarInt(pp,"duel_nachalsya")) DeletePVar(pp,"duel_nachalsya");

		for(new d = 0; d < MAX_DUELS; d++)
		{
			if(duel_[d][duel_id]==playerid || duel_[d][duel_to_id]==playerid)
			{
				new weapons[13][2];
				for(new S = 0; S<13; S++) GetPlayerWeaponData(pp, S, weapons[S][0], weapons[S][1]) ;
				AC_ResetPlayerWeapons ( pp ) ;
				for(new S = 0; S<13 ; S++) if(weapons[S][0] != duel_[d][duel_gun] && weapons[S][0] != 0) AC_GivePlayerWeapon (pp,weapons[S][0],weapons[S][1]);

				duel_[d][duel_id] = -1;
				duel_[d][duel_to_id] = -1;
				duel_[d][duel_last_vw] = 0;
				duel_[d][duel_gun] = 0;
				if(duel_[d][duel_timer] != -1)
				{
					KillTimer(duel_[d][duel_timer]);
					duel_[d][duel_timer] = -1;
				}
				duel_[d][duel_time]=0;
				duel_[d][duel_health_id] = 100.0;
				duel_[d][duel_health_to_id] = 100.0;
				duel_[d][duel_money]=0;
				duel_t--;
				break;
			}
		}
	}
	for(new i = 0; i < 8; i++)
	{
		if(GUI_targetsystem[playerid][i]==PlayerText:INVALID_TEXT_DRAW) continue;
		PlayerTextDrawDestroy(playerid, GUI_targetsystem[playerid][i]);
		GUI_targetsystem[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	//TextDrawHideForPlayer(playerid, Datum);
	if(GetPVarInt(playerid,"UpdateActorTextMast_ID") > 0){
		mast_actor_id [ GetPVarInt(playerid,"UpdateActorTextMast_ID") - 1 ] = -1;
	}

	if(speedSignalRight[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedSignalRight[playerid]);
	if(speedSignalLeft[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedSignalLeft[playerid]);
	if(speedSignalLights[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedSignalLights[playerid]);
	if(speedEngine[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedEngine[playerid]);
	if(speedDoors[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedDoors[playerid]);
	if(speedFuel[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedFuel[playerid]);
	if(speedHealth[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedHealth[playerid]);
	if(speedMileage[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedMileage[playerid]);
	if(speedName[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedName[playerid]);
	if(speedInf[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedInf[playerid]);
	if(speedStick[playerid] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedStick[playerid]);
	if(speedTrans[playerid][0] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][0]);
	if(speedTrans[playerid][1] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][1]);
	if(speedTrans[playerid][2] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][2]);
	if(speedTrans[playerid][3] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][3]);
	if(speedTrans[playerid][4] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][4]);
	if(speedTrans[playerid][5] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][5]);
	if(speedTrans[playerid][6] != PlayerText:-1) PlayerTextDrawDestroy(playerid, speedTrans[playerid][6]);

	if ( radar_object [ playerid ] [ 0 ] != INVALID_OBJECT )
	{
		DestroyDynamicObject ( radar_object [ playerid ] [ 0 ] ) ;
		if ( radar_object [ playerid ] [ 1 ] != INVALID_OBJECT) DestroyDynamicObject ( radar_object [ playerid ] [ 1 ] ) ;
		if ( radar_object [ playerid ] [ 2 ] != INVALID_OBJECT) DestroyDynamicObject ( radar_object [ playerid ] [ 2 ] ) ;

		radar_object [ playerid ] [ 0 ] = INVALID_OBJECT ;
		radar_object [ playerid ] [ 1 ] = INVALID_OBJECT ;
		radar_object [ playerid ] [ 2 ] = INVALID_OBJECT ;

		total_radars--;
	}
	if ( TempTazerObject[playerid] != -1 ) DestroyPlayerObject(playerid, TempTazerObject[playerid]);
	if(GetPVarInt(playerid,"orcp") > 0)
	{
		iait[GetPVarInt(playerid,"orcp")-1][GetPlayerVirtualWorld(playerid)] = false;
		UpdateShootPlace(GetPVarInt(playerid,"orcp")-1,GetPlayerVirtualWorld(playerid)-1);
		drop_or(playerid);
	}



	for(new i=0;i<25;i++)
	{
		if(br_player[playerid][br_objects][i] != INVALID_OBJECT)
		{
			DestroyDynamicObject(br_player[playerid][br_objects][i]);
			br_player[playerid][br_objects][i]=INVALID_OBJECT;
		}
	}

	if ( br_player[playerid][br_object_text][0] != INVALID_OBJECT )
	{
		DestroyDynamicObject ( br_player[playerid][br_object_text][0] ) ;
		br_player[playerid][br_object_text][0]=INVALID_OBJECT;
	}
	if ( br_player[playerid][br_object_text][1] != INVALID_OBJECT )
	{
		DestroyDynamicObject ( br_player[playerid][br_object_text][1] ) ;
		br_player[playerid][br_object_text][1]=INVALID_OBJECT;
	}
	if (cache_is_valid(p_info[playerid][Cache_ID]))
	{
		cache_delete(p_info[playerid][Cache_ID]);
		p_info[playerid][Cache_ID] = MYSQL_INVALID_CACHE;
	}
	mysql_query_string[0] = EOS;
	//if(IsBotServer(playerid)) return 0;
	//if(cache_is_valid(p_info[playerid][pData]))
	//	cache_delete(p_info[playerid][pData]);

	/*if(IsSelfieCamera[playerid][0] == 1)
	{
		if(IsValidObject(IsSelfieCamera[playerid][1]))
		{
			DestroyObject(IsSelfieCamera[playerid][1]);
		}
		IsSelfieCamera[playerid][0] = 0;
	}*/

	if ( m_members_timer [ playerid ] != 0 || m_members_count [ playerid ] != 0)
	{
		//print ( "for m_members_timer" ) ;
		for ( new j = 0 ; j <= m_members_count [ playerid ] ; j ++ )
		{
			PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
			PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
			PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
			PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
			members_pos_td [ playerid ] [ 0 ] [ j ] = PlayerText: -1 ;
			members_pos_td [ playerid ] [ 1 ] [ j ] = PlayerText: -1 ;

		}

		if(m_members_timer [ playerid ] != 0)
		{
			KillTimer ( m_members_timer [ playerid ] ) ;
			m_members_timer [ playerid ] = 0;
		}

		TextDrawHideForPlayer ( playerid, members_map_td ) ;
		CancelSelectTextDraw ( playerid ) ;
	}

	if(playerText_ame_Action[playerid][0] != Text3D:-1) Delete3DTextLabel(playerText_ame_Action[playerid][0]);
	if(playerText_ame_Action[playerid][1] != Text3D:-1) Delete3DTextLabel(playerText_ame_Action[playerid][1]);
	if(gPlayerProdText[playerid][0] != Text3D:-1) DestroyDynamic3DTextLabel(gPlayerProdText[playerid][0]);
	if(gPlayerProdText[playerid][1] != Text3D:-1) DestroyDynamic3DTextLabel(gPlayerProdText[playerid][1]);
	if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
	p_info[playerid][pOnline] = false;

	if ( p_info[ playerid ] [ p_f_mute ] < unix && p_info[ playerid ] [ p_f_mute ] != 0 )
	{
		p_info[ playerid ] [ p_f_mute ] = 0, UpdatePlayerData ( playerid,"p_f_mute", p_info [ playerid ] [ p_f_mute ] ) ;
	}

		//getDay()

	if ( p_info[playerid][pTime] > 1 )
	{
		mysql_query_string[0] = EOS;
		format(mysql_query_string,512,"SELECT * FROM `online_player` WHERE `date` >= CURDATE() AND `accountid` = '%d'",p_info[playerid][pID]);
		new Cache:result = mysql_query(connects,mysql_query_string);
		new rows = cache_num_rows();
		cache_delete(result);
		if ( rows == 0 )
		{
	  		mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"INSERT INTO `online_player`(`accountid`, `date`, `online_sec`, `afk_sec`) VALUES ('%d', NOW(), '%d', '%d')", p_info[playerid][pID], p_info[playerid][pTime], p_info[playerid][pTimeAFK]);
			mysql_tquery(connects,mysql_query_string);
		}
		else
		{
  	  		mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"UPDATE `online_player` SET `online_sec` = '%d', `afk_sec` = '%d' WHERE `accountid` = '%d' AND `date` >= CURDATE()", online_player[playerid][0] + p_info[playerid][pTime], online_player_afk[playerid][0] + p_info[playerid][pTimeAFK], p_info[playerid][pID]);
			mysql_tquery(connects,mysql_query_string);
		}
	}

	if(gAdminTime[playerid] > 1)
	{
		format(mysql_query_string, 350, "UPDATE `admin` SET  `online_%s` = '%d' WHERE `name` = '%s' LIMIT 1", getDay(), gAdminTime[playerid],NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}
	if(GetPVarInt(playerid, "BKONFORPLAYER") == 1)
	{
		BackupClear(playerid, 0);
		SetPVarInt(playerid, "BKONFORPLAYER", 0);
	}
	if(GetPVarInt(playerid,"FireTimerr"))
	{
		KillTimer(GetPVarInt(playerid,"FireTimerr"));
		DeletePVar(playerid,"FireTimerr");
		HidePlayerProgressBar(playerid, universalbar[playerid]);
		DestroyPlayerProgressBar(playerid, universalbar[playerid]);
	}
	HidePlayerProgressBar(playerid, universalbar[playerid]);
	DestroyPlayerProgressBar(playerid, universalbar[playerid]);
	if(GetPVarInt(playerid,"playerWalkTimer")) KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
	if(GetPVarInt(playerid,"fuel_show"))
	{
		DeletePVar(playerid,"td_step");
		TD_EndFuel(playerid);
	}
	DeletePVar(playerid, "FiveSecound");
	if(GetPVarInt(playerid, "is_plane") - 1 != 0)
	{
		DestroyVehicleOP(GetPVarInt(playerid, "is_plane") - 1);
	}
	if(GetPVarInt(playerid, "is_boat") - 1 != 0)
	{
		DestroyVehicleOP(GetPVarInt(playerid, "is_boat") - 1);
	}
	if(IsValidDynamic3DTextLabel(PlayerMehText[playerid]))
	{
		DestroyDynamic3DTextLabel(PlayerMehText[playerid]);
	}
	if(FZ_TDP_Timer[playerid] != -1)
	{
		KillTimer(FZ_TDP_Timer[playerid]);
		FZ_TDP_Timer[playerid] = -1;
	}
	if(IntroBox[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid,IntroBox[playerid]);
		IntroBox[playerid]=PlayerText:-1;
	}
	if(FZ_TDP[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid,FZ_TDP[playerid]);
		FZ_TDP[playerid]=PlayerText:-1;
	}
	if(TD_GPS[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid,TD_GPS[playerid]);
		TD_GPS[playerid]=PlayerText:-1;
	}
	for(new i=0; i<8; i++)
	{
		TextDrawHideForPlayer(playerid,Logotype[i]);
	}
	if(GetPVarInt(playerid,"flag"))
	{
		RemovePlayerMapIcon(playerid, 1);
	}
	if(GetPVarInt(playerid,"called"))
	{
		new callid =GetPVarInt(playerid,"called")-1;
		DeletePVar(callid,"called");
		DeletePVar(callid,"talkcall");
		SendClientMessage(callid,COLOR_GREY,"Абонент отключился, связь прекращена.");
		SetPlayerSpecialAction(callid,SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(callid,2);
	}
	if(GetPVarInt(playerid,"playerUseAction") != 0) {
		if(T_IsValid3DTextLabel(playerTextAction[playerid])) DestroyDynamic3DTextLabelEx(playerTextAction[playerid]);
		DeletePVar(playerid,"playerUseAction");
	}
	if(gKilledWithAntiDeath[playerid]!=2){
		format(mysql_query_string, 350, "UPDATE `accounts` SET `EPLAYER` = '%f,%f,%f,%i,%i,%i' WHERE `tName` = '%s' LIMIT 1",p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),unix+999999999, NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}
	//
	new b = -1,b_skin = -1;
	for(new b2 = 0; b2 < 100; b2++)
	{
		if(gTempBot[b2] == -1)
		{
			b = b2;
			break;
		}
	}
	if(p_info[playerid][tMember]) b_skin = (StartWork(playerid) && !start_work[playerid]) ? (p_info[playerid][pChar]) : (p_info[playerid][pModel]);
	else if(p_info[playerid][tMember] <= 0 && !chose_player[playerid]) b_skin = p_info[playerid][pChar];
	if ( b_skin != -1 && b != -1)
	{
		gTempBot[b] = CreateActor(b_skin, p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]+0.8,0.00);
		SetActorVirtualWorld(gTempBot[b], GetPlayerVirtualWorld(playerid));
		SetActorInvulnerable(gTempBot[b], true);
		ApplyActorAnimation( gTempBot[b] , "PED", "IDLE_tired", 4.1, 0, 0, 0, 1, 0 );
		gTempBotTime[b] = 120;
		static const disconnect_reasons[][]={"вылета","выхода из игры","кика или бана"};
		new b_string[128];
		actor_exit_id[playerid] = gTempBot[b];
        actor_exit_name[playerid][0] = '\0';
        strcat(actor_exit_name[playerid], NamePlayer[playerid]);
		format(b_string,128,"{"#cBLUE"}*** %s ***\n{"#cGRAY"}Покинул игру по причине %s", NamePlayer[playerid],disconnect_reasons[reason]);
		gTempBotText[b]=CreateDynamic3DTextLabel(b_string,-1,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,GetPlayerVirtualWorld(playerid));
	}
	if(GetPVarInt(playerid,"bus_id")) EndBus(playerid);
	if( T_IsValid3DTextLabel ( gPlayerBusText[playerid] ) ) DestroyDynamic3DTextLabelEx(gPlayerBusText[playerid]);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && VehicleEnters[playerid] != INVALID_VEHICLE_ID) gVehicles[VehicleEnters[playerid]-1][vOccupied] = -1;
	if(blocktext[playerid] != Text3D:-1)
	{
		Delete3DTextLabel(blocktext[playerid]);
		blocktext[playerid]=Text3D:-1;
	}
	if(GetPVarInt(playerid,"taxijob")) EndTaxi(playerid);
	if(GetPVarInt(playerid,"pExamCandidate"))
	{
		if(IsPlayerConnected(GetPVarInt(playerid,"pExamCandidate")-1))
		{
			SCM(GetPVarInt(playerid,"pExamCandidate")-1, COLOR_GREY, "Ваш инструктор вышел из игры, экзамен прерван");
		}
	}
	if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, gSkinShopPriceDraw[playerid]);
		gSkinShopPriceDraw[playerid] = PlayerText:-1;
	}
	if(MinerDraw[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, MinerDraw[playerid]);
		MinerDraw[playerid] = PlayerText:-1;
	}
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1]=0;
		DeletePVar(playerid,"walk_goto_me_player");
	}
	if(GetPVarInt(playerid,"InRaces"))
	{
		EndRace(playerid,false);
	}
	if(PlacedBB[playerid] != INVALID_OBJECT)
	{
		DestroyDynamicObject(PlacedBB[playerid]);
		if ( T_IsValid3DTextLabel(BBLabel[playerid]) ) DestroyDynamic3DTextLabelEx(BBLabel[playerid]);
		if(GetPVarType(playerid, "BBArea"))
		{
			//print ( "Itter_Remove(boxPlayer, playerid);" ) ;
			foreach(i)
			{
				if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
				{
					StopAudioStreamForPlayer(i);
					SendClientMessage(i, CLIGHTBLUE, "Игрок вышел из игры, магнитофон выключен");
				}
			}
		}
	}
	if(GetPVarInt(playerid,"adchecking_fix"))
	{
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if((GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED || (fixable_timer[playerid][1] != INVALID_PLAYER_ID && !IsACop(playerid))) && p_info[playerid][pWanted]>0 && reason == 1)
	{
		format(stringer,128,"Игрок %s был посажен в КПЗ за выход из игры при аресте.",NamePlayer[playerid]);
		SendClientMessageToAll(CBADINFO,stringer);

		Insert_Reason_Jail(p_info[playerid][pID], "Полицейский", "Посажен в КПЗ за выход из игры при аресте");

		UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pWanted]*600);

		p_info[playerid][pMestoJail] = 1;
		UpdatePlayerData(playerid,"pMestoJail",1);
	}
	if(fixable_timer[playerid][1] != INVALID_PLAYER_ID && !IsACop(playerid))
	{
			fixable_timer[playerid][0] = unix;
			fixable_timer[playerid][1] = INVALID_PLAYER_ID;
			fixable_timer[fixable_timer[fixable_timer[playerid][1]][1]][1] = INVALID_PLAYER_ID;
			SendClientMessage(fixable_timer[fixable_timer[playerid][1]][1],CRED,"Таймер выхода окончен. Причина: Игрок вышел из игры");
	}
	else if(fixable_timer[playerid][1] != INVALID_PLAYER_ID && IsACop(playerid))
	{
			fixable_timer[fixable_timer[playerid][1]][0] = unix;
			fixable_timer[fixable_timer[playerid][1]][1] = INVALID_PLAYER_ID;
			fixable_timer[playerid][1] = INVALID_PLAYER_ID;
			SendClientMessage(fixable_timer[playerid][1],CRED,"Таймер выхода окончен. Причина: Полицейский вышел из игры");
	}
	if(p_info[playerid][pMuteTime]>0) UpdatePlayerData(playerid,"pMuteTime",p_info[playerid][pMuteTime]);
	if(p_info[playerid][pJailTime]>0) UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pJailTime]);
	if(caridhouse[playerid][0] != 0)
	{
		GetVehiclePos(caridhouse[playerid][0],p_info[playerid][p_car_pos_x][0],p_info[playerid][p_car_pos_y][0],p_info[playerid][p_car_pos_z][0]);
		GetVehicleZAngle(caridhouse[playerid][0],p_info[playerid][p_car_pos_a][0]);
		p_info[playerid][p_car_fuel][0] = gVehicles[caridhouse[playerid][0] - 1][vFuel];
		new update_fuel[300];
		format(update_fuel, 300, "UPDATE `accounts` SET `p_car_fuel_0` = '%f', `p_car_pos_data0` = '%.2f,%.2f,%.2f,%.2f,%d,%d' WHERE `ID` = '%d'",p_info[playerid][p_car_fuel][0],p_info[playerid][p_car_pos_x][0],p_info[playerid][p_car_pos_y][0],p_info[playerid][p_car_pos_z][0],p_info[playerid][p_car_pos_a][0],p_info[playerid][p_car_vw][0],p_info[playerid][p_car_int][0],p_info[playerid][pID]);
		mysql_pquery(connects,update_fuel,"","");
		DestroyVehicleOP(caridhouse[playerid][0]);
		///print(update_fuel);
		caridhouse[playerid][0] = 0;
	}
	if(caridhouse[playerid][1] != 0)
	{
		GetVehiclePos(caridhouse[playerid][1],p_info[playerid][p_car_pos_x][1],p_info[playerid][p_car_pos_y][1],p_info[playerid][p_car_pos_z][1]);
		GetVehicleZAngle(caridhouse[playerid][1],p_info[playerid][p_car_pos_a][1]);
		p_info[playerid][p_car_fuel][1] = gVehicles[caridhouse[playerid][1] - 1][vFuel];
		new update_fuel[300];
		format(update_fuel, 300, "UPDATE `accounts` SET `p_car_fuel_1` = '%f', `p_car_pos_data1` = '%.2f,%.2f,%.2f,%.2f,%d,%d' WHERE `ID` = '%d'",p_info[playerid][p_car_fuel][1],p_info[playerid][p_car_pos_x][1],p_info[playerid][p_car_pos_y][1],p_info[playerid][p_car_pos_z][1],p_info[playerid][p_car_pos_a][1],p_info[playerid][p_car_vw][1],p_info[playerid][p_car_int][1],p_info[playerid][pID]);
		mysql_pquery(connects,update_fuel,"","");
		DestroyVehicleOP(caridhouse[playerid][1]);
		caridhouse[playerid][1] = 0;
	}
	DeletePVar(playerid,"check_teleport");
//	new year, month, day;
	if(IsValidVehicle(GetPVarInt(playerid,"SalonCar")))
	{
		DestroyVehicleOP(GetPVarInt(playerid,"SalonCar"));
	}
	if(p_info[playerid][pAdmin] > 0 && GetPVarInt(playerid,"dostup") || gAdmin[playerid][8] == 1)
	{
		format(mysql_query_string,512,"UPDATE `admin` SET `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`point`='%d',`blockadmin`='%d' WHERE `name` = '%s' LIMIT 1",gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],gAdmin[playerid][6],gAdmin[playerid][7],gAdmin[playerid][8],NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
       
		format(stringer, 128, "[A] %s отключился [IP: %s]",NamePlayer[playerid],PlayerIp[playerid]);
		if(gAdmin[playerid][8] != 1) AdmMes(0xEAC700FF,stringer,1);
		DeletePVar(playerid,"dostup");
	}
	if(p_info[playerid][tHelper] && SELECT_SERVER != 2)
	{
		format(mysql_query_string,350,"UPDATE `accounts` SET `helper_stats` = '%d,%d,%d,%d' WHERE `tName` = '%s' LIMIT 1",HelperStat[playerid][0],HelperStat[playerid][1],HelperStat[playerid][2],HelperStat[playerid][3],NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}

	if(GetPVarInt(playerid,"block"))
	{
		//print ( "Itter_Remove(shipPlayer, playerid);" ) ;
		//Itter_Remove(shipPlayer, playerid);
		if(ObjectShip[playerid] != INVALID_OBJECT)
		{
			DestroyObject(ObjectShip[playerid]);
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DestroyDynamic3DTextLabel(ShipText[playerid]);
	}
	if(GetPVarInt(playerid,"robbankstime")) robbanks = false;
	if(IsACop(playerid)) zakonn --;

	CancelSelectTextDraw(playerid);

	//getdate(year, month, day);
	//new hour, minute, second;
	//gettime(hour, minute, second);
	if(p_info[playerid][pJob] == 7) p_info[playerid][pJob] = 0;
	if(IsAMedic(playerid)) Medics -= 1;
	if(p_info[playerid][tMember] == F_SAPD || p_info[playerid][tMember] == F_PMC || p_info[playerid][tMember] == F_SWAT ) Police +=1;
	else if(p_info[playerid][pJob] == 2) Mechanics -= 1;
	if(GetPVarInt(playerid,"TransportCost") > 0 && GetPVarInt(playerid,"TransportDriver"))
	{
		if(IsPlayerConnected(GetPVarInt(playerid,"TransportDriver")-1))
		{
			SetPVarInt(GetPVarInt(playerid,"TransportDriver")-1,"TransportMoney", GetPVarInt(playerid,"TransportCost"));
			DeletePVar(GetPVarInt(playerid,"TransportDriver")-1,"TransportTime");
			DeletePVar(GetPVarInt(playerid,"TransportDriver")-1,"TransportCost");
			format(stringer, 32, "~g~~h~ +%d$",GetPVarInt(playerid,"TransportCost"));
			GameTextForPlayer(GetPVarInt(playerid,"TransportDriver")-1, stringer, 5000, 1);
		}
	}
	if(GetPVarInt(playerid, "GYM_Dumbbells") == 1)
	{
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[7] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[11] = false;
		else SimulatorUse[3] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bar") == 1)
	{
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[6] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[10] = false;
		else SimulatorUse[2] = false;
	}
	if(GetPVarInt(playerid, "GYM_Thread") == 1)
	{
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[5] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[9] = false;
		else SimulatorUse[1] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bike") == 1)
	{
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[4] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[8] = false;
		else SimulatorUse[0] = false;
	}

	stringer[0] = EOS;
	new gun_string[56], ammo_string[56];
	format ( gun_string, 56, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	GunPlayer [ playerid ] [ 0 ] [ 0 ], GunPlayer [ playerid ] [ 1 ] [ 0 ], GunPlayer [ playerid ] [ 2 ] [ 0 ], GunPlayer [ playerid ] [ 3 ] [ 0 ],
	GunPlayer [ playerid ] [ 4 ] [ 0 ], GunPlayer [ playerid ] [ 4 ] [ 0 ], GunPlayer [ playerid ] [ 5 ] [ 0 ], GunPlayer [ playerid ] [ 6 ] [ 0 ],
	GunPlayer [ playerid ] [ 7 ] [ 0 ], GunPlayer [ playerid ] [ 8 ] [ 0 ], GunPlayer [ playerid ] [ 9 ] [ 0 ], GunPlayer [ playerid ] [ 10 ] [ 0 ],
	GunPlayer [ playerid ] [ 11 ] [ 0 ], GunPlayer [ playerid ] [ 12 ] [ 0 ] ) ;
	format ( ammo_string, 56, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	GunPlayer [ playerid ] [ 0 ] [ 1 ], GunPlayer [ playerid ] [ 1 ] [ 1 ], GunPlayer [ playerid ] [ 2 ] [ 1 ], GunPlayer [ playerid ] [ 3 ] [ 1 ],
	GunPlayer [ playerid ] [ 4 ] [ 1 ], GunPlayer [ playerid ] [ 4 ] [ 1 ], GunPlayer [ playerid ] [ 5 ] [ 1 ], GunPlayer [ playerid ] [ 6 ] [ 1 ],
	GunPlayer [ playerid ] [ 7 ] [ 1 ], GunPlayer [ playerid ] [ 8 ] [ 1 ], GunPlayer [ playerid ] [ 9 ] [ 1 ], GunPlayer [ playerid ] [ 10 ] [ 1 ],
	GunPlayer [ playerid ] [ 11 ] [ 1 ], GunPlayer [ playerid ] [ 12 ] [ 1 ] ) ;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 256, "UPDATE `accounts` SET `p_guns` = '%s',`p_ammo` = '%s' WHERE `tName` = '%s' LIMIT 1", gun_string, ammo_string, NamePlayer [ playerid ] ) ;
	mysql_pquery(connects, mysql_query_string, "","");

	SetPlayerDataToDefault(playerid);
	return 1;
}



public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(response == EDIT_RESPONSE_FINAL) printf("%f,%f,%f,%f,%f,%f", Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ);
	if(GetPVarInt(playerid,"TotalOst_"))
	{
		new slot = GetPVarInt(playerid,"TotalOst_")-1;
		ostanovka[slot][ostX]=fX;
		ostanovka[slot][ostY]=fY;
		ostanovka[slot][ostZ]=fZ;
		ostanovka[slot][ostrX]=fRotX;
		ostanovka[slot][ostrY]=fRotY;
		ostanovka[slot][ostrZ]=fRotZ;
	}
/*	if(response == EDIT_RESPONSE_FINAL && GetPVarInt(playerid,"gf"))
	{
		new gf=GetPVarInt(playerid,"gf")-1;
		if(gf == -1) return 1;
		if(objectid == graff_obj[gf])
		{
			graff_status[gf]=true;
			DestroyDynamicCP(graff_cp[gf]);
			SendSucc(playerid,"Вы установили Граффити");
			SetCameraBehindPlayer(playerid);
			graff_text[gf]=CreateDynamic3DTextLabel(NamePlayer[playerid], CBLUE, gPosGraff[gf][0],gPosGraff[gf][1],gPosGraff[gf][2], 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1,100.0);
			DeletePVar(playerid,"gf");
			return 1;
		}
	} */
	/*if(GetPVarInt(playerid,"editlr"))
	{
		if(response == EDIT_RESPONSE_FINAL)
		{
			larek[TotalLarek][lr_pos][0]=fX;
			larek[TotalLarek][lr_pos][1]=fY;
			larek[TotalLarek][lr_pos][2]=fZ;

			larek[TotalLarek][lr_rot][0]=fRotX;
			larek[TotalLarek][lr_rot][1]=fRotY;
			larek[TotalLarek][lr_rot][2]=fRotZ;

			DestroyDynamicObject(larek[TotalLarek][lr_obj]);
			larek[TotalLarek][lr_obj]=CreateDynamicObject(1340,fX,fY,fZ,fRotX,fRotY,fRotZ,0,0,-1,100.0,100.0);

			GetPlayerFacingAngle(playerid,larek[TotalLarek][lr_pos][3]);

			larek[TotalLarek][lr_cp]=CreateDynamicCP(
				larek[TotalLarek][lr_pos][0]+(0.7 * floatsin(-larek[TotalLarek][lr_pos][3], degrees)),
				larek[TotalLarek][lr_pos][1]+(0.7 * floatcos(-larek[TotalLarek][lr_pos][3], degrees)),
				larek[TotalLarek][lr_pos][2],0.7,0,0,-1,10.0);

			larek[TotalLarek][lr_bot]=CreateActor(131,
				larek[TotalLarek][lr_pos][0]-(1.0 * floatsin(-larek[TotalLarek][lr_pos][3], degrees)),
				larek[TotalLarek][lr_pos][1]-(1.0 * floatcos(-larek[TotalLarek][lr_pos][3], degrees)),
				larek[TotalLarek][lr_pos][2]+1.5,
				larek[TotalLarek][lr_pos][3]);

			SetDynamicObjectMaterial(larek[TotalLarek][lr_obj], 2, 6869, "vegastemp1", "vgnbarb_wall_128", 0);
			SetDynamicObjectMaterial(larek[TotalLarek][lr_obj], 5, 14668, "711c", "gun_ceiling3", 0);
			SetDynamicObjectMaterial(larek[TotalLarek][lr_obj], 6, 6988, "vgnfremnt1", "casinosign1_128", 0);
			SetDynamicObjectMaterial(larek[TotalLarek][lr_obj], 7, -1, "none", "none", -16764058);


			stringer[0] = EOS;
			format(stringer, 1500, "INSERT INTO `lr_table`(`lr_pos0`, `lr_pos1`, `lr_pos2`, `lr_pos3`, `lr_rot0`, `lr_rot1`, `lr_rot2`) VALUES ('%f','%f','%f','%f','%f','%f','%f')",fX,fY,fZ,larek[TotalLarek][lr_pos][3],fRotX,fRotY,fRotZ);
			mysql_pquery(connects,stringer,"","");

			TotalLarek++;

			format(stringer, 128, "Ларёк %i создан",TotalLarek-1);
			SendClientMessage(playerid,-1,stringer);

			DeletePVar(playerid,"editlr");
			return 1;
		}
	}*/


	return 1;
}//Dynamic



public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	MoveDynamicObject(objectid, x, y, z, 10.0, rx, ry, rz);
  //  format(stringer, 64, "%.2f,%.2f,%.2f,%.2f,%.2f,%.2f",x,y,z,rx,ry,rz);
   // SendClientMessage(playerid,COLOR_LIGHTRED,stringer);
	if(response == EDIT_RESPONSE_FINAL)
	{
		printf ("%.4f,%.4f,%.4f,%.4f,%.4f,%.4f",x,y,z,rx,ry,rz);
	}
	if ( response == EDIT_RESPONSE_CANCEL )
	{
		new h = p_info[playerid][pHouse],
			j = GetPVarInt(playerid,"j_h") - 1;
		if ( j != -1 )
		{
			if ( gHouseFurniture[h][j][Furn_ObjectID] == objectid ) {
				DestroyDynamicObject(gHouseFurniture[h][j][Furn_ObjectID]);
				gHouseFurniture[h][j][Furn_ObjectID] = -1;
			}
		}
	}
	if ( response == EDIT_RESPONSE_FINAL )
	{
		new h = p_info[playerid][pHouse],
			j = GetPVarInt(playerid,"j_h") - 1;
		if ( j != -1 )
		{
			if ( gHouseFurniture[h][j][Furn_ObjectID] == objectid ) {
				DestroyDynamicObject(gHouseFurniture[h][j][Furn_ObjectID]);
				gHouseFurniture[h][j][Furn_X] = x;
				gHouseFurniture[h][j][Furn_Y] = y;
				gHouseFurniture[h][j][Furn_Z] = z;
				gHouseFurniture[h][j][Furn_RX] = rx;
				gHouseFurniture[h][j][Furn_RY] = ry;
				gHouseFurniture[h][j][Furn_RZ] = rz;
				gHouseFurniture[h][j][Furn_ObjectID] = CreateDynamicObject(gHouseFurniture[h][j][Furn_Model],
						gHouseFurniture[h][j][Furn_X],
						gHouseFurniture[h][j][Furn_Y],
						gHouseFurniture[h][j][Furn_Z],
						gHouseFurniture[h][j][Furn_RX],
						gHouseFurniture[h][j][Furn_RY],
						gHouseFurniture[h][j][Furn_RZ],h);
				UpdateFurnitureHouse(h, j);
			}
		}
	}
	if ( response == EDIT_RESPONSE_CANCEL )
	{
		for ( new j = 0; j < MAX_CREATE_OBJECT_PLAYER; j++ )
		{
			if ( objectid == objects_player_create[playerid][j] )
			{
				DestroyDynamicObject ( objects_player_create[playerid][j] ) ;
				objects_player_create[playerid][j] = -1;
				break;
			}
		}
	}
	if ( response == EDIT_RESPONSE_FINAL )
	{
		for ( new j = 0; j < MAX_CREATE_OBJECT_PLAYER; j++ )
		{
			if ( objectid == objects_player_create[playerid][j] )
			{
				MoveDynamicObject(objectid, x, y, z, 10.0, rx, ry, rz);
				format ( stringer, 128, "Вы установили: {FFFF00}%s {AFAFAF}( %d )", object_list[j][object_list_name], j ) ;
				SendClientMessage ( playerid, -1, stringer ) ;
				break;
			}
		}
	}

	if ( response == EDIT_RESPONSE_CANCEL )
	{
		new freeslot=GetPVarInt(playerid,"f_freeslot")-1;
		if ( freeslot != -1 )
		{
			DestroyDynamicObject(drop_gun[freeslot][dg_object]);
			drop_gun[freeslot][dg_object] = -1;
			drop_gun[freeslot][dg_gun]  =  -1 ;
			drop_gun[freeslot][dg_ammo] = -1;
			DeletePVar(playerid,"f_freeslot");
		}
	}
	if ( response == EDIT_RESPONSE_FINAL )
	{
		new freeslot=GetPVarInt(playerid,"f_freeslot")-1;
		if ( freeslot != -1 )
		{
			if ( objectid == drop_gun[freeslot][dg_object] && drop_gun[freeslot][dg_object] != -1 )
			{
				MoveDynamicObject ( drop_gun[freeslot][dg_object] , x , y , z , 15 , rx, ry, rz ) ;
				//drop_gun[freeslot][dg_area] = CreateDynamicSphere ( x , y , z , 1.0 ) ;
				drop_gun[freeslot][dg_time] = 60;
				drop_gun[freeslot][dg_timer] = SetTimerEx("UpdateDGTime",1000,true,"d", freeslot);
				new stringdg[200];
				format(stringdg,200,""STANDART_GUN_TEXT"", WeaponNames[drop_gun[freeslot][dg_gun]],drop_gun[freeslot][dg_ammo]);
				if(drop_gun[freeslot][dg_text] == Text3D:-1) drop_gun[freeslot][dg_text] = Create3DTextLabel(stringdg,-1,x,y,z+0.2,10.0,GetPlayerVirtualWorld(playerid));
				if(GetPlayerDistanceFromPoint(playerid, x, y, z) < 1.5) FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);

				new weapons[13][2];
				for(new S = 0; S<13; S++)
				{
					GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
				}
				AC_ResetPlayerWeapons ( playerid ) ;
				for(new S = 0; S<13 ; S++)
				{
					if(weapons[S][0] != drop_gun[freeslot][dg_gun] && weapons[S][0] != 0)
					{
						AC_GivePlayerWeapon (playerid,weapons[S][0],weapons[S][1]);
					}
				}
				DeletePVar(playerid,"f_freeslot");
			}
		}
	}
	if ( objectid == radar_object [ playerid ] [ 0 ] )
	{
		if ( response == EDIT_RESPONSE_FINAL )
		{
			MoveDynamicObject ( radar_object [ playerid ] [ 0 ] , x , y , z , 15.0, 0.0 , 0.0 , rz ) ;

			radar_object [ playerid ] [ 1 ] = CreateDynamicObject(19477,x - 0.05 * floatsin(-rz, degrees), y - 0.05 * floatcos(-rz, degrees), z, 0.000, 0.000, rz - 90.0);
			radar_object [ playerid ] [ 2 ] = CreateDynamicObject(19477,x + 0.25 * floatsin(-rz, degrees), y + 0.25 * floatcos(-rz, degrees), z, 0.000, 0.000, rz + 90.0);

			total_radars++;

			new str_radar [ 100 ] ;
			format ( str_radar , 100 , "Радар №{"#cORANGE"}%d{ffffff}\nМаксимальная скорость: {"#cORANGE"}%d {ffffff}км/ч" , total_radars , GetPVarInt ( playerid , "max_speed" ) ) ;
			SetDynamicObjectMaterialText(radar_object [ playerid ] [ 1 ], 0, str_radar, 120, "Segoe Keycaps", 35, 1, -1, 0, 1);
			SetDynamicObjectMaterialText(radar_object [ playerid ] [ 2 ], 0, str_radar, 120, "Segoe Keycaps", 35, 1, -1, 0, 1);

			radar_area [ playerid ] = CreateDynamicSphere ( x , y , z , 35.0 ) ;

			SetPVarInt ( playerid , "total_radars", total_radars);

			if(blocktext[playerid] == Text3D:-1)
			{
				format(stringer, 128, "{"#cWHITE"}Радар установил: "newgrey"%s [%d]", NamePlayer[playerid], playerid);
				blocktext[playerid] = Create3DTextLabel(stringer, -1, x, y, z + 1.5, 3.0, GetPlayerVirtualWorld(playerid));
			}
		}
	}
	if(objectid == br_player[playerid][br_object_text][0] && br_player[playerid][br_object_text][0] != INVALID_OBJECT)
	{
		if(response == EDIT_RESPONSE_FINAL)
		{
			MoveDynamicObject ( br_player[playerid][br_object_text][0] , x , y , z , 15.0, 0.0 , 0.0 , rz ) ;

			if(blocktext[playerid] == Text3D:-1)
			{
				format(stringer, 128, "{"#cWHITE"}Табличку установил: "newgrey"%s [%d]", NamePlayer[playerid], playerid);
				blocktext[playerid] = Create3DTextLabel(stringer, -1, x, y, z + 1.5, 3.0, GetPlayerVirtualWorld(playerid));
			}

			if(br_player[playerid][br_object_text][1] == INVALID_OBJECT)
			{
				br_player[playerid][br_object_text][1] = CreateDynamicObject(19477,x - 0.05 * floatsin(-rz, degrees), y - 0.05 * floatcos(-rz, degrees), z + 2.6, 0.000, 0.000, rz - 90.0);
				SetDynamicObjectMaterialText(br_player[playerid][br_object_text][1], 0, br_player[playerid][br_text],  120, "Ariel", 33, 1, -8943463, 0 , 1 );
				br_player[playerid][br_text][0] = EOS;
			}

			Streamer_Update(playerid);
		}
		else if(response == EDIT_RESPONSE_CANCEL)
		{
			if(blocktext[playerid] != Text3D:-1)
			{
				Delete3DTextLabel(blocktext[playerid]);

				blocktext[playerid] = Text3D:-1;
			}
			if(br_player[playerid][br_object_text][0] != INVALID_OBJECT)
			{
				DestroyDynamicObject(br_player[playerid][br_object_text][0]);
				br_player[playerid][br_object_text][0] = INVALID_OBJECT;
			}
			br_player[playerid][br_text][0] = EOS;
		}
	}

	return 1;
}

public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	if(p_info[playerid][pAdmin] < 12) return 0;
	format(stringer, 128, "ID объекта: %d\nКоординаты объекта: %f,%f,%f", modelid,x,y,z);
	ShowPlayerDialog(playerid, 6567, DIALOG_STYLE_MSGBOX, "Редактор", stringer ,"Изменить", "Удалить");
	SetPVarInt(playerid, "SelectedObject", objectid);
	return 1;
}

public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	if(p_info[playerid][pAdmin] < 7) return 0;
	format(stringer, 128, "ID объекта: %d\nКоординаты объекта: %f,%f,%f", modelid,fX,fY,fZ);
	ShowPlayerDialog(playerid, 6567, DIALOG_STYLE_MSGBOX, "Редактор", stringer ,"Изменить", "Удалить");
	SetPVarInt(playerid, "SelectedObject", objectid);
	return 1;
}
forward get_player_id(playerid);
public get_player_id(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	cache_get_value_int(0,"ID",p_info[playerid][pID]);
	return 1;
}

SetPlayerSpawn(playerid)
{
    DeletePVar(playerid,"connecttime");
	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
    p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
	AC_TogglePlayerControllable(playerid, true);

	if ( p_info[playerid][pWanted] > 6 ) p_info[playerid][pWanted] = 6 ;
	if ( p_info[playerid][pChar] == 0 )
	{
		if ( p_info[playerid][pSex] == 1 )
			p_info[playerid][pChar] = gRegSkins[0][GetPVarInt(playerid,"color_player")][0];
		else
			p_info[playerid][pChar] = gRegSkins[1][GetPVarInt(playerid,"color_player")][0];
	}//s
	if(	p_info[playerid][pModel] == 0 )
	{
		if ( p_info[playerid][pSex] == 1 )
			p_info[playerid][pModel] = gRegSkins[0][GetPVarInt(playerid,"color_player")][0];
		else
			p_info[playerid][pModel] = gRegSkins[1][GetPVarInt(playerid,"color_player")][0];
	}
	if ( p_info[playerid][pWanted] >= 1 )
	{
		SetPlayerWantedLevel(playerid,p_info[playerid][pWanted]);
	}
	else if(GetPlayerWantedLevel(playerid)>0)
	{
		SetPlayerWantedLevel(playerid, 0);
	}
	SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,990);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,990);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,990);
	AC_SetPlayerHealth(playerid, 95.0);

	SetPlayerColorAc(playerid,p_info[playerid][tMember]);

	if(GetPVarInt(playerid,"EPLAYER"))
	{
		AC_SetPlayerPos(playerid,GetPVarFloat(playerid,"e_X"),GetPVarFloat(playerid,"e_Y"),GetPVarFloat(playerid,"e_Z"));

		SetPlayerInterior(playerid,GetPVarInt(playerid,"e_Int"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"e_Virt"));

		SetSpawnInfoEx(playerid, p_info[playerid][pModel], GetPVarFloat(playerid,"e_X"),GetPVarFloat(playerid,"e_Y"),GetPVarFloat(playerid,"e_Z") , 0.0  );

		DeletePVar(playerid,"e_X");
		DeletePVar(playerid,"e_Y");
		DeletePVar(playerid,"e_Z");
		DeletePVar(playerid,"e_Int");
		DeletePVar(playerid,"e_Virt");
		DeletePVar(playerid, "e_time");
		DeletePVar(playerid,"EPLAYER");
		return 1;
	}
	if(GetPVarInt(playerid,"StartRecon"))
	{
		re_choose[playerid][0]=0;
		re_choose[playerid][1]=0;
		re_tick[playerid]=GetTickCount();
		for(new x=0x0; x <= 1; x++) TextDrawHideForPlayer(playerid, Text:ReconText[x]);
		for(new x=0x0; x <= 26; x++) PlayerTextDrawHide(playerid, PlayerText:ReconPlayerText[playerid][x]);
		AC_SetPlayerPos(playerid,GetPVarFloat(playerid,"float_pos_recon_x"),GetPVarFloat(playerid,"float_pos_recon_y"),GetPVarFloat(playerid,"float_pos_recon_z"));
		SetSpawnInfoEx(playerid,p_info[playerid][pModel],GetPVarFloat(playerid,"float_pos_recon_x"),GetPVarFloat(playerid,"float_pos_recon_y"),GetPVarFloat(playerid,"float_pos_recon_z"),0.0);
		SetPlayerInterior(playerid,GetPVarInt(playerid,"int_interior"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"int_virtualworld"));
		CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"StartRecon");
		DeletePVar(playerid,"r_specid");
		DeletePVar(playerid,"float_pos_recon_x");
		DeletePVar(playerid,"float_pos_recon_y");
		DeletePVar(playerid,"int_interior");
		DeletePVar(playerid,"int_virtualworld");
		return 1;
	}
 	if ( GetPVarFloat(playerid, "bootX") != 0.0 )
	{
	    AC_SetPlayerPos(playerid,GetPVarFloat(playerid, "bootX"),GetPVarFloat(playerid, "bootY"),GetPVarFloat(playerid, "bootZ"));
	    SetPlayerVirtualWorld(playerid,GetPVarInt(playerid, "bootVw"));
	    SetPlayerInterior(playerid,GetPVarInt(playerid, "bootInt"));

	    DeletePVar(playerid,"bootX");
	    DeletePVar(playerid,"bootY");
	    DeletePVar(playerid,"bootZ");
	    DeletePVar(playerid,"bootVw");
	    DeletePVar(playerid,"bootInt");
	}
	if(chose_player[playerid])
	{
		SetPlayerVirtualWorld(playerid,playerid + 1);
		SetPlayerInterior(playerid, 18);
		AC_SetPlayerPos(playerid,171.1470,-72.0060,1001.8047);
		SetPlayerFacingAngle(playerid,183.2688);
		AC_TogglePlayerControllable(playerid, false);
		SetSpawnInfoEx(playerid,gRegSkins[p_info[playerid][pSex]-1][GetPVarInt(playerid,"color_player")][0],209.8839,-33.7022,1001.9297,135.7132);
		if(p_info[playerid][pSex] <= 0 || p_info[playerid][pSex]>2) p_info[playerid][pSex] = 1;
		InterpolateCameraPos(playerid, 159.702346, -75.499458, 1003.693725, 172.955993, -74.167945, 1002.740051, 3000);
		InterpolateCameraLookAt(playerid, 164.242813, -73.419937, 1003.449096, 169.928161, -70.365646, 1001.567565, 3000);
		TextDrawShowForPlayer(playerid,tdNextSkin);
		TextDrawShowForPlayer(playerid,tdBackSkin);
		TextDrawShowForPlayer(playerid,tdSelSkin);
		SendClientMessage(playerid,CWHITE,"Следующий скин: {"#cGREEN"}Право (по умолчнию)");
		SendClientMessage(playerid,CWHITE,"Предыдущий скин: {"#cRED"}Лево (по умолчнию)");
		SendClientMessage(playerid,CWHITE,"Выбрать скин: {"#cYELLOW"}Пробел (по умолчнию)");
		SetPlayerSkin(playerid,gRegSkins[p_info[playerid][pSex]-1][GetPVarInt(playerid,"color_player")][0]);
		return 1;
	}
	if(p_info[playerid][pReg] == 1)
	{
		p_info[playerid][pReg] = 0;
		p_info[playerid][pLevel] = LEVEL_REG;
		p_info[playerid][pCash] = CASH_REG;
		p_info[playerid][pRouble] = 0;
		p_info[playerid][tDonatemoney2] = DONATE_REG;
		SetPlayerScore(playerid, p_info[playerid][pLevel]);
		new get_password [200], get_drug[25];
		GetPVarString(playerid, "reg_password",get_password,199);
		GetPVarString(playerid, "pDrug",get_drug,25);
		PlayerCar[playerid][0]=462;
		PlayerCar[playerid][1]=462;
		p_info[playerid][pEat] = 100;
		SetPVarString(playerid,"IpReg",PlayerIp[playerid]);
		mysql_query_string[0] = EOS;
		format(mysql_query_string,1000,"INSERT INTO `accounts` (`tName`, `tKey`, `pIpReg`, `pDataReg`,`pChar`,`pModel`, `pSex`,`pDrug`,`pEmail`,`pNation`,`pAge`) VALUES ('%s', MD5('%s'), '%s', '%d-%s%d-%s%d %02d:%02d:%02d', '%d', '%d', '%d', '%s', '%s', '%d', '%d')",
		NamePlayer[playerid], get_password, PlayerIp[playerid],tmpday, ((tmpmonth < 10) ? ("0") : ("")), tmpmonth, (tmpyear < 10) ? ("0") : (""), tmpyear, tmphour, tmpminute, tmpsecond,p_info[playerid][pChar],p_info[playerid][pModel],p_info[playerid][pSex],get_drug,Email[playerid],p_info[playerid][pNation],p_info[playerid][pAge]);
		mysql_pquery(connects, mysql_query_string, "", "");
		for(new i = 0; i < 10; i++) SendClientMessage(playerid,-1,"");
		SCM(playerid,CGREEN,"Аккаунт зарегистрирован");
		SCM(playerid,CGREEN,"Чтобы открыть меню игрока Используйте {"#cYELLOW"}/menu");
		SetPlayerSkin(playerid,p_info[playerid][pChar]);
		SetPlayerVirtualWorld(playerid,0);
		UpdateMoney(playerid);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "SELECT `ID` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "get_player_id", "i",playerid);
	}
	else SetPlayerScore(playerid, p_info[playerid][pLevel]);
	if(p_info[playerid][pJailTime] > 0 && p_info[playerid][pMestoJail] != 6)
	{
		new rjail = random(3);

		switch(rjail)
		{
			case 0:
			{
				AC_SetPlayerPos(playerid,1601.5387,-1629.0284,1583.8660);
				SetPlayerFacingAngle(playerid,270.3915);
			}
			case 1:
			{
				AC_SetPlayerPos(playerid,1614.9792,-1632.8441,1583.8660);
				SetPlayerFacingAngle(playerid,55.1295);
			}
			case 2:
			{
				AC_SetPlayerPos(playerid,1615.5740,-1625.2820,1583.8660);
				SetPlayerFacingAngle(playerid,132.8369);
			}
		}

		switch( rjail )
		{
			case 0: SetSpawnInfoEx(playerid,255,1601.5387,-1629.0284,1583.8660,270.3915);
			case 1: SetSpawnInfoEx(playerid,255,1614.9792,-1632.8441,1583.8660,55.1295);
			case 2: SetSpawnInfoEx(playerid,255,1615.5740,-1625.2820,1583.8660,132.8369);
		}
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid,(p_info[playerid][pMestoJail] > 3 || p_info[playerid][pMestoJail] < 1) ? (1) : (p_info[playerid][pMestoJail]));
		FreezePlayerForTime(playerid, 1500);
		return 1;
	}
	/* if(Select_Football_Position[playerid] != -1 && Select_Football_Team[playerid] != -1)
	{
		new tf = Select_Football_Team[playerid];
		new ts = Select_Football_Position[playerid];

		AC_SetPlayerPos(playerid,Pos_Position_Football[tf][ts][0],Pos_Position_Football[tf][ts][1],Pos_Position_Football[tf][ts][2]);
		SetPlayerFacingAngle(playerid, Pos_Position_Football[tf][ts][3]);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,1);
		//SetPlayerSkin(playerid, (Select_Football_Team[playerid] == 0) ? (96) : (51));
		SetPlayerColor(playerid,(Select_Football_Team[playerid] == 0)?(0x882200FF):(0x6666EEFF));
		TextDrawShowForPlayer(playerid,TD_Time_Football);
		TextDrawHideForPlayer(playerid,Datum);
		return true;
	} */
	if(GetPVarInt(playerid,"set_zombie") && ZombieTime <= 0)
	{
		if(GetPVarInt(playerid,"set_zombie")==1)
		{
			AC_SetPlayerPos(playerid,2589.1262,-742.9651,949.1508);
			SetPlayerFacingAngle(playerid,91.3431);
			SetPlayerSkin(playerid,162);
		}
		else if(GetPVarInt(playerid,"set_zombie")==2)
		{
			SetPlayerSkin(playerid,285);
			AC_SetPlayerPos(playerid,2462.1116,-744.0629,949.5577);
			SetPlayerFacingAngle(playerid,274.4359);
			AC_GivePlayerWeapon(playerid,31,500);
		}
		SetPlayerColor(playerid,(GetPVarInt(playerid,"set_zombie") == 1)?(0x882200FF):(0x6666EEFF));
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	if(GetPVarInt(playerid,"pteam") && PaintBallStatus)
	{
		new prandomspawn = random(4);
		AC_SetPlayerPos(playerid,SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][0],SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][1],SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][2]);
		SetPlayerFacingAngle(playerid,SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][3]);
		SetSpawnInfoEx(playerid,(GetPVarInt(playerid,"pteam") == 2)?(179):(285),SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][0],SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][1],SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][2],SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][3]);
		//SetPlayerFacingAngle(playerid,SpawnPaintBall [GetPVarInt(playerid,"pteam")-1] [prandomspawn][3]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,10);
		AC_ResetPlayerWeapons(playerid);
		AC_SetPlayerHealth(playerid, 100.0);
		AC_GivePlayerWeapon(playerid,31,500);
		AC_GivePlayerWeapon(playerid,24,500);
		SetPlayerColor(playerid,(GetPVarInt(playerid,"pteam") == 2)?(0x882200FF):(0x6666EEFF));
		//SetPlayerSkin(playerid,(GetPVarInt(playerid,"pteam") == 2)?(179):(285));
		return 1;
	}
	if(GetPVarInt(playerid,"pHospital"))
	{
		AC_SetPlayerHealth(playerid,float(5 + random(20)));
		SetPlayerInterior(playerid, 4);
		SetPlayerVirtualWorld(playerid, 0);
		new rand = random(sizeof(HospitalSpawn));
		AC_SetPlayerPos(playerid, HospitalSpawn[rand][0], HospitalSpawn[rand][1], HospitalSpawn[rand][2]);
		SCM(playerid,CWHITE,"Вам придется пройти курс лечения или вылечиться у медика. Войдите в палату и делайте процедуру.");
		return 1;
	}
	SetPlayerVirtualWorld(playerid,0);
	if(p_info[playerid][pRoom]>0 && p_info[playerid][pFloor]>0 && p_info[playerid][pSpawn] == 1)
	{
		new floor = p_info[playerid][pFloor];
		new room = p_info[playerid][pRoom];

		AC_SetPlayerPos(playerid,2072.7188,-3426.2156,1669.9690);
		SetPlayerFacingAngle(playerid,203.0513);
		SetSpawnInfoEx(playerid,255,2072.7188,-3426.2156,1669.9690,203.0513);
		SetPlayerInterior(playerid, room);
		SetPlayerVirtualWorld(playerid, floor);
		return 1;
	}
	if ( p_info[playerid][pFamily] > 0 && p_info[playerid][pSpawn] == 2 )
	{
			for(new house = 1; house < TotalHouse; house++)
			{
				if ( gHouses[house][hFamily] == p_info[playerid][pFamily] )
				{
					SetExitHousePos(playerid,house,true);
					SetPlayerVirtualWorld(playerid, house);
					return 1;
				}
			}
	}
	else if( ( p_info[playerid][pHouse] > 0 && p_info[playerid][pSpawn] == 1 ) || ( p_info[playerid][pTempKey] > 0 && p_info[playerid][pSpawn] == 1 ) )
	{
		if(p_info[playerid][pTempKey] > 0)
		{
			SetExitHousePos(playerid,p_info[playerid][pTempKey],true);
			SetPlayerVirtualWorld(playerid, p_info[playerid][pTempKey]);
		}
		if(p_info[playerid][pHouse] > 0)
		{
			SetExitHousePos(playerid,p_info[playerid][pHouse],true);
			SetPlayerVirtualWorld(playerid, p_info[playerid][pHouse]);
		}

		return 1;
	}

	AC_SetPlayerPos(playerid,f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ] + 0.3 );
	SetPlayerFacingAngle(playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] );
	SetSpawnInfoEx(playerid,255,f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ] , f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] );
	AC_TogglePlayerControllable(playerid, true);
	SetPlayerInterior ( playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn_int ] ) ;
	SetPlayerVirtualWorld ( playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn_virt ] ) ;
	return 1;
}



CMD:test_fraction_spawn(playerid)
{
	SetTimerEx("CameraSetPlayerPos", 50, 0, "iffff", playerid,
				f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ],
				f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ],
				f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ],
				f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ]);
	return 1;
}

forward OnPlayerSyncDeath(playerid, killerid, reason);
public OnPlayerSyncDeath(playerid, killerid, reason)
{
//    if(!IsPlayerStreamedIn(playerid, killerid)) return 1;
	if(AC_NoTwoKillFrag[playerid]) return 1;
	AC_NoTwoKillFrag[playerid] = true;
	if(killerid != INVALID_PLAYER_ID)
	{
		if ( !(GetPVarInt(playerid,"pteam") && PaintBallStatus) && !(GetPVarInt(playerid,"set_zombie")  && ZombieTime <= 0)) pc_cmd_dropguns(playerid);
		if( bl_info [ playerid ] [ bl_fraction ] [ p_info [ killerid ] [ tMember ] ] )
		{
			bl_info [ playerid ] [ bl_is_killed ] = true ;
			bl_info [ playerid ] [ bl_finder ] = INVALID_PLAYER_ID;
			bl_info [ playerid ] [ bl_kills ] [ p_info [ killerid ] [ tMember ] ] ++;
			if( bl_info [ playerid ] [ bl_kills ] [ p_info [ killerid ] [ tMember ] ] >= f_info [ p_info [ killerid ] [ tMember ] ] [ f_bl_config ] [ 2 ] )
			{
				bl_info [ playerid ][ bl_fraction ] [ p_info [ killerid ] [ tMember ] ] = false;
				bl_info [ playerid ][ bl_kills ] [ p_info [ killerid ] [ tMember ] ] = 0;

				new text_string [ 128 ] ;
				format ( text_string, sizeof text_string, "[BLACK LIST] %s откупился кровью и был вычеркнут из черного списка %s.", NamePlayer [ playerid ], f_info [ p_info [ killerid ] [ tMember ] ] [ f_name ]);
				SendFamilyMessage ( p_info [ killerid ] [ tMember ], 0x01FCFFC8, text_string ) ;
				format( text_string, sizeof text_string, "[BLACK LIST] Вы откупились кровью и были вычеркнуты из черного списка %s.", f_info [ p_info [ killerid ] [ tMember ] ] [ f_name ]);
				SCM (playerid, 0x01FCFFC8, text_string);

				format ( text_string, sizeof ( text_string ), "DELETE FROM `fraction_bl` WHERE `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", NamePlayer [ playerid ], p_info [ killerid ] [ tMember ] ) ;
				mysql_pquery(connects, text_string, "", "");


			}
			else
			{
				new text_string [ 128 ] ;
				format ( text_string, sizeof text_string, "[BLACK LIST] Заплати или терпи, %s помнит о тебе.", f_info [ p_info [ killerid ] [ tMember ] ] [ f_name ]);
				SCM ( playerid, 0x01FCFFC8, text_string ) ;
				format ( text_string, sizeof text_string, "[BLACK LIST] %s завалил %s. Крепись братва, в следующий раз терпила даст монету.", NamePlayer [ killerid ], NamePlayer [ playerid ] ) ;
				SendFamilyMessage ( p_info [ killerid ] [ tMember ], 0x01FCFFC8, text_string ) ;

				format ( text_string, sizeof ( text_string ), "UPDATE `fraction_bl` SET `f_bl_death` = '%d' WHERE `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", bl_info [ playerid ] [ bl_kills ] [ p_info [ killerid ] [ tMember ] ], NamePlayer [ playerid ], p_info [ killerid ] [ tMember ] ) ;
				mysql_pquery(connects, text_string, "", "");

			}
		}
		if(GetPVarInt(playerid,"pteam") && GetPVarInt(killerid,"pteam"))
		{
			if(GetPVarInt(playerid,"pteam") != GetPVarInt(killerid,"pteam"))
			{
				PaintBallKills[GetPVarInt(killerid,"pteam")-1]++;

				foreach(i)
				{
					if(GetPVarInt(i,"pteam"))
						SendDeathMessageToPlayer(i,killerid,playerid,reason);
				}
				AC_SetPlayerHealth(killerid,100.0);
			}
		}
		if(!IsACop(killerid) && !GetPVarInt(killerid,"pteam") && !(GetPVarInt(killerid, "set_zombie")  && ZombieTime <= 0))
		{
			p_info[killerid][pKills] ++;
			UpdatePlayerData(killerid,"pKills",p_info[killerid][pKills]);
			p_info[killerid][pZakonp] --;
			UpdatePlayerData(killerid,"pZakonp",p_info[killerid][pZakonp]);
		}
		if(IsAGang(killerid) && IsAGang(playerid))
		{
			for(new i = 0; i < TotalGz; i++)
			{
				if(GZInfo[i][ZoneOnBattle] == 1)
				{
					if(p_info[killerid][tMember] != p_info[playerid][tMember])
					{
						if(p_info[killerid][tMember] == GZInfo[i][gNapad] || p_info[killerid][tMember] == GZInfo[i][gFrakVlad])
						{
							if(p_info[playerid][tMember] == GZInfo[i][gNapad] || p_info[playerid][tMember] == GZInfo[i][gFrakVlad])
							{
								SendDead(p_info[killerid][tMember],p_info[playerid][tMember],killerid,playerid,reason);
								CountOnZone[p_info[killerid][tMember]]++;
								SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot")+1);
								break;
							}
						}
					}
				}
			}
		}
		if(BizWarTime > 0)
		{
			if(p_info[killerid][tMember] != p_info[playerid][tMember])
			{
				if(p_info[killerid][tMember] == MZInfo[bNapad] || p_info[killerid][tMember] == MZInfo[bFrakVlad])
				{
					if(p_info[playerid][tMember] == MZInfo[bNapad] || p_info[playerid][tMember] == MZInfo[bFrakVlad])
					{
						//if ( PlayerToKvadrat ( killerid, MZInfo [ bWarPos ] [ 0 ], MZInfo [ bWarPos ] [ 1 ], MZInfo [ bWarPos ] [ 2 ], MZInfo [ bWarPos ] [ 3 ] ) && PlayerToKvadrat ( playerid, MZInfo [ bWarPos ] [ 0 ], MZInfo [ bWarPos ] [ 1 ], MZInfo [ bWarPos ] [ 2 ], MZInfo [ bWarPos ] [ 3 ] ) )
						//{
							SendDead(p_info[killerid][tMember],p_info[playerid][tMember],killerid,playerid,reason);
							MZInfo[bCountDead][p_info[killerid][tMember]]++;
							SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot") + 1);
						///}
					}
				}
			}
		}
		if(p_info[playerid][pWanted] > 0 && !GetPVarInt(playerid,"pteam") && !(!GetPVarInt(playerid, "set_zombie")  && ZombieTime <= 0))
		{
			if(IsACop(killerid))
			{
				if(p_info[playerid][pWanted] >= 1 && p_info[playerid][pWanted] <= 6)
				{
					for(new i = 1; i <= 6; i++)
					{
						if(p_info[playerid][pWanted] == i)
						{
							TransferMoney(killerid,p_info[killerid][pCash]+(i*100),(i*100),"посадил преступника в тюрьму");
							p_info[killerid][pCash] += (i*100);
							UpdateMoney(killerid);

							format(stringer, 128, "Вас посадили в тюрьму на %i секунд.", i*600);
							SendClientMessage(playerid,CYELLOW,stringer);

							format(stringer, 128, "Вы посадили преступника на %i секунд. Премия %i$", (i*600),(i*100));
							SendClientMessage(killerid,CYELLOW,stringer);

							Insert_Reason_Jail(p_info[playerid][pID], NamePlayer[killerid], "Вас посадил полицейский в тюрьму");

							p_info[playerid][pWanted] = 0;
							UpdatePlayerData(playerid,"pWanted",p_info[playerid][pWanted]);
							p_info[playerid][pJailTime] = (i*600);
							UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pJailTime]);
							p_info[playerid][pMestoJail] = GetJailWorldID(killerid);
							UpdatePlayerData(playerid,"pMestoJail",p_info[playerid][pMestoJail]);
							AC_ResetPlayerWeapons(playerid);
							break;
						}
					}
				}
			}
		}
	}

	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	//if(AC_NoTwoKillFrag[playerid]) return 1;
	//AC_NoTwoKillFrag[playerid] = true;
	if(IsAGang(playerid) || (GetPVarInt(playerid,"pteam") && PaintBallStatus) || (GetPVarInt(playerid, "set_zombie")  && ZombieTime <= 0)) gKilledWithAntiDeath[playerid]=5;
	if(gKilledWithAntiDeath[playerid] != 5)
	{
		if(killerid == INVALID_PLAYER_ID || gKilledWithAntiDeath[playerid] != 0)
		{
			GetPlayerPos(playerid, gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2]);
			gDeathDataIntVW[playerid][0]=GetPlayerVirtualWorld(playerid);
			gDeathDataIntVW[playerid][1]=GetPlayerInterior(playerid);

			gKilledWithAntiDeath[playerid] = 2;
		}
	}
	/*if(BallHolder == playerid)
		RecreateBall();
	if(PoolAimer == playerid)
	{
		PoolAimer = -1;
		TextDrawHideForPlayer(playerid, PoolTD[0]);
		TextDrawHideForPlayer(playerid, PoolTD[1]);
		TextDrawHideForPlayer(playerid, PoolTD[2]);
		TextDrawHideForPlayer(playerid, PoolTD[3]);
		if(AimObject != -1) DestroyObject(AimObject);
		//AimObject = -1;
	}
	if(PlayingPool[playerid])
	{
		PlayingPool[playerid] = 0;
		new
			count = GetPoolPlayersCount();
		if(count <= 0)
		{
			PoolStarted = 0;
			RespawnPoolBalls();
		}
	}*/
	if(p_mh[playerid]!=PlayerText:-1)
	{
			PlayerTextDrawHide(playerid,p_mh[playerid]);
			PlayerTextDrawDestroy(playerid,p_mh[playerid]);
			p_mh[playerid]=PlayerText:-1;
			for(new i=0; i<8; i++)
			{
				TextDrawShowForPlayer(playerid,Logotype[i]);
				//TextDrawShowForPlayer(playerid, Datum);
			}
	}
	DeletePVar(playerid, "tazershoot");
	AC_PlayerToggle[playerid]=1;
	AC_PlayerToggleTime[playerid]=0;


	AC_plsp[playerid]=true;
//    if(GetPVarInt(playerid,"id_rep") > 0) gReport[GetPVarInt(playerid,"id_rep")-1][repEdit] = false;
	GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
	p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
 	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	PlayerWeaponTime[playerid]=5+floatround(GetPlayerPing(playerid)/100);

	AC_ResetPlayerWeapons(playerid);

	if ( !IsAGang ( playerid ) && !ISAMAFIA ( playerid ) )
	{
		SetPVarInt(playerid, "pHospital", true);
	}
	DeletePVar(playerid, "FiveSecound");
	DrugEffect[playerid] = 0;
	if(GetPVarInt(playerid,"playerWalkTimer"))
	{
		KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
		DeletePVar(playerid,"playerWalkTimer");
	}
	if(GetPVarInt(playerid,"FireTimerr"))
	{
		KillTimer(GetPVarInt(playerid,"FireTimerr"));
		DeletePVar(playerid,"FireTimerr");
		HidePlayerProgressBar(playerid, universalbar[playerid]);
		DestroyPlayerProgressBar(playerid, universalbar[playerid]);
	}
	if(T_IsValid3DTextLabel(playerTextAction[playerid]))
	{
		DestroyDynamic3DTextLabelEx(playerTextAction[playerid]);
		DeletePVar(playerid,"playerUseAction");
	}
	if((playerFlags[playerid] & YN))
	{
		playerFlags[playerid] ^= YN;
		KeyYN{playerid} = 0;
		for(new i; i < 2; i++) PlayerTextDrawHide(playerid, YNText[playerid][i]);
		HidePlayerProgressBar(playerid, universalbar[playerid]);
		DestroyPlayerProgressBar(playerid, universalbar[playerid]);
		CreateBarForPlayer[playerid] = 0;
		SetPVarInt(playerid, "TryingVzlom", 0);
	}
	/*if(IsPlayerInDynamicArea(playerid, zones[PLAYER_IN_LOS_SANTOS]))
	{
		SetPVarInt(playerid,"zone_bolka",PLAYER_IN_LOS_SANTOS + 1);
	}
	else if(IsPlayerInDynamicArea(playerid, zones[PLAYER_IN_SAN_FIERRO]))
	{
		SetPVarInt(playerid,"zone_bolka",PLAYER_IN_SAN_FIERRO + 1);
	}
	else if(IsPlayerInDynamicArea(playerid, zones[PLAYER_IN_LAS_VENTURAS]))
	{
		SetPVarInt(playerid,"zone_bolka",PLAYER_IN_LAS_VENTURAS + 1);
	}*/
	DeletePVar(playerid,"CarSpawn");
	if(MinerDraw[playerid] != PlayerText:-1)
	{
		PlayerTextDrawHide(playerid,MinerDraw[playerid]);
	}
	if(GetPVarInt(playerid,"adchecking_fix"))
	{
			gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
			DeletePVar(playerid,"adchecking_fix");
	}
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(GetPVarInt(playerid,"K_Times") > 1)
	{
		CheatKick(playerid,1);
	}
	SetPVarInt(playerid,"check_teleport", 3);
	DeletePVar(playerid,"pMasked");
	AC_ResetPlayerWeapons(playerid);
	AC_SetPlayerHealth(playerid, 100);

	DeletePVar(playerid,"takephone");
	DeletePVar(playerid,"usemats");
	DeletePVar(playerid, "TempMats");

	if(p_info[playerid][pJob] == 7) p_info[playerid][pJob] = 0;
	DisablePlayerCheckpoint(playerid);
	DeletePVar(playerid,"LiveOffer");
	DeletePVar(playerid,"TalkingLive");
	DeletePVar(playerid,"LiveOfferls");
	DeletePVar(playerid,"TalkingLivels");
	DeletePVar(playerid,"Tel");

	if(IsAMedic(playerid)) Medics --;

	if(GetPVarInt(playerid, "GYM_Dumbbells") == 1)
	{
		SetPVarInt(playerid, "GYM_Dumbbells", 0);
		RemovePlayerAttachedObject(playerid, 2);
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[7] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[11] = false;
		else SimulatorUse[3] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bar") == 1)
	{
		SetPVarInt(playerid, "GYM_Bar", 0);
		RemovePlayerAttachedObject(playerid, 2);
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[6] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[10] = false;
		else SimulatorUse[2] = false;
	}
	if(GetPVarInt(playerid, "GYM_Thread") == 1)
	{
		SetPVarInt(playerid, "GYM_Threadr", 0);
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[5] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[9] = false;
		else SimulatorUse[1] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bike") == 1)
	{
		SetPVarInt(playerid, "GYM_Bike", 0);
		if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[4] = false;
		else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[8] = false;
		else SimulatorUse[0] = false;
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerAuthorized(playerid) == PLAYER_OFFLINE)
	{
		SCM(playerid,CWHITE, "Необходимо авторизироваться");
		KickEx(playerid);
		return 0;
	}
	AC_plsp[playerid]=true;
	return 1;
}



forward Animation_Death(playerid);
public Animation_Death(playerid)
{
	SetPVarInt(playerid, "anti_sbiv_time", unix+99999);
	FIXES_ApplyAnimation( playerid, "SWEET", "SWEET_INJUREDLOOP", 4.1, 0, 0, 0, 1, 0, 1 );
	if(GetPlayerDrunkLevel(playerid)<4000)SetPlayerDrunkLevel (playerid, 4000);
	return true;
}
forward Animation_Death_2(playerid);
public Animation_Death_2(playerid)
{
	SetPVarInt(playerid, "anti_sbiv_time", unix+99999);
	FIXES_ApplyAnimation( playerid, "PED", "KO_SHOT_FRONT", 4.1, 0, 0, 0, 1, 0, 1 );
	if(GetPlayerDrunkLevel(playerid)<4000)SetPlayerDrunkLevel (playerid, 4000);
	return true;
}


//SWEET SWEET_INJUREDLOOP

//SetTimerEx ( ""



public OnPlayerSpawn(playerid)
{

	if ( GetPVarInt ( playerid, "sm_started" ) )
	{
		CancelSelectTextDraw ( playerid ) ;
		PlayerTextDrawDestroy ( playerid, sm_ptd [ playerid ] ) ;
		sm_ptd [ playerid ] = PlayerText:INVALID_TEXT_DRAW ;
		for ( new i = 0 ; i < 4 ; i ++ )
		{
			TextDrawHideForPlayer ( playerid, sm_td [ i ] ) ;
		}
		sm_used [ GetPVarInt ( playerid, "p_sm_used" ) - 1 ] = false ;
		DeletePVar ( playerid, "p_sm_used" ) ;
	}
	if(IsPlayerAuthorized(playerid) == PLAYER_OFFLINE || player_show_FIND[playerid] == false)
	{
		SendErr(playerid, "Вам нужно авторизироватся");
		if ( !player_show_FIND[playerid] ) SendClientMessage(playerid,-1,"#11 - Ошибка подключения к базе данных");
		KickEx(playerid);
		return 0;
	}
	SetPlayerWeather(playerid,CurrentWeazer);
	if(GetPVarInt(playerid,"rent_bike"))
	{
		SendClientMessage(gVehicles[GetPVarInt(playerid,"rent_bike")-1][vRentPlayer],COLOR_GREY,"Ваш велосипед был удален.");
		if(gVehicles[GetPVarInt(playerid,"rent_bike")-1][vRentPlayerText] != Text3D:-1)
		{
			DestroyDynamic3DTextLabel(gVehicles[GetPVarInt(playerid,"rent_bike")-1][vRentPlayerText]);
			gVehicles[GetPVarInt(playerid,"rent_bike")-1][vRentPlayerText] = Text3D:-1;
		}
		DestroyVehicleOP(GetPVarInt(playerid,"rent_bike"));
		DeletePVar(playerid,"rent_bike");
	}
	if(GetPVarInt(playerid,"Miner"))
	{
			DisablePlayerCheckpoint(playerid);

			format(stringer,128,"Вы закончили работу, Ваш заработок: %i$", GetPVarInt(playerid,"pJobAmount.2"));
			SCM(playerid,0xa4cd00AA, stringer);

			SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");
			p_info[playerid][pSalary] += GetPVarInt(playerid,"pJobAmount.2");
			UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);

			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			PlayerTextDrawHide(playerid, MinerDraw[playerid]);
			DeletePVar(playerid, "Miner");
			DeletePVar(playerid, "pJobAmount.2");
			DeletePVar(playerid, "MinerCount");
			DeletePVar(playerid, "miner_camni");
	}
	if(GetPVarInt(playerid,"lesopilka"))
	{
		AC_ResetPlayerWeapons(playerid);
		PlayerTextDrawHide(playerid,MinerDraw[playerid]);
		SendClientMessage(playerid, -1,"Рабочий день {"#cRED"}окончен");
		format(stringer, 128, "Вы заработали: {"#cGREEN"}%i$",(GetPVarInt(playerid,"coung_kg")*2));
		SendInf(playerid, stringer);
		SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");
		p_info[playerid][pSalary] += (GetPVarInt(playerid,"coung_kg")*2);
		UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);
		SetPlayerSkin(playerid, GetPVarInt(playerid,"old_skin"));
		DeletePVar(playerid,"id_derevo");
		DeletePVar(playerid,"lesopilka");
		DeletePVar(playerid,"count_les");
		DeletePVar(playerid,"coung_kg");
		ClearAnimations(playerid);
		DisablePlayerCheckpoint(playerid);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	}
	FinishJobFarm(playerid);
	AC_NoTwoKillFrag[playerid] = false;
	if(GetPVarInt(playerid,"request_use"))return 1;
	if(gKilledWithAntiDeath[playerid] == 2)
	{
		if(p_info[playerid][tMember])
		{
			SetPlayerSkin(playerid,(StartWork(playerid) && !start_work[playerid]) ? (p_info[playerid][pChar]) : (p_info[playerid][pModel]));
		}
		else if(p_info[playerid][tMember] <= 0)
		{
			SetPlayerSkin(playerid, p_info[playerid][pChar]);
		}
		//SetPlayerCameraPos(playerid,gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2] - 0.2); 		//Камера позиция.
		//SetPlayerCameraLookAt(playerid,gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2] + 10.0);	 	//Камера направление.

		AC_SetPlayerPos(playerid, gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2]);
		SetPlayerVirtualWorld(playerid,gDeathDataIntVW[playerid][0]);
		SetPlayerInterior(playerid,gDeathDataIntVW[playerid][1]);

		AC_TogglePlayerControllable(playerid, false);
		SetTimerEx("Animation_Death_2",200,0,"i",playerid);
		//FIXES_ApplyAnimation( playerid, "PED", "KO_SHOT_FRONT", 4.1, 0, 0, 0, 1, 0, 1 );

		//FIXES_ApplyAnimation(playerid, "PED", "KO_SHOT_FRONT", 4.0, 0, 0, 0, 0, 1, 1);
		if(damage_text[playerid]==Text3D:-1)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			damage_text[playerid] = Create3DTextLabel("",COLOR_LIGHTRED, x, y, z, 10.5, GetPlayerVirtualWorld(playerid));
			Attach3DTextLabelToPlayer(damage_text[playerid], playerid, 0.0, 0.0, 0.5);
		}//PED KO_SHOT_FRONT
		//SetPVarInt(playerid, "anti_sbiv_time", unix+99999);
		///AC_TogglePlayerControllable(playerid, false);
		////SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid,0xC6C6C6FF, "[Телефон]: Держитесь, скорая уже в пути...");
		SCM(playerid,0xCCCC99FF,"(( Чтобы появиться в больнице введите: /adeath ))");
		SCM(playerid,0xCCCC99FF, "(( Если вас убили просто так, сделайте скрин с /damages и напишите администрации такое: [ID] ДМ))");
		TimeWithDeath[playerid]=120;
		Update3DTextLabelText(damage_text[playerid],COLOR_LIGHTRED,"(( Данный игрок мёртв ))");
		//SetTimerEx("CameraToDeath", 1000, 0, "i", playerid);
		return true;
	}
	if(GetPlayerDrunkLevel(playerid)>0)SetPlayerDrunkLevel (playerid, 0);
	SetPVarInt(playerid, "Dell_Active_Football", unix);
	/*if(BallHolder == playerid)
		RecreateBall();
	PreloadAnimLib(playerid, "POOL");

	if(PoolAimer == playerid)
	{
		PoolAimer = -1;
		TextDrawHideForPlayer(playerid, PoolTD[0]);
		TextDrawHideForPlayer(playerid, PoolTD[1]);
		TextDrawHideForPlayer(playerid, PoolTD[2]);
		TextDrawHideForPlayer(playerid, PoolTD[3]);
		if(AimObject != -1) DestroyObject(AimObject);
		//AimObject = -1;
	}
	if(PlayingPool[playerid])
	{
		PlayingPool[playerid] = 0;
		new
			count = GetPoolPlayersCount();
		if(count <= 0)
		{
			PoolStarted = 0;
			RespawnPoolBalls();
		}
	}*/

	AC_PlayerToggle[playerid]=1;
	AC_PlayerToggleTime[playerid]=0;
	/*if(IsSelfieCamera[playerid][0] == 1)
	{
		if(IsValidObject(IsSelfieCamera[playerid][1]))
		{
			DestroyObject(IsSelfieCamera[playerid][1]);
		}
		IsSelfieCamera[playerid][0] = 0;
	}*/
	GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
	p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
 	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	AC_Healthtime[playerid] = 4;
	if(MinerDraw[playerid] != PlayerText:-1)
	{
		PlayerTextDrawHide(playerid,MinerDraw[playerid]);
	}
	DeletePVar(playerid,"K_Times");
	SetPVarInt(playerid,"PreloadAllAnims",4);
	PlayerWeaponTime[playerid]=12+floatround(GetPlayerPing(playerid)/100);
	ServerHP[playerid] = 100.0;
	UpdateHealthBand(playerid);
	UpdatePlayerShield(playerid, 0.0);
	UsingShield[playerid] = false;
	p_info[playerid][pShield] = 0.0;
	if(GetPVarInt(playerid,"editadvert"))
	{
			gAdvert[GetPVarInt(playerid,"editadvert")-1][adCheking]=false;
	}
	if(IsPlayerAuthorized(playerid) == PLAYER_ONLINE)
	{
		SetPVarInt(playerid,"check_teleport", 4);

		AC_SetPlayerHealth(playerid, 100.0);
		SetPlayerSpawn(playerid);
		DP_SetPlayerFightingStyle(playerid);

		for ( new i ; i < 13 ; i ++ )
		{
			if ( GunPlayer [ playerid ] [ i ] [ 0 ] == 0 || GunPlayer [ playerid ] [ i ] [ 1 ] == 0 ) continue ;
			if ( GunPlayer [ playerid ] [ i ] [ 0 ] == 46 ) continue;
			AC_GivePlayerWeapon ( playerid,GunPlayer [ playerid ] [ i ] [ 0 ], GunPlayer [ playerid ] [ i ] [ 1 ] ) ;
		}

		for(new ac = 5; ac < MAX_PLAYER_ATTACHED_OBJECTS; ac++)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, ac))
			{
				RemovePlayerAttachedObject(playerid,ac);
			}
			if(acc_player[playerid][acc_object_id][ac - 5] == -1) continue;

			new Float:frx, Float:fry, Float:frz;
			GetOffsetAttachedAccesories(acc_player[playerid][acc_object_id][ac - 5],frx,frx,frx,frx,fry,frz);

			for(new g=0; g<11; g++)
			{
				for(new h=0; h<33; h++)
				{
					if(acc_player[playerid][acc_object_id][ac - 5] == id_acc[g][h])
					{
						if(h == 9) SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],6,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						else if(h == 10) SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],1,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						else SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],2,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);

						break;
					}
				}
			}
		}
	}
	DeletePVar(playerid, "anti_sbiv_time");
	AC_plsp[playerid]=true;
	//SetPlayerTeam(playerid, 1);
	SetPlayerTime(playerid, ic_time_hours, ic_time_minutes);
	if(p_info[playerid][tMember])
	{
		SetPlayerSkin(playerid,(StartWork(playerid) && !start_work[playerid]) ? (p_info[playerid][pChar]) : (p_info[playerid][pModel]));
	}
	else if(p_info[playerid][tMember] <= 0 && !chose_player[playerid])
	{
		SetPlayerSkin(playerid, p_info[playerid][pChar]);
	}
	if(Select_Football_Position[playerid] != -1 && Select_Football_Team[playerid] != -1) SetPlayerSkin(playerid, (Select_Football_Team[playerid] == 0) ? (96) : (51));
	for(new i = 0; i < MAX_DAMAGES_STRING; i++)
	{
		if(gDamagesData[playerid][i][gdBody]==-1) continue;
		gDamagesData[playerid][i][gdBody] = -1;
		gDamagesData[playerid][i][gdTime] = 0;
		gDamagesData[playerid][i][gdGun] = 0;
		gDamagesData[playerid][i][gdDamage] = 0.0;
		gDamagesData[playerid][i][gdNameDamages][0] = EOS;
		gDamagesData[playerid][i][gdNameID] = 0;
	}
	if(damage_text[playerid]!=Text3D:-1)
	{
		Delete3DTextLabel(damage_text[playerid]);
		damage_text[playerid]=Text3D:-1;
	}
	DeletePVar(playerid,"anti_sbiv_time");
	SetPVarInt(playerid,"GameStol",88);
	if(gKilledWithAntiDeath[playerid]==5) gKilledWithAntiDeath[playerid]=0;
	ResetPlayerDynamicCP(playerid);
	
	new boot_id = GetPVarInt(playerid, "VehicleBootID");
	if(boot_id != 0)
	{
		DeletePVar(playerid, "VehicleBootID");
		new Float: pos_x,
			Float: pos_y,
			Float: pos_z;
		GetCoordBootVehicle(boot_id, pos_x, pos_y, pos_z);
		AC_SetPlayerPos(playerid, pos_x, pos_y, pos_z);
	}
	boot_OnPlayerReconnect(playerid);
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPVarInt(playerid,"count_les")>=100 && IsPlayerInRangeOfPoint(playerid, 3.0, -749.0853,-121.2919,66.0043))
	{
		FIXES_ApplyAnimation(playerid,"CARRY","putdwn",2.05,1,0,0,0,900);

		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid,3);
		new kg_sklad = LESOPILKA_ZP_1 + random(LESOPILKA_ZP_2);
		SetPVarInt(playerid,"coung_kg",GetPVarInt(playerid,"coung_kg")+kg_sklad);
		DeletePVar(playerid,"count_les");
		format(stringer, 128, "PROCENT: %i % ~n~AMOUNT: %d KG",GetPVarInt(playerid,"count_les"),GetPVarInt(playerid,"coung_kg"));
		PlayerTextDrawSetString(playerid,MinerDraw[playerid],stringer);
		SetPVarInt(playerid,"id_derevo",random(38));
		new slot = GetPVarInt(playerid, "id_derevo");
		SetPlayerCheckpoint(playerid, Derevo[slot][0],Derevo[slot][1],Derevo[slot][2], 3.0);

		derevo_sklad += kg_sklad;

		stringer[0] = EOS;
		format(stringer,128,"{ffffff}Склад:\n{33AA33}%i {ffffff}кг",derevo_sklad);
		UpdateDynamic3DTextLabelText(derevo_text, 0xFFFFFFFF, stringer);

		if(QuestStep[1][playerid]==5)
		{
			quest_amount_lesopilka[playerid]++;
			if(quest_amount_lesopilka[playerid]>=MAX_QUEST_LESOPILKA)
			{
				SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
				QuestStep[1][playerid] = 6;
				UpdatePlayerQuestStep(playerid);
			}
			UpdatePlayerQuestAmount(playerid);
		}

		return 1;
	}
	if(GetPVarInt(playerid, "lesopilka"))
	{
		if(!GetPVarInt(playerid,"show_les_mes"))
		{
			SendClientMessage(playerid,0xEFEFF7AA,"Начинайте пилить дерево, пока оно не упадет. Следите за {AFAFAF}'PROCENT' {EFEFF7}справа.");
			SetPVarInt(playerid, "show_les_mes", true);

			return 1;
		}
	}
	if(GetPVarInt(playerid,"get_patron") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsAArm(playerid))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
		{
			for(new place = 0; place <fraction_amount; place++)
			{
				if(PlayerToPoint(10.0,playerid,frac_place_put[place][0],frac_place_put[place][1],frac_place_put[place][2]))
				{
					if(GetPVarInt(playerid,"get_type"))
					{
						PutPatron(playerid,GetPVarInt(playerid,"get_type"));
					}
					return 1;
				}
			}
		}
	}
	if(GetPVarInt(playerid,"rent_car")) DisablePlayerCheckpoint(playerid);
	else if(GetPVarInt(playerid,"gPlayerCheckpointStatus")==12)
	{
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid,"gPlayerCheckpointStatus");
		GameTextForPlayer(playerid, "~y~~h~YOUR IN~n~~b~~h~HOME", 5000, 1);
		return 1;
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

forward LoadProd(playerid);
public LoadProd(playerid)
{
	if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER)
	{
		DeletePVar(playerid,"count_prod2");
		return 1;
	}
	new veh = GetPlayerVehicleID(playerid);

	format(stringer,144,"{f0f0f0}[%s: %d/1000]\n{5DD174}Бизнес: Не выбран", (gVehicles[veh-1][vJob]==3) ? ("Топлива") : ("Продуктов"), GetPVarInt(playerid,"count_prod"));
	UpdateDynamic3DTextLabelText(gPlayerProdText[playerid][0],0xFFFFFF20,stringer);

	if(GetPVarInt(playerid,"count_prod") >= GetPVarInt(playerid,"count_prod2"))
	{
		if(gVehicles[veh-1][vJob]==1)
			SendClientMessage(playerid,CLIGHTBLUE,"Продукты загружены, выберите бизнес куда вы хотите загрузить продукты.");
		else SendClientMessage(playerid,CLIGHTBLUE,"Топливо загружено, выберите бизнес куда вы хотите загрузить.");
		//
		stringer[0] = EOS;
		if(gVehicles[veh-1][vJob]==1)
			strcat(stringer, "{919191}[номер] - {A8413A}[имя бизнеса] - {5364A3}[цена за один продукт] - {5364A3}[к-во требуемых продуктов]\n\n");
		else strcat(stringer, "{919191}[номер] - {A8413A}[имя заправки] - {5364A3}[цена за один литр] - {5364A3}[к-во требуемого топлива]\n\n");
		//
		new count_est=0;
		for(new i=0; i<CountBusiness; i++)
		{
			if(gVehicles[veh-1][vJob]==3 && Business[i][bType]!=13) continue;
			if(Business[i][bProdOrder] <= 0)continue;
			if(count_est>=15) break;
			format(stringer,2400,"%s{919191}%d. "nwhite"- {A8413A}\" %s \" "nwhite"- {5364A3}'%d' "nwhite"- {5364A3}'%d'\n",stringer,i+1,Business[i][BizName],Business[i][bProdOrderPrice],Business[i][bProdOrder]);
			count_est++;
		}

		if ( count_est == 0 )
		{
			if ( gVehicles[veh-1][vJob] == 1 ) return ShowPlayerDialog(playerid,0000,0,"  ", "{ffffff}Ни один бизнес не заказывает продукты", "Закрыть", "");
			else if ( gVehicles[veh-1][vJob] == 3 ) return ShowPlayerDialog(playerid,0000,0,"  ", "{ffffff}Ни одна заправка не заказывает топливо", "Закрыть", "");
		}

		strcat(stringer,"\n\n"nwhite"Используйте "newgreen"номер "nwhite"бизнеса в поле ниже\n{A8413A}0 {"#cWHITE"}для выхода из меню");
		if(count_est>=15)
		{
			ShowPlayerDialog(playerid,dProdPut,DIALOG_STYLE_INPUT,""neworange"Бизнес",stringer,"Выбрать","Далее >>");
			SetPVarInt(playerid,"prod_next",GetPVarInt(playerid,"prod_next")+20);
		}
		else
		{
			ShowPlayerDialog(playerid,dProdPut,DIALOG_STYLE_INPUT,""neworange"Бизнес",stringer,"Выбрать","Отмена");
		}
		DeletePVar(playerid,"count_prod2");//bType
	}
	else
	{
		SetTimerEx("LoadProd",150,0,"i",playerid);
		SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") + 50);
	}
	return 1;
}



public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(!IsPlayerInRaceCheckpoint(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;

	for(new f = 0; f < MAX_FARMS; f++)
	{
		for(new f2 = 0; f2 < 2; f2++)
		{
			if(VehicleEnters[playerid]==_farm[f][farm_vehicles_finish][f2]){
				new sel = GetPVarInt(playerid, "sel_zerno");
				DisablePlayerRaceCheckpoint(playerid);
				UpdateDynamic3DTextLabelText(_farm[f][farm_vehicles_finish_text][f2],0xFFFFFFDD,TEXT_MACHINE_SELL_FARM_S);
				count_sell_zerno[sel] = _farm[f][farm_count_zerna][f2];
				_farm[f][farm_count_zerna][f2] = 0;

				new update_zerno[64];
				format(update_zerno, 64, "{ffffff}Количество зерна на переработке:\n{ffff00}%d кг", count_sell_zerno[sel]);
				UpdateDynamic3DTextLabelText(sell_zerno_text[sel],-1,update_zerno);


				SetPVarInt ( playerid, "salary_farm", ( GetPVarInt(playerid, "salary_farm") + count_sell_zerno[sel] * 50 ) ) ;
				new farm_string[128];
				format(farm_string, sizeof(farm_string), "~w~3APABOTANO: + ~w~%i ~g~$~n~~w~BCEGO: ~w~%i ~g~$",( count_sell_zerno[sel] * 50 ),GetPVarInt(playerid, "salary_farm"));
				GameTextForPlayer(playerid, farm_string, 1000, 1);
				DeletePVar(playerid, "sel_zerno");

				//TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], true);
				break;
			}
		}
	}//TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
	if(GetPVarInt(playerid, "use_farm_vehicle") > 0)
	{
		for(new f = 0; f < MAX_FARMS; f++)
		{
			for(new f2 = 0; f2 < 3; f2++)
			{
				if(VehicleEnters[playerid] == _farm[f][farm_vehicles_first][f2]){
					if(IsValidDynamicCP(_farm[f][farm_sklad_cp])) TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
					for ( new f3 = 0; f3 < 6; f3++)
					{
						if(IsValidDynamicCP(farm_cp[f][f2][f3])) TogglePlayerDynamicCP(playerid, farm_cp[f][f2][f3], false);
					}
					DisablePlayerRaceCheckpoint(playerid);
					new use_farm_vehicle = GetPVarInt(playerid, "use_farm_vehicle");
					new Float:pi_X, Float:pi_Y, Float:pi_Z, Float:pi_A;
					//new f = GetPVarInt(playerid, "use_farm");
					if ( _farm[f][farm_pickup_first][use_farm_vehicle-1] != -1 )
					{
						DestroyPickup(_farm[f][farm_pickup_first][use_farm_vehicle-1]);
						_farm[f][farm_pickup_first][use_farm_vehicle-1] = -1;
					}
					if ( _farm[f][farm_area_first][use_farm_vehicle-1] != -1 )
					{
						DestroyDynamicArea(_farm[f][farm_area_first][use_farm_vehicle-1]);
						_farm[f][farm_area_first][use_farm_vehicle-1] = -1;
					}
					GetRaceCheckpointFarm(f, use_farm_vehicle-1,pi_X,pi_Y,pi_Z,pi_A);
					SetVehiclePos(VehicleEnters[playerid], pi_X, pi_Y, pi_Z);
					SetVehicleZAngle(VehicleEnters[playerid], pi_A);
					_farm[f][farm_area_first][use_farm_vehicle-1] = CreateDynamicSphere(pi_X - 3.5 * floatsin(-pi_A, degrees), pi_Y - 3.5 * floatcos(-pi_A, degrees), pi_Z, 1.0);
					_farm[f][farm_pickup_first][use_farm_vehicle-1] = CreatePickup(19197, 23, pi_X - 3.5 * floatsin(-pi_A, degrees), pi_Y - 3.5 * floatcos(-pi_A, degrees), pi_Z, 0);
					if(_farm[f][farm_pickup_first][use_farm_vehicle-1] == -1) return SendClientMessage(playerid,-1,"Ошибка. Не создался пикап");
				}
			}
		}
	}

	if(veh_pos_load__Step[playerid] > 0)
	{
		if(veh_pos_load__Step[playerid] == 15)
		{
			//SendClientMessage(playerid,-1,"Конец");
			DisablePlayerRaceCheckpoint(playerid);
			veh_pos_load__Step[playerid] = 0;
		}
		else if(veh_pos_load__Step[playerid] == 14)
		{
			SetPlayerRaceCheckpoint(playerid,4,veh_pos_load__[14][0],veh_pos_load__[14][1],veh_pos_load__[14][2],veh_pos_load__[14][0],veh_pos_load__[14][1],veh_pos_load__[14][2], 30.0);
			veh_pos_load__Step[playerid] = 15;
		}
		else
		{
			SetPlayerRaceCheckpoint(playerid,3,
				veh_pos_load__[veh_pos_load__Step[playerid]][0],
				veh_pos_load__[veh_pos_load__Step[playerid]][1],
				veh_pos_load__[veh_pos_load__Step[playerid]][2],

				veh_pos_load__[veh_pos_load__Step[playerid]+1][0],
				veh_pos_load__[veh_pos_load__Step[playerid]+1][1],
				veh_pos_load__[veh_pos_load__Step[playerid]+1][2], 30.0);
			veh_pos_load__Step[playerid]++;
		}
		return true;
	}
	if(GetPVarInt(playerid,"carmat"))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SendInf(playerid,"Нажмите {"#cGREEN"}H{"#cWHITE"} чтобы начать загрузку");
		DeletePVar(playerid,"carmat");
		return 1;
	}
	if(GetPlayerState(playerid)==2 && GetPlayerVehicleID(playerid)!=0)
	{
		if(GetPVarInt(playerid, "id_cp") && GetPVarInt(playerid,"route") && gVehicles[GetPlayerVehicleID(playerid)-1][vJob] == 8)
		{
			SetNextBusCP(playerid);
			return 1;
		}
	}

	if(GetPVarInt(playerid,"ExamType") == 1 && GetPVarInt(playerid,"WaitExam"))
	{
		new slot = GetPVarInt(playerid,"LessonSlot");
		if(slot != AUTO_CP_COUNT)
		{
			/*if(AutoCP[slot][3] != 0.0 && Errors_AU[playerid] < 3)
			{
				if( Signal[GetPlayerVehicleID(playerid)] != floatround(AutoCP[slot][3]) )
				{
					Errors_AU[playerid] ++;
					format(stringer,144,"Вы допустили {FFFFFF}Ошибку{BE2D2D}, проехав поворот без использования поворотника! Прав на ошибку: {FFFFFF}%d{BE2D2D}.",3 - Errors_AU[playerid]);
					SendClientMessage(playerid, 0xBE2D2DFF, stringer);
					SendClientMessage(playerid, 0xFAAC58FF,"Используйте клавиши {FFFFFF}NUM4{FAAC58} и {FFFFFF}NUM6{FAAC58} чтобы включать поворотники!");
				}
			}*/
		}
		if(slot == AUTO_CP_COUNT)
		{
			Lic[playerid][0] = 1;
			UpdateLicenses(playerid);
			SCM(playerid,-1,"Поздравляем вы получили права. /licenses");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlot");
			DeletePVar(playerid,"ExamType");
			DeletePVar(playerid,"WaitExam");
			if(QuestStep[0][playerid]==6)
			{
				ShowPlayerDialog(playerid,0000,0," ", "{AFAFAF}Вы успешно выполнили это задание, теперь отправляйтесь к Джону за наградой\n", "Ок", "");
				QuestStep[0][playerid] = 7;
				SendClientMessage(playerid, -1, "Вы успешно выполнили это задание, следить за квестами можно через команду {"#cRED"}( /quest )");
				UpdatePlayerQuestStep(playerid);
			}
		}
		else if(slot >= AUTO_CP_COUNT - 1)
		{
			SetPlayerRaceCheckpoint(playerid, 1, AutoCP[AUTO_CP_COUNT - 1][0], AutoCP[AUTO_CP_COUNT - 1][1], AutoCP[AUTO_CP_COUNT - 1][2], 0.0,0.0,0.0, 1.5);
		}
		else
		{
			SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 1.5);
		}
		SetPVarInt(playerid,"LessonSlot", slot + 1);
		return 1;
	}
	if(GetPVarInt(playerid,"RaceCar"))
	{
//	    format ( stringer, 64,  "[ player ] racetime : %d " , GetTickCount () );
//	    SendClientMessage ( playerid , -1, stringer ) ;

		RaceTime[playerid][0] = GetTickCount();
		RaceTime[playerid][1] ++;

		new max_race_count = TotalRacePlayer;

		foreach(x)
		{
			if(x == playerid) continue;
			if(!GetPVarInt(x,"RaceCar")) continue;
			if(RaceTime[playerid][0] > RaceTime[x][0] && RaceTime[playerid][1] > RaceTime[x][1])
			{
				max_race_count --;
			}
		}

		SetPVarInt(playerid,"max_race_count",max_race_count);

//		format ( stringer, 64, "mesto : %d", max_race_count);
//		SendClientMessage ( playerid , -1, stringer );


		DisablePlayerRaceCheckpoint(playerid);

		new RaceCountCheck = GetPVarInt(playerid,"RaceCount");

		// printf  ( "RaceCountCheck : %d" , RaceCountCheck ) ;

		if(RaceCountCheck == COUNT_RACE_POINT - 1)
		{
			GameTextForPlayer(playerid, "~y~~h~ FINISH LINE NEXT!", 3000, 4);
			SetPlayerRaceCheckpoint(playerid,1,RaceCheckPointData[TypeRace][RaceCountCheck][0],RaceCheckPointData[TypeRace][RaceCountCheck][1],RaceCheckPointData[TypeRace][RaceCountCheck][2],0.0,0.0,0.0,20.0);
		}
		else if(RaceCountCheck == COUNT_RACE_POINT)
		{
			GameTextForPlayer(playerid, "~g~~h~ FINISH!", 3000, 4);
			DeletePVar(playerid,"RaceCount");
			SetPVarInt(playerid,"RaceLoop", GetPVarInt(playerid,"RaceLoop") + 1);
			if(GetPVarInt(playerid,"RaceLoop") != RaceLoop[TypeRace])
			{
				RaceCountCheck = 0;

				format(stringer,128,"Круг: %i / %i",GetPVarInt(playerid,"RaceLoop"), RaceLoop[TypeRace]);
				SendClientMessage(playerid,-1,stringer);

				SetPlayerRaceCheckpoint(playerid,0,RaceCheckPointData[TypeRace][RaceCountCheck][0],RaceCheckPointData[TypeRace][RaceCountCheck][1],RaceCheckPointData[TypeRace][RaceCountCheck][2],RaceCheckPointData[TypeRace][RaceCountCheck+1][0],RaceCheckPointData[TypeRace][RaceCountCheck+1][1],RaceCheckPointData[TypeRace][RaceCountCheck+1][2],20.0);
			}
			else
			{
				//print ( "for FTotalRace 33" ) ;
				new mesto = 1;
				for(new i = 0; i < FTotalRace; i++)
				{
					if(strlen(RaceWinners[i])<5)
					{
						strmid(RaceWinners[i],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),23);
						break;
					}
					mesto++;
				}
				format(stringer,128,"Вы прибыли %i из %i",mesto,FTotalRace);
				SendClientMessage(playerid,-1,stringer);
				EndRace(playerid, true);

				AC_SetPlayerPos ( playerid , GetPVarFloat ( playerid , "JoinRace_X" ) , GetPVarFloat ( playerid , "JoinRace_Y" ) , GetPVarFloat ( playerid , "JoinRace_Z" ) ) ;
				SetPlayerInterior ( playerid , GetPVarInt ( playerid, "JoinRace_Interior" ) ) ;
				SetPlayerVirtualWorld ( playerid , GetPVarInt ( playerid, "JoinRace_Virtual" ) ) ;
				FreezePlayerForTime ( playerid, 1000 );

				DeletePVar ( playerid, "JoinRace_X" ) ;
				DeletePVar ( playerid, "JoinRace_Y" ) ;
				DeletePVar ( playerid, "JoinRace_Z" ) ;
				DeletePVar ( playerid, "JoinRace_Interior" ) ;
				DeletePVar ( playerid, "JoinRace_Virtual" ) ;
			}
		}
		else
		{
			SetPlayerRaceCheckpoint(playerid,0,

			 RaceCheckPointData[TypeRace][RaceCountCheck][0],
			 RaceCheckPointData[TypeRace][RaceCountCheck][1],
			 RaceCheckPointData[TypeRace][RaceCountCheck][2],

			 RaceCheckPointData[TypeRace][RaceCountCheck + 1][0],
			 RaceCheckPointData[TypeRace][RaceCountCheck + 1][1],
			 RaceCheckPointData[TypeRace][RaceCountCheck + 1][2],

			 30.0);
		}

		SetPVarInt(playerid,"RaceCount",RaceCountCheck + 1);
		return 1;
	}
	if(GetPVarInt(playerid,"SIVehicleCols"))
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);

		if (!GetPVarInt(playerid,"SIPlayerCP"))
		{
			SetPVarInt(playerid, "SIPlayerStartTime", unix);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Race Timer Started!", 3000, 3);
			PlayerPlaySound(playerid, 1139, x, y, z);
			SetPVarInt(playerid,"SIPlayerCP",GetPVarInt(playerid,"SIPlayerCP") + 1);
			SetPlayerRaceCheckpoint(playerid, 0, StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][2], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][2], 12.0);
		}
		else if (GetPVarInt(playerid,"SIPlayerCP") == sizeof(StuntIslandCPs) - 1)
		{
			new TotalLapTime = unix - GetPVarInt(playerid, "SIPlayerStartTime");
			new PlayerName[MAX_PLAYER_NAME + 1];
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			if (TotalLapTime < FastestLapTime)
			{
				if (FastestLapTime == 999)
				{
					format(stringer, 128, "** %s: прошел всю трассу 'Stunt Island' первым за %i секунд и поставил новый рекорд", PlayerName, TotalLapTime);
					SendClientMessageToAll(0xFFDD00AA, stringer);
				}
				else
				{
					format(stringer, 128, "** %s: прошел всю трассу 'Stunt Island' за %i секунд и поставил новый рекорд", PlayerName,TotalLapTime);
					SendClientMessageToAll(0xFFDD00AA, stringer);
					format(stringer, 128, "* предыдущий рекорд %i секунд, поставил: %s", FastestLapTime, FastestLapName);
					SendClientMessageToAll(0xFFDD00AA, stringer);
				}
				FastestLapTime = TotalLapTime;
				format(FastestLapName, MAX_PLAYER_NAME, "%s", PlayerName);
				format(stringer,200,"Рекордсмен гонки:\n{"#cWHITE"}%s{29D4FF}\n{"#cWHITE"}%i секунд{29D4FF}\n\nДля выхода из гонки нажмите {"#cWHITE"}Y",FastestLapName,FastestLapTime);
				UpdateDynamic3DTextLabelText(RaceTextLabel,0x29D4FFFF,stringer);
			}
			else
			{
				format(stringer, 128, "** %s: прошел всю трассу 'Stunt Island' за %i секунд.", PlayerName, playerid, TotalLapTime);
				SendClientMessageToAll(0xFFDD00AA, stringer);
			}
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Finished!", 3000, 3);
			PlayerPlaySound(playerid, 1139, x, y, z);

			DeletePVar(playerid,"SIPlayerCP");
			SetPlayerRaceCheckpoint(playerid, 1, StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][2], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][2], 12.0);
		}
		else if (GetPVarInt(playerid,"SIPlayerCP") == sizeof(StuntIslandCPs) - 2)
		{
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Finish Line Is Next!", 3000, 3);

			PlayerPlaySound(playerid, 1138, x, y, z);
			SetPVarInt(playerid,"SIPlayerCP",GetPVarInt(playerid,"SIPlayerCP") + 1);
			SetPlayerRaceCheckpoint(playerid, 1, StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][2], -1, -1, -1, 12.0);
		}
		else
		{
			PlayerPlaySound(playerid, 1138, x, y, z);
			SetPVarInt(playerid,"SIPlayerCP",GetPVarInt(playerid,"SIPlayerCP") + 1);
			SetPlayerRaceCheckpoint(playerid, 0, StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][2], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][2], 12.0);
		}
	}
	return 1;
}

new bool:status_door[15]={false,...};

forward close_door_prison(slot,type);
public close_door_prison(slot,type)
{
	switch(type)
	{
		case 0:MoveDynamicObject(door_prison[slot],1606.138,-1629.150,1584.106,0.5,0.000,0.000,90.099);
		case 1:MoveDynamicObject(door_prison[slot],1634.125,-1626.630,1584.039,0.5,0.000,0.000,89.999);
		case 2:MoveDynamicObject(door_prison[slot],1642.079,-1630.958,1584.039,0.5,0.000,0.000,0.000);
		case 3:MoveDynamicObject(door_prison[slot],1614.305,-1630.911,1584.106,0.5,0.000,0.000,0.000);
		case 4:MoveDynamicObject(door_prison[slot],1614.307,-1627.513,1584.106,0.5,0.000,0.000,0.000);
	}
	status_door[slot]=true;
	return 1;
}

forward SwatDoorMov(id);
public SwatDoorMov(id)
{
	switch(id)
	{
		case 0:MoveDynamicObject(swat_door_id[0],1915.440,-573.516,1351.326,1.0);
		case 1:MoveDynamicObject(swat_door_id[1],1927.185,-583.934,1351.326,1.0);
	}
	return 1;
}


public OnDynamicObjectMoved(objectid)
{
	for(new id = 0; id < MAX_OBJECT_MOVED; id++)
	{
		if(id==24) continue;
		if(objectid == moved_info[id][moved_id] && moved_info[id][status_moved])
		{
			moved_info[id][status_moved]=false;
			SetTimerEx("CheckObjectBarrier", 6000, 0, "i", id);
			return 1;
		}
	}


	if(objectid == swat_door_id[0]) return SetTimerEx("SwatDoorMov",3500,0,"i",0),1;
	else if(objectid == swat_door_id[1]) return SetTimerEx("SwatDoorMov",3500,0,"i",1),1;

	if(objectid >= door_prison[0] && objectid <= door_prison[14])
	{
		new object_door_prison = -1;
		if(objectid == door_prison[0]) object_door_prison = 0;
		else if(objectid == door_prison[1]) object_door_prison = 1;
		else if(objectid == door_prison[2]) object_door_prison = 2;
		else if(objectid == door_prison[3]) object_door_prison = 3;
		else if(objectid == door_prison[4]) object_door_prison = 4;
		else if(objectid == door_prison[5]) object_door_prison = 5;
		else if(objectid == door_prison[6]) object_door_prison = 6;
		else if(objectid == door_prison[7]) object_door_prison = 7;
		else if(objectid == door_prison[8]) object_door_prison = 8;
		else if(objectid == door_prison[9]) object_door_prison = 9;
		else if(objectid == door_prison[10]) object_door_prison = 10;
		else if(objectid == door_prison[11]) object_door_prison = 11;
		else if(objectid == door_prison[12]) object_door_prison = 12;
		else if(objectid == door_prison[13]) object_door_prison = 13;
		else if(objectid == door_prison[14]) object_door_prison = 14;
		if(object_door_prison==-1) return 1;
		if(!status_door[object_door_prison])
		{
			new type = -1;
			if(object_door_prison>=0 && object_door_prison<=2) type=0;
			else if(object_door_prison>=3 && object_door_prison<=5) type=1;
			else if(object_door_prison>=6 && object_door_prison<=8) type=2;
			else if(object_door_prison>=9 && object_door_prison<=11) type=3;
			else if(object_door_prison>=12 && object_door_prison<=14) type=4;
			if(type == -1) return 1;
			SetTimerEx("close_door_prison",3500,0,"ii",object_door_prison,type);
		}
		else status_door[object_door_prison]=false;
	}
	return 1;
}
forward Ex_SetDoorOptionBL();
public Ex_SetDoorOptionBL()
{
	if(open_lift_doors)
	{
		SetDoorOptionBL(hospital_lift_floor, true);
		open_lift_doors = false;
	}
	return true;
}
forward CircleStart();
public CircleStart()
{
	//print("circle wait false");
	CircleWait = false;
	if ( CircleAlternate2 == 2 ) CircleAlternate2 = 0;
	new g = CircleState;
	MoveObject(CircleAroundObject,CirclePosition[g][0],CirclePosition[g][1],CirclePosition[g][2], CIRCLE_MOVE_SPEED, CirclePosition[g][3],CirclePosition[g][4],CirclePosition[g][5]);
	return 1;
}

public OnObjectMoved(objectid)
{
	if(objectid == gFerrisWheel) return SetTimer("RotateWheel",3 * 1000,0);
	if ( objectid == CircleAroundObject && !CircleWait)
	{
		new g = CircleState;
		if ( g == 10 && CircleAlternate2 != 1)
		{
			CircleAlternate2 = 1;
			g = 9;
		}
		else if ( CircleAlternate2 == 1)
		{
			g--;
			if(g == 0) CircleAlternate2 = 2;

		}
		else if ( CircleAlternate2 == 0 || CircleAlternate2 == 2)
		{
			if(g == 0 && CircleAlternate2 == 2)
			{
				new Float:x, Float:y, Float:z;
				GetObjectPos(objectid,x,y,z);
				foreach(i)
				{
					if(IsPlayerInRangeOfPoint(i,20,
						x,
						y,
						z))
					{
						SendClientMessage(i,-1,"Отправление через 15 секунд");
						PlayerPlaySound(i, 6200, x,y,z);
					}
				}
				CircleAlternate2 = 0;
				SetTimer("CircleStart",15000,0);
				CircleWait = true;
				//print("circle wait true");
				return 1;
			}
			g++;
		}
		CircleAlternate = (CircleAlternate) ? (0) : (1);
		if ( g <= 2 )
		{
			MoveObject(CircleAroundObject,CirclePosition[g][0],CirclePosition[g][1],CirclePosition[g][2], CIRCLE_MOVE_SPEED / 4.0, CirclePosition[g][3],0.0,CirclePosition[g][5]);
		}
		else MoveObject(CircleAroundObject,CirclePosition[g][0],CirclePosition[g][1],CirclePosition[g][2], CIRCLE_MOVE_SPEED, CirclePosition[g][3],(CircleAlternate==0)?(30.0):(-30.0),CirclePosition[g][5]);
		CircleState = g;
	}
	if ( objectid == RouletteFunObject )
	{
		if (  RouletteState == ROULETTE_STATE_TO_DOWN )
		{
			if ( RouletteTimer == -1 ) RouletteTimer = SetTimer("RouletteWait",30000,0);
			RouletteAngle = (RouletteAngle >= 360.0) ? (1.0) : (RouletteAngle + 8.0);
			MoveObject(RouletteFunObject,RouletteStartPos[0],RouletteStartPos[1], floatadd(RouletteStartZPos[0],(RouletteAlternate = (RouletteAlternate) ? (0) : (1)) ? (0.25) : (0.0)), 0.25, 0.0,0.0, RouletteAngle);
		}
		else if (  RouletteState == ROULETTE_STATE_TO_UP )
		{
			if ( RouletteTimer == -1 ) RouletteTimer = SetTimer("RouletteWait",30000,0);
			RouletteAngle = (RouletteAngle >= 360.0) ? (1.0) : (RouletteAngle + 8.0);
			MoveObject(RouletteFunObject,RouletteStartPos[0],RouletteStartPos[1], floatadd(RouletteStartZPos[2],(RouletteAlternate = (RouletteAlternate) ? (0) : (1)) ? (0.5) : (0.0)), 0.25, 0.0,0.0, RouletteAngle);
		}
		else if (  RouletteState == ROULETTE_STATE_TO_UP2 )
		{
			if ( RouletteTimer == -1 ) RouletteTimer = SetTimer("RouletteWait",30000,0);
			RouletteAngle = (RouletteAngle >= 360.0) ? (1.0) : (RouletteAngle + 8.0);
			MoveObject(RouletteFunObject,RouletteStartPos[0],RouletteStartPos[1], floatadd(RouletteStartZPos[1],(RouletteAlternate = (RouletteAlternate) ? (0) : (1)) ? (0.25) : (0.0)), 0.25, 0.0,0.0, RouletteAngle);
		}
	}
	if(objectid == jackminer_object)
	{
		new Float:jack_pos[3];
		GetObjectPos(jackminer_object,jack_pos[0],jack_pos[1],jack_pos[2]);
		if(jack_pos[0] == -2552.5944 && jack_pos[1] == -2135.6259 && jack_pos[2] == 71.0454)
		{
			if(jackminer_timer == -1) MoveObject(jackminer_object,-2557.8952,-2134.4177,72.1406,SPEED_JACK,0.0999,0.0000,12.8000);
			else MoveObject(jackminer_object,-2401.8669,-2171.1870,39.9160,SPEED_JACK,-9.7000,0.0000,-102.0999),jackminer_timer = -1;
		}
		else if((jack_pos[0] == -2557.8952 && jack_pos[1] == -2134.4177 && jack_pos[2] == 72.1406) || (jack_pos[0] == -2401.8669 && jack_pos[1] == -2171.1870 && jack_pos[2] == 39.9160))
		{
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,15.0,jack_pos[0],jack_pos[1],jack_pos[2])) SendClientMessage(i,CYELLOW,"Информация: {"#cWHITE"}Отправление через 15 секунд");
			if(jackminer_timer == -1) jackminer_timer = SetTimer("JackWait",15000,0);
		}
	}
	for(new M = 0; M < 2; M++)
	{
		if(objectid==vagon_object[M] && vagon_timer[M] == -1)
		{
			new Float:vagon_pos[3];
			GetObjectPos(vagon_object[M],vagon_pos[0],vagon_pos[1],vagon_pos[2]);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,15.0,vagon_pos[0],vagon_pos[1],vagon_pos[2])) SendClientMessage(i,CYELLOW,"Информация: {"#cWHITE"}Отправление через 15 секунд");
			vagon_timer[M] = SetTimerEx("VagonWait",15000,0,"i",M);
			return 1;
		}
	}
	/*if(objectid==door_spawn_ls[1])
	{
		if(door_spawn_ls_state==2)
		{
			door_spawn_ls_state = 0;
		}
		else
		{
			SetToPosDoor(-1);
			MoveObject(door_spawn_ls[0],1735.003,-1856.647,12.649,SPEED_DOOR_SPAWN_LS,0.000,0.000,-128.339);
			MoveObject(door_spawn_ls[1],1733.149,-1858.999,12.649,SPEED_DOOR_SPAWN_LS,0.000,0.000,51.959);
			door_spawn_ls_state = 2;
		}
	}*/
	if(objectid == hospital_lift_object[0])
	{
		if(hospital_lift_state == 2)
		{
			hospital_lift_state = 0;
			SetDoorOptionBL(hospital_lift_floor);
			open_lift_doors = true;
		}
	}
	else if(objectid == hospital_lift_object[2] || objectid == hospital_lift_object[4])
	{
		if(hospital_lift_state == 0)
		{
			var_Ex_SetDoorOptionBL = SetTimer("Ex_SetDoorOptionBL",6000,0);
		}
		else if(hospital_lift_state == 1)
		{
			new Float:x, Float:y, Float:z;
			GetObjectPos(hospital_lift_object[0],x,y,z);
			MoveObject(hospital_lift_object[0], -349.263,-33.071,(hospital_lift_floor == 2) ? (-51.2270) : (997.513-1054.480), 2.0);
			hospital_lift_state = 2;
		}
	}
	if(objectid == Obj_Elevator22)
	{
		new Float:x, Float:y, Float:z;

		KillTimer(ElevatorBoostTimer22);
		FloorRequestedBy22[ElevatorFloor22] = 10000;//освобождение места игрока в очереди обслуживания

		for(new i; i < sizeof(ElevatorQueue22) - 1; i ++){ElevatorQueue22[i] = ElevatorQueue22[i + 1];}
		ElevatorQueue22[sizeof(ElevatorQueue22) - 1] = -1;//сдвиг очереди обслуживания

		Elevator_OpenDoors22();
		Floor_OpenDoors22(ElevatorFloor22);
		GetObjectPos(Obj_Elevator22, x, y, z);
		if ( Label_Elevator22 == Text3D:INVALID_3DTEXT_ID ) Label_Elevator22 = CreateDynamic3DTextLabel("{ffffff}Нажмите {00CC00}» N « {ffffff}для\nуправления лифтом", 0x33AA33FF, 289.23, -1610.63, z - 0.9, 4.0);
		ElevatorState22 = 1;
		SetTimer("Elevator_TurnToIdle22", ELEVATOR_WAIT_TIME22, 0);//задержка в очереди обслуживания
	}


	/*if(objectid==objectswheel[0])
	{
		FerrisAngle ++;
		if(FerrisAngle>=360.0)
		{
			FerrisAngle=0.0;
		}
		if(FerrisAlternate)
		{
			FerrisAlternate=0;
		}
		else
		{
			FerrisAlternate=1;
		}
		new Float:FerrisWheelModZPos=0.0;
		if(FerrisAlternate)
		{
			FerrisWheelModZPos=0.05;
		}

		MoveObject(objectswheel[0],1188.719,-2007.319,156.0+FerrisWheelModZPos,FERRIS_KOLESO_SPEED,0,FerrisAngle,0);
	}*/
	if(objectid == gMainShipObjectId)
	{

		gShipCurrentPoint++;

		if(gShipCurrentPoint == NUM_SHIP_ROUTE_POINTS) {
			gShipCurrentPoint = 0;

			MoveObject(gMainShipObjectId,gShipRoutePoints[gShipCurrentPoint][0],
								   gShipRoutePoints[gShipCurrentPoint][1],
								   gShipRoutePoints[gShipCurrentPoint][2],
								   SHIP_MOVE_SPEED / 4.0, // slower for the last route
								   gShipRoutePoints[gShipCurrentPoint][3],
								   gShipRoutePoints[gShipCurrentPoint][4],
								   gShipRoutePoints[gShipCurrentPoint][5]);
			return 1;
		}

		if(gShipCurrentPoint == 1 || gShipCurrentPoint == 5) {
			foreach(i)
			{
				if(IsPlayerInRangeOfPoint(i,100,
					gShipRoutePoints[gShipCurrentPoint][0],
					gShipRoutePoints[gShipCurrentPoint][1],
					gShipRoutePoints[gShipCurrentPoint][2]))
				{
					SendClientMessage(i,-1,"Корабль отправляется через 30 секунд");
					PlayerPlaySound(i, 6200, gShipRoutePoints[gShipCurrentPoint][0], gShipRoutePoints[gShipCurrentPoint][1], gShipRoutePoints[gShipCurrentPoint][2]);
				}
			}
			SetTimer("StartMovingTimer",30*1000,0);
			return 1;
		}

		MoveObject(gMainShipObjectId,gShipRoutePoints[gShipCurrentPoint][0],
								   gShipRoutePoints[gShipCurrentPoint][1],
								   gShipRoutePoints[gShipCurrentPoint][2],
								   SHIP_MOVE_SPEED,
								   gShipRoutePoints[gShipCurrentPoint][3],
								   gShipRoutePoints[gShipCurrentPoint][4],
								   gShipRoutePoints[gShipCurrentPoint][5]);
	}
	for(new i = 0; i < 6; i++)
	{
		if(mats_object[i][0] != INVALID_OBJECT && mats_object[i][1] != INVALID_OBJECT)
		{
			if(objectid == mats_object[i][0])
			{
				new Float:X, Float:Y, Float:Z,Float:rX, Float:rY, Float:rZ;
				GetObjectPos(mats_object[i][0], X, Y, Z);
				GetObjectRot(mats_object[i][1], rX, rY, rZ);
				if((Z-2.0) <= 20.0)
				{
					DestroyObject(mats_object[i][0]);
					DestroyObject(mats_object[i][1]);
					mats_object[i][0] = INVALID_OBJECT;
					mats_object[i][1] = INVALID_OBJECT;
				}
				else
				{
					MoveObject(mats_object[i][0], X,Y,Z-5.0,2.0,(rX >= 10.0) ? (-10.0) : (10.0),rY,rZ);
				}

				break;
			}
		}
	}//

	return 1;
}


public OnRconCommand(cmd[]) return 1;
public OnPlayerObjectMoved(playerid, objectid) return 1;
//

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	stringer[0]=EOS;
	for(new i;i<110;i++)
	{
		if(PodarokInfo[i][porCreat]!=pickupid)continue;
		if(!IsPlayerInRangeOfPoint(playerid,5,PodarokInfo[i][porPos][0],PodarokInfo[i][porPos][1],PodarokInfo[i][porPos][2])) return false;
		p_info[playerid][pNewYear]++;
		PodarokInfo[i][porCreat]=-1;
		DestroyDynamicPickup(pickupid);
		format(stringer,300,
			"{A23333}[Подсказка]{FFFFFF} Вы подобрали подарок. У вас уже %d подарка(ов)! Обменять подарки на шкатулку можно у Эдварда.",p_info[playerid][pNewYear]);
		SendClientMessage(playerid,COLOR_RED,stringer);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
		return true;
	}
 	for(new i;i<250;i++)
	{
		if(DynamicPodarokInfo[i][porCreat]!=pickupid)continue;
		if(!IsPlayerInRangeOfPoint(playerid,5,DynamicPodarokInfo[i][porPos][0],DynamicPodarokInfo[i][porPos][1],DynamicPodarokInfo[i][porPos][2])) return false;
		p_info[playerid][pNewYear]++;
		DynamicPodarokInfo[i][porCreat]=-1;
		DestroyDynamicPickup(pickupid);
		format(stringer,300,
			"{A23333}[Подсказка]{FFFFFF} Вы подобрали подарок. У вас уже %d подарка(ов)! Обменять подарки на шкатулку можно у Эдварда.",p_info[playerid][pNewYear]);
		SendClientMessage(playerid,COLOR_RED,stringer);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		UpdatePlayerData(playerid, "pNewYear",p_info[playerid][pNewYear]);
		return true;
	}
	for ( new j = 0; j < MAX_FLOWERS; j++ )
	{
			if(pickupid == _flower[j][flPickupid])
			{
				Streamer_AppendArrayData(STREAMER_TYPE_3D_TEXT_LABEL,_flower[j][flText][playerid], E_STREAMER_WORLD_ID, playerid + 1);
				if ( _flower[j][flTimerText] == -1 ) _flower[j][flTimerText] = SetTimerEx("flShowText", 3000, 0, "ii", playerid, j);

				break;
			}
	}
	return 1;
}
forward flShowText(playerid, j);
public flShowText(playerid, j)
{
	Streamer_AppendArrayData(STREAMER_TYPE_3D_TEXT_LABEL,_flower[j][flText][playerid], E_STREAMER_WORLD_ID, 0);
	return 1;
}
stock GetFreeFlower()
{
	for ( new j = 0; j < MAX_FLOWERS; j++ ) if ( _flower[j][flmysqlID] == -1 ) return j;
	return -1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new vehicleid = 0, model = 0;
	if(newstate == oldstate) return CheatKick(playerid, 2);
	else if(((newstate == PLAYER_STATE_DRIVER) && (oldstate == PLAYER_STATE_PASSENGER)) || ((newstate == PLAYER_STATE_PASSENGER) && (oldstate == PLAYER_STATE_DRIVER)))
	{
		vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			AC_SetVehiclePos(vehicleid, gVehicles[vehicleid-1][veX], gVehicles[vehicleid-1][veY], gVehicles[vehicleid-1][veZ]);
			AC_SetVehicleZAngle(vehicleid, gVehicles[vehicleid-1][veA]);
		}

		CheatKick(playerid, 3);
		return 1;
	}
	switch(newstate)
	{
		case PLAYER_STATE_PASSENGER:
		{
			vehicleid = GetPlayerVehicleID(playerid);
			model = GetVehicleModel(vehicleid);

			GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
			p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
   			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;

			if(gVehicles[vehicleid - 1][vJob] == 8){
				foreach(i){
					if(GetPlayerVehicleID(i) != vehicleid || !GetPVarInt(i,"bus_price")) continue;
					p_info[playerid][pCash] -= GetPVarInt(i,"bus_price");
					UpdateMoney(playerid);
					format(stringer, 144, "~r~- %i$", GetPVarInt(i,"bus_price"));
					GameTextForPlayer(playerid, stringer, 2000, 1);
					break;
				}
			}
			else if(gVehicles[vehicleid - 1][vJob] == 4){
				foreach(i){
					if(GetPlayerVehicleID(i) != vehicleid || (GetPlayerState(i) != PLAYER_STATE_DRIVER && !GetPVarInt(i,"taxijob"))) continue;
					switch(GetPVarInt(i,"taxitype")){
						case 1:{
							format(stringer, 128, "Вы сели в такси %s. Тариф: %i$ (оплата за каждые 30 секунд поездки)", NamePlayer[i], GetPVarInt(i,"taxifare"));
							SendClientMessage(playerid,0x4682B4AA, stringer);
							SetPVarInt(playerid,"taxi_update", 30);
						}
					}
					SetPVarInt(i, "taxiplayers", GetPVarInt(i,"taxiplayers")+1);
					SetPVarInt(playerid, "player_taxi", i + 1);
					break;
				}
			}
			DeletePVar(playerid,"removetimer");
		}
		case PLAYER_STATE_DRIVER:
		{
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
			vehicleid = GetPlayerVehicleID(playerid);
			model = GetVehicleModel(vehicleid);

			if(VehicleEnters[playerid]!=vehicleid) return CheatKick(playerid,4);
			if(GetTickCount()-SuperTick[playerid]<300)
			{
				if(!IsABoat(VehicleEnters[playerid]))
					CheatKick(playerid,5);
			}
			SuperTick[playerid]=0;
			gVehicles[vehicleid - 1][vOccupied] = playerid;
			DeletePVar(playerid,"removetimer");
			if(vehicleid >= V_RENT[0][V_RENT_VEHICLE] && vehicleid < V_RENT[MAX_RENT_VEHICLES-1][V_RENT_VEHICLE]){
				for(new v = 0; v < MAX_RENT_VEHICLES; v++){
					if(vehicleid == V_RENT[v][V_RENT_VEHICLE])
					{
					    if ( V_RENT[v][V_RENT_PLAYER] != playerid && V_RENT[v][V_RENT_PLAYER] != INVALID_PLAYER_ID ) return SendClientMessage(playerid, CGRAY, "Машина арендована");
					    if ( GetRentCar(playerid) != INVALID_VEHICLE_ID && V_RENT[v][V_RENT_PLAYER] != playerid ) return SendClientMessage(playerid,CBADINFO, "Вы не можете арендовать две машины.");
						ShowPlayerDialog(playerid,dRent,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Аренда","{"#cWHITE"}Здравствуйте, вы желаете арендовать транспорт?\nСтоимость: {33AA33}4.200${"#cWHITE"}\n\n- Управление арендой {FFFF00}/rent{"#cWHITE"}\n- Арендованное авто не пропадет до вашего выхода из игры\n- Если вы отдалитесь на 2 км от машины, аренда исчезнет\n\nВы хотите арендовать этот транспорт?","Да","Нет");
						SetPVarInt(playerid,"rent_array",v + 1);
						break;
					}
				}
			}
			for(new f = 0; f < MAX_FARMS; f++){
				for (new f2 = 0; f2 < 3; f2++)
				{
					if(f2 < 2)
					{
						if(VehicleEnters[playerid]==_farm[f][farm_vehicles_finish][f2]){
							if ( _farm[f][farm_count_zerna][f2] != 0 )
							{
								DisablePlayerRaceCheckpoint(playerid);
								SendClientMessage(playerid, -1, "Отвези зерно на завод");
								new sel = GetPVarInt(playerid, "sel_zerno");
								SetPlayerRaceCheckpoint(playerid, 1, pos_sell_zerno[sel][0],pos_sell_zerno[sel][1],pos_sell_zerno[sel][2],pos_sell_zerno[sel][0],pos_sell_zerno[sel][1],pos_sell_zerno[sel][2], 5.5);
							}
							else
							{
								SendClientMessage(playerid,-1,"Подъедте на склад , загрузите продукты");
								TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], true);
							}
							break;
						}
					}
					if(VehicleEnters[playerid]==_farm[f][farm_vehicles_first][f2])
					{
							if(GetPVarInt(playerid, "start_farm") - 1 != f )
							{
								SendErr(playerid, "Вы не работаете на этой ферме");
								return AC_RemovePlayerFromVehicle(playerid);
							}
							SetPVarInt(playerid,"use_farm", f);
							SetPVarInt(playerid,"use_farm_vehicle", f2 + 1);
							if ( _farm[f][farm_pickup_first][f2] != -1 )
							{
								ShowPlayerDialog(playerid, 18995, DIALOG_STYLE_MSGBOX, "{ffffff}Информация", "{ffffff}Вы действительно хотите закончить загрузку зерна?", "Да", "Нет");
							}
							else
							{
									new Float:x, Float:y, Float:z, Float:a;
									GetRaceCheckpointFarm(f, f2, x,y,z,a);
									SetPlayerRaceCheckpoint(playerid, 1, x,y,z, 0.0,0.0,0.0, 5.5);
									if(IsValidDynamicCP(_farm[f][farm_sklad_cp])) TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
									for ( new f3 = 0; f3 < 6; f3++)
									{
										if(IsValidDynamicCP(farm_cp[f][f2][f3])) TogglePlayerDynamicCP(playerid, farm_cp[f][f2][f3], false);
									}
							}
							break;
					}
				}
			}
			if(gVehicles[vehicleid - 1][vFamily] != -1 && p_info[playerid][pAdmin] != 0)
			{
				format(stringer,144,"Машина принадлежит семье '%s'. Создатель семьи '%s'. Номер семьи: '%d'",_family[gVehicles[vehicleid - 1][vFamily]][family_create_name],_family[gVehicles[vehicleid - 1][vFamily]][family_owner_create_name],gVehicles[vehicleid - 1][vFamily] + 1);
				SCM(playerid,COLOR_GREY,stringer);
			}
			if(gVehicles[vehicleid-1][vFraction] == 11)
			{
				if(GetPVarInt(playerid,"ExamType") == 1 && GetPVarInt(playerid,"WaitExam")){
					new slot = GetPVarInt(playerid,"LessonSlot");
					if(slot>=(27-1)) slot = 0;
					SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 1.0);
					SetPVarInt(playerid,"LessonSlot", slot + 1);
				}
			}
			if(GetPVarInt(playerid, "SelectAvto") == -1 && ShowTuneList[playerid][0] == false)
			{
				if(IsAVelik(vehicleid) || (vehicleid == cLowrideCar [ playerid ]))
				{
					new engine, lights, alarm, doors, bonnet, boot, objective;
					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, true, lights, alarm, doors, bonnet, boot, objective);
				}

				if(!IsAVelik(vehicleid) && !(vehicleid == cLowrideCar [ playerid ]))
				{
					SendClientMessage(playerid, CLIGHTBLUE, "Для того чтобы завести, нажмите кнопку {"#cWHITE"}\"2\"{"#cLIGHTBLUE"} Управление фарами: {"#cWHITE"}\"ALT\"");
					SendClientMessage(playerid,CLIGHTBLUE,"Для управления поворотниками, используйте клавиши: {"#cWHITE"}(NUM4 / NUM6) {"#cLIGHTBLUE"}Чтобы пристегнуть ремень безопасности: {"#cWHITE"}/belt");
				}
				//PlayerTextDrawSetPreviewModel(playerid, PTD_SpeedW[playerid][7], model);
				//PlayerTextDrawSetPreviewVehCol(playerid,PTD_SpeedW[playerid][7],gVehicles[vehicleid-1][vCol1],gVehicles[vehicleid-1][vCol2]);
				if(!IsAVelik(vehicleid) && !(vehicleid == cLowrideCar [ playerid ]))
				{
					new lights,engine;
					engine = GetEngineStatL(vehicleid,lights);
					///
					for(new i = 0; i < 18; i++)
					{
						if(i < 6)
						{
							TextDrawShowForPlayer ( playerid, BackspeedTrans[i] ) ;
						}

						TextDrawShowForPlayer ( playerid, speedBox [i] ) ;
					}
					PlayerTextDrawColor ( playerid, speedEngine[playerid], (engine) ? (0x06F000FF) : (0x800000FF));
					PlayerTextDrawColor ( playerid, speedSignalLights[playerid], (lights) ? (0x06F000FF) : (0x800000FF));
					PlayerTextDrawColor(playerid, speedDoors[playerid], (gVehicles[vehicleid-1][vLock]) ? (0x06F000FF) : (0x800000FF));
					//
					PlayerTextDrawShow ( playerid, speedDoors[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedEngine[playerid] ) ;
					//PlayerTextDrawShow ( playerid, speedSignalLeft[playerid] ) ;
					//PlayerTextDrawShow ( playerid, speedSignalRight[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedSignalLights[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedStick[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedInf[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedName[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedMileage[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedHealth[playerid] ) ;
					PlayerTextDrawShow ( playerid, speedFuel[playerid] ) ;

					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][0], 1684301055);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][1], 1684301055);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][2], 1684301055);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][3], 1684301055);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][4], 1684301055);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][5], 1684301055);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][6], 1684301055);

					PlayerTextDrawShow ( playerid, speedTrans[playerid][0] ) ;
					PlayerTextDrawShow ( playerid, speedTrans[playerid][1] ) ;
					PlayerTextDrawShow ( playerid, speedTrans[playerid][2] ) ;
					PlayerTextDrawShow ( playerid, speedTrans[playerid][3] ) ;
					PlayerTextDrawShow ( playerid, speedTrans[playerid][4] ) ;
					PlayerTextDrawShow ( playerid, speedTrans[playerid][5] ) ;
					PlayerTextDrawShow ( playerid, speedTrans[playerid][6] ) ;

					PlayerTextDrawSetString ( playerid, speedName[playerid], VehicleNames [ model - 400 ]);

					ShowSpeed[playerid] = true;
					LastTransmisSlot[playerid] = -1;
					UpdateTDLock(playerid, vehicleid);
					UpdateCarInfo_Timer[playerid] = SetTimerEx("UpdateCarInfo",200,1,"i",playerid);
				}
			}
			if(IsABoat(vehicleid) && !Lic[playerid][2]){
				SendErr(playerid, "У вас нет лицензии на водный транспорт");
				AC_RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(!Lic[playerid][1] && IsAPlane(vehicleid)){
				SendErr(playerid, "У вас нет лицензии на воздушный транспорт");
				AC_RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(vehicleid != GetPVarInt(playerid,"RaceCar") && model != 411 && VodPrava(vehicleid) && (!Lic[playerid][0] && !GetPVarInt(playerid,"ExamType") && !GetPVarInt(playerid,"WaitExam"))){
				SendErr(playerid, "У вас нет водительских прав");
				AC_RemovePlayerFromVehicle(playerid);
				return 1;
			}
			// проверка машин
			if(gVehicles[vehicleid-1][vJob] == 1){
				if(p_info[playerid][pJob] != 1){
					SendErr(playerid, "Вы не работаете развозчиком продуктов.");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(p_info[playerid][pCash] < 450){
					SendErr(playerid, "Вам нужно "newgreen"450 $ {"#cWHITE"}для аренды");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(GetPVarInt(playerid,"prod_vehicle_id") > 0 && GetPVarInt(playerid,"prod_vehicle_id") != vehicleid){
					SendErr(playerid, "Вы уже арендуете");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(!GetPVarInt(playerid,"prod_vehicle_id")){
					ShowPlayerDialog(playerid,dProdRent,0,""neworange"Аренда","{"#cWHITE"}Вы хотите арендовать этот автомобиль за "newgreen"450 ${"#cWHITE"} ?","Да","Нет");
				}
				else{
					foreach(i){
						if(GetPVarInt(i,"prod_vehicle_id") == vehicleid && i != playerid){
							SendErr(playerid, "Этот автомобиль уже арендуют");
							AC_RemovePlayerFromVehicle(playerid);
							break;
						}
					}
				}
			}
			else if(gVehicles[vehicleid-1][vJob] == 3){
				if(p_info[playerid][pJob] != 3){
					SendErr(playerid, "Вы не работаете развозчиком топлива.");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(p_info[playerid][pCash] < 450){
					SendErr(playerid, "Вам нужно "newgreen"450 $ {"#cWHITE"}для аренды");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(GetPVarInt(playerid,"prod_vehicle_id") > 0 && GetPVarInt(playerid,"prod_vehicle_id") != vehicleid){
					SendErr(playerid, "Вы уже арендуете");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(!GetPVarInt(playerid,"prod_vehicle_id")){
					ShowPlayerDialog(playerid,dProdRent,0,""neworange"Аренда","{"#cWHITE"}Вы хотите арендовать этот автомобиль за "newgreen"450 ${"#cWHITE"} ?","Да","Нет");
				}
				else{
					foreach(i){
						if(GetPVarInt(i,"prod_vehicle_id") == vehicleid && i != playerid){
							SendErr(playerid, "Этот автомобиль уже арендуют");
							AC_RemovePlayerFromVehicle(playerid);
							break;
						}
					}
				}

			}
			else if(gVehicles[vehicleid - 1][vJob] == 8){
				if(p_info[playerid][pJob] != 8){
					SendErr(playerid,"Вы не работаете водителем автобуса");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(GetPVarInt(playerid,"bus_id") && GetPVarInt(playerid,"bus_id") != vehicleid){
					SendErr(playerid,"Вы уже арендуете автобус");
					AC_RemovePlayerFromVehicle(playerid);
				}
				else if(!GetPVarInt(playerid,"bus_id")){
					if(p_info[playerid][pCash] < 200){
						format(stringer, 128, "Вам нужно %i$ для аренды автобуса",BUS_PRICE_RENT);
						SendErr(playerid,stringer);
						AC_RemovePlayerFromVehicle(playerid);
					}
					format(stringer, 128, "{"#cWHITE"}Вы хотите арендовать этот автобус за {"#cGREEN"}%i${"#cWHITE"},\nчтобы возить на нем пассажиров и зарабатывать деньги?",BUS_PRICE_RENT);
					ShowPlayerDialog(playerid,dBusRent,0,""ORG"Аренда автобуса",stringer,"Да","Нет");
				}
				else
				{
					foreach(i){
						if(GetPVarInt(i,"bus_id") == vehicleid && i != playerid){
							SendClientMessage(playerid,COLOR_GREY,"Этот автобус уже арендуют");
							AC_RemovePlayerFromVehicle(playerid);
							break;
						}
					}
					DeletePVar(playerid,"timetaxi");
				}
			}
			/*else if(p_info[playerid][tMember] > 0 && (model == 520 || model == 425 || model == 432) && (gVehicles[vehicleid-1][vFraction] == 19 || gVehicles[vehicleid-1][vFraction] == 3)){
				if(p_info[playerid][tRank] < (FractionRank[p_info[playerid][tMember]-1]-1)){
					AC_RemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid,COLOR_GREY,"Доступно только заместителям армии");
				}
			}*/
			else if(vehicleid >= SIInfernus[0] && vehicleid <= SIInfernus[NUM_SI_VEHICLES-1]){
						DisableRemoteVehicleCollisions(playerid, true);
						SetPVarInt(playerid, "SIVehicleCols", 1);
						SendClientMessage(playerid,CGREEN,"Для того чтобы использовать нитро {"#cWHITE"}Нажимайте ЛКМ");
						SetPVarInt(playerid,"SIPlayerCP",0);
						SetPlayerRaceCheckpoint(playerid, 1, StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][2], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][2], 12.0);
			}
			else if(gVehicles[vehicleid - 1][vJob] == 4){
				if(p_info[playerid][pJob] == 4){
					if(!GetPVarInt(playerid,"taxijob")) ShowPlayerDialog(playerid, dArendaTaxi, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}Таксопарк","{ffffff}Чтобы взять машину, необходимо заплатить городскому таксопарку 200$\nВы действительно хотите заключить договор аренды?","Да","Нет");
					else if(GetPVarInt(playerid,"taxijob")) DeletePVar(playerid,"timetaxi");
				}
				else{
					SCM(playerid, COLOR_GREY, "Вы не таксист");
					AC_RemovePlayerFromVehicle(playerid);
				}
			}
			else if(vehicleid >= buscar[0] && vehicleid <= buscar[1] && (!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != 11)){
					SendClientMessage(playerid,COLOR_GREY,"Транспорт пренадлежит гос. структурам");
					AC_RemovePlayerFromVehicle(playerid);
			}
			else if(gVehicles[vehicleid - 1][vJob] == 2){
				if(p_info[playerid][pJob] != 2){
					SCM(playerid, COLOR_GREY, "Вы не механик!");
					AC_RemovePlayerFromVehicle(playerid);
					return 1;
				}
				SendClientMessage(playerid, 0x9ACD32AA, "Для того, чтобы начать работу механика {"#cORANGE"}нажмите 2");
			}
			if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]){
				ShowPlayerDialog(playerid,dStopLoad,0,"Погрузка","{"#cWHITE"}Вы хотите прекратить загрузку боеприпасов в грузовик?","Да","Нет");
			}
			else if((IsAGang(playerid) || ISAMAFIA(playerid)) && model == 482){
				stringer[0] = EOS;
				strcat(stringer,"{f0f0f0}Грузовик предназначен для загрузки либо разгрузки материалов и патронов\nДля того чтобы начать загрузку материалов, отправляйтесь в ближайшую армию {"#cBLUE"}(Зону 51 или Авианосец)\n\n{f0f0f0}Далее, когда вы приедете к складу Используйте команду {"#cBLUE"}/loadgun.\n{f0f0f0}После отправляйте на склад армии, берите ящик и загружайте фургон.\n");
				strcat(stringer,"Когда фургон будет загружен полностью, сядьте в машину и закончите загрузку\n\nДалее нужно приехать на базу, и разгрузить ящики командой {"#cBLUE"}/unloadgun.\n{f0f0f0}Желательно парковатся в 3 метрах от места разгрузки {"#cBLUE"}(Место разгрузки помечено маркером)\n{f0f0f0}После того как все ящики будут перетасканы, сядьте в машину и закончите разгрузку.");
				ShowPlayerDialog(playerid,0000,0,"{"#cGREEN"}Информация о доставке материалов",stringer,"Хорошо","");
			}
			else if((p_info[playerid][tMember] == F_NATGUARD || p_info[playerid][tMember] == F_NAVY) && model == 455){
				stringer[0] = EOS;
				strcat(stringer,"{f0f0f0}Грузовик предназначен для загрузки либо разгрузки материалов и патронов\nДля того чтобы начать загрузку материалов, отправляйтесь на корабль {"#cBLUE"}(/markload)\n\n{f0f0f0}Далее, когда вы приедете к кораблю Используйте команду {"#cBLUE"}/loadgun.\n{f0f0f0}После берите ящик и загружайте фургон.\n");
				strcat(stringer,"Когда фургон будет загружен полностью, сядьте в машину и закончите загрузку\n\nДалее нужно приехать на базу, и разгрузить ящики командой {"#cBLUE"}/unloadgun.\n{f0f0f0}Желательно парковатся в 3 метрах от места разгрузки {"#cBLUE"}(Место разгрузки помечено маркером)\n{f0f0f0}После того как все ящики будут перетасканы, сядьте в машину и закончите разгрузку.");
				ShowPlayerDialog(playerid,0000,0,"{"#cGREEN"}Информация о доставке материалов",stringer,"Хорошо","");
			}
			if(gVehicles[vehicleid-1][vFuel] <= 0.0 && !(model == 462 || model == 510)){
				SendErr(playerid, "В автомобиле нет бензина");
				SendInf(playerid,"Используйте телефон "ORG"/call {"#cWHITE"}вызвать механика / таксиста");
			}
			DeletePVar(playerid, "timetaxi");
		}
		case PLAYER_STATE_ONFOOT:
		{
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
			if(GetPVarInt(playerid,"TalkingLive") == 2){
				SCM(playerid, 0x6ab1ffaa, "Прямой эфир завершён");
				SCM(GetPVarInt(playerid,"TalkingLivels"), 0x6ab1ffaa, "Прямой эфир завершён");
				AC_TogglePlayerControllable(playerid, true);
				AC_TogglePlayerControllable(GetPVarInt(playerid,"TalkingLive"), true);
				DeletePVar(GetPVarInt(playerid,"TalkingLive"),"TalkingLive");
				format(stringer, 128, "[LS News] %s вышел(а) из прямого эфира", NamePlayer[playerid]);
				SendFamilyMessage(16,CBLUE, stringer);
			}
			if(ShowSpeed[playerid]){
				if(UpdateCarInfo_Timer[playerid] != -1){
					KillTimer(UpdateCarInfo_Timer[playerid]);
					UpdateCarInfo_Timer[playerid] = -1;
				}
				for(new i = 0; i < 18; i++)
				{
					if(i < 6)
					{
						TextDrawHideForPlayer ( playerid, BackspeedTrans[i] ) ;
					}

					TextDrawHideForPlayer ( playerid, speedBox [i] ) ;
				}

				PlayerTextDrawHide ( playerid, speedDoors[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedEngine[playerid] ) ;
				//PlayerTextDrawHide ( playerid, speedSignalLeft[playerid] ) ;
				//PlayerTextDrawHide ( playerid, speedSignalRight[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedSignalLights[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedInf[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedName[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedMileage[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedHealth[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedFuel[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedInf[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedStick[playerid] ) ;
				PlayerTextDrawHide ( playerid, speedName[playerid] ) ;

				PlayerTextDrawHide ( playerid, speedTrans[playerid][0] ) ;
				PlayerTextDrawHide ( playerid, speedTrans[playerid][1] ) ;
				PlayerTextDrawHide ( playerid, speedTrans[playerid][2] ) ;
				PlayerTextDrawHide ( playerid, speedTrans[playerid][3] ) ;
				PlayerTextDrawHide ( playerid, speedTrans[playerid][4] ) ;
				PlayerTextDrawHide ( playerid, speedTrans[playerid][5] ) ;
				PlayerTextDrawHide ( playerid, speedTrans[playerid][6] ) ;

				LastTransmisSlot[playerid] = -1;
				ShowSpeed[playerid]=false;
			}
			if (GetPVarInt(playerid, "SIVehicleCols"))
			{
				DisableRemoteVehicleCollisions(playerid, false);
				DeletePVar(playerid,"SIVehicleCols");
			}
		}
		case PLAYER_STATE_SPAWNED:
		{
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
		}
	}
	switch(oldstate)
	{
		case PLAYER_STATE_DRIVER:
		{
			for(new f = 0; f < MAX_FARMS; f++){
				for (new f2 = 0; f2 < 3; f2++)
				{
					if(f2 < 2)
					{
						if(VehicleEnters[playerid]==_farm[f][farm_vehicles_finish][f2]){
							if ( _farm[f][farm_count_zerna][f2] != 0 )
							{
								DisablePlayerRaceCheckpoint(playerid);
							}
							else
							{
								TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
							}
							break;
						}
					}
					if(VehicleEnters[playerid]==_farm[f][farm_vehicles_first][f2]){
							if(_farm[f][farm_pickup_first][f2] == -1)
							{
								DisablePlayerRaceCheckpoint(playerid);
							}
							break;
					}
				}
			}
			if(VehicleEnters[playerid] != INVALID_VEHICLE_ID)
			{
				gVehicles[VehicleEnters[playerid] - 1][vOccupied] = -1;
				//VehicleEnters[playerid] = INVALID_VEHICLE_ID;
			}
		}
		case PLAYER_STATE_PASSENGER:
		{
			if(GetPVarInt(playerid,"player_taxi"))
			{
				new player_taxi = GetPVarInt(playerid,"player_taxi")-1;
				if(GetPVarInt(player_taxi,"taxifare")!=0)
				{
					if(IsPlayerConnected(player_taxi) && floatround(GetPVarInt(player_taxi,"taximoney")/GetPVarInt(player_taxi,"taxifare")) >= 2)
					{
						if(QuestStep[3][player_taxi] == 2)
						{
							quest_amount_taxi[player_taxi]++;
							if ( quest_amount_taxi[player_taxi] >= MAX_QUEST_TAXI )
							{
								QuestStep[3][player_taxi] = 3;
								UpdatePlayerQuestStep(player_taxi);
								SendClientMessage(player_taxi, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
							}
							UpdatePlayerQuestAmount(player_taxi);
						}
					}
				}
				if(GetPVarInt(playerid,"taxi_update"))
				{
					DeletePVar(playerid,"taxi_update");
				}
				format(stringer, 128, "%s {9ACD32}вышел из такси",NamePlayer[playerid]);
				SendClientMessage(player_taxi,0xFF9900AA, stringer);
				DeletePVar(playerid,"player_taxi");
			}
		}
	}
	return 1;
}


public OnPlayerExitVehicle(playerid, vehicleid)
{
	DeletePVar(playerid, "_belt_fix");
	foreach(i)
	{
		if(GetPlayerState(i) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(i) == vehicleid)
		{
			p_info[i][pAbletoTP] = unix + 5;
   			TelePos[i][0] = 0.0;
			TelePos[i][1] = 0.0;
			GetPlayerPos(i,p_info[i][pX],p_info[i][pY],p_info[i][pZ]);
		}
	}
	VehTime[vehicleid] = 5;
	if(gPlayerProdText[playerid][0] != Text3D:-1 || gPlayerProdText[playerid][1] != Text3D:-1 || gPlayerProdCP[playerid] != -1)
	{
		SetPVarInt(playerid, "timetaxi", 15);
		SendClientMessage(playerid,0xFF9900AA, "У Вас есть 15 секунд чтобы вернуться в автомобиль");
	}
	GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
	p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
 	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	new vehmod=GetVehicleModel(vehicleid);
	if (vehmod>=400)
	{
		GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
		GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);

		if(SpeedLimit[vehmod-400]==200)
		{
			GunPlayer[playerid][11][0]=46;
			GunPlayer[playerid][11][1]=1;
			AC_GunCheattime[playerid]= unix + 3;
		}
		if(!GetPlayerVehicleSeat(playerid))
		{
			gVehicles[vehicleid - 1][vOccupied] = -1;
		}
		GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][veX], gVehicles[vehicleid - 1][veY], gVehicles[vehicleid - 1][veZ]);
		GetVehicleZAngle(vehicleid, gVehicles[vehicleid - 1][veA]);
	}
	if(GetPVarInt(playerid,"taxijob"))
	{
		SetPVarInt(playerid, "timetaxi", 15);
		SendClientMessage(playerid,0xFF9900AA, "У Вас есть 15 секунд чтобы вернуться в такси");
	}
	if(GetPVarInt(playerid,"bus_id"))
	{
		SetPVarInt(playerid, "timetaxi", 15);
		SendClientMessage(playerid,0xFF9900AA, "У Вас есть 15 секунд чтобы вернуться в автобус");
	}
	if(GetPVarInt(playerid,"get_patron")) DropPatron(playerid);
	if(PEfir[playerid] != INVALID_PLAYER_ID)
	{
		SCM(playerid,CWHITE, "Вы вышли из прямого эфира");
		PEfir[playerid] = INVALID_PLAYER_ID;
	}
	if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
	{
		Pefir[playerid] = 0;
		PEfir[playerid] = INVALID_PLAYER_ID;
		SCM(playerid,CWHITE, "Вы вышли из прямого эфира");
	}
	return 1;
}


public OnPlayerRequestClass(playerid, classid)
{
	if(IsPlayerAuthorized(playerid) == PLAYER_ONLINE)
	{
		SpawnPlayer(playerid);
	}
	else
	{
	    // ShowPlayerDialog(playerid,D_SEND_REMARKET, DIALOG_STYLE_INPUT, "  ", "{FFFFFF}Привет , мы бы хотели узнать как связаться с тобой вне игры . \nЧтобы сделать твою игру более качественней !\n\nПоэтому можете ли оставить свою ссылку вконтакте либо skype ниже:\n\nСпасибо :)", "Ввод", "");
		g_MysqlRaceCheck[playerid] ++;
		mysql_query_string[0] = EOS;
		format(mysql_query_string,200,"SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1",NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "FindPlayerInTable", "dd", playerid, g_MysqlRaceCheck[playerid]);
	}
	return 1;
}

/*
case D_SEND_REMARKET:
{

	return 1;
}
*/



forward check_ip_ban(playerid);
public check_ip_ban(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;

	new NAME_ADMIN[24],BAN_REASON[32], UNBAN_DATA = 0;


	cache_get_value_index(0,0,NAME_ADMIN,24);
	cache_get_value_index(0,1,BAN_REASON,24);
	cache_get_value_index_int(0,2,UNBAN_DATA);

	if(UNBAN_DATA > unix)
	{
		SendClientMessage(playerid,0xFF6347FF,"Ваш аккаунт заблокирован!");
		format(stringer, 144, "Администратор: {"#cWHITE"}%s",NAME_ADMIN);
		SendClientMessage(playerid,0xFF6347FF,stringer);

		new days, date_ban[6];
		timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);
		format(stringer, 144, "Дата разбана: {"#cWHITE"}%02d/%02d/%02d %02d:%02d:%02d (%d дней)",date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5],days);
		SendClientMessage(playerid,0xFF6347FF,stringer);

		format(stringer, 144, "Причина: {"#cWHITE"}%s",BAN_REASON);
		SendClientMessage(playerid,0xFF6347FF,stringer);
		KickEx(playerid);
	}
	else
	{
		// p_info[playerid][pTime] = unix;
		mysql_query_string[0] = EOS;
		format(mysql_query_string,128,"DELETE FROM `new_ban` WHERE `IP` = '%s' LIMIT 1",PlayerIp[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}
	return 1;
}


forward FexistAccountChange ( playerid , name [ ] ) ;
public FexistAccountChange ( playerid , name [ ] )
{
	new rows;
	cache_get_row_count(rows);
	if ( rows ) return ShowPlayerDialog ( playerid,RENAME_DIALOG,1,"Введите новый ник","{FF0000}Этот ник занят!\n\n{FFFFFF}Ваш ник не соответствует правилам сервера.\nВведите новый ник в окошко и нажмите {9ACD32}Далее.\n\n{FFFFFF}Пример: {9ACD32}"PROJECT_EX_NICK"","Далее","Выход");

	RenameTime[playerid] = -1;

	format ( stringer , 144 , "Ваш новый ник : {"#cORANGE"} %s" , name ) ;
	SendClientMessage ( playerid , -1 , stringer ) ;

	strmid ( NamePlayer [ playerid ] , name , 0 , strlen ( name ) ) ;
	printf ("%d %s", playerid , NamePlayer [ playerid ] ) ;
	SetPlayerName ( playerid , NamePlayer [ playerid ] ) ;
	SetPlayerColor ( playerid ,fraction_color[p_info [ playerid ] [ tMember ]] ) ;
	g_MysqlRaceCheck[playerid]++;
	mysql_query_string[0] = EOS;
	format(mysql_query_string,200,"SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1",NamePlayer[playerid]);
	mysql_pquery(connects, mysql_query_string, "FindPlayerInTable", "dd", playerid,g_MysqlRaceCheck[playerid]);
	return 1;
}

forward LoginDialog(playerid);
forward RegisterDialog(playerid);

public LoginDialog(playerid)
{
	//new show_dialog_string[400];
	stringer[0] = EOS;
	format(stringer, 400, "{fcfcfd}Добро пожаловать на {BEEB9F}"PROJECT_NAME"\n\n{fcfcfd}Персонаж с ником {BEEB9F}%s {fcfcfd}зарегистрирован.\nИспользуйте пароль",NamePlayer[playerid]);
	ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{79BD8F}Авторизация",stringer,"Вход","Выход");
	SetPVarInt(playerid,"connecttime",60);
	return 1;
}


public RegisterDialog(playerid)
{
	if ( !IsARPName ( NamePlayer [ playerid ] ) )
	{
		RenameTime[playerid] = 180;
		SendClientMessage ( playerid, COLOR_GREY, "Ваш ник не соответствует правилам сервера. Смените его. У вас есть 180 секунд на это.");
		ShowPlayerDialog  ( playerid,RENAME_DIALOG,1,"Введите новый ник","{FFFFFF}Ваш ник не соответствует правилам сервера.\nВведите новый ник в окошко и нажмите {9ACD32}Далее.\n\n{FFFFFF}Пример: {9ACD32}"PROJECT_EX_NICK"","Далее","Выход");
	}
	else
	{
		stringer[0] = EOS;
		format(stringer,400,"{"#cWHITE"}Добро пожаловать на {79BD8F}"PROJECT_NAME"\n\n{"#cWHITE"}Персонаж с ником {79BD8F}%s{"#cWHITE"} не существует. \nИспользуйте пароль:",NamePlayer[playerid]);
		ShowPlayerDialog(playerid,113,DIALOG_STYLE_INPUT,"{00A388}Регистрация",stringer,"Далее","Отмена");
	}
	return 1;
}

forward FindPlayerInTable(playerid, race_check);
public FindPlayerInTable(playerid, race_check)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if (race_check != g_MysqlRaceCheck[playerid]) return Kick(playerid);

	new rows;
	cache_get_row_count(rows);

    new mtext[50];
	switch(onlineeM)
	{
	    case 1: { mtext = "Января"; }
	    case 2: { mtext = "Февраля"; }
	    case 3: { mtext = "Марта"; }
	    case 4: { mtext = "Апреля"; }
	    case 5: { mtext = "Мая"; }
	    case 6: { mtext = "Июня"; }
	    case 7: { mtext = "Июля"; }
	    case 8: { mtext = "Августа"; }
	    case 9: { mtext = "Сентября"; }
	    case 10: { mtext = "Октября"; }
	    case 11: { mtext = "Ноября"; }
	    case 12: { mtext = "Декабря"; }
	}
    new strignat[144];
	format(strignat, 144, "Максимальный онлайн {FFFFFF}%d{09B000} человек, рекорд был запечетлен в {FFFFFF}%02d:%02d{09B000}, {FFFFFF}%02d %s 2016 {09B000}года.",onlinee,onlineeH,onlineeMi,onlineeD,mtext);
	SendClientMessage(playerid,0x09B000AA,strignat);

	if(rows)
	{
		p_info[playerid][Cache_ID] = cache_save();
		cache_get_value_index(0, 1, UserKey[playerid], 64);//tKey
		cache_get_value_index_int(0,16,p_info[playerid][tMember]); //tMember
		cache_get_value_index_int(0,25,p_info[playerid][pChar]); //pChar
		cache_get_value_index_int(0,26,p_info[playerid][pModel]); //pModel
		ChangePlayerFraction(playerid, p_info[playerid][tMember], false);
		SetTimerEx ("LoginDialog", 2500, 0, "i", playerid);
	}
	else
	{
		ChangePlayerFraction(playerid, 0, false);
		SetTimerEx ("RegisterDialog", 2500, 0, "i", playerid);
	}

	SetPVarInt(playerid,"Logged",true);
	player_show_FIND[playerid] = true;

	AC_plsp[playerid]=true;
	/// SetSpawnInfoEx(playerid,0,0.0,0.0,0.0,0.0);

	SetPVarInt(playerid,"SelectAvto",-1);
	SetPVarInt(playerid,"SalonCar", INVALID_VEHICLE_ID);
	PlayerWeaponTime[playerid] = 12 + floatround(GetPlayerPing(playerid)/100);

	new rand_camera = random(3);

	InterpolateCameraPos(playerid, 		CameraPosJoin[rand_camera][0][0],CameraPosJoin[rand_camera][0][1],CameraPosJoin[rand_camera][0][2],
										CameraPosJoin[rand_camera][0][3],CameraPosJoin[rand_camera][0][4],CameraPosJoin[rand_camera][0][5], 5000);
	//
	InterpolateCameraLookAt(playerid, 	CameraPosJoin[rand_camera][1][0],CameraPosJoin[rand_camera][1][1],CameraPosJoin[rand_camera][1][2],
										CameraPosJoin[rand_camera][1][3],CameraPosJoin[rand_camera][1][4],CameraPosJoin[rand_camera][1][5], 5000);


	SetPlayerVirtualWorld(playerid,playerid + 1);
	AC_SetPlayerPos(playerid,CameraPosJoin[rand_camera][2][0],CameraPosJoin[rand_camera][2][1],CameraPosJoin[rand_camera][2][2]);
	AC_TogglePlayerControllable(playerid,0);
	//
	for(new i = 0; i < TotalGz; i++)
	{
		GangZoneShowForPlayer(playerid,GZInfo[i][gIDs],GetGangZoneColor(i));
	}
	for(new i=0; i<8; i++)
	{
		TextDrawShowForPlayer(playerid,Logotype[i]);
	}
	return 1;
}

stock OtherTimer()
{
	for(new i = 0; i < sizeof(sdbd); i++)
	{
		//if(sdbd_step[x]==0) break;
		foreach(x)
		{
			if(GetPVarInt(x, "talk_bot")==0) continue;
			new g = GetPVarInt(x, "talk_bot")-1;
			if(g!=i) continue;
			if(!PlayerToPoint(2.5,x,sdbd[i][sdbd_pos][0],sdbd[i][sdbd_pos][1],sdbd[i][sdbd_pos][2]))
			{
				DeletePVar(x, "talk_bot");
				sdbd_step[x] = 0;
				continue;
			}
			if(g==0)
			{
				if(QuestStep[0][x]==0)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Приветствую в нашем штате.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Я помогу тебе освоиться!\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "У тебя есть немного денег.\n");
					else if(sdbd_step[x] == 4)
					{
						InterpolateCameraPosToPoint(x, 387.1296,-1509.7523,32.4208+0.4,257.0584);
						SendBotMessage(x, "Арендуй велосипед, дорога будет долгая\n");
						ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Арендуй велосипед, дорога будет долгая", "Ок", "");
						QuestStep[0][x] = 1;
						UpdatePlayerQuestStep(x);
						SendClientMessage(x, -1, "Вы начали прохождение квестов {"#cRED"}( /quest )");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");


						if(strcmp(date_password[x], "None"))
						{
							QuestStep[0][x] = 3;
							UpdatePlayerQuestStep(x);
							SendClientMessage(x,-1,"У вас уже есть паспорт, нажмите ALT");
						}

						continue;
					}
				}
				else if(QuestStep[0][x]==1)
				{
						//InterpolateCameraPosToPoint(x, 387.1296,-1509.7523,32.4208+0.4,257.0584);
						ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Арендуй велосипед, дорога будет долгая", "Ок", "");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						continue;
				}
				else if(QuestStep[0][x]==2)
				{
					//InterpolateCameraPosToPoint(x, 1444.2488,-1696.3794,34.0862+0.4,203.3112);
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Теперь направляйся в мэрию, мой друг даст тебе пару баксов на регистрацию.\nВ кабинете сделай себе паспорт.\nПосле вернись к Джону.", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[0][x] == 3)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Поздравляю с гражданством!\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Поезжай в банк, тебе нужно открыть счёт.\n");
					else if(sdbd_step[x] == 3)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}500$ и 1 EXP");
						TransferMoney(x,p_info[x][pCash]+500,500,"награда за квест");
						p_info[x][pCash] += 500;
						p_info[x][pExp] += 1;
						UpdateMoney(x);
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);

						SetPlayerGPS(x,80,1459.1299,-1038.8182,26.5515,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						SendBotMessage(x, "Без него, в нашем штате не прожить\n");
						QuestStep[0][x] = 4;
						UpdatePlayerQuestStep(x);
						SendClientMessage(x, -1, "Езжайте в банк, следить за квестами можно через команду {"#cRED"}( /quest )");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");

						if(gBankInfo[x][b_acc_number][0] == -1)
						{
							QuestStep[0][x] = 5;
							UpdatePlayerQuestStep(x);
							SendClientMessage(x,-1,"У вас уже есть банковский счет, нажмите ALT");
						}

						continue;
					}
				}
				else if(QuestStep[0][x]==4)
				{
					SetPlayerGPS(x,80,1459.1299,-1038.8182,26.5515,19,-1,MAPICON_GLOBAL_CHECKPOINT);
					//InterpolateCameraPosToPoint(x, 1459.1299,-1038.8182,26.5515+0.4,356.9586);
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Поздравляю с гражданством!\nПоезжай в банк, тебе нужно открыть счёт.\nБез него, в нашем штате не прожить\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[0][x]==5)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "У тебя есть всё.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Хотя постой, тебе же нужны права для своей машины?\n");
					else if(sdbd_step[x] == 3)
					{
						SendBotMessage(x, "Хорошо, направляйся в автошколу и там ты их получишь.\n");
						QuestStep[0][x] = 6;
						UpdatePlayerQuestStep(x);
						SendClientMessage(x, -1, "Теперь вам нужно отправиться в Автошколу, следить за квестами можно через команду {"#cRED"}( /quest )");
						format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[11][f_name]);
						SendClientMessage(x,CORANGE,stringer);
						SetPlayerGPS(x,80,-2029.0027,-95.9474,35.1641,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");

						if(Lic[x][0] == 1)
						{
							QuestStep[0][x] = 7;
							UpdatePlayerQuestStep(x);
							SendClientMessage(x,-1,"У вас уже есть права, нажмите ALT");
						}


						continue;
					}
				}
				else if(QuestStep[0][x]==6)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}У тебя есть всё.\nХотя постой, тебе же нужны права для своей машины?\nХорошо, направляйся в автошколу и там ты их получишь.\n", "Ок", "");
					format(stringer, 144,"%s отмечен(-а) меткой на мини-карте", f_info[11][f_name]);
					SendClientMessage(x,CORANGE,stringer);
					SetPlayerGPS(x,80,-2029.0027,-95.9474,35.1641,19,-1,MAPICON_GLOBAL_CHECKPOINT);
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[0][x]==7)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Замечательно!\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Теперь ты обладаешь полным комплектом гражданина.\n");
					else if(sdbd_step[x] == 3)
					{
						SendClientMessage(x, CGREEN, "Поздравляем, вы закончили первую сюжетную линию {AFAFAF}'Начало'");
						SendClientMessage(x,-1,"Подробная информация: {"#cORANGE"}/quest");
						QuestStep[0][x] = 8;
						QuestStep[1][x] = 0;
						UpdatePlayerQuestStep(x);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						SendBotMessage(x, "Приступим ко второй части твоего освоения\n");
						continue;
					}
				}
				// 2 линия, Первая работа
				if(QuestStep[1][x] == 0 && QuestStep[0][x] == 8)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Ты должен привыкнуть к тяжёлому труду.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Только так можно добиться успеха.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Направляйся в шахту, устройся шахтёром и выполни "#MAX_QUEST_MINER" заходов.\n");
					else if(sdbd_step[x] == 4)
					{
						SendClientMessage(x,CORANGE,"Шахта отмеченa меткой на мини-карте");
						SetPlayerGPS(x,80,-2365.99, -2194.26, 37.93,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						QuestStep[1][x] = 1;
						UpdatePlayerQuestStep(x);
						SendBotMessage(x, "Почувствуй свою суровость.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
					}
				}
				else if(QuestStep[1][x] == 1)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Отправляйся на шахту, там тебе нужно сделать "#MAX_QUEST_MINER" подходов\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
				}
				else if(QuestStep[1][x] == 2)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Ты хорошо справился с шахтой.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Не только хороший труд, но и терпение и выдержка нужны для успеха.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Поезжай в сад, обработай "#MAX_QUEST_GARDEN" деревьев.\n");
					else if(sdbd_step[x] == 4)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}5000$ и 3 EXP");
						TransferMoney(x,p_info[x][pCash]+5000,5000,"награда за квест");
						p_info[x][pCash] += 5000;
						p_info[x][pExp] += 3;
						UpdateMoney(x);
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						QuestStep[1][x] = 3;
						UpdatePlayerQuestStep(x);
						SendBotMessage(x, "Ты станешь хорошим садовником.\n");
						SendClientMessage(x,CORANGE,"Сад отмечен(-а) меткой на мини-карте");
						SetPlayerGPS(x,80,-1059.4337,-1205.3889,129.2188,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
					}
				}
				else if(QuestStep[1][x] == 3)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Отправляйся в сад, обработай "#MAX_QUEST_GARDEN" деревьев.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
				}
				else if(QuestStep[1][x] == 4)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Лес рубят, а щепки летят.");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Твоя цель - лесоповал.");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Тебе нужно уметь комбинировать аккуратность с суровой силой");
					else if(sdbd_step[x] == 4)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}5000$ и 3 EXP");
						TransferMoney(x,p_info[x][pCash]+5000,5000,"награда за квест");
						p_info[x][pCash] += 5000;
						p_info[x][pExp] += 3;
						UpdateMoney(x);
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendClientMessage(x,CORANGE,"Лесопилка отмеченa меткой на мини-карте");
						SetPlayerGPS(x,80,-761.89, -135.24, 65.68,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						QuestStep[1][x] = 5;
						UpdatePlayerQuestStep(x);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						SendBotMessage(x, ""#MAX_QUEST_LESOPILKA" деревьев хватит, чтобы называться лесорубом");
					}
				}
				else if(QuestStep[1][x] == 5)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Отправляйся на лесопилку, там тебе нужно вырубить "#MAX_QUEST_LESOPILKA" деревьев.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
				}
				else if(QuestStep[1][x] == 6)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Приятно пахнет древесина, правда?");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Ещё приятней пахнет сено.");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Последняя профессия для освоения - это сборщик оружия.");
					else if(sdbd_step[x] == 4)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}5000$ и 3 EXP");
						TransferMoney(x,p_info[x][pCash]+5000,5000,"награда за квест");
						p_info[x][pCash] += 5000;
						p_info[x][pExp] += 3;
						UpdateMoney(x);
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendClientMessage(x,CORANGE,"Оружейный завод отмечен(-а) меткой на мини-карте");
						SetPlayerGPS(x,80,-151.8914,-311.7426,1.4218,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						QuestStep[1][x] = 7;
						UpdatePlayerQuestStep(x);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						SendBotMessage(x, "Отправляйся на оружейный завод, там тебе нужно собрать "#MAX_QUEST_FARM" оружий.\n");
					}
				}
				else if(QuestStep[1][x] == 7)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Отправляйся на оружейный завод, там тебе нужно собрать "#MAX_QUEST_FARM" оружий.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
				}
				else if(QuestStep[1][x] == 8)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Да у тебя золотые руки, \nты прекрасно освоил целых четыре профессии!\n");
					else if(sdbd_step[x] == 2)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}5000$ и 3 EXP");
						TransferMoney(x,p_info[x][pCash]+5000,5000,"награда за квест");
						p_info[x][pCash] += 5000;
						p_info[x][pExp] += 3;
						UpdateMoney(x);
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendBotMessage(x, "Так держать, теперь тебе нужно приодеться, \nа то твоя одежда испачкалась, да и устарела\n");
						QuestStep[1][x] = 9;
						UpdatePlayerQuestStep(x);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						continue;
					}
				}// Окончание первой работы

				// Модный выговор
				if(QuestStep[1][x] == 9 && QuestStep[2][x] == 0)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Теперь у тебя есть немного денег.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Оцени, какую одежду ты хотел бы носить.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Не покупай слишком дорогую, но и не обделяй себя удобством.");
					else if(sdbd_step[x] == 4)
					{
						SendBotMessage(x, "Направляйся в магазин одежды, купи там что-нибудь.");
						QuestStep[2][x] = 1;
						UpdatePlayerQuestStep(x);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						continue;
					}
				}
				else if(QuestStep[2][x] == 1)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Направляйся в магазин одежды, купи там что-нибудь.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[2][x] == 2)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Ты прекрасно выглядишь!\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Только чего-то не хватает.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Определённо, тебе нужен какой-то аксессуар.\n");
					else if(sdbd_step[x] == 4)
					{
						SendBotMessage(x, "Ступай в магазин аксессуаров, укрась себя.");
						QuestStep[2][x] = 3;
						UpdatePlayerQuestStep(x);
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						continue;
					}
				}
				else if(QuestStep[2][x] == 3)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Ступай в магазин аксессуаров, укрась себя.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[2][x] == 4)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Ты выглядишь гораздо лучше.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "По последнему писку моды!\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Но нам с тобой нужно расстаться, ступай к моему знакомому возле Больницы Los-Santos'a.\n");
					else if(sdbd_step[x] == 4)
					{
						SetPlayerGPS(x,80,1112.7490,-1467.2734,15.7969,19,-1,MAPICON_GLOBAL_CHECKPOINT);
						SendBotMessage(x, "Он скажет тебе, что делать");
						sdbd_step[x]=0;
						QuestStep[2][x] = 5;
						UpdatePlayerQuestStep(x);
						DeletePVar(x, "talk_bot");
						continue;
					}
				}
				else if(QuestStep[2][x] == 5)
				{
					SetPlayerGPS(x,80,1112.7490,-1467.2734,15.7969,19,-1,MAPICON_GLOBAL_CHECKPOINT);
					ShowPlayerDialog(x,dQuestShow,0," ", "{AFAFAF}Cтупай к моему знакомому возле Больницы Los-Santos'a.\nОн скажет тебе, что делать.", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				//
			} // трудовые будни
			else if ( g == 1 )
			{
				if(QuestStep[2][x] != 5)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Привет, отправляйся к Джону\n");
					else if(sdbd_step[x] == 2)
					{
						SendBotMessage(x, "Ничем не могу помочь.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						continue;
					}
				}
				else if(QuestStep[3][x] == 0)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Привет! Хорошо выглядишь.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Вижу, мой друг тебя познакомил тебя со штатом?\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Прекрасно, твои знания тебе понадобятся.\n");
					else if(sdbd_step[x] == 4)
					{
						SendBotMessage(x, "Тебе нужно будет освоить вождение, готов?\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[3][x] = 1;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}
				else if(QuestStep[3][x] == 1)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Многие когда-то подвозили людей за небольшой подарочек.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Это можно делать профессионально.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Устройся таксистом, возьми в аренду спец. машину, развези "#MAX_QUEST_TAXI" людей.\n");
					else if(sdbd_step[x] == 4)
					{
						SendBotMessage(x, "Ты можешь поговорить с ними, узнать много нового.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[3][x] = 2;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}
				else if(QuestStep[3][x] == 2)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "Устройся таксистом, возьми в аренду спец. машину, развези "#MAX_QUEST_TAXI" людей.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[3][x] == 3)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Неплохо ездишь.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Теперь пересядь на авто покрупнее.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Ты будешь водителем автобуса.\n");
					else if(sdbd_step[x] == 4)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}2 EXP");
						p_info[x][pExp] += 2;
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendBotMessage(x, "В этом нет ничего сложного, просто проделай "#MAX_QUEST_BUS" рейсов.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[3][x] = 4;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}
				else if(QuestStep[3][x] == 4)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "Ты будешь водителем автобуса.\nВ этом нет ничего сложного, просто проделай "#MAX_QUEST_BUS" рейсов.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[3][x] == 5)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Почувствовал габариты, как тебе разница?\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Устройся водителем грузовика, поработай на клиентов.\n");
					else if(sdbd_step[x] == 3)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}2 EXP");
						p_info[x][pExp] += 2;
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendBotMessage(x, "Развези продукты "#MAX_QUEST_PROD" заказчикам.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[3][x] = 6;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}//
				else if(QuestStep[3][x] == 6)
				{
					ShowPlayerDialog(x,dQuestShow,0," ", "Развези продукты "#MAX_QUEST_PROD" заказчикам.\n", "Ок", "");
					sdbd_step[x]=0;
					DeletePVar(x, "talk_bot");
					continue;
				}
				else if(QuestStep[3][x] == 7)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Действительно, ты хорошо освоился в городе.\n");
					else if(sdbd_step[x] == 2)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}2 EXP");
						p_info[x][pExp] += 2;
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendBotMessage(x, "Тебе не хватает только средства связи.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[3][x] = 8;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}
				if(QuestStep[3][x] == 8 && QuestStep[4][x] == 0)
				{//
					if(sdbd_step[x] == 1) SendBotMessage(x, "Наверное, ты уже познакомился с людьми нашего штата.\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Нужно с ними общаться, а как, если все далеко друг от друга?\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Правильно, тебе нужен мобильный телефон.\n");
					else if(sdbd_step[x] == 4)
					{
						SendBotMessage(x, "Купи его в ближайшем магазинчике.\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[4][x] = 1;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}
				else if(QuestStep[4][x] == 2)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Теперь ты можешь находиться где угодно!\n");
					else if(sdbd_step[x] == 1)
					{
						SendClientMessage(x,CGREEN,"Ваша награда: {FFFFFF}1 EXP");
						p_info[x][pExp] += 1;
						UpdatePlayerData(x,"pExp",p_info[x][pExp]);
						UpdatePlayerLevel(x);
						SendBotMessage(x, "Если у друзей и знакомых будут важные сообщения, они могут отослать смс, либо позвонить тебе!\n");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[4][x] = 3;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}

				if(QuestStep[4][x] == 3 && QuestStep[5][x] == 0)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Выберись на природу!\n");
					else if(sdbd_step[x] == 2) SendBotMessage(x, "Сейчас пора бурной растительности.\n");
					else if(sdbd_step[x] == 3) SendBotMessage(x, "Грибы, цветы, что только угодно.\n");
					else if(sdbd_step[x] == 4) SendBotMessage(x, "Тебе нужно сделать запас на зиму.\n");
					else if(sdbd_step[x] == 5)
					{
						SendBotMessage(x, "Собери 30 растений.");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[5][x] = 1;
						UpdatePlayerQuestStep(x);
						continue;
					}
				}
				else if(QuestStep[5][x] == 2)
				{
					if(sdbd_step[x] == 1) SendBotMessage(x, "Ты можешь искупаться в речке, можешь половить рыбки.");
					else if(sdbd_step[x] == 2)
					{
						SendBotMessage(x, "Действительно, поймай 15 рыбёшек, у тебя будет хороший ужин, а лишнее можешь продать на рынке.");
						sdbd_step[x]=0;
						DeletePVar(x, "talk_bot");
						QuestStep[5][x] = 3;
						UpdatePlayerQuestStep(x);
						continue;
					}
					///
				}
			}
			if ( sdbd_step[x] > 0 )
			{
				//SendClientMessage(x,-1,"Плюсуем");
				sdbd_step[x]++;
			}
		}
	}
	UpdateBotText();
	foreach(i)
	{
	    if ( engine_nulled[i] != 0 ) engine_nulled[i] = 0;
	
		GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
		if(TelePos[i][5] > 550.0)
		{
			TelePos[i][0] = 0.0;
			TelePos[i][1] = 0.0;
		}
		/*if(TelePos[i][0] != 0.0)
		{
			new Float:xdist = TelePos[i][3]-TelePos[i][0];
			new Float:ydist = TelePos[i][4]-TelePos[i][1];
			new Float:sqxdist = xdist*xdist;
			new Float:sqydist = ydist*ydist;
			new Float:distance = (sqxdist+sqydist)/31;
			if(gSpeedo[i] == 2)
			{
				if(distance <10)
				{
					format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :   ~w~%.0f",distance);
				}
				if(distance > 10 && distance < 100)
				{
					format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :  ~w~%.0f",distance);
				}
				if(distance > 100)
				{
					format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f",distance);
				}
				GameTextForPlayer(i, string, 2000, 5);
			}
		}*/
		if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
		{
			TelePos[i][0] = TelePos[i][3];
			TelePos[i][1] = TelePos[i][4];
		}
		new Float: healthd;
		GetPlayerHealth(i, healthd);
		if(GetPVarInt(i,"pHospital") && GetPlayerInterior(i) == 4 && MyBed[i]==255)
		{
			if(healthd<100) AC_SetPlayerHealth(i,healthd+1.0);
		}
		if(p_info[i][pJailTime]>10 && GetPlayerWeapon(i)){
			AC_ResetPlayerWeapons(i);
		}
		if(healthd > 100){
			AC_SetPlayerHealth(i, 100);
			AC_SetPlayerHealth(i, 100);
		}
		if(!GetPVarInt(i,"dostup") && p_info[i][pAdmin] > 0)
		{
			p_info[i][pAdmin] = 0;
		}
		if(PlayerToPoint(1.0,i,312.4241,-165.9406,999.6010))
		{
			StealMats(i);
		}
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			if(PlayerToPoint(5.0,i,-1697.4017,5.9820,3.5547) || PlayerToPoint(50.0, i, 2065.87, -100.57, 10.48))
			{
				if(GetVehicleModel(GetPlayerVehicleID(i)) == 433 && IsAArm(i) || GetVehicleModel(GetPlayerVehicleID(i)) == 548 && IsAArm(i))
				{
					if(GetPVarInt(i,"get_type")) GetPatron(i,GetPVarInt(i,"get_type"));
				}
			}
		}
		if(GetPVarInt(i,"get_patron") && GetPlayerState(i) == PLAYER_STATE_DRIVER  && IsAArm(i))
		{
			if(GetVehicleModel(GetPlayerVehicleID(i)) == 433)
			{
				for(new place = 0; place <fraction_amount; place++)
				{
					if(PlayerToPoint(10.0,i,frac_place_put[place][0],frac_place_put[place][1],frac_place_put[place][2]))
					{
						if(GetPVarInt(i,"get_type"))
							PutPatron(i,GetPVarInt(i,"get_type"));
						break;
					}
				}
			}
		}
		/*if(GetPlayerState(i) == 2)
		{
			if(PlayerToPoint(10.0,i,1024.1162, -1434.67, 13.84)||
			PlayerToPoint(10.0,i,-2182.92, 969.81, 80.38)||
			PlayerToPoint(10.0,i,1941.04, 2164.25, 11.28))
			{
				if(GetPlayerVirtualWorld(i)==i+1)
				{
					if(GetEngineStat(GetPlayerVirtualWorld(i)) == 1)
					{
						ToggleEngine(GetPlayerVehicleID(i));
					}
				}
			}
		}*/
		/*if(GetPVarInt(i,"anim_bolka"))
		{
			new Float:BolkaHP;
			GetPlayerHealth(i,BolkaHP);
			if((BolkaHP + 5.0) >= 100)
			{
				for(new x = 0; x < 10; x++)
				{
					if(PlayerToPoint(2.5,i,BolkaSpawn[x][0],BolkaSpawn[x][1],BolkaSpawn[x][2]))
					{
						AC_SetPlayerPos(i,BolkaSpawn[x][0],BolkaSpawn[x][1],BolkaSpawn[x][2]);
						break;
					}
				}
				DeletePVar(i,"pHospital");
				SendClientMessage(i,0x9ACD32AA,"Поздравляю! Вы прошли курс лечения");
				SendClientMessage(i,0x9ACD32AA,"Теперь вы можете покинуть больницу");
				ClearAnimations(i);
				if(GetPVarInt(i,"anti_sbiv_time") <= unix)FIXES_ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0);
				DeletePVar(i,"anim_bolka");
			}
			else
			{
				GameTextForPlayer(i, "~g~+3 HP", 1000, 4);
				AC_SetPlayerHealth(i,BolkaHP+3.0);
			}
		}*/
		if((p_info[i][tMember] == F_NAVY && IsPlayerInRangeOfPoint(i, 30.0, 837.3401, -6.5558, 1004.2050)) ||
		(p_info[i][tMember] == F_NATGUARD && PlayerToPoint(30.0, i, 837.3401,-6.5558,1004.2050)))
		{
			new Float:ArmyHP, Float:ArmyAP;
			GetPlayerHealth(i, ArmyHP);
			GetPlayerArmour(i, ArmyAP);
			if(ArmyHP < 100.0) AC_SetPlayerHealth(i, ArmyHP+3.0), GameTextForPlayer(i, "~g~+ ~w~3 HP",2000,1);
			if(ArmyAP < 100.0) AC_SetPlayerArmour(i, ArmyAP+3.0), GameTextForPlayer(i, "~g~+ ~w~3 ARM",2000,1);
		}
		if(GetPVarInt(i,"id_find"))
		{
			if(GetPlayerInterior(GetPVarInt(i,"id_find")-1))
			{
				DisablePlayerCheckpoint(i);
				SendClientMessage(i, CWHITE, "Игрок зашел в здание, метка отключена");
				DeletePVar(i,"id_find");
			}
			else
			{
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(GetPVarInt(i,"id_find")-1,X,Y,Z);
				SetPlayerCheckpoint(i,X,Y,Z,3);
			}
		}
		if(DrugEffect[i] >= 1)
		{
			new Float: health;
			GetPlayerHealth(i, health);
			new h = floatround(health);
			if(ServerHP[i] >= 100.0) DrugEffect[i] = 1;
			if(ServerHP[i] < 100.0)
			{
				stringer[0] = EOS;
				AC_SetPlayerHealth(i, health + 2.0);
				format(stringer, 128, "~n~~n~~n~~n~~n~~n~~g~%dhp", h+2);
				GameTextForPlayer(i, stringer, 1000, 5);
			}
			if(DrugEffect[i] <= 1)
			{
				//new time[3];
				//gettime(time[0], time[1], time[2]);
				SetPlayerTime(i, tmphour, tmpminute);
				SetPlayerWeather(i, CurrentWeazer);
				SetPlayerDrunkLevel(i, 0);
				DrugEffect[i] = 0;
			}
			DrugEffect[i] -= 1;
		}
	}
	for(new acc=0; acc<=2; acc++)
	{
		SetActorPos(actors[acc],1623.8326,-1651.0718,1578.7560);
		SetActorInvulnerable(acc, true);
		SetActorVirtualWorld(actors[acc],acc+1);
	}
	return 1;
}


CMD:dropgun( playerid )
{
	if ( GetPVarInt(playerid, "f_freeslot") || (update_shoot[playerid] != PlayerText:-1 || GetPVarInt(playerid,"orcp") > 0)) return SendClientMessage(playerid,-1,"В данный момент недоступно");
	if ( GetPlayerWeapon ( playerid ) < 1 || GetPlayerWeapon ( playerid ) > 47 ) return SendClientMessage( playerid, -1, " У вас нет оружия в руках ");
	DropGun(playerid,GetPlayerWeapon ( playerid ), GetPlayerAmmo(playerid), true);
	return 1 ;
}



CMD:dropguns( playerid )
{
	new count_guns = 0;
	for(new i=0; i<13; i++)
	{
		if ( GunPlayer [ playerid ] [ i ] [ 0 ] == 0 || GunPlayer [ playerid ] [ i ] [ 1 ] == 0 ) continue ;
		DropGun(playerid,GunPlayer [ playerid ] [ i ] [ 0 ],GunPlayer [ playerid ] [ i ] [ 1 ],false,count_guns);
		count_guns++;
	}
	AC_ResetPlayerWeapons(playerid);
	return 1 ;
}

CMD:drop(playerid)
{
	if(GetPVarInt(playerid,"showmes"))
	{
		if(mats_object[0][0] != INVALID_OBJECT) return SendErr(playerid,"В данный момент уже идет поставка ящиков с металлом и патронами");
		if(GetPlayerState(playerid) != 2) return 1;
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) != 548) return 1;

		for(new i = 0; i < 6; i++)
		{
			if(mats_object[i][0] != INVALID_OBJECT || mats_object[i][1] != INVALID_OBJECT) continue;

			new Float:X, Float:Y, Float:Z, Float:A;
			GetVehiclePos(vehicleid, X, Y, Z);
			GetVehicleZAngle(vehicleid, A);

			X += (-(1+random(200)) * floatsin(-A, degrees));
			Y += (-(1+random(200)) * floatcos(-A, degrees));

			mats_object[i][0] = CreateObject(18253, X,Y,Z-30.0, 0.0, 0.0, 0.0,500.0);
			mats_object[i][1] = CreateObject(18849, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,500.0);
			AttachObjectToObject(mats_object[i][1],mats_object[i][0], 0.0, 0.0, 8.5, 0.0, 0.0, 0.0);
			MoveObject(mats_object[i][0], X,Y,Z-0.5,1.0,0.0,0.0,0.0);
		}
		DropPatron(playerid);
	}
	return 1;
}

//GetPlayerFps(playerid);
//GetPlayerFps(playerid)


new    NMRPS_MAX;
new    NMR_MAX;
new    NSBR_MAX;

CMD:getserverbytes(playerid)
{
	format(stringer, 128, "NetStats_MessagesRecvPerSecond_MAX: %d", NMRPS_MAX);
	SendClientMessage(playerid, COLOR_GREY, stringer);
	format(stringer, 128, "NetStats_MessagesReceived_MAX: %d", NMR_MAX);
	SendClientMessage(playerid, COLOR_GREY, stringer);
	format(stringer, 128, "NetStats_BytesReceived_MAX: %d", NSBR_MAX);
	SendClientMessage(playerid, COLOR_GREY, stringer);
	return 1;
}

stock PlayerTimer(i)
{
    if(GetPVarInt(i,"AntiDM") > 0)
	{
	    if(GetPlayerAnimationIndex(i) != 471) FIXES_ApplyAnimation(i, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
	    SetPVarInt(i,"AntiDM",GetPVarInt(i,"AntiDM")-1);
	    if(GetPVarInt(i,"AntiDM") == 0) ClearAnimations(i);
	}
	if(GetPlayerWantedLevel(i)>0)
	{
		if(WLabels[i]==Text3D:-1)
		{
			WLabels[i] = CreateDynamic3DTextLabel("Преступник!", 0xFF0000FF, 2.0, 2.0, 2.0, 20.0, i);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,WLabels[i],E_STREAMER_ATTACH_OFFSET_X, 0.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,WLabels[i],E_STREAMER_ATTACH_OFFSET_Y, 0.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,WLabels[i],E_STREAMER_ATTACH_OFFSET_Z, 0.8);
		}
	}
	else if(WLabels[i]!=Text3D:-1)
	{
		DestroyDynamic3DTextLabel(WLabels[i]);
		WLabels[i] = Text3D:-1;
	}
	if(fixable_timer[i][1] != INVALID_PLAYER_ID && !IsACop(i))
	{
		new fix_set_id = fixable_timer[fixable_timer[i][1]][1];
		if(fixable_timer[i][0] <= unix)
		{
			fixable_timer[i][0] = unix;
			fixable_timer[i][1] = INVALID_PLAYER_ID;
			fixable_timer[fix_set_id][1]=INVALID_PLAYER_ID;
			SendClientMessage(fix_set_id,CRED,"Таймер выхода окончен.");
		}
		else
		{
			new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
			GetPlayerPos(i,x,y,z);
			GetPlayerPos(fix_set_id,x2,y2,z2);
			if(PointToPoint(x,y,z,x2,y2,z2)>500.0){
				fixable_timer[i][0] = unix;
				fixable_timer[i][1] = INVALID_PLAYER_ID;
				fixable_timer[fix_set_id][1]=INVALID_PLAYER_ID;
				SendClientMessage(fix_set_id,CRED,"Таймер выхода окончен. Причина: Игрок ушел от вас больше чем на 500м");
			}
		}
	}
	if(p_info[i][tMember] < 0) p_info[i][tMember] = 0;
	else if(p_info[i][tMember] > MAX_FRACTIONS-1) p_info[i][tMember] = MAX_FRACTIONS-1;

	if (GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK) CheatKick(i, 18390);
	if(VehicleEnters[i]!=INVALID_VEHICLE_ID && GetTickCount()-SuperTick[i]>30000
		&& GetPlayerState(i) != PLAYER_STATE_DRIVER
		&& GetPlayerState(i) != PLAYER_STATE_PASSENGER)
	{
		SetTimerEx("UpdateVehiclePos", 2000, false, "ii", VehicleEnters[i], 1);
		BanCar[VehicleEnters[i]] = true;
		/*x=floatround(PVHFL[playerid][0]-x);
		y=floatround(PVHFL[playerid][1]-y);
		z=floatround(PVHFL[playerid][2]-z);
		if(x<70 && y<70 && z<70)
		{
			GetPlayerPos(playerid,OldPos[playerid][0],OldPos[playerid][1],OldPos[playerid][2]);
			GetPlayerPos(playerid,PVHFL[playerid][0],PVHFL[playerid][1],PVHFL[playerid][2]);
		}*/
		AC_PlayerToggleTime[i]=3+floatround(GetPlayerPing(i)/100);
		new vehmod=GetVehicleModel(VehicleEnters[i]);
		if vehmod>=400 *then
		if SpeedLimit[vehmod-400]==200 *then
		{
				GunPlayer[i][11][0]=46;
				GunPlayer[i][11][1]=1;
				AC_GunCheattime[i]=3+floatround(GetPlayerPing(i)/100);
		}
		VehicleEnters[i]=INVALID_VEHICLE_ID;
	}
	if(GetPVarInt(i,"CSAW_GO")>0)
	{
		new slot = GetPVarInt(i, "id_derevo");
		if(PlayerToPoint(5.0,i,Derevo[slot][0],Derevo[slot][1],Derevo[slot][2]) && IsPlayerInCheckpoint(i) && GetPVarInt(i,"count_les") < 100)
		{
			new animlib[32+1], animname[32+1];
			GetAnimationName(GetPlayerAnimationIndex(i), animlib, 32, animname, 32);
			if(!strcmp(animlib, "CHAINSAW", true) && !strcmp(animname, "CSAW_1", true)
			|| !strcmp(animlib, "CHAINSAW", true) && !strcmp(animname, "CSAW_2", true))
			{
				PlayerTextDrawShow(i, MinerDraw[i]);
				SetPVarInt(i,"count_les",GetPVarInt(i,"count_les") + 4);
				format(stringer, 128, "PROCENT: %d % ~n~AMOUNT: %d KG",GetPVarInt(i,"count_les"),GetPVarInt(i,"coung_kg"));
				PlayerTextDrawSetString(i,MinerDraw[i],stringer);
				if(GetPVarInt(i,"count_les") >= 100)
				{
					new Float:a;
					GetPlayerPos(i,p_info[i][pX],p_info[i][pY],p_info[i][pZ]);
					SetPVarFloat(i, "CSAW_pos_x",p_info[i][pX]);
					SetPVarFloat(i, "CSAW_pos_y",p_info[i][pY]);
					SetPVarFloat(i, "CSAW_pos_z",p_info[i][pZ]);
					GetPlayerFacingAngle(i,a);
					AC_SetPlayerPos(i,p_info[i][pX]+9.0,p_info[i][pY]+6.0,p_info[i][pZ]);
					SetPlayerFacingAngle(i,a + 60.0);
					SetCameraBehindPlayer(i);
					MoveDynamicObject(gDerevo[slot],Derevo[slot][0],Derevo[slot][1],Derevo[slot][2]+0.004,0.004, 0.00000000,90.00000000,0.00000000);
					DisablePlayerCheckpoint(i);
					AC_TogglePlayerControllable(i,0);
					SetTimerEx("GatDerevo",2000,0,"ii",i,slot);
				}
			}
		}
		else
		{
			DeletePVar(i, "CSAW_GO");
		}
	}
	if ( GetPVarInt(i, "unix_bomber_farm") <= unix && GetPVarInt(i, "unix_bomber_farm") != 0 )
	{
		TogglePlayerControllable(i, 1);
		FIXES_ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0);
		if(IsPlayerAttachedObjectSlotUsed(i,2)) RemovePlayerAttachedObject(i,2);
		if(IsPlayerAttachedObjectSlotUsed(i,3)) RemovePlayerAttachedObject(i,3);
		SetPlayerAttachedObject( i, 2, 2901, 17, -0.073969, 0.349906, 0.065601, 331.510559, 271.870788, 321.750610, 0.831871, 1.000000, 0.748390 );
		SetPlayerSpecialAction(i, SPECIAL_ACTION_CARRY);
		TogglePlayerDynamicCP(i, farm_cp[GetPVarInt(i, "f")][GetPVarInt(i, "f2")][GetPVarInt(i, "f3")], false);
		SetPVarInt ( i, "bomber_farm_sell" , true ) ;
		DeletePVar ( i, "unix_bomber_farm" ) ;
	}
	if(NetStats_MessagesRecvPerSecond(i) > NMRPS_MAX)
	{
		NMRPS_MAX = NetStats_MessagesRecvPerSecond(i);
	}
	if(NetStats_MessagesReceived(i) > NMR_MAX)
	{
		NMR_MAX = NetStats_MessagesReceived(i);
	}
	if(NSBR_MAX > NetStats_BytesReceived(i))
	{
		NSBR_MAX = NetStats_BytesReceived(i);
	}

	if(p_info[i][pMestoJail] == 5 && p_info[i][pJailTime] > 0) p_info[i][pMestoJail] = 6;
	if(p_info[i][pAbletoTP2] == true)
	{
        new Float:xa, Float:ya, Float:za, Float:x, Float:y, Float:z;
        GetPlayerPos(i, x, y, z);
		xa = x - ANTIFALSEX[i];
		ya = y - ANTIFALSEY[i];
		za = z - ANTIFALSEZ[i];//
		new Float:distance;
		distance = floatsqroot(floatadd(floatadd(floatpower(xa,2),floatpower(ya,2)),floatpower(za,2)));
		if(distance > 5) p_info[i][pAbletoTP2] = false, p_info[i][pAbletoTP] = unix + (2 + floatround(GetPlayerPing(i)/100));
	}
 	new pstate = GetPlayerState(i);
	if(SelectCarToTune [ i ] == -1 && p_info[i][pAbletoTP] <= unix && pstate != PLAYER_STATE_SPECTATING && pstate != PLAYER_STATE_SPAWNED && unix - p_info[i][pAFK] < 3 && p_info[i][pAbletoTP2] == false)
	{
	    new Float:xa, Float:ya, Float:za, Float:x, Float:y, Float:z;
		GetPlayerPos(i, x, y, z);
	    //if(x == 0.0 && y == 0.0) {}
	    if(!(x == 0.0 && y == 0.0))
	    {
			xa = x - p_info[i][pX];
			ya = y - p_info[i][pY];
			za = z - p_info[i][pZ];
			new Float:distance, vehicleid = GetPlayerVehicleID(i);
			distance = floatsqroot(floatadd(floatadd(floatpower(xa,2),floatpower(ya,2)),floatpower(za,2)));
			new tick = GetTickCount();
			if(!(!distance && tick - p_info[i][pLastTick_A] <= 1500))
			{
		        if(distance > 400 && pstate != PLAYER_STATE_PASSENGER && p_info[i][pAdmin] == 0 && p_info[i][pJailTime] == 0 && AC_plsp[i])
		        {//IsAPlane(vehicleid)
                    //SendClientMessage(i,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве! (#0111)");
				    //format(stringer,90,"Античит < ERROR 0111 > кикнут(а) %s [Teleport] (%.2f)",NamePlayer[i], distance);
                    //AdmMes(COLOR_GREY,stringer,1);
			        //KickEx(i);
			        return true;
		        }
		        else if(!IsAPlane(GetPlayerVehicleID(i)) && distance > 90.0 && tick - p_info[i][pLastTick_A] <= 1500 && pstate == PLAYER_STATE_DRIVER && p_info[i][pAdmin] == 0 && p_info[i][pJailTime] == 0)
		        {
                    format(stringer,60,"<Warning> %s[%d]: Возможно Car-Airbreak (%.2f)",NamePlayer[i],i,distance);
		            AdmMes(CREDD,stringer,1);
		        }
		        if(PointToPoint(x,y,z,VehPos[vehicleid][0],VehPos[vehicleid][1],VehPos[vehicleid][2]) > 50.0 && distance != 0.0 &&
						tick - p_info[i][pLastTick_A] <= 1500 &&
						pstate == PLAYER_STATE_PASSENGER &&
						p_info[i][pAdmin] == 0 &&
						p_info[i][pJailTime] == 0 &&
						!IsVehicleOccupiedEx(vehicleid))
		        {
					///SendClientMessage(i, -1, "check");
					SetVehicleVelocity(vehicleid, 0.0,0.0,0.0);
					//AC_RemovePlayerFromVehicle(i);
					AC_SetVehiclePos(vehicleid, VehPos[vehicleid][0],VehPos[vehicleid][1],VehPos[vehicleid][2]);
					AC_SetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
                    format(stringer,60,"<Warning> %s[%d]: Возможно CarShot (%.2f)",NamePlayer[i],i,PointToPoint(x,y,z,VehPos[vehicleid][0],VehPos[vehicleid][1],VehPos[vehicleid][2]));
		            AdmMes(CREDD,stringer,1);
		        }
		        p_info[i][pX] = x;
			    p_info[i][pY] = y;
			    p_info[i][pZ] = z;
			    p_info[i][pLastTick_A] = GetTickCount();
	            new Float:xw, Float:yw, Float:zw;//
	            GetPlayerVelocity(i, xw, yw, zw);
	            if((xw > 1.8 || yw > 1.8) && GetPlayerSurfingVehicleID(i) == INVALID_VEHICLE_ID && p_info[i][pAdmin] == 0)
                {
			        SendClientMessage(i,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве! (#0118)");
           			KickEx(i);
				    format(stringer,90,"Античит < ERROR 0118 > кикнут(а) %s [****рванка]",NamePlayer[i], distance);
                    AdmMes(COLOR_GREY,stringer,1);
			        return 1;
		        }
		    }
	    }
	}



	if(IsAGang(i) && p_info[i][pAbletoTP] <= unix && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
	{
		if(!show_info_band[i])
		{
			PlayerTextDrawShow(i, GangInfo_P_TD[i][0]);
			PlayerTextDrawShow(i, GangInfo_P_TD[i][1]);
			for(new J = 0; J < 28; J++) TextDrawShowForPlayer(i, GangInfo_TD[J]);
			//TextDrawHideForPlayer(i, Datum);
			show_info_band[i] = true;
		}
		else
		{
			new update_stats_band[64];
			format(update_stats_band, 64, "~w~FPS: ~g~%d ~w~PING: ~b~%d", 30 + random(20), GetPlayerPing(i));
			PlayerTextDrawSetString(i, GangInfo_P_TD[i][0], update_stats_band);
		}
	}
	if(show_info_band[i] && (!IsAGang(i) || GetPlayerState(i) != PLAYER_STATE_ONFOOT))
	{
		PlayerTextDrawHide(i, GangInfo_P_TD[i][0]);
		PlayerTextDrawHide(i, GangInfo_P_TD[i][1]);
		for(new J = 0; J < 28; J++) TextDrawHideForPlayer(i, GangInfo_TD[J]);
		//TextDrawShowForPlayer(i, Datum);
		show_info_band[i] = false;
	}
	if(ISAMAFIA(i) && p_info[i][pAbletoTP] <= unix && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
	{
		if(!show_info_mafia[i])
		{
			PlayerTextDrawShow(i, GangInfo_P_TD[i][1]);
			show_info_mafia[i] = true;
		}
	}
	if(show_info_mafia[i] && (!ISAMAFIA(i) || GetPlayerState(i) != PLAYER_STATE_ONFOOT))
	{
		PlayerTextDrawHide(i, GangInfo_P_TD[i][1]);
		show_info_mafia[i] = false;
	}
	new Float:posx[3];
	GetPlayerPos(i, posx[0],posx[1],posx[2]);
	if(SurfPlayerUseSlot[i]!=-1 && (posx[0]>2130.16 || posx[0] <-283.31 || posx[1] > -1421.22 || posx[1] < -4004.14))
	{
		RemovePlayerAttachedObject(i,3);
		SendClientMessage(i,0x73B461FF,"[Информация]{FFFFFF} Сёрфборд возврашён в магазин, так как вы покинули пляж");
		Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,surf_pos_id[SurfPlayerUseSlot[i]], E_STREAMER_WORLD_ID, 0);
		SurfPlayerUseSlot[i]=-1;
	}
	if(!IsPointInDynamicArea(b_acc_area, posx[0],posx[1],posx[2]) && IsValidPlayerObject(i, GetPVarInt(i,"b_acc_object")) && p_info[i][pAbletoTP] <= unix && GetPVarInt(i,"b_acc_object"))
	{
		DestroyPlayerObject(i, GetPVarInt(i,"b_acc_object"));
		DeletePVar(i,"b_acc_object");
	}
	/*if(!IsPointInDynamicArea(foot_area, posx[0],posx[1],posx[2]) && Count_Slot_Player_Object [ i ] != 0 && p_info[i][pAbletoTP] <= unix)
	{
		for(new F = 0; F < Count_Slot_Player_Object[i]; F++)
		{
			DestroyPlayerObject(i, gPlayerObject[i][F]);
		}
		Count_Slot_Player_Object[i] = 0;
	}*/
	if(br_player[i][br_objects][0] != INVALID_OBJECT)
	{
		new Float:x, Float:y, Float:z;
		GetDynamicObjectPos(br_player[i][br_objects][0], x, y, z);
		new here_distance = (!IsPlayerInAnyVehicle(i)) ? floatround(GetPlayerDistanceFromPoint(i, x, y, z)) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(i), x, y, z));
		if ( here_distance > 250 )
		{
			for(new X=0;X<25;X++)
			{
				if(br_player[i][br_objects][X] != INVALID_OBJECT)
				{
					DestroyDynamicObject(br_player[i][br_objects][X]);
					br_player[i][br_objects][X]=INVALID_OBJECT;
				}
			}
		}
	}
	if ( br_player[i][br_object_text][0] != INVALID_OBJECT )
	{
		new Float:x, Float:y, Float:z;
		GetDynamicObjectPos(br_player[i][br_object_text][0], x, y, z);
		new here_distance = (!IsPlayerInAnyVehicle(i)) ? floatround(GetPlayerDistanceFromPoint(i, x, y, z)) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(i), x, y, z));
		if ( here_distance > 250 )
		{
			DestroyDynamicObject ( br_player[i][br_object_text][0] ) ;
			br_player[i][br_object_text][0]=INVALID_OBJECT;
		}
	}
	if ( br_player[i][br_object_text][1] != INVALID_OBJECT )
	{
		new Float:x, Float:y, Float:z;
		GetDynamicObjectPos(br_player[i][br_object_text][1], x, y, z);
		new here_distance = (!IsPlayerInAnyVehicle(i)) ? floatround(GetPlayerDistanceFromPoint(i, x, y, z)) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(i), x, y, z));
		if ( here_distance > 250 )
		{
			DestroyDynamicObject ( br_player[i][br_object_text][1] ) ;
			br_player[i][br_object_text][1]=INVALID_OBJECT;
		}
	}
	if(Reason__Count[i]>0)
	{
		Reason__Count[i]--;
	}
	for(new SS=0;SS<10;SS++)
	{
		if(GunTickGet[i][SS]>0)
		{
			GunTickGet[i][SS]--;
		}
	}
	if( RenameTime [ i ] > 0)
	{
		RenameTime [ i ] --;
		format(stringer, 120, "~w~With you ~r~%s ~w~to change your nickname", Converts( RenameTime[i] ) ) ;
		GameTextForPlayer ( i , stringer , 1500 , 3 ) ;

		if( RenameTime [ i ] == 0 )
		{
			RenameTime [ i ] = -1 ;
			SendClientMessage( i , CWHITE , "Время истекло. Введите {FF0000}/q{FFFFFF} чтобы выйти из игры." ) ;
			KickEx ( i ) ;
		}
	}
	if ( toogle_radar [ i ] > 0 )
	{
		toogle_radar [ i ]--;
		if(toogle_radar [ i ] == 0)
		{
			new str_radar [ 150 ] ;
			format ( str_radar , 150 , "Радар №{"#cORANGE"}%d{ffffff}\nМаксимальная скорость: {"#cORANGE"}%d {ffffff}км/ч" , GetPVarInt ( i , "total_radars" ) , GetPVarInt ( i , "max_speed" ) ) ;
			SetDynamicObjectMaterialText(radar_object [ i ] [ 1 ], 0, str_radar, 120, "Segoe Keycaps", 35, 1, -1, 0, 1);
			SetDynamicObjectMaterialText(radar_object [ i ] [ 2 ], 0, str_radar, 120, "Segoe Keycaps", 35, 1, -1, 0, 1);
		}
	}
	if(p_info[i][pMestoJail] == 6)
	{
		if(GetPlayerInterior(i) != 3 || !(IsPlayerInRangeOfPoint(i, 50.0, 193.0500, 174.6800, 1003.0200)) || GetPlayerVirtualWorld(i) != 1337)
		{
			AC_SetPlayerPos(i, 193.05, 174.68, 1003.02);
			SetPlayerInterior(i, 3);
			SetPlayerVirtualWorld(i, 1337);
		}
		if(p_info[i][pJailTime] != 0)
		{
			p_info[i][pJailTime]--;
			if(p_info[i][pJailTime] == 0)
			{
				SendClientMessage(i,CGREEN, "Время пребывания в читерском мире закончено");
				SpawnPlayer(i);
				p_info[i][pMestoJail] = 0;

				UpdatePlayerData(i,"pJailTime",0);
				UpdatePlayerData(i,"pMestoJail",0);
			}
		}
	}

	if(CountFloodForPlayer[i] > 0) CountFloodForPlayer[i] = 0;
	if(p_info[i][pCash] >= 10000000)
	{
		new skeis = GetPVarInt(i,"keis");
		if(!skeis)
		{
			SetPlayerAttachedObject(i,8,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
			SetPVarInt(i,"keis",true);
		}
		if(skeis)
		{
			if(GetPlayerWeapon(i)>0 || GetPlayerState(i) != PLAYER_STATE_ONFOOT)
			{
				if(IsPlayerAttachedObjectSlotUsed(i, 8))
					RemovePlayerAttachedObject(i, 8);
			}
			else
			{
				if(!IsPlayerAttachedObjectSlotUsed(i, 8))
					SetPlayerAttachedObject(i,8,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
			}
		}
	}
	else if(p_info[i][pCash] < 30000000)
	{
		if(IsPlayerAttachedObjectSlotUsed(i, 8))
		{
			if(GetPVarInt(i,"keis"))
			{
					RemovePlayerAttachedObject(i, 8);
					DeletePVar(i,"keis");
			}
		}
	}
	if(GetPVarFloat(i,"GPS_X"))
	{
		if(TD_GPS[i] != PlayerText:-1)
		{
			new Float:gps_X = GetPVarFloat(i,"GPS_X");
			new Float:gps_Y = GetPVarFloat(i,"GPS_Y");
			new Float:gps_Z = GetPVarFloat(i,"GPS_Z");

			new Float:kPos[3];
			GetPlayerPos(i,kPos[0],kPos[1],kPos[2]);

			new Float:distance = floatsqroot(floatadd(floatadd(floatpower(kPos[0]-gps_X,2.0),floatpower(kPos[1]-gps_Y,2.0)),floatpower(kPos[2]-gps_Z,2.0)));

			if(distance < 40)
			{
				DeletePVar(i,"GPS_X");
				DeletePVar(i,"GPS_Y");
				DeletePVar(i,"GPS_Z");
				RemovePlayerMapIcon(i, 80);
				PlayerTextDrawHide(i,TD_GPS[i]);
				SendClientMessage(i,CGREEN, "Вы достигли места назначения, метка убрана");
			}
			else
			{
				format(stringer, 64, "%.1f m.",distance);
				PlayerTextDrawSetString(i,TD_GPS[i],stringer);
			}
		}
	}
	if(GetPVarInt(i,"flag"))
	{
		new houseid = GetPVarInt(i,"hrieltor1") ;
		SetPlayerMapIcon(i, 1, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 19, -1, MAPICON_GLOBAL_CHECKPOINT);
	}
	if(!IsACop(i) && !IsAArm(i) && !IsAMayor(i) && !IsAMedic(i) && p_info[i][tMember] != F_SWAT && p_info[i][tMember] != F_WHOUSE)
	{
		for(new green = 0; green < MAX_GREEN_ZONES; green++)
		{
			if(IsPlayerInDynamicArea(i,gAreaGreenZone[green]))
			{
				if(GetPlayerState(i) == PLAYER_STATE_ONFOOT)
				{
					if(GetPlayerWeapon(i))
					{
						if(GetPlayerWeapon(i) != 9 || !GetPVarInt(i,"lesopilka"))
						{
							SetPlayerArmedWeapon(i, 0);
						}
					}
				}
			}
		}
	}
	if(GetPVarInt(i, "SIVehicleCols") && GetPlayerState(i) == PLAYER_STATE_DRIVER && IsPlayerInAnyVehicle(i))
	{
			new vehicleid = GetPlayerVehicleID(i);
			if ( vehicleid >= SIInfernus[0] && vehicleid <= SIInfernus[NUM_SI_VEHICLES-1] )
			{
				new Float:CurVehicleHealth, Float:CurVehicleZ;
				GetVehiclePos(vehicleid,CurVehicleZ,CurVehicleZ,CurVehicleZ);
				GetVehicleHealth(vehicleid, CurVehicleHealth);
				if (CurVehicleHealth < 990)
				{
					AC_SetVehicleHealth(vehicleid,1000.0);
					RepairVehicle(vehicleid);
				}
				if ( CurVehicleZ < 0.75 )
				{
					AC_SetPlayerPos(i, 260.0048 + random(2), -2219.4446, 4.6540);
					SetPlayerFacingAngle(i, 310.5739);
					SetVehicleToRespawn ( vehicleid ) ;
				}
			}
	}
	if(PlayerToPoint(400.0, i, 192.93, 1848.54, 150.06))
	{
		new Float:FlyZ;
		GetPlayerPos(i,FlyZ,FlyZ,FlyZ);
		if(!GetPVarInt(i,"showmes") && GetVehicleModel(GetPlayerVehicleID(i)) == 548)
		{
			SendInf(i,"Чтобы начать выброс доставляемых Вами материалов Используйте команду "ORG"/drop");
			SetPVarInt(i,"showmes", true);
		}
	}
	if(status_siren && PlayerToPoint(120.0,i,2162.7239,-102.3602,6.7436))
	{
		PlayerPlaySound(i, 6001, p_info[i][pX],p_info[i][pY],p_info[i][pZ]);
	}
	if (GetPVarInt(i,"removetimer"))
	{
		SetPVarInt(i,"removetimer",GetPVarInt(i,"removetimer")-1);
		if(GetPVarInt(i,"removetimer")==1)
		{
			if(IsPlayerInAnyVehicle(i) && GetVehicleModel(GetPlayerVehicleID(i)) != 441)
			{
				CheatKick(i,6);
			}
			DeletePVar(i,"removetimer");
		}
	}

	if(gKilledWithAntiDeath[i] == 1)
	{
		if(TimeWithDeath[i]>0)
		{
			format(stringer,10, "~r~~h~%i",TimeWithDeath[i]);
			GameTextForPlayer(i, stringer, 1000, 6);
			TimeWithDeath[i]--;
			if(TimeWithDeath[i]==0)
			{
				if(gKilledWithAntiDeath[i]==1)
				{
					AC_TogglePlayerControllable(i, false);
					SetTimerEx("Animation_Death_2",200,0,"i",i);
					//FIXES_ApplyAnimation( playerid, "PED", "KO_SHOT_FRONT", 4.1, 0, 0, 0, 1, 0, 1 );
					//FIXES_ApplyAnimation(playerid, "PED", "KO_SHOT_FRONT", 4.0, 0, 0, 0, 0, 1, 1);
					//FIXES_ApplyAnimation(playerid, "PED", "KO_SHOT_FRONT", 4.0, 0, 0, 0, 0, 0, 1);
					//SCM(playerid,-1,"Чтобы появиться в больнице введите: {"#cORANGE"}/accept death");
					SendClientMessage(i,0xC6C6C6FF, "[Телефон]: Держитесь, скорая уже в пути...");
					SCM(i,0xCCCC99FF,"(( Чтобы появиться в больнице введите: /adeath ))");
					TimeWithDeath[i] = 120;
					Update3DTextLabelText(damage_text[i],COLOR_LIGHTRED,"(( Данный игрок мёртв ))");
					gKilledWithAntiDeath[i] = 2;
				}
				else if(gKilledWithAntiDeath[i]==2)
				{
					if(damage_text[i]!=Text3D:-1)
					{
						Delete3DTextLabel(damage_text[i]);
						damage_text[i]=Text3D:-1;
					}
					GetPlayerPos(i, gDeathPos[i][0], gDeathPos[i][1], gDeathPos[i][2]);
					if(GetPVarInt(i,"sync_attackerid")>0){
						OnPlayerSyncDeath(i,GetPVarInt(i,"sync_attackerid")-1,GetPVarInt(i,"sync_weaponid"));
						DeletePVar(i,"sync_attackerid");
						DeletePVar(i,"sync_weaponid");
					}
					AC_TogglePlayerControllable(i, true);
					gKilledWithAntiDeath[i] = 5;
					SpawnPlayer(i);
				}
			}
		}
	}
	//
	if(GetPVarInt(i,"timetaxi"))
	{
		SetPVarInt(i, "timetaxi", GetPVarInt(i,"timetaxi")-1);
		format(stringer,10, "~r~~h~%i",GetPVarInt(i,"timetaxi"));
		GameTextForPlayer(i, stringer, 1000, 6);
		if(GetPVarInt(i,"timetaxi")==1)
		{
			switch(p_info[i][pJob])
			{
				case 4: EndTaxi(i);
				case 8: if(GetPVarInt(i,"bus_id")) SetVehicleToRespawn(GetPVarInt(i,"bus_id"));
			}

			if(gPlayerProdText[i][0] != Text3D:-1 || gPlayerProdText[i][1] != Text3D:-1 || gPlayerProdCP[i] != -1)
			{
				if(gPlayerProdText[i][0] != Text3D:-1) DestroyDynamic3DTextLabel(gPlayerProdText[i][0]);
				if(gPlayerProdText[i][1] != Text3D:-1) DestroyDynamic3DTextLabel(gPlayerProdText[i][1]);
				if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);

				gPlayerProdText[i][0] = Text3D:-1;
				gPlayerProdText[i][1] = Text3D:-1;
				gPlayerProdCP[i] = -1;

				SendClientMessage(i, 0xFFFF00AA, "Рабочий день завершен");

				SetVehicleToRespawn(GetPVarInt(i,"prod_vehicle_id"));
				DeletePVar(i,"prod_vehicle_id");
				DeletePVar(i,"prod_next");
				DeletePVar(i,"count_prod2");
				DeletePVar(i,"prod_id");
			}

			DeletePVar(i,"timetaxi");
		}
	}
	if(GetPVarInt(i,"taxi_update") > 0)
	{
		SetPVarInt(i,"taxi_update",GetPVarInt(i,"taxi_update")-1);
		if(GetPVarInt(i,"taxi_update")==1)
		{
			new player_taxi = GetPVarInt(i,"player_taxi") - 1;
			if(p_info[i][pCash] < GetPVarInt(player_taxi,"taxifare"))
			{
				SendClientMessage(i,COLOR_LIGHTRED,"Извините у вас закончились средства для оплаты тарифа");
				DeletePVar(i,"taxi_update");
				SetVehicleVelocity(GetPlayerVehicleID(player_taxi),0.0,0.0,0.0);
				RemovePlayerFromVehicle(i);
			}
			else
			{
				p_info[i][pCash] -= GetPVarInt(player_taxi,"taxifare");
				UpdateMoney(i);
				SetPVarInt(player_taxi, "taximoney", GetPVarInt(player_taxi,"taximoney")+GetPVarInt(player_taxi,"taxifare"));
				format(stringer, 64, "~r~~h~%i$~n~~b~~h~+30 SEC",GetPVarInt(player_taxi,"taxifare"));
				GameTextForPlayer(i, stringer, 500, 1);
				SetPVarInt(i,"taxi_update", 30);
			}
		}
	}
	if(GetPVarInt(i,"PreloadAllAnims"))
	{
		SetPVarInt(i,"PreloadAllAnims",GetPVarInt(i,"PreloadAllAnims")-1);
		if(GetPVarInt(i,"PreloadAllAnims")==1)
		{
			PreloadAnimLib(i,"BASEBALL");
			PreloadAnimLib(i,"BEACH");
			PreloadAnimLib(i,"benchpress");
			PreloadAnimLib(i,"BD_FIRE");
			PreloadAnimLib(i,"BOMBER");
			PreloadAnimLib(i,"CAMERA");
			PreloadAnimLib(i,"CAR_CHAT");
			PreloadAnimLib(i,"CARRY");
			PreloadAnimLib(i,"CASINO");
			PreloadAnimLib(i,"COP_AMBIENT");
			PreloadAnimLib(i,"CRACK");
			PreloadAnimLib(i,"DAM_JUMP");
			PreloadAnimLib(i,"DEALER");
			PreloadAnimLib(i,"DODGE");
			PreloadAnimLib(i,"FOOD");
			PreloadAnimLib(i,"GANGS");
			PreloadAnimLib(i,"GRAVEYARD");
			PreloadAnimLib(i,"HEIST9");
			PreloadAnimLib(i,"INT_HOUSE");
			PreloadAnimLib(i,"INT_OFFICE");
			PreloadAnimLib(i,"KISSING");
			PreloadAnimLib(i,"LOWRIDER");
			PreloadAnimLib(i,"MD_CHASE");
			PreloadAnimLib(i,"ON_LOOKERS");
			PreloadAnimLib(i,"PARK");
			PreloadAnimLib(i,"PAULNMAC");
			PreloadAnimLib(i,"PED");
			PreloadAnimLib(i,"RYDER");
			PreloadAnimLib(i,"RAPPING");
			PreloadAnimLib(i,"RIOT");
			PreloadAnimLib(i,"SHOP");
			PreloadAnimLib(i,"SMOKING");
			PreloadAnimLib(i,"SNM");
			PreloadAnimLib(i,"STRIP");
			PreloadAnimLib(i,"SUNBATHE");
			PreloadAnimLib(i,"SWAT");
			PreloadAnimLib(i,"SWEET");
			PreloadAnimLib(i,"OTB");
			PreloadAnimLib(i,"ROB_BANK");
			PreloadAnimLib(i,"goggles");
			PreloadAnimLib(i,"BAR");
			PreloadAnimLib(i,"SPRAYCAN");
			PreloadAnimLib(i,"MISC");
			PreloadAnimLib(i,"MEDIC");
			PreloadAnimLib(i,"GYMNASIUM");
			PreloadAnimLib(i,"POLICE");
			PreloadAnimLib(i,"DANCING");
			ClearAnims(i);
		}
		else if(!GetPVarInt(i,"PreloadAllAnims"))
		{
			DeletePVar(i,"PreloadAllAnims");
		}
	}

	if(GetPVarInt(i,"StartRecon")) UpdateRecon(i,GetPVarInt(i,"r_specid"));

	new PlayerState=GetPlayerState(i);
	new vehicleid = GetPlayerVehicleID(i);

	if(PlayerState == PLAYER_STATE_DRIVER)
	{
		if(VehicleEnters[i] != vehicleid && GetPVarInt(i, "FiveSecound") <= 0)
		{
			CheatKick(i,7);
		}
	}

	if(vehicleid>=1 && PlayerState == 2)
	{
		if(gVehicles[vehicleid-1][vHealth]<300.0 && GetEngineStat(vehicleid) == 1)
		{
			ToggleEngine(vehicleid);
		}
	}
	if(GetPVarInt(i,"cheat_wait_player"))
	{
		SetPVarInt(i,"cheat_wait_player",GetPVarInt(i,"cheat_wait_player")-1);
		if(GetPVarInt(i,"cheat_wait_player")==1)
		{
			DeletePVar(i,"cheat_wait_player");
		}
	}
	if(unix - p_info[i][pAFK] > 3)
	{
		if( active_time[i] > -1 )
		{
			untarget_onAFK(i);
		}
		format(stringer,64,"AFK: {FFFFFF}%s",Converts(unix - p_info[i][pAFK]));
		SetPlayerChatBubble(i, stringer, 0x7FB151FF, 10.0, 980);
	}

	if(update_shoot[i] != PlayerText:-1)
	{
		new shoot_second = GetPVarInt(i,"opc_time")-unix;

		if(shoot_second == 0)
		{
			SendClientMessage(i,COLOR_GREY,"Сеанс стрельбы окончен. Приходите еще.");
			drop_or(i);
			AC_ResetPlayerWeapons(i);
		}
		else
		{
			format(stringer,64,"%s",Converts(shoot_second));
			PlayerTextDrawSetString(i, update_shoot[i], stringer);
		}
	}

	if(unix - p_info[i][pAFK] < 3)
	{
	    if ( p_info[i][pAdmin] != 0)
	    {
			gAdminTime[i]++;
		}
		p_info[i][pTime]++;
	}
	else
	{
	    p_info[i][pTimeAFK]++;
	}
	
	//p_info[i][pAFK] ++;

	if(AntiSlivCount[i]>0 && AntiSlivTime[i]==0)
	{
		AntiSlivTime[i]=INTERVAL_ADMIN_WARN;
	}
	if(AntiSlivTime[i]>0)
	{
		AntiSlivTime[i]--;
		if(AntiSlivTime[i]==0) AntiSlivCount[i]--;
	}
	if(p_info[i][pMuteTime] > 0)
	{
		p_info[i][pMuteTime]--;
		if(p_info[i][pMuteTime] == 1)
		{
			p_info[i][pMuteTime] = 0;
			UpdatePlayerData(i,"pMuteTime",p_info[i][pMuteTime]);
			SCM(i,CGREEN,"Вам включили чат. Пожалуйста больше не нарушайте правила");
		}
	}
	if(GetPVarInt(i,"connecttime"))
	{
		SetPVarInt(i,"connecttime",GetPVarInt(i,"connecttime")-1);
		if(GetPVarInt(i,"connecttime")==1)
		{
			DeletePVar(i,"connecttime");
			KickEx(i);
			SCM(i,CWHITE,"Вы слишком долго входите в игру.");
		}
	}
	if(GetPVarInt(i,"robbankstime") && robbanks)
	{
		SetPVarInt(i,"robbankstime",GetPVarInt(i,"robbankstime")-1);
		if(GetPVarInt(i,"robbankstime") == 1)
		{
			DeletePVar(i,"robbankstime");
			new rand = random(12);
			new randmoney = random(60);
			switch(rand)
			{
			case 0..4:
				{
					if(randmoney != 37)
					{
						new kaznarob = kazna / 40;
						robtime = 10800;
						FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
						p_info[i][pWanted]+=4;
						TransferMoney(i,p_info[i][pCash]+kaznarob,kaznarob,"ограбил казну");
						p_info[i][pCash] += kaznarob;
						UpdateMoney(i);
						frac_money[7] -= kaznarob;
						GameTextForPlayer(i, "~g~~h~HACKED...", 1500, 6);
						format(stringer, 32, "~g~+$%d", kaznarob);
						GameTextForPlayer(i, stringer, 5000, 1);
						SCM(i,0xFF182DFF,"Вы были объявлены в розыск. Причина: Взлом банковского сейфа. Уровень: 6");
						SetPlayerWantedLevel(i, 6);
						format(stringer, 128, "взламывает банковский сейф на %d $.",kaznarob);
						MeAction(i,stringer, 10.0);
						ClearAnimations(i, 1);
						robbanks = false;
						format(stringer,144,"{"#cWHITE"}Казна штата: {ffff00}%i$\n{"#cWHITE"}Налог государства: {ffff00}%i$", kazna, nalog);
						UpdateDynamic3DTextLabelText(frac_text[7], -1, stringer);
						AC_TogglePlayerControllable(i, true);
					}
					else
					{
						GameTextForPlayer(i, "~g~~h~HACKED...", 1500, 6);
						new kaznarob = kazna / 20;
						robtime = 10800;
						FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
						p_info[i][pWanted]+=4;
						TransferMoney(i,p_info[i][pCash]+kaznarob,kaznarob,"ограбил казну");
						p_info[i][pCash] += kaznarob;
						UpdateMoney(i);
						kazna -= kaznarob;
						format(stringer, 32, "~g~+$%d",kaznarob);
						GameTextForPlayer(i, stringer, 5000, 1);
						format(stringer, 128, "{9ACD32}Срочные новости: Незнакомец вытащил из банковского сейфа %d $!",kaznarob);
						SendClientMessageToAll(COLOR_LIGHTRED, stringer);
						SCM(i,0xFF182DFF,"Вы были объявлены в розыск. Причина: Взлом банковского сейфа. Уровень: 6");
						SetPlayerWantedLevel(i, 6);
						format(stringer, 128, "взламывает банковский сейф на %s $.", kaznarob);
						MeAction(i,stringer, 10.0);
						ClearAnimations(i, 1);
						robbanks = false;
						AC_TogglePlayerControllable(i, true);
						format(stringer,144,"{"#cWHITE"}Казна штата: {ffff00}%i$\n{"#cWHITE"}Налог государства: {ffff00}%i$", kazna, nalog);
						UpdateDynamic3DTextLabelText(frac_text[7], -1, stringer);
					}
				}
			default:
				{
					if(lighttime<=unix)
					{
						GameTextForPlayer(i, "~r~~h~FAILED...", 1500, 6);
						FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
						SCM(i,CWHITE,"Попробуйте еще раз. Электричество банка отключено, спешите!");
						ClearAnimations(i, 1);
						robbanks = false;
						AC_TogglePlayerControllable(i, true);
						MeAction(i,"неудачно взламывает банковский сейф", 10.0);
					}
					else
					{
						GameTextForPlayer(i, "~r~~h~FAILED...", 1500, 6);
						FIXES_ApplyAnimation(i,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,0,0);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
						SCM(i,CWHITE,"Попробуйте еще раз.");
						p_info[i][pWanted]=6;
						SCM(i,0xFF182DFF,"Вы были объявлены в розыск. Причина: Взлом банковского сейфа. Уровень: 6");
						SetPlayerWantedLevel(i, 6);
						AC_TogglePlayerControllable(i, true);
						MeAction(i,"неудачно взламывает банковский сейф", 10.0);
						ClearAnimations(i, 1);
						robbanks = false;
					}
				}
			}
		}
	}
	if(GetPVarInt(i,"clearanim"))
	{
		SetPVarInt(i,"clearanim",GetPVarInt(i,"clearanim")-1);
		if(GetPVarInt(i,"clearanim")==1)
		{
			FIXES_ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
			DeletePVar(i,"clearanim");
		}
	}
	if(p_info[i][pJailTime] > 0 && p_info[i][pMestoJail] != 6)
	{
		p_info[i][pJailTime] --;
		if(p_info[i][pJailTime] <= 1)
		{
			p_info[i][pJailTime] = 0;
			UpdatePlayerData(i,"pJailTime",p_info[i][pJailTime]);
			p_info[i][pMestoJail] = 0;
			UpdatePlayerData(i,"pMestoJail",0);
			SCM(i, CISPOLZUY,"Вы заплатили свой долг обществу, теперь вы свободны!");
			p_info[i][pWanted] = 0;
			UpdatePlayerData(i,"pWanted",p_info[i][pWanted]);
			SetPlayerWantedLevel(i, p_info[i][pWanted]);
			SetPlayerVirtualWorld(i, 0);
			GameTextForPlayer(i, "~g~Freedom", 5000, 1);
			SetPlayerColorAc(i,p_info[i][tMember]);

			SpawnPlayer(i);
		}
	}
	if(GetPVarInt(i,"Tazer"))
	{
		SetPVarInt(i,"Tazer",GetPVarInt(i,"Tazer")-1);
		if(GetPVarInt(i,"Tazer") == 1)
			DeletePVar(i,"Tazer");
	}
	if(GetPVarInt(i,"TieTime"))
	{
		SetPVarInt(i,"TieTime",GetPVarInt(i,"TieTime")-1);
		if(GetPVarInt(i,"TieTime")== 1)
		{
			DeletePVar(i,"gag");
			DeletePVar(i,"TieTime");
			SCM(i, CWHITE, "Кляп стал мокрым и выпал, вы снова можете говорить!");
		}
	}
	if(GetPVarInt(i,"PlayerCuffed") == 1)
	{
		if(!GetPVarInt(i,"PlayerCuffedTime"))
		{
			AC_TogglePlayerControllable(i, true);
			DeletePVar(i,"PlayerCuffed");
			DeletePVar(i,"PlayerCuffedTime");
		}
		else if(GetPVarInt(i,"PlayerCuffedTime"))
		{
			SetPVarInt(i,"PlayerCuffedTime",GetPVarInt(i,"PlayerCuffedTime")-1);
			if(GetPVarInt(i,"PlayerCuffedTime")==1)
			{
				DeletePVar(i,"PlayerCuffedTime");
			}
		}
	}
	return 1;
}




stock Second_Timer()
{
	for(new g = 0 ; g < 100; g++)
	{
		if(gTempBot[g] == -1) continue;
		if (gTempBotTime[g]>0)
		{
			gTempBotTime[g]--;
			if(gTempBotTime[g]<=0)
			{
				DestroyDynamic3DTextLabel(gTempBotText[g]);
				DestroyActor(gTempBot[g]);
				gTempBot[g] = -1;
			}
		}
	}
	/*for(new B = 0; B < MAX_BA_PLACES; B++)
	{
		if(!IsABallInPlace(B))
		{
			ReturnBallToPlace(B, 1.5);
		}
	}*/

	//new stringdate[100];
	//getdate(year, month, day);
	//gettime(hours, minutes, seconds);
	//format(stringdate, 100, "%d-%s%d-%s%d %02d:%02d:%02d", tmpday, ((tmpmonth < 10) ? ("0") : ("")), tmpmonth, (tmpyear < 10) ? ("0") : (""), tmpyear, tmphour, tmpminute, tmpsecond);
	//TextDrawSetString(Datum, stringdate);

   /* Time_Football--;
	if(Time_Football==2700){
		new
			string_score[128];
		format(string_score, 128, "Счёт: {7FB151}%d:%d", Count_Score_Football[0],Count_Score_Football[1]);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(Select_Football_Team[i] != -1 && Select_Football_Position[i] != -1)
			{
				new tf = Select_Football_Team[i];
				new ts = Select_Football_Position[i];
				SetPVarInt(i, "Dell_Active_Football", unix);
				AC_SetPlayerPos(i,Pos_Position_Football[tf][ts][0],Pos_Position_Football[tf][ts][1],Pos_Position_Football[tf][ts][2]);
				SetPlayerFacingAngle(i, Pos_Position_Football[tf][ts][3]);
				FreezePlayerForTime(i,1000);
				SendClientMessage(i,0xdad2bfFF,"Первый тайм окончен!");
				SendClientMessage(i,0xdad2bfFF,string_score);
			}
		}
		RecreateBall();
		TextDrawSetString(TD_Time_Football, "45:00");
	}
	else if(Time_Football<=0){
		new
			string_score[128],
			string_victory[128];
		format(string_score, 128, "Счёт: {7FB151}%d:%d", Count_Score_Football[0],Count_Score_Football[1]);
		if(Count_Score_Football[0] > Count_Score_Football[1])
		{
			format(string_victory, 128, "Победила команда: {7FB151}%s", Name_Football_Command[0]);
		}
		else
		{
			format(string_victory, 128, "Победила команда: {7FB151}%s", Name_Football_Command[1]);
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(Select_Football_Team[i] != -1 && Select_Football_Position[i] != -1)
			{
				new tf = Select_Football_Team[i];
				new ts = Select_Football_Position[i];
				SetPVarInt(i, "Dell_Active_Football", unix);
				AC_SetPlayerPos(i,Pos_Position_Football[tf][ts][0],Pos_Position_Football[tf][ts][1],Pos_Position_Football[tf][ts][2]);
				SetPlayerFacingAngle(i, Pos_Position_Football[tf][ts][3]);
				FreezePlayerForTime(i,1000);
				SendClientMessage(i,0xdad2bfFF,"Матч окончен!");
				SendClientMessage(i,0xdad2bfFF,string_score);
				SendClientMessage(i,0xdad2bfFF,string_victory);
			}
			//Name_Football_Command
		}
		RecreateBall();
		Time_Football=5400;
		TextDrawSetString(TD_Time_Football, "90:00");
		Count_Score_Football[0] = 0;
		Count_Score_Football[1] = 0;
		new str_football_count[100];
		format(str_football_count,100,"{33AA33}%d      {FF0000}%d", Count_Score_Football[0],Count_Score_Football[1]);
		SetDynamicObjectMaterialText(object_table_football[1], 0, str_football_count, 120, "Ariel", 100, 0, -65536, 1894835852, 1);
	}
	else
	{
		format(stringdate, 100, "%02d:%02d", Time_Football / 60, Time_Football - (60 * floatround(Time_Football / 60)));
		TextDrawSetString(TD_Time_Football, stringdate);
	}
*/
	if(tmpsecond == 00)
	{
		ic_time_hours = tmphour;
		ic_time_minutes = tmphour;

        foreach(player)
		{
			SetPlayerTime(player, ic_time_hours, ic_time_minutes);
		}
	}
	for(new i;i<MAX_ACTORSS;i++)
	{
		if(actortime[i]>0)
		{
			actortime[i]--;
			if(actortime[i]==0)
			{
				foreach(x)
				{
					if ( tActor[x] != PlayerText3D:-1)
					{
						DeletePlayer3DTextLabel(x, tActor[x]);
						tActor[x] = PlayerText3D:-1;
					}
				}
				if(i >= actor[0] && i <= actor[15]) ApplyActorAnimation(i,"PED","SEAT_down",4.1,0,0,0,1,1);
				else ApplyActorAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
			}
		}
	}

	//printf ( "[TIMER] BizWarTimer" ) ;

	//printf ( "[TIMER] UpdateRace" ) ;
	UpdateRace();
	//printf ( "[TIMER] PaintBallCheck" ) ;
	PaintBallCheck();
	if ( ZombieTime != 121 )
	{
		ZombieTime--;
		if ( ZombieTime == 0 && ZombieCountHumans >= 1 && ZombieCountZombie >= 2)
		{
			SendClientMessageToAll ( -1, "[Люди-vs-Зомби] {"#cLIGHTBLUE"}Мероприятие начато.");
			foreach(t)
			{
				if(GetPVarInt(t,"set_zombie"))
				{
					if(GetPVarInt(t,"set_zombie")==1)SendClientMessage(t,-1,"[Люди-vs-Зомби] {"#cLIGHTBLUE"}Ваша задача захватить флаг!");
					else if(GetPVarInt(t,"set_zombie")==2)SendClientMessage(t,-1,"[Люди-vs-Зомби] {"#cLIGHTBLUE"}Ваша задача убивать зомби, чтобы они не смогли захватить флаг!");
					SendClientMessage(t,-1,"[Люди-vs-Зомби] {"#cLIGHTBLUE"}Для выхода используйте: {"#cYELLOW"}/zombie_exit");
					SpawnPlayer(t);
				}
			}
			//START
		}
		else if ( ZombieTime == 0)
		{
			foreach(t)
			{
				if(GetPVarInt(t,"set_zombie")) DeletePVar(t,"set_zombie");
			}
			SendClientMessageToAll ( -1, "[Люди-vs-Зомби] {"#cLIGHTBLUE"}Мероприятие не начато. Причина: Недостаточное количество участников!");
			ZombieTime = 121;
		}
		else if ( ZombieTime <= -300 )
		{
			foreach(t)
			{
				if(GetPVarInt(t,"set_zombie")) EndZombie(t,false);
			}
			SendClientMessageToAll ( -1, "[Люди-vs-Зомби] {"#cLIGHTBLUE"}Мероприятие окончено. Победили люди!");
			ZombieTime = 121;
			//END
		}
	}

	if(SELECT_SERVER == 1)
	{
		if(LapTime <= 0)	StartLab();
		else				LapTime --;
	}
	//printf ( "[TIMER] PlayerTimer" ) ;
	foreach(i) PlayerTimer(i);

	if(robtime)
		robtime--;

	for(new i=0; i<2; i++)
	{
		if(bot_surf_time[i]>0)
		{
			bot_surf_time[i]--;
			if(bot_surf_time[i]==0)
			{
				ApplyActorAnimation(bot_surf[i], "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
				Update3DTextLabelText(bot_surf_text[i], 0xAFAFAFFF, "");
			}
		}
	}

	foreach(playerid)
	{
		if(GetPVarInt(playerid, "GYM_Bike") == 1)
		{
			if(GetPVarInt(playerid, "GYM_Simulator_Time") <= unix)
			{
				SetPVarInt(playerid, "GYM_Bike", 0);
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
				if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[4] = false;
				else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[8] = false;
				else SimulatorUse[0] = false;
			}
		}
		if(GetPVarInt(playerid, "GYM_Thread") == 1)
		{
			if(GetPVarInt(playerid, "GYM_Simulator_Time") <= unix)
			{
				SetPVarInt(playerid, "GYM_Thread", 0);
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff", 4, 0, 0, 0, 0, 0);
				if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[5] = false;
				else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[9] = false;
				else SimulatorUse[1] = false;
			}
		}
		if(GetPVarInt(playerid, "GYM_Bar") == 1)
		{
			if(GetPVarInt(playerid, "GYM_Simulator_Time") <= unix)
			{
				SetPVarInt(playerid, "GYM_Bar", 0);
				FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 4, 0, 0, 0, 0, 0);
				RemovePlayerAttachedObject(playerid, 2);
				if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[6] = false;
				else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[10] = false;
				else SimulatorUse[2] = false;
			}
		}
		if(GetPVarInt(playerid, "GYM_Dumbbells") == 1)
		{
			if(GetPVarInt(playerid, "GYM_Simulator_Time") <= unix)
			{
				SetPVarInt(playerid, "GYM_Dumbbells", 0);
				FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
				RemovePlayerAttachedObject(playerid, 2);
				if(GetPlayerVirtualWorld(playerid) == 32) SimulatorUse[7] = false;
				else if(GetPlayerVirtualWorld(playerid) == 33) SimulatorUse[11] = false;
				else SimulatorUse[3] = false;
			}
		}
		new anim = GetPlayerAnimationIndex(playerid);
		if(anim != 0)
		{
			if(UsingShield[playerid])
			{
				if(anim != 1274 && anim != 28 && !ResetShield[playerid])
				{
					SetPlayerAttachedObjectEx(playerid, 6, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
					UsingShield[playerid] = false;
					ClearAnims(playerid);
					HideSHBarForPlayer(playerid);
				}
				if(ResetShield[playerid] > 0) ResetShield[playerid] --;
			}
		}
		if(GetPVarInt(playerid, "FiveSecound") > 0) SetPVarInt(playerid, "FiveSecound", GetPVarInt(playerid, "FiveSecound") - 1);
	}

	if(gAdvertTime > 0) gAdvertTime--;
	if(gVipTime > 0) gVipTime--;
	CheckHour();
	AdvertTimer();
	VipTimer();
	new text[256];
	strcat(text,"{"#cINFO"}  Очередь на экзамен \nпо вождению:{"#cWHITE"}");
	for(new i;i<20;i++)
	{
		if(gDSTurn[i] != INVALID_PLAYER_ID && !IsPlayerConnected(gDSTurn[i]) || (gDSTurn[i] != INVALID_PLAYER_ID &&!GetPVarInt(gDSTurn[i], "pWaitingExam"))) gDSTurn[i] = INVALID_PLAYER_ID;
		if(i != 19 && gDSTurn[i] == INVALID_PLAYER_ID && gDSTurn[i+1] != INVALID_PLAYER_ID)
		{
			gDSTurn[i] = gDSTurn[i+1];
			gDSTurn[i+1] = INVALID_PLAYER_ID;
			if(!i)
			{
				format(stringer,144,"[F] %s ожидает вызова на практический экзамен по вождению",NamePlayer[gDSTurn[0]]);
				SendFamilyMessage(11, CINFO, stringer);
			}
		}
		if(gDSTurn[i] != INVALID_PLAYER_ID) format(text,255,"%s\n%d. %s",text,i+1,NamePlayer[gDSTurn[i]]);
	}
	UpdateDynamic3DTextLabelText(gDSTurnText, CWHITE, text);

	new text1[256];
	strcat(text1,"{"#cINFO"}  Очередь на получение лицензии:{"#cWHITE"}");
	for(new i;i<20;i++)
	{
		if(gAPTurn[i] != INVALID_PLAYER_ID && !IsPlayerConnected(gAPTurn[i]) || (gAPTurn[i] != INVALID_PLAYER_ID &&!GetPVarInt(gAPTurn[i], "pWaitingExam1"))) gAPTurn[i] = INVALID_PLAYER_ID;
		if(i != 19 && gAPTurn[i] == INVALID_PLAYER_ID && gAPTurn[i+1] != INVALID_PLAYER_ID)
		{
			gAPTurn[i] = gAPTurn[i+1];
			gAPTurn[i+1] = INVALID_PLAYER_ID;
			if(!i)
			{
				format(stringer,144,"[R] %s подал заявление на получение лицензии на бизнес",NamePlayer[gAPTurn[0]]);
				SendRadioMessage(7, 0x93FF4CFF, stringer);
				SendRadioMessage(26, 0x93FF4CFF, stringer);
			}
		}
		if(gAPTurn[i] != INVALID_PLAYER_ID) format(text1, 255,"%s\n%d. %s",text1, i+1, NamePlayer[gAPTurn[i]]);
	}
	UpdateDynamic3DTextLabelText(gAPTurnText, CWHITE, text1);

	new text2[256];
	strcat(text2,"{"#cINFO"}  Очередь на получение лицензии \nна оружие:{"#cWHITE"}");
	stringer[0] = EOS;
	for(new i;i<20;i++)
	{
		if(gPDTurn[i] != INVALID_PLAYER_ID && !IsPlayerConnected(gPDTurn[i]) || (gPDTurn[i] != INVALID_PLAYER_ID &&!GetPVarInt(gPDTurn[i], "pWaitingExam2"))) gPDTurn[i] = INVALID_PLAYER_ID;
		if(i != 19 && gPDTurn[i] == INVALID_PLAYER_ID && gPDTurn[i+1] != INVALID_PLAYER_ID)
		{
			gPDTurn[i] = gPDTurn[i+1];
			gPDTurn[i+1] = INVALID_PLAYER_ID;
			if(!i)
			{
				format(stringer,144,"[R] %s подал заявление на получение лицензии на оружие",NamePlayer[gPDTurn[0]]);
				SendRadioMessage(1, 0x93FF4CFF, stringer);
			}
		}
		if(gPDTurn[i] != INVALID_PLAYER_ID) format(text2, 255,"%s\n%d. %s",text2, i+1, NamePlayer[gPDTurn[i]]);
	}
	UpdateDynamic3DTextLabelText(gPDTurnText, CWHITE, text2);
	if ( TimeLowRide != 0 )
	{
		TimeLowRide --;
		if ( TimeLowRide == 90 )
		{
			for ( new i = 2; i <= 11; i++)
			{
				if(-1 != lowride_list_player[i - 2])
				{
					TextDrawShowForPlayer(lowride_list_player[i - 2], lowrideRing);
					LoadTDLowride(lowride_list_player[i - 2]);
					for(new x = 0; x < 3; x++)
						PlayerTextDrawShow(lowride_list_player[i - 2], lowrideArrow[lowride_list_player[i - 2]][x]);
				}
			}
		}
		else if ( TimeLowRide == 1 )
		{
			for(new C = 0; C < 10; C++)
			{
				LowRideWinners[C][0] = EOS;
				lowride_list_score_desc[C] = lowride_list_score[C];
			}
			bubbleSort(lowride_list_score_desc);
			for(new D = 0; D < 10; D++)
			{
				if(-1 == lowride_list_player[D]) continue;
				for(new F = 0; F < 10; F++)
				{
					if(lowride_list_score[D] == lowride_list_score_desc[F])
					{
						strmid(LowRideWinners[F],NamePlayer[lowride_list_player[D]],0,strlen(NamePlayer[lowride_list_player[D]]),24);
						break;
					}
				}
			}
			for ( new i = 2; i <= 11; i++)
			{
				if(-1 != lowride_list_player[i - 2])
				{
					if(lowride_list_score[i - 2] == lowride_list_score_desc[0])
					{
						LowRideWinnersSum[0] = floatround(LowRideStavka * 0.5);
						TransferMoney(lowride_list_player[i - 2],p_info[lowride_list_player[i - 2]][pCash]+LowRideWinnersSum[0],LowRideWinnersSum[0],"ограбил казну");
						p_info[lowride_list_player[i - 2]][pCash] -= LowRideWinnersSum[0];
						UpdateMoney(lowride_list_player[i - 2]);
						SendClientMessage(lowride_list_player[i - 2], -1, "Поздравляем, вы заняли 1 место!");
					}
					else if(lowride_list_score[i - 2] == lowride_list_score_desc[1])
					{
						LowRideWinnersSum[1] = floatround(LowRideStavka * 0.3);
						TransferMoney(lowride_list_player[i - 2],p_info[lowride_list_player[i - 2]][pCash]+LowRideWinnersSum[1],LowRideWinnersSum[1],"ограбил казну");
						p_info[lowride_list_player[i - 2]][pCash] -= LowRideWinnersSum[1];
						UpdateMoney(lowride_list_player[i - 2]);
						SendClientMessage(lowride_list_player[i - 2], -1, "Поздравляем, вы заняли 2 место!");
					}
					else if(lowride_list_score[i - 2] == lowride_list_score_desc[2])
					{
						LowRideWinnersSum[2] = floatround(LowRideStavka * 0.2);
						TransferMoney(lowride_list_player[i - 2],p_info[lowride_list_player[i - 2]][pCash]+LowRideWinnersSum[2],LowRideWinnersSum[2],"ограбил казну");
						p_info[lowride_list_player[i - 2]][pCash] -= LowRideWinnersSum[2];
						UpdateMoney(lowride_list_player[i - 2]);
						SendClientMessage(lowride_list_player[i - 2], -1, "Поздравляем, вы заняли 3 место!");
					}

					new j = GetPVarInt(lowride_list_player[i - 2], "lowrider_area");
					AC_SetPlayerPos(lowride_list_player[i - 2],  lowriders_pos_start[j][0]+ (1.0 * floatsin(-lowriders_pos_start[j][3], degrees)),lowriders_pos_start[j][1]+ (1.0 * floatcos(-lowriders_pos_start[j][3], degrees)),lowriders_pos_start[j][2]);
					SetPlayerFacingAngle(lowride_list_player[i - 2], lowriders_pos_start[j][3]);
					if ( cLowrideCar [ lowride_list_player[i - 2] ] != 0  )
					{
						DestroyVehicleOP ( cLowrideCar [ lowride_list_player[i - 2] ] ) ;
						cLowrideCar [ lowride_list_player[i - 2] ] = 0;
					}
					SelectLowride[lowride_list_player[i - 2]][0] = -1;
					SelectLowride[lowride_list_player[i - 2]][1] = 0;
					SelectLowride[lowride_list_player[i - 2]][2] = 0;
					SelectLowride[lowride_list_player[i - 2]][3] = 0;
					SelectLowride[lowride_list_player[i - 2]][4] = 0;
					for(new x = 0; x < 12; x++) TextDrawHideForPlayer(lowride_list_player[i - 2], lowride_list_update[x]);
					for(new x = 0; x < 3; x++)
					{
						if(lowrideArrow[lowride_list_player[i - 2]][x] != PlayerText:-1)
						{
							PlayerTextDrawDestroy(lowride_list_player[i - 2], lowrideArrow[lowride_list_player[i - 2]][x]);
							lowrideArrow[lowride_list_player[i - 2]][x] = PlayerText:-1;
						}
					}
					TextDrawHideForPlayer(lowride_list_player[i - 2], lowrideRing);
					SendClientMessage ( lowride_list_player[i - 2] , -1, "Лоурайдинг окончен. Просмотр победителей: /lowlist" ) ;
					lowride_list_player[i - 2] = -1;
					lowride_list_score[i - 2] = 0;
					format(stringer, 64, "~b~~h~~h~~h~%d. ~w~-                   ~b~~h~~h~~h~0", i - 1 );
					TextDrawSetString(lowride_list_update[i], stringer);
				}
			}
			LowRideStavka=0;
		}
		else
		{
			for ( new i = 2; i <= 11; i++)
			{
				if(-1 != lowride_list_player[i - 2])
				{
					new playerid = lowride_list_player[i - 2];
					new c = cLowrideCar [ playerid ];
					if ( IsValidVehicle ( c ) && c != 0)
					{
						if ( GetPlayerVehicleID(playerid) != c )
						{
							DestroyVehicleOP ( c ) ;
							cLowrideCar [ playerid ] = 0;
							SelectLowride[playerid][0] = -1;
							SelectLowride[playerid][1] = 0;
							SelectLowride[playerid][2] = 0;
							SelectLowride[playerid][3] = 0;
							SelectLowride[playerid][4] = 0;
							for(new x = 0; x < 12; x++) TextDrawHideForPlayer(playerid, lowride_list_update[x]);
							for(new x = 0; x < 3; x++)
							{
								if(lowrideArrow[playerid][x] != PlayerText:-1)
								{
									PlayerTextDrawDestroy(playerid, lowrideArrow[playerid][x]);
									lowrideArrow[playerid][x] = PlayerText:-1;
								}
							}
							TextDrawHideForPlayer(playerid, lowrideRing);
							lowride_list_player[i - 2] = -1;
							lowride_list_score[i - 2] = 0;
							if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
							{
								new j = GetPVarInt(playerid, "lowrider_area");
								AC_SetPlayerPos(playerid,  lowriders_pos_start[j][0]+ (1.0 * floatsin(-lowriders_pos_start[j][3], degrees)),lowriders_pos_start[j][1]+ (1.0 * floatcos(-lowriders_pos_start[j][3], degrees)),lowriders_pos_start[j][2]);
								SetPlayerFacingAngle(playerid, lowriders_pos_start[j][3]);
							}
							continue;
						}
					}
					format(stringer, 64, "~b~~h~~h~~h~%d. ~w~%s  ~b~~h~~h~~h~%d", i - 1,  NamePlayer[lowride_list_player[i - 2]], lowride_list_score[i - 2]);
					TextDrawSetString(lowride_list_update[i], stringer);

					if ( SelectLowride[lowride_list_player[i - 2]][0] != -1 && TimeLowRide < 90)
					{
						PlayerTextDrawSetString(lowride_list_player[i - 2], lowrideArrow[lowride_list_player[i - 2]][2], lowrideArrows[SelectLowride[lowride_list_player[i - 2]][1]][lowrideAdataName]);
						SelectLowride[lowride_list_player[i - 2]][1] = SelectLowride[lowride_list_player[i - 2]][0];
						PlayerTextDrawSetString(lowride_list_player[i - 2], lowrideArrow[lowride_list_player[i - 2]][1], lowrideArrows[SelectLowride[lowride_list_player[i - 2]][1]][lowrideAdataName]);
						SelectLowride[lowride_list_player[i - 2]][0] = random(8);
						PlayerTextDrawSetString(lowride_list_player[i - 2], lowrideArrow[lowride_list_player[i - 2]][0], lowrideArrows[SelectLowride[lowride_list_player[i - 2]][0]][lowrideAdataName]);

						if ( SelectLowride[lowride_list_player[i - 2]][2] != 1 )
						{
							FailLowride(lowride_list_player[i - 2]);
						}
						SelectLowride[lowride_list_player[i - 2]][2] = 0;
					}
				}
				else
				{
					format(stringer, 64, "~b~~h~~h~~h~%d. ~w~-                   ~b~~h~~h~~h~0", i - 1 );
					TextDrawSetString(lowride_list_update[i], stringer);
				}
			}
		}
		format(stringer, 64, "TIME: %s", date("%ii:%ss",TimeLowRide));
		TextDrawSetString(lowride_list_update[1], stringer);
	}
	// АРЕНДОВАННЫЕ МАШИНЫ
	for(new v = 0; v < MAX_RENT_VEHICLES; v++)
	{
		if(INVALID_PLAYER_ID != V_RENT[v][V_RENT_PLAYER])
		{
			if(!IsPlayerConnected(V_RENT[v][V_RENT_PLAYER]))
			{
				V_RENT[v][V_RENT_PLAYER] = INVALID_PLAYER_ID;
				UpdateTextRent(v);
			}
			else if(GetPlayerInterior(V_RENT[v][V_RENT_PLAYER]) == 0)
			{
			    if(floatround(
					GetVehicleDistanceFromPoint(V_RENT[v][V_RENT_VEHICLE],
					p_info[V_RENT[v][V_RENT_PLAYER]][pX],
					p_info[V_RENT[v][V_RENT_PLAYER]][pY],
					p_info[V_RENT[v][V_RENT_PLAYER]][pZ]))>1500 && p_info[V_RENT[v][V_RENT_PLAYER]][pAbletoTP] <= unix)
			    {
			            SendClientMessage(V_RENT[v][V_RENT_PLAYER],CORANGE,"{"#cORANGE"}» {"#cWHITE"}Ваша аренда автомобиля окончена , причина: Вы слишком далеко от автомобиля.");
						SetVehicleToRespawn(V_RENT[v][V_RENT_VEHICLE]);
						V_RENT[v][V_RENT_PLAYER] = INVALID_PLAYER_ID;
						UpdateTextRent(v);
			    }
			}
		}
	}
	return 1;
}

stock ShowStats(playerid,targetid)
{
	if(!IsPlayerConnected(targetid)) return 1;
	new btext[32]="Отсутствует",year,month,day,hours,minutes,seconds;
	new ijb=p_info[targetid][pJob];
	new hklass;
	if(p_info[targetid][pHouse] > 0) hklass = gHouses[ p_info[targetid][pHouse] ][hKlass];

	if(p_info[targetid][pPbiskey] > 0)
	{
		strmid(btext,Business[p_info[targetid][pPbiskey]-1][BizName],0,strlen(Business[p_info[targetid][pPbiskey]-1][BizName]),31);
	}


	/*new
        online_second_today = 0,
	    online_minute_today = 0,
	    online_hour_today = 0,

		online_second_now = 0,
	    online_minute_now = 0,
	    online_hour_now = 0,

		online_second_yesterday = 0,
	    online_minute_yesterday = 0,
	    online_hour_yesterday = 0,

   		online_second_before = 0,
	    online_minute_before = 0,
	    online_hour_before = 0,

	    online_second_today_afk = 0,
	    online_minute_today_afk = 0,
	    online_hour_today_afk = 0,

   		online_second_now_afk = 0,
	    online_minute_now_afk = 0,
	    online_hour_now_afk = 0,

		online_second_yesterday_afk = 0,
	    online_minute_yesterday_afk = 0,
	    online_hour_yesterday_afk = 0,

   		online_second_before_afk = 0,
	    online_minute_before_afk = 0,
	    online_hour_before_afk = 0;*/


	new online_hour_now = floatround(p_info[targetid][pTime]/3600),online_minute_now = floatround(p_info[targetid][pTime]/60),
		online_hour_now_afk = floatround(p_info[targetid][pTimeAFK]/3600),online_minute_now_afk = floatround(p_info[targetid][pTimeAFK]/60),
		
		online_hour_today = floatround((online_player[targetid][0] + p_info[targetid][pTime])/3600),
		online_minute_today = floatround((online_player[targetid][0] + p_info[targetid][pTime])/60),

  		online_hour_today_afk = floatround((online_player[targetid][0] + p_info[targetid][pTimeAFK])/3600),
		online_minute_today_afk = floatround((online_player[targetid][0] + p_info[targetid][pTimeAFK])/60),
		
  		online_hour_yesterday = floatround((online_player[targetid][1])/3600),
		online_minute_yesterday = floatround((online_player[targetid][1])/60),

  		online_hour_yesterday_afk = floatround((online_player[targetid][1])/3600),
		online_minute_yesterday_afk = floatround((online_player[targetid][1])/60);

	// timestamp_to_date(p_info[targetid][pTime], online_hour_now, online_hour_now, online_hour_now, online_hour_now, online_minute_now, online_second_now);
    // timestamp_to_date(p_info[targetid][pTimeAFK], online_hour_now_afk, online_hour_now_afk, online_hour_now_afk, online_hour_now_afk, online_minute_now_afk, online_second_now_afk);
	//
   // timestamp_to_date(online_player[targetid][0] + p_info[targetid][pTime], online_hour_today, online_hour_today, online_hour_today, online_hour_today, online_minute_today, online_second_today);
   // timestamp_to_date(online_player_afk[targetid][0] + p_info[targetid][pTimeAFK], online_hour_today_afk, online_hour_today_afk, online_hour_today_afk, online_hour_today_afk, online_minute_today_afk, online_second_today_afk);
    //
   // timestamp_to_date(online_player[targetid][1], online_hour_yesterday, online_hour_yesterday, online_hour_yesterday, online_hour_yesterday, online_minute_yesterday, online_second_yesterday);
//	timestamp_to_date(online_player_afk[targetid][1], online_hour_yesterday_afk, online_hour_yesterday_afk, online_hour_yesterday_afk, online_hour_yesterday_afk, online_minute_yesterday_afk, online_second_yesterday_afk);
    //
    // timestamp_to_date(online_player[targetid][2], online_hour_before, online_hour_before, online_hour_before, online_hour_before, online_minute_before, online_second_before);
    // timestamp_to_date(online_player_afk[targetid][2], online_hour_before_afk, online_hour_before_afk, online_hour_before_afk, online_hour_before_afk, online_minute_before_afk, online_second_before_afk);
	//
    /*if ( online_player[targetid][0] < 3600 ) online_hour_today--;
    if ( online_player_afk[targetid][0] < 3600 ) online_hour_today_afk--;
    if ( p_info[targetid][pTime] < 3600 ) online_hour_now--;
    if ( p_info[targetid][pTimeAFK] < 3600 ) online_hour_now_afk--;
    if ( online_player[targetid][1] < 3600 ) online_hour_yesterday--;
    if ( online_player_afk[targetid][1] < 3600 ) online_hour_yesterday_afk--;
    if ( online_player[targetid][2] < 3600 ) online_hour_before--;
	if ( online_player_afk[targetid][2] < 3600 ) online_hour_before_afk--;*/

	//
	new P_Disease[25];
	new P_Disease1[25];
	new P_Disease2[25];
	if(!p_info[targetid][Disease][0]) P_Disease = "Нет";
	else format(P_Disease, 25, "%d степень", p_info[targetid][Disease][0]);
	if(!p_info[targetid][Disease][1]) P_Disease1 = "Нет";
	else format(P_Disease1, 25, "%d степень", p_info[targetid][Disease][1]);
	if(!p_info[targetid][Disease][2]) P_Disease2 = "Нет";
	else format(P_Disease2, 25, "%d - 1000", p_info[targetid][Disease][2]);
	//
	new StatsLevel[3][50];
	new status_married[64];
	if(p_info[targetid][pStats][0] <= 10) StatsLevel[0] = "{FF4500}Очень маленький{"#cORANGE"}";
	else if(p_info[targetid][pStats][0] <= 30) StatsLevel[0] = "{FF8C00}Маленький{"#cORANGE"}";
	else if(p_info[targetid][pStats][0] <= 70) StatsLevel[0] = "{008000}Нормальный{"#cORANGE"}";
	else if(p_info[targetid][pStats][0] <= 90) StatsLevel[0] = "{FF8C00}Большой{"#cORANGE"}";
	else StatsLevel[0] = "{FF4500}Очень большой{"#cORANGE"}";
	if(p_info[targetid][pStats][1] <= 10) StatsLevel[1] = "{FF4500}Очень плохая{"#cORANGE"}";
	else if(p_info[targetid][pStats][1] <= 30) StatsLevel[1] = "{FF8C00}Плохая{"#cORANGE"}";
	else if(p_info[targetid][pStats][1] <= 70) StatsLevel[1] = "{FFFF00}Нормальная{"#cORANGE"}";
	else if(p_info[targetid][pStats][1] <= 90) StatsLevel[1] = "{ADFF2F}Хорошая{"#cORANGE"}";
	else StatsLevel[1] = "{008000}Очень хорошая{"#cORANGE"}";
	if(p_info[targetid][pStats][2] <= 10) StatsLevel[2] = "{FF4500}Очень маленькая{"#cORANGE"}";
	else if(p_info[targetid][pStats][2] <= 30) StatsLevel[2] = "{FF8C00}Маленькая{"#cORANGE"}";
	else if(p_info[targetid][pStats][2] <= 70) StatsLevel[2] = "{FFFF00}Нормальная{"#cORANGE"}";
	else if(p_info[targetid][pStats][2] <= 90) StatsLevel[2] = "{ADFF2F}Большая{"#cORANGE"}";
	else StatsLevel[2] = "{008000}Очень большая{"#cORANGE"}";
	r_getdate(year, month, day);
	r_gettime(hours, minutes, seconds);
	if(strlen(p_info[targetid][pMarried])<10)
		strcat(status_married,"Отсутствует");
	else
		format(status_married,64,"Женат на %s",p_info[targetid][pMarried]);

	if(p_info[targetid][pMats]<0)p_info[targetid][pMats]=0;
	if(p_info[targetid][pPatron]<0)p_info[targetid][pPatron]=0;
	if(p_info[targetid][pDrugs]<0)p_info[targetid][pDrugs]=0;

	if(p_info[targetid][pMats]>500) p_info[targetid][pMats] = 500;
	if(p_info[targetid][pPatron]>500) p_info[targetid][pPatron] = 500;
	if(p_info[targetid][pDrugs]>200) p_info[targetid][pDrugs] = 200;

	stringer[0] = EOS;
	format(stringer, 4500, "{"#cWHITE"}Номер аккаунта:\t\t{"#cORANGE"}%d\n{"#cWHITE"}Ник:\t\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Уровень:\t\t\t{"#cORANGE"}%i\n{"#cWHITE"}До нового уровня:\t\t{"#cORANGE"}%d из %i час(ов)\n{"#cWHITE"}Проиграно часов:\t\t{"#cORANGE"}%i час(ов)\n{"#cWHITE"}Деньги:\t\t\t{"#cORANGE"}%s $\n\n",
	p_info[targetid][pID],NamePlayer[targetid],p_info[targetid][pLevel],p_info[targetid][pExp],((p_info[targetid][pLevel]+2)*2),p_info[targetid][pPayDayHad],AddCommasToInt(p_info[targetid][pCash], ","));
	//
	format(stringer, 4500, "%s{"#cWHITE"}Предупреждения:\t\t{"#cORANGE"}%i\n{"#cWHITE"}Номер телефона:\t\t{"#cORANGE"}%i\n{"#cWHITE"}Мобильный баланс:\t\t{"#cORANGE"}%i$\n{"#cWHITE"}Законопослушность:\t\t{"#cORANGE"}%i\n{"#cWHITE"}Уровень розыска:\t\t{"#cORANGE"}%i\n\n{"#cWHITE"}Сила:\t\t\t\t{"#cORANGE"}%i - 100 [%s]\n{"#cWHITE"}Выносливость:\t\t{"#cORANGE"}%i - 100 [%s]\n{"#cWHITE"}Бокс:\t\t\t\t{"#cORANGE"}%i - 1000\n{"#cWHITE"}Кунг-Фу:\t\t\t{"#cORANGE"}%i - 1000\n\n",stringer,
	p_info[targetid][pWarns],p_info[targetid][pPnumber],p_info[targetid][pMobile],p_info[targetid][pZakonp],p_info[targetid][pWanted], p_info[targetid][pStats][2], StatsLevel[2], p_info[targetid][pStats][1], StatsLevel[1], p_info[targetid][P_Style][0], p_info[targetid][P_Style][1]);
	//
	format(stringer, 4500, "%s{"#cWHITE"}ОРВИ:\t\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Гастрит:\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Наркозависимость:\t\t{"#cORANGE"}%s\n\n",stringer,
	P_Disease, P_Disease1, P_Disease2);
	//
	format(stringer, 4500, "%s{"#cWHITE"}Фракция:\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Должность:\t\t\t{"#cORANGE"}%s (%d)\n{"#cWHITE"}Работа:\t\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Металл:\t\t\t{"#cORANGE"}%i / 500 кг.\n{"#cWHITE"}Патроны:\t\t\t{"#cORANGE"}%i / 500 шт.\n{"#cWHITE"}Наркотики:\t\t\t{"#cORANGE"}%i / 200 гр.\n\n{"#cWHITE"}Жильё:\t\t\t\t{"#cORANGE"}%s (%d)\n{"#cWHITE"}Номер в отеле:\t\t{"#cORANGE"}%d\n{"#cWHITE"}Бизнес:\t\t\t{"#cORANGE"}%s (%d)\n{"#cWHITE"}Машина #1:\t\t\t{"#cORANGE"}%s\n",stringer,
	f_info[p_info[targetid][tMember]][f_name],(p_info[targetid][tRank] && p_info[targetid][tMember]) ? (GetRank(p_info[targetid][tMember],p_info[targetid][tRank])) : ("Отсутсвует"),p_info[targetid][tRank], (ijb == 2) ? ("Механик") : (ijb == 8) ? ("Водитель автобуса") : (ijb == 4) ? ("Таксист") : (ijb == 5) ? ("Развозчик продуктов") : (ijb == 13) ? ("Автоугонщик") : (ijb == 14) ? ("Автоугонщик") : ("Безработный"),
	p_info[targetid][pMats],p_info[targetid][pPatron],p_info[targetid][pDrugs],( p_info[targetid][pHouse] == 0 ) ? ("Отсутствует") : (hklass == 1) ? ("Эконом-класс") : (hklass == 2) ? ("Комфорт-класс") : (hklass == 3) ? ("Премиум-класс") : ("Элитный-класс"), p_info[targetid][pHouse] , p_info[targetid][pRoom], btext, p_info[targetid][pPbiskey],
	(caridhouse[targetid][0] > 0 && GetVehicleModel(caridhouse[targetid][0]) >= 400) ? (VehicleNames[GetVehicleModel(caridhouse[targetid][0])-400]) : ("Отсутствует"));
	//
	format(stringer, 4500, "%s{"#cWHITE"}Машина #2:\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Семейное положение:\t\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Статус:\t\t\t\t{"#cORANGE"}%s\n{"#cWHITE"}Пол:\t\t\t\t{"#cORANGE"}%s\n\n{"#cWHITE"}Выговоров:\t\t\t{"#cORANGE"}%d\n{"#cWHITE"}Положительных очков:\t{"#cORANGE"}%d\n\n{"#cWHITE"}Проиграно за сеанс:\t\t{"#cORANGE"}%d ч. %d мин.\t{"#cWHITE"}AFK: {"#cORANGE"}%d ч. %d мин.\n",stringer,
	(caridhouse[targetid][1] && GetVehicleModel(caridhouse[targetid][1]) >= 400) ? (VehicleNames[GetVehicleModel(caridhouse[targetid][1])-400]) : ("Отсутствует"),status_married,
	(p_info[targetid][pDonateRank] == 1) ? ("Bronze VIP") : (p_info[targetid][pDonateRank] == 2) ? ("Silver VIP") : (p_info[targetid][pDonateRank] == 3) ? ("Gold VIP") : (p_info[targetid][pLevel] >= 11 && p_info[targetid][pLevel] <= 16) ? ("Освоившийся") :
	(p_info[targetid][pLevel] >= 17 && p_info[targetid][pLevel] <= 25) ? ("Постоянный игрок") : (p_info[targetid][pLevel] >= 26 && p_info[targetid][pLevel] <= 30) ? ("Дед") : ("Новичек"),p_info[targetid][pSex] == 1 ? ("Мужской") : ("Женский"),(p_info[targetid][pAdmin] == 0) ? (p_info[targetid][pAvig]) : (gAdmin[targetid][6]), (p_info[targetid][pAdmin] == 0) ? (p_info[targetid][pPoint]) : (gAdmin[targetid][7]),online_hour_now, online_minute_now, online_hour_now_afk, online_minute_now_afk);

	format(stringer, 4500, "%s{"#cWHITE"}Онлайн за сегодня:\t\t{"#cORANGE"}%d ч. %d мин.\t{"#cWHITE"}AFK: {"#cORANGE"}%d ч. %d мин.\n{"#cWHITE"}Онлайн за вчера:\t\t{"#cORANGE"}%d ч. %d мин.\t{"#cWHITE"}AFK: {"#cORANGE"}%d ч. %d мин.\n",stringer,online_hour_today,online_minute_today,online_hour_today_afk,online_minute_today_afk,online_hour_yesterday, online_minute_yesterday, online_hour_yesterday_afk, online_minute_yesterday_afk);

	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Статистика",stringer,"ОК","");
	return 1;
}//

public OnGameModeExit()
{
	//TextDrawDestroy(Datum);
	new x=0;

	DestroyObject(gFerrisWheel);
	DestroyObject(gFerrisBase);

	x=0;
	while(x != NUM_FERRIS_CAGES) {
		DestroyObject(gFerrisCages[x]);
		x++;
	}
	KillTimer(TimElev22);
	for (new i = 0, j = GetPlayerPoolSize(); i <= j; i++)  if (IsPlayerConnected(i)) OnPlayerDisconnect(i, 1);
	mysql_close(connects);

	print("Gamemode ended.");
	return 1;
}
stock SaveFamily(id)
{
	mysql_query_string = "UPDATE `family` SET";
	format(mysql_query_string, 1000, "%s `FamilySetChatColor` = '%d',",mysql_query_string,  _family[id][family_chat_color]);
	format(mysql_query_string, 1000, "%s `FamilySetNationality` = '%d',",mysql_query_string,  _family[id][family_national]);
	format(mysql_query_string, 1000, "%s `FamilyVehicleData_0` = '%d,%d,%d,%.4f,%.4f,%.4f,%.4f',", mysql_query_string, _family[id][family_vehicle_model][0], _family[id][family_vehicle_v1][0], _family[id][family_vehicle_v2][0],_family[id][family_vehicle_pos_x][0],_family[id][family_vehicle_pos_y][0],_family[id][family_vehicle_pos_z][0],_family[id][family_vehicle_pos_a][0]);
	format(mysql_query_string, 1000, "%s `FamilyVehicleData_1` = '%d,%d,%d,%.4f,%.4f,%.4f,%.4f',", mysql_query_string, _family[id][family_vehicle_model][1], _family[id][family_vehicle_v1][1], _family[id][family_vehicle_v2][1],_family[id][family_vehicle_pos_x][1],_family[id][family_vehicle_pos_y][1],_family[id][family_vehicle_pos_z][1],_family[id][family_vehicle_pos_a][1]);
	format(mysql_query_string, 1000, "%s `FamilyVehicleData_2` = '%d,%d,%d,%.4f,%.4f,%.4f,%.4f',", mysql_query_string, _family[id][family_vehicle_model][2], _family[id][family_vehicle_v1][2], _family[id][family_vehicle_v2][2],_family[id][family_vehicle_pos_x][2],_family[id][family_vehicle_pos_y][2],_family[id][family_vehicle_pos_z][2],_family[id][family_vehicle_pos_a][2]);
	format(mysql_query_string, 1000, "%s `FamilyVehicleData_3` = '%d,%d,%d,%.4f,%.4f,%.4f,%.4f',", mysql_query_string, _family[id][family_vehicle_model][3], _family[id][family_vehicle_v1][3], _family[id][family_vehicle_v2][3],_family[id][family_vehicle_pos_x][3],_family[id][family_vehicle_pos_y][3],_family[id][family_vehicle_pos_z][3],_family[id][family_vehicle_pos_a][3]);
	format(mysql_query_string, 1000, "%s `FamilyVehicleData_4` = '%d,%d,%d,%.4f,%.4f,%.4f,%.4f'", mysql_query_string, _family[id][family_vehicle_model][4], _family[id][family_vehicle_v1][4], _family[id][family_vehicle_v2][4],_family[id][family_vehicle_pos_x][4],_family[id][family_vehicle_pos_y][4],_family[id][family_vehicle_pos_z][4],_family[id][family_vehicle_pos_a][4]);
	format(mysql_query_string, 1000, "%s WHERE `ID` = '%d'",mysql_query_string,  _family[id][family_mysql_id]);
	mysql_pquery(connects,mysql_query_string);
	//print(mysql_query_string);
	return 1;
}
stock SaveHome(houseid)
{
	new strings[100];
	mysql_query_string = "UPDATE `housetest` SET";

	acc_str_strcat(mysql_query_string, 2000, "hOwner",gHouses[houseid][houseOwner]);
	acc_int_strcat(mysql_query_string, 2000, "hLock",gHouses[houseid][hLock]);
	acc_int_strcat(mysql_query_string, 2000, "hDays",gHouses[houseid][hDays]);

	acc_str_strcat(mysql_query_string, 2000, "Arendator0",gHouseArendator[houseid][0]);
	acc_str_strcat(mysql_query_string, 2000, "Arendator1",gHouseArendator[houseid][1]);
	acc_str_strcat(mysql_query_string, 2000, "Arendator2",gHouseArendator[houseid][2]);
	acc_str_strcat(mysql_query_string, 2000, "Arendator3",gHouseArendator[houseid][3]);
	acc_str_strcat(mysql_query_string, 2000, "Arendator4",gHouseArendator[houseid][4]);

	acc_int_strcat(mysql_query_string, 2000, "RentStatus0",gHouses[houseid][RentStatus][0]);
	acc_int_strcat(mysql_query_string, 2000, "RentStatus1",gHouses[houseid][RentStatus][1]);
	acc_int_strcat(mysql_query_string, 2000, "RentStatus2",gHouses[houseid][RentStatus][2]);
	acc_int_strcat(mysql_query_string, 2000, "RentStatus3",gHouses[houseid][RentStatus][3]);
	acc_int_strcat(mysql_query_string, 2000, "RentStatus4",gHouses[houseid][RentStatus][4]);

	acc_int_strcat(mysql_query_string, 2000, "RentPlata0",gHouses[houseid][RentPlata][0]);
	acc_int_strcat(mysql_query_string, 2000, "RentPlata1",gHouses[houseid][RentPlata][1]);
	acc_int_strcat(mysql_query_string, 2000, "RentPlata2",gHouses[houseid][RentPlata][2]);
	acc_int_strcat(mysql_query_string, 2000, "RentPlata3",gHouses[houseid][RentPlata][3]);
	acc_int_strcat(mysql_query_string, 2000, "RentPlata4",gHouses[houseid][RentPlata][4]);

	acc_int_strcat(mysql_query_string, 2000, "gRentStatus",gHouses[houseid][gRentStatus]);
	acc_int_strcat(mysql_query_string, 2000, "RentAllPlata",gHouses[houseid][RentAllPlata]);

	acc_int_strcat(mysql_query_string, 2000, "safecode", gHouses[houseid][houseSafeCode]);

	strdel(mysql_query_string, strlen(mysql_query_string)-1, strlen(mysql_query_string));//Удаляем запятую
	format(strings, 100, " WHERE `hID` = '%d' LIMIT 1", gHouses[houseid][hID]);
	strcat(mysql_query_string, strings);
	mysql_pquery(connects, mysql_query_string, "", "");

//    printf ("< SaveHome > ID: %d [ %d ms ]", houseid, GetTickCount()-Tick);
//	print (stringer);

	return 1;
}

stock acc_int_strcat(query[], len, name[], number)
{
	new string[100];
	format(string, 100, "`%s` = '%d',",name, number);
	strcat(query, string, len);
	return true;
}

stock acc_str_strcat(query[], len, name[], str[])
{
	new string[100];
	format(string, 100, "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}

stock acc_float_strcat(query[], len, name[], Float:number)
{
	new string[100];
	format(string, 100, "`%s` = '%f',", name, number);
	strcat(query, string, len);
	return true;
}


stock UpdateHomeData(houseid, field[], data)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 600, "UPDATE `housetest` SET `%s` = '%d' WHERE `hID` = '%d' LIMIT 1", field, data, gHouses[houseid][hID]);
	mysql_pquery(connects, mysql_query_string, "", "");
	return 1;
}

stock CheckBarrier(playerid,barrierid)
{
	new put_error_str [ 128 ] ;

	if(barrierid == 8 || barrierid == 7 || barrierid == 27 || barrierid == 25 || barrierid == 26 || barrierid == 31)
	{
		if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != 11)
		{
			SendErr(playerid, "Доступно только для сотрудников гос. депортамента");
		}
		else
		{
			MoveObjectBarrier(barrierid);
		}

		return 1;
	}
	else if(barrierid == 4)
	{
		MoveObjectBarrier(4);
		MoveObjectBarrier(5);

		return 1;
	}
	else if(barrierid >= 21 && barrierid <= 22)
	{
		if(!IsACop(playerid)) return SendErr(playerid, "у вас нет доступа к этой двери");
		MoveObjectBarrier(barrierid);
		return 1;
	}
	else if(barrierid == 6)
	{
		if(p_info[playerid][tMember] != F_HITMAN)
		{
			format ( put_error_str , 128 , "Доступно только {afafaf}' %s '", f_info[F_HITMAN][f_name] ) ;
			SendErr(playerid, put_error_str );
		}
		else MoveObjectBarrier(6);

		return 1;
	}
	else if(barrierid == 11)
	{
		if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != F_AUTOS)
		{
			SendErr(playerid, "Доступно только для сотрудников гос. депортамента");
		}
		else
		{
			MoveObjectBarrier(11);
			MoveObjectBarrier(12);
		}
		return 1;
	}
	else if(barrierid == 32)
	{
		if(p_info[playerid][tMember] != F_SANN)
		{
			format ( put_error_str , 128 , "Доступно только {afafaf}' %s '", f_info[F_SANN][f_name] ) ;
			SendErr(playerid, put_error_str );
		}
		else
		{
			MoveObjectBarrier(32);
		}
		return 1;
	}
	else if(barrierid == 36)
	{
		if(p_info[playerid][tMember] != F_FBI)
		{
			format ( put_error_str , 128 , "Доступно только {afafaf}' %s '", f_info[F_FBI][f_name] ) ;
			SendErr(playerid, put_error_str );
		}
		else
		{
			MoveObjectBarrier(36);
		}
	}
	else if(barrierid == 33 || barrierid == 34 || barrierid == 35)
	{
		if(p_info[playerid][tMember] != F_SWAT && !IsACop(playerid))
		{
			format ( put_error_str , 128 , "Доступно только {afafaf}' %s '", f_info[F_SWAT][f_name] ) ;
			SendErr(playerid, put_error_str );
		}
		else
		{
			MoveObjectBarrier(barrierid);
		}
	}
	else if(barrierid == 37 || barrierid == 38)
	{
		if(p_info[playerid][tMember] != F_PMC)
		{
			SendErr(playerid, "Доступ закрыт");
		}
		else
		{
			MoveObjectBarrier(37);
			MoveObjectBarrier(38);
		}
	}
	else if(barrierid == 39 || barrierid == 40 || barrierid == 41)
	{
		if(p_info[playerid][tMember] != F_PMC)
		{
			SendErr(playerid, "Доступ закрыт");
		}
		else MoveObjectBarrier(barrierid);
	}
	else if(barrierid == 43 || barrierid == 44)
	{
			MoveObjectBarrier(43);
			MoveObjectBarrier(44);
	}
	else if(barrierid == 46 || barrierid == 47)
	{
			MoveObjectBarrier(46);
			MoveObjectBarrier(47);
	}
	else if(barrierid == 54 || barrierid == 55)
	{
			MoveObjectBarrier(54);
			MoveObjectBarrier(55);
	}
	else if(barrierid == 50 || barrierid == 51)
	{
			MoveObjectBarrier(50);
			MoveObjectBarrier(51);
	}
	else if(barrierid == 57 || barrierid == 58)
	{
			MoveObjectBarrier(57);
			MoveObjectBarrier(58);
	}
	else MoveObjectBarrier(barrierid);
	return 1;
}



IsObjectBarrier(playerid)
{
	new max_rear_object_id = -1;
	new max_rear_object_distance = 100000;

	for(new id = 0; id < MAX_OBJECT_MOVED; id++)
	{
		if(id==24) continue;
		new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]));
		if(here_distance < max_rear_object_distance)
		{
			max_rear_object_id = id;
			max_rear_object_distance = here_distance;
		}
	}
	if(max_rear_object_distance > 8.0) max_rear_object_id = -1;
	return max_rear_object_id;
}

MoveObjectBarrier(id)
{
	if(moved_info[id][status_moved]) return 1;
	if(IsDynamicObjectMoving(moved_info[id][moved_id])) return 1;
	MoveDynamicObject(moved_info[id][moved_id],moved_pos_object[id][0],moved_pos_object[id][1],moved_pos_object[id][2]+0.04,(moved_info[id][moved_modelid] == 968) ? (0.014) : (id == 28) ? (10.0) : (1.2),moved_pos_object[id][3],moved_pos_object[id][4],moved_pos_object[id][5]);
	moved_info[id][status_moved]=true;
	return 1;
}

forward CheckObjectBarrier(id);
public CheckObjectBarrier(id)
{
	MoveDynamicObject(moved_info[id][moved_id],moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]-0.04,(moved_info[id][moved_modelid] == 968) ? (0.014) : (id == 28) ? (10.0) : (1.2),moved_info[id][movedPosRotationX],moved_info[id][movedPosRotationY],moved_info[id][movedPosRotationZ]);
	return 1;
}
CMD:chome(playerid)
{
	if(!GetPVarInt(playerid,"hrieltor1")) return 1;

	if(GetPVarInt(playerid,"flag"))
	{
		RemovePlayerMapIcon(playerid, 1);
		DeletePVar(playerid,"flag");
		SendClientMessage(playerid,COLOR_GREY,"Метка отключена");
		return 1;
	}

	new houseid = GetPVarInt(playerid,"hrieltor1");
	SetPlayerMapIcon(playerid, 1, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 19, -1, MAPICON_GLOBAL_CHECKPOINT);
	SendClientMessage(playerid,-1,"Дом на карте отмечен {"#cRED"}красным{"#cWHITE"} флажком");
	SetPVarInt(playerid, "flag", true);
	SendClientMessage(playerid,COLOR_GREY,"Чтобы отключить метку Используйте /chome еще раз");
	return 1;
}

CMD:editbox(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(sscanf(params, "i",params[0])) return SendInf(playerid,"/editbox [id] [lx] [ly] [cosx] [cosy] [z]");
	new Float:X, Float:Y, Float:Z, Float:rZ;
	GetPlayerPos(playerid, X, Y, Z);
	SetPVarFloat(playerid, "oldX", X);
	SetPVarFloat(playerid, "oldY", Y);
	SetPVarFloat(playerid, "oldZ", Z);
	SetPVarInt(playerid, "oldInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "oldVw", GetPlayerVirtualWorld(playerid));
	//--------------------------------------------------//
	GetDynamicObjectPos(addnews[params[0]],X,Y,Z);
	GetDynamicObjectRot(addnews[params[0]],rZ,rZ,rZ);
	//--------------------------------------------------//
	AC_SetPlayerPos(playerid, X, Y, Z + 40.0);
	AC_TogglePlayerControllable(playerid, 0);
	//---------------------------------------------------//
	SetPlayerCameraPos(playerid, X - (-13.0 * floatsin(rZ, degrees)), Y + (-250.0 * floatcos(rZ, degrees)), Z - 9.0);
	SetPlayerCameraLookAt(playerid, X, Y, Z - 9.0);
	SetPlayerInterior(playerid, 0);
	//---------------------------------------------------//
	SetPVarInt(playerid, "idbox", params[0]);
	//---------------------------------------------------//
	new sizetext, fontsize, fontface[32], fontcolor, bold, textalignment, backcolor;
	new idbox = GetPVarInt(playerid, "idbox");
	GetDynamicObjectMaterialText(addnews[idbox], 0, fontface, sizetext, fontface, fontsize, bold, fontcolor, backcolor, textalignment);
	//---------------------------------------------------//
	stringer = "{00FF00}Параметр\tЗначение\n";
	format(stringer, 800, "%s{"#cWHITE"}Текст объявления\t{8b4513}Изменить...\n{"#cWHITE"}Цвета фона\tБелый\nРазмер текста\t%i\nШрифт\t%s\nВыравнивание\t%s",stringer,fontsize,fontface,
	(textalignment == OBJECT_MATERIAL_TEXT_ALIGN_LEFT) ? ("Слева") : (textalignment == OBJECT_MATERIAL_TEXT_ALIGN_CENTER) ? ("По центру") : ("Справа"));
	ShowPlayerDialog(playerid, dBanner, DIALOG_STYLE_TABLIST_HEADERS, "Настройка баннера", stringer, "Выбрать", "Выйти");
	return 1;
}

public OnActorStreamIn(actorid, forplayerid)
{
	for new bid=MAX_NPC_BOT;bid;bid-- do
	{
	    if(bid==20) continue;
		if(actorid==bot_id[bid])
		{
			SetActorPos(bot_id[bid],bot_pos[bid][0],bot_pos[bid][1],bot_pos[bid][2]-0.2);// анти-проваливание ботов
			SetActorFacingAngle(bot_id[bid],bot_pos[bid][3]);
			break;
		}
	}
	if ( actorid == mast_actor [ 0 ] )
	{
		if ( mast_actor_id [ 0 ] == -1 )
		{
			SetActorPos ( mast_actor [ 0 ] , -1722.7828 , 267.1957 , 1074.1749 + 0.2 ) ;
			SetActorFacingAngle ( mast_actor [ 0 ] , 131.7022 ) ;
			ApplyActorAnimation ( mast_actor [ 0 ] , "INT_OFFICE", "OFF_Sit_Idle_Loop", 4.1, 1, 1, 1, 1, 1 ) ;
		}
	}
	if(actorid >= bank_bot[0] && actorid <= bank_bot[5])
	{
		SetActorPos(bank_bot[0],1459.0570,-986.9591,26.8469);
		SetActorFacingAngle(bank_bot[0],177.9615);
		//
		SetActorPos(bank_bot[1],1464.1864,-986.9591,26.8469);
		SetActorFacingAngle(bank_bot[1],177.9615);
		//
		SetActorPos(bank_bot[2],1469.0837,-986.9591,26.8469);
		SetActorFacingAngle(bank_bot[2],177.9615);
		//
		SetActorPos(bank_bot[3],1472.8881,-993.2747,26.8469);
		SetActorFacingAngle(bank_bot[3],90.2508);
		//
		SetActorPos(bank_bot[4],1472.9103,-998.4043,26.8469);
		SetActorFacingAngle(bank_bot[4],90.2508);
		//
		SetActorPos(bank_bot[5],1472.8000,-1004.8303,26.8469);
		SetActorFacingAngle(bank_bot[5],90.2508);
		return 1;
	}

	return 1;
}




CMD:mh(playerid,params[])
{
	if(!IsACop(playerid) && !ISAMAFIA(playerid) && !IsAGang(playerid)) return true;
	if(sscanf(params,"i",params[0]))return SendInf(playerid,"/mh [playerid]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок не в сети");
	if(!IsPlayerStream(10.0,playerid,params[0])) return SendErr(playerid,"Игрок не рядом с вами");
	//if(playerid==params[0])return SendErr(playerid,"Вы указали свой ID.");
	new str_mh[78];
	if(p_mh[params[0]]==PlayerText:-1)
	{
		p_mh[params[0]]=CreatePlayerTextDraw(params[0],0.000000,0.000000,"|");
		PlayerTextDrawBackgroundColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawFont(params[0],p_mh[params[0]], 1);
		PlayerTextDrawLetterSize(params[0],p_mh[params[0]], 0.500000, 49.799957);
		PlayerTextDrawColor(params[0],p_mh[params[0]], -1);
		PlayerTextDrawSetOutline(params[0],p_mh[params[0]], 0);
		PlayerTextDrawSetProportional(params[0],p_mh[params[0]], 1);
		PlayerTextDrawSetShadow(params[0],p_mh[params[0]], 1);
		PlayerTextDrawUseBox(params[0],p_mh[params[0]], 1);
		PlayerTextDrawBoxColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawTextSize(params[0],p_mh[params[0]],640.000000,0.000000);
		PlayerTextDrawShow(params[0],p_mh[params[0]]);
		for(new i=0; i<8; i++)
		{
			TextDrawHideForPlayer(params[0],Logotype[i]);
			//TextDrawHideForPlayer(params[0], Datum);
		}
		format(str_mh,78,"надел(а) мешок на голову %s",NamePlayer[params[0]]);
		MeAction(playerid,str_mh);
		SendClientMessage(playerid,-1,"Чтобы снять мешок нажмите {afafaf}/mh{ffffff} еще раз.");
	}
	else
	{
		for(new i=0; i<8; i++)
		{
			TextDrawShowForPlayer(params[0],Logotype[i]);
			//TextDrawShowForPlayer(params[0], Datum);
		}
		PlayerTextDrawHide(params[0],p_mh[params[0]]);
		PlayerTextDrawDestroy(params[0],p_mh[params[0]]);
		p_mh[params[0]]=PlayerText:-1;
		format(str_mh,78,"снял(а) мешок с головы %s",NamePlayer[params[0]]);
		MeAction(playerid,str_mh);
	}

	return true;
}
ALT:mh:bag;
public OnGameModeInit()
{
    CreateObject(19340, 325.81653, -1592.54810, 13.36710,   0.00000, 0.00000, -38.94000,100.0);
    for(new v; v < sizeof(bootInfo); v++)
	{
		bootInfo[v][_b_target_id] = -1;
		bootInfo[v][_b_kidnapper_id] = -1;
	}
	new	ipadress[16], zpassword[32];
	GetServerVarAsString("bind", ipadress, 15);
	GetServerVarAsString("password", zpassword, 32);
	
	new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, true);

	SendRconCommand("language "LANGUAGE_SERVER"");
	SendRconCommand("gamemodetext "GAMEMODE_NAME"");
	SendRconCommand("ackslimit 7000");
	SendRconCommand("lagcompmode 1");
	SendRconCommand("messageholelimit 7000");
	
	SELECT_SERVER = 1;

	connects = mysql_connect(MYSQL_HOST,MYSQL_USER,MYSQL_PASS,MYSQL_BASE, option_id); // хост > имя пользователя > пароль > имя базы данных
	if (connects == MYSQL_INVALID_HANDLE || mysql_errno(connects) != 0)
	{
		print("Подключиться к MYSQL не удалось...");
		return 1;
	}
	print("[MySQL]: Подключение к MYSQL успешно выполнено.");
	for(new b = 0; b < 100; b++)
	{
		gTempBot[b] = -1;
	}
	for(new a = 0; a < MAX_PLAYERS; a++)
	{
		show_furn_p_td[a][0] = false;
		show_furn_p_td[a][1] = false;
		for(new b = 0; b < MAX_SLOT_FURNITURE; b++)
		{
			p_td_furn_object[a][b]=PlayerText:-1;
			p_td_furn_text[a][b]=PlayerText:-1;
			if(b<4)p_td_furn_select[a][b]=PlayerText:-1;
		}
	}
	for(new h;h<MAX_HOUSES;h++){
		for(new j;j<MAX_SLOT_FURNITURE;j++) {
			gHouseFurniture[h][j][Furn_ObjectID] = -1;
			gHouseFurniture[h][j][Furn_Model] = 0;
		}
	}
	gFurnInfo = TextDrawCreate(350.000000, 260.000000 - 100.000000, "______________________FURNITURE");
	TextDrawLetterSize(gFurnInfo, 0.471083, 1.220833);
	TextDrawTextSize(gFurnInfo, 604.000000, 90.000000);
	TextDrawAlignment(gFurnInfo, 1);
	TextDrawColor(gFurnInfo, -1851089409);
	TextDrawUseBox(gFurnInfo, true);
	TextDrawBoxColor(gFurnInfo, 422855082);
	TextDrawSetOutline(gFurnInfo, 1);
	TextDrawBackgroundColor(gFurnInfo, 0x00000000);
	TextDrawFont(gFurnInfo, 1);
	TextDrawSetProportional(gFurnInfo, 1);
	CreateDynamicPickup(1239,1,1250.5789,-1545.7523,2062.6479);

	td_furniture[0] = TextDrawCreate(248.316253, 277.666748, "PreviewModel");
	td_furniture[1] = TextDrawCreate(368.320831, 278.083282, "PreviewModel");
	td_furniture[2] = TextDrawCreate(247.910690, 310.166870, "PreviewModel");
	td_furniture[3] = TextDrawCreate(368.852294, 309.416625, "PreviewModel");
	td_furniture[4] = TextDrawCreate(295.168579, 343.000030, "PreviewModel");
	for(new j = 0; j<5;j++){
		TextDrawLetterSize(td_furniture[j], 0.000000, 0.000000);
		TextDrawTextSize(td_furniture[j], 34.202072, 33.833324);
		TextDrawAlignment(td_furniture[j], 1);
		TextDrawColor(td_furniture[j], 529166506);
		TextDrawBackgroundColor(td_furniture[j], 0x00000000);
		TextDrawFont(td_furniture[j], 5);
		TextDrawSetPreviewModel(td_furniture[j], 19131);
		TextDrawSetSelectable(td_furniture[j], true);
	}
	TextDrawSetPreviewRot(td_furniture[0], 0.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetPreviewRot(td_furniture[1], 0.000000, 0.000000, 270.000000, 1.000000);
	TextDrawSetPreviewRot(td_furniture[2], 0.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetPreviewRot(td_furniture[3], 0.000000, 0.000000, 270.000000, 1.000000);
	TextDrawLetterSize(td_furniture[4], 0.000000, 0.000000);
	TextDrawTextSize(td_furniture[4], 62.781814, 53.666679);
	TextDrawAlignment(td_furniture[4], 1);
	TextDrawColor(td_furniture[4], 764788650);
	TextDrawBackgroundColor(td_furniture[4], 0x00000000);
	TextDrawFont(td_furniture[4], 5);
	TextDrawSetPreviewModel(td_furniture[4], 3438);
	TextDrawSetPreviewRot(td_furniture[4], 0.000000, 0.000000, 90.000000, 1.000000);
	td_furniture[5] = TextDrawCreate(327.622344, 363.666595, "BUY");
	TextDrawLetterSize(td_furniture[5], 0.362854, 1.284999);
	TextDrawTextSize(td_furniture[5], 298.448242, 90.416664);
	TextDrawAlignment(td_furniture[5], 2);
	TextDrawColor(td_furniture[5], -1);
	TextDrawSetShadow(td_furniture[5], 1);
	TextDrawSetOutline(td_furniture[5], 0);
	TextDrawBackgroundColor(td_furniture[5], 170);
	TextDrawFont(td_furniture[5], 2);
	TextDrawSetProportional(td_furniture[5], 1);
	td_furniture[6] = TextDrawCreate(325.685333, 404.083312, "EXIT");
	TextDrawLetterSize(td_furniture[6], 0.362854, 1.284999);
	TextDrawTextSize(td_furniture[6], 298.448242, 90.416664);
	TextDrawAlignment(td_furniture[6], 2);
	TextDrawColor(td_furniture[6], -1);
	TextDrawUseBox(td_furniture[6], true);
	TextDrawBoxColor(td_furniture[6], 77);
	TextDrawSetShadow(td_furniture[6], 1);
	TextDrawSetOutline(td_furniture[6], 0);
	TextDrawBackgroundColor(td_furniture[6], 170);
	TextDrawFont(td_furniture[6], 2);
	TextDrawSetProportional(td_furniture[6], 1);
	TextDrawSetSelectable(td_furniture[6], true);
	for(new i =0;i<MAX_PLAYERS;i++){
		ptd_furniture[i][0]=PlayerText:-1;
		ptd_furniture[i][1]=PlayerText:-1;
		FurnShow{i}=false;
		furniture_class{i} = -1;
		furniture_select{i} = 0;
		furniture_pickup[i] = -1;
	}
	for ( new sm = 0; sm < sm_count; sm ++ ) CreateDynamic3DTextLabel("Для начала игры\nнажмите 'ALT'",0xFFDA82FF,sm_coord [ sm ] [ 0 ], sm_coord [ sm ] [ 1 ], sm_coord [ sm ] [ 2 ],5.0);
	for(new i;i < sizeof(Bankomats);i ++)
	{
		SetDynamicObjectMaterialText(CreateDynamicObject(2754,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],0.0,0.0,Bankomats[i][3]), 2,"\n\n        \n        \n        \n        \n        ",OBJECT_MATERIAL_SIZE_256x256,"Tahoma", 48, 1, 0xFF000000,0xFFCD5C5C, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		CreateDynamic3DTextLabel("{A19D9D}Банкомат\n{FFFFFF}Нажмите: N",CWHITE,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2]+1,5.0);
	}


	//CreateMap(15.0, WATER_LEVEL, 400.0);
	for(new i=0;i<MAX_DROP_GUNS;i++)
	{
		drop_gun[i][dg_object] = -1;
		drop_gun[i][dg_gun] = -1;
		drop_gun[i][dg_ammo] = -1;
		//drop_gun[i][dg_area] = -1;
		drop_gun[i][dg_text] = Text3D:-1;
		drop_gun[i][dg_timer] = -1;
		drop_gun[i][dg_time] = -1;
	}
	for(new A=0; A<2;A++)
	{
		for(new B=0;B<11;B++)
		{
			Position_Football_Active[A][B]=false;
		}
	}

	for(new tp = 0; tp < TP_COUNT; tp++)
	{
		CreatePickup((tp == 13) ? (19132) :(1318),23,gTeleportsToD[tp][0][0],gTeleportsToD[tp][0][1],gTeleportsToD[tp][0][2],gTeleportDataToD[tp][0][1]);
		CreatePickup(1318,23,gTeleportsToD[tp][1][0],gTeleportsToD[tp][1][1],gTeleportsToD[tp][1][2],gTeleportDataToD[tp][1][1]);
		CreateDynamicObject(19295, gTeleportsToD[tp][1][0],gTeleportsToD[tp][1][1],gTeleportsToD[tp][1][2],   0.00000, 0.00000, 0.04007);
		gTeleportPick[tp][0]=CreateDynamicSphere(gTeleportsToD[tp][0][0],gTeleportsToD[tp][0][1],gTeleportsToD[tp][0][2],1.0,gTeleportDataToD[tp][0][1],gTeleportDataToD[tp][0][0],-1);
		gTeleportPick[tp][1]=CreateDynamicSphere(gTeleportsToD[tp][1][0],gTeleportsToD[tp][1][1],gTeleportsToD[tp][1][2],1.0,gTeleportDataToD[tp][1][1],gTeleportDataToD[tp][1][0],-1);
	}
	for(new pick = 0; pick < PICKUPS_COUNT; pick++)
	{
		gPickIDD[pick]=CreateDynamicPickup(gPickupData[pick][2],23,gPickup[pick][0], gPickup[pick][1],gPickup[pick][2], gPickupData[pick][1]);
		gPickID[pick]=CreateDynamicSphere(gPickup[pick][0], gPickup[pick][1],gPickup[pick][2], 2.0, gPickupData[pick][1], gPickupData[pick][0],-1);
	}
	furniture_area = CreateDynamicSphere(1250.5789,-1545.7523,2062.6479,1.0);
	for(new j = 0; j < sizeof(lowrider_area); j++)
	{
		lowrider_area[j] = CreateDynamicSphere(lowriders_pos_start[j][0],lowriders_pos_start[j][1],lowriders_pos_start[j][2], 1.0);
		CreateDynamicPickup(1239, 23, lowriders_pos_start[j][0],lowriders_pos_start[j][1],lowriders_pos_start[j][2]);
	}
	GardenSellCP = CreateDynamicCP(-1080.4884,-1195.3943,129.6644, 1.0, -1, -1, -1, 50.0);
	new Float:dice_area_pos[3][3]={{1662.650,2230.179,582.940},{1656.349,2230.300,582.940},{1650.180,2230.419,582.940}};
	Casino_TD[Casino_TD_Box] = TextDrawCreate(612.014221, 161.916656, "usebox");
	TextDrawLetterSize(Casino_TD[Casino_TD_Box], 0.000000, 26.097074);
	TextDrawTextSize(Casino_TD[Casino_TD_Box], 457.150817, 0.000000);
	TextDrawAlignment(Casino_TD[Casino_TD_Box], 1);
	TextDrawColor(Casino_TD[Casino_TD_Box], 0);
	TextDrawUseBox(Casino_TD[Casino_TD_Box], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Box], 877622186);
	TextDrawSetShadow(Casino_TD[Casino_TD_Box], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Box], 0);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Box], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Box], 0);
	new casino_formatted_string[400];
	for(new c = 0; c < MAX_TABLES_DICE; c++)
	{
		format(casino_formatted_string,400,CASINO_TEXT_STRING, c+1, "-", "-", "-", "-", "-", "-", 0, 0, "Игра не начата");
		InfoDice[c][dice_text] = CreateDynamic3DTextLabel(casino_formatted_string,-1,dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2]+1.8,5.0);
		InfoDice[c][dice_area] = CreateDynamicSphere(dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2],2.0);
		format(casino_formatted_string,144,"Table %d", c+1);
		Casino_TD[Casino_TD_TableName][c] = TextDrawCreate(534.582946, 162.750000, casino_formatted_string);
		TextDrawLetterSize(Casino_TD[Casino_TD_TableName][c], 0.449999, 1.600000);
		TextDrawTextSize(Casino_TD[Casino_TD_TableName][c], -213.645767, 146.999969);
		TextDrawAlignment(Casino_TD[Casino_TD_TableName][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableName][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableName][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableName][c], -255913558);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableName][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableName][c], 255);
		TextDrawFont(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableName][c], 1);
		///
		Casino_TD[Casino_TD_TableNicks][c] = TextDrawCreate(480.234466, 190.749984, "-~n~-~n~-~n~-~n~-");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableNicks][c], 0.317877, 1.862500);
		TextDrawAlignment(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawColor(Casino_TD[Casino_TD_TableNicks][c], -1);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableNicks][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableNicks][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableNicks][c], 1);

		Casino_TD[Casino_TD_TableScore][c] = TextDrawCreate(593.616333, 191.916687, "0~n~0~n~0~n~0~n~0");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableScore][c], 0.444846, 1.815833);
		TextDrawTextSize(Casino_TD[Casino_TD_TableScore][c], 36.544651, 20.416666);
		TextDrawAlignment(Casino_TD[Casino_TD_TableScore][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableScore][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableScore][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableScore][c], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableScore][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableScore][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableScore][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableScore][c], 3);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableScore][c], 1);

		InfoDice[c][dice_gamer][0] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][1] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][2] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][3] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][4] = INVALID_PLAYER_ID;
		InfoDice[c][dice_score][0] = 0;
		InfoDice[c][dice_score][1] = 0;
		InfoDice[c][dice_score][2] = 0;
		InfoDice[c][dice_score][3] = 0;
		InfoDice[c][dice_score][4] = 0;
		InfoDice[c][dice_stavka] = 0;
		InfoDice[c][dice_bank] = 0;
		InfoDice[c][dice_game_start] = false;
		InfoDice[c][dice_crup] = INVALID_PLAYER_ID;
		UpdateTextCasino(c);
	}

	Casino_TD[Casino_TD_Enum] = TextDrawCreate(464.304626, 192.500000, "1~n~2~n~3~n~4~n~5");
	TextDrawLetterSize(Casino_TD[Casino_TD_Enum], 0.449531, 1.833333);
	TextDrawAlignment(Casino_TD[Casino_TD_Enum], 1);
	TextDrawColor(Casino_TD[Casino_TD_Enum], -1);
	TextDrawSetShadow(Casino_TD[Casino_TD_Enum], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Enum], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Enum], 255);
	TextDrawFont(Casino_TD[Casino_TD_Enum], 3);
	TextDrawSetProportional(Casino_TD[Casino_TD_Enum], 1);

	Casino_TD[Casino_TD_Set_Bet] = TextDrawCreate(534.583007, 329.583190, "SET_BET");
	TextDrawLetterSize(Casino_TD[Casino_TD_Set_Bet], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Set_Bet], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Set_Bet], 2);
	TextDrawColor(Casino_TD[Casino_TD_Set_Bet], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Set_Bet], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Set_Bet], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Set_Bet], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Set_Bet], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Set_Bet], true);

	Casino_TD[Casino_TD_Dice] = TextDrawCreate(534.583007, 352.749877, "DICE");
	TextDrawLetterSize(Casino_TD[Casino_TD_Dice], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Dice], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Dice], 2);
	TextDrawColor(Casino_TD[Casino_TD_Dice], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Dice], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Dice], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Dice], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Dice], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Dice], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Dice], true);

	Casino_TD[Casino_TD_Exit] = TextDrawCreate(534.583007, 377.083251, "EXIT");
	TextDrawLetterSize(Casino_TD[Casino_TD_Exit], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Exit], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Exit], 2);
	TextDrawColor(Casino_TD[Casino_TD_Exit], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Exit], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Exit], -348178774);
	TextDrawSetShadow(Casino_TD[Casino_TD_Exit], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Exit], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Exit], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Exit], true);


	Casino_TD[Casino_TD_Lines][0] = TextDrawCreate(466.179138, 211.166641, "_____________");
	Casino_TD[Casino_TD_Lines][1] = TextDrawCreate(466.710601, 227.333297, "_____________");
	Casino_TD[Casino_TD_Lines][2] = TextDrawCreate(465.836486, 244.083312, "_____________");
	Casino_TD[Casino_TD_Lines][3] = TextDrawCreate(466.367919, 259.666656, "_____________");
	Casino_TD[Casino_TD_Lines][4] = TextDrawCreate(465.962280, 276.416717, "_____________");
	for(new i = 0; i < 5; i++)
	{
		TextDrawLetterSize(Casino_TD[Casino_TD_Lines][i], 0.444846, -0.336666);
		TextDrawTextSize(Casino_TD[Casino_TD_Lines][i], 579.560363, -1988.000122);
		TextDrawAlignment(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Lines][i], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_Lines][i], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_Lines][i], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_Lines][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Lines][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_Lines][i], 1);
	}
	Casino_TD[Casino_TD_Modeled][0] = TextDrawCreate(588.462707, 148.166671, "PreviewModel");
	Casino_TD[Casino_TD_Modeled][1] = TextDrawCreate(581.966247, 146.833297, "PreviewModel");
	for(new i = 0;i<2; i++){
		TextDrawLetterSize(Casino_TD[Casino_TD_Modeled][i], 0.000000, 0.000000);
		TextDrawTextSize(Casino_TD[Casino_TD_Modeled][i], 28.579849, 34.416690);
		TextDrawAlignment(Casino_TD[Casino_TD_Modeled][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Modeled][i], -86);
		TextDrawSetShadow(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Modeled][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Modeled][i], 5);
		TextDrawSetPreviewModel(Casino_TD[Casino_TD_Modeled][i], 1851);
	}
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][0], 0.000000, 111.000000, 124.000000, 1.000000);
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][1], 247.000000, 134.000000, 0.000000, 1.000000);
	arSellCar[0] = CreateDynamicSphere(555.1915,-1293.4724,17.2482,1.0);
	arSellCar[1] = CreateDynamicSphere(-1953.3829,300.9664,35.4688,1.0);
	arSellCar[2] = CreateDynamicSphere(1658.5024,2199.9299,10.8203,1.0);
	arSellCar[3] = CreateDynamicSphere(2131.8301,-1151.0280,24.0927,1.0);

	CreateDynamicPickup(1318,1,555.1915,-1293.4724,17.2482);//Автомагазины
	CreateDynamicPickup(1318,1,-1953.3829,300.9664,35.4688);
	CreateDynamicPickup(1318,1,1658.5024,2199.9299,10.8203);
	CreateDynamicPickup(1318,1,2131.8301,-1151.0280,24.0927);

	CreateDynamic3DTextLabel("Авторынок\nЭконом класс",CYELLOW,555.1915,-1293.4724,17.2482+0.8,9.0);
	CreateDynamic3DTextLabel("Автосалон\nСредний класс",CYELLOW,-1953.3829,300.9664,35.4688+0.8,9.0);
	CreateDynamic3DTextLabel("Автосалон\nСпорт класс",CYELLOW,1658.5024,2199.9299,10.8203+0.8,9.0);
	CreateDynamic3DTextLabel("Авторынок\nМото класс",CYELLOW,2131.8301,-1151.0280,24.0927+0.8,9.0);

	for(new i;i < sizeof(FishZone);i ++)
	{
		Fish_CP[i] = CreateDynamicCP(FishZone[i][0], FishZone[i][1], FishZone[i][2], 0.7, -1, -1, -1, 5.0);
		CreateDynamic3DTextLabel(" Место для рыбалки ",CWHITE,FishZone[i][0], FishZone[i][1], FishZone[i][2], 10.0);
	}
	print("Все места рыбалки созданы");
	for(new i = 0; i < sizeof(sdbd); i++)
	{
		CreateActor(sdbd[i][sdbd_skin],sdbd[i][sdbd_pos][0],sdbd[i][sdbd_pos][1],sdbd[i][sdbd_pos][2],sdbd[i][sdbd_pos][3]);
		format(stringer,100,"{33AA33}NPC: {FFFFFF}%s\n{AFAFAF}Чтобы поговорить нажми {4682b4}ALT",sdbd[i][sdbd_name]);
		CreateDynamic3DTextLabel(stringer,-1,sdbd[i][sdbd_pos][0],sdbd[i][sdbd_pos][1],sdbd[i][sdbd_pos][2],15.0);
	}
	CreateDynamic3DTextLabel("Чтобы получить паспорт нажмите {73B461}[ALT]",0x6495EDFF,2295.6125,-1991.9835,-34.1641+0.2,5.0);

	print("NPC созданы");
	ShahtaPick[0] = CreateDynamicSphere(-2377.4482,-2187.0059,33.6651,1.0,0,0);
	ShahtaPick[1] = CreateDynamicSphere(-2375.7573,-2183.4958,33.6651,1.0,0,0);

	CreateDynamicPickup(1210, 23, -2377.4482,-2187.0059,33.6651,0,0);
	CreateDynamicPickup(1275, 23, -2375.7573,-2183.4958,33.6651,0,0);

	jackminer_object = CreateObject(18879,-2401.8669,-2171.1870,39.9160,-9.7000,0.0000,-102.0999, 300.000);
	SetObjectMaterial(jackminer_object, 1, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	SetObjectMaterial(jackminer_object, 3, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	SetObjectMaterial(jackminer_object, 4, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	SetObjectMaterial(jackminer_object, 5, 1560, "7_11_door", "cj_sheetmetal2", 0x00000000);
	MoveObject(jackminer_object,-2552.5944,-2135.6259,71.0454,SPEED_JACK,-11.9000,0.0000,-104.0999);
	for(new M = 0; M < 19; M++)
	{
		if(M<2)
		{
			vagon_object[M] = CreateObject(3585,vagon_position[0][M][0],vagon_position[0][M][1],vagon_position[0][M][2],vagon_position[0][M][3],vagon_position[0][M][4],vagon_position[0][M][5],300.000);
			if(vagon_timer[M] == -1) vagon_timer[M] = SetTimerEx("VagonWait",15000,0,"i",M);
		}
		CreateDynamic3DTextLabel("Нажимай {"#cWHITE"}ЛКМ\n{4682B4}для добычи руды",0x4682B4FF, miner_pick_pos[M][0],miner_pick_pos[M][1],miner_pick_pos[M][2]+0.5, 3.0);
		////CreateDynamicCP(miner_pick_pos[M][0],miner_pick_pos[M][1],miner_pick_pos[M][2]+0.5,2.0,-1,-1,-1,200.0);
		CreateDynamicObject(807,miner_pick_pos[M][0],miner_pick_pos[M][1],miner_pick_pos[M][2],miner_pick_pos[M][3],miner_pick_pos[M][4],miner_pick_pos[M][5],-1,-1,-1,300.000,300.000);
	}
	for ( new c = 0; c < 3; c++ )
	{
		rullet_[c][rullet_area] = CreateDynamicSphere(rullet_[c][rullet_pos][0], rullet_[c][rullet_pos][1], rullet_[c][rullet_pos][2], 2.0);
		rullet_[c][rullet_timer] = -1;
	}
	CreateDynamic3DTextLabel("- Аренда велосипедов -", 0xFFFFFFDD, 394.9439,-1510.6354,32.2180, 30.0);
	CreateDynamic3DTextLabel("- Аренда велосипедов -", 0xFFFFFFDD, -2363.7402,-2170.8418,33.4390, 30.0);
	cp_rent_bike[0] = CreateDynamicCP(394.9439,-1510.6354,32.2180,1.0,-1,-1,-1,50.0);
	cp_rent_bike[1] = CreateDynamicCP(-2363.7402,-2170.8418,33.4390,1.0,-1,-1,-1,50.0);

	CreateDynamic3DTextLabel("{"#cBLUE"}Регистрация на мероприятие",-1,247.0762,-2176.2798,4.6540+0.8,5.0);
	CreateDynamicPickup(1313,23,247.0762,-2176.2798,4.6540);
	ZombieRegArea=CreateDynamicSphere(247.0762,-2176.2798,4.6540,1.0);
	ZombieFlagPickup=CreateDynamicSphere(2459.5071,-744.6583,949.7463,1.0);
	CreateDynamicPickup(2914,23,2459.5071,-744.6583,949.7463);

	CreateDynamicObject(19357,2577.6743,-1289.8155,1044.1250,0.0000,0.0000,0.0000);
	CreateDynamicObject(1497,2577.6149,-1290.5980,1043.0845,0.0000,0.0000,90.0000);


	trunk_ball[7] = TextDrawCreate(420.732116, 74.666664, "PreviewModel");
	TextDrawTextSize(trunk_ball[7], 57.628128, 109.083366);
	TextDrawColor(trunk_ball[7], -1);
	TextDrawBackgroundColor(trunk_ball[7], 0x00000000);
	TextDrawFont(trunk_ball[7], 5);
	TextDrawSetPreviewModel(trunk_ball[7], 2035);
	TextDrawSetPreviewRot(trunk_ball[7], 63.000000, 312.000000, 337.000000, 1.000000);

	trunk_ball[8] = TextDrawCreate(481.703155, 134.000045, "PreviewModel");
	TextDrawTextSize(trunk_ball[8], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[8], -1);
	TextDrawBackgroundColor(trunk_ball[8], 0x00000000);
	TextDrawFont(trunk_ball[8], 5);
	TextDrawSetPreviewModel(trunk_ball[8], 1274);
	TextDrawSetPreviewRot(trunk_ball[8], 0.000000, 337.000000, 0.000000, 1.000000);

	trunk_ball[9] = TextDrawCreate(533.772094, 168.833404, "PreviewModel");
	TextDrawTextSize(trunk_ball[9], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[9], -1);
	TextDrawBackgroundColor(trunk_ball[9], 0x00000000);
	TextDrawFont(trunk_ball[9], 5);
	TextDrawSetPreviewModel(trunk_ball[9], 1578);
	TextDrawSetPreviewRot(trunk_ball[9], 90.000000, 0.000000, 121.000000, 1.000000);

	trunk_ball[10] = TextDrawCreate(560.072387, 229.333374, "PreviewModel");
	TextDrawTextSize(trunk_ball[10], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[10], -1);
	TextDrawBackgroundColor(trunk_ball[10], 0x00000000);
	TextDrawFont(trunk_ball[10], 5);
	TextDrawSetPreviewModel(trunk_ball[10], 1576);
	TextDrawSetPreviewRot(trunk_ball[10], 90.000000, 0.000000, 90.000000, 1.000000);

	trunk_ball[11] = TextDrawCreate(538.114746, 294.500030, "PreviewModel");
	TextDrawTextSize(trunk_ball[11], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[11], -1);
	TextDrawBackgroundColor(trunk_ball[11], 0x00000000);
	TextDrawFont(trunk_ball[11], 5);
	TextDrawSetPreviewModel(trunk_ball[11], 1242);
	TextDrawSetPreviewRot(trunk_ball[11], 0.000000, 350.000000, 350.000000, 1.000000);

	trunk_ball[12] = TextDrawCreate(492.731079, 332.833312, "PreviewModel");
	TextDrawTextSize(trunk_ball[12], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[12], -1);
	TextDrawBackgroundColor(trunk_ball[12], 0x00000000);
	TextDrawFont(trunk_ball[12], 5);
	TextDrawSetPreviewModel(trunk_ball[12], 1650);
	TextDrawSetPreviewRot(trunk_ball[12], 0.000000, 354.000000, 350.000000, 1.000000);

	trunk_ball[13] = TextDrawCreate(439.382629, 361.250030, "PreviewModel");
	TextDrawTextSize(trunk_ball[13], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[13], -1);
	TextDrawBackgroundColor(trunk_ball[13], 0x00000000);
	TextDrawFont(trunk_ball[13], 5);
	TextDrawSetPreviewModel(trunk_ball[13], 1241);
	TextDrawSetPreviewRot(trunk_ball[13], 0.000000, 53.000000, 350.000000, 1.000000);
	trunk_ball[0] = TextDrawCreate(418.857635, 92.749984,  "ld_beat:chit");
	trunk_ball[1] = TextDrawCreate(472.332214, 119.416664, "ld_beat:chit");
	trunk_ball[2] = TextDrawCreate(522.995361, 158.916610, "ld_beat:chit");
	trunk_ball[3] = TextDrawCreate(548.827453, 218.833312, "ld_beat:chit");
	trunk_ball[4] = TextDrawCreate(527.806823, 279.333282, "ld_beat:chit");
	trunk_ball[5] = TextDrawCreate(481.017517, 318.250000, "ld_beat:chit");
	trunk_ball[6] = TextDrawCreate(428.137451, 348.416656, "ld_beat:chit");
	for(new trb=0;trb<7;trb++)
	{
		TextDrawTextSize(trunk_ball[trb], 70.000000, 70.000000);
		TextDrawColor(trunk_ball[trb], -176);
		TextDrawBackgroundColor(trunk_ball[trb], 0x00000000);
		TextDrawFont(trunk_ball[trb], 4);
	}
	trunk_ball[14] = TextDrawCreate(456.339752, 147.000030, "WEAPON");
	TextDrawTextSize(trunk_ball[14], 20.614929, 37.916660);
	trunk_ball[15] = TextDrawCreate(509.345733, 178.333358, "MONEY");
	TextDrawTextSize(trunk_ball[15], 17.803802, 32.666660);
	trunk_ball[16] = TextDrawCreate(560.477478, 217.833343, "DRUGS");
	TextDrawTextSize(trunk_ball[16], 17.803802, 32.666660);
	trunk_ball[17] = TextDrawCreate(585.840881, 277.166625, "MATS");
	TextDrawTextSize(trunk_ball[17], 17.803802, 32.666660);
	trunk_ball[18] = TextDrawCreate(565.757568, 336.499908, "ARMOUR");
	TextDrawTextSize(trunk_ball[18], 43.572463, 36.166652);
	trunk_ball[19] = TextDrawCreate(518.499694, 378.333129, "TANK");
	TextDrawTextSize(trunk_ball[19], 36.076126, 29.166648);
	trunk_ball[20] = TextDrawCreate(465.619628, 408.499694, "HEAL");
	TextDrawTextSize(trunk_ball[20], 36.076126, 29.166648);
	for(new trn=14;trn<=20;trn++)
	{
		TextDrawLetterSize(trunk_ball[trn], 0.219018, 0.894166);
		TextDrawTextSize(trunk_ball[trn], 20.614929, 37.916660);
		TextDrawAlignment(trunk_ball[trn], 2);
		TextDrawColor(trunk_ball[trn], -1);
		TextDrawUseBox(trunk_ball[trn], true);
		TextDrawBoxColor(trunk_ball[trn], 0x00A38870);
		TextDrawSetShadow(trunk_ball[trn], 0);
		TextDrawSetOutline(trunk_ball[trn], 1);
		TextDrawBackgroundColor(trunk_ball[trn], 255);
		TextDrawFont(trunk_ball[trn], 2);
		TextDrawSetProportional(trunk_ball[trn], 1);
		TextDrawSetSelectable(trunk_ball[trn], true);
	}
	trunk_ball[21] = TextDrawCreate(590.805480, 134.750076,"OPEN_BOOT~n~FOR_PLAYERS");
	TextDrawLetterSize(trunk_ball[21], 0.213864, 1.063333);
	TextDrawTextSize(trunk_ball[21], 20.543182, 75.250000);
	TextDrawAlignment(trunk_ball[21], 2);
	TextDrawColor(trunk_ball[21], -35);
	TextDrawUseBox(trunk_ball[21], true);
	TextDrawBoxColor(trunk_ball[21], 0x33AA3390);
	TextDrawSetOutline(trunk_ball[21], 1);
	TextDrawBackgroundColor(trunk_ball[21], 144);
	TextDrawFont(trunk_ball[21], 1);
	TextDrawSetProportional(trunk_ball[21], 1);
	TextDrawSetSelectable(trunk_ball[21], true);

	tdNextSkin = TextDrawCreate(508.000000, 208.000000, "Next: ~g~ RIGHT");
	TextDrawAlignment(tdNextSkin, 2);
	TextDrawBackgroundColor(tdNextSkin, 255);
	TextDrawFont(tdNextSkin, 2);
	TextDrawLetterSize(tdNextSkin, 0.400000, 1.600000);
	TextDrawColor(tdNextSkin, -1);
	TextDrawSetOutline(tdNextSkin, 0);
	TextDrawSetProportional(tdNextSkin, 1);
	TextDrawSetShadow(tdNextSkin, 1);
	TextDrawUseBox(tdNextSkin, 1);
	TextDrawBoxColor(tdNextSkin, 153);
	TextDrawTextSize(tdNextSkin, 0.000000, 120.000000);

	tdBackSkin = TextDrawCreate(108.000000, 208.000000, "Prev: ~r~ LEFT");
	TextDrawAlignment(tdBackSkin, 2);
	TextDrawBackgroundColor(tdBackSkin, 255);
	TextDrawFont(tdBackSkin, 2);
	TextDrawLetterSize(tdBackSkin, 0.400000, 1.600000);
	TextDrawColor(tdBackSkin, -1);
	TextDrawSetOutline(tdBackSkin, 0);
	TextDrawSetProportional(tdBackSkin, 1);
	TextDrawSetShadow(tdBackSkin, 1);
	TextDrawUseBox(tdBackSkin, 1);
	TextDrawBoxColor(tdBackSkin, 153);
	TextDrawTextSize(tdBackSkin, 0.000000, 120.000000);

	tdSelSkin = TextDrawCreate(328.000000, 398.000000, "Select: ~y~~k~~PED_SPRINT~");
	TextDrawAlignment(tdSelSkin, 2);
	TextDrawBackgroundColor(tdSelSkin, 255);
	TextDrawFont(tdSelSkin, 2);
	TextDrawLetterSize(tdSelSkin, 0.400000, 1.600000);
	TextDrawColor(tdSelSkin, -1);
	TextDrawSetOutline(tdSelSkin, 0);
	TextDrawSetProportional(tdSelSkin, 1);
	TextDrawSetShadow(tdSelSkin, 1);
	TextDrawUseBox(tdSelSkin, 1);
	TextDrawBoxColor(tdSelSkin, 153);
	TextDrawTextSize(tdSelSkin, 0.000000, 199.000000);

	TextDrawSetSelectable(tdNextSkin,1);
	TextDrawSetSelectable(tdBackSkin,1);
	TextDrawSetSelectable(tdSelSkin,1);

	lowrideRing = TextDrawCreate(283.140319, 375.000000, "ld_beat:cring");
	TextDrawTextSize(lowrideRing, 70.000000, 70.000000);
	TextDrawColor(lowrideRing, -1);
	TextDrawFont(lowrideRing, 4);

	lowrideSelectVehicle_TD[0] = TextDrawCreate(395.557800, 150.833251, "usebox");
	TextDrawLetterSize(lowrideSelectVehicle_TD[0], 0.000000, 16.470371);
	TextDrawTextSize(lowrideSelectVehicle_TD[0], 229.449493, 0.000000);
	TextDrawAlignment(lowrideSelectVehicle_TD[0], 1);
	TextDrawColor(lowrideSelectVehicle_TD[0], 0);
	TextDrawUseBox(lowrideSelectVehicle_TD[0], true);
	TextDrawBoxColor(lowrideSelectVehicle_TD[0], -6011061);
	TextDrawSetShadow(lowrideSelectVehicle_TD[0], 0);
	TextDrawSetOutline(lowrideSelectVehicle_TD[0], 0);
	TextDrawBackgroundColor(lowrideSelectVehicle_TD[0], 0x00000000);
	TextDrawFont(lowrideSelectVehicle_TD[0], 0);
	//TextDrawSetSelectable(lowrideSelectVehicle_TD[0], true);



	lowrideSelectVehicle_TD[1] = TextDrawCreate(245.505126, 280.583343, "ld_chat:thumbup");
	TextDrawLetterSize(lowrideSelectVehicle_TD[1], 0.000000, 0.000000);
	TextDrawTextSize(lowrideSelectVehicle_TD[1], 26.705688, 29.750020);
	TextDrawAlignment(lowrideSelectVehicle_TD[1], 1);
	TextDrawColor(lowrideSelectVehicle_TD[1], -1);
	TextDrawSetShadow(lowrideSelectVehicle_TD[1], 0);
	TextDrawSetOutline(lowrideSelectVehicle_TD[1], 0);
	TextDrawBackgroundColor(lowrideSelectVehicle_TD[1], 0x00000000);
	TextDrawFont(lowrideSelectVehicle_TD[1], 4);
	TextDrawSetSelectable(lowrideSelectVehicle_TD[1], true);

	lowrideSelectVehicle_TD[2] = TextDrawCreate(342.552307, 280.416656, "ld_chat:thumbdn");
	TextDrawLetterSize(lowrideSelectVehicle_TD[2], 0.000000, 0.000000);
	TextDrawTextSize(lowrideSelectVehicle_TD[2], 26.705688, 29.750020);
	TextDrawAlignment(lowrideSelectVehicle_TD[2], 1);
	TextDrawColor(lowrideSelectVehicle_TD[2], -1);
	TextDrawSetShadow(lowrideSelectVehicle_TD[2], 0);
	TextDrawSetOutline(lowrideSelectVehicle_TD[2], 0);
	TextDrawBackgroundColor(lowrideSelectVehicle_TD[2], 0x00000000);
	TextDrawFont(lowrideSelectVehicle_TD[2], 4);
	TextDrawSetSelectable(lowrideSelectVehicle_TD[2], true);

	lowrideSelectVehicle_TD[3] = TextDrawCreate(211.429168, 202.666671, "ld_beat:left");
	TextDrawLetterSize(lowrideSelectVehicle_TD[3], 0.000000, 0.000000);
	TextDrawTextSize(lowrideSelectVehicle_TD[3], 26.705688, 29.750020);
	TextDrawAlignment(lowrideSelectVehicle_TD[3], 1);
	TextDrawColor(lowrideSelectVehicle_TD[3], -1);
	TextDrawSetShadow(lowrideSelectVehicle_TD[3], 0);
	TextDrawSetOutline(lowrideSelectVehicle_TD[3], 0);
	TextDrawBackgroundColor(lowrideSelectVehicle_TD[3], 0x00000000);
	TextDrawFont(lowrideSelectVehicle_TD[3], 4);
	TextDrawSetSelectable(lowrideSelectVehicle_TD[3], true);

	lowrideSelectVehicle_TD[4] = TextDrawCreate(387.187988, 203.083267, "ld_beat:right");
	TextDrawLetterSize(lowrideSelectVehicle_TD[4], 0.000000, 0.000000);
	TextDrawTextSize(lowrideSelectVehicle_TD[4], 26.705688, 29.750020);
	TextDrawAlignment(lowrideSelectVehicle_TD[4], 1);
	TextDrawColor(lowrideSelectVehicle_TD[4], -1);
	TextDrawSetShadow(lowrideSelectVehicle_TD[4], 0);
	TextDrawSetOutline(lowrideSelectVehicle_TD[4], 0);
	TextDrawBackgroundColor(lowrideSelectVehicle_TD[4], 0x00000000);
	TextDrawFont(lowrideSelectVehicle_TD[4], 4);
	TextDrawSetSelectable(lowrideSelectVehicle_TD[4], true);

	lowride_list_update[0] = TextDrawCreate(638.720520, 125.166557, "usebox");
	TextDrawLetterSize(lowride_list_update[0], 0.000000, 25.325420);
	TextDrawTextSize(lowride_list_update[0], 478.702850, 0.000000);
	TextDrawAlignment(lowride_list_update[0], 1);
	TextDrawColor(lowride_list_update[0], 0);
	TextDrawUseBox(lowride_list_update[0], true);
	TextDrawBoxColor(lowride_list_update[0], -6011061);
	TextDrawSetShadow(lowride_list_update[0], 0);
	TextDrawSetOutline(lowride_list_update[0], 0);
	TextDrawBackgroundColor(lowride_list_update[0], 0x00000000);
	TextDrawFont(lowride_list_update[0], 0);
	//TextDrawSetSelectable(lowride_list_update[0], true);

	lowride_list_update[1] = TextDrawCreate(529.897583, 113.750007, "_");
	TextDrawLetterSize(lowride_list_update[1], 0.449999, 1.600000);
	TextDrawAlignment(lowride_list_update[1], 1);
	TextDrawColor(lowride_list_update[1], -1);
	TextDrawSetShadow(lowride_list_update[1], 0);
	TextDrawSetOutline(lowride_list_update[1], 1);
	TextDrawBackgroundColor(lowride_list_update[1], 255);
	TextDrawFont(lowride_list_update[1], 3);
	TextDrawSetProportional(lowride_list_update[1], 1);
	//TextDrawSetSelectable(lowride_list_update[1], true);

	new Float:startLLUY = 135.00000, strLLU[64];

	for ( new i = 2; i <= 11; i++ )
	{
		format(strLLU, 64, "~b~~h~~h~~h~%d. ~w~-                   ~b~~h~~h~~h~0", i - 1 );
		lowride_list_update[i] = TextDrawCreate(633.00000, startLLUY, strLLU);
		TextDrawLetterSize(lowride_list_update[i], 0.360981, 1.932498);
		TextDrawAlignment(lowride_list_update[i], 3);
		TextDrawColor(lowride_list_update[i], -1);
		TextDrawSetShadow(lowride_list_update[i], 0);
		TextDrawSetOutline(lowride_list_update[i], 1);
		TextDrawBackgroundColor(lowride_list_update[i], 255);
		TextDrawFont(lowride_list_update[i], 1);
		TextDrawSetProportional(lowride_list_update[i], 1);

		startLLUY += 20.00000;
	}
	CreateDynamicPickup(2228,23,-1064.6805,-1210.5090,129.2559, -1, -1);
	GardenPick = CreateDynamicSphere(-1064.6805,-1210.5090,129.2559, 1.0);

	for(new i;i<76;i++)
	{
		GardenCheckpoints[i] = CreateDynamicSphere(GardenTrees[i][0],GardenTrees[i][1],129.21875, 1.0);
		CreateDynamicObject(19902,GardenTrees[i][0],GardenTrees[i][1],127.21875,0.0,0.0,0.0,0,0,-1, 100.0, 100.0);
		GardenTreesIDs[i][0] = CreateDynamicObject(737,GardenTrees[i][0],GardenTrees[i][1],GardenTrees[i][2],0.0,0.0,0.0,0,0,-1, 100.0, 100.0);
		GardenTreesIs[i] = 410+random(30);///
		GardenText[i] = CreateDynamic3DTextLabel("{"#cWHITE"}Дерево {"#cGREEN"}доступно {"#cWHITE"}подойдите{"#cGRAY"}\nчтобы начать собирать яблоки",-1,GardenTrees[i][0],GardenTrees[i][1],GardenTrees[i][2] + 0.8, 10.0);
	}
	CreateDynamicObject(19474, 1961.53760, 1023.41919, 992.01300,   0.0, 0.0, 0.0,10,10,-1, 100.0, 100.0);
	CreateDynamicObject(19474, 1961.53760, 1011.80957, 992.01300,   0.0, 0.0, 0.0,10,10,-1, 100.0, 100.0);
	CreateDynamicObject(19474, 1961.53760, 1017.41620, 992.01300,   0.0, 0.0, 0.0,10,10,-1, 100.0, 100.0);

	////print ("OnGameModeInitLOG - 1");

	//CreatePickup(19135, 23, 1733.30, -1857.18, 13.72-0.7, 0);
	//CreatePickup(19135, 23, 1734.68, -1858.13, 13.68-0.7, 0);
	//SetDynamicObjectMaterial(CreateDynamicObject(1569,1735.003,-1856.647,12.649,0.000,0.000,-128.339), 0, 18029, "genintintsmallrest", "GB_restaursmll12", -1);
	//SetDynamicObjectMaterial(CreateDynamicObject(1569,1733.149,-1858.999,12.649,0.000,0.000,51.959), 0, 18029, "genintintsmallrest", "GB_restaursmll12", -1);
	/*door_spawn_ls_area[0] = CreateDynamicSphere(1735.17, -1858.43, 13.68, 1.0);
	door_spawn_ls_area[1] = CreateDynamicSphere(1732.84, -1857.00, 13.72, 1.0);
	door_spawn_ls[0] = */

	hospital_lift_object[0] = CreateObject(18755,-349.263,-33.071,997.513-1054.480,0.000,0.000,0.000);//кабина
	SetObjectMaterial(hospital_lift_object[0], 1, 14581, "ab_mafiasuitea", "walp45S", 0);
	SetObjectMaterial(hospital_lift_object[0], 2, 14581, "ab_mafiasuitea", "wood02S", 0);
	SetObjectMaterial(hospital_lift_object[0], 5, 14652, "ab_trukstpa", "CJ_WOOD6", 0);
	SetObjectMaterial(hospital_lift_object[0], 6, 14652, "ab_trukstpa", "CJ_WOOD6", 0);
	hospital_lift_object[1] = CreateObject(18757,-349.4770,-33.0499,-56.9640,0.0000,0.0000,0.0000);//правая дверь 1 этаж
	hospital_lift_object[2] = CreateObject(18756,-349.4770,-33.0589,-56.9640,0.0000,0.0000,0.0000);//левая дверь 1 этаж
	hospital_lift_object[3] = CreateObject(18757,-349.4770,-33.0499,-51.2759,0.0000,0.0000,0.0000);//правая дверь 2 этаж
	hospital_lift_object[4] = CreateObject(18756,-349.4770,-33.0589,-51.2759,0.0000,0.0000,0.0000);//левая дверь 2 этаж
	CreateDynamicObject(18757,-349.4770,-33.0499,-54.0768,0.0000,0.0000,0.0000);//-
	CreateDynamicObject(18756,-349.4770,-33.0589,-54.0768,0.0000,0.0000,0.0000);//-
	CreateDynamic3DTextLabel("{FFD700}Вызвать лифт\n[ \" {73B461}N {FFD700}\" ]", 0xFFFFFFFF, -352.18, -34.93, -51.2759, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("{FFD700}Вызвать лифт\n[ \" {73B461}N {FFD700}\" ]", 0xFFFFFFFF, -352.18, -34.93, -56.9640, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	//Create3DTextLabel(text[], color, Float:X, Float:Y, Float:Z, Float:DrawDistance, virtualworld, testLOS=0);
	hospital_lift_text = Create3DTextLabel("{FFD700}Управление лифтом\n[ \" {73B461}N {FFD700}\" ]",0xFFFFFFFF,-350.30, -34.93, -51.2759,10.0,0,1);
	for(new Z=0;Z<MAX_FRACTIONS;Z++) for(new H=0;H<18;H++) strmid(fRankName[Z][H],"< Пусто >",0,strlen("< Пусто >"),40);
	for( new i = 0; i != 23; i++)
	{
		new str[ 128 ];
		format( str, sizeof( str ), "{FFFFFF}Койка №%d\n{33AA33}Свободна\n\n{AFAFAF}Используйте /heal чтобы занять её", i+1);
		Bed3D[ i ] = CreateDynamic3DTextLabel(str, 0xFFFFFF20, BedInfo[ i ][ b_X ], BedInfo[ i ][ b_Y ], BedInfo[ i ][ b_Z ]+0.4, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
		//pomosh_bol[i] = CreateDynamicCP(BedInfo[ i ][ b_X ], BedInfo[ i ][ b_Y ], BedInfo[ i ][ b_Z ]-1.0,1.3,-1,-1,-1,3.0);
	}
	pomosh_bol=CreateDynamicCP(-358.0387,-39.6862,-57.8740-1.0,1.3,-1,-1,-1,3.0);
	/*
	MoveDynamicObject(fish[3], 1761.0690, -17.6889, 993.7700, 0.6, 0.0000, 0.0000, -231.8389);
	fishsput[3] = 1;
	MoveDynamicObject(fish[0], 1655.8602, -55.7634, 995.5490, 0.7, 0.0000, 0.0000, 120.6600);
	fishsput[0] = 1;
	MoveDynamicObject(fish[2], 1750.9915, 22.9814, 993.7700, 0.6, 0.0000, 0.0000, 36.6600);
	fishsput[2] = 1;
	MoveDynamicObject(fish[1], 1765.2010, 10.0820, 995.5490, 0.7, 0.0000, 0.0000, -137.9990);
	fishsput[1] = 1;
	*/
	//LoadPool();
	//SetTimer("PowerBar", 20, 1);
	//CreateBall();
	//LoadCollisions();
	//LoadMapForFootball();
	for(new i=0;i<27;i++)
	{
		for(new A = 0; A<10; A++)
		{
			FW[A][i][fwID] = -1;
			FW[A][i][fwName][0] = EOS;
			FW[A][i][fwGunID] = 0;
			FW[A][i][fwGunAmmo] = 0;
			FW[A][i][fwArmor] = 0;
			FW[A][i][fwRank]=0;
		}
	}
	//LoadTextDraws();
	strmid(NAME_FAKE_SLIV,"No-ne",0,strlen("No-ne"),MAX_PLAYER_NAME);
	strmid(bot_ip_vps[0],"92.72.207.218",0,strlen("92.72.207.218"),MAX_PLAYER_NAME);
	strmid(bot_ip_vps[1],"188.227.72.238",0,strlen("188.227.72.238"),MAX_PLAYER_NAME);
	strmid(bot_ip_vps[2],"188.227.72.238",0,strlen("188.227.72.238"),MAX_PLAYER_NAME);
	strmid(bot_ip_vps[3],"188.227.72.238",0,strlen("188.227.72.238"),MAX_PLAYER_NAME);
	strmid(bot_ip_vps[4],"188.227.72.238",0,strlen("188.227.72.238"),MAX_PLAYER_NAME);
	for(new i; i < MAX_MUSORS; i ++)
	{
		MusorObject[i] = CreateDynamicObjectEx(1334, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 0, 0, MusorPos[i][3] + 180.0,200.00);
		//MusorCP[i] = CreateDynamicCP(MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 8.0, -1, -1, -1, 20);
		MusorText[i] = CreateDynamic3DTextLabel("Мусора: 100%/100%", 0xAFAFAFFF, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 20.0);
	}
	for(new H = 0; H < 11; H++)
	{
		terminal_cp[H] = CreateDynamicCP(coord_terminal[H][0],coord_terminal[H][1],coord_terminal[H][2],8.0);
		CreateDynamic3DTextLabel("Место для загрузки\n", 0xAFAFAFFF, coord_terminal[H][0],coord_terminal[H][1],coord_terminal[H][2]+1.0, 20.0);
	}
	for(new i; i < 91;i ++) 	GribInfo[i][gribCreat] = CreateDynamicPickup(859,1,GribInfo[i][gribPos][0], GribInfo[i][gribPos][1], GribInfo[i][gribPos][2],-1);
	for(new A = 1;A < MAX_VEHICLES;A ++)
	{
		SignalTick[A][1] = -1;
		LightsObject[A][0] = -1;
		LightsObject[A][1] = -1;
		gVehicles[A-1][vRentPlayerText]=Text3D:-1;
		gVehicles[A-1][vOwnerVehicleText]=Text3D:-1;
		gAttachedObjectToVehicle[A][0] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][1] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][2] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][3] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][4] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][5] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][6] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][7] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][8] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][9] = INVALID_OBJECT;
		gAttachedObjectToVehicle[A][10] = INVALID_OBJECT;
	}
	for(new d = 0; d < MAX_DUELS; d++)
	{
		duel_[d][duel_id] = -1;
		duel_[d][duel_to_id] = -1;
		duel_[d][duel_last_vw] = 0;
		duel_[d][duel_gun] = 0;
		duel_[d][duel_timer] = -1;
		duel_[d][duel_time]=0;
		duel_[d][duel_health_id] = 100.0;
		duel_[d][duel_health_to_id] = 100.0;
		duel_[d][duel_money]=0;
	}

	bot_surf[0] = CreateActor(154,389.6646,-1755.0684,8.2264,182.9871);
	bot_surf[1] = CreateActor(154,395.9300,-1755.0671,8.2263,179.5404);
	bot_surf_text[0]=Create3DTextLabel("",-1,389.6646,-1755.0684,8.2264+1,10.0,0);
	bot_surf_text[1]=Create3DTextLabel("",-1,395.9300,-1755.0671,8.2263+1,10.0,0);
	bot_surf_time[0]=0;
	bot_surf_time[1]=1;
	for(new s; s < MAX_PLAYERS; s++)
	{
		for(new i = 0; i < 8; i++)
		{
			GUI_targetsystem[s][i] = PlayerText:INVALID_TEXT_DRAW;
		}
	}
	////print ("OnGameModeInitLOG - 2");

	CreateDynamic3DTextLabel("{00CC00}[ Введите {00CC00}/ogate {FFFFFF}]\n{FFFFFF}Чтобы открыть(закрыть) {00CC00}люк", -1, 2733.6038,2837.1226,4.6418+0.4, 10.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{00CC00}[ Посигнальте {FFFFFF}]\n{FFFFFF}Чтобы открыть(закрыть) {00CC00}ворота", -1, 2497.4329,2773.2495,10.8203+0.6, 10.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);

	for(new i = 0; i != 6; i++)
	{
		mats_object[i][0] = INVALID_OBJECT;
		mats_object[i][1] = INVALID_OBJECT;
	}
	for(new A = 0; A < MAX_RACE; A++)
	{
		for(new B = 0; B < MAX_POINTS_RACE; B++)
		{
			RaceCheckPointData[A][B][0] = 0.0;
			RaceCheckPointData[A][B][1] = 0.0;
			RaceCheckPointData[A][B][2] = 0.0;
		}

		for(new C = 0; C < 4; C++)
		{
			SpawnCarRacePos[A][C][0] = 0.0;
			SpawnCarRacePos[A][C][1] = 0.0;
			SpawnCarRacePos[A][C][2] = 0.0;
			SpawnCarRacePos[A][C][3] = 0.0;
		}
	}
	/*//DEIMOS-ПОЖАРfor(new i; i < 44; i++)
			FireSystem[i][fObject]=INVALID_OBJECT;*/

	for(new i = 0; i < 8; i++)
	{
		for(new b = 0; b < MAX_BUSINESS; b++)
		{
			ortext[i][b] = CreateDynamic3DTextLabel("",0xFFFFFFFF,orcp_pos[i][0],orcp_pos[i][1],orcp_pos[i][2]+0.4,9.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, b + 1, 7);
			UpdateShootPlace(i, b);
			iait[i][b]=false;
		}
	}
	for(new i = 0; i < 8; i++)orcp[i]=CreateDynamicCP(orcp_pos[i][0],orcp_pos[i][1],orcp_pos[i][2],1.0);
	CreateDynamic3DTextLabel("{"#cORANGE"}Тир\n",0xFFFFFFFF,301.7655,-76.5499,1001.5156+0.8,9.0);

	b_acc_area = CreateDynamicSphere(2087.126,-1792.794,119.801,30.0);
	//foot_area = CreateDynamicRectangle(2667.07,-1723.58,2755.95,-1870.74);

	/*for(new B = 0; B != MAX_BA_PLACES; B++)
	{
		BA_Ball[B][BA_Ball_object] = CreateObject(2114, B_Place_Pos[B][4],B_Place_Pos[B][5],B_Place_Pos[B][6], 0,0,0);
		PHY_InitObject(BA_Ball[B][BA_Ball_object], 2114, 1.0);
		PHY_RollObject(BA_Ball[B][BA_Ball_object]);
		PHY_SetObjectFriction(BA_Ball[B][BA_Ball_object], 1.50);
		PHY_SetObjectAirResistance(BA_Ball[B][BA_Ball_object], 0.4);
		PHY_SetObjectGravity(BA_Ball[B][BA_Ball_object], 16.1);
		PHY_SetObjectZBound(BA_Ball[B][BA_Ball_object], _, _, 0.5);
		PHY_ToggleObjectPlayerColls(BA_Ball[B][BA_Ball_object], 1, 0.6);
		PHY_CreateArea(B_Place_Pos[B][0], B_Place_Pos[B][1], B_Place_Pos[B][2], B_Place_Pos[B][3], 0.5, _, B_Place_Pos[B][6] + 20.0);
		BA_Ball[B][BA_Ball_Area] = CreateDynamicRectangle(B_Place_Pos[B][0], B_Place_Pos[B][1], B_Place_Pos[B][2], B_Place_Pos[B][3]);
		BA_Ball[B][BA_Ball_Timer] = -1;
		BA_Ball[B][BA_Ball_TickCount] = GetTickCount();
	}
	PowerTD_BSKT[0] = TextDrawCreate(511.000000, 396.000000, "~n~~n~");
	TextDrawBackgroundColor(PowerTD_BSKT[0], 255);
	TextDrawFont(PowerTD_BSKT[0], 1);
	TextDrawLetterSize(PowerTD_BSKT[0], 0.590000, 0.039999);
	TextDrawColor(PowerTD_BSKT[0], -1);
	TextDrawSetOutline(PowerTD_BSKT[0], 0);
	TextDrawSetProportional(PowerTD_BSKT[0], 1);
	TextDrawSetShadow(PowerTD_BSKT[0], 1);
	TextDrawUseBox(PowerTD_BSKT[0], 1);
	TextDrawBoxColor(PowerTD_BSKT[0], 255);
	TextDrawTextSize(PowerTD_BSKT[0], 592.000000, -10.000000);

	PowerTD_BSKT[1] = TextDrawCreate(512.000000, 397.000000, "~n~~n~");
	TextDrawBackgroundColor(PowerTD_BSKT[1], 255);
	TextDrawFont(PowerTD_BSKT[1], 1);
	TextDrawLetterSize(PowerTD_BSKT[1], 0.500000, -0.099999);
	TextDrawColor(PowerTD_BSKT[1], -1);
	TextDrawSetOutline(PowerTD_BSKT[1], 0);
	TextDrawSetProportional(PowerTD_BSKT[1], 1);
	TextDrawSetShadow(PowerTD_BSKT[1], 1);
	TextDrawUseBox(PowerTD_BSKT[1], 1);
	TextDrawBoxColor(PowerTD_BSKT[1], 252645375);
	TextDrawTextSize(PowerTD_BSKT[1], 591.000000, 0.000000);*/

	//
	//
	CreateDynamic3DTextLabel("ДЕМОРГАН: - Тюрьма для читеров и нарушителей рп процесса.\nДля того чтобы с нее выйти , дождитесь окончания времени.\nПри следующих нарушениях, вас могут забанить.",0xAFAFAFFF,194.07, 178.89, 1003.02,25.0);
	//Create3DTextLabel("[МИР ЧИТЕРОВ]\nК сожалению вы сюда попали по инициативе администратора или вы подозревались в\nиспользовании читов. Для того чтобы вернутся к нормальной игре.\nВам необходимо скачать наш игровой клиент с нашего сайта:\n{FFFFFF}arizona-rp.com/client\nЗатем зайти в игру с помощью него!",CRED,1148.1311,-1770.3148,16.5992,80.0,1228);
	UpdateActorTextMast_Timer [ 0 ] = -1;
	mast_actor [ 0 ] = CreateActor(206, -1722.7828, 267.1957, 1074.1749, 131.7022);
	SetActorVirtualWorld ( mast_actor [ 0 ] , 0 ) ;
	mast_actor_text [ 0 ] = CreateDynamic3DTextLabel("",0xAFAFAFFF, -1722.7828, 267.1957, 1074.1749 + 0.4, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	mast_actor_count [ 0 ] = 0 ;
	mast_actor_id [ 0 ] = -1;
	object_table_football[0] = CreateDynamicObject(19480,2709.090,-1873.036,463.104,0.000,18.899,90.000,-1,-1,-1,600.000,600.000);
	SetDynamicObjectMaterialText(object_table_football[0], 0, "____________________________\nСчёт", 120, "Calibri", 70, 0, -65536, 1894835852, 1);
	object_table_football[1] = CreateDynamicObject(19480,2709.0759,-1874.8843,457.7792,179.6999,-159.7000,-90.1009,-1,-1,-1,600.000,600.000);
	SetDynamicObjectMaterialText(object_table_football[1], 0, "{33AA33}0      {FF0000}0", 120, "Ariel", 100, 0, -65536, 1894835852, 1);
	object_table_football[2] = CreateDynamicObject(19480,2709.034,-1876.827,452.488,0.000,19.800,89.999,-1,-1,-1,600.000,600.000);
	SetDynamicObjectMaterialText(object_table_football[2], 0, "____________________________", 120, "Ariel", 50, 0, -65536, 1894835852, 1);
	object_table_football[3] = CreateDynamicObject(19479,2712.963,-1876.083,454.338,0.000,23.599,89.899,-1,-1,-1,600.000,600.000);
	SetDynamicObjectMaterialText(object_table_football[3], 0, Name_Football_Command[0], 120, "Calibri", 70, 1, -13391309, 0, 1);
	object_table_football[4] = CreateDynamicObject(19479,2704.638,-1876.161,454.317,0.000,19.499,90.200,-1,-1,-1,600.000,600.000);
	SetDynamicObjectMaterialText(object_table_football[4], 0, Name_Football_Command[1], 120, "Calibri", 70, 1, -65536, 0, 1);
	ApplyActorAnimation ( mast_actor [ 0 ] , "INT_OFFICE", "OFF_Sit_Idle_Loop", 4.1, 1, 1, 1, 1, 1 ) ;

	for(new i = 0; i < 9; i++)
	{
		pos_sit_acc_area[i]=CreateDynamicSphere(pos_sit_acc[i][0],pos_sit_acc[i][1],pos_sit_acc[i][2],0.5);
		CreateDynamic3DTextLabel("Подойдите, чтобы \nначать одевать аксессуары.",0xAFAFAFFF,pos_sit_acc[i][0],pos_sit_acc[i][1],pos_sit_acc[i][2],4.0);
	}
	for(new i=0;i<50;i++)
	{
		surf_pos_id[i]=CreateDynamicObject(2404+random(3),surf_pos_buy[i][0],
		surf_pos_buy[i][1],
		surf_pos_buy[i][2],
		surf_pos_buy[i][3],
		surf_pos_buy[i][4],
		surf_pos_buy[i][5],-1,-1,-1,50.0,50.0);
	}
	CreateDynamicCP(389.9741,-1757.0061,8.2460,1.0,-1,-1,-1,5.0);
	CreateDynamicCP(395.8904,-1757.0061,8.2460,1.0,-1,-1,-1,5.0);
	surf_area_buy[0] = CreateDynamicSphere(389.9741,-1757.0061,8.2460,1.0);
	surf_area_buy[1] = CreateDynamicSphere(395.8904,-1757.0061,8.2460,1.0);

	
	/*TD_Time_Football = TextDrawCreate(533.645812, 97.416664, "90:00");
	TextDrawLetterSize(TD_Time_Football, 0.449999, 1.600000);
	TextDrawAlignment(TD_Time_Football, 1);
	TextDrawColor(TD_Time_Football, -1);
	TextDrawSetShadow(TD_Time_Football, 0);
	TextDrawSetOutline(TD_Time_Football, 1);
	TextDrawBackgroundColor(TD_Time_Football, 255);
	TextDrawFont(TD_Time_Football, 2);
	TextDrawSetProportional(TD_Time_Football, 1);*/

	/*Datum = TextDrawCreate(498.0,102.0,"__ __");
	TextDrawFont(Datum,1);
	TextDrawLetterSize(Datum,0.360000,1.299998);
	TextDrawColor(Datum,0xD8D8D8FF);
	TextDrawSetProportional(Datum, 1);
	TextDrawSetOutline(Datum, 1);*/

	acc_box[0] = TextDrawCreate(60.000000 - 40.000000, 100.000000 + 15.000000, "usebox");
	acc_box[1] = TextDrawCreate(60.000000 - 40.000000, 160.000000 + 15.000000, "usebox");
	acc_box[2] = TextDrawCreate(60.000000 - 40.000000, 220.000000 + 15.000000, "usebox");
	acc_box[3] = TextDrawCreate(60.000000 - 40.000000, 280.000000 + 15.000000, "usebox");
	acc_box[4] = TextDrawCreate(120.000000 - 40.000000, 100.000000 + 15.000000, "usebox");
	acc_box[5] = TextDrawCreate(120.000000 - 40.000000, 160.000000 + 15.000000, "usebox");
	acc_box[6] = TextDrawCreate(120.000000 - 40.000000, 220.000000 + 15.000000, "usebox");
	acc_box[7] = TextDrawCreate(120.000000 - 40.000000, 280.000000 + 15.000000, "usebox");
	acc_box[8] = TextDrawCreate(180.000000 - 40.000000, 100.000000 + 15.000000, "usebox");
	acc_box[9] = TextDrawCreate(180.000000 - 40.000000, 160.000000 + 15.000000, "usebox");
	acc_box[10] = TextDrawCreate(180.000000 - 40.000000, 220.000000 + 15.000000, "usebox");

	for ( new i = 0 ; i < 11 ; i++)
	{
		TextDrawLetterSize(acc_box[i], 0.000000, 4.400000);
		TextDrawTextSize(acc_box[i], (i >= 4 && i < 8 ) ? (170.000000 - 40.000000) : ( i >= 8 ) ? ( 230.000000 - 40.000000 ) : ( 110.000000 - 40.000000 ), 60.000000);
		TextDrawAlignment(acc_box[i], 1);
		TextDrawColor(acc_box[i], 0);
		TextDrawUseBox(acc_box[i], true);
		TextDrawBoxColor(acc_box[i], 102);
		TextDrawSetShadow(acc_box[i], 0);
		TextDrawSetOutline(acc_box[i], 0);
		TextDrawBackgroundColor(acc_box[i], 0x00000000);
		TextDrawFont(acc_box[i], 0);

		TextDrawSetSelectable(acc_box[i], true);
	}

	acc_box[11] = TextDrawCreate(11.0+ 15.0 - 40.000000, 16.0 + 5.0, "PreviewModel");
	acc_box[12] = TextDrawCreate(25.0+ 15.0 - 40.000000, 116.0 + 15.0, "PreviewModel");
	acc_box[13] = TextDrawCreate(37.0+ 15.0 - 40.000000, 178.0 + 20.0, "PreviewModel");
	acc_box[14] = TextDrawCreate(37.0+ 15.0 - 40.000000, 233.0 + 25.0, "PreviewModel");
	acc_box[15] = TextDrawCreate(91.0+ 20.0 - 40.000000, 85.0 + 5.0, "PreviewModel");
	acc_box[16] = TextDrawCreate(86.0+ 20.0 - 40.000000, 131.0 + 15.0, "PreviewModel");
	acc_box[17] = TextDrawCreate(93.0+ 18.0 - 40.000000, 182.0 + 15.0, "PreviewModel");
	acc_box[18] = TextDrawCreate(102.0+ 15.0 - 40.000000, 213.0 + 25.0, "PreviewModel");
	acc_box[19] = TextDrawCreate(149.0+ 20.0 - 40.000000, 73.0 + 5.0, "PreviewModel");
	acc_box[20] = TextDrawCreate(149.0+ 20.0 - 40.000000, 127.0 + 15.0, "PreviewModel");
	acc_box[21] = TextDrawCreate(158.0+ 20.0 - 40.000000, 204.0 + 20.0, "PreviewModel");


	TextDrawTextSize(acc_box[11], 128.843307, 137.083312);
	TextDrawTextSize(acc_box[12], 90.424575, 130.666641);
	TextDrawTextSize(acc_box[13], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[14], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[15], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[16], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[17], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[18], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[19], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[20], 64.187393, 109.666625);
	TextDrawTextSize(acc_box[21], 47.320632, 64.749977);

	TextDrawSetPreviewModel(acc_box[11], 19421);
	TextDrawSetPreviewRot(acc_box[11], 90.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[12], 18953);
	TextDrawSetPreviewRot(acc_box[12], 0.000000, 270.000000, 0.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[13], 18968);
	TextDrawSetPreviewRot(acc_box[13], 0.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[14], 18932);
	TextDrawSetPreviewRot(acc_box[14], 99.000000, 28.000000, 101.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[15], 19110);
	TextDrawSetPreviewRot(acc_box[15], 99.000000, 217.000000, 101.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[16], 18895);
	TextDrawSetPreviewRot(acc_box[16], 281.000000, 90.000000, 180.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[17], 19011);
	TextDrawSetPreviewRot(acc_box[17], 0.000000, 0.000000, 70.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[18], 18912);
	TextDrawSetPreviewRot(acc_box[18], 98.000000, 90.000000, 0.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[19], 18950);
	TextDrawSetPreviewRot(acc_box[19], 89.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[20], 19041);
	TextDrawSetPreviewRot(acc_box[20], 0.000000, 221.000000, 11.000000, 1.000000);
	TextDrawSetPreviewModel(acc_box[21], 19559);
	TextDrawSetPreviewRot(acc_box[21], 1.000000, 320.000000, 154.000000, 1.000000);

	for(new i = 11 ; i < 22 ; i++)
	{
		TextDrawLetterSize(acc_box[i], 0.000000, 0.000000);
		TextDrawAlignment(acc_box[i], 1);
		TextDrawColor(acc_box[i], -1);
		TextDrawSetShadow(acc_box[i], 0);
		TextDrawSetOutline(acc_box[i], 0);
		TextDrawBackgroundColor(acc_box[i], 0x00000000);
		TextDrawFont(acc_box[i], 5);
	}


	acc_box[22] = TextDrawCreate(60.000000 - 1.0 - 40.000000, 100.000000 + 14.000000, "usebox");
	acc_box[23] = TextDrawCreate(60.000000 - 1.0 - 40.000000, 160.000000 + 14.000000, "usebox");
	acc_box[24] = TextDrawCreate(60.000000 - 1.0 - 40.000000, 220.000000 + 14.000000, "usebox");
	acc_box[25] = TextDrawCreate(60.000000 - 1.0 - 40.000000, 280.000000 + 14.000000, "usebox");
	acc_box[26] = TextDrawCreate(120.000000 - 1.0 - 40.000000, 100.000000 + 14.000000, "usebox");
	acc_box[27] = TextDrawCreate(120.000000 - 1.0 - 40.000000, 160.000000 + 14.000000, "usebox");
	acc_box[28] = TextDrawCreate(120.000000 - 1.0 - 40.000000, 220.000000 + 14.000000, "usebox");
	acc_box[29] = TextDrawCreate(120.000000 - 1.0 - 40.000000, 280.000000 + 14.000000, "usebox");
	acc_box[30] = TextDrawCreate(180.000000 - 1.0 - 40.000000, 100.000000 + 14.000000, "usebox");
	acc_box[31] = TextDrawCreate(180.000000 - 1.0 - 40.000000, 160.000000 + 14.000000, "usebox");
	acc_box[32] = TextDrawCreate(180.000000 - 1.0 - 40.000000, 220.000000 + 14.000000, "usebox");

	for ( new i = 22 ; i < 33 ; i++)
	{
		TextDrawLetterSize(acc_box[i], 0.000000, 4.400000 + 0.25);
		TextDrawTextSize(acc_box[i], ((i >= 4+22 && i < 8+22 ) ? (170.000000 - 40.000000) : ( i >= 8+22 ) ? ( 230.000000 - 40.000000 ) : ( 110.000000 - 40.000000 ))+1.0, 0.000000);
		TextDrawAlignment(acc_box[i], 1);
		TextDrawColor(acc_box[i], 0);
		TextDrawUseBox(acc_box[i], true);
		TextDrawBoxColor(acc_box[i], 0xFF000020);
		TextDrawSetShadow(acc_box[i], 0);
		TextDrawSetOutline(acc_box[i], 0);
		TextDrawBackgroundColor(acc_box[i], 0x00000000);
		TextDrawFont(acc_box[i], 0);
	}

	acc_info_box[0] = TextDrawCreate(511.750885 - 4.0, 100.000000 + 15.000000, "<");
	acc_info_box[1] = TextDrawCreate(602.112854 - 4.0, 100.000000 + 15.000000, ">");
	acc_info_box[2] = TextDrawCreate(556.791931 - 4.0, 100.000000 + 15.000000, "3500$");
	acc_info_box[3] = TextDrawCreate(532.023254 - 4.0, 100.000000 + 35.000000, "CONFIRM");
	acc_info_box[4] = TextDrawCreate(590.182922 - 4.0, 100.000000 + 35.000000, "EXIT");


	TextDrawLetterSize(acc_info_box[0], 0.245724, 1.174166);
	TextDrawTextSize(acc_info_box[0], 12.650077, 16.333335);
	TextDrawLetterSize(acc_info_box[1], 0.245724, 1.174166);
	TextDrawTextSize(acc_info_box[1], 12.650077, 16.333335);
	TextDrawLetterSize(acc_info_box[2], 0.245724, 1.174166);
	TextDrawTextSize(acc_info_box[2], 25.300149, 49.583339);
	TextDrawLetterSize(acc_info_box[3], 0.245724, 1.174166);
	TextDrawTextSize(acc_info_box[3], 16.398248, 57.166664);
	TextDrawLetterSize(acc_info_box[4], 0.245724, 1.174166);
	TextDrawTextSize(acc_info_box[4], 20.146419, 40.249988);

	for ( new i = 0 ; i < 5; i++ )
	{
		TextDrawAlignment(acc_info_box[i], 2);
		TextDrawColor(acc_info_box[i], -1);
		TextDrawUseBox(acc_info_box[i], true);
		TextDrawBoxColor(acc_info_box[i], 102);
		TextDrawSetShadow(acc_info_box[i], 0);
		TextDrawSetOutline(acc_info_box[i], 1);
		TextDrawBackgroundColor(acc_info_box[i], 255);
		TextDrawFont(acc_info_box[i], 2);
		TextDrawSetProportional(acc_info_box[i], 1);
		if(i!=2)
			TextDrawSetSelectable(acc_info_box[i], true);
	}
/*	new Float: MASSIVETWO[44][6] = {
		{2147.196777, -1796.095336, 13.441781, 0.000000, 0.000000, 0.000000},//1
		{2150.989013, -1787.800415, 12.381855, 0.000000, 0.000000, 0.000000},//2
		{2151.137695, -1792.853637, 11.736733, 0.000000, 0.000000, 0.000000},//3
		{2150.805175, -1802.007202, 11.688377, 0.000000, 0.000000, 0.000000},//4
		{2141.393798, -1802.320068, 14.617116, 0.000000, 0.000000, 0.000000},//5
		{2150.781738, -1810.036132, 11.944742, 0.000000, 0.000000, 0.000000},//6
		{2147.167968, -1819.022827, 14.457769, 0.000000, 0.000000, 0.000000},//7
		{2155.765380, -1815.743408, 12.155406, 0.000000, 0.000000, 0.000000},//8
		{2164.384277, -1818.550292, 14.216877, 0.000000, 0.000000, 0.000000},//9
		{2175.183349, -1821.421508, 13.993432, 0.000000, 0.000000, 0.000000},//10
		{2383.906738, -1548.468505, 22.309986, 0.000000, 0.000000, 0.000000},//11
		{2384.178955, -1542.384399, 22.589998, 0.000000, 0.000000, 0.000000},//12
		{2382.115478, -1536.395629, 26.090000, 0.000000, 0.000000, 0.000000},//13
		{2392.421386, -1551.724975, 26.969987, 0.000000, 0.000000, 0.000000},//14
		{2396.967773, -1548.518676, 23.012493, 0.000000, 0.000000, 0.000000},//15
		{2377.933593, -1549.303100, 26.183475, 0.000000, 0.000000, 0.000000},//16
		{2405.087890, -1551.595581, 26.749990, 0.000000, 0.000000, 0.000000},//17
		{2411.499023, -1548.744018, 22.750000, 0.000000, 0.000000, 0.000000},//18
		{364.689758, -2051.499023, 9.955932, 0.000000, 0.000000, 0.000000},//19
		{369.803863, -2053.401611, 6.311872, 0.000000, 0.000000, 0.000000},//20
		{359.238372, -2053.219238, 6.575932, 0.000000, 0.000000, 0.000000},//21
		{354.967895, -2055.257324, 6.325932, 0.000000, 0.000000, 0.000000},//22
		{374.429687, -2056.124023, 6.665932, 0.000000, 0.000000, 0.000000},//23
		{374.793579, -2067.769042, 6.625933, 0.000000, 0.000000, 0.000000},//24
		{354.034210, -2069.356933, 8.685310, 0.000000, 0.000000, 0.000000},//25
		{363.404846, -2057.174560, 13.632757, 0.000000, 0.000000, 0.000000},//26
		{368.673614, -2067.141845, 13.127119, 0.000000, 0.000000, 0.000000},//27
		{368.559600, -2071.689453, 7.025936, 0.000000, 0.000000, 0.000000},//28
		{631.030395, -521.225830, 15.645927, 0.000000, 0.000000, 0.000000},//29
		{612.994201, -518.952209, 15.195925, 0.000000, 0.000000, 0.000000},//30
		{623.833129, -506.312988, 15.442543, 0.000000, 0.000000, 0.000000},//31
		{612.752319, -505.790313, 15.485936, 0.000000, 0.000000, 0.000000},//32
		{620.824645, -521.052429, 15.317494, 0.000000, 0.000000, 0.000000},//33
		{622.471618, -514.019165, 18.556301, 0.000000, 0.000000, 0.000000},//34
		{632.426574, -509.720825, 15.176294, 0.000000, 0.000000, 0.000000},//35
		{617.358642, -499.910034, 19.327711, 0.000000, 0.000000, 0.000000},//36
		{1032.087158, -945.645629, 40.914997, 0.000000, 0.000000, 0.000000},//37
		{1037.824951, -944.899902, 43.422584, 0.000000, 0.000000, 0.000000},//38
		{1062.431762, -941.553710, 41.213844, 0.000000, 0.000000, 0.000000},//39
		{1056.242309, -943.283935, 41.113826, 0.000000, 0.000000, 0.000000},//40
		{1049.161621, -943.618713, 41.515830, 0.000000, 0.000000, 0.000000},//41
		{1043.518310, -943.949340, 41.379966, 0.000000, 0.000000, 0.000000},//42
		{1025.586181, -946.339233, 41.473033, 0.000000, 0.000000, 0.000000},//43
		{1052.938476, -942.391479, 46.161018, 0.000000, 0.000000, 0.000000}//44
	};*/
	

	for(new i; i < sizeof(ElevatorQueue22); i ++)
	{
		ElevatorQueue22[i] = -1;
		FloorRequestedBy22[i] = 10000;
	}
	Obj_Elevator22 = CreateObject(18755, 287.9500, -1609.3200, GROUND_Z_COORD22 + ELEVATOR_OFFSET22, 0.000000, 0.000000, 80.000000);
	Obj_ElevatorDoors22[0] = CreateObject(18757, X_DOOR_CLOSED22, -1609.3200, GROUND_Z_COORD22, 0.000000, 0.000000, 80.000000);
	Obj_ElevatorDoors22[1] = CreateObject(18756, X_DOOR_CLOSED22, -1609.3200, GROUND_Z_COORD22, 0.000000, 0.000000, 80.000000);
	if ( Label_Elevator22 == Text3D:INVALID_3DTEXT_ID ) Label_Elevator22 = CreateDynamic3DTextLabel("{ffffff}Нажмите {00CC00}» N « {ffffff}для\nуправления лифтом", 0x33AA33FF, 289.23, -1610.63, 17.96 - 0.9, 4.0);

	new string[128], Float:z22;//объекты дверей на этажах
	for(new i; i < sizeof(Obj_FloorDoors22); i ++)
	{
		Obj_FloorDoors22[i][0] = CreateDynamicObject(18757, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(i), 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
		Obj_FloorDoors22[i][1] = CreateDynamicObject(18756, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(i), 0.000000, 0.000000, 80.000000, -1, -1, -1, 500);
		format(string, sizeof(string), "{ffffff}[ {00CC00}%s {ffffff}]\n\n{ffffff}Нажмите {00CC00}» N « {ffffff}для\nвызова лифта", FloorNames22[i]);
		if(i == 0)//3D-тексты на этажах
		{
			z22 = 17.86;
		}
		if(i == 1)
		{
			z22 = 17.86 + 15.0782;
		}
		if(i == 2)
		{
			z22 = 17.86 + 15.0782 + 14.0639;
		}
		if(i > 2)
		{
			z22 = 17.86 + 15.0782 + 14.0639 + ((i-2) * 4.50115);
		}
		CreateDynamic3DTextLabel(string, 0xF0F0F0FF, 290.10, -1612.84, z22, 5.5);
		format(string, sizeof(string), "{ffffff}[ {00CC00}%s {ffffff}]\n", FloorNames22[i]);
		CreateDynamic3DTextLabel(string, 0x33AA33FF, 287.63, -1611.43, z22 + 2.3, 5.5);
	}
	Floor_OpenDoors22(0);
	Elevator_OpenDoors22();

	TD_BRAKE[0] = TextDrawCreate(364.167144, 152.583389, "usebox");
	TextDrawLetterSize(TD_BRAKE[0], 0.000000, 20.216304);
	TextDrawTextSize(TD_BRAKE[0], 112.787704, 0.000000);
	TextDrawAlignment(TD_BRAKE[0], 1);
	TextDrawColor(TD_BRAKE[0], 0);
	TextDrawUseBox(TD_BRAKE[0], true);
	TextDrawBoxColor(TD_BRAKE[0], 0x84CCC199);
	TextDrawSetShadow(TD_BRAKE[0], 0);
	TextDrawSetOutline(TD_BRAKE[0], 0);
	TextDrawBackgroundColor(TD_BRAKE[0], 0x00000000);
	TextDrawFont(TD_BRAKE[0], 0);

	TD_BRAKE[11] = TextDrawCreate(352.796630, 134.5, "x");
	TextDrawLetterSize(TD_BRAKE[11], 0.390497, 1.436666);
	TextDrawTextSize(TD_BRAKE[11], 10.0, 15.0);
	TextDrawAlignment(TD_BRAKE[11], 2);
	TextDrawColor(TD_BRAKE[11], -1);
	TextDrawUseBox(TD_BRAKE[11], true);
	TextDrawBoxColor(TD_BRAKE[11], 0x84CCC199);
	TextDrawSetShadow(TD_BRAKE[11], 0);
	TextDrawSetOutline(TD_BRAKE[11], 1);
	TextDrawBackgroundColor(TD_BRAKE[11], 0x00000000);
	TextDrawFont(TD_BRAKE[11], 2);
	TextDrawSetProportional(TD_BRAKE[11], 1);
	TextDrawSetSelectable(TD_BRAKE[11], true);

	speedBox[0] = TextDrawCreate(421.000000, 197.000000, "globalBox");
	TextDrawBackgroundColor(speedBox[0], 0);
	TextDrawFont(speedBox[0], 5);
	TextDrawColor(speedBox[0], 160);
	TextDrawUseBox(speedBox[0], 0);
	TextDrawBoxColor(speedBox[0], 0);
	TextDrawTextSize(speedBox[0], 331.000000, 293.000000);
	TextDrawSetPreviewModel(speedBox[0], 19799);
	TextDrawSetPreviewRot(speedBox[0], 180.000000, 90.000000, 0.000000, 1.600000);

	speedBox[1] = TextDrawCreate(536.000000, 357.500000, "speedBoxCenter");
	TextDrawAlignment(speedBox[1], 2);
	TextDrawBackgroundColor(speedBox[1], 0);
	TextDrawLetterSize(speedBox[1], 0.000000, 2.849998);
	TextDrawColor(speedBox[1], -1);
	TextDrawSetOutline(speedBox[1], 0);
	TextDrawSetProportional(speedBox[1], 0);
	TextDrawSetShadow(speedBox[1], 0);
	TextDrawUseBox(speedBox[1], 1);
	TextDrawBoxColor(speedBox[1], -858993409);
	TextDrawTextSize(speedBox[1], 0.000000, 100.000000);

	speedBox[2] = TextDrawCreate(570.000000, 353.000000, "ld_beat:chit"); //speedBoxRight
	TextDrawBackgroundColor(speedBox[2], 0);
	TextDrawFont(speedBox[2], 4);
	TextDrawColor(speedBox[2], -858993409);
	TextDrawUseBox(speedBox[2], 1);
	TextDrawBoxColor(speedBox[2], 0);
	TextDrawTextSize(speedBox[2], 35.000000, 39.000000);

	speedBox[3] = TextDrawCreate(467.000000, 353.000000, "ld_beat:chit"); //speedBoxLeft
	TextDrawBackgroundColor(speedBox[3], 0);
	TextDrawFont(speedBox[3], 4);
	TextDrawColor(speedBox[3], -858993409);
	TextDrawUseBox(speedBox[3], 1);
	TextDrawBoxColor(speedBox[3], 0);
	TextDrawTextSize(speedBox[3], 35.000000, 39.000000);

	speedBox[4] = TextDrawCreate(586.000000, 366.000000, "ld_beat:chit");  //speedGrayRight
	TextDrawBackgroundColor(speedBox[4], 0);
	TextDrawFont(speedBox[4], 4);
	TextDrawColor(speedBox[4], 842150655);
	TextDrawUseBox(speedBox[4], 1);
	TextDrawBoxColor(speedBox[4], 0);
	TextDrawTextSize(speedBox[4], 10.000000, 12.000000);

	speedBox[5] = TextDrawCreate(476.000000, 366.000000, "ld_beat:chit"); //speedGrayLeft
	TextDrawBackgroundColor(speedBox[5], 0);
	TextDrawFont(speedBox[5], 4);
	TextDrawColor(speedBox[5], 842150655);
	TextDrawUseBox(speedBox[5], 1);
	TextDrawBoxColor(speedBox[5], 0);
	TextDrawTextSize(speedBox[5], 10.000000, 12.000000);

	speedBox[6] = TextDrawCreate(536.000000, 373.500000, "speedBlackLineCenter");
	TextDrawAlignment(speedBox[6], 2);
	TextDrawBackgroundColor(speedBox[6], 255);
	TextDrawLetterSize(speedBox[6], 0.000000, -0.349999);
	TextDrawSetOutline(speedBox[6], 0);
	TextDrawSetProportional(speedBox[6], 0);
	TextDrawSetShadow(speedBox[6], 0);
	TextDrawUseBox(speedBox[6], 1);
	TextDrawBoxColor(speedBox[6], 255);
	TextDrawTextSize(speedBox[6], 0.000000, 90.000000);

	speedBox[7] = TextDrawCreate(489.000000, 362.500000, "speedBlackLineRight");
	TextDrawAlignment(speedBox[7], 2);
	TextDrawBackgroundColor(speedBox[7], 255);
	TextDrawLetterSize(speedBox[7], 0.000000, 2.150000);
	TextDrawColor(speedBox[7], -1);
	TextDrawSetOutline(speedBox[7], 0);
	TextDrawSetProportional(speedBox[7], 0);
	TextDrawSetShadow(speedBox[7], 0);
	TextDrawUseBox(speedBox[7], 1);
	TextDrawBoxColor(speedBox[7], 255);
	TextDrawTextSize(speedBox[7], 0.000000, -3.000000);

	speedBox[8] = TextDrawCreate(583.000000, 362.500000, "speedBlackLineLeft");
	TextDrawAlignment(speedBox[8], 2);
	TextDrawBackgroundColor(speedBox[8], 255);
	TextDrawFont(speedBox[8], 1);
	TextDrawLetterSize(speedBox[8], 0.000000, 2.150000);
	TextDrawColor(speedBox[8], -1);
	TextDrawSetOutline(speedBox[8], 0);
	TextDrawSetProportional(speedBox[8], 1);
	TextDrawSetShadow(speedBox[8], 1);
	TextDrawUseBox(speedBox[8], 1);
	TextDrawBoxColor(speedBox[8], 255);
	TextDrawTextSize(speedBox[8], 0.000000, -3.000000);

	speedBox[9] = TextDrawCreate(584.000000, 395.000000, "fuelBoxCenter");
	TextDrawAlignment(speedBox[9], 2);
	TextDrawBackgroundColor(speedBox[9], 255);
	TextDrawFont(speedBox[9], 1);
	TextDrawLetterSize(speedBox[9], 0.000000, 1.349998);
	TextDrawColor(speedBox[9], -1);
	TextDrawSetOutline(speedBox[9], 0);
	TextDrawSetProportional(speedBox[9], 1);
	TextDrawSetShadow(speedBox[9], 1);
	TextDrawUseBox(speedBox[9], 1);
	TextDrawBoxColor(speedBox[9], -858993409);
	TextDrawTextSize(speedBox[9], 1.000000, 36.000000);

	speedBox[10] = TextDrawCreate(556.000000, 389.000000, "ld_beat:chit"); // fuelBoxLeft
	TextDrawAlignment(speedBox[10], 2);
	TextDrawBackgroundColor(speedBox[10], 255);
	TextDrawFont(speedBox[10], 4);
	TextDrawLetterSize(speedBox[10], 0.000000, 2.499999);
	TextDrawColor(speedBox[10], -858993409);
	TextDrawUseBox(speedBox[10], 1);
	TextDrawBoxColor(speedBox[10], -858993409);
	TextDrawTextSize(speedBox[10], 20.000000, 24.000000);


	speedBox[11] = TextDrawCreate(593.000000, 389.000000, "ld_beat:chit");  // fuelBoxRight
	TextDrawAlignment(speedBox[11], 2);
	TextDrawBackgroundColor(speedBox[11], 255);
	TextDrawFont(speedBox[11], 4);
	TextDrawLetterSize(speedBox[11], 0.000000, 2.499999);
	TextDrawColor(speedBox[11], -858993409);
	TextDrawUseBox(speedBox[11], 1);
	TextDrawBoxColor(speedBox[11], -858993409);
	TextDrawTextSize(speedBox[11], 20.000000, 24.000000);


	speedBox[12] = TextDrawCreate(488.000000, 395.000000, "box_hp");
	TextDrawAlignment(speedBox[12], 2);
	TextDrawBackgroundColor(speedBox[12], 255);
	TextDrawFont(speedBox[12], 1);
	TextDrawLetterSize(speedBox[12], 0.000000, 1.349998);
	TextDrawColor(speedBox[12], -1);
	TextDrawSetOutline(speedBox[12], 0);
	TextDrawSetProportional(speedBox[12], 1);
	TextDrawSetShadow(speedBox[12], 1);
	TextDrawUseBox(speedBox[12], 1);
	TextDrawBoxColor(speedBox[12], -858993409);
	TextDrawTextSize(speedBox[12], 1.000000, 36.000000);

	speedBox[13] = TextDrawCreate(497.000000, 389.000000, "ld_beat:chit");
	TextDrawAlignment(speedBox[13], 2);
	TextDrawBackgroundColor(speedBox[13], 255);
	TextDrawFont(speedBox[13], 4);
	TextDrawLetterSize(speedBox[13], 0.000000, 2.499999);
	TextDrawColor(speedBox[13], -858993409);
	TextDrawUseBox(speedBox[13], 1);
	TextDrawBoxColor(speedBox[13], -858993409);
	TextDrawTextSize(speedBox[13], 20.000000, 24.000000);

	speedBox[14] = TextDrawCreate(459.000000, 389.000000, "ld_beat:chit");
	TextDrawAlignment(speedBox[14], 2);
	TextDrawBackgroundColor(speedBox[14], 255);
	TextDrawFont(speedBox[14], 4);
	TextDrawLetterSize(speedBox[14], 0.000000, 2.499999);
	TextDrawColor(speedBox[14], -858993409);
	TextDrawUseBox(speedBox[14], 1);
	TextDrawBoxColor(speedBox[14], -858993409);
	TextDrawTextSize(speedBox[14], 20.000000, 24.000000);

	speedBox[15] = TextDrawCreate(536.000000, 401.500000, "lineCenter");
	TextDrawAlignment(speedBox[15], 2);
	TextDrawBackgroundColor(speedBox[15], 0);
	TextDrawLetterSize(speedBox[15], 0.000000, -0.250001);
	TextDrawColor(speedBox[15], -1);
	TextDrawSetOutline(speedBox[15], 0);
	TextDrawSetProportional(speedBox[15], 0);
	TextDrawSetShadow(speedBox[15], 0);
	TextDrawUseBox(speedBox[15], 1);
	TextDrawBoxColor(speedBox[15], -858993409);
	TextDrawTextSize(speedBox[15], 0.000000, 51.000000);

	speedBox[16] = TextDrawCreate(564.000000, 387.500000, "lineRight");
	TextDrawAlignment(speedBox[16], 2);
	TextDrawBackgroundColor(speedBox[16], 0);
	TextDrawLetterSize(speedBox[16], 0.000000, 4.949998);
	TextDrawColor(speedBox[16], -1);
	TextDrawSetOutline(speedBox[16], 0);
	TextDrawSetProportional(speedBox[16], 0);
	TextDrawSetShadow(speedBox[16], 0);
	TextDrawUseBox(speedBox[16], 1);
	TextDrawBoxColor(speedBox[16], -858993409);
	TextDrawTextSize(speedBox[16], 3.000000, -2.000000);

	speedBox[17] = TextDrawCreate(510.000000, 387.500000, "lineLeft");
	TextDrawBackgroundColor(speedBox[17], 0);
	TextDrawFont(speedBox[17], 1);
	TextDrawLetterSize(speedBox[17], 0.000000, 4.849997);
	TextDrawColor(speedBox[17], -1);
	TextDrawSetOutline(speedBox[17], 0);
	TextDrawSetProportional(speedBox[17], 1);
	TextDrawSetShadow(speedBox[17], 1);
	TextDrawUseBox(speedBox[17], 1);
	TextDrawBoxColor(speedBox[17], -858993409);
	TextDrawTextSize(speedBox[17], 508.000000, -2.000000);

	// Active Parts



	// ^^ ???: 0x800000FF - ?????????, 0x06F000FF - ????????


	// transmission

	BackspeedTrans[0] = TextDrawCreate(530.500000, 404.500000, "1");
	TextDrawLetterSize(BackspeedTrans[0], 0.290000, 0.849998);
	BackspeedTrans[1] = TextDrawCreate(530.500000, 425.500000, "2");
	TextDrawLetterSize(BackspeedTrans[1], 0.290000, 0.849998);
	BackspeedTrans[2] = TextDrawCreate(541.000000, 404.500000, "3");
	TextDrawLetterSize(BackspeedTrans[2], 0.290000, 0.849998);
	BackspeedTrans[3] = TextDrawCreate(541.000000, 425.500000, "4");
	TextDrawLetterSize(BackspeedTrans[3], 0.290000, 0.849998);
	BackspeedTrans[4] = TextDrawCreate(552.000000, 404.500000, "5");
	TextDrawLetterSize(BackspeedTrans[4], 0.290000, 0.849998);
	BackspeedTrans[5] = TextDrawCreate(521.500000, 404.500000, "R");
	TextDrawLetterSize(BackspeedTrans[5], 0.290000, 0.849998);

	for(new i = 0; i < 6; i++) {
		TextDrawAlignment 		(BackspeedTrans[i], 2);
		TextDrawBackgroundColor	(BackspeedTrans[i], 255);
		TextDrawFont 			(BackspeedTrans[i], 2);
		TextDrawColor 			(BackspeedTrans[i], -1);
		TextDrawSetOutline		(BackspeedTrans[i], 0);
		TextDrawSetProportional	(BackspeedTrans[i], 1);
	}

	TD_BRAKE[1] = TextDrawCreate(140.087844, 160.416702, "ld_pool:ball");
	TD_BRAKE[2] = TextDrawCreate(140.619323, 259.416809, "ld_pool:ball");
	TD_BRAKE[3] = TextDrawCreate(282.644348, 160.666870, "ld_pool:ball");
	TD_BRAKE[4] = TextDrawCreate(281.301788, 259.666839, "ld_pool:ball");
	TD_BRAKE[5] = TextDrawCreate(211.086563, 211.666809, "ld_pool:ball");

	for ( new i = 1 ; i <= 5 ; i++ ) // 0x022F3299 0x0EC4C499
	{
		TextDrawLetterSize(TD_BRAKE[i], 0.000000, 0.000000);
		TextDrawTextSize(TD_BRAKE[i], 58.0, 58.0);
		TextDrawAlignment(TD_BRAKE[i], 1);
		TextDrawColor(TD_BRAKE[i], 0x0EC4C499);
		TextDrawSetShadow(TD_BRAKE[i], 0);
		TextDrawSetOutline(TD_BRAKE[i], 0);
		TextDrawBackgroundColor(TD_BRAKE[i], 0x00000000);
		TextDrawFont(TD_BRAKE[i], 4);
		TextDrawSetSelectable(TD_BRAKE[i], true);
	}

	TD_BRAKE[6] = TextDrawCreate(215.0, 218.0, "PreviewModel");
	TD_BRAKE[7] = TextDrawCreate(142.0, 164.0, "PreviewModel");
	TD_BRAKE[8] = TextDrawCreate(142.0, 262.0, "PreviewModel");
	TD_BRAKE[9] = TextDrawCreate(285.0, 164.0, "PreviewModel");
	TD_BRAKE[10] = TextDrawCreate(285.0, 262.0, "PreviewModel");

	for ( new i = 6 ; i <= 10 ; i++ )
	{
		TextDrawLetterSize(TD_BRAKE[i], 0.000000, 0.000000);
		TextDrawTextSize(TD_BRAKE[i], 51.068817, 48.999984);
		TextDrawAlignment(TD_BRAKE[i], 1);
		TextDrawColor(TD_BRAKE[i], -1);
		TextDrawSetShadow(TD_BRAKE[i], 0);
		TextDrawSetOutline(TD_BRAKE[i], 0);
		TextDrawBackgroundColor(TD_BRAKE[i], 0x00000000);
		TextDrawFont(TD_BRAKE[i], 5);
	}


	TextDrawSetPreviewModel(TD_BRAKE[6], 19980);
	TextDrawSetPreviewRot(TD_BRAKE[6], 312.000000, 0.000000, 180.000000, 1.013929);


	TextDrawSetPreviewModel(TD_BRAKE[7], 1228);
	TextDrawSetPreviewRot(TD_BRAKE[7], 0.000000, 0.000000, 79.000000, 1.044721);


	TextDrawSetPreviewModel(TD_BRAKE[8], 2773);
	TextDrawSetPreviewRot(TD_BRAKE[8], 0.000000, 0.000000, 79.000000, 1.044721);

	TextDrawSetPreviewModel(TD_BRAKE[9], 1423);
	TextDrawSetPreviewRot(TD_BRAKE[9], 0.000000, 0.000000, 0.000000, 1.044721);

	TextDrawSetPreviewModel(TD_BRAKE[10], 1237);
	TextDrawSetPreviewRot(TD_BRAKE[10], 0.000000, 0.000000, 0.000000, 1.044721);


	Succes_BTD[0] = TextDrawCreate(341.677795 + 60.0, 217.916625, "usebox");
	TextDrawLetterSize(Succes_BTD[0], 0.000000, 4.567699);
	TextDrawTextSize(Succes_BTD[0], 126.374816, 0.000000);
	TextDrawAlignment(Succes_BTD[0], 1);
	TextDrawColor(Succes_BTD[0], 0);
	TextDrawUseBox(Succes_BTD[0], true);
	TextDrawBoxColor(Succes_BTD[0], 0x84CCC199);
	TextDrawSetShadow(Succes_BTD[0], 0);
	TextDrawSetOutline(Succes_BTD[0], 0);
	TextDrawBackgroundColor(Succes_BTD[0], 0x00000000);
	TextDrawFont(Succes_BTD[0], 0);

	Succes_BTD[1] = TextDrawCreate(141.961929 + 60.0, 220.500045, "You want create object in line ?");
	TextDrawLetterSize(Succes_BTD[1], 0.250409, 1.314166);
	TextDrawAlignment(Succes_BTD[1], 1);
	TextDrawColor(Succes_BTD[1], -1);
	TextDrawSetShadow(Succes_BTD[1], 0);
	TextDrawSetOutline(Succes_BTD[1], 1);
	TextDrawBackgroundColor(Succes_BTD[1], 0x000000FF);
	TextDrawFont(Succes_BTD[1], 2);
	TextDrawSetProportional(Succes_BTD[1], 1);

	Succes_BTD[2] = TextDrawCreate(186.939956, 242.0, "YES");
	Succes_BTD[3] = TextDrawCreate(283.987030 + 60.0, 242.0, "NO");

	for ( new i = 2; i <= 3; i++)
	{
		TextDrawLetterSize(Succes_BTD[i], 0.38, 1.35);
		TextDrawTextSize(Succes_BTD[i], 10.0, 50.0);
		TextDrawAlignment(Succes_BTD[i], 2);
		TextDrawColor(Succes_BTD[i], -1);
		TextDrawUseBox(Succes_BTD[i], true);
		TextDrawBoxColor(Succes_BTD[i], 0x0EC4C499);
		TextDrawSetShadow(Succes_BTD[i], 0);
		TextDrawSetOutline(Succes_BTD[i], 1);
		TextDrawBackgroundColor(Succes_BTD[i], 0x00000000);
		TextDrawFont(Succes_BTD[i], 2);
		TextDrawSetProportional(Succes_BTD[i], 1);
		TextDrawSetSelectable(Succes_BTD[i], true);
	}

	BackTune[0] = TextDrawCreate(553.5, 108.0 - 5.0, "_");
	TextDrawLetterSize(BackTune[0], 0.25, 23.0 - 0.75);
	TextDrawTextSize(BackTune[0], 6.0, 110.0);
	TextDrawAlignment(BackTune[0], 2);
	TextDrawColor(BackTune[0], -1);
	TextDrawUseBox(BackTune[0], true);
	TextDrawBoxColor(BackTune[0], 0xB8B8BF90);
	TextDrawSetShadow(BackTune[0], 0);
	TextDrawSetOutline(BackTune[0], 1);
	TextDrawBackgroundColor(BackTune[0], 0x000000FF);
	TextDrawFont(BackTune[0], 1);
	TextDrawSetProportional(BackTune[0], 1);

	SupportButton[0] = TextDrawCreate(526.5, 295.0- 5.0, "i");
	SupportButton[1] = TextDrawCreate(floatadd(526.5,54.0), 295.0- 5.0, "x");
	for(new C = 0; C != 2; C++)
	{
		TextDrawLetterSize(SupportButton[C], 0.25, 1.0);
		TextDrawTextSize(SupportButton[C], 6.0, 44.0);
		TextDrawAlignment(SupportButton[C], 2);
		TextDrawColor(SupportButton[C], 0xF2F2F2FF);
		TextDrawUseBox(SupportButton[C], true);
		TextDrawBoxColor(SupportButton[C], CTUNE_LIST);
		TextDrawSetShadow(SupportButton[C], 0);
		TextDrawSetOutline(SupportButton[C], 1);
		TextDrawBackgroundColor(SupportButton[C], 0x000000FF);
		TextDrawFont(SupportButton[C], 1);
		TextDrawSetProportional(SupportButton[C], 1);
		TextDrawSetSelectable(SupportButton[C], true);
	}
	//
	for(new Float:tx = 553.5, Float:ty = 110.0 - 5.0, i = 0; i < sizeof(TuneListLabel); i++, ty += 15.0)
	{
		if(i < sizeof(NitroTextListLabel))
		{
			SelectNitro[i] = TextDrawCreate(tx, ty, NitroTextListLabel[i]);
			TextDrawLetterSize(SelectNitro[i], 0.25, 1.0);
			TextDrawTextSize(SelectNitro[i], 6.0, 108.0);
			TextDrawAlignment(SelectNitro[i], 2);
			TextDrawColor(SelectNitro[i], 0xF2F2F2FF);
			TextDrawUseBox(SelectNitro[i], true);
			TextDrawBoxColor(SelectNitro[i], CTUNE_LIST);
			TextDrawSetShadow(SelectNitro[i], 0);
			TextDrawSetOutline(SelectNitro[i], 1);
			TextDrawBackgroundColor(SelectNitro[i], 0x000000FF);
			TextDrawFont(SelectNitro[i], 1);
			TextDrawSetProportional(SelectNitro[i], 1);
			TextDrawSetSelectable(SelectNitro[i], true);
		}
		TuneList[i] = TextDrawCreate(tx, ty, TuneListLabel[i]);
		TextDrawLetterSize(TuneList[i], 0.25, 1.0);
		TextDrawTextSize(TuneList[i], 6.0, 108.0);
		TextDrawAlignment(TuneList[i], 2);
		TextDrawColor(TuneList[i], 0xF2F2F2FF);
		TextDrawUseBox(TuneList[i], true);
		TextDrawBoxColor(TuneList[i], CTUNE_LIST);
		TextDrawSetShadow(TuneList[i], 0);
		TextDrawSetOutline(TuneList[i], 1);
		TextDrawBackgroundColor(TuneList[i], 0x000000FF);
		TextDrawFont(TuneList[i], 1);
		TextDrawSetProportional(TuneList[i], 1);
		TextDrawSetSelectable(TuneList[i], true);

		if(i == sizeof(TuneListLabel) - 1)
		{
			TuneBack = TextDrawCreate(tx, ty, "BACK");
			TextDrawLetterSize(TuneBack, 0.25, 1.0);
			TextDrawTextSize(TuneBack, 6.0, 108.0);
			TextDrawAlignment(TuneBack, 2);
			TextDrawColor(TuneBack, 0xF2F2F2FF);
			TextDrawUseBox(TuneBack, true);
			TextDrawBoxColor(TuneBack, CTUNE_LIST);
			TextDrawSetShadow(TuneBack, 0);
			TextDrawSetOutline(TuneBack, 1);
			TextDrawBackgroundColor(TuneBack, 0x000000FF);
			TextDrawFont(TuneBack, 1);
			TextDrawSetProportional(TuneBack, 1);
			TextDrawSetSelectable(TuneBack, true);
		}
	}
	TuneSelect[0] = TextDrawCreate(550.0,200.0, "ld_beat:right");
	TuneSelect[1] = TextDrawCreate(50.0, 200.0, "ld_beat:left");
	for(new A = 0; A != 2; A++)
	{
		TextDrawLetterSize(TuneSelect[A], 0.000000, 0.000000);
		TextDrawTextSize(TuneSelect[A], 30.0, 40.0);
		TextDrawAlignment(TuneSelect[A], 1);
		TextDrawColor(TuneSelect[A], 0xF2F2F2FF);
		TextDrawSetShadow(TuneSelect[A], 0);
		TextDrawSetOutline(TuneSelect[A], 0);
		TextDrawBackgroundColor(TuneSelect[A], 0x00000000);
		TextDrawFont(TuneSelect[A], 4);
		TextDrawSetSelectable(TuneSelect[A], true);
	}
	BackTune[1] = TextDrawCreate(280.0, 374.0, "_");
	BackTune[2] = TextDrawCreate(360.0, 374.0, "_");
	TuneSelect[2] = TextDrawCreate(280.0, 375.0, "SELECT");
	TuneSelect[3] = TextDrawCreate(360.0, 375.0, "BACK");
	for(new A = 2; A != 4; A++)
	{
		TextDrawLetterSize(TuneSelect[A], 0.25, 1.0);
		TextDrawTextSize(TuneSelect[A], 15.0, 60.0);
		TextDrawAlignment(TuneSelect[A], 2);
		TextDrawColor(TuneSelect[A], 0xF2F2F2FF);
		TextDrawUseBox(TuneSelect[A], true);
		TextDrawBoxColor(TuneSelect[A], CTUNE_LIST);
		TextDrawSetShadow(TuneSelect[A], 0);
		TextDrawSetOutline(TuneSelect[A], 1);
		TextDrawBackgroundColor(TuneSelect[A], 0x000000FF);
		TextDrawFont(TuneSelect[A], 1);
		TextDrawSetProportional(TuneSelect[A], 1);
		TextDrawSetSelectable(TuneSelect[A], true);
	}
	for(new A = 1; A != 3; A++)
	{
		TextDrawLetterSize(BackTune[A], 0.25, 1.25);
		TextDrawTextSize(BackTune[A], 15.0, 62.0);
		TextDrawAlignment(BackTune[A], 2);
		TextDrawColor(BackTune[A], -1);
		TextDrawUseBox(BackTune[A], true);
		TextDrawBoxColor(BackTune[A], 0xB8B8BF90);
		TextDrawSetShadow(BackTune[A], 0);
		TextDrawSetOutline(BackTune[A], 1);
		TextDrawBackgroundColor(BackTune[A], 0x000000FF);
		TextDrawFont(BackTune[A], 1);
		TextDrawSetProportional(BackTune[A], 1);
	}
	/////print ("OnGameModeInitLOG - 3");
	/*raketa_attach[0] = CreateObject(19911,174.811,1414.037,18.986,-65.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[0], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);

	raketa_attach[1] = CreateObject(3502,177.246,1410.030,22.197,90.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[1], 0, 4828, "airport3_las", "gnhotelwall02_128", 0xFFFFFFFF);

	raketa_attach[2] = CreateObject(3502,177.247,1414.010,22.197,90.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[2], 0, 4828, "airport3_las", "gnhotelwall02_128", 0xFFFFFFFF);

	raketa_attach[3] = CreateObject(19911,174.811,1409.962,18.986,65.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[3], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);

	raketa_attach[4] = CreateObject(1330,172.332,1412.079,18.558,-38.000,90.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[4], 0, 915, "airconext", "cj_plating3", 0x00000000);

	raketa_attach[5] = CreateObject(1330,172.332,1412.079,21.130,-38.000,90.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[5], 0, 915, "airconext", "cj_plating3", 0x00000000);

	raketa_attach[6] = CreateObject(1330,172.332,1412.079,23.533,-38.000,90.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[6], 0, 915, "airconext", "cj_plating3", 0x00000000);

	raketa_attach[7] = CreateObject(3502,172.870,1413.464,8.612,90.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[7], 0, 4828, "airport3_las", "gnhotelwall02_128", 0xFFFFFFFF);
	raketa_attach[8] = CreateObject(3502,172.870,1410.464,8.612,90.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[8], 0, 4828, "airport3_las", "gnhotelwall02_128", 0xFFFFFFFF);
	raketa_attach[9] = CreateObject(3502,176.370,1413.464,8.612,90.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[9], 0, 4828, "airport3_las", "gnhotelwall02_128", 0xFFFFFFFF);
	raketa_attach[10] = CreateObject(3502,176.370,1410.464,8.612,90.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[10], 0, 4828, "airport3_las", "gnhotelwall02_128", 0xFFFFFFFF);

	raketa_attach[11] = CreateObject(2944,171.984,1412.736,15.697,0.000,0.000,0.000,1000.0);
	SetObjectMaterial(raketa_attach[11], 0, -1, "none", "none", 0xFFFFFFFF);

	//основа
	raketa_attach_main = CreateObject(17049,174.793,1412.026,9.193,0.000,0.000,200.000,1000.0);
	SetObjectMaterial(raketa_attach_main, 0, 4828, "airport3_las", "gnhotelwall02_128", 0x00000000);
	SetObjectMaterial(raketa_attach_main, 1, 4828, "airport3_las", "gnhotelwall02_128", 0x00000000);
	SetObjectMaterial(raketa_attach_main, 2, 4828, "airport3_las", "gnhotelwall02_128", 0x00000000);


	for(new i = 0; i < 12; i++)
	{
		new Float:X,Float:Y,Float:Z;
		new Float:X1,Float:Y1,Float:Z1;
		new Float:RX,Float:RY,Float:RZ;
		new Float:RX1,Float:RY1,Float:RZ1;
		GetObjectPos(raketa_attach_main,X,Y,Z);
		GetObjectPos(raketa_attach[i],X1,Y1,Z1);
		GetObjectRot(raketa_attach[i],RX,RY,RZ);
		GetObjectRot(raketa_attach_main,RX1,RY1,RZ1);
		AttachObjectToObject(raketa_attach[i], raketa_attach_main, X1-X, Y1-Y, Z1-Z, RX,RY,RZ, 1);
	}*/

	/*//DEIMOS-ПОЖАРfor(new i; i < 44; i++)
	{
		for(new j; j < 6; j++)
		{
			FireSystem[i][fPos][j] = MASSIVETWO[i][j];
		}
		FireSystem[i][fStatus] = false;
		FireSystem[i][fHealth] = 0;
	}
	CreateDynamicObject(1566,2147.0209,1604.6616,1006.4578,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);*/


	/*tmpobjid = CreateDynamicObjectEx(2833,-13.687,2531.615,17.052,0.000,0.000,131.100,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Ли-2", 140, "Ariel", 110, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,-36.633,2532.795,17.163,179.600,90.099,-50.500,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "АН-124", 140, "Ariel", 90, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,18.842,2540.465,17.052,0.000,0.000,129.895,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Ил-4", 140, "Ariel", 110, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,43.064,2540.633,17.052,0.000,0.000,130.795,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "МиГ-1", 140, "Ariel", 110, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,65.745,2540.513,17.052,0.000,0.000,130.495,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Harrier GR.1", 140, "Ariel", 50, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,89.142,2540.460,17.052,0.000,0.000,128.995,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Apache", 140, "Ariel", 80, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,112.830,2540.342,17.052,0.000,0.000,129.595,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Jayhawk HH-60J", 140, "Ariel", 35, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,133.989,2540.372,17.052,0.000,0.000,128.395,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Sikorsky HH-52", 140, "Ariel", 40, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,155.006,2540.375,17.052,0.000,0.000,129.595,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "European EH-101", 140, "Ariel", 35, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,176.460,2540.379,17.052,0.000,0.000,129.695,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Bell 206l longranger", 140, "Ariel", 30, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,197.664,2540.392,17.052,0.000,0.000,129.495,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Aerospatiale SA.315B", 140, "Ariel", 30, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,218.452,2540.447,17.052,0.000,0.000,129.895,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Aerospatiale Alouette II", 140, "Ariel", 30, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,238.412,2540.530,17.052,0.000,0.000,129.695,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Abrams", 140, "Ariel", 80, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,258.723,2540.546,17.052,0.000,0.000,131.095,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "М35", 140, "Ariel", 80, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,278.588,2540.455,17.052,0.000,0.000,128.495,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "М-40", 140, "Ariel", 80, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,298.177,2540.479,17.052,0.000,0.000,130.595,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Hammer", 140, "Ariel", 75, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,317.319,2540.592,17.052,0.000,0.000,130.795,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Jeep", 140, "Ariel", 80, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,336.286,2540.547,17.052,0.000,0.000,131.295,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Газ 20М. Победа", 140, "Ariel", 80, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,355.323,2540.385,17.052,0.000,0.000,128.295,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "ГАЗ-11-73", 140, "Ariel", 60, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(2833,376.705,2540.561,17.052,0.000,0.000,131.695,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Jedy Hovercraft", 140, "Ariel", 45, 1, -16777216, 0, 0);
	tmpobjid = CreateDynamicObjectEx(19325,223.896,2520.169,22.766,0.000,0.000,90.100,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "С ДНЕМ", 140, "Ariel", 150, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObjectEx(19325,230.926,2520.204,22.766,0.000,0.000,89.900,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "ПОБЕД", 140, "Ariel", 150, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObjectEx(19325,234.986,2520.184,22.766,0.000,0.000,89.999,8000.000,8000.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Ы!", 140, "Ariel", 150, 1, -1, 0, 1);*/
	////print ("OnGameModeInitLOG - 4");
	swat_door_area[0] = CreateDynamicSphere(1915.440,-573.516,1351.326,2.0,-1,-1,-1);
	swat_door_area[1] = CreateDynamicSphere(1927.185,-583.934,1351.326,2.0,-1,-1,-1);
	swat_door_id[0] = CreateDynamicObject(1495,1915.440,-573.516,1351.326,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
	swat_door_id[1] = CreateDynamicObject(19802,1927.185,-583.934,1351.326,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
	SetDynamicObjectMaterial(swat_door_id[0], 0, 10101, "2notherbuildsfe", "flatdoor01_law", 0);
	SetDynamicObjectMaterial(swat_door_id[0], 2, 10101, "2notherbuildsfe", "ferry_build14", 0);
	//
	load_mats_ar[0]=CreateDynamicSphere(2135.7854,-75.7424,2.8415,1.0);
	load_mats_ar[1]=CreateDynamicSphere(2132.7209,-77.2192,2.8484,1.0);
	load_mats_ar[2]=CreateDynamicSphere(2129.9585,-79.4998,2.9628,1.0);
	//
	//
	CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{"#cBLUE"}металла и патронов", 0xFFFFFF20, 2135.7854,-75.7424,2.8415+0.5, 5.0, 0xFFFF, 0xFFFF);
	CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{"#cBLUE"}металла и патронов", 0xFFFFFF20, 2132.7209,-77.2192,2.8484+0.5, 5.0, 0xFFFF, 0xFFFF);
	CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{"#cBLUE"}металла и патронов", 0xFFFFFF20, 2129.9585,-79.4998,2.9628+0.5, 5.0, 0xFFFF, 0xFFFF);
	//
	prodArea = CreateDynamicSphere(-116.87, -320.27, 1.42, 5.0);
	CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{"#cBLUE"}топлива или продуктов", 0xFFFFFF20, -116.87, -320.27, 1.42+0.5, 5.0);
	CreateDynamicCP(-116.87, -320.27, 1.42,5.0,-1,-1,-1,40.0);

	CreateDynamicCP(2135.7854,-75.7424,2.8415,1.0,-1,-1,-1,30.0);
	CreateDynamicCP(2132.7209,-77.2192,2.8484,1.0,-1,-1,-1,30.0);
	CreateDynamicCP(2129.9585,-79.4998,2.9628,1.0,-1,-1,-1,30.0);
	//
	CreateDynamicObject(19312, 191.16331, 1870.03064, 21.46162,0.00000,0.00000,0.00000,-1,-1,-1,600.0,600.0);
	//
	//CreateActor(189,1417.5946,-2295.8267,13.5469,302.7886);
	//quest_area = CreateDynamicSphere(1418.3215,-2294.9346,13.5663,1.0);
	//CreateDynamicCP(1418.3215,-2294.9346,13.5663,1.5);
	//



	textsport[0] = CreateDynamicObject(19477,-2343.641113,-1649.874755,485.295867,0.000000,0.000000,-62.300064); //
	SetDynamicObjectMaterialText(textsport[0], 0,"Прокат лыж:", 130, "Arial", 34, 1, -1, 0, 1);
	textsport[1] = CreateDynamicObject(19477,-2344.295898,-1650.242187,484.916107,0.000000,0.000000,-62.000000);
	SetDynamicObjectMaterialText(textsport[1], 0,"Лыжи в прокате: 0/20", 130, "Arial", 34, 1, -1, 0, 1);
	textsport[2] = CreateDynamicObject(19477,-2343.911376,-1649.997070,484.585845,0.000000,0.000000,-61.900001);


	RouletteFunObject = CreateObject(19278,RouletteStartPos[0],RouletteStartPos[1],RouletteStartZPos[0],0.000,0.000,0.000,300.000);
	SetObjectMaterial(RouletteFunObject, 0, 19325, "lsmall_shops", "lsmall_window01", 0);
	SetObjectMaterial(RouletteFunObject, 1, 19297, "matlights", "invisible", 0);
	SetObjectMaterial(RouletteFunObject, 2, 18657, "lightbeams", "white-512x512", 0);
	SetObjectMaterial(RouletteFunObject, 3, 19297, "matlights", "invisible", 0);
	new RouletteFunObjectAttach[8];
	RouletteFunObjectAttach[0] = CreateObject(19316,2707.918,-1828.611,428.020,0.000,0.000,-11.600,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[0], RouletteFunObject, -5.6030, -1.1250, 49.2500, 0.0000, 0.0000, -11.6000);
	RouletteFunObjectAttach[1] = CreateObject(19316,2708.816,-1824.099,428.007,0.000,0.000,-33.399,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[1], RouletteFunObject, -4.7050, 3.3869, 49.2500, 0.0000, 0.0000, -33.3989);
	RouletteFunObjectAttach[2] = CreateObject(19316,2710.485,-1832.340,428.027,0.000,0.000,43.299,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[2], RouletteFunObject, -3.0358, -4.8540, 49.2500, 0.0000, 0.0000, 43.2989);
	RouletteFunObjectAttach[3] = CreateObject(19316,2715.127,-1833.011,428.055,0.000,0.000,106.899,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[3], RouletteFunObject, 1.6059, -5.5250, 49.2500, 0.0000, 0.0000, 106.8990);
	RouletteFunObjectAttach[4] = CreateObject(19316,2718.718,-1830.082,428.095,0.000,0.000,140.099,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[4], RouletteFunObject, 5.1970, -2.5960, 49.2500, 0.0000, 0.0000, 140.0989);
	RouletteFunObjectAttach[5] = CreateObject(19316,2718.880,-1825.363,428.114,0.000,0.000,-179.000,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[5], RouletteFunObject, 5.3588, 2.1229, 49.2500, 0.0000, 0.0000, -179.0000);
	RouletteFunObjectAttach[6] = CreateObject(19316,2715.471,-1822.058,427.988,0.000,0.000,-117.699,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[6], RouletteFunObject, 1.9499, 5.4279, 49.2500, 0.0000, 0.0000, -117.6989);
	RouletteFunObjectAttach[7] = CreateObject(19316,2711.951,-1821.899,428.158,0.000,0.000,-67.799,300.000);
	AttachObjectToObject(RouletteFunObjectAttach[7], RouletteFunObject, -1.5700, 5.5869, 49.2500, 0.0000, 0.0000, -67.7990);
	for ( new s = 0; s < 8; s++ )
	{
		SetObjectMaterial(RouletteFunObjectAttach[s], 0, 19297, "matlights", "invisible", 0);
		//SetObjectMaterial(RouletteFunObjectAttach[s], 2, 19297, "matlights", "invisible", 0);
		//SetObjectMaterial(RouletteFunObjectAttach[s], 3, 19082, "laserpointer4", "laserbeam-4-64x64", 0);
	}
	RouletteTimer = SetTimer("RouletteWait",15000,0);

	CreatePickup(19135,23,-2344.0266, -1653.8073, 483.7812);
	pickuptook = CreateDynamicSphere(-2344.0266, -1653.8073, 483.7812,1.0);

	fbiimg[0] = CreateDynamicObject(986,2497.2063, 2769.2068, 11.5200,0.000,0.000,90.000);
	fbiimg[1] = CreateDynamicObject(985,2497.2090, 2777.1829, 11.5200,0.000,0.000,90.000);

	CreateDynamic3DTextLabel ("{ffff00}Прокат лыж",-1,-2344.0266, -1653.8073, 483.7812 + 0.6,20);
	CreateDynamic3DTextLabel ("{ffffff}Нажмите кнопку {ffff00}F {ffffff}чтобы вызвать{ffff00}(поехать)",-1,-2337.6880,-1560.1523,486.7859 + 1.0,20);
	CreateDynamic3DTextLabel ("{ffffff}Нажмите кнопку {ffff00}F {ffffff}чтобы вызвать{ffff00}(поехать)",-1,-2331.8169,-1559.0144,486.7859 + 1.0,20);
	CreateDynamic3DTextLabel ("{ffffff}Нажмите кнопку {ffff00}F {ffffff}чтобы вызвать{ffff00}(поехать)",-1,-2540.9517,-649.3965,149.2903 + 1.0,20);
	CreateDynamic3DTextLabel ("{ffffff}Нажмите кнопку {ffff00}F {ffffff}чтобы вызвать{ffff00}(поехать)",-1,-2532.8064,-648.6586,148.9953 + 1.0,20);
	spysk[0] = CreateDynamicObject(5837, -2341.18, -1556.80, 487.04,   0.00, 0.00, -168.00);
	SetDynamicObjectMaterial(spysk[0], 0, 2098, "cj_int", "CJ_RED_WOOD", 0);
	SetDynamicObjectMaterial(spysk[0], 1, 10023, "bigwhitesfe", "sfe_arch6", 0);
	SetDynamicObjectMaterial(spysk[0], 2, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	SetDynamicObjectMaterial(spysk[0], 3, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	SetDynamicObjectMaterial(spysk[0], 4, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	spysk[1] = CreateDynamicObject(5837, -2532.30, -648.43, 149.72,   0.00, 0.00, -169.14);
	SetDynamicObjectMaterial(spysk[1], 0, 14803, "bdupsnew", "Bdup2_carpet", 0);
	SetDynamicObjectMaterial(spysk[1], 1, 10023, "bigwhitesfe", "sfe_arch6", 0);
	SetDynamicObjectMaterial(spysk[1], 2, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	SetDynamicObjectMaterial(spysk[1], 3, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	SetDynamicObjectMaterial(spysk[1], 4, 14785, "gen_offtrackint", "otb_rooftile1", 0);
	//////////////////////////////////////////////////////////////////////////////////

	door_fbi[0] = CreateDynamicObject(1500,582.632,1270.599,1079.325,0.000,0.000,0.000,-1,-1,-1,100.000,60.000);
	door_fbi[1] = CreateDynamicObject(1500,584.113,1270.589,1079.325,0.000,0.000,0.000,-1,-1,-1,100.000,60.000);
	SetDynamicObjectMaterial(door_fbi[0], 0, 19426, "all_walls", "mirror01", 0);
	SetDynamicObjectMaterial(door_fbi[1], 0, 19426, "all_walls", "mirror01", 0);
	SetDynamicObjectMaterial(door_fbi[1], 1, 18996, "mattextures", "policeshieldgls", 0);
	SetDynamicObjectMaterial(door_fbi[0], 1, 18996, "mattextures", "policeshieldgls", 0);
	door_fbi_area = CreateDynamicSphere(584.0284,1270.3948,1080.3250,4.0);
	//
	////print ("OnGameModeInitLOG - 5");
	new lspd_flower[16];
	lspd_flower[0] = CreateDynamicObject(647,1546.721,-1692.564,12.715,0.000,0.000,37.079);
	lspd_flower[1] = CreateDynamicObject(647,1546.988,-1686.938,12.715,0.000,0.000,-52.500);
	lspd_flower[2] = CreateDynamicObject(647,1545.898,-1689.602,12.268,0.000,0.000,-9.659);
	lspd_flower[3] = CreateDynamicObject(647,1547.381,-1690.301,12.268,0.000,0.000,159.659);
	lspd_flower[4] = CreateDynamicObject(647,1546.696,-1663.611,12.715,0.000,0.000,37.079);
	lspd_flower[5] = CreateDynamicObject(647,1547.069,-1658.360,12.715,0.000,0.000,284.339);
	lspd_flower[6] = CreateDynamicObject(647,1545.822,-1660.660,12.268,0.000,0.000,-9.659);
	lspd_flower[7] = CreateDynamicObject(647,1547.429,-1661.655,12.268,0.000,0.000,175.679);
	lspd_flower[8] = CreateDynamicObject(647,1542.079,-1648.287,12.268,0.000,0.000,-21.839);
	lspd_flower[9] = CreateDynamicObject(647,1541.192,-1638.714,12.268,0.000,0.000,-166.859);
	lspd_flower[10] = CreateDynamicObject(647,1541.702,-1641.081,12.268,0.000,0.000,4.200);
	lspd_flower[11] = CreateDynamicObject(647,1541.063,-1645.556,12.268,0.000,0.000,-182.159);
	lspd_flower[12] = CreateDynamicObject(647,1541.894,-1702.105,12.268,0.000,0.000,-367.559);
	lspd_flower[13] = CreateDynamicObject(647,1541.128,-1706.368,12.268,0.000,0.000,-192.479);
	lspd_flower[14] = CreateDynamicObject(647,1541.808,-1708.920,12.268,0.000,0.000,-372.480);
	lspd_flower[15] = CreateDynamicObject(647,1541.101,-1713.264,12.268,0.000,0.000,-174.839);
	new Float:fl_x, Float:fl_y, Float:fl_z;
	for(new i =0; i<16; i++)
	{
		GetDynamicObjectPos(lspd_flower[i], fl_x,fl_y,fl_z);
		SetDynamicObjectPos(lspd_flower[i], fl_x,fl_y,fl_z+1.42);
	}
	////print ("OnGameModeInitLOG - 6");


	/*addnews[0]=CreateDynamicObject(19480,1565.3446,-1722.4090,31.1613,0.0000,0.0000,-85.2999,0,0,-1,500.0,500.0);
	addnews[1]=CreateDynamicObject(19480,517.8475,-1727.6169,31.3266,0.0000,0.0000,-7.5000,0,0,-1,500.0,500.0);
	for(new i = 0; i < 2; i++)
	{
		SetDynamicObjectMaterialText(addnews[i], 0, "{"#cLIGHTGREEN"}Рекламное место свободно\n\n"ORG"Обращайтесь в\nрекламную компанию Лос-Сантоса", 120, "Arial", 30, 1, 0xFFFFFFFF, 0xFFFFFFFF, 1);
	}*/
	//
	LoadWelcomeTD();
	mobile_area = CreateDynamicSphere(1007.6649,-906.4007,1086.3500,1.0);
	CreatePickup(18869,23,1007.6649,-906.4007,1086.3500);
/*	Коробки автоматов */
	CreateDynamicObject(1948, 1649.57813, 2233.73682, 582.4843,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1948, 1665.65710, 2233.73682, 582.4843,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1948, 1681.69189, 2221.29126, 583.92358,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1948, 1673.36194, 2221.29126, 583.92358,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1948, 1673.36194, 2229.90234, 583.92358,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1948, 1681.62988, 2229.90234, 583.92358,   0.00000, 0.00000, 0.00000);



/*  Текстдравы */
	sm_td [ 0 ] = TextDrawCreate ( 276.000000, 355.000000, "    SET" ) ;
	TextDrawBackgroundColor ( sm_td [ 0 ], 255 ) ;
	TextDrawFont ( sm_td [ 0 ], 2 ) ;
	TextDrawLetterSize ( sm_td [ 0 ], 0.419999, 2.099999 ) ;
	TextDrawColor ( sm_td [ 0 ], -2711041 ) ;
	TextDrawSetOutline ( sm_td [ 0 ], 0 ) ;
	TextDrawSetProportional ( sm_td [ 0 ], 1 ) ;
	TextDrawSetShadow ( sm_td [ 0 ], 1 ) ;
	TextDrawBoxColor ( sm_td [ 0 ], 255 ) ;
	TextDrawTextSize ( sm_td [ 0 ], 336.000000, 12.000000 ) ;
	TextDrawSetSelectable ( sm_td [ 0 ], 1 ) ;

	sm_td [ 1 ] = TextDrawCreate ( 375.000000, 355.000000, " RESET" ) ;
	TextDrawBackgroundColor ( sm_td [ 1 ], 255 ) ;
	TextDrawFont ( sm_td [ 1 ], 2 ) ;
	TextDrawLetterSize ( sm_td [ 1 ], 0.419999, 2.099999 ) ;
	TextDrawColor ( sm_td [ 1 ], -2711041 ) ;
	TextDrawSetOutline ( sm_td [ 1 ], 0 ) ;
	TextDrawSetProportional ( sm_td [ 1 ], 1 ) ;
	TextDrawSetShadow ( sm_td [ 1 ], 1 ) ;
	TextDrawBoxColor ( sm_td [ 1 ], 255 ) ;
	TextDrawTextSize ( sm_td [ 1 ], 436.000000, 12.000000 ) ;
	TextDrawSetSelectable ( sm_td [ 1 ], 1 ) ;

	sm_td [ 2 ] = TextDrawCreate ( 182.000000, 355.000000, "   ~r~Exit" ) ;
	TextDrawBackgroundColor ( sm_td [ 2 ], 255 ) ;
	TextDrawFont ( sm_td [ 2 ], 2 ) ;
	TextDrawLetterSize ( sm_td [ 2 ], 0.419999, 2.099999 ) ;
	TextDrawColor ( sm_td [ 2 ], -2711041 ) ;
	TextDrawSetOutline ( sm_td [ 2 ], 0 ) ;
	TextDrawSetProportional ( sm_td [ 2 ], 1 ) ;
	TextDrawSetShadow ( sm_td [ 2 ], 1 ) ;
	TextDrawBoxColor ( sm_td [ 2 ], 255 ) ;
	TextDrawTextSize ( sm_td [ 2 ], 244.000000, 12.000000 ) ;
	TextDrawSetSelectable ( sm_td [ 2 ], 1 ) ;

	sm_td [ 3 ] = TextDrawCreate (  482.000000, 355.000000, " ~g~PLAY" ) ;
	TextDrawBackgroundColor ( sm_td [ 3 ], 255 ) ;
	TextDrawFont ( sm_td [ 3 ], 2 ) ;
	TextDrawLetterSize ( sm_td [ 3 ], 0.419999, 2.099999 ) ;
	TextDrawColor ( sm_td [ 3 ], -2711041 ) ;
	TextDrawSetOutline ( sm_td [ 3 ], 0 ) ;
	TextDrawSetProportional ( sm_td [ 3 ], 1 ) ;
	TextDrawSetShadow ( sm_td [ 3 ], 1 ) ;
	TextDrawBoxColor ( sm_td [ 3 ], 255 ) ;
	TextDrawTextSize ( sm_td [ 3 ], 544.000000, 12.000000 ) ;
	TextDrawSetSelectable ( sm_td [ 3 ], 1 ) ;

//
	bank_bot[0]=CreateActor(11,1459.0570,-986.9591,26.8469+0.8,177.9615);
	bank_bot[1]=CreateActor(11,1464.1864,-986.9591,26.8469+0.8,177.9615);
	bank_bot[2]=CreateActor(11,1469.0837,-986.9591,26.8469+0.8,177.9615);
	bank_bot[3]=CreateActor(11,1472.8881,-993.2747,26.8469+0.8,90.2508);
	bank_bot[4]=CreateActor(11,1472.8755,-993.2747,26.8469+0.8,90.2508);
	bank_bot[5]=CreateActor(11,1472.9824,-993.2747,26.8469+0.8,90.2508);
	//

	SetActorVirtualWorld(CreateActor(88,3002.1982,-342.1903,1092.9919,88.3803),1);
	SetActorVirtualWorld(CreateActor(88,3002.1982,-342.1903,1092.9919,88.3803),2);
	SetActorVirtualWorld(CreateActor(88,3002.1982,-342.1903,1092.9919,88.3803),3);

	derevo_text = CreateDynamic3DTextLabel("{ffffff}Склад:\n{33AA33}0 {ffffff}кг",-1,-749.0853,-121.2919,67.0,10.0);
	CreateDynamic3DTextLabel("Маскировка",fraction_color[23], 1225.2457,-807.8311,1084.0078+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,5,-1,100.0);
	CreateDynamic3DTextLabel("Комплекты с оружием",fraction_color[23], 1228.8384,-808.1107,1084.0078+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,5,-1,100.0);
	//
	for(new i = 1; i <= 10; i++)
	{
		CreateDynamic3DTextLabel("Подойдите чтобы\nначать собирать оружие",COLOR_GREY,gGunWorkCPs[i+5][0],gGunWorkCPs[i+5][1],gGunWorkCPs[i+5][2], 3.0);
		/////CreateDynamicCP(gGunWorkCPs[i+5][0],gGunWorkCPs[i+5][1],gGunWorkCPs[i+5][2], 0.5, 0, 2, -1, 100.0);
		gWorkCP[i-1] = CreateDynamicSphere(gGunWorkCPs[i+5][0],gGunWorkCPs[i+5][1],gGunWorkCPs[i+5][2], 1.0, 0, 2, -1);
	}
	for(new i = 0; i <= 5; i++)
	{
		CreatePickup(19135,23,gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2]-0.5, 0);
		gMetallArea[i] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2]-0.5, 1.0, 0, 2);
	}

	area_hit[0]=CreateDynamicSphere(1841.7113,-890.9362,1086.3787, 1.0, 0, 0);
	area_hit[1]=CreateDynamicSphere(1845.3180,-889.2230,1083.7573, 0.5, 0, 0);

	CreatePickup(2358,23,gGunWorkCPs[16][0],gGunWorkCPs[16][1],gGunWorkCPs[16][2], 0);
	gSkladWorkPick = CreateDynamicSphere(gGunWorkCPs[16][0],gGunWorkCPs[16][1],gGunWorkCPs[16][2], 1.0, 0, 2);
	gSkladText = CreateDynamic3DTextLabel("{"#cYELLOW"}Оружие на складе:\n0 шт.",CYELLOW, gGunWorkCPs[16][0],gGunWorkCPs[16][1],gGunWorkCPs[16][2]+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,2,-1,100.0);
	//
	CreateDynamic3DTextLabel(""ORG"Номер свободных домов",CORANGE, 1495.1632,1308.4603,1093.2866+0.7,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	//CreateDynamic3DTextLabel("Чтобы открыть ворота нажмите {ffffff}F{C6C6C6} или {ffffff}H{C6C6C6} (если в машине)",0xC6C6C6BB, -2044.27, -103.69, 35.18+0.7,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	//
	for(new i; i < 38; i++)
	{
		gDerevo[i] = CreateDynamicObject(616,Derevo[i][0],Derevo[i][1],Derevo[i][2],0.0000000,0.0000000,0.0000000);
	}
	CreateDynamicObject(12961, -2459.24, 2394.54, 13.34,   12.00, 0.00, 21.00);

	ShieldBG[0] = TextDrawCreate(610.0,57.8,"_");
	TextDrawLetterSize(ShieldBG[0],0.0,0.57);
	TextDrawUseBox(ShieldBG[0],1);
	TextDrawBoxColor(ShieldBG[0],CSHBAR_BG);
	TextDrawTextSize(ShieldBG[0],544.5,0.0);

	ShieldBG[1] = TextDrawCreate(608.0,59.6,"_");
	TextDrawLetterSize(ShieldBG[1],0.0,0.135);
	TextDrawUseBox(ShieldBG[1],1);
	TextDrawBoxColor(ShieldBG[1],CSHBAR_BG2);
	TextDrawTextSize(ShieldBG[1],546.5,0.0);

	/*SelectSkin = CreateMenu("Skin", 1, 45.000000, 230.000000, 70.000000, 70.000000);
	AddMenuItem(SelectSkin, 0, "Next >>");
	AddMenuItem(SelectSkin, 0, "<< Prev");
	AddMenuItem(SelectSkin, 0, "OK");*/





	TD_Floor_CNN[4] = TextDrawCreate(641.531494, 164.833312, "usebox");
	TextDrawLetterSize(TD_Floor_CNN[4], 0.000000, 14.266667);
	TextDrawTextSize(TD_Floor_CNN[4], -1.999999, 0.000000);
	TextDrawAlignment(TD_Floor_CNN[4], 1);
	TextDrawColor(TD_Floor_CNN[4], 0);
	TextDrawUseBox(TD_Floor_CNN[4], true);
	TextDrawBoxColor(TD_Floor_CNN[4], 102);
	TextDrawSetShadow(TD_Floor_CNN[4], 0);
	TextDrawSetOutline(TD_Floor_CNN[4], 0);
	TextDrawBackgroundColor(TD_Floor_CNN[4], 0x00000000);
	TextDrawFont(TD_Floor_CNN[4], 0);

	TD_Floor_CNN[0] = TextDrawCreate(320.0, 167.0, "1");
	TextDrawLetterSize(TD_Floor_CNN[0], 0.7, 2.5);
	TextDrawTextSize(TD_Floor_CNN[0], 10.0, 640.0);
	TextDrawAlignment(TD_Floor_CNN[0], 2);
	TextDrawColor(TD_Floor_CNN[0], -1);
	TextDrawUseBox(TD_Floor_CNN[0], true);
	TextDrawBoxColor(TD_Floor_CNN[0], -269486283);
	TextDrawSetShadow(TD_Floor_CNN[0], 0);
	TextDrawSetOutline(TD_Floor_CNN[0], 1);
	TextDrawBackgroundColor(TD_Floor_CNN[0], 170);
	TextDrawFont(TD_Floor_CNN[0], 3);
	TextDrawSetProportional(TD_Floor_CNN[0], 1);
	TextDrawSetSelectable(TD_Floor_CNN[0], true);

	TD_Floor_CNN[1] = TextDrawCreate(320.0, 216.0, "2");
	TextDrawLetterSize(TD_Floor_CNN[1], 0.7, 2.5);
	TextDrawTextSize(TD_Floor_CNN[1], 10.0, 640.0);
	TextDrawAlignment(TD_Floor_CNN[1], 2);
	TextDrawColor(TD_Floor_CNN[1], -1);
	TextDrawUseBox(TD_Floor_CNN[1], true);
	TextDrawBoxColor(TD_Floor_CNN[1], -269486283);
	TextDrawSetShadow(TD_Floor_CNN[1], 0);
	TextDrawSetOutline(TD_Floor_CNN[1], 1);
	TextDrawBackgroundColor(TD_Floor_CNN[1], 170);
	TextDrawFont(TD_Floor_CNN[1], 3);
	TextDrawSetProportional(TD_Floor_CNN[1], 1);
	TextDrawSetSelectable(TD_Floor_CNN[1], true);

	TD_Floor_CNN[2] = TextDrawCreate(320.0, 267.0, "3");
	TextDrawLetterSize(TD_Floor_CNN[2], 0.7, 2.5);
	TextDrawTextSize(TD_Floor_CNN[2], 10.0, 640.0);
	TextDrawAlignment(TD_Floor_CNN[2], 2);
	TextDrawColor(TD_Floor_CNN[2], -1);
	TextDrawUseBox(TD_Floor_CNN[2], true);
	TextDrawBoxColor(TD_Floor_CNN[2], -269486283);
	TextDrawSetShadow(TD_Floor_CNN[2], 0);
	TextDrawSetOutline(TD_Floor_CNN[2], 1);
	TextDrawBackgroundColor(TD_Floor_CNN[2], 170);
	TextDrawFont(TD_Floor_CNN[2], 3);
	TextDrawSetProportional(TD_Floor_CNN[2], 1);
	TextDrawSetSelectable(TD_Floor_CNN[2], true);

	TD_Floor_CNN[3] = TextDrawCreate(322.811035, 191.916656, "cnn elevator~n~~n~~n~~n~choose floor");
	TextDrawLetterSize(TD_Floor_CNN[3], 0.541360, 1.611665);
	TextDrawTextSize(TD_Floor_CNN[3], 457.276489, 272.416595);
	TextDrawAlignment(TD_Floor_CNN[3], 2);
	TextDrawColor(TD_Floor_CNN[3], -1);
	TextDrawSetShadow(TD_Floor_CNN[3], 0);
	TextDrawSetOutline(TD_Floor_CNN[3], 1);
	TextDrawBackgroundColor(TD_Floor_CNN[3], 255);
	TextDrawFont(TD_Floor_CNN[3], 2);
	//TextDrawSetSelectable(TD_Floor_CNN[3], true);


	//TextDrawSetSelectable(TD_Floor_CNN[4], true);

	/*TD_Wait = TextDrawCreate(279.707214, 56.583354, "ld_grav:timer");
	TextDrawLetterSize(TD_Wait, 0.015461, 0.495833);
	TextDrawTextSize(TD_Wait, 50.600311, 54.249980);
	//TextDrawAlignment(TD_Wait, 1);
	//TextDrawColor(TD_Wait, -1);
	//TextDrawSetShadow(TD_Wait, 0);
	//TextDrawSetOutline(TD_Wait, 0);
	TextDrawBackgroundColor(TD_Wait, 0x00000000);
	TextDrawFont(TD_Wait, 4);*/

	TD_Fuel[0] = TextDrawCreate(318.594299, 173.250030, "_");
	TextDrawLetterSize(TD_Fuel[0], 0.449999, 1.600000);
	TextDrawTextSize(TD_Fuel[0], -54.348457, -241.500015);
	TextDrawAlignment(TD_Fuel[0], 2);
	TextDrawColor(TD_Fuel[0], -1);
	TextDrawUseBox(TD_Fuel[0], true);
	TextDrawBoxColor(TD_Fuel[0], -6729086);
	TextDrawSetShadow(TD_Fuel[0], 0);
	TextDrawSetOutline(TD_Fuel[0], 1);
	TextDrawBackgroundColor(TD_Fuel[0], 51);
	TextDrawFont(TD_Fuel[0], 2);
	TextDrawSetProportional(TD_Fuel[0], 1);

	TD_Fuel[1] = TextDrawCreate(318.657257, 192.333358, "_");
	TextDrawLetterSize(TD_Fuel[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_Fuel[1], -54.348457, -241.500015);
	TextDrawAlignment(TD_Fuel[1], 2);
	TextDrawColor(TD_Fuel[1], -1);
	TextDrawUseBox(TD_Fuel[1], true);
	TextDrawBoxColor(TD_Fuel[1], -6725502);
	TextDrawSetShadow(TD_Fuel[1], 0);
	TextDrawSetOutline(TD_Fuel[1], 1);
	TextDrawBackgroundColor(TD_Fuel[1], 51);
	TextDrawFont(TD_Fuel[1], 2);
	TextDrawSetProportional(TD_Fuel[1], 1);

	TD_Fuel[2] = TextDrawCreate(179.785934, 174.999969, "_~n~-~n~_");
	TextDrawLetterSize(TD_Fuel[2], 0.442035, 1.127499);
	TextDrawTextSize(TD_Fuel[2], 20.901899, 32.666690);
	TextDrawAlignment(TD_Fuel[2], 2);
	TextDrawColor(TD_Fuel[2], -1);
	TextDrawUseBox(TD_Fuel[2], true);
	TextDrawBoxColor(TD_Fuel[2], -6723444);
	TextDrawSetShadow(TD_Fuel[2], 0);
	TextDrawSetOutline(TD_Fuel[2], 1);
	TextDrawBackgroundColor(TD_Fuel[2], 0x00000000);
	TextDrawFont(TD_Fuel[2], 1);
	TextDrawSetProportional(TD_Fuel[2], 1);
	TextDrawSetSelectable(TD_Fuel[2], true);

	TD_Fuel[3] = TextDrawCreate(457.339263, 174.833328, "_~n~+~n~_");
	TextDrawLetterSize(TD_Fuel[3], 0.442035, 1.127499);
	TextDrawTextSize(TD_Fuel[3], 20.901899, 32.666690);
	TextDrawAlignment(TD_Fuel[3], 2);
	TextDrawColor(TD_Fuel[3], -1);
	TextDrawUseBox(TD_Fuel[3], true);
	TextDrawBoxColor(TD_Fuel[3], -6723444);
	TextDrawSetShadow(TD_Fuel[3], 0);
	TextDrawSetOutline(TD_Fuel[3], 1);
	TextDrawBackgroundColor(TD_Fuel[3], 0x00000000);
	TextDrawFont(TD_Fuel[3], 1);
	TextDrawSetProportional(TD_Fuel[3], 1);
	TextDrawSetSelectable(TD_Fuel[3], true);


	TD_Fuel[4] = TextDrawCreate(430.228363, 183.500015, "usebox");
	TextDrawLetterSize(TD_Fuel[4], 0.000000, 1.498149);
	TextDrawTextSize(TD_Fuel[4], 206.960479, 0.000000);
	TextDrawAlignment(TD_Fuel[4], 1);
	TextDrawColor(TD_Fuel[4], 0);
	TextDrawUseBox(TD_Fuel[4], true);
	TextDrawBoxColor(TD_Fuel[4], 1631201535);
	TextDrawSetShadow(TD_Fuel[4], 0);
	TextDrawSetOutline(TD_Fuel[4], 0);
	TextDrawBackgroundColor(TD_Fuel[4], 0x00000000);
	TextDrawFont(TD_Fuel[4], 0);

	TD_Fuel[5] = TextDrawCreate(428.417114, 185.083374, "usebox");
	TextDrawLetterSize(TD_Fuel[5], 0.000000, 1.170184);
	TextDrawTextSize(TD_Fuel[5], 209.771606, 0.000000);
	TextDrawAlignment(TD_Fuel[5], 1);
	TextDrawColor(TD_Fuel[5], 0);
	TextDrawUseBox(TD_Fuel[5], true);
	TextDrawBoxColor(TD_Fuel[5], 2051617500);
	TextDrawSetShadow(TD_Fuel[5], 0);
	TextDrawSetOutline(TD_Fuel[5], 0);
	TextDrawBackgroundColor(TD_Fuel[5], 0x00000000);
	TextDrawFont(TD_Fuel[5], 0);

	TD_Fuel[6] = TextDrawCreate(320.468719, 213.500061, "FILLING");
	TextDrawLetterSize(TD_Fuel[6], 0.308037, 1.162498);
	TextDrawTextSize(TD_Fuel[6], 10.713029, 55.416667);
	TextDrawAlignment(TD_Fuel[6], 2);
	TextDrawColor(TD_Fuel[6], -1);
	TextDrawUseBox(TD_Fuel[6], true);
	TextDrawBoxColor(TD_Fuel[6], -6723444);
	TextDrawSetShadow(TD_Fuel[6], 0);
	TextDrawSetOutline(TD_Fuel[6], 1);
	TextDrawBackgroundColor(TD_Fuel[6], 0x00000000);
	TextDrawFont(TD_Fuel[6], 2);
	TextDrawSetProportional(TD_Fuel[6], 1);
	TextDrawSetSelectable(TD_Fuel[6], true);

	TD_Fuel[7] = TextDrawCreate(427.571594, 155.000106, "X");
	TextDrawLetterSize(TD_Fuel[7], 0.230263, 1.139166);
	TextDrawTextSize(TD_Fuel[7], 10.418735, 15.166658);
	TextDrawAlignment(TD_Fuel[7], 2);
	TextDrawColor(TD_Fuel[7], -1);
	TextDrawUseBox(TD_Fuel[7], true);
	TextDrawBoxColor(TD_Fuel[7], -6723444);
	TextDrawSetShadow(TD_Fuel[7], 0);
	TextDrawSetOutline(TD_Fuel[7], 1);
	TextDrawBackgroundColor(TD_Fuel[7], 0x00000000);
	TextDrawFont(TD_Fuel[7], 2);
	TextDrawSetProportional(TD_Fuel[7], 1);
	TextDrawSetSelectable(TD_Fuel[7], true);


	TD_Phones[0] = TextDrawCreate(499.443847, 136.500015, "_");
	TD_Phones[1] = TextDrawCreate(551.107360, 136.500015, "_");
	TD_Phones[2] = TextDrawCreate(499.443847, 182.250030, "_");
	TD_Phones[3] = TextDrawCreate(551.107360, 182.250030, "_");
	TD_Phones[4] = TextDrawCreate(551.107360, 227.583297, "_");
	TD_Phones[5] = TextDrawCreate(499.443847, 227.583297, "_");

	for(new i = 0; i <= 5; i++)
	{
		TextDrawTextSize(TD_Phones[i], 52.005874, 46.083328);
		TextDrawSetPreviewModel(TD_Phones[i], id_phones[i]);
		TextDrawSetPreviewRot(TD_Phones[i], 90.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(TD_Phones[i], -644666369);
		TextDrawFont(TD_Phones[i], 5);
		TextDrawSetSelectable(TD_Phones[i], true);
	}
	TD_Phones[6] = TextDrawCreate(551.4, 123.1, "PHONES");
	TD_Phones[7] = TextDrawCreate(551.4, 277.0, "BUY");

	TextDrawTextSize(TD_Phones[6], 7.0, 100.0);
	TextDrawTextSize(TD_Phones[7], 7.0, 100.0);

	for(new i=6; i <= 7; i++)
	{
		TextDrawLetterSize(TD_Phones[i], 0.319282, 1.191666);
		TextDrawAlignment(TD_Phones[i], 2);
		TextDrawColor(TD_Phones[i], -1);
		TextDrawUseBox(TD_Phones[i], true);
		TextDrawBoxColor(TD_Phones[i], -561179393);
		TextDrawSetShadow(TD_Phones[i], 0);
		TextDrawSetOutline(TD_Phones[i], 0);
		TextDrawFont(TD_Phones[i], 2);

	}
	TextDrawSetSelectable(TD_Phones[7], true);
	///////////////////////////////////////////////////////////////

	//3,0.0,135.0,0.0,7.5,72.0,255.0
	Bizwar2[3] = TextDrawCreate(72.0, 255.0, "_");
	TextDrawAlignment(Bizwar2[3], 2);
	//TextDrawBackgroundColor(Bizwar2[3], 255);
	//TextDrawFont(Bizwar2[3], 1);
	TextDrawLetterSize(Bizwar2[3], 0.0, 7.5);
	//TextDrawColor(Bizwar2[3], -1);
	//TextDrawSetOutline(Bizwar2[3], 0);
	//TextDrawSetProportional(Bizwar2[3], 1);
	//TextDrawSetShadow(Bizwar2[3], 1);
	TextDrawUseBox(Bizwar2[3], 1);
	TextDrawBoxColor(Bizwar2[3], 112);
	TextDrawTextSize(Bizwar2[3], 0.0, 135.0);
	TextDrawSetSelectable(Bizwar2[3], 0);

	//0,90.0,0.0,0.48,1.5,5.0,260.0
	Bizwar2[0] = TextDrawCreate(5.0, 260.0, "_");//time
	//TextDrawBackgroundColor(Bizwar2[0], 255);
	TextDrawFont(Bizwar2[0], 1);
	TextDrawLetterSize(Bizwar2[0], 0.48, 1.5);
	TextDrawColor(Bizwar2[0], 96492799);
	TextDrawTextSize(Bizwar2[0], 150.0, 10.0);
	TextDrawSetOutline(Bizwar2[0], 1);
	TextDrawSetProportional(Bizwar2[0], 1);
	TextDrawSetSelectable(Bizwar2[0], 0);
	TextDrawSetShadow(Bizwar2[0], 0);

	//1,90.0,0.0,0.48,1.5,5.0,280.0
	Bizwar2[1] = TextDrawCreate(5.0, 280.0, "_");//banda napad
	TextDrawLetterSize(Bizwar2[1], 0.48, 1.5);
	TextDrawTextSize(Bizwar2[1], 150.0, 10.0);
	//TextDrawBackgroundColor(Bizwar2[1], 255);
	TextDrawFont(Bizwar2[1], 1);
	TextDrawColor(Bizwar2[1], -1);
	TextDrawSetOutline(Bizwar2[1], 1);
	TextDrawSetProportional(Bizwar2[1], 1);
	TextDrawSetSelectable(Bizwar2[1], 0);
	TextDrawSetShadow(Bizwar2[1], 0);

	//2,90.0,0.0,0.48,1.5,5.0,300.0
	Bizwar2[2] = TextDrawCreate(5.0, 300.0, "_");//banda vlad
	//TextDrawBackgroundColor(Bizwar2[2], 255);
	TextDrawFont(Bizwar2[2], 1);
	TextDrawLetterSize(Bizwar2[2], 0.48, 1.5);
	TextDrawTextSize(Bizwar2[2], 150.0, 10.0);
	TextDrawColor(Bizwar2[2], -1);
	TextDrawSetOutline(Bizwar2[2], 1);
	TextDrawSetProportional(Bizwar2[2], 1);

	///////////////////////////////////////////////////////////////
	Bizwar[3] = TextDrawCreate(107.000000, 293.000000, "_");
	TextDrawAlignment(Bizwar[3], 2);
	TextDrawBackgroundColor(Bizwar[3], 255);
	TextDrawFont(Bizwar[3], 1);
	TextDrawLetterSize(Bizwar[3], 1.120000, 3.200000);
	TextDrawColor(Bizwar[3], -1);
	TextDrawSetOutline(Bizwar[3], 0);
	TextDrawSetProportional(Bizwar[3], 1);
	TextDrawSetShadow(Bizwar[3], 1);
	TextDrawUseBox(Bizwar[3], 1);
	TextDrawBoxColor(Bizwar[3], 112);
	TextDrawTextSize(Bizwar[3], 43.000000, 206.000000);
	TextDrawSetSelectable(Bizwar[3], 0);

	Bizwar[0] = TextDrawCreate(5.000000, 292.000000, "_");//time
	TextDrawBackgroundColor(Bizwar[0], 255);
	TextDrawFont(Bizwar[0], 1);
	TextDrawLetterSize(Bizwar[0], 0.490000, 1.000000);
	TextDrawColor(Bizwar[0], 96492799);
	TextDrawSetOutline(Bizwar[0], 1);
	TextDrawSetProportional(Bizwar[0], 1);
	TextDrawSetSelectable(Bizwar[0], 0);

	Bizwar[1] = TextDrawCreate(5.000000, 302.000000, "_");//banda napad
	TextDrawBackgroundColor(Bizwar[1], 255);
	TextDrawFont(Bizwar[1], 1);
	TextDrawLetterSize(Bizwar[1], 0.480000, 1.000000);
	TextDrawColor(Bizwar[1], -1);
	TextDrawSetOutline(Bizwar[1], 1);
	TextDrawSetProportional(Bizwar[1], 1);
	TextDrawSetSelectable(Bizwar[1], 0);

	Bizwar[2] = TextDrawCreate(5.000000, 312.000000, "_");//banda vlad
	TextDrawBackgroundColor(Bizwar[2], 255);
	TextDrawFont(Bizwar[2], 1);
	TextDrawLetterSize(Bizwar[2], 0.480000, 1.000000);
	TextDrawColor(Bizwar[2], -1);
	TextDrawSetOutline(Bizwar[2], 1);
	TextDrawSetProportional(Bizwar[2], 1);
	TextDrawSetSelectable(Bizwar[2], 0);

	//

	Capture[0] = TextDrawCreate(211.000000, 325.000000, "_");
	TextDrawUseBox(Capture[0], 1);
	TextDrawTextSize(Capture[0], 5.000000, 200.000000);
	TextDrawLetterSize(Capture[0], 0.240000, -7.000000);
	TextDrawBoxColor(Capture[0], 0x00000050);

	Capture[1] = TextDrawCreate(14.000000, 260.000000, "Time:");
	TextDrawBackgroundColor(Capture[1], 255);
	TextDrawFont(Capture[1], 1);
	TextDrawLetterSize(Capture[1], 0.500000, 1.000000);
	TextDrawColor(Capture[1], 0x00D900C8);
	TextDrawSetOutline(Capture[1], 1);
	TextDrawSetProportional(Capture[1], 1);

	Capture[2] = TextDrawCreate(75.000000, 260.000000, "6:00");
	TextDrawFont(Capture[2], 1);
	TextDrawLetterSize(Capture[2], 0.500000, 1.000000);
	TextDrawColor(Capture[2], 0x00D900C8);
	TextDrawSetOutline(Capture[2], 1);
	TextDrawSetProportional(Capture[2], 1);

	Capture[3] = TextDrawCreate(14.000000, 276.000000, "_");//banda napad
	TextDrawFont(Capture[3], 1);
	TextDrawLetterSize(Capture[3], 0.500000, 1.000000);
	TextDrawColor(Capture[3], -1);
	TextDrawSetOutline(Capture[3], 1);
	TextDrawSetProportional(Capture[3], 1);

	Capture[4] = TextDrawCreate(14.000000, 293.000000, "_");// banda vlad
	TextDrawFont(Capture[4], 1);
	TextDrawLetterSize(Capture[4], 0.500000, 1.000000);
	TextDrawColor(Capture[4], -1);
	TextDrawSetOutline(Capture[4], 1);
	TextDrawSetProportional(Capture[4], 1);

	Capture[5] = TextDrawCreate(190.000000, 276.000000, "0");// score napad
	TextDrawFont(Capture[5], 1);
	TextDrawLetterSize(Capture[5], 0.500000, 1.000000);
	TextDrawColor(Capture[5], 0xFF0000FF);
	TextDrawSetOutline(Capture[5], 1);
	TextDrawSetProportional(Capture[5], 1);

	Capture[6] = TextDrawCreate(190.000000, 293.000000, "0");// score vlad
	TextDrawFont(Capture[6], 1);
	TextDrawLetterSize(Capture[6], 0.500000, 1.000000);
	TextDrawColor(Capture[6], 0xFF0000FF);
	TextDrawSetOutline(Capture[6], 1);
	TextDrawSetProportional(Capture[6], 1);

	Capture[7] = TextDrawCreate(14.000000, 309.000000, "Type of attack");// capture type
	TextDrawFont(Capture[7], 1);
	TextDrawLetterSize(Capture[7], 0.500000, 1.000000);
	TextDrawColor(Capture[7], -1);
	TextDrawSetOutline(Capture[7], 1);
	TextDrawSetProportional(Capture[7], 1);

	Capture[8] = TextDrawCreate(190.000000, 309.000000, "1");// capture type 2
	TextDrawFont(Capture[8], 1);
	TextDrawLetterSize(Capture[8], 0.500000, 1.000000);
	TextDrawColor(Capture[8], 0xFF0000FF);
	TextDrawSetOutline(Capture[8], 1);
	TextDrawSetProportional(Capture[8], 1);

	GangInfo_TD[0] = TextDrawCreate(609.671936, 101.833312, "usebox");
	TextDrawLetterSize(GangInfo_TD[0], 0.000000, 1.109259);
	TextDrawTextSize(GangInfo_TD[0], 495.569641, 0.000000);
	TextDrawAlignment(GangInfo_TD[0], 1);
	TextDrawColor(GangInfo_TD[0], 0);
	TextDrawUseBox(GangInfo_TD[0], true);
	TextDrawBoxColor(GangInfo_TD[0], 0x00000050);
	TextDrawSetShadow(GangInfo_TD[0], 0);
	TextDrawSetOutline(GangInfo_TD[0], 0);
	TextDrawBackgroundColor(GangInfo_TD[0], 0x00000000);
	TextDrawFont(GangInfo_TD[0], 0);
	//TextDrawSetSelectable(GangInfo_TD[0], true);

	GangInfo_TD[1] = TextDrawCreate(627.007446, 388.916687, "usebox");
	GangInfo_TD[2] = TextDrawCreate(578.344177, 388.916687, "usebox");
	GangInfo_TD[3] = TextDrawCreate(528.743713, 388.916687, "usebox");
	GangInfo_TD[4] = TextDrawCreate(478.674743, 388.916687, "usebox");
	GangInfo_TD[5] = TextDrawCreate(425.794738, 388.916687, "usebox");
	TextDrawTextSize(GangInfo_TD[1], 578.029418, 0.000000);
	TextDrawTextSize(GangInfo_TD[2], 528.366149, 0.000000);
	TextDrawTextSize(GangInfo_TD[3], 477.765747, 0.000000);
	TextDrawTextSize(GangInfo_TD[4], 426.696807, 0.000000);
	TextDrawTextSize(GangInfo_TD[5], 372.816802, 0.000000);

	for(new i = 1; i <= 5; i++)
	{
		TextDrawLetterSize(GangInfo_TD[i], 0.000000, 4.479631);
		TextDrawAlignment(GangInfo_TD[i], 1);
		TextDrawColor(GangInfo_TD[i], 0);
		TextDrawUseBox(GangInfo_TD[i], true);
		TextDrawBoxColor(GangInfo_TD[i], 0x00000050);
		TextDrawSetShadow(GangInfo_TD[i], 0);
		TextDrawSetOutline(GangInfo_TD[i], 0);
		TextDrawBackgroundColor(GangInfo_TD[i], 0x00000000);
		TextDrawFont(GangInfo_TD[i], 0);
	}


	GangInfo_TD[6] = TextDrawCreate(387.935913, 390.249938, "Ballas");
	GangInfo_TD[9] = TextDrawCreate(440.473297, 390.249938, "Vagos");
	GangInfo_TD[12] = TextDrawCreate(491.073699, 390.249938, "Grove");
	GangInfo_TD[15] = TextDrawCreate(542.205505, 390.249938, "Aztec");
	GangInfo_TD[18] = TextDrawCreate(594.742858, 390.249938, "Rifa");

	TextDrawColor(GangInfo_TD[6], -2011002693);
	TextDrawColor(GangInfo_TD[9], -286392133);
	TextDrawColor(GangInfo_TD[12], 1722426043);
	TextDrawColor(GangInfo_TD[15], 1726934715);
	TextDrawColor(GangInfo_TD[18], -1999844165);

	new d_id [5] = { 6 , 9 , 12 , 15 , 18 } ;
	for ( new i = 0;  i < 5; i++)
	{
		new j = d_id [ i ];
		//printf("j0: %d", j);
		TextDrawLetterSize(GangInfo_TD[j], 0.235885, 1.010832);
		TextDrawAlignment(GangInfo_TD[j], 1);
		TextDrawSetShadow(GangInfo_TD[j], 0);
		TextDrawSetOutline(GangInfo_TD[j], 1);
		TextDrawBackgroundColor(GangInfo_TD[j], 51);
		TextDrawFont(GangInfo_TD[j], 1);
		TextDrawSetProportional(GangInfo_TD[j], 1);
	}


	//TextDrawSetSelectable(GangInfo_TD[6], true);


	GangInfo_TD[7] = TextDrawCreate(380.907775, 401.916595, "ZONES: ~w~0");
	GangInfo_TD[10] = TextDrawCreate(434.850982, 401.916595, "ZONES: ~w~0");
	GangInfo_TD[13] = TextDrawCreate(485.514434, 401.916595, "ZONES: ~w~0");
	GangInfo_TD[16] = TextDrawCreate(535.240966, 401.916595, "ZONES: ~w~0");
	GangInfo_TD[19] = TextDrawCreate(584.498718, 401.916595, "ZONES: ~w~0");

	new d_id_ [5] = { 7 , 10 , 13 , 16 , 19 } ;
	for ( new i = 0;  i < 5; i++)
	{
		new j = d_id_ [ i ];
		//printf("j1: %d", j);
		TextDrawLetterSize(GangInfo_TD[j], 0.192313, 1.127500);
		TextDrawAlignment(GangInfo_TD[j], 1);
		TextDrawColor(GangInfo_TD[j], -219520036);
		TextDrawSetShadow(GangInfo_TD[j], 0);
		TextDrawSetOutline(GangInfo_TD[j], 1);
		TextDrawBackgroundColor(GangInfo_TD[j], 51);
		TextDrawFont(GangInfo_TD[j], 2);
		TextDrawSetProportional(GangInfo_TD[j], 1);
	}

	GangInfo_TD[8] = TextDrawCreate(380.033630, 412.249938, "ONLINE: ~w~0");
	GangInfo_TD[11] = TextDrawCreate(433.976562, 412.249938, "ONLINE: ~w~0");
	GangInfo_TD[14] = TextDrawCreate(484.171417, 412.249938, "ONLINE: ~w~0");
	GangInfo_TD[17] = TextDrawCreate(534.366088, 412.249938, "ONLINE: ~w~0");
	GangInfo_TD[20] = TextDrawCreate(583.155395, 412.249938, "ONLINE: ~w~0");
	//TextDrawSetSelectable(GangInfo_TD[7], true);

	new d_id__ [5] = { 8 , 11 , 14 , 17 , 20 } ;
	for ( new i = 0;  i < 5; i++)
	{
		new j = d_id__ [ i ];
		//printf("j2: %d", j);
		TextDrawLetterSize(GangInfo_TD[j], 0.192313, 1.127500);
		TextDrawAlignment(GangInfo_TD[j], 1);
		TextDrawColor(GangInfo_TD[j], -219520036);
		TextDrawSetShadow(GangInfo_TD[j], 0);
		TextDrawSetOutline(GangInfo_TD[j], 1);
		TextDrawBackgroundColor(GangInfo_TD[j], 51);
		TextDrawFont(GangInfo_TD[j], 2);
		TextDrawSetProportional(GangInfo_TD[j], 1);
	}



	GangInfo_TD[21] = TextDrawCreate(626.539062, 367.833374, "usebox");
	TextDrawLetterSize(GangInfo_TD[21], 0.000000, 1.174074);
	TextDrawTextSize(GangInfo_TD[21], 464.647338, 0.000000);
	TextDrawAlignment(GangInfo_TD[21], 1);
	TextDrawColor(GangInfo_TD[21], 0);
	TextDrawUseBox(GangInfo_TD[21], true);
	TextDrawBoxColor(GangInfo_TD[21], 102);
	TextDrawSetShadow(GangInfo_TD[21], 0);
	TextDrawSetOutline(GangInfo_TD[21], 0);
	TextDrawBackgroundColor(GangInfo_TD[21], 0x00000000);
	TextDrawFont(GangInfo_TD[21], 0);
	//TextDrawSetSelectable(GangInfo_TD[21], true);

	GangInfo_TD[22] = TextDrawCreate(546.295837, 368.083435, "TIME TO CAPTURE: ~p~10:45");
	TextDrawLetterSize(GangInfo_TD[22], 0.341771, 1.086666);
	TextDrawAlignment(GangInfo_TD[22], 2);
	TextDrawColor(GangInfo_TD[22], -1);
	TextDrawSetShadow(GangInfo_TD[22], 0);
	TextDrawSetOutline(GangInfo_TD[22], 1);
	TextDrawBackgroundColor(GangInfo_TD[22], 51);
	TextDrawFont(GangInfo_TD[22], 1);
	TextDrawSetProportional(GangInfo_TD[22], 1);
	//TextDrawSetSelectable(GangInfo_TD[22], true);


	GangInfo_TD[23] = TextDrawCreate(396.369262, 423.999938, "8");
	GangInfo_TD[24] = TextDrawCreate(450.781036, 423.999938, "8");
	GangInfo_TD[25] = TextDrawCreate(499.570373, 423.999938, "8");
	GangInfo_TD[26] = TextDrawCreate(549.765319, 423.999938, "8");
	GangInfo_TD[27] = TextDrawCreate(599.023071, 423.999938, "8");
	for ( new i = 23 ; i <= 27 ; i++)
	{
		TextDrawLetterSize(GangInfo_TD[i], 0.413455, 1.349166);
		TextDrawAlignment(GangInfo_TD[i], 1);
		TextDrawColor(GangInfo_TD[i], -1);
		TextDrawSetShadow(GangInfo_TD[i], 0);
		TextDrawSetOutline(GangInfo_TD[i], 1);
		TextDrawBackgroundColor(GangInfo_TD[i], 255);
		TextDrawFont(GangInfo_TD[i], 0);
		TextDrawSetProportional(GangInfo_TD[i], 1);
	}
	///////////////////////////////////////////////////////////////
	Korzinka = TextDrawCreate(495.226928, 110.833335, "_");
	TextDrawTextSize(Korzinka, 116.193237, 63.583320);
	TextDrawFont(Korzinka, 5);
	TextDrawSetPreviewModel(Korzinka, 19587);
	TextDrawSetPreviewRot(Korzinka, -20.000000, 0.000000, 0.000000, 1.000000);
	TextDrawBackgroundColor(Korzinka, 0x00000000);

	TD_Apple[0] = TextDrawCreate(169.136154, 48.999996, "_");
	TD_Apple[1] = TextDrawCreate(239.008758, 74.499992, "_");
	TD_Apple[2] = TextDrawCreate(303.259185, 26.500000, "_");
	TD_Apple[3] = TextDrawCreate(364.698516, 71.833328, "_");
	TD_Apple[4] = TextDrawCreate(233.106918, -8.250004, "_");
	TD_Apple[5] = TextDrawCreate(209.743820, 18.416664, "_");
	TD_Apple[6] = TextDrawCreate(246.819946, 26.416667, "_");
	TD_Apple[7] = TextDrawCreate(202.373397, 58.333339, "_");
	TD_Apple[8] = TextDrawCreate(277.399993, 62.250007, "_");
	TD_Apple[9] = TextDrawCreate(272.777648, -2.083320, "_");
	TD_Apple[10] = TextDrawCreate(335.622619, -0.499987, "_");
	TD_Apple[11] = TextDrawCreate(332.874359, 38.416675, "_");
	TD_Apple[12] = TextDrawCreate(316.070404, 70.916679, "_");
	TD_Apple[13] = TextDrawCreate(365.328277, 13.583345, "_");
	TD_Apple[14] = TextDrawCreate(389.754486, 36.166679, "_");
	TD_Apple[15] = TextDrawCreate(402.467681, 69.250007, "_");
	TD_Apple[16] = TextDrawCreate(177.640304, -8.499988, "_");

	for(new i = 0; i < 17; i++)
	{
		TextDrawTextSize(TD_Apple[i], 67.467071, 93.333312);
		TextDrawFont(TD_Apple[i], 5);
		TextDrawSetPreviewModel(TD_Apple[i], 19576);
		TextDrawSetPreviewRot(TD_Apple[i], -35.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(TD_Apple[i], 0x00000000);
		TextDrawSetSelectable(TD_Apple[i],true);
	}

	TD_SAPPLE[0] = TextDrawCreate(497.101287, 126.000030, "_");
	TD_SAPPLE[1] = TextDrawCreate(518.247802, 125.833366, "_");
	TD_SAPPLE[2] = TextDrawCreate(540.799682, 125.666694, "_");
	TD_SAPPLE[3] = TextDrawCreate(509.471679, 127.250015, "_");
	TD_SAPPLE[4] = TextDrawCreate(529.681152, 126.500007, "_");
	TD_SAPPLE[5] = TextDrawCreate(551.296264, 127.500022, "_");
	TD_SAPPLE[6] = TextDrawCreate(542.925842, 123.250053, "_");
	TD_SAPPLE[7] = TextDrawCreate(524.247924, 123.083389, "_");
	TD_SAPPLE[8] = TextDrawCreate(504.632843, 122.333389, "_");
	TD_SAPPLE[9] = TextDrawCreate(514.534729, 126.833412, "_");
	for(new i = 0; i < 10; i++)
	{
		TextDrawTextSize(TD_SAPPLE[i], 58.565124, 30.333347);
		TextDrawFont(TD_SAPPLE[i], 5);
		TextDrawBackgroundColor(TD_SAPPLE[i], 0x00000000);
		TextDrawSetPreviewModel(TD_SAPPLE[i], 19576);
		TextDrawSetPreviewRot(TD_SAPPLE[i], -35.000000, 0.000000, 0.000000, 1.000000);
	}

	Logotype[0] = TextDrawCreate(576.000000, 6.000000, "ORLD");
	TextDrawBackgroundColor(Logotype[0], -2109927169);
	TextDrawFont(Logotype[0], 1);
	TextDrawLetterSize(Logotype[0], 0.379999, 1.299999);
	TextDrawColor(Logotype[0], -8904705);
	TextDrawSetOutline(Logotype[0], 0);
	TextDrawSetProportional(Logotype[0], 1);
	TextDrawSetShadow(Logotype[0], 1);
	TextDrawSetSelectable(Logotype[0], 0);

	Logotype[1] = TextDrawCreate(562.000000, 1.000000, "W");
	TextDrawBackgroundColor(Logotype[1], -2109927169);
	TextDrawFont(Logotype[1], 0);
	TextDrawLetterSize(Logotype[1], 0.409999, 1.799999);
	TextDrawColor(Logotype[1], -8904705);
	TextDrawSetOutline(Logotype[1], 0);
	TextDrawSetProportional(Logotype[1], 1);
	TextDrawSetShadow(Logotype[1], 1);
	TextDrawSetSelectable(Logotype[1], 0);

	Logotype[2] = TextDrawCreate(565.000000, 17.000000, "ROLEPLAY");
	TextDrawBackgroundColor(Logotype[2], 0x00000000);
	TextDrawFont(Logotype[2], 2);
	TextDrawLetterSize(Logotype[2], 0.209999, 0.899999);
	TextDrawColor(Logotype[2], -1);
	TextDrawSetOutline(Logotype[2], 0);
	TextDrawSetProportional(Logotype[2], 1);
	TextDrawSetShadow(Logotype[2], 0);
	TextDrawSetSelectable(Logotype[2], 0);
	
 	Logotype[3]  = TextDrawCreate(568.500000, 15.750000, "LD_SPAC:white");
	TextDrawLetterSize(Logotype[3] , 0.000000, 0.000000);
	TextDrawTextSize(Logotype[3] , 0.500000, 6.562500);
	TextDrawAlignment(Logotype[3] , 1);
	TextDrawColor(Logotype[3] , -8904705);
	TextDrawSetShadow(Logotype[3] , 0);
	TextDrawSetOutline(Logotype[3] , 0);
	TextDrawBackgroundColor(Logotype[3] , 0x00000000);
	TextDrawFont(Logotype[3] , 4);
	//TextDrawSetSelectable(Logotype[3] , true);

	Logotype[4]  = TextDrawCreate(605.500000, 15.000000, "LD_SPAC:white");
	TextDrawLetterSize(Logotype[4] , 0.000000, 0.000000);
	TextDrawTextSize(Logotype[4] , 0.500000, 4.812500);
	TextDrawAlignment(Logotype[4] , 1);
	TextDrawColor(Logotype[4] , -8904705);
	TextDrawSetShadow(Logotype[4] , 0);
	TextDrawSetOutline(Logotype[4] , 0);
	TextDrawBackgroundColor(Logotype[4] , 0x00000000);
	TextDrawFont(Logotype[4] , 4);
	//TextDrawSetSelectable(Logotype[4] , true);
	
 	Logotype[5]  = TextDrawCreate(594.500000, 15.750000, "PreviewModel");
	TextDrawLetterSize(Logotype[5] , 0.000000, 0.000000);
	TextDrawTextSize(Logotype[5] , 21.000000, 17.062500);
	TextDrawAlignment(Logotype[5] , 1);
	TextDrawColor(Logotype[5] , -1);
	TextDrawSetShadow(Logotype[5] , 0);
	TextDrawSetOutline(Logotype[5] , 0);
	TextDrawBackgroundColor(Logotype[5] , 0x00000000);
	TextDrawFont(Logotype[5] , 5);
	TextDrawSetPreviewModel(Logotype[5] , 19060);
	TextDrawSetPreviewRot(Logotype[5] , 0.000000, 0.000000, 0.000000, 1.000000);
	//TextDrawSetSelectable(Logotype[5] , true);

	Logotype[6]  = TextDrawCreate(558.000000, 18.500000, "PreviewModel");
	TextDrawLetterSize(Logotype[6] , 0.000000, 0.000000);
	TextDrawTextSize(Logotype[6] , 21.000000, 17.062500);
	TextDrawAlignment(Logotype[6] , 1);
	TextDrawColor(Logotype[6] , -1);
	TextDrawSetShadow(Logotype[6] , 0);
	TextDrawSetOutline(Logotype[6] , 0);
	TextDrawBackgroundColor(Logotype[6] , 0x00000000);
	TextDrawFont(Logotype[6] , 5);
	TextDrawSetPreviewModel(Logotype[6] , 19063);
	TextDrawSetPreviewRot(Logotype[6] , 0.000000, 0.000000, 0.000000, 1.000000);
	//TextDrawSetSelectable(Logotype[6] , true);
	
 	Logotype[7]  = TextDrawCreate(565.500000, -3.062500, "PreviewModel");
	TextDrawLetterSize(Logotype[7] , 0.000000, 0.000000);
	TextDrawTextSize(Logotype[7] , 17.000000, 17.062500);
	TextDrawAlignment(Logotype[7] , 1);
	TextDrawColor(Logotype[7] , -1);
	TextDrawSetShadow(Logotype[7] , 0);
	TextDrawSetOutline(Logotype[7] , 0);
	TextDrawBackgroundColor(Logotype[7] , 0x00000000);
	TextDrawFont(Logotype[7] , 5);
	TextDrawSetPreviewModel(Logotype[7] , 19064);
	TextDrawSetPreviewRot(Logotype[7] , 0.000000, 0.000000, 43.000000, 0.974178);
	//TextDrawSetSelectable(Logotype[7] , true);

/*	golod_box[0] = TextDrawCreate(548.0, 57.0+1.5, "_");
	TextDrawLetterSize(golod_box[0], 0.5, 0.38);
	TextDrawUseBox(golod_box[0], 1);
	TextDrawBoxColor(golod_box[0], 255);
	TextDrawTextSize(golod_box[0], 606.000000, 0.000000);

	golod_box[1] = TextDrawCreate(550.0, 59.0+1.5, "_");
	TextDrawLetterSize(golod_box[1], 0.5, -0.03);
	TextDrawUseBox(golod_box[1], 1);
	TextDrawBoxColor(golod_box[1], 0x305750FF);
	TextDrawTextSize(golod_box[1], 604.000000, 0.000000);   */

	Info_TD[0] = TextDrawCreate(0.468693, 434.000000, "LD_SPAC:white");
	TextDrawTextSize(Info_TD[0], 640.000000, 14.000000);
	TextDrawAlignment(Info_TD[0], 1);
	TextDrawColor(Info_TD[0], 1347312895);
	TextDrawFont(Info_TD[0], 4);

	Info_TD[1] = TextDrawCreate(278.301666, 434.583374, "_");
	TextDrawLetterSize(Info_TD[1], 0.223235, 1.220833);
	TextDrawAlignment(Info_TD[1], 1);
	TextDrawColor(Info_TD[1], -1);
	TextDrawSetShadow(Info_TD[1], 0);
	TextDrawFont(Info_TD[1], 2);
	
	

	
	////print ("OnGameModeInitLOG - 7");
	//
	//zones[PLAYER_IN_SAN_FIERRO] 	= CreateDynamicPolygon(ZONE_SF);
	//zones[PLAYER_IN_LOS_SANTOS] 	= CreateDynamicPolygon(ZONE_LS);
	//zones[PLAYER_IN_LAS_VENTURAS] 	= CreateDynamicPolygon(ZONE_LV);
	for(new i;i<20;i++)
	{
		gDSTurn[i] = INVALID_PLAYER_ID;
	}
	gDSTurnText = CreateDynamic3DTextLabel("_",CWHITE,-2045.3229,-108.7802,35.2599+1.5, 10.0);

	for(new i;i<20;i++)
	{
		gAPTurn[i] = INVALID_PLAYER_ID;
	}
	gAPTurnText = CreateDynamic3DTextLabel("_",CWHITE,2300.7007,-2000.0848,-34.1641+1.5, 10.0);

	for(new i;i<20;i++)
	{
		gPDTurn[i] = INVALID_PLAYER_ID;
	}
	///print ("OnGameModeInitLOG - 8");
	gPDTurnText = CreateDynamic3DTextLabel("_",CWHITE,-2045.3921,-106.4827,35.2599+1.5, 10.0);
	CreateDynamic3DTextLabel("{"#cINFO"}Получение лицензии\nпо вождению",CWHITE,-2045.0464,-104.6609,35.2599+0.8, 15.0);
	CreateDynamic3DTextLabel("{"#cINFO"}Получение лицензии\nна оружие",CWHITE,-2039.4603,-103.7440,35.2599+0.8, 15.0);
	CreateDynamic3DTextLabel("{"#cINFO"}Получение паспорта",CWHITE,2301.33, -1990.30, -34.16+1.5, 15.0);
	//
	//LoadKoleso();
	//
	door_prison[0]=CreateDynamicObject(19303,1606.138,-1629.150,1584.106,0.000,0.000,90.099,1,4,-1,250.0);
	door_prison[1]=CreateDynamicObject(19303,1606.138,-1629.150,1584.106,0.000,0.000,90.099,2,4,-1,250.0);
	door_prison[2]=CreateDynamicObject(19303,1606.138,-1629.150,1584.106,0.000,0.000,90.099,3,4,-1,250.0);
	//
	door_prison[3]=CreateDynamicObject(19857,1634.125,-1626.630,1584.039,0.000,0.000,89.999,1,4,-1,250.0);
	door_prison[4]=CreateDynamicObject(19857,1634.125,-1626.630,1584.039,0.000,0.000,89.999,2,4,-1,250.0);
	door_prison[5]=CreateDynamicObject(19857,1634.125,-1626.630,1584.039,0.000,0.000,89.999,3,4,-1,250.0);

	door_prison[6]=CreateDynamicObject(19857,1642.079,-1630.958,1584.039,0.000,0.000,0.000,1,4,-1,250.0);
	door_prison[7]=CreateDynamicObject(19857,1642.079,-1630.958,1584.039,0.000,0.000,0.000,2,4,-1,250.0);
	door_prison[8]=CreateDynamicObject(19857,1642.079,-1630.958,1584.039,0.000,0.000,0.000,3,4,-1,250.0);
	//
	door_prison[9]=CreateDynamicObject(19303,1614.305,-1630.911,1584.106,0.000,0.000,0.000,1,4,-1,250.0);
	door_prison[10]=CreateDynamicObject(19303,1614.305,-1630.911,1584.106,0.000,0.000,0.000,2,4,-1,250.0);
	door_prison[11]=CreateDynamicObject(19303,1614.305,-1630.911,1584.106,0.000,0.000,0.000,3,4,-1,250.0);
	//
	door_prison[12]=CreateDynamicObject(19303,1614.307,-1627.513,1584.106,0.000,0.000,0.000,1,4,-1,250.0);
	door_prison[13]=CreateDynamicObject(19303,1614.307,-1627.513,1584.106,0.000,0.000,0.000,2,4,-1,250.0);
	door_prison[14]=CreateDynamicObject(19303,1614.307,-1627.513,1584.106,0.000,0.000,0.000,3,4,-1,250.0);
	//
	SetDynamicObjectMaterial(door_prison[3], 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(door_prison[4], 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(door_prison[5], 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(door_prison[6], 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(door_prison[7], 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(door_prison[8], 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	//
	CreateDynamic3DTextLabel("Место загрузки металла / патрон",0xFFFFFFFF,2092.2625,-103.4661,-0.2244+1.0,40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1, -1, -1);
	CreateDynamic3DTextLabel("Место загрузки металла / патрон",0xFFFFFFFF,2064.2183,-102.4871,8.8051+1.0,40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1, -1, -1);
	CreateDynamic3DTextLabel("Устройство на работу",0xFFFFFFFF,-1064.6805,-1210.5090,129.2559+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1, -1, -1);
	//
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1959.3984, 1025.6953, 992.5078+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1963.7109, 1025.6953, 992.5078+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1963.7109, 1010.1172, 992.0078+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1959.3984, 1010.1172, 992.0078+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1134.71582, -4.39510, 1000.57813+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1125.13574, -4.39509, 1000.57813+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1125.08202, 7.61720, 1001.57031+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Начать игру\n{7FB151}H", 0xD9F6F6AA, 1121.21092, 7.61720, 1001.57031+1, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	//
	CreateDynamic3DTextLabel("{"#cBLUE"}BMX паркур",-1,544.5434,-2342.9980,18.4500+0.8,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 0, 0);
	CreateDynamic3DTextLabel("{"#cBLUE"}Дайвинг",-1,544.5546,-2346.6885,18.4500+0.8,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 0, 0);
	CreateDynamic3DTextLabel("{"#cBLUE"}Дерби",-1,544.6996,-2345.0627,18.4500+0.8,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 0, 0);
	//
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 772.1121, 9.4133, 1001.2000, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 773.4795, -1.2654, 1000.7258, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 772.9084, 1.4091, 1000.7210, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 773.4990, 5.3875, 1000.7802, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 820.4985, -5.0157, 1004.2050, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 820.0707, -7.8297, 1004.2050, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 822.2966, -8.6826, 1004.2050, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, 824.7230, -9.2819, 1004.3046, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);

	CreateDynamic3DTextLabel("Использовать\n{7FB151}Нажмите H", 0xD9F6F6AA, -1708.4163, 10.9306, 3.5547, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);

	CreateDynamicObject(19474, 1961.53760, 1023.41919, 992.01300,   0.0, 0.0, 0.0,10,10,-1, 100.0, 100.0);
	CreateDynamicObject(19474, 1961.53760, 1011.80957, 992.01300,   0.0, 0.0, 0.0,10,10,-1, 100.0, 100.0);
	CreateDynamicObject(19474, 1961.53760, 1017.41620, 992.01300,   0.0, 0.0, 0.0,10,10,-1, 100.0, 100.0);

	siren_area=CreateDynamicSphere(2162.7239,-102.3602,6.7436, 2.0, 0, 0, -1);

	SetActorVirtualWorld(CreateActor(27,-866.6058,-1712.1967,-54.8758+0.8,350.0624),0);
	SetActorVirtualWorld(CreateActor(194,592.3491,-2398.5359,18.4500+0.8,359.9371),0);

	CreateDynamicObject(966,2350.7502,2423.8459,9.6203,0.0000,0.0000,0.0000,0,0,-1, 100.0, 100.0);
	actors[0]=CreateActor(6,1623.8326,-1651.0718,1578.7560,359.3790);
	actors[1]=CreateActor(6,1623.8326,-1651.0718,1578.7560,359.3790);
	actors[2]=CreateActor(6,1623.8326,-1651.0718,1578.7560,359.3790);
	for(new acc=0; acc<=2; acc++)
	{
		SetActorVirtualWorld(actors[acc],acc+1);
		SetActorInvulnerable(acc, true);
	}
	/////print ("OnGameModeInitLOGEX - 1");
	Urna[0] = CreateDynamicSphere(2314.6254,-2008.9281,-35.3740,1.5); // Сфера для урны №1
	Urna[1] = CreateDynamicSphere(2314.6335,-2010.4687,-35.3740,1.5); // Сфера для урны №2
	Urna[2] = CreateDynamicSphere(2314.6425,-2012.0991,-35.3740,1.5); // Сфера для урны №3
	Urna[3] = CreateDynamicSphere(2310.28, -2013.31, -34.16, 1.0); // Сфера помощи
	/////print ("OnGameModeInitLOGEX - 2");
	frac_areaid[3] = CreateDynamicSphere(312.4241,-165.9406,999.6010,1.0);

	SetDynamicObjectMaterialText(CreateDynamicObject(19475, 2314.6254 - 2.0,-2008.9281,-35.3740,0.0000,0.0000,-89.6999), 0, "{000000}3", 10, "Arial", 16, 1, -1, 0, 1);
	SetDynamicObjectMaterialText(CreateDynamicObject(19475, 2314.6335 - 2.0,-2010.4687,-35.3740,0.0000,0.0000,-89.6999), 0, "{000000}2", 10, "Arial", 16, 1, -1, 0, 1);
	SetDynamicObjectMaterialText(CreateDynamicObject(19475, 2314.6425 - 2.0,-2012.0991,-35.3740,0.0000,0.0000,-89.6999), 0, "{000000}1", 10, "Arial", 16, 1, -1, 0, 1);

	CreateDynamicObject(3862, 2312.3264,-2006.4725,-34.1640,0.0000,0.0000,-0.3999); // Палатка
	CreateDynamicObject(2446, 2314.6254,-2008.9281,-35.3740,0.0000,0.0000,-89.6999); // Урна №1
	CreateDynamicObject(2446, 2314.6335,-2010.4687,-35.3740,0.0000,0.0000,-89.6999); // Урна №2
	CreateDynamicObject(2446, 2314.6425,-2012.0991,-35.3740,0.0000,0.0000,-89.6999); // Урна №3
	//2312.3264,-2006.4725,-34.1640
	CreatePickup(1239, 23, 2310.28, -2013.31, -34.16, 700); // Пикап помощи
	/////print ("OnGameModeInitLOGEX - 3");

	CreateDynamicMapIcon(1309.7517,-1369.4355,13.5617, 56, CWHITE, 0, -1, -1, 400.0);//отель
	CreateDynamicMapIcon(-151.8914,-311.7426,1.4218, 56, CWHITE, 0, -1, -1, 400.0);//zavod
	CreateDynamicMapIcon(1474.7887,-2294.7991,44.3844, 5, CWHITE, 0, -1, -1, 400.0);//самолётик
	CreateDynamicMapIcon(1171.5248,-1338.0427,31.4706, 22, CWHITE, 0, -1, -1, 400.0);//крестик
	CreateDynamicMapIcon(1583.8346,1768.9252,10.8203, 22, CWHITE, 0, -1, -1, 400.0);//крестик
	CreateDynamicMapIcon(-2655.1111,639.9493,14.4545, 22, CWHITE, 0, -1, -1, 400.0);//крестик
	CreateDynamicMapIcon(2019.4891,1007.6440,10.8203, 44, CWHITE, 0, -1, -1, 400.0);
	CreateDynamicMapIcon(-1085.9171,-1643.6410,76.3672, 56, CWHITE, 0, -1, -1, 400.0);//работы
	CreateDynamicMapIcon(-1059.4337,-1205.3889,129.2188, 56, CWHITE, 0, -1, -1, 400.0);//работы
	/////print ("OnGameModeInitLOGEX - 4");
 	for(new v = 0; v < MAX_RENT_VEHICLES; v++)
	{
	    V_RENT[v][V_RENT_VEHICLE] = INVALID_VEHICLE_ID;
	    V_RENT[v][V_RENT_PLAYER] = INVALID_PLAYER_ID;
	    V_RENT[v][V_RENT_TEXT] = Text3D:-1;
	}
	for(new clear = 0; clear < MAX_PLAYERS; clear++)
	{
		TextHead[clear] = Text3D:-1;
		counthead[clear] = -1;
		SetPlayerDataToDefault(clear);
	}
	/////print ("OnGameModeInitLOGEX - 5");
	////////////////////////////////
	// Синхронизация времени для Timer_Unix

	unix = gettime(tmphour, tmpminute, tmpsecond); // обнволяем unix и tmphour, tmpminute, tmpsecond
	new sunix = unix; // sunix равна unix

	sunix -= tmpminute*60; // в sunix обнуляем минуты
	sunix -= tmpsecond; // в sunix обнуляем минуты

	unix_hour = sunix+3600; // добавляем в unix_h - час чтобы Timer_Unix сработал кореектно в 00 минут
	unix_min = sunix+60; // добавляем в unix_m - минуту чтобы Timer_Unix сработал кореектно в 00 секунд
	unix_HEALTHTIMER = sunix+240;
	unix_sec = sunix;
	unix_three_sec = sunix+3;
	////////////////////////////////

	if(timers_unix != -1)
	{
		KillTimer(timers_unix);
		timers_unix = -1;
	}
	if(timers_unix == -1) timers_unix = SetTimer("Timer_Unix",125,true); // 250 ms
	////

	CaptureTime = unix;

	/*TimerTick[0]=GetTickCount();
	TimerTick[1]=GetTickCount();
	SetTimer("OnPlayerUpdateTimer", 1000, 1);*/

	//Letim[0] = CreateDynamicObject(14553,2058.0996094,-2588.7998047,25.5000000,0.0000000,0.0000000,216.9964600);
	//Letim[1] = CreateDynamicObject(14548,2059.2998047,-2592.0996094,25.2999992,0.0000000,0.0000000,218.9959717);

	CheckTimeTimer=unix;

	new moved = 0;
	for(moved = 0; moved < MAX_OBJECT_MOVED; moved++)
	{
		if(moved==24) continue;
		moved_info[moved][moved_id]=CreateDynamicObject(moved_info[moved][moved_modelid],moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ],moved_info[moved][movedPosRotationX],moved_info[moved][movedPosRotationY],moved_info[moved][movedPosRotationZ]);

		if(moved>=43 && moved<=71 || moved == 1 || moved == 2 || moved == 37 || moved == 38)
		{
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,moved_info[moved][moved_id], E_STREAMER_WORLD_ID, 1);
		}
		else CreateDynamic3DTextLabel("Для открытия нажмите {"#cORANGE"}'H' {"#cWHITE"}- если в машине\nили {"#cORANGE"}'F' {"#cWHITE"}- если пешком.", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 8.0);
	}//
	SetDynamicObjectMaterial(moved_info[6][moved_id], 0, 2823, "gb_kitchtake", "GB_takeaway04", 0);

	SetDynamicObjectMaterial(moved_info[36][moved_id], 0, 19325, "lsmall_shops", "lsmall_window01", 0);
	SetDynamicObjectMaterial(moved_info[36][moved_id], 1, 19325, "lsmall_shops", "lsmall_window01", 0);

	CreateDynamicObject(1495,-1621.8956,688.3060,6.2275,0.0000,0.0000,0.0000,0,0,-1, 100.0, 100.0);
	CreateDynamicObject(1495,-1620.4497,688.3464,6.2301,0.0000,0.0000,0.0000,0,0,-1, 100.0, 100.0);
	//
	CreateDynamicObject(12990, 279.7328,-1880.9749,0.9761,16.5000,0.0000,171.6000);
	CreateDynamicObject(12990, 259.8189,-2166.9421,1.6130,12.1000,0.0000,0.0000);
	CreateDynamicObject(12990, -2398.55371, 1414.82227, 2.24890, -6.00000, 0.00000, 0.00000);
	//
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2089.8169,-1446.3885,1516.7599+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2089.7859,-1452.1010,1516.7599+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2089.7288,-1457.8474,1516.7599+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2089.7097,-1463.3544,1516.7599+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2091.7673,-1440.2495,1520.0408+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2091.7454,-1446.0283,1520.0420+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2091.7576,-1451.1161,1520.0431+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2091.7576,-1451.1161,1520.0431+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);
	CreateDynamic3DTextLabel("Нажмите {"#cWHITE"}F{29D4FF} \nчтобы открыть решетку", 0x29D4FFFF, 2091.6736,-1462.4845,1520.0443+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 10, 5);

	////print ("OnGameModeInitLOG - 8");
	//CreateDynamic3DTextLabel("Заехать в автомастерскую {"#cWHITE"}'H'", 0xff9900FF, 944.5289,-1738.4126,13.5546+1.5, 15.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);

/*	for(new i = 0; i < 10; i++)
	{
		CreateDynamic3DTextLabel("{"#cORANGE"}Чтобы лечь на койку нажмите {"#cWHITE"}'F'", 0xFF9900AA,BolkaSpawn[i][0], BolkaSpawn[i][1], BolkaSpawn[i][2], 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1, -1, 4);
	} */
	RaceTextLabel = CreateDynamic3DTextLabel("\n\n\n\nДля выхода из гонки нажмите {"#cWHITE"}Y", 0x29D4FFFF, 84.9117,3437.8345,5.5108, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
	LimitGlobalChatRadius(13.0);
	SetNameTagDrawDistance(30.0);
	LimitPlayerMarkerRadius(70.0);
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	SetGravity(0.012);

	SetWeather(CurrentWeazer);
	//SetTimer("UpdateWeather",3600 * 1000,1);
	////print ("OnGameModeInitLOG - 9");

/*	AddPlayerClassEx(0,78,Fractions[0][fractionX],Fractions[0][fractionY],Fractions[0][fractionZ]+0.3,Fractions[0][fractionA],0,0,0,0,0,0);
	for(new i = 1; i < 27; i++)
	{
		AddPlayerClassEx(i,fChangeSkin[i-1][0],Fractions[i][fractionX],Fractions[i][fractionY],Fractions[i][fractionZ]+0.3,Fractions[i][fractionA],0,0,0,0,0,0);
	}
	AddPlayerClassEx(BOLKA_TEAM,1,BolkaSpawn[0][0],BolkaSpawn[0][1],BolkaSpawn[0][2]+0.3,0.0,0,0,0,0,0,0);*/
	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);
	Load3DTexts();
	LoadStaticDraws();

	CreateDynamic3DTextLabel("Вход в здание", 0x33CCFFAA, 1835.3551,-1293.8062,131.7344+0.8, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 20.0);
	CreateDynamic3DTextLabel("Вход на крышу", 0x33CCFFAA, 1835.3121,-1293.8875,125.7266+0.8, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 20.0);
	CreateDynamic3DTextLabel("Вход в \nРадиоцентр ЛС", 0x33CCFFAA, 1788.8523,-1296.1899,13.4442+1.0, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 20.0);
	CreateDynamic3DTextLabel("Выход из \nРадиоцентра ЛС", 0x33CCFFAA, 1788.8898,-1297.6683,13.3842+1.0, 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 20.0);


	for(new i = 0; i < 3; i++)
	{
		ElevatorObject[i][0] = CreateDynamicObject(18755, 1786.678100, -1303.459472, GetDoorsZCoordForFloor(i) + 0.059523, 0.000000, 0.000000, 270.000000);
		ElevatorObject[i][1] = CreateDynamicObject(18757, 1786.627685, -1303.459472, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);
		ElevatorObject[i][2] = CreateDynamicObject(18756, 1786.627685, -1303.459472, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);
		//
		OpenElevator(i);
	}

	SetDynamicObjectMaterialText(CreateDynamicObject(19480,1810.2304,-1292.9591,15.4687,0.0,0.0,132.6999), 0, "Радиоцентр ЛC", OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	SetDynamicObjectMaterialText(CreateDynamicObject(19480,1835.98096 - 0.38, -1293.71545, 127.72340,0.00000, 0.00000, 180), 0,  "Выход\nна крышу",OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	CreateSIObjects();
	DoorOpen = CreateDynamicObject(2634,2144.178,1627.082,994.2620,0.0000000,0.0000000,180.0000000);
	//r_gettime(tmphour, tmpminute, tmpsecond);
	//FixHour(tmphour);
	//tmphour = shifthour;
	//ghour = tmphour;
	SetWorldTime(tmphour);



	//gBarMafia = CreateDynamicPickup(1484,2,-81.5382,116.2590,4007.0945);
	gBarAcessories=CreateDynamicCP(421.7471,-77.9264,1001.8047,1.0,-1,-1,-1,200.0);
	gRieltor=CreateDynamicCP(1490.6398,1305.7406,1093.2964,1.0,-1,-1,-1,100.0);
	GunPD = CreateDynamicCP(1623.5820,-1649.2311,1578.76-0.5,0.8,-1,4,-1,200.0);
	//
	frac_text[19] = CreateDynamic3DTextLabel("Металл: {"#cGREEN"}0\n{"#cWHITE"}Патронов: {"#cGREEN"}0", -1, 312.4241,-165.9406,1000.3010, 5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
	CreateDynamicCP(312.4241,-165.9406,999.6010,1.2,-1,-1,-1,150.0);
	sellpatrcp[0] = CreateDynamicCP(-1719.89, 13.99, 3.59,0.5,0,0,-1,20.0);
	sellpatrcp[1] = CreateDynamicCP(-1697.4017,5.9820,3.5547,5.0,0,0,-1,20.0);

	CreateDynamic3DTextLabel("Загрузка металла/патронов для армий", -1, -1697.4017,5.9820,3.5547+0.8, 5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
	CreateActor(73, -1720.3877,14.4879,3.5829,226.9771);
	//
	//CreateDynamic3DTextLabel("Бар", CYELLOW, -81.5382,116.2590,4007.0945+0.8, 5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);

	///print ("OnGameModeInitLOG - 10");

	//gettime(ghour, gminute, gsecond);
	//FixHour(ghour);
	//ghour = shifthour;
	/*if(!realtime)
	{
		SetWorldTime(wtime);
	}*/
	for(new i = 0; i < 4; i++)
	{
		CreatePickup(1318,1,gHouseExitInteriorPos[i][0],gHouseExitInteriorPos[i][1],gHouseExitInteriorPos[i][2],-1);
		//CreateDynamic3DTextLabel("Для выхода используйте {"#cWHITE"}'F' {"#cORANGE"}или {"#cWHITE"}'/exit'", 0xff9900FF, gHouseExitInteriorPos[i][0],gHouseExitInteriorPos[i][1],gHouseExitInteriorPos[i][2], 3.0);
		CreatePickup(19135,1,gWashRoomPos[i][0],gWashRoomPos[i][1],gWashRoomPos[i][2]-0.8,-1);
		CreateDynamic3DTextLabel("{"#cBLUE"}Душ",-1,gWashRoomPos[i][0],gWashRoomPos[i][1],gWashRoomPos[i][2],3.0);
		CreateDynamic3DTextLabel("Чтобы уснуть нажмите {"#cWHITE"}'F'",0xff9900FF,gSleepPos[i][0],gSleepPos[i][1],gSleepPos[i][2]+0.8,3.0);
		gWashRoomAreaid[i]=CreateDynamicSphere(gWashRoomPos[i][0],gWashRoomPos[i][1],gWashRoomPos[i][2],1.0);
	}
	for(new i = 0; i < 4; i++)
	{
		for(new im = 0; im < 3; im++)
		{
			gHouseImproveArea[i][im] = CreateDynamicSphere(gHouseImproveItem[im][i][0],gHouseImproveItem[im][i][1],gHouseImproveItem[im][i][2],2.0);
			CreateDynamicObject(gHouseImproveModelid[im],gHouseImproveItem[im][i][0],gHouseImproveItem[im][i][1],gHouseImproveItem[im][i][2],gHouseImproveItem[im][i][3],gHouseImproveItem[im][i][4],gHouseImproveItem[im][i][5]);
			format(stringer,64,"{F5B899}' %s '\n", gHouseImproveName[im]);
			CreateDynamic3DTextLabel(stringer,-1,gHouseImproveItem[im][i][0]+(1.0 * floatsin(-gHouseImproveItem[im][i][6], degrees)),gHouseImproveItem[im][i][1]+(1.0 * floatcos(-gHouseImproveItem[im][i][6], degrees)),(im == 0) ? (gHouseImproveItem[im][i][2] + 0.8) : (gHouseImproveItem[im][i][2] + 1.2), 4.0);
			CreateDynamicPickup(1239, 23, gHouseImproveItem[im][i][0]+(1.0 * floatsin(-gHouseImproveItem[im][i][6], degrees)),gHouseImproveItem[im][i][1]+(1.0 * floatcos(-gHouseImproveItem[im][i][6], degrees)),(im == 0) ? (gHouseImproveItem[im][i][2]) : (gHouseImproveItem[im][i][2] + 0.4));
		}
	}
	for(new i = 0; i < 4; i++)
	{
		gExitHome[i]=CreateDynamicSphere(gHouseExitInteriorPos[i][0],gHouseExitInteriorPos[i][1],gHouseExitInteriorPos[i][2],1.0);
	}
	CreateDynamicMapIcon(1318.9912,1714.6836,1012.3828,44,0); // Casino LV


	CreateDynamicMapIcon(-2.9803,-363.4466,5.4297,51,0); //
	CreateDynamicMapIcon(2200.8857,1394.2892,11.0625,55,0); //Car lv
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); //Car ls
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); //Car sf
	/// CreateDynamicMapIcon(-1638.6560,1206.3889,68.9698,55,0); //car sf
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); //!
	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,19,0); //!
	CreateDynamicMapIcon(2312.4189,-1641.4185,22.3378,49,0); //бар
	CreateDynamicMapIcon(1463.0807,-1021.3668,23.9861,52,0);// банк лс
	CreateDynamicMapIcon(-2026.9664,-100.3766,35.1641,36,0); //АШ
	CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); //точка наблюдения
	CreateDynamicMapIcon(-2192.2615,979.2996,80.0000,27,0);
	CreateDynamicMapIcon(1943.4119,2158.2234,10.8203,27,0);
	CreateDynamicMapIcon(1005.0600,-1436.0242,13.5469,27,0);

	/*for(new veh = 1, j = GetVehiclePoolSize(); veh <= j; veh++)
	{
		for(new fraction=0;fraction<27; fraction++)
		{
			if(veh >= FractionsVehicle[fraction][0] && veh <= FractionsVehicle[fraction][1])
			{
				SetVehicleNumberPlate(veh, Fractions[fraction][fractionName]);
			}
		}
	}*/


	///print ("OnGameModeInitLOG - 11");

	//mysql_query(connects, !"SET CHARACTER SET 'cp1251'");
	//mysql_query(connects, !"SET NAMES 'cp1251'");
	//mysql_query(connects, !"SET character_set_client = 'cp1251'");
	//mysql_query(connects, !"SET character_set_connection = 'cp1251'");
	//mysql_query(connects, !"SET character_set_results = 'cp1251'");
	//mysql_query(connects, !"SET SESSION collation_connection = 'cp1251_general_ci'");
	mysql_set_charset("cp1251");
	/*mysql_pquery(connects,"SET NAMES cp1251","","");
	mysql_pquery(connects,"set character_set_client=\'cp1251\'","","");
	mysql_pquery(connects,"set character_set_results=\'cp1251\'","","");
	mysql_pquery(connects,"set collation_connection=\'cp1251_general_ci\'","","");*/
	///mysql_set_charset("cp1251_general_ci", connects);

	new Cache:result, rows;
	new sql_string [ 88 ];
	result = mysql_query ( connects, "SELECT * FROM `fractions`");
	rows = cache_num_rows();
	for ( new i = 0; i < rows; i++ )
	{
		cache_get_value_int ( i, "f_id", f_info [ i ] [ f_id ] ) ;
		cache_get_value ( i, "f_name", f_info [ i ] [ f_name ], 50 );
		cache_get_value ( i, "f_message", f_info [ i ] [ f_message ], 144 );

		cache_get_value ( i, "f_spawn", sql_string , 88 ), sscanf ( sql_string, "p<,>ffffdd",
		f_info [ i ] [ f_spawn ] [ 0 ], f_info [ i ] [ f_spawn ] [ 1 ], f_info [ i ] [ f_spawn ] [ 2 ], f_info [ i ] [ f_spawn ] [ 3 ],
		f_info [ i ] [ f_spawn_int ], f_info [ i ] [ f_spawn_virt ] ) ;

		cache_get_value ( i, "f_put", sql_string , 88 ), sscanf ( sql_string, "p<,>fff",
		frac_place_put [ i ] [ 0 ], frac_place_put [ i ] [ 1 ], frac_place_put [ i ] [ 2 ] ) ;

		cache_get_value ( i, "f_bank", sql_string , 88 ), sscanf ( sql_string, "p<,>fffdd",
		f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ],
		f_info [ i ] [ f_bank_int ], f_info [ i ] [ f_bank_virt ] ) ;

		cache_get_value ( i, "f_bl_config", sql_string , 88 ), sscanf ( sql_string, "p<,>ddd",
		f_info [ i ] [ f_bl_config ] [ 0 ], f_info [ i ] [ f_bl_config ] [ 1 ], f_info [ i ] [ f_bl_config ] [ 2 ] ) ;

		cache_get_value_int ( i, "f_rank_invite", f_info [ i ] [ f_rank_invite ] ) ;
		cache_get_value_int ( i, "f_rank_uninvite", f_info [ i ] [ f_rank_uninvite ] ) ;
		cache_get_value_int ( i, "f_rank_giverank", f_info [ i ] [ f_rank_giverank ] ) ;
		cache_get_value_int ( i, "f_salary", f_info [ i ] [ f_salary ] ) ;

		fraction_amount ++ ;

		//printf ( "%d | ID: %d |  Name: %s", i, f_info [ i ] [ f_id ], f_info [ i ] [ f_name ] ) ;
		if ( frac_place_put[ i ] [ 0 ] != 0.0)
		{
			frac_place_put_areaid_text [ i ] = CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n{"#cBLUE"}металла и патронов", 0xFFFFFF20, frac_place_put[ i ][0],frac_place_put[ i ][1],frac_place_put[ i ][2]+0.8, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
			frac_place_put_areaid_cp [ i ] = CreateDynamicPickup(1239,1,frac_place_put[ i ] [ 0 ],frac_place_put[ i ] [ 1 ],frac_place_put[ i ] [ 2 ]);
			frac_place_put_areaid[ i ] = CreateDynamicSphere ( frac_place_put[ i ] [ 0 ], frac_place_put[ i ] [ 1 ], frac_place_put[ i ] [ 2 ], 1.0);
		}
		if(f_info [ i ] [ f_bank ] [ 0 ]==0.0) f_info [ i ] [ f_bank ] [ 0 ] = 100.0;
		if(f_info [ i ] [ f_bank ] [ 1 ]==0.0) f_info [ i ] [ f_bank ] [ 1 ] = 100.0;
		if(f_info [ i ] [ f_bank ] [ 2 ]==0.0) f_info [ i ] [ f_bank ] [ 2 ] = 100.0;

		if ( ( i >= 12 && i <= 18 ) || i == 5 || i == 6 || i == 24)
		{
			frac_areaid [ i ] = CreateDynamicSphere ( f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ],1.0, f_info [ i ] [ f_bank_virt ] ) ;
			frac_areaid_cp [ i ] = CreateDynamicCP ( f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ],1.0, f_info [ i ] [ f_bank_virt ] ) ;
			frac_text [ i ] = CreateDynamic3DTextLabel("___",-1, f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ] + 1.5, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, f_info [ i ] [ f_bank_virt ] ) ;
			UpdateStoreGang ( i ) ;
		}
		if(i>0)
		{
			cache_get_value_int ( i, "fChangeSkin_0", fChangeSkin[i - 1][0] ) ;
			cache_get_value_int ( i, "fChangeSkin_1", fChangeSkin[i - 1][1] ) ;
			cache_get_value_int ( i, "fChangeSkin_2", fChangeSkin[i - 1][2] ) ;
			cache_get_value_int ( i, "fChangeSkin_3", fChangeSkin[i - 1][3] ) ;
			cache_get_value_int ( i, "fChangeSkin_4", fChangeSkin[i - 1][4] ) ;
			cache_get_value_int ( i, "fChangeSkin_5", fChangeSkin[i - 1][5] ) ;
			cache_get_value_int ( i, "fChangeSkin_6", fChangeSkin[i - 1][6] ) ;
			cache_get_value_int ( i, "fChangeSkin_7", fChangeSkin[i - 1][7] ) ;
			cache_get_value_int ( i, "fChangeSkin_8", fChangeSkin[i - 1][8] ) ;
			cache_get_value_int ( i, "fChangeSkin_9", fChangeSkin[i - 1][9] ) ;
			/*if(i>0 && i<27)
			{
				if(fChangeSkin[i - 1][SS]==0)
				{
					if(default_fChangeSkin[i - 1][SS] != 0)
					{
						fChangeSkin[i - 1][SS] = default_fChangeSkin[i - 1][SS];
					}
				}
			}*/
		}
	}
	gang_map_icons [ 0 ] = CreateDynamicMapIcon(frac_place_put [ 12 ] [ 0 ], frac_place_put [ 12 ] [ 1 ], frac_place_put [ 12 ] [ 2 ],59,0);  // баллас
	gang_map_icons [ 1 ] = CreateDynamicMapIcon(frac_place_put [ 13 ] [ 0 ], frac_place_put [ 13 ] [ 1 ], frac_place_put [ 13 ] [ 2 ],60,0);  // вагос
	gang_map_icons [ 2 ] = CreateDynamicMapIcon(frac_place_put [ 15 ] [ 0 ], frac_place_put [ 15 ] [ 1 ], frac_place_put [ 15 ] [ 2 ],62,0);  // грув
	gang_map_icons [ 3 ] = CreateDynamicMapIcon(frac_place_put [ 17 ] [ 0 ], frac_place_put [ 17 ] [ 1 ], frac_place_put [ 17 ] [ 2 ],58,0);  // ацтек
	gang_map_icons [ 4 ] = CreateDynamicMapIcon(frac_place_put [ 18 ] [ 0 ], frac_place_put [ 18 ] [ 1 ], frac_place_put [ 18 ] [ 2 ],61,0);  // рифа

	CreateDynamic3DTextLabel("{"#cLIGHTGREEN"}Информация",CLIGHTGREEN,1436.8761,-1835.7511,2836.2830+0.8,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
	CreateDynamic3DTextLabel("{"#cBLUE"}Избирательные бюллетени\n'ALT'",CBLUE,1435.6144,-1838.8126,2836.2830+0.8,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);

	printf ( "[FRACTIONS] fractions loaded %d", fraction_amount ) ;
	cache_delete(result);

	new count_vehicles_load[MAX_FRACTIONS]={0, ...};

	result = mysql_query ( connects, "SELECT * FROM `fr_vehicles`");
	rows = cache_num_rows();

	if(rows)
	{
		for ( new i = 0; i < rows; i++ )
		{
			cache_get_value_int ( i, "f_c_id", gVehicles [ i ] [ vInc ] ) ;
			cache_get_value_int ( i, "f_c_model", gVehicles [ i ] [ vModel ] ) ;
			cache_get_value_int ( i, "f_c_fraction", gVehicles [ i ] [ vFraction ] ) ;
			cache_get_value_int ( i, "f_c_job", gVehicles [ i ] [ vJob ] ) ;
			cache_get_value_int ( i, "f_c_fraction_rank", gVehicles [ i ] [ vFractionRank ] ) ;
			cache_get_value_int ( i, "f_c_color_1", gVehicles [ i ] [ vCol1 ] ) ;
			cache_get_value_int ( i, "f_c_color_2", gVehicles [ i ] [ vCol2 ] ) ;

			cache_get_value_float ( i,"f_c_pos_x", gVehicles [ i ] [ veX ] ) ;
			cache_get_value_float ( i,"f_c_pos_y", gVehicles [ i ] [ veY ] ) ;
			cache_get_value_float ( i,"f_c_pos_z", gVehicles [ i ] [ veZ ] ) ;
			cache_get_value_float ( i,"f_c_pos_a", gVehicles [ i ] [ veA ] ) ;

			if(gVehicles [ i ] [ vFraction ] != -1)
			{
				gVehicles [ i ] [ vID ] = AddTeamVehicle ( gVehicles [ i ] [ vFraction ], gVehicles [ i ] [ vModel ], gVehicles [ i ] [ veX ], gVehicles [ i ] [ veY ], gVehicles [ i ] [ veZ ], gVehicles [ i ] [ veA ], gVehicles [ i ] [ vCol1 ], gVehicles [ i ] [ vCol2 ], -1 ) ;
				count_vehicles_load[gVehicles [ i ] [ vFraction ]]++;
				if ( gVehicles [ i ] [ vModel ] == 482 || (IsABenAirVehicle(i) && gVehicles [ i ] [ vFraction ] == 27) )
				{
					new Text3D:attachedtext;
					attachedtext = CreateDynamic3DTextLabel("{f0f0f0}Машина для загрузки \n{"#cBLUE"}металла и патронов", 0xFFFFFF20, 77.77, 77.77, 77.77, 5.0, INVALID_PLAYER_ID, gVehicles [ i ] [ vID ], 0, -1, -1, -1, 100.0);
					Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, attachedtext,E_STREAMER_ATTACH_OFFSET_Z, 2.0);
				}
				new j = 0;
				if ( gVehicles [ i ] [ vInc ] >= 311 && gVehicles [ i ] [ vInc ] <= 317 )
				{
					vehicles_ao [ j ] = gVehicles [ i ] [ vID ] ;
					j ++ ;
					if ( j == 7 )
					{
						for ( new count = 0 ; count < j ; count ++ )
						{
							if(gAttachedObjectToVehicle[vehicles_ao[count]-1][0] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicles_ao[count]-1][0]=CreateDynamicObject(19309,0.0,0.0,0.0,0.0,0.0,0.0, -1, -1, -1, 300.0, 300.0);
							if(gAttachedObjectToVehicle[vehicles_ao[count]-1][0] != INVALID_OBJECT) SetDynamicObjectMaterialText(gAttachedObjectToVehicle[vehicles_ao[count]-1][0], 0, "Учебная", 50, "Arial", 27, 1, -1, -65536, 1);
							if(gAttachedObjectToVehicle[vehicles_ao[count]-1][0] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicles_ao[count]-1][0], vehicles_ao[count], 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
						}

					}
				}
			}
			else
			{
				gVehicles [ i ] [ vID ] = AddJobVehicle ( gVehicles [ i ] [ vJob ], gVehicles [ i ] [ vModel ], gVehicles [ i ] [ veX ], gVehicles [ i ] [ veY ], gVehicles [ i ] [ veZ ], gVehicles [ i ] [ veA ], gVehicles [ i ] [ vCol1 ], gVehicles [ i ] [ vCol2 ], -1 ) ;
			}
			cache_get_value_float ( i,"f_fuel", gVehicles [ gVehicles [ i ] [ vID ] - 1 ] [ vFuel ] ) ;
			fraction_veh_amount ++ ;
		}
	}
	cache_delete(result);

	SelectBallObjectTextures[0] = TextDrawCreate(558.846801, 182.916397, "ld_beat:right");
	SelectBallObjectTextures[1] = TextDrawCreate(18.236341, 182.916397, "ld_beat:left");
	for(new j = 0; j < 2; j++){
		TextDrawTextSize(SelectBallObjectTextures[j], 60.000000, 60.000000);
		TextDrawAlignment(SelectBallObjectTextures[j], 1);
		TextDrawColor(SelectBallObjectTextures[j], -1);
		TextDrawBackgroundColor(SelectBallObjectTextures[j], 0x00000000);
		TextDrawFont(SelectBallObjectTextures[j], 4);
		TextDrawSetSelectable(SelectBallObjectTextures[j], true);
	}
	SelectBallObjectTextures[2] = TextDrawCreate(343.426208, 394.916717, "SELECT");
	TextDrawLetterSize(SelectBallObjectTextures[2], 0.435944, 2.189166);
	TextDrawTextSize(SelectBallObjectTextures[2], 524.275329, 341.833312);
	TextDrawAlignment(SelectBallObjectTextures[2], 2);
	TextDrawColor(SelectBallObjectTextures[2], -1);
	TextDrawUseBox(SelectBallObjectTextures[2], true);
	TextDrawBoxColor(SelectBallObjectTextures[2], -932315031);
	TextDrawSetOutline(SelectBallObjectTextures[2], 1);
	TextDrawBackgroundColor(SelectBallObjectTextures[2], 255);
	TextDrawFont(SelectBallObjectTextures[2], 2);
	TextDrawSetSelectable(SelectBallObjectTextures[2], true);
	td_flycontrol[0] = TextDrawCreate(546.918518, 289.910003, "ld_beat:down");
	td_flycontrol[1] = TextDrawCreate(546.918518, 226.106719, "ld_beat:up");
	td_flycontrol[2] = TextDrawCreate(571.253356, 258.083312, "ld_beat:right");
	td_flycontrol[3] = TextDrawCreate(522.113342, 257.499664, "ld_beat:left");
	td_flycontrol[4] = TextDrawCreate(544.673706, 254.250015, "ld_beat:cring");
	td_flycontrol[5] = TextDrawCreate(507.183593, 318.583099, "ld_beat:left");
	td_flycontrol[6] = TextDrawCreate(590.174926, 318.999786, "ld_beat:right");
	td_flycontrol[7] = TextDrawCreate(522.113342, 226.106719, "ld_beat:up");
	td_flycontrol[8] = TextDrawCreate(571.253356, 226.106719, "ld_beat:down");
	TextDrawTextSize(td_flycontrol[4], 23.894573, 29.750001);
	TextDrawTextSize(td_flycontrol[5], 17.000000, 20.000000);
	TextDrawTextSize(td_flycontrol[6], 17.000000, 20.000000);
	TextDrawTextSize(td_flycontrol[7], 17.000000, 20.000000);
	TextDrawTextSize(td_flycontrol[8], 17.000000, 20.000000);
	for ( new j =0; j<9; j++ )
	{
		if ( j < 4 ) TextDrawTextSize(td_flycontrol[j], 20.000000, 23.000000);
		TextDrawColor(td_flycontrol[j], -1);
		TextDrawBackgroundColor(td_flycontrol[0], 0x00000000);
		TextDrawFont(td_flycontrol[j], 4);
		TextDrawSetSelectable(td_flycontrol[j], true);
	}
	TextDrawColor(td_flycontrol[4], -170);
	for(new i = 0; i < 4; i++)
	{
		fly_ball_object[i]=CreateDynamicObject(19337,fly_ball_pos_spawn[i][0],fly_ball_pos_spawn[i][1],fly_ball_pos_spawn[i][2],0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
		fly_ball_pos_move[i][0]=fly_ball_pos_spawn[i][0];
		fly_ball_pos_move[i][1]=fly_ball_pos_spawn[i][1];
		fly_ball_pos_move[i][2]=fly_ball_pos_spawn[i][2];
		fly_ball_pos_move[i][3]=0.0;
		SetDynamicObjectMaterial(fly_ball_object[i], 3, 19297, "matlights", "invisible", 0);
		fly_ball_text[i]=CreateDynamic3DTextLabel(""F_BALL_TEXT"{F15A5A}[Не арендован]",-1,fly_ball_pos_spawn[i][0],fly_ball_pos_spawn[i][1],fly_ball_pos_spawn[i][2]+0.8,14.0);
		fly_ball_area[i]=CreateDynamicSphere(fly_ball_pos_move[i][0],fly_ball_pos_move[i][1],fly_ball_pos_move[i][2],10.0);
		AttachDynamicAreaToObject(fly_ball_area[i], fly_ball_object[i], STREAMER_OBJECT_TYPE_DYNAMIC, INVALID_PLAYER_ID);
	}

	for(new C = 0; C < MAX_FRACTIONS; C++)
	{
		if(count_vehicles_load[C]>25) printf ("[FRACTIONS] fraction number %d having %d vehicles. it's not good.", C, count_vehicles_load[C]);
	}
	printf ( "[FRACTIONS] fraction cars loaded %d", fraction_veh_amount ) ;
	LoadVehicles();

	result = mysql_query ( connects, "SELECT * FROM `fraction_weapon`");
	rows = cache_num_rows();
	if(rows)
	{
		for ( new i = 0 ; i < rows ; i++)
		{
		   new slot,fraction;
		   cache_get_value_int(i,"Slot",slot);
		   cache_get_value_int(i,"Fraction",fraction);
		   cache_get_value_int(i,"fwID",FW[slot][fraction][fwID]);
		   cache_get_value_int(i,"fwGunID",FW[slot][fraction][fwGunID]);
		   cache_get_value_int(i,"fwGunAmmo",FW[slot][fraction][fwGunAmmo]);
		   cache_get_value_int(i,"fwArmor",FW[slot][fraction][fwArmor]);
		   cache_get_value_int(i,"fwRank",FW[slot][fraction][fwRank]);
		   cache_get_value(i, "fwName", FW[slot][fraction][fwName],64);
		}
	}
	cache_delete(result);
	//
	result = mysql_query ( connects, "SELECT * FROM `business`");
	rows = cache_num_rows();
	if ( rows )
	{
		for(new i = 0; i < rows; i++)
		{
			cache_get_value_int(i,"ID",Business[i][bMysqlID]);
			cache_get_value_float(i,"PickupEnterX",Business[i][PickupEnterX]);
			cache_get_value_float(i,"PickupEnterY",Business[i][PickupEnterY]);
			cache_get_value_float(i,"PickupEnterZ",Business[i][PickupEnterZ]);
			cache_get_value_float(i,"EnterX",Business[i][EnterX]);
			cache_get_value_float(i,"EnterY",Business[i][EnterY]);
			cache_get_value_float(i,"EnterZ",Business[i][EnterZ]);
			cache_get_value_float(i,"EnterR",Business[i][EnterR]);
			cache_get_value(i, "Name",Business[i][BizName],31);
			cache_get_value(i, "Owner",Business[i][Owner],31);
			cache_get_value_int(i,"BuyPrice",Business[i][BuyPrice]);
			cache_get_value_int(i,"Bank",Business[i][Bank]);
			cache_get_value_int(i,"EnterPrice",Business[i][EnterPrice]);
			cache_get_value_int(i,"Lock",Business[i][Lock]);
			cache_get_value_int(i,"Mafia",Business[i][Mafia]);
			cache_get_value_int(i,"bType",Business[i][bType]);
			cache_get_value_int(i,"bLicenses",Business[i][bLicenses]);
			cache_get_value_int(i,"bProd",Business[i][bProd]);
			cache_get_value_int(i,"bProdOrder",Business[i][bProdOrder]);
			cache_get_value_int(i,"bProdOrderPrice",Business[i][bProdOrderPrice]);
			cache_get_value_int(i,"bAmountHour",Business[i][bAmountHour]);
			cache_get_value_int(i,"bCheckPower",Business[i][bCheckPower]);
			cache_get_value_int(i,"bHourClose",Business[i][bHourClose]);
			cache_get_value_int(i,"bHourProd",Business[i][bHourProd]);
			cache_get_value_int(i,"bAvtoProd",Business[i][bAvtoProd]);
			cache_get_value_int(i,"bProdMax",Business[i][bProdMax]);
			cache_get_value_int(i,"bHel",Business[i][bHel]);
			if(Business[i][EnterPrice] > 500) Business[i][EnterPrice]=20;
			if ( Business[i][bProd] >= Business[i][bProdMax] ) Business[i][bProd] = Business[i][bProdMax] - 10000;
			if ( Business[i][PickupEnterX] == 0.0) continue;
			switch(Business[i][bType])
			{
				case 0,3:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 52, CWHITE, 0, -1, -1, 200.0);
				case 1:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 14, CWHITE, 0, -1, -1, 200.0);
				case 2,5,7:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 48, CWHITE, 0, -1, -1, 200.0);
				case 4:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 49, CWHITE, 0, -1, -1, 200.0);
				case 6:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 10, CWHITE, 0, -1, -1, 200.0);
				case 8:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 50, CWHITE, 0, -1, -1, 200.0);
				case 9:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 29, CWHITE, 0, -1, -1, 200.0);
				case 10:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 6, CWHITE, 0, -1, -1, 200.0);
				case 11:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 45, CWHITE, 0, -1, -1, 200.0);
				case 12:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 7, CWHITE, 0, -1, -1, 200.0);
				case 13:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 47, CWHITE, 0, -1, -1, 200.0);
				case 14:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 34, CWHITE, 0, -1, -1, 200.0);
				case 15:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 42, CWHITE, 0, -1, -1, 200.0);
				case 16:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 54, CWHITE, 0, -1, -1, 200.0);
				case 17:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 44, CWHITE, 0, -1, -1, 200.0);
				case 18:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 51, CWHITE, 0, -1, -1, 200.0);
			}
			new model_pickup = 1239;
			switch(Business[i][bType])
			{
				case 0:model_pickup=1239;
				case 1:model_pickup=1582;
				case 2:model_pickup=1484;
				case 3:model_pickup=1239;
				case 4:model_pickup=1484;
				case 5:model_pickup=1484;
				case 6:model_pickup=2768;
				case 7:model_pickup=1484;
				case 8:model_pickup=1239;
				case 9:model_pickup=1239;
				case 10:model_pickup=2035;
				case 11:model_pickup=1275;
				case 12:model_pickup=1275;
				case 17:model_pickup=1275;
			}
			if(Business[i][bType] != 13)//
			{
				if(Business[i][bType] == 15)
				{
					new bactorid = CreateActor(69,1007.3037,-904.3650,1086.3500+0.8,185.8417);
					SetActorVirtualWorld(bactorid,i + 1);
				}
				if(Business[i][bType] == 17)
				{
				/*	Ручки автоматов */

					for ( new x = 0 ; x < sm_count; x ++ )
					{
						sm_hand [ x ] [ i + 1 ] = CreateDynamicObject ( 1832, sm_hand_coord [ x ] [ 0 ], sm_hand_coord [ x ] [ 1 ], sm_hand_coord [ x ] [ 2 ], sm_hand_coord [ x ] [ 3 ], sm_hand_coord [ x ] [ 4 ], sm_hand_coord [ x ] [ 5 ], i + 1 ) ;
						SetDynamicObjectMaterial ( sm_hand [ x ] [ i + 1 ], 0, -1, "none", "none", 255 ) ;
						SetDynamicObjectMaterial ( sm_hand [ x ] [ i + 1 ], 2, -1, "none", "none", 255 ) ;
					}

				/*	Слот-механизмы автоматов */

					for ( new x = 0 ; x < sm_count * 3; x ++ )
					{
						sm_slot [ x ] [ i + 1 ] = CreateDynamicObject ( 2349, sm_slot_coord [ x ] [ 0 ], sm_slot_coord [ x ] [ 1 ], sm_slot_coord [ x ] [ 2 ], sm_slot_coord [ x ] [ 3 ], sm_slot_coord [ x ] [ 4 ], sm_slot_coord [ x ] [ 5 ], i + 1 ) ;
					}
				}
				if(!strcmp(Business[i][Owner], "The State"))
				{
					format(stringer, 84, "%s\nБизнес продаётся!", Business[i][BizName]);
					Business[i][Label] = CreateDynamic3DTextLabel(stringer, CLIGHTGREEN, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
				}
				else
				{
					stringer[0] = EOS;
					format(stringer, 1000, BIZ_TEXT,Business[i][BizName],Business[i][Owner],(Business[i][bLicenses]) ? ("{33AA33}Бизнес работает легально") : ("{AA3333}Бизнес не имеет лицензию"), (Business[i][Mafia] == 5) ? ("La Cosa Nostra") : (Business[i][Mafia] == 6) ? ("Yakuza") : (Business[i][Mafia] == 14) ? ("Русская мафия") : ("Государство"),GetPriceEnter(i));
					Business[i][Label] = CreateDynamic3DTextLabel(stringer, -1, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
				}
				CreateDynamicCP(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 1.0, -1, -1, -1, DISTANCE_LABEL_BUSINESS);
				CreatePickup(1318, 1,
				bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 0 ],
				bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 1 ],
				bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 2 ], i + 1);
				CreatePickup(model_pickup, 1,
					bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 0 ],
					bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 1 ],
					bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 2 ], i + 1);
			}
			else
			{
				if(!strcmp(Business[i][Owner], "The State"))
				{
					format(stringer, 116, "%s продаётся\nдля приобретения Используйте команду /buyfuel", Business[i][BizName]);
					Business[i][Label] = CreateDynamic3DTextLabel(stringer, CLIGHTGREEN, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ]+0.5, DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
				}
				else
				{
					format(stringer, 232, "%s\nВладелец: %s\nСтоимость: %i$\nТоплива: %i литров.\nЦена за 1 литр: %i$\n\n{ffffff}Заправиться {ffff00}'NUM 2' {ffffff}или {ffff00}/fill", Business[i][BizName], Business[i][Owner],Business[i][BuyPrice],Business[i][bProd],Business[i][EnterPrice]);
					Business[i][Label] = CreateDynamic3DTextLabel(stringer, CLIGHTGREEN, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ]+0.5, DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
				}
			}
			Business[i][AreaE] = CreateDynamicSphere(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ],1.0,0,0);
			Business[i][AreaX] = CreateDynamicSphere(bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 0 ],bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 1 ],bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 2 ],1.0,i + 1, bizz_type [ Business [ i ] [ bType ] ] [ bz_interior ]);
			Business[i][AreaB] = CreateDynamicSphere(bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 0 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 1 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 2 ], 1.0, i + 1, bizz_type [ Business [ i ] [ bType ] ] [ bz_interior ]);
		}
	}
	CountBusiness = rows;
	printf("-> Бизнесы загружены (%d штук)", CountBusiness);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `gangzonestest`");
	rows = cache_num_rows();
	for(new idx = 0; idx < rows; idx++)
	{
		cache_get_value_int(idx,"ID",GZInfo[idx][gID]);
		cache_get_value_int(idx,"Tenure",GZInfo[idx][gFrakVlad]);
		cache_get_value_float(idx,"X",GZInfo[idx][gCoords][0]);
		cache_get_value_float(idx,"Y",GZInfo[idx][gCoords][1]);
		cache_get_value_float(idx,"Z",GZInfo[idx][gCoords][2]);
		cache_get_value_float(idx,"A",GZInfo[idx][gCoords][3]);
		GZInfo[idx][gIDs] = GangZoneCreate(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3]);
		VladGzone[GZInfo[idx][gFrakVlad]]++;
		GZInfo[idx][gzTimer] = 0;
		TotalGz ++;
	}
	UpdateInfoZones();
	Army = GangZoneCreate(-1220.6725, 542.0154, -1571.1744, 257.9100);
	printf("-> Ганг-зоны банд загружены (%d штук)", TotalGz);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `fractions_store`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new f = 0; f < rows; f++)
		{
			cache_get_value_int(f,"frac_patron",frac_patron[f]);
			cache_get_value_int(f,"frac_metall",frac_metall[f]);
			cache_get_value_int(f,"frac_money",frac_money[f]);
			cache_get_value_int(f,"frac_drugs",frac_drugs[f]);

			if(frac_money[f]>1000000) frac_money[f] = 1000000;
			if(frac_patron[f]>25000)frac_patron[f]=25000;
			if(frac_metall[f]>30000)frac_metall[f]=30000;
			if(frac_drugs[f]>20000)frac_drugs[f]=20000;
		}

		for(new hi2=0;hi2<MAX_HOUSES + 1;hi2++)
		{
			for(new i=0;i<9;i++)
			{
				if(i<3) gHouseDressObject[hi2][i] = INVALID_OBJECT;
				gHouseGunObject[hi2][i] = -1;
			}
		}
	}
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `loadmeria`");
	cache_get_value_index_int(0, 0, kazna);
	cache_get_value_index_int(0, 1, nalog);
	cache_delete(result);
	if(nalog >= 5000) nalog = 50;
	printf ("-> Фракционные склады загружены (%d штук)", rows);
	new cache_get_field_string[65];
	result = mysql_query ( connects, "SELECT * FROM `housetest`");
	TotalHouse = cache_num_rows();
	if(TotalHouse)
	{
		for(new houseid = 1; houseid <= TotalHouse; houseid++)
		{
			cache_get_value_int(houseid - 1,"hID",gHouses[houseid][hID]);
			cache_get_value_float(houseid - 1,"hEntrx",gHouses[houseid][houseX]);
			cache_get_value_float(houseid - 1,"hEntry",gHouses[houseid][houseY]);
			cache_get_value_float(houseid - 1,"hEntrz",gHouses[houseid][houseZ]);
			cache_get_value_float(houseid - 1,"houseA",gHouses[houseid][houseA]);
			cache_get_value_float(houseid - 1,"hCarx",gHouses[houseid][houseParkX]);
			cache_get_value_float(houseid - 1,"hCary",gHouses[houseid][houseParkY]);
			cache_get_value_float(houseid - 1,"hCarz",gHouses[houseid][houseParkZ]);
			cache_get_value_float(houseid - 1,"hCara",gHouses[houseid][houseParkR]);
			cache_get_value_int(houseid - 1,"hPrice",gHouses[houseid][hValue]);
			cache_get_value_int(houseid - 1,"hLock",gHouses[houseid][hLock]);
			cache_get_value_int(houseid - 1,"hDiscript",gHouses[houseid][hKlass]);
			cache_get_value_int(houseid - 1,"hDays",gHouses[houseid][hDays]);
			cache_get_value(houseid - 1, "hOwner",gHouses[houseid][houseOwner],31);
			cache_get_value(houseid - 1, "Arendator0",gHouseArendator[houseid][0],31);
			cache_get_value(houseid - 1, "Arendator1",gHouseArendator[houseid][1],31);
			cache_get_value(houseid - 1, "Arendator2",gHouseArendator[houseid][2],31);
			cache_get_value(houseid - 1, "Arendator3",gHouseArendator[houseid][3],31);
			cache_get_value(houseid - 1, "Arendator4",gHouseArendator[houseid][4],31);
			cache_get_value_int(houseid - 1,"RentStatus0",gHouses[houseid][RentStatus][0]);
			cache_get_value_int(houseid - 1,"RentStatus1",gHouses[houseid][RentStatus][1]);
			cache_get_value_int(houseid - 1,"RentStatus2",gHouses[houseid][RentStatus][2]);
			cache_get_value_int(houseid - 1,"RentStatus3",gHouses[houseid][RentStatus][3]);
			cache_get_value_int(houseid - 1,"RentStatus4",gHouses[houseid][RentStatus][4]);
			cache_get_value_int(houseid - 1,"RentPlata0",gHouses[houseid][RentPlata][0]);
			cache_get_value_int(houseid - 1,"RentPlata1",gHouses[houseid][RentPlata][1]);
			cache_get_value_int(houseid - 1,"RentPlata2",gHouses[houseid][RentPlata][2]);
			cache_get_value_int(houseid - 1,"RentPlata3",gHouses[houseid][RentPlata][3]);
			cache_get_value_int(houseid - 1,"RentPlata4",gHouses[houseid][RentPlata][4]);
			cache_get_value_int(houseid - 1,"gRentStatus",gHouses[houseid][gRentStatus]);
			cache_get_value_int(houseid - 1,"RentAllPlata",gHouses[houseid][RentAllPlata]);
			cache_get_value(houseid - 1, "improve",cache_get_field_string,9);
			sscanf(cache_get_field_string,"p<|>iiii",gHouses[houseid][houseImprove][0],gHouses[houseid][houseImprove][1],gHouses[houseid][houseImprove][2],gHouses[houseid][houseImprove][3]);
			cache_get_value(houseid - 1, "skin",cache_get_field_string,20);
			sscanf(cache_get_field_string,"p<|>iii",gHouses[houseid][houseSkin][0],gHouses[houseid][houseSkin][1],gHouses[houseid][houseSkin][2]);
			cache_get_value(houseid - 1, "gun",cache_get_field_string,64);
			sscanf(cache_get_field_string,"p<|>iiiiiiiii",gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
			cache_get_value_int(houseid - 1,"safecode",gHouses[houseid][houseSafeCode]);
			cache_get_value_int(houseid - 1,"safemoney",gHouses[houseid][houseSafeMoney]);
			cache_get_value_int(houseid - 1,"drugs",gHouses[houseid][houseDrugs]);
			cache_get_value(houseid - 1, "hFamilyCode",gHouses[houseid][hFamilyCode],31);
			cache_get_value_int(houseid - 1,"hFamily",gHouses[houseid][hFamily]);

			new load_furniture[MAX_SLOT_FURNITURE][64];
			for(new z = 0; z < MAX_SLOT_FURNITURE; z++)
			{
				cache_get_value_index(houseid - 1,44 + z,load_furniture[z], 64);
				sscanf(load_furniture[z],"p<,>iffffff", gHouseFurniture[houseid][z][Furn_Model], gHouseFurniture[houseid][z][Furn_X], gHouseFurniture[houseid][z][Furn_Y], gHouseFurniture[houseid][z][Furn_Z], gHouseFurniture[houseid][z][Furn_RX], gHouseFurniture[houseid][z][Furn_RY], gHouseFurniture[houseid][z][Furn_RZ]);
				if(gHouseFurniture[houseid][z][Furn_Model] && gHouseFurniture[houseid][z][Furn_X] != 0.0) gHouseFurniture[houseid][z][Furn_ObjectID] = CreateDynamicObject(gHouseFurniture[houseid][z][Furn_Model], gHouseFurniture[houseid][z][Furn_X], gHouseFurniture[houseid][z][Furn_Y], gHouseFurniture[houseid][z][Furn_Z], gHouseFurniture[houseid][z][Furn_RX], gHouseFurniture[houseid][z][Furn_RY], gHouseFurniture[houseid][z][Furn_RZ], houseid);
			}
			if(gHouses[houseid][hKlass] < 1 || gHouses[houseid][hKlass] > 4) gHouses[houseid][hKlass] = 1;
			if(gHouses[houseid][hDays] < 1 || gHouses[houseid][hDays] > 10) gHouses[houseid][hDays] = 1;
			if(!strcmp(gHouses[houseid][houseOwner],"The State"))
			{
					gHouses[houseid][hPickup] 		= CreateDynamicPickup(1273, 1, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
					gHouses[houseid][hMIcon] 		= CreateDynamicMapIcon(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 31, -1);
					gHouses[houseid][account_id] 	= -1;
			}
			else
			{
				if(gHouses[houseid][houseImprove][1])
				{
					UpdateHouseGun(houseid);
					UpdateHouseDress(houseid);
				}
				gHouses[houseid][hPickup] = CreateDynamicPickup(1272, 1, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
				gHouses[houseid][hMIcon] = CreateDynamicMapIcon(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 32, -1);
			}
			gHouses[houseid][hArea] = CreateDynamicSphere(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 1.3, 0, 0, -1);
		}
		printf ("-> Дома загружены (%d домов) [%d]", rows, TotalHouse);
	}
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `fraction_ranks`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new r = 0; r < rows; r++)
		{
			new fraction,rang;
			cache_get_value_index_int(r,0,fraction);
			cache_get_value_index_int(r,1,rang);
			cache_get_value_index(r,2,fRankName[fraction][rang],40);
		}
		printf ("-> Ранги загружены (%d рангов)", rows);
	}
	cache_delete(result);
	result = mysql_query(connects,"SELECT * FROM `fracmorozed`");
	for(new f = 0; f < 8; f++) cache_get_value_index_int(0, f, fracmoroz[f]);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `ostanovka`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new slot = 0; slot < rows; slot++)
		{
			cache_get_value_index_float(slot,0,ostanovka[slot][ostX]);
			cache_get_value_index_float(slot,1,ostanovka[slot][ostY]);
			cache_get_value_index_float(slot,2,ostanovka[slot][ostZ]);
			cache_get_value_index_float(slot,3,ostanovka[slot][ostrX]);
			cache_get_value_index_float(slot,4,ostanovka[slot][ostrY]);
			cache_get_value_index_float(slot,5,ostanovka[slot][ostrZ]);
			ostanovka[slot][ostID] = CreateDynamicObject(1257,ostanovka[slot][ostX],ostanovka[slot][ostY],ostanovka[slot][ostZ], ostanovka[slot][ostrX],ostanovka[slot][ostrY],ostanovka[slot][ostrZ],-1,-1,-1,200.0,200.0);
		}
		TotalOst=rows;
	}
	printf ("-> Остановки загружены (%d остановок)", rows);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `hotels`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new idx = 0; idx <rows; idx++)
		{
			new floor,room;
			cache_get_value_index_int(idx,0,floor);
			cache_get_value_index_int(idx,1,room);
			cache_get_value_index_int(idx,3,gRoomScore[floor][room]);
			cache_get_value_index(idx,2,gRoomOwner[floor][room],32);
			format(stringer, 100, ""ORG"[ Комната: {"#cWHITE"}%i "ORG" ]", room+1);
			CreateDynamicPickup(1239,23,gRoomPos[room][0], gRoomPos[room][1], gRoomPos[room][2]);
			CreateDynamic3DTextLabel(stringer, CORANGE, gRoomPos[room][0], gRoomPos[room][1], gRoomPos[room][2]+0.8, 2.5, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,floor,1,-1,100.0);
			gRoomArea[floor][room] = CreateDynamicSphere(gRoomPos[room][0], gRoomPos[room][1], gRoomPos[room][2],1.0,floor,1,-1);
			cache_get_value_index_int(idx,4,gRoomInc[floor][room]);
		}
	}
	gReceptionArea=CreateDynamicSphere(1384.7667,554.9052,1005.7659, 1.0);
	SetActorVirtualWorld(CreateActor(171, 1382.9658,554.9575,1005.7659+0.8,267.1590),0);

	CreateDynamic3DTextLabel("{"#cGRAY"}Управляющий отеля", COLOR_GREY, 1382.9658,554.9575,1005.7659+1.0, 4.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
	for(new floor = 0; floor != MAX_FLOORS; ++floor)
	{
		format(stringer, 64, ""ORG"Этаж: {"#cWHITE"}%i "ORG"", floor+1);
		CreateDynamic3DTextLabel(stringer, CORANGE, 1429.8015,-1541.9271,1084.3739+0.9, 4.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,floor,1,-1,100.0);
	}
	printf ("-> Отели загружены (%d комнат)", rows);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `unit_settings`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new i = 0; i <rows; i++)
		{
			new member,subid;
			cache_get_value_index_int(i,0,member);
			cache_get_value_index_int(i,1,subid);
			cache_get_value_index(i,2,unit_name[member][subid],32);
			cache_get_value_index(i,3,unit_leader[member][subid],24);
			cache_get_value_index_int(i,4,unit_inc[member][subid]);
		}
	}
	printf ("-> Подразделения загружены (%d подразделений)", rows);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `family`");
	rows = cache_num_rows();
	if(rows)
	{
		new load_family_vehicle_data[5][120];
		for(new f = 0; f < rows; f++)
		{
			cache_get_value_index_int(f,0,_family[f][family_mysql_id]);
			cache_get_value_index_int(f,4,_family[f][family_chat_color]);
			cache_get_value_index_int(f,5,_family[f][family_national]);
			cache_get_value_index(f,1,_family[f][family_owner_create_name], MAX_PLAYER_NAME);
			cache_get_value_index(f,2,_family[f][family_create_data], 32);
			cache_get_value_index(f,3,_family[f][family_create_name], 32);
			// vehicle_family_loading
			for(new k = 0; k < 5; k++)
			{
				cache_get_value_index(f,k + 6,load_family_vehicle_data[k], 120);
				sscanf(load_family_vehicle_data[k],"p<,>iiiffff",
				_family[f][family_vehicle_model][k],
				_family[f][family_vehicle_v1][k],
				_family[f][family_vehicle_v2][k],
				_family[f][family_vehicle_pos_x][k],
				_family[f][family_vehicle_pos_y][k],
				_family[f][family_vehicle_pos_z][k],
				_family[f][family_vehicle_pos_a][k]);
			}

			TotalFamily++;
		}
		printf ("-> Семьи загружены (%d семей)", rows);
	}
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `vote`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new i=0; i<rows; i++)
		{
			cache_get_value_index(i,0,vote_name[i],25);
			cache_get_value_index_int(i,1,vote_count[i]);
		}
	}
	cache_delete(result);
	print ("-> Голосование загружено");
	BolnicaOptimized();
	UpdateStoreGang(5);
	UpdateStoreGang(6);
	UpdateStoreGang(14);
	UpdateStoreGang(12);
	UpdateStoreGang(13);
	UpdateStoreGang(15);
	UpdateStoreGang(17);
	UpdateStoreGang(18);
	new count_fh=0, count_zh=0;
	for(new house = 1; house < TotalHouse; house++)
	{
		if(!strcmp(gHouses[ house ][houseOwner],"The State")) count_fh++;
		else count_zh++;
	}
	format(stringer, 250, ""ORG"Информация о домах на сервере:\n\n{"#cGREEN"}Свободных: %i\n{"#cRED"}Купленных: %i",count_fh, count_zh);
	info_house = CreateDynamic3DTextLabel(stringer,-1,1490.6398,1305.7406,1093.2964+1.5,10.0);
	result = mysql_query ( connects, "SELECT `last_veh_number` FROM `accounts` WHERE `ID` = '125'");
	rows = cache_num_rows();
	if(!rows) last_veh_number = 5;
	else cache_get_value_int(0, "last_veh_number", last_veh_number);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `server_settings`");
	cache_get_value_index_int(0,0, BONUS_PAYDAY);
	cache_get_value_index_int(0,1, onlinee);
	cache_get_value_index_int(0,2, onlineeM);
	cache_get_value_index_int(0,3, onlineeD);
	cache_get_value_index_int(0,4, onlineeH);
	cache_get_value_index_int(0,5, onlineeMi);
	cache_delete(result);
	
	if(BONUS_PAYDAY) SendRconCommand("hostname "ON_SERVER_BONUS"");
	else SendRconCommand("hostname "OFF_SERVER_BONUS"");
	
	print ("<- Мод полностью загружен ->");
	printf ("-> Динамических объектов: %d",CountDynamicObjects());
	printf ("-> Статических объектов: %d",TotalObject);
	for(new a, s = Streamer_GetUpperBound(STREAMER_TYPE_OBJECT); a <= s; a++)
	{
		if(IsValidDynamicObject(a))
		{
			new Float:distance;
			Streamer_GetFloatData(STREAMER_TYPE_OBJECT, a, E_STREAMER_STREAM_DISTANCE, distance);
			if(distance>MAX_STREAMER_DISTANCE_FOR_PLAYER)
			{
				Streamer_SetFloatData(STREAMER_TYPE_OBJECT, a, E_STREAMER_STREAM_DISTANCE, MAX_STREAMER_DISTANCE_FOR_PLAYER);
				Streamer_SetFloatData(STREAMER_TYPE_OBJECT, a, E_STREAMER_DRAW_DISTANCE, MAX_STREAMER_DISTANCE_FOR_PLAYER);
			}
			else Streamer_SetFloatData(STREAMER_TYPE_OBJECT, a, E_STREAMER_DRAW_DISTANCE, distance);
		}
	}
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 700);
	// Streamer_SetTypePriority(STREAMER_TYPE_OBJECT);
	// актеры в Магазине аксессуаров
	actor[0] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[0], 110);
	ApplyActorAnimation(actor[0],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[1] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[1], 111);
	ApplyActorAnimation(actor[1],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[2] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[2], 113);
	ApplyActorAnimation(actor[2],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[3] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[3], 114);
	ApplyActorAnimation(actor[3],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[4] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[4], 115);
	ApplyActorAnimation(actor[4],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[5] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[5], 116);
	ApplyActorAnimation(actor[5],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[6] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[6], 117);
	ApplyActorAnimation(actor[6],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[7] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[7], 118);
	ApplyActorAnimation(actor[7],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[8] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[8], 119);
	ApplyActorAnimation(actor[8],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[9] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[9], 121);
	ApplyActorAnimation(actor[9],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[10] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[10], 122);
	ApplyActorAnimation(actor[10],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[11] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[11], 123);
	ApplyActorAnimation(actor[11],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[12] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[12], 124);
	ApplyActorAnimation(actor[12],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[13] = CreateActor(242,2086.8157,-1788.8833,120.8869,232.3680);
	SetActorVirtualWorld(actor[13], 125);
	ApplyActorAnimation(actor[13],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[14] = CreateActor(11, 396.0890,-1513.2379,32.2243,21.8473);
	SetActorVirtualWorld(actor[14], 0);
	ApplyActorAnimation(actor[14],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[15] = CreateActor(250, 2293.5886,-1991.7928,-34.1641,266.1696);
	SetActorVirtualWorld(actor[15], 700);
	ApplyActorAnimation(actor[15],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[16] = CreateActor(16, -2363.6787,-2168.0295,33.3352,165.7084);
	SetActorVirtualWorld(actor[16], 0);
	ApplyActorAnimation(actor[16],"PED","SEAT_down",4.1,0,0,0,1,1);
 	actor[17] = CreateActor(6  , 1471.5071,-1711.6891,14.0467,235.4638);
 	
    CreateDynamic3DTextLabel("Эдвард ( Торговец подарками )\n{FFFFFF}Чтобы поговорить нажми ALT",0x73B461FF,1471.5071,-1711.6891,14.0467,15.0);
	for(new i = 0; i < 8; i++) CreateDynamic3DTextLabel("Для того чтобы сесть нажмите\n{7FB151}H", 0xD9F6F6AA, seat_pos_spawn[i][0],seat_pos_spawn[i][1],seat_pos_spawn[i][2],3.0);
	Streamer_SetTickRate(52);
	new count_keler = 1;
	for( new i = 1; i < TotalHouse; i++ )
	{
		if ( !strcmp (gHouses [ i ] [ houseOwner ], "The State")) continue;
		count_keler = 1;
		for ( new i2 = 1; i2 < TotalHouse; i2++ )
		{
			if ( !strcmp(gHouses[i2] [ houseOwner ], "The State" ) ) continue;
			if ( !strcmp(gHouses[i2] [ houseOwner ] , gHouses [ i ] [ houseOwner ] ) && i2 != i)
			{
				printf ( "[ %d ] house : %d | copy house : %d | owner : %s | owner2 : %s " , count_keler , gHouses[i2][hID] , gHouses[i][hID] , gHouses [ i ] [ houseOwner ] , gHouses [ i2 ] [ houseOwner ] ) ;
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 144, "UPDATE `housetest` SET `hOwner` = 'The State' WHERE `hID` = '%d' LIMIT 1", gHouses[i][hID] );
				mysql_pquery(connects,mysql_query_string);
				gHouses[ i ][hHel] = 0;
				gHouses[ i ][hLock] = 1;
				strmid(gHouses[ i ][houseOwner], "The State", 0, strlen("The State"), 31);
				UpdateHome(i);
				SaveHome(i);
				count_keler++;
			}
		}
	}
	printf ("-> Видимых объектов (стример): %d", Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
	result = mysql_query ( connects, "SELECT * FROM `Grafity`");
	CountGraffity = cache_num_rows();
	if(CountGraffity)
	{
		new idx;
		for(idx = 1; idx <= CountGraffity; idx++)
		{
			new object;
			cache_get_value_index_int(idx-1,0,GrafInfo[idx][gId]);
			cache_get_value_index_int(idx-1,1,GrafInfo[idx][gFrak]);
			cache_get_value_index_float(idx-1,2, GrafInfo[idx][gr_x][0] );
			cache_get_value_index_float(idx-1,3, GrafInfo[idx][gr_x][1]);
			cache_get_value_index_float(idx-1,4, GrafInfo[idx][gr_x][2]);
			cache_get_value_index_float(idx-1,5, GrafInfo[idx][gr_x][3]);
			cache_get_value_index_float(idx-1,6, GrafInfo[idx][gr_x][4]);
			cache_get_value_index_float(idx-1,7, GrafInfo[idx][gr_x][5]);
			cache_get_value_index_float(idx-1,8, GrafInfo[idx][gr_x][6]);
			switch(GrafInfo[idx][gFrak])
			{
				case 0: object = 18666;
				case 15: object = 18659;
				case 17: object = 18661;
				case 18: object = 18663;
				case 12: object = 18664;
				case 13: object = 18665;//вагос
			}
			GrafInfo[idx][gObject] = CreateDynamicObject(object, GrafInfo[idx][gr_x][0], GrafInfo[idx][gr_x][1], GrafInfo[idx][gr_x][2], GrafInfo[idx][gr_x][3], GrafInfo[idx][gr_x][4], GrafInfo[idx][gr_x][5]);
		}
		printf("[Загружено граффити ]: <%i>. ",CountGraffity);
	}
	cache_delete(result);
	new temp_str[80];
	result = mysql_query ( connects, "SELECT * FROM `Station`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new f = 0; f < rows;f++)
		{
			cache_get_value_int(f, "id",gRouteMysqlID[f]);
			cache_get_value_index(f, 1, gRouteName[f], 32);
			for(new cpid; cpid < 300; cpid++)
			{
				cache_get_value_index(f, 2 + cpid, temp_str, 80);
				sscanf(temp_str, "p<|>fffff", gRoutePos[f][cpid][0], gRoutePos[f][cpid][1], gRoutePos[f][cpid][2], gRoutePos[f][cpid][3], gRoutePos[f][cpid][4]);
				if(!gRoutePos[f][cpid][1]) break;
			}
		}
	}
	printf("[Загружено дин/путей. чекпоинтов (Автобусы)]: <%i>.",rows);
	cache_delete(result);
	result = mysql_query ( connects, "SELECT * FROM `Race`");
	rows = cache_num_rows();
	if(rows)
	{
		for(new f = 0; f < rows;f++)
		{
			cache_get_value_index(f, 1, RaceName[f], 64);
			for(new cpid; cpid < 300; ++cpid)
			{
				if(cpid < 4)
				{
					cache_get_value_index(f, 303 + cpid, temp_str, 80);
					SpawnCarRacePos[f][cpid][0] = fparam(temp_str, 0, '|');
					if(!SpawnCarRacePos[f][cpid][0]) break;
					SpawnCarRacePos[f][cpid][1] = fparam(temp_str, 1, '|');
					SpawnCarRacePos[f][cpid][2] = fparam(temp_str, 2, '|');
					SpawnCarRacePos[f][cpid][3] = fparam(temp_str, 3, '|');
				}
				cache_get_value_int(f,"loop",RaceLoop[f]);
				cache_get_value_index(f, 2 + cpid, temp_str, 80);
				RaceCheckPointData[f][cpid][0] = fparam(temp_str, 0, '|');
				if(!RaceCheckPointData[f][cpid][0]) break;
				RaceCheckPointData[f][cpid][1] = fparam(temp_str, 1, '|');
				RaceCheckPointData[f][cpid][2] = fparam(temp_str, 2, '|');
			}
		}
	}
	TotalRaces = rows;
	printf("[Загружено дин/путей. чекпоинтов (Гонки)]: <%i>.",rows);
	cache_delete(result);
	printf("Эт вроде какая то нагрузка: %d килобайт", heapspace()/1024);
	result = mysql_query(connects, "SELECT * FROM `transport` ORDER BY `model`");
	cache_get_row_count(rows);
	for(new i=0;i<rows;i++)
	{
		cache_get_value_index_int(i,0,gTransport[i][trID]);
		cache_get_value_index_int(i,1,gTransport[i][trModel]);
		cache_get_value_index(i,2,gTransport[i][trName], 35);
		cache_get_value_index_int(i,3,gTransport[i][trPrice]);
		cache_get_value_index_int(i,4,gTransport[i][trTank]);
		cache_get_value_index_int(i,5,gTransport[i][trConsumption]);
		cache_get_value_index_int(i,6,gTransport[i][trClass]);
		cache_get_value_index_int(i,7,gTransport[i][trFuelable]);
		cache_get_value_index_int(i,8,gTransport[i][trSellable]);
	}
	printf("==== Транспорт успешно загружен: [ %d шт. ] ====", rows);
	cache_delete(result);
	new l_car_sells[74];
	/* enum CAR_SELLS_DATA
	{
		SellsMysqlID,
		SellsModel,
		SellsTime,
		SellsPrice,
		SellsOwner[24],
		Float:SellsPos[4],
		SellsTuning[12],
	}*/
	result = mysql_query ( connects, "SELECT * FROM `gCarSells`");
	cache_get_row_count(rows);
	for(new i=0;i<rows;i++)
	{
		gCarSells[i][SellsText]=Text3D:-1;
		cache_get_value_index_int(i,0,gCarSells[i][SellsMysqlID]);
		cache_get_value_index_int(i,1,gCarSells[i][SellsModel]);
		cache_get_value_index_int(i,2,gCarSells[i][SellsTime]);
		cache_get_value_index_int(i,3,gCarSells[i][SellsPrice]);
		cache_get_value_index(i, 4, gCarSells[i][SellsOwner], 24);
		//printf("load_owner: %s", gCarSells[i][SellsOwner]);
		cache_get_value_index(i,5,l_car_sells, 74);
		sscanf(l_car_sells, "p<,>a<f>[4]",gCarSells[i][SellsPos]);
		//printf("%.2f|%.2f|%.2f|%.2f",gCarSells[i][SellsPos][0],gCarSells[i][SellsPos][1],gCarSells[i][SellsPos][2],gCarSells[i][SellsPos][3]);
		cache_get_value_index(i,6,l_car_sells, 74);
		sscanf(l_car_sells, "p<,>a<i>[12]",gCarSells[i][SellsTuning]);
		//printf("%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",gCarSells[i][SellsTuning][0],gCarSells[i][SellsTuning][1],gCarSells[i][SellsTuning][2],gCarSells[i][SellsTuning][3],gCarSells[i][SellsTuning][4],gCarSells[i][SellsTuning][5],gCarSells[i][SellsTuning][6],gCarSells[i][SellsTuning][7],gCarSells[i][SellsTuning][8],gCarSells[i][SellsTuning][9],gCarSells[i][SellsTuning][10],gCarSells[i][SellsTuning][11]);
		LoadCarSells(i);
	}
	printf("==== Авторынок успешно загружен: [ %d шт. ] ====", rows);
	cache_delete(result);
	CreateDynamic3DTextLabel("Управление системой поливки\n{73B461}[ALT]\n\n",0xFFFFFFFF,-1119.1193,-1218.9299,129.2188,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1, -1, -1);
	result = mysql_query(connects, "SELECT * FROM `wrp_farm`");
	cache_get_row_count(rows);
	for(new i=0;i<rows;i++)
	{
		cache_get_value_int(i, "id", _farm[i][farm_mysql_id]);
		cache_get_value_int(i, "farm_cost_flow", _farm[i][farm_cost_flow]);
		cache_get_value_int(i, "farm_sklad_count", _farm[i][farm_sklad_count]);
		cache_get_value_int(i, "farm_cash", _farm[i][farm_cash]);
		cache_get_value_int(i, "farm_load", _farm[i][farm_load]);
		cache_get_value(i, "farm_owner", _farm[i][farm_owner], 24);
	}
	cache_delete(result);
	result = mysql_query(connects, "SELECT * FROM `flowers`");
	rows = cache_num_rows();

	for ( new j = 0; j < MAX_FLOWERS; j++ )
	{
		_flower[j][flmysqlID] = -1;
		_flower[j][flPickupid] = -1;
		_flower[j][flTimerText] = -1;
	}
	for ( new j = 0; j < rows; j++ )
	{
		cache_get_value_index_int(j,0,_flower[j][flmysqlID]);
		cache_get_value_index_float(j,1,_flower[j][flPos][0]);
		cache_get_value_index_float(j,2,_flower[j][flPos][1]);
		cache_get_value_index_float(j,3,_flower[j][flPos][2]);
		cache_get_value_index_int(j,4,_flower[j][flobjectid]);
		cache_get_value_index(j, 5, _flower[j][flname_flower], 32);
		//
		format(fl_str,64,"%s\n\n\n\n\n{"#cGRAY"}подойдите\nчтобы подобрать",_flower[j][flname_flower]);
		for ( new x = 0; x < MAX_PLAYERS; x++)
		{
			_flower[j][flText][x] = CreateDynamic3DTextLabel(fl_str,0xFFFFFFFF,_flower[j][flPos][0],_flower[j][flPos][1],_flower[j][flPos][2],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,x,100.0);
		}
		_flower[j][flPickupid] = CreateDynamicPickup(_flower[j][flobjectid], 2, _flower[j][flPos][0], _flower[j][flPos][1], _flower[j][flPos][2], -1, -1, -1, 100.0);
	}
	cache_delete(result);
	new Float:pi_X,
		Float:pi_Y,
		Float:pi_Z,
		Float:pi_A,
		pi_rand = 0;

	count_sell_zerno[0] = 0;
	count_sell_zerno[1] = 0;
	sell_zerno_text[0] = CreateDynamic3DTextLabel("{ffffff}Количество зерна на переработке:\n{ffff00}0 кг", -1, pos_sell_zerno[0][0],pos_sell_zerno[0][1],pos_sell_zerno[0][2]+3.0, 40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	sell_zerno_text[1] = CreateDynamic3DTextLabel("{ffffff}Количество зерна на переработке:\n{ffff00}0 кг", -1, pos_sell_zerno[1][0],pos_sell_zerno[1][1],pos_sell_zerno[1][2]+3.0, 40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);

	for(new f = 0; f < MAX_FARMS; f++)
	{
		CreatePickup(1275,23,_farm[f][farm_dress_pos][0],_farm[f][farm_dress_pos][1],_farm[f][farm_dress_pos][2], 0);
		CreatePickup(1239,23,_farm[f][farm_info_pos][0],_farm[f][farm_info_pos][1],_farm[f][farm_info_pos][2], 0);
		_farm[f][farm_pickup_dress] = CreateDynamicSphere(_farm[f][farm_dress_pos][0],_farm[f][farm_dress_pos][1],_farm[f][farm_dress_pos][2], 1.0);
		_farm[f][farm_pickup_info] = CreateDynamicSphere(_farm[f][farm_info_pos][0],_farm[f][farm_info_pos][1],_farm[f][farm_info_pos][2], 1.0);
		_farm[f][farm_vehicles_finish][0] = CreateVehicleOP(456,_farm[f][farm_v_finish_pos_f][0],_farm[f][farm_v_finish_pos_f][1],_farm[f][farm_v_finish_pos_f][2],_farm[f][farm_v_finish_pos_f][3],1,1,600_000);
		_farm[f][farm_vehicles_finish][1] = CreateVehicleOP(456,_farm[f][farm_v_finish_pos_s][0],_farm[f][farm_v_finish_pos_s][1],_farm[f][farm_v_finish_pos_s][2],_farm[f][farm_v_finish_pos_s][3],1,1,600_000);
		_farm[f][farm_vehicles_first][0] = CreateVehicleOP(478,_farm[f][farm_v_start_pos_f][0],_farm[f][farm_v_start_pos_f][1],_farm[f][farm_v_start_pos_f][2],_farm[f][farm_v_start_pos_f][3],1,1,600_000);
		_farm[f][farm_vehicles_first][1] = CreateVehicleOP(478,_farm[f][farm_v_start_pos_s][0],_farm[f][farm_v_start_pos_s][1],_farm[f][farm_v_start_pos_s][2],_farm[f][farm_v_start_pos_s][3],1,1,600_000);
		_farm[f][farm_vehicles_first][2] = CreateVehicleOP(478,_farm[f][farm_v_start_pos_t][0],_farm[f][farm_v_start_pos_t][1],_farm[f][farm_v_start_pos_t][2],_farm[f][farm_v_start_pos_t][3],1,1,600_000);
		_farm[f][farm_sklad_cp] = CreateDynamicCP(_farm[f][farm_sklad_pos][0],_farm[f][farm_sklad_pos][1],_farm[f][farm_sklad_pos][2], 10.0, -1, -1, -1, 1000.0);
		_farm[f][farm_sklad_count] = 0;

		CreateDynamic3DTextLabel("{D38A37}[ Раздевалка ]",0xFFFFFFDD,_farm[f][farm_dress_pos][0],_farm[f][farm_dress_pos][1],_farm[f][farm_dress_pos][2]+0.8,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
		CreateDynamic3DTextLabel("{D38A37}[ Информация о работе на ферме ]",0xFFFFFFDD,_farm[f][farm_info_pos][0],_farm[f][farm_info_pos][1],_farm[f][farm_info_pos][2]+0.8,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);

		format(stringer, 200, FARM_SKLAD_TEXT,_farm[f][farm_sklad_count] );
		_farm[f][farm_sklad_text] = CreateDynamic3DTextLabel(stringer,0xFFFFFFDD,_farm[f][farm_sklad_pos][0],_farm[f][farm_sklad_pos][1],_farm[f][farm_sklad_pos][2]+2.0,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
		for ( new f2 = 0; f2 < 3; f2++)
		{
			if(f2 < 2)
			{
				_farm[f][farm_vehicles_finish_text][f2] = CreateDynamic3DTextLabel(TEXT_MACHINE_SELL_FARM_S,0xFFFFFFDD,1.0,1.0,1.0,25.0,INVALID_PLAYER_ID,_farm[f][farm_vehicles_finish][f2]);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,_farm[f][farm_vehicles_finish_text][f2],E_STREAMER_ATTACH_OFFSET_X, -0.1);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,_farm[f][farm_vehicles_finish_text][f2],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,_farm[f][farm_vehicles_finish_text][f2],E_STREAMER_ATTACH_OFFSET_Z, 3.0);
			}
			_farm[f][farm_vehicles_first_text][f2] = CreateDynamic3DTextLabel(TEXT_MACHINE_WALTON_FARM_S,0xFFFFFFDD,1.0,1.0,1.0,25.0,INVALID_PLAYER_ID,_farm[f][farm_vehicles_first][f2]);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,_farm[f][farm_vehicles_first_text][f2],E_STREAMER_ATTACH_OFFSET_X, -0.1);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,_farm[f][farm_vehicles_first_text][f2],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,_farm[f][farm_vehicles_first_text][f2],E_STREAMER_ATTACH_OFFSET_Z, 1.5);
			for ( new f3 = 0; f3 < 6; f3++)
			{
				GetRaceCheckpointFarm(f, f2, pi_X, pi_Y, pi_Z, pi_A);
				pi_rand = 40 + random(180);
				pi_X -= 7.5 * floatsin(-pi_A - pi_rand, degrees);
				pi_Y -= 7.5 * floatcos(-pi_A - pi_rand, degrees);
				farm_cp[f][f2][f3] = CreateDynamicCP(pi_X,pi_Y,pi_Z,1.0);
			}
		}
	}

	mysql_tquery(connects, "UPDATE `accounts` SET `pOnline` = '1001'", "", "");

	gMainShipObjectId = CreateObject(SHIP_OBJECT_ID, gShipRoutePoints[0][0], gShipRoutePoints[0][1], gShipRoutePoints[0][2],
									gShipRoutePoints[0][3], gShipRoutePoints[0][4], gShipRoutePoints[0][5], SHIP_DRAW_DISTANCE);

	gShipSkullAttachment[0] = CreateObject(SHIP_SKULL_ATTACH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
	AttachObjectToObject(gShipSkullAttachment[0], gMainShipObjectId, 4.11, -5.53, -9.78, 0.0, 0.0, 90.0);

	gShipSkullAttachment[1] = CreateObject(SHIP_SKULL_ATTACH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
	AttachObjectToObject(gShipSkullAttachment[1], gMainShipObjectId, -4.11, -5.53, -9.78, 0.0, 0.0, -90.0);

	gShipSkullAttachment[2] = CreateObject(SHIP_SKULL_ATTACH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
	AttachObjectToObject(gShipSkullAttachment[2], gMainShipObjectId, -4.3378, -15.2887, -9.7863, 0.0, 0.0, -90.0);

	gShipSkullAttachment[3] = CreateObject(SHIP_SKULL_ATTACH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
	AttachObjectToObject(gShipSkullAttachment[3], gMainShipObjectId, 4.3378, -15.2887, -9.7863, 0.0, 0.0, 90.0);

	gShipRailsAttachment = CreateObject(SHIP_RAILS_ATTACH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
	AttachObjectToObject(gShipRailsAttachment, gMainShipObjectId, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);

	gShipLinesAttachment = CreateObject(SHIP_LINES_ATTACH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SHIP_DRAW_DISTANCE);
	AttachObjectToObject(gShipLinesAttachment, gMainShipObjectId, -0.5468, -6.1875, -0.4375, 0.0, 0.0, 0.0);

	StartMovingTimer();

	gFerrisWheel = CreateObject( FERRIS_WHEEL_ID, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2],
								 0.0, 0.0, FERRIS_WHEEL_Z_ANGLE, FERRIS_DRAW_DISTANCE );

	gFerrisBase = CreateObject( FERRIS_BASE_ID, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2],
								 0.0, 0.0, FERRIS_WHEEL_Z_ANGLE, FERRIS_DRAW_DISTANCE );

	new x=0;
	while(x != NUM_FERRIS_CAGES) {
		gFerrisCages[x] = CreateObject( FERRIS_CAGE_ID, gFerrisOrigin[0], gFerrisOrigin[1], gFerrisOrigin[2],
								 0.0, 0.0, FERRIS_WHEEL_Z_ANGLE, FERRIS_DRAW_DISTANCE );

		AttachObjectToObject( gFerrisCages[x], gFerrisWheel,
							  gFerrisCageOffsets[x][0],
							  gFerrisCageOffsets[x][1],
							  gFerrisCageOffsets[x][2],
							  0.0, 0.0, FERRIS_WHEEL_Z_ANGLE, 0 );

		x++;
	}

	SetTimer("RotateWheel",3*1000,0);

	race_back_text[0] = TextDrawCreate(608.734985, 138.583343, "usebox");
	TextDrawLetterSize(race_back_text[0], 0.000000, 11.220372);
	TextDrawTextSize(race_back_text[0], 496.038055, 0.000000);
	TextDrawAlignment(race_back_text[0], 1);
	TextDrawColor(race_back_text[0], 0);
	TextDrawUseBox(race_back_text[0], true);
	TextDrawBoxColor(race_back_text[0], -2980455);
	TextDrawSetShadow(race_back_text[0], 0);
	TextDrawSetOutline(race_back_text[0], 0);
	TextDrawBackgroundColor(race_back_text[0], -330800231);
	TextDrawFont(race_back_text[0], 0);
	//TextDrawSetSelectable(race_back_text[0], true);

	race_back_text[1] = TextDrawCreate(470.521270, 133.833251, "ld_beat:chit");
	TextDrawLetterSize(race_back_text[1], 0.000000, 0.000000);
	TextDrawTextSize(race_back_text[1], 164.919448, 6.416669);
	TextDrawAlignment(race_back_text[1], 1);
	TextDrawColor(race_back_text[1], -9224368);
	TextDrawSetShadow(race_back_text[1], 0);
	TextDrawSetOutline(race_back_text[1], 0);
	TextDrawBackgroundColor(race_back_text[1], 0x00000000);
	TextDrawFont(race_back_text[1], 4);
	//TextDrawSetSelectable(race_back_text[1], true);

	race_back_text[2] = TextDrawCreate(470.584228, 238.083297, "ld_beat:chit");
	TextDrawLetterSize(race_back_text[2], 0.000000, 0.000000);
	TextDrawTextSize(race_back_text[2], 164.919448, 6.416669);
	TextDrawAlignment(race_back_text[2], 1);
	TextDrawColor(race_back_text[2], -9224368);
	TextDrawSetShadow(race_back_text[2], 0);
	TextDrawSetOutline(race_back_text[2], 0);
	TextDrawBackgroundColor(race_back_text[2], 0x00000000);
	TextDrawFont(race_back_text[2], 4);
	//TextDrawSetSelectable(race_back_text[2], true);

	race_back_text[3] = TextDrawCreate(571.658935, 163.166702, "25");
	TextDrawLetterSize(race_back_text[3], 0.369883, 1.477500);
	TextDrawAlignment(race_back_text[3], 2);
	TextDrawColor(race_back_text[3], -1);
	TextDrawSetShadow(race_back_text[3], 0);
	TextDrawSetOutline(race_back_text[3], 1);
	TextDrawBackgroundColor(race_back_text[3], 255);
	TextDrawFont(race_back_text[3], 0);
	TextDrawSetProportional(race_back_text[3], 1);
	//TextDrawSetSelectable(race_back_text[3], true);

	race_back_text[4] = TextDrawCreate(504.597473, 141.166732, "ld_beat:chit");
	TextDrawLetterSize(race_back_text[4], 0.000000, 0.000000);
	TextDrawTextSize(race_back_text[4], 98.858032, 88.666671);
	TextDrawAlignment(race_back_text[4], 1);
	TextDrawColor(race_back_text[4], -563857584);
	TextDrawSetShadow(race_back_text[4], 0);
	TextDrawSetOutline(race_back_text[4], 0);
	TextDrawBackgroundColor(race_back_text[4], 0x00000000);
	TextDrawFont(race_back_text[4], 4);
	//TextDrawSetSelectable(race_back_text[4], true);


	/*for(new gf=0; gf<23; gf++)
	{
		gAreaGraffity[gf]=CreateDynamicSphere(gPosGraff[gf][0],gPosGraff[gf][1],gPosGraff[gf][2],1.0,0,0,-1);
		graff_cp[gf]=CreateDynamicCP(gPosGraff[gf][0],gPosGraff[gf][1],gPosGraff[gf][2], 1.0, 0, 0, -1, 40.0);
		graff_status[gf]=false;
	}*/
	gAreaGreenZone[0]=CreateDynamicSphere(313.7734,-164.8800,999.5938,15.0,38,6,-1);
	gAreaGreenZone[1]=CreateDynamicSphere(1480.9207,-1747.6909,15.3086,50.0,0,0,-1);
	gAreaGreenZone[2]=CreateDynamicSphere(-2031.7778,-117.3789,1035.1719,50.0,1,3,-1);
	gAreaGreenZone[3]=CreateDynamicSphere(-2042.7015,-92.3698,35.1718,50.0,0,0,-1);
	gAreaGreenZone[4]=CreateDynamicSphere(1214.2562, -1310.3021, 13.2000,50.0,0,0,-1);
	gAreaGreenZone[5]=CreateDynamicSphere(1364.1321,-1281.8905,13.5469,50.0,0,0,-1);
	gAreaGreenZone[6]=CreateDynamicSphere(288.9462,-80.8942,1001.5156,50.0,-1,3,-1);
	gAreaGreenZone[7]=CreateDynamicSphere(1483.0062,-2287.0112,13.6359,200.0,0,0,-1);
	gAreaGreenZone[8]=CreateDynamicSphere(1788.9149,-1284.9852,13.6328,50.0,0,0,-1);
	gAreaGreenZone[9]=CreateDynamicSphere(1797.5597,-1301.6571,65.8125,50.0,0,0,-1);
	gAreaGreenZone[10]=CreateDynamicSphere(2451.7280,-1801.3931,1224.4102,50.0,-1,4,-1);
	gAreaGreenZone[11]=CreateDynamicSphere(1428.15, -1824.55, 2836.28,50.0,-1,3,-1);
	gAreaGreenZone[12]=CreateDynamicSphere(-2169.0244,643.3755,1052.3750,50.0,-1,1,-1);
	gAreaGreenZone[13]=CreateDynamicSphere(1218.4153,-1421.6979,13.5349,50.0,0,0,-1);
	gAreaGreenZone[14]=CreateDynamicSphere(1964.2190,1017.0764,992.4688,80.0,10,10,-1);
	gAreaGreenZone[15]=CreateDynamicSphere(758.4850,-1349.8607,13.5091,50.0,0,0,-1);
	gAreaGreenZone[16]=CreateDynamicSphere(1480.1959,-1757.5927,13.5469,50.0,0,0,-1);
	gAreaGreenZone[17]=CreateDynamicSphere(-1089.6598,-1644.3696,76.3739,50.0,0,0,-1);
	gAreaGreenZone[18]=CreateDynamicSphere(-879.1588,-1706.1305,-54.9879,50.0,0,0,-1);
	gAreaGreenZone[19]=CreateDynamicSphere(-1360.4935,-1564.0848,-44.7107,50.0,0,0,-1);
	gAreaGreenZone[20]=CreateDynamicSphere(-1130.4170,-1195.8878,129.2188,50.0,0,0,-1);
	gAreaGreenZone[21]=CreateDynamicSphere(-694.2915,-164.9121,61.4998,50.0,0,0,-1);
	gAreaGreenZone[22]=CreateDynamicSphere(-95.6497,-310.5822,1.4297,50.0,0,0,-1);
	gAreaGreenZone[23]=CreateDynamicSphere(2548.5754,-1296.7905,1044.1250,50.0,-1,-1,-1);
	gAreaGreenZone[24]=CreateDynamicSphere(2457.6697,-1802.8193,1224.4102,50.0,-1,-1,-1);
	gAreaGreenZone[25]=CreateDynamicSphere(1361.7180,-1279.2933,13.3828,50.0,0,0,-1);
	gAreaGreenZone[26]=CreateDynamicSphere(1556.5244,-1693.9270,5.8970,50.0,0,0,-1);
	gAreaGreenZone[27]=CreateDynamicSphere(619.7631,-1628.5365,16.6857,50.0,0,0,-1);
	gAreaGreenZone[28]=CreateDynamicSphere(554.8964,-1280.7677,17.2482,50.0,0,0,-1);
	gAreaGreenZone[29]=CreateDynamicSphere(-1665.3553,1215.0748,7.2546,50.0,0,0,-1);
	gAreaGreenZone[30]=CreateDynamicSphere(-1962.9050,291.1687,35.4739,50.0,0,0,-1);
	gAreaGreenZone[31]=CreateDynamicSphere(-1019.8998,-647.3619,32.0078,50.0,0,0,-1);
	gAreaGreenZone[32]=CreateDynamicSphere(2187.6067,1417.5518,16.4786,50.0,0,0,-1);
	gAreaGreenZone[33]=CreateDynamicSphere(1002.9561,-1445.0641,13.5469,50.0,0,0,-1);
	gAreaGreenZone[34]=CreateDynamicSphere(1391.8827,554.8616,1005.7659,50.0,0,0,-1);
	gAreaGreenZone[35]=CreateDynamicSphere(1185.2776,-2007.8572,69.8639,50.0,0,0,-1);
	gAreaGreenZone[36]=CreateDynamicSphere(-765.89, -128.53, 65.57,50.0,0,0,-1);
	gAreaGreenZone[37]=CreateDynamicSphere(2691.24, -1705.51, 11.50,50.0,0,0,-1);
	gAreaGreenZone[38]=CreateDynamicSphere(1747.96, -1872.37, 13.43,50.0,0,0,-1);
	gAreaGreenZone[39]=CreateDynamicSphere(410.0880,-1538.9144,32.2734,50.0,0,0,-1);
	gAreaGreenZone[40]=CreateDynamicSphere(375.6457,227.2051,1004.5822,60.0,0,0,-1);
	gAreaGreenZone[41]=CreateDynamicSphere(-750.2000122,-157.5370026,66.0350037,100.0,0,0,-1);
	gAreaGreenZone[42]=CreateDynamicSphere(263.33, -2193.10, 4.65,60.0,0,0,-1);

//
	new CircleAroundObjectTo[4];
	CircleAroundObject = CreateObject(19717,2738.697,-1807.776,425.491,0.000,0.000,0.000,300.000);
	SetObjectMaterial(CircleAroundObject, 0, 18773, "tunnelsections", "stonewalltile1-5", 0);
	CircleAroundObjectTo[0] = CreateObject(19316,2738.728,-1809.938,425.041,0.000,0.000,0.000,300.000);
	CircleAroundObjectTo[1] = CreateObject(19316,2738.652,-1814.483,425.031,0.000,0.000,0.000,300.000);
	CircleAroundObjectTo[2] = CreateObject(19316,2738.701,-1818.971,425.031,0.000,0.000,0.000,300.000);
	CircleAroundObjectTo[3] = CreateObject(19316,2738.794,-1823.148,425.021,0.000,0.000,0.000,300.000);
	new Float:CirclePos[6],Float:MainCirclePos[3];
	GetObjectPos(CircleAroundObject,MainCirclePos[0],MainCirclePos[1],MainCirclePos[2]);
	for(new i = 0; i <= 3; i++)
	{/////////
		GetObjectPos(CircleAroundObjectTo[i],CirclePos[0],CirclePos[1],CirclePos[2]);
		GetObjectRot(CircleAroundObjectTo[i],CirclePos[3],CirclePos[4],CirclePos[5]);
		AttachObjectToObject(CircleAroundObjectTo[i], CircleAroundObject, CirclePos[0]-MainCirclePos[0], CirclePos[1]-MainCirclePos[1], CirclePos[2]-MainCirclePos[2], CirclePos[3],CirclePos[4],CirclePos[5], 1);
	}
	SetObjectPos(CircleAroundObject,CirclePosition[0][0],CirclePosition[0][1],CirclePosition[0][2]);
	SetObjectRot(CircleAroundObject,CirclePosition[0][3],CirclePosition[0][4],CirclePosition[0][5]);
	CircleWait = true;
   //print("circle wait true");
	SetTimer("CircleStart",5000,0);


	CreateDynamicObject(19089, 155.4584, -1954.1993, 50.4371, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 158.1228, -1960.9270, 49.0381, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 160.7872, -1967.6545, 47.6391, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 163.4515, -1974.3822, 46.2400, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 166.1159, -1981.1097, 44.8410, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 168.7803, -1987.8374, 43.4419, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 171.4447, -1994.5649, 42.0429, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 174.1090, -2001.2926, 40.6438, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 176.7734, -2008.0202, 39.2448, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 179.4377, -2014.7478, 37.8457, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 182.1021, -2021.4754, 36.4467, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 184.7665, -2028.2030, 35.0476, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 187.4308, -2034.9306, 33.6486, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 190.0952, -2041.6582, 32.2495, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 192.7596, -2048.3857, 30.8505, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 195.4239, -2055.1135, 29.4514, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 198.0883, -2061.8410, 28.0524, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 200.7527, -2068.5686, 26.6533, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 203.4170, -2075.2963, 25.2543, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 206.0814, -2082.0239, 23.8552, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 208.7458, -2088.7514, 22.4562, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 211.4101, -2095.4790, 21.0571, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 214.0745, -2102.2067, 19.6581, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 216.7389, -2108.9343, 18.2590, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 219.4032, -2115.6618, 16.8600, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 222.0676, -2122.3896, 15.4609, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 224.7320, -2129.1171, 14.0619, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 227.3963, -2135.8447, 12.6629, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 230.0607, -2142.5722, 11.2638, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 232.7251, -2149.3000, 9.8648, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 235.3894, -2156.0275, 8.4657, 0.0000, 100.9428, 291.6052);
	CreateDynamicObject(19089, 238.0538, -2162.7551, 7.0667, 0.0000, 100.9428, 291.6052);


	camera_pos_td[0] = TextDrawCreate(40.0,  20.0, "_");
	camera_pos_td[1] = TextDrawCreate(600.0, 20.0, "_");

	camera_pos_td[4] = TextDrawCreate(40.0,  429.0, "_");
	camera_pos_td[5] = TextDrawCreate(600.0, 429.0, "_");

	camera_pos_td[2] = TextDrawCreate(40.0, 29.0, "_");
	camera_pos_td[3] = TextDrawCreate(590.0, 29.0, "_");

	camera_pos_td[6] = TextDrawCreate(40.0, 429.0, "_");
	camera_pos_td[7] = TextDrawCreate(590.0, 429.0, "_");

	TextDrawTextSize(camera_pos_td[0], 240.0, 0.0);
	TextDrawTextSize(camera_pos_td[1], 400.0, 0.0);
	TextDrawTextSize(camera_pos_td[2], 45.0, 0.0);
	TextDrawTextSize(camera_pos_td[3], 596.2, 0.0);

	TextDrawTextSize(camera_pos_td[4], 240.0, 0.0);
	TextDrawTextSize(camera_pos_td[5], 400.0, 0.0);
	TextDrawTextSize(camera_pos_td[6], 45.0, 0.0);
	TextDrawTextSize(camera_pos_td[7], 596.2, 0.0);

	TextDrawLetterSize(camera_pos_td[0], 0.0, 0.5);
	TextDrawLetterSize(camera_pos_td[1], 0.0, 0.5);
	TextDrawLetterSize(camera_pos_td[2], 0.0, 15.0);
	TextDrawLetterSize(camera_pos_td[3], 0.0, 15.0);

	TextDrawLetterSize(camera_pos_td[4], 0.0, 0.5);
	TextDrawLetterSize(camera_pos_td[5], 0.0, 0.5);
	TextDrawLetterSize(camera_pos_td[6], 0.0, -15.0);
	TextDrawLetterSize(camera_pos_td[7], 0.0, -15.0);

	for(new i = 0; i < 8; i++)
	{
		TextDrawAlignment(camera_pos_td[i], 1);
		TextDrawColor(camera_pos_td[i], 0);
		TextDrawUseBox(camera_pos_td[i], true);
		TextDrawBoxColor(camera_pos_td[i], 167);
		TextDrawSetShadow(camera_pos_td[i], 0);
		TextDrawSetOutline(camera_pos_td[i], 0);
		TextDrawBackgroundColor(camera_pos_td[i], 0x00000000);
		TextDrawFont(camera_pos_td[i], 0);
	}

	members_map_td = TextDrawCreate ( 140.000000, 111.000000, "samaps:map" ) ;
	TextDrawFont ( members_map_td, 4 ) ;
	TextDrawLetterSize ( members_map_td, 0.500000, 1.000000 ) ;
	TextDrawSetProportional ( members_map_td, 1 ) ;
	TextDrawTextSize ( members_map_td, 360.000000, 292.000000 ) ;



	///print ("OnGameModeInitLOG - 12");
	for (new i = 0; i < NUM_SI_VEHICLES; i++)
	{
		if ( i < NUM_SI_VEHICLES / 2 ) SIInfernus[i] = AddStaticVehicleExOP(411, 280.1460, -2185.5898 - (i * 6.46), 4.3854, 90.0, -1, -1, 30);
		else SIInfernus[i] = AddStaticVehicleExOP(411, 272.6408, -2185.5898 - ( ( i - NUM_SI_VEHICLES / 2 ) * 6.46), 4.3854, 90.0, -1, -1, 30);
		if(SIInfernus[i] != INVALID_VEHICLE_ID)
		{
			//printf("SIInfernus: %f %f %f", 280.1460, -2185.5898 - (i * 7.46), 4.3854);
			AC_AddVehicleComponent(SIInfernus[i], 1010);
		}
	}
	print("create vehicle SI (LoadVehicles)");

	//result = mysql_query(connects,"INSERT INTO `bank_accounts` (`owner_id`, `b_account_number`, `b_money`) select `id_account`, `id`, `sum` from `bank_system`;");
	//cache_delete(result);
	//result = mysql_query(connects,"TRUNCATE `bank_system`");
	//cache_delete(result);

	//OnGameModeInit END
	print("OnGameModeInit FINISHED");
	return 1;
}

CMD:gotosivehicle(playerid)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(SIInfernus[0],x,y,z);
	AC_SetPlayerPos(playerid,x,y,z);
	return 1;
}

stock PayDay()
{
	for(new i = 0; i <fraction_amount; i++)
	{
		if(frac_metall[i] < 0) frac_metall[i] = 0;
		if(frac_patron[i] < 0) frac_patron[i] = 0;
	}

	CheckArendatorPlata();
	BizHourTime = 0;
	new count_fh=0, count_zh=0;

	for(new house = 1; house < TotalHouse; house++)
	{
		if(!strcmp(gHouses[house][houseOwner],"The State"))
		{
			count_fh++;
		}
		else count_zh++;
	}

	format(stringer, 250, ""ORG"Информация о домах на сервере:\n\n{"#cGREEN"}Свободных: %i\n{"#cRED"}Купленных: %i",count_fh, count_zh);
	UpdateDynamic3DTextLabelText(info_house,-1,stringer);
	foreach(i)
	{
		if(IsPlayerAuthorized(i) == PLAYER_OFFLINE) continue;
		if(unix - p_info[i][pAFK] >= 60) { SendInf(i,"Вы не получили зарплату, потому что были в AFK");continue; }
		if(p_info[i][tHelper] && SELECT_SERVER != 2){ HelperStat[i][2] ++; }
		if(p_info[i][pWanted]>0)
		{
			p_info[i][pWanted] --;
			UpdatePlayerData(i,"pWanted",p_info[i][pWanted]);
			SetPlayerWantedLevel(i, p_info[i][pWanted]);
		}
		new salary = 0;
		if(p_info[i][tMember] == F_HITMAN || p_info[i][tMember] == F_T_ANGEL)
			salary = (p_info[i][tRank] > 1) ? (3000 + (200 * (p_info[i][tRank]-1))) : (3000);
		else if(p_info[i][tMember] == F_BALLAS
				|| p_info[i][tMember] == F_VAGOS
				|| p_info[i][tMember] == F_RM
				|| p_info[i][tMember] == F_GROVE
				|| p_info[i][tMember] == F_AZTECAS
				|| p_info[i][tMember] == F_RIFA
				|| p_info[i][tMember] == F_LCN
				|| p_info[i][tMember] == F_YAKYZA)
			salary = 2000 + (VladGzone[p_info[i][tMember]] * 250);
		else if(p_info[i][tMember] == F_SANN) salary = f_info[p_info[i][tMember]][f_salary] + (advert_count[i]*(random(80)+100));
		else if(p_info[i][tMember]>0 && p_info[i][tMember]<MAX_FRACTIONS) salary = (p_info[i][tRank] > 1) ? (f_info[p_info[i][tMember]][f_salary] + (floatround(f_info[p_info[i][tMember]][f_salary]*0.25) * (p_info[i][tRank]-1))) : (f_info[p_info[i][tMember]][f_salary]);
		else salary = nalog + floatround(nalog * 2.5);
		if ( salary < nalog + floatround(nalog * 2.5) ) salary += nalog + floatround(nalog * 2.5);
		salary -= nalog;
		kazna += nalog;
		if(BONUS_PAYDAY || p_info[i][pDonateRank])
		{
			p_info[i][pExp] += 4;
			salary = salary * 4;
		}
		else p_info[i][pExp]++;
		UpdatePlayerData(i,"pExp",p_info[i][pExp]);
		//
		SendClientMessage(i,0x55c46aaa,"==============[ Зарплата ]==============");
		if(gBankInfo[i][b_acc_number][0] != -1)
		{
			format(stringer, 128,"     Банковский счёт {55c46a}# %i",gBankInfo[i][b_acc_number][0]);
			SendClientMessage(i,0xff4c1eaa,stringer);
		}
		format(stringer,128,"     Зарплата: {55c46a}%d $", (salary != 0)?(salary):(floatround(nalog * 2.5)));
		SendClientMessage(i,0xff4c1eaa, stringer);
		format(stringer,128,"     Налог: {55c46a}%d $", nalog);
		SendClientMessage(i,0xff4c1eaa, stringer);
		if(gBankInfo[i][b_acc_number][0] != -1)
		{
			format(stringer,128,"     Общий счет в банке: {55c46a}%d $", gBankInfo[i][b_acc_money][0]);
			SendClientMessage(i,0xff4c1eaa, stringer);
		}
		if(p_info[i][pAdmin] > 0)
		{
			SendClientMessage(i,0xff4c1eaa, "     Зарплата администратора: {55c46a}5000$");
			p_info[i][pCash] += 5000;
			UpdatePlayerData(i,"pCash",p_info[i][pCash]);
		}
		if (gBankInfo[i][b_acc_number][0] != -1)
		{
			if(p_info[i][pSalary] > 0)
			{
				TransferMoney(i,p_info[i][pCash]+p_info[i][pSalary],p_info[i][pSalary],"получил зарплату");
				p_info[i][pCash] += p_info[i][pSalary];
				UpdateMoney(i);
				format(stringer, 128, "     Зарплата за работу: {55c46a}%d $",p_info[i][pSalary]);
				SendClientMessage(i,0xff4c1eaa,stringer);

				p_info[i][pSalary] = 0;
				UpdatePlayerData(i,"pSalary",p_info[i][pSalary]);
			}
			//gPlayerBank[i][bank_sum] += salary;
			gBankInfo[i][b_acc_money][0] -= nalog;
			UpdateBankMoneyForPlayer(gBankInfo[i][b_acc_money][0] += (salary != 0) ? (salary) : (25), gBankInfo[i][b_acc_number][0]);
		}

		p_info[i][pZakonp] ++;
		if(p_info[i][pZakonp] > 100) p_info[i][pZakonp] = 100;
		UpdatePlayerData(i,"pZakonp",p_info[i][pZakonp]);
		//

		p_info[i][pPayDayHad] ++;
		UpdatePlayerData(i,"pPayDayHad",p_info[i][pPayDayHad]);
		// <--------->
		GameTextForPlayer(i, "~w~PayDay", 5000, 1);
		UpdatePlayerLevel(i);

		if(BONUS_PAYDAY) 	SendClientMessage(i,0xff4c1eaa,"     Бонус: {55c46a}+4 EXP");

		SendClientMessage(i,0x55c46aaa,"======================================");
	}
	stringer[0] = EOS;
	format(stringer,144,"{"#cWHITE"}Казна штата: {ffff00}%i$\n{"#cWHITE"}Налог государства: {ffff00}%i$", kazna, nalog);
	UpdateDynamic3DTextLabelText(frac_text[7], -1, stringer);

	//
	new update_meria[300];
	format(update_meria,300,"UPDATE `loadmeria` SET `Kazna` = '%d'", kazna);
	mysql_pquery(connects,update_meria);
	//

	for(new x=0; x<CountBusiness; x++)
	{
		if(Business[x][bType] == 13) continue;
		if(Business[x][Mafia] == 5)
		{
			frac_money[Business[x][Mafia]] += gBankMafia[BANK_LCN][x];
			gBankMafia[BANK_LCN][x] = 0;
			UpdateFractionStore(Business[x][Mafia]);
		}
		else if(Business[x][Mafia] == 6)
		{
			frac_money[Business[x][Mafia]] += gBankMafia[BANK_YAKUZA][x];
			gBankMafia[BANK_YAKUZA][x] = 0;
			UpdateFractionStore(Business[x][Mafia]);
		}
		else if(Business[x][Mafia] == 14)
		{
			frac_money[Business[x][Mafia]] += gBankMafia[BANK_RM][x];
			gBankMafia[BANK_RM][x] = 0;
			UpdateFractionStore(Business[x][Mafia]);
		}
		if(!strcmp(Business[x][Owner], "The State",true)) continue;
		Business[x][bAmountHour] = 0;

		if(Business[x][bProdOrder] <= 0) Business[x][bProdOrder] = 0;
		if(Business[x][bProd] <= 0)
		{
			Business[x][bHourProd]++;
			Business[x][bProd] = 0;
		}
		else Business[x][bHourProd] = 0;

		if(Business[x][Lock] == 1)
		{
			Business[x][bHourClose]++;
		}
		else Business[x][bHourClose] = 0;

		if(Business[x][bAvtoProd] == 1)
		{
			if(Business[x][bProd]<Business[x][bProdMax])Business[x][bProd] += 1000;
			Business[x][bHourProd] = 0;
		}

		Business[x][bCheckPower] -= bPowerTax;
		if(Business[x][bCheckPower] <= 0 || Business[x][bHourProd] >= 24 || Business[x][bHourClose] >= 12)
		{
			new player = GetPlayerID(Business[x][Owner]);
			new cash_bizz = Business[x][Bank];
			if(IsPlayerConnected(player))
			{
				if(Business[x][bHourProd] >= 24) SendClientMessage(player,CBADINFO, "ВНИМАНИЕ: Ваш бизнес продан за простой без продуктов");
				else if(Business[x][bHourClose] >= 12) SendClientMessage(player,CBADINFO, "ВНИМАНИЕ: Ваш бизнес продан за простой без продуктов более 24 часов");
				else SendClientMessage(player,CBADINFO, "ВНИМАНИЕ: Ваш бизнес продан за простой закрытым более 12 часов");
				SendClientMessage(player,CRED, "Чтобы забрать деньги за бизнес, съездите в банк и выберите пункт в меню > {AFAFAF}Забрать деньги с продажи бизнеса");
				p_info[player][pBizCash] = cash_bizz;
				p_info[player][pPbiskey] = 0;
				UpdatePlayerData(player,"pBizCash", cash_bizz);
				UpdatePlayerData(player,"pPbiskey", 0);
			}
			else
			{
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 400, "UPDATE `accounts` SET \
				`pPbiskey` = '0', `pBizCash` = '%d' WHERE `tName` = '%s' LIMIT 1", cash_bizz,Business[x][Owner]);
				mysql_pquery(connects, mysql_query_string, "", "");
			}
			Business[x][bAmountHour] = 0;
			Business[x][Bank] = 0;
			Business[x][bHourClose] = 0;
			Business[x][bHourProd] = 0;
			strmid(Business[x][Owner], "The State", 0, strlen("The State"), 31);
			Update3DTextLabelBusiness(x);
		}
		UpdateOtherBusiness(x);
	}

	mysql_pquery(connects,"UPDATE `accounts` SET `advert_count` = '0'","","");
	foreach(AD)
	{
		if(advert_count[AD]>0) advert_count[AD] = 0;
	}


	return 1;
}

stock AdmMes(color, string[],level)
{
	foreach(i)
	{
		if(IsPlayerAuthorized(i) == PLAYER_ONLINE)
		{
			if(p_info[i][pAdmin] >= level && GetPVarInt(i,"dostup"))
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
stock LSNews(color, string[])
{
	foreach(i)
	{
		if(!GetPVarInt(i,"lNews")) SCM(i, color, string);
	}
	return 1;
}

stock SendTeamMessage(color, string[], bool:team_send_rim=true)
{
	foreach(i)
	{
		if(!start_work[i]) continue;
		if(IsAArm(i) || IsAMedic(i) || IsAMayor(i) || p_info[i][tMember] == F_AUTOS || p_info[i][tMember] == F_JTTF || p_info[i][tMember] == F_WHOUSE)
		{
			if(p_info[i][tMember]==F_PMC && team_send_rim == false) continue;
			SCM(i, color, string);
		}
	}
	return true;
}

stock SendRadioMessage(member, color, string[])
{
	foreach(i)
	{
		if(!start_work[i]) continue;
		if( p_info[i][tMember] == member ) SCM(i, color, string);
	}
	return 1;
}


/*OOCOff(color, string[])
{
	foreach(i)
	{
		SCM(i, color, string);
	}
	return 1;
}*/

/*SendJobMessage(job, color, string[])
{
	foreach(i)
	{
		if(p_info[i][pJob] == job) SCM(i, color, string);
	}
}*/

stock SendFamilyMessage(family, color, string[])
{
	foreach(i)
	{
		if(StartWork(i) && !start_work[i]) continue;
		if(p_info[i][tMember] == family || p_info[i][tLeader] == family)
		{
			SCM(i, color, string);
		}
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
	if(IS_A_GMX) return 0;
	if(IsPlayerAuthorized(playerid) == PLAYER_OFFLINE)
	{
		SendErr(playerid, "Вам нужно авторизироватся");
		return 0;
	}
	if(GetTickCount()-GetPVarInt(playerid, "AntiFlood") < 500)
	{
		if(CountFloodForPlayer[playerid] >= 2) return 0;
		CountFloodForPlayer[playerid]++;
		SendErr(playerid, "Пожалуйста, не флудите");
		return 0;
	}
	SetPVarInt(playerid, "AntiFlood", GetTickCount());
	DeletePVar(playerid,"AutoExam");
	//printf ( "ID:%d | CMD:%s ", playerid, cmdtext ) ;
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(result == -1)
	{
		SendErr(playerid, "Команда не существует. Используйте /help - Команды");
	}
	//printf ( "ID:%d | CMD:%s | SUCCESS:%d", playerid, cmdtext, success ) ;
	return 1;
}

SendStreamMessage(Float:radius, playerid, mes[], color)
{
	new Float:X,
		Float:Y,
		Float:Z,
		vw = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid,X,Y,Z);
	foreach(i)
	{
		if(GetPlayerVirtualWorld(i) == vw)
		{
			if(PlayerToPoint(radius,i,X,Y,Z)) SCM(i, color, mes);
		}
	}
}

stock IsPlayerStream(Float:radi, playerid, targetid)
{
	if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(targetid,X,Y,Z);
	return PlayerToPoint(radi,playerid,X,Y,Z);
}

stock TranslateCommandText(playerid, string[])
{
	if(string[0] == '.')
	{
		if(string[1] == 'я')
		{
			string[0] = '/';
			PC_EmulateCommand(playerid, string);
			return 1;
		}
		//PC_EmulateCommand(playerid, string);

		switch(string[1])
		{
			case 'а'..'я', 'А'..'Я':
			{
				string[0] = '/';
				for(new i; i<strlen(string); i++)
				{
					switch(string[i])
					{
						case 'й','Й': string[i] = 'q';
						case 'ц','Ц': string[i] = 'w';
						case 'у','У': string[i] = 'e';
						case 'к','К': string[i] = 'r';
						case 'е','Е': string[i] = 't';
						case 'н','Н': string[i] = 'y';
						case 'г','Г': string[i] = 'u';
						case 'ш','Ш': string[i] = 'i';
						case 'щ','Щ': string[i] = 'o';
						case 'з','З': string[i] = 'p';
						case 'ф','Ф': string[i] = 'a';
						case 'ы','Ы': string[i] = 's';
						case 'в','В': string[i] = 'd';
						case 'а','А': string[i] = 'f';
						case 'п','П': string[i] = 'g';
						case 'р','Р': string[i] = 'h';
						case 'о','О': string[i] = 'j';
						case 'л','Л': string[i] = 'k';
						case 'д','Д': string[i] = 'l';
						case 'я','Я': string[i] = 'z';
						case 'ч','Ч': string[i] = 'x';
						case 'с','С': string[i] = 'c';
						case 'м','М': string[i] = 'v';
						case 'и','И': string[i] = 'b';
						case 'т','Т': string[i] = 'n';
						case 'ь','Ь': string[i] = 'm';
						case ' ': break;
					}
				}
				PC_EmulateCommand(playerid, string);
				return 1;
			}
		}
	}
	return 0;
}

public OnPlayerText(playerid, text[])
{
	if(IS_A_GMX) return 0;
	if(CountFloodForPlayer[playerid] >= 2) return 0;
	CountFloodForPlayer[playerid]++;
	//
	if(strlen(text) > 128) return 0;
	if(TranslateCommandText(playerid, text)) return 0;

	if(IsPlayerAuthorized(playerid) == PLAYER_OFFLINE)
	{
		SendClientMessage(playerid, COLOR_GREY, "Вам нужно авторизироватся!");
		return 0;
	}
	if(p_info[playerid][pMuteTime] > 0)
	{
		SetPlayerChatBubble(playerid, "Пытается что-то сказать", CRED, 30.0, 10000);
		SendErr(playerid, "У вас бан чата");
		return 0;
	}

	if(IsIpFound(text))
	{
		SendReklama(playerid,text);
		return 0;
	}
	if(GetPVarInt(playerid,"talkcall"))
	{
		new callid =GetPVarInt(playerid,"called")-1;
		if(IsPlayerConnected(callid))
		{
			if(GetPVarInt(callid,"talkcall"))
			{
				format(stringer, 144, "[Тел] %s: %s", NamePlayer[playerid],text);
				SendClientMessage(callid,CYELLOW,stringer);
				SendClientMessage(playerid,COLOR_GREY,stringer);
				return 0;
			}
		}
	}
	if(GetPVarInt(playerid,"TalkingLive") == 1)
	{
		if(AntiReklama(text))
		{
			p_info[playerid][tLeader]=0;
			p_info[playerid][tRank]=0;
			UpdatePlayerData(playerid,"tLeader",0);
			UpdatePlayerData(playerid,"tRank",0);
			ChangePlayerFraction(playerid, 0);

			format(stringer,250,"[Анти-слив в эфире]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,text);
			AdmMes(CBADINFO,stringer,1);
			return 0;
		}
		format(stringer, 128, "[Радио Лос Сантос] %s [%d] (тел.): %s", NamePlayer[playerid], playerid, text);
		LSNews(0x6B8E23FF, stringer);
	}
	if(GetPVarInt(playerid,"TalkingLivels") == 2)
	{
		if(AntiReklama(text))
		{
			p_info[playerid][tLeader]=0;
			p_info[playerid][tRank]=0;
			UpdatePlayerData(playerid,"tLeader",0);
			UpdatePlayerData(playerid,"tRank",0);
			ChangePlayerFraction(playerid, 0);

			format(stringer,250,"[Анти-слив эфире]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,text);
			AdmMes(CBADINFO,stringer,1);
			return 0;
		}
		if(p_info[playerid][tMember] == F_SANN)
		{
			format(stringer, 128, "[Радио Лос Сантос] %s [%d]: %s", NamePlayer[playerid], playerid, text);
			LSNews(0x6B8E23FF, stringer);
			return 0;
		}
		else
		{
			format(stringer, 128, "[Радио Лос Сантос] %s [%d] (тел.): %s", NamePlayer[playerid],playerid, text);
			LSNews(0x6B8E23FF, stringer);
			return 0;
		}
	}

	if(GetPVarInt(playerid,"Tel") == 1)
	{
		new string23[260];
		format(string23, 256, "[Телефон] %s: %s", NamePlayer[playerid], text);
		SendStreamMessage(20.0, playerid, string23,CFADE1);
		format(stringer, 128, "[Телефон] %s: %s", NamePlayer[playerid], text);
		return 0;
	}

	if(PEfir[playerid] != INVALID_PLAYER_ID)
	{
		if(p_info[playerid][tMember] == F_SANN || p_info[playerid][tLeader] == F_SANN)
		{
			if(AntiReklama(text))
			{
				p_info[playerid][tLeader]=0;
				p_info[playerid][tRank]=0;
				UpdatePlayerData(playerid,"tLeader",0);
				UpdatePlayerData(playerid,"tRank",0);
				ChangePlayerFraction(playerid, 0);

				format(stringer,250,"[Анти-слив в эфире]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,text);
				AdmMes(CBADINFO,stringer,1);
				return 0;
			}
			format(stringer, 128, "[Радио Лос Сантос] %s: %s", NamePlayer[playerid], text);
			LSNews(0x6B8E23FF, stringer);
		}
		if(Pefir[playerid] == 2)
		{
			if(AntiReklama(text))
			{
				p_info[playerid][tLeader]=0;
				p_info[playerid][tRank]=0;
				UpdatePlayerData(playerid,"tLeader",0);
				UpdatePlayerData(playerid,"tRank",0);
				ChangePlayerFraction(playerid, 0);

				format(stringer,250,"[Анти-слив в эфире]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,text);
				AdmMes(CBADINFO,stringer,1);
				return 0;
			}
			format(stringer, 128, "[Радио Лос Сантос] %s: %s", NamePlayer[playerid], text);
			LSNews(0x6B8E23FF, stringer);
		}
		return 0;
	}
	else if(strcmp(text, "*102#", true) == 0)
	{

		SCM(playerid, CLIGHTGREEN, "==[ Мобильный баланс ] ==");
		format(stringer, 128, "- Баланс %d $",p_info[playerid][pMobile]);
		SCM(playerid, CWHITE, stringer);
		SCM(playerid, CWHITE, "- Пополнить баланс можно в любом банкомате");
		SCM(playerid, CLIGHTGREEN, "==[ Мобильный баланс ] ==");
		MeAction(playerid,"достаёт мобильник", 5.0);
		return 0;
	}
	if(!strcmp(text,")")) return MeAction(playerid, "улыбается"),0;
	if(!strcmp(text,"))")) return MeAction(playerid, "смеётся"),0;
	if(!strcmp(text,"("))
	{
		if(p_info[playerid][pSex] == 1) MeAction(playerid, "расстроился");
		else MeAction(playerid, "расстроилась");
		return 0;
	}
	if(!strcmp(text,"(("))
    {
		if(p_info[playerid][pSex] == 1) MeAction(playerid, "сильно расстроился");
		else MeAction(playerid, "сильно расстроилась");
		return 0;
	}
	if(GetPVarInt(playerid,"anti_sbiv_time") < unix && GetPVarInt(playerid,"MinerCount") == 0 && GetPVarInt(playerid,"anim_bolka") == 0 && GetPVarInt(playerid,"crack_tazer") == 0 && GetPVarInt(playerid,"Animation") == 0 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid,"robbankstime") && !GetPVarInt(playerid,"PlayerTied") && !GetPVarInt(playerid,"PlayerCuffedTime"))
	{
		if(p_info[playerid][pSetAnim] == 0)
		{
			FIXES_ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]],8.1,0,1,1,1,1);
			SetTimerEx("ClearAnimText", 2000, 0, "i", playerid);
		}
		else if(p_info[playerid][pSetAnim] != 0)
		{
			FIXES_ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]],4.1,1,1,1,1,1,1);
			SetTimerEx("ClearAnimText", 2000, 0, "i", playerid);
		}
	}
	if(gKilledWithAntiDeath[playerid]==2)
	{
		SCM(playerid,COLOR_GREY,"Труп не может говорить :(");
		return 0;
	}
	if(GetPVarInt(playerid,"gag"))
	{
		SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
		return 0;
	}
	new mesid[8],str[2][144],meslen = strlen(text);
	format(mesid,8,"(%d)", playerid);
	strmid(str[0],text,0,80,100);
	strmid(str[1],text,80,meslen,meslen);
	GetPlayerPos(playerid, p_info[playerid][pX], p_info[playerid][pY], p_info[playerid][pZ]);
	if(p_info[playerid][pX] == 0.0 || p_info[playerid][pY] == 0.0 || p_info[playerid][pZ] == 0.0) return 0;
	new strin[144];
	new steeer[150];
	new colors = GetPlayerColor(playerid);
	new reeede = (colors & 0xFF000000) >>> 24;
	new greeene = (colors & 0x00FF0000) >>> 16;
	new bluewe = (colors & 0x0000FF00) >>> 8;
	format(steeer,120,"%x%x%x",min(reeede + 150, 255),min(greeene + 150, 255),min(bluewe + 150, 255));
	format(strin, 144, "- {%06x}%s(%d)%s: {%s}%s",colors>>> 8,NamePlayer[playerid], playerid, (IsPlayerInAnyVehicle(playerid)) ? ( " (в машине)" ) : ( "" ) , steeer,text);

	new vw = GetPlayerVirtualWorld(playerid),
		int = GetPlayerInterior(playerid);
	foreach(i)
	{
		if (vw != GetPlayerVirtualWorld(i) || int != GetPlayerInterior(i)) continue;
		if(!PlayerToPoint(14.0,i,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ])) continue;

		if(meslen>=80)
		{
			format(strin, 144, "- {%06x}%s(%d)%s: {%s}%s ...",colors>>> 8,NamePlayer[playerid], playerid, (IsPlayerInAnyVehicle(playerid)) ? ( " (в машине)" ) : ( "" ) , steeer,str[0]);
			SendClientMessage(i,colors,strin);
			format(strin,200,"... {%s}%s",steeer,str[1]);
			SendClientMessage(i,colors,strin);
			continue;
		}
		else SendClientMessage(i,colors,strin);
	}
	SetPlayerChatBubble(playerid, text, colors, 20.0, 10000);
	return 0;
}

forward ClearAnimText(playerid);
public ClearAnimText(playerid)
{
	FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	return 1;
}

stock Float:fmax(Float:v1, Float:v2)
{
	return v1 > v2?v1:v2;
}
stock Float:fmin(Float:v1, Float:v2)
{
	return v1 < v2?v1:v2;
}

stock Float:jfloatsub(Float:value1, Float:value2)
{
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}

public OnPlayerUpdate(playerid)
{
	new tickcount1 = GetTickCount();
	if(IsPlayerConnected(playerid))
	{
     	new anim = GetPlayerAnimationIndex(playerid);
		if((anim >= 1136 && anim <= 1138 || anim >= 504 && anim <= 505 || anim >= 494 && anim <= 495 || anim >= 482 && anim <= 484 || anim >= 472 && anim <= 474
		|| anim >= 17 && anim <= 19 || anim >= 1545 && anim <= 1547 || anim == 1141 || anim == 1140 || anim == 500 || anim == 478 || anim == 489 || anim == 27) &&
		(!GetPVarInt(playerid,"get_snow") &&
		!IsACop(playerid) &&
		!IsAArm(playerid) &&
		!IsAMayor(playerid) &&
		!IsAMedic(playerid) &&
		p_info[playerid][tMember] != F_AUTOS &&
		p_info[playerid][tMember] != F_WHOUSE &&
		GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	 	)
		{
			for(new green = 0; green < MAX_GREEN_ZONES; green++)
			{
				if(IsPlayerInDynamicArea(playerid,gAreaGreenZone[green]))
				{
				    if (!(GetPlayerWeapon(playerid) >= 0 && GetPlayerWeapon(playerid) <= 1) && GetPlayerWeapon(playerid) != 43 && GetPlayerWeapon(playerid) != 14)
					FIXES_ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
					SetPlayerArmedWeapon(playerid,0);
					SetPVarInt(playerid,"AntiDM",8);
				}
			}
		}
		if(unix - p_info[playerid][pAFK] > 30)
		{
			format(stringer, 128, "Вы простояли в AFK: {FFFFFF}%d секунд", unix - p_info[playerid][pAFK]);
			SCM(playerid, CORANGE, stringer);
		}
		p_info[playerid][pAFK] = unix;
		if(SurfPlayerUse[playerid] != -1)
		{
			if(!IsPlayerAtSurfboard(playerid, SurfPlayerUse[playerid]))
			{
				RemovePlayerAttachedObject(playerid,3);
				DestroySurfboard(SurfPlayerUse[playerid]);
				SurfPlayerUse[playerid] = -1;
				ClearAnimations(playerid,1);
			}
		}
		if(re_choose[playerid][0]>=1 && p_info[playerid][pAdmin]>0)
		{
			new id_choose;
			new Keys,ud,lr;
			GetPlayerKeys(playerid,Keys,ud,lr);
			if(re_tick[playerid]<=GetTickCount())
			{
				if(ud == KEY_DOWN)
				{
					if(re_choose[playerid][1]==0)
					{
						id_choose = re_choose[playerid][0] - 1;
						if(id_choose>=0 && id_choose<=8)
						{
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+id_choose], -1091854422);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+id_choose]);
							id_choose++;
							if(id_choose==9)id_choose=0;
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+id_choose], 0x79BD8FAA);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+id_choose]);
						}
						re_choose[playerid][0] = id_choose + 1;
					}
					else
					{
						new max_slot_draw=-1,min_slot_draw=-1;
						if(re_choose[playerid][0]==2)min_slot_draw=10,max_slot_draw=3;
						else if(re_choose[playerid][0]==3)min_slot_draw=13,max_slot_draw=6;
						else if(re_choose[playerid][0]==4)min_slot_draw=19,max_slot_draw=2;
						else if(re_choose[playerid][0]==6)min_slot_draw=21,max_slot_draw=3;
						else if(re_choose[playerid][0]==7)min_slot_draw=24,max_slot_draw=3;
						id_choose = re_choose[playerid][1] - 1;
						if(id_choose>=0 && id_choose<=max_slot_draw-1 && min_slot_draw != -1)
						{
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose], -1091854422);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
							id_choose++;
							if(id_choose==max_slot_draw)id_choose=0;
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose], 0x79BD8FAA);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
						}
						re_choose[playerid][1] = id_choose + 1;
					}
					re_tick[playerid]=GetTickCount()+200;
				}
				else if(ud == KEY_UP)
				{
					if(re_choose[playerid][1]==0)
					{
						id_choose = re_choose[playerid][0] - 1;
						if(id_choose>=0)
						{
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+id_choose], -1091854422);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+id_choose]);
							id_choose--;
							if(id_choose==-1)id_choose=8;
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+id_choose], 0x79BD8FAA);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+id_choose]);
						}
						re_choose[playerid][0] = id_choose + 1;
					}
					else
					{
						new max_slot_draw=-1,min_slot_draw=-1;
						if(re_choose[playerid][0]==2)min_slot_draw=10,max_slot_draw=3;
						else if(re_choose[playerid][0]==3)min_slot_draw=13,max_slot_draw=6;
						else if(re_choose[playerid][0]==4)min_slot_draw=19,max_slot_draw=2;
						else if(re_choose[playerid][0]==6)min_slot_draw=21,max_slot_draw=3;
						else if(re_choose[playerid][0]==7)min_slot_draw=24,max_slot_draw=3;
						id_choose = re_choose[playerid][1] - 1;
						if(id_choose>=0 && id_choose<=max_slot_draw-1 && min_slot_draw != -1)
						{
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose], -1091854422);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
							id_choose--;
							if(id_choose == -1)id_choose = max_slot_draw-1;
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose], 0x79BD8FAA);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][min_slot_draw+id_choose]);
						}
						re_choose[playerid][1] = id_choose + 1;
					}
					re_tick[playerid]=GetTickCount()+200;
				}
				if(lr == KEY_LEFT)
				{
					if(re_choose[playerid][1]==0)
					{
						new max_slot_draw=-1,min_slot_draw=-1;
						if(re_choose[playerid][0]==2)min_slot_draw=10,max_slot_draw=12;
						else if(re_choose[playerid][0]==3)min_slot_draw=13,max_slot_draw=18;
						else if(re_choose[playerid][0]==4)min_slot_draw=19,max_slot_draw=20;
						else if(re_choose[playerid][0]==6)min_slot_draw=21,max_slot_draw=23;
						else if(re_choose[playerid][0]==7)min_slot_draw=24,max_slot_draw=26;
						if(max_slot_draw!=-1)
						{
							if(re_choose[playerid][1]!=0)
							{
								for(new x=10; x <= 26; x++) PlayerTextDrawHide(playerid, ReconPlayerText[playerid][x]);
							}
							PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+id_choose]);
							PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+id_choose], -1091854422);
							PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+id_choose]);
							for(new x=min_slot_draw; x <= max_slot_draw; x++)
							{
								if(x!=min_slot_draw)PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][x], -1091854422);
								else PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][x], 0x79BD8FAA);
								PlayerTextDrawShow(playerid, ReconPlayerText[playerid][x]);
							}
							re_choose[playerid][1]=1;
						}
					}
					re_tick[playerid]=GetTickCount()+200;
				}
				else if(lr == KEY_RIGHT)
				{
					if(re_choose[playerid][1]!=0)
					{
						for(new x=10; x <= 26; x++) PlayerTextDrawHide(playerid, ReconPlayerText[playerid][x]);
						re_choose[playerid][1]=0;
						PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+re_choose[playerid][0]]);
						PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+re_choose[playerid][0]], -1091854422);
						PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+re_choose[playerid][0]]);
					}
					re_tick[playerid]=GetTickCount()+200;
				}
			}
		}
		if(chose_player[playerid])
		{
			new count = GetPVarInt(playerid,"chose_count");
			new ldsacr;
			GetPlayerKeys(playerid,ldsacr,ldsacr,ldsacr);

			if(ldsacr > 0 && !(count >= 3))
			{
				if(count == -1) count++;
				SetPlayerSkin(playerid,gRegSkins[p_info[playerid][pSex]-1][GetPVarInt(playerid,"color_player")][count]);
				SetPVarInt(playerid,"chose_count",count + 1);
			}
			else if(ldsacr < 0 && !(count == -1))
			{
				if ( count == 3 ) count --;
				SetPlayerSkin(playerid,gRegSkins[p_info[playerid][pSex]-1][GetPVarInt(playerid,"color_player")][count]);
				SetPVarInt(playerid,"chose_count",count - 1);
			}
		}
		if(Upravakazino[playerid])
		{
			new Keysss,udfd,ldsacr;
			GetPlayerKeys(playerid,Keysss,udfd,ldsacr);
			if(udfd > 0) Stavkarul1down(playerid);
			else if(udfd < 0) Stavkarul1up(playerid);
			if(ldsacr > 0) Stavkarul1right(playerid);
			else if(ldsacr < 0) Stavkarul1left(playerid);
		}
		if(!(CameraFlag[playerid][0] & (1 << 2)))
		{
			new Keys,ud,lr;
			GetPlayerKeys(playerid,Keys,ud,lr);
			if(ud == KEY_UP || ud == KEY_DOWN)
			{
				new fix_show_tud = (CameraFlag[playerid][3] != 5) ? (CameraFlag[playerid][3] + 1) : (5);
				if(CameraFlag[playerid][2] > 0 && ud == KEY_UP)
				{
					for(new i = 0; i <= fix_show_tud; i++) PlayerTextDrawBoxColor(playerid,CameraList[playerid][i], 0x912324BB),PlayerTextDrawBackgroundColor(playerid,CameraList[playerid][i], 0x00000000);
					CameraFlag[playerid][2] --;
					PlayerTextDrawBoxColor(playerid,CameraList[playerid][CameraFlag[playerid][2]], 0x91191CBB);
					PlayerTextDrawBackgroundColor(playerid,CameraList[playerid][CameraFlag[playerid][2]], 0x422424FF);
				}
				else if(CameraFlag[playerid][2] <= CameraFlag[playerid][3] && ud == KEY_DOWN && CameraFlag[playerid][2] <= 4)
				{
					for(new i = 0; i <= fix_show_tud; i++) PlayerTextDrawBoxColor(playerid,CameraList[playerid][i], 0x912324BB),PlayerTextDrawBackgroundColor(playerid,CameraList[playerid][i], 0x00000000);
					CameraFlag[playerid][2] ++;
					PlayerTextDrawBoxColor(playerid,CameraList[playerid][CameraFlag[playerid][2]], 0x91191CBB);
					PlayerTextDrawBackgroundColor(playerid,CameraList[playerid][CameraFlag[playerid][2]], 0x422424FF);
				}

				for(new i = 0; i <= fix_show_tud; i++) PlayerTextDrawShow(playerid, CameraList[playerid][i]);
			}
		}
		if(step_cppd[playerid] > 0)
		{
			new sccpdd = step_cppd[playerid] - 1;
			if((CameraFlag[playerid][0] & (1 << 0)) == 0)
			{
				new Keys,ud,lr;
				GetPlayerKeys(playerid,Keys,ud,lr);

				if(ud == KEY_UP || ud == KEY_DOWN || lr == KEY_LEFT || lr == KEY_RIGHT)
				{
					if(ud == KEY_UP)
					{
						CPPD[sccpdd][playerid][temp_camera_pos][2] += floatdiv(power_camera_move, 4.0);
					}
					else if(ud == KEY_DOWN)
					{
						CPPD[sccpdd][playerid][temp_camera_pos][2] -= floatdiv(power_camera_move, 4.0);
					}
					if(lr == KEY_LEFT)
					{
						CPPD[sccpdd][playerid][temp_camera_pos][3] += floatmul(power_camera_move, 6.0);
					}
					else if(lr == KEY_RIGHT)
					{
						CPPD[sccpdd][playerid][temp_camera_pos][3] -= floatmul(power_camera_move, 6.0);
					}
					if(CPPD[sccpdd][playerid][last_pos_camera][0] != 0.0 && CPPD[sccpdd][playerid][last_pos_camera][1] != 0.0 && CPPD[sccpdd][playerid][last_pos_camera][2] != 0.0)
					{
						InterpolateCameraPos(playerid, CPPD[sccpdd][playerid][last_pos_camera][0], CPPD[sccpdd][playerid][last_pos_camera][1], CPPD[sccpdd][playerid][temp_camera_pos][4], CPPD[sccpdd][playerid][temp_camera_pos][0], CPPD[sccpdd][playerid][temp_camera_pos][1], CPPD[sccpdd][playerid][temp_camera_pos][4], 1000, CAMERA_MOVE);
						InterpolateCameraLookAt(playerid,CPPD[sccpdd][playerid][last_pos_camera][0] + (2.0 * floatsin(-CPPD[sccpdd][playerid][last_pos_camera][3], degrees)),CPPD[sccpdd][playerid][last_pos_camera][1] + (2.0 * floatcos(-CPPD[sccpdd][playerid][last_pos_camera][3], degrees)),CPPD[sccpdd][playerid][last_pos_camera][2],
						CPPD[sccpdd][playerid][temp_camera_pos][0] + (2.0 * floatsin(-CPPD[sccpdd][playerid][temp_camera_pos][3], degrees)),CPPD[sccpdd][playerid][temp_camera_pos][1] + (2.0 * floatcos(-CPPD[sccpdd][playerid][temp_camera_pos][3], degrees)),CPPD[sccpdd][playerid][temp_camera_pos][2], 1000, CAMERA_MOVE);
					}
				}

				for(new Y = 0; Y < 4; Y ++) CPPD[sccpdd][playerid][last_pos_camera][Y] = CPPD[sccpdd][playerid][temp_camera_pos][Y];
			}
		}
		/*if(Player_BA[playerid] != -1)
		{
			new C = Player_BA[playerid];
			if(BA_Ball[C][BA_Ball_Attach] && GetPlayerAnimationIndex(playerid) != 1235 && BA_Ball[C][BA_Ball_Player] == playerid && BA_Ball[C][BA_Ball_State] == 0)
			{
				new Float:x, Float:y, Float:z;
				GetObjectPos(BA_Ball[C][BA_Ball_object], x, y, z);
				if(!IsPlayerInRangeOfPoint(playerid, 2.5, x, y, z))
				{
						FIXES_ApplyAnimation(BA_Ball[C][BA_Ball_Player],"CARRY","crry_prtial",4.0,0,0,0,0,0);
						BA_Ball[C][BA_Ball_Attach] = false;
						BA_Ball[C][BA_Ball_Player] = -1;
				}
				else
				{
					new Keys,ud,lr;
					GetPlayerKeys(playerid,Keys,ud,lr);
					if(ud == KEY_UP || ud == KEY_DOWN || lr == KEY_LEFT || lr == KEY_RIGHT)
					{
						FIXES_ApplyAnimation( playerid, "BSKTBALL","BBALL_run", 4.1, 1, 1, 1, 1, 1 );
					}
					else
					{
						FIXES_ApplyAnimation( playerid, "BSKTBALL","BBALL_idleloop", 4.1, 1, 1, 1, 1, 1 );
					}
				}
			}
		}*/

		if(SurfPlayerUse[playerid] != -1)
		{
			new Keys,ud,lr;
			GetPlayerKeys(playerid,Keys,ud,lr);

			new Float:floatVal[4];
			GetPlayerPos(playerid, floatVal[0], floatVal[1], floatVal[2]);
			floatVal[3] = surfboardData[SurfPlayerUse[playerid]][sppeed];
			GetXYInFrontOfPlayerOnSB(playerid, floatVal[0], floatVal[1], 50.0);
			surfboardGoTo[SurfPlayerUse[playerid]][0] = floatVal[0];
			surfboardGoTo[SurfPlayerUse[playerid]][1] = floatVal[1];
			surfboardGoTo[SurfPlayerUse[playerid]][2] = surfboardData[SurfPlayerUse[playerid]][position][2];
			if(ud == KEY_UP)
			{
				if(floatVal[3] >= 0.0 && floatVal[3] < MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] += 0.25;
				if(floatVal[3] >= MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] = MAX_SURFBOARD_SPEED;
			}
			else if(ud == KEY_DOWN)
			{
				if(floatVal[3] >= 0.0 && floatVal[3] < MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.25;
				if(floatVal[3] >= MAX_SURFBOARD_SPEED) surfboardData[SurfPlayerUse[playerid]][sppeed] = MAX_SURFBOARD_SPEED;
			}
			if(lr == KEY_LEFT)
			{
				surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.01;
				surfboardData[SurfPlayerUse[playerid]][position][5] += 1.5;
				SetObjectRot(surfboardData[SurfPlayerUse[playerid]][surf_objectID], surfboardData[SurfPlayerUse[playerid]][position][3], surfboardData[SurfPlayerUse[playerid]][position][4], surfboardData[SurfPlayerUse[playerid]][position][5]);
				SetPlayerFacingAngle(playerid, surfboardData[SurfPlayerUse[playerid]][position][5] + 270.0);
				surfboardGoTo[SurfPlayerUse[playerid]][0] = floatVal[0];
				surfboardGoTo[SurfPlayerUse[playerid]][1] = floatVal[1];
				surfboardGoTo[SurfPlayerUse[playerid]][2] = surfboardData[SurfPlayerUse[playerid]][position][2];
			}
			else if(lr == KEY_RIGHT)
			{
				surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.01;
				surfboardData[SurfPlayerUse[playerid]][position][5] -= 1.5;
				SetObjectRot(surfboardData[SurfPlayerUse[playerid]][surf_objectID], surfboardData[SurfPlayerUse[playerid]][position][3], surfboardData[SurfPlayerUse[playerid]][position][4], surfboardData[SurfPlayerUse[playerid]][position][5]);
				SetPlayerFacingAngle(playerid, surfboardData[SurfPlayerUse[playerid]][position][5] + 270.0);
				surfboardGoTo[SurfPlayerUse[playerid]][0] = floatVal[0];
				surfboardGoTo[SurfPlayerUse[playerid]][1] = floatVal[1];
				surfboardGoTo[SurfPlayerUse[playerid]][2] = surfboardData[SurfPlayerUse[playerid]][position][2];
			}
			if(surfboardData[SurfPlayerUse[playerid]][sppeed] > 0.005)
			{
				surfboardData[SurfPlayerUse[playerid]][sppeed] -= 0.005;
				MoveObject(surfboardData[SurfPlayerUse[playerid]][surf_objectID], surfboardGoTo[SurfPlayerUse[playerid]][0], surfboardGoTo[SurfPlayerUse[playerid]][1], surfboardGoTo[SurfPlayerUse[playerid]][2], surfboardData[SurfPlayerUse[playerid]][sppeed]);
			}
			else StopSurfboard(SurfPlayerUse[playerid]);
		}

		if(CreateBarForPlayer[playerid] > 1)
		{
			if(GetPlayerProgressBarValue(playerid, universalbar[playerid]) >= 10)
			{
				SetPlayerProgressBarValue(playerid, universalbar[playerid], GetPlayerProgressBarValue(playerid, universalbar[playerid])-2);
			}
			else
			{
				playerFlags[playerid] ^= YN;
				KeyYN{playerid} = 0;
				for(new i; i < 2; i++) PlayerTextDrawHide(playerid, YNText[playerid][i]);
				HidePlayerProgressBar(playerid, universalbar[playerid]);
				DestroyPlayerProgressBar(playerid, universalbar[playerid]);
				CreateBarForPlayer[playerid] = 0;

				RemovePlayerAttachedObject(playerid, 5);
				SetPVarInt(playerid, "FishingStart", 0);
				ClearAnimations(playerid);
				FIXES_ApplyAnimation(playerid,"ped","IDLE_chat",4.1,1,0,0,0,1,1);

				if(GetPVarInt(playerid, "Procedure") >= 1)
				{
					SendErr(playerid, "Вы сломали отмычку");
					p_info[playerid][pOtmbI4ka]--;
					UpdatePlayerData(playerid, "pOtmbI4ka", p_info[playerid][pOtmbI4ka]);
				}
			}
		}
		else if(pSelectStoreGun[playerid] && p_info[playerid][pHouse] > 0 )
		{
			new newkeys,ud,lr;
			new fix_blyat_ebal = 0;
			GetPlayerKeys(playerid,newkeys,ud,lr);
			if (lr > 0)
			{
				//print ( "for pSelectStoreGun 1" ) ;

				new id = (pStoreGun[playerid] >= 8) ? ( 0 ) : ( pStoreGun[playerid] + 1 ) ;
				new houseid = p_info[playerid][pHouse] ;
				new klass = gHouses[houseid][hKlass]-1;

				for(new i = id; i < 9; i++)
				{
					if(gHouses[houseid][houseGun][i])
					{
						new Float:x, Float:y, Float:z;
						new Float:x2, Float:y2, Float:z2;
						GetPlayerCameraPos(playerid,x,y,z);
						x2=0.7*floatsin(gHouseImproveItem[1][klass][7],degrees) + gHouseStoreItemPos_Gun[klass][i][0];
						y2=-0.7*floatcos(gHouseImproveItem[1][klass][7],degrees) + gHouseStoreItemPos_Gun[klass][i][1];
						z2=gHouseStoreItemPos_Gun[klass][i][2] + 0.4;
						InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
						GetPlayerCameraFrontVector(playerid,x2,y2,z2);
						InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,gHouseStoreItemPos_Gun[klass][i][0],gHouseStoreItemPos_Gun[klass][i][1],gHouseStoreItemPos_Gun[klass][i][2],700,CAMERA_MOVE);
						pStoreGun[playerid] = i;
						pSelectStoreGun[playerid] = false;
						SetTimerEx("SelectStoreGun",500,0,"i",playerid);

						new gunname[32],mes[48];
						GetWeaponName(GetStoreGunID(i),gunname,32);
						format(mes,48,"~w~%s (~g~%d~w~)",gunname,gHouses[houseid][houseGun][i]);
						GameTextForPlayer(playerid,mes,100000,3);

						break;
					}
					if(i == 8)
					{
						if ( fix_blyat_ebal != 0 ) break;
						fix_blyat_ebal++;
						i = 0;
					}
				}
			}
			if (lr < 0)
			{
				///print ( "for pSelectStoreGun 2" ) ;
				new id = GetPVarInt(playerid,"pStoreGun");
				if(id == 0) id = 8;
				else id--;
				new houseid = p_info[playerid][pHouse] ;
				new klass = gHouses[houseid][hKlass] - 1;
				for(new i=id;i>=0;i--)
				{
					if(gHouses[houseid][houseGun][i])
					{
						new Float:x, Float:y, Float:z;
						new Float:x2, Float:y2, Float:z2;
						GetPlayerCameraPos(playerid,x,y,z);
						x2=0.7*floatsin(gHouseImproveItem[1][klass][7],degrees) + gHouseStoreItemPos_Gun[klass][i][0];
						y2=-0.7*floatcos(gHouseImproveItem[1][klass][7],degrees) + gHouseStoreItemPos_Gun[klass][i][1];
						z2=gHouseStoreItemPos_Gun[klass][i][2] + 0.4;
						InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
						GetPlayerCameraFrontVector(playerid,x2,y2,z2);
						InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,gHouseStoreItemPos_Gun[klass][i][0],gHouseStoreItemPos_Gun[klass][i][1],gHouseStoreItemPos_Gun[klass][i][2],700,CAMERA_MOVE);
						pStoreGun[playerid] = i;
						pSelectStoreGun[playerid] = false;
						SetTimerEx("SelectStoreGun",500,0,"i",playerid);
						new gunname[32],mes[48];
						GetWeaponName(GetStoreGunID(i),gunname,32);
						format(mes,48,"~w~%s (~g~%d~w~)",gunname,gHouses[houseid][houseGun][i]);
						GameTextForPlayer(playerid,mes,100000,3);
						break;
					}
					if(i == 0)
					{
						if ( fix_blyat_ebal != 0 ) break;
						fix_blyat_ebal++;
						i = 8;
					}
				}
			}
		}
		if(walk_goto_me[playerid] > 0)
		{
			new id = walk_goto_me[playerid] - 1;
			new Float:X, Float:Y, Float:Z, Float:R;
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				GetPlayerPos(id,X,Y,Z);
				SetPlayerFaceToPoint(playerid, X, Y);

				new Float:GotoPos[3];
				anim = GoPlayerAnimation(playerid,X,Y,Z);

				if(GetPlayerInterior(id) != GetPlayerInterior(playerid) || GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid))
				{
					GetPlayerPos(id,X,Y,Z);
					AC_SetPlayerPos(playerid,X,Y,Z);
					SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
					SetPlayerInterior(playerid,GetPlayerInterior(id));
				}

				if(anim != 1)
				{
					GotoPos[0]=GetPVarFloat(playerid,"CuffX");
					GotoPos[1]=GetPVarFloat(playerid,"CuffY");
					GotoPos[2]=GetPVarFloat(playerid,"CuffZ");

					if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoPos[0],GotoPos[1],GotoPos[2]))
					{
						GetPlayerPos(playerid, X, Y, Z);
						GetPlayerFacingAngle(playerid, R);
						ShiftCords(X, Y, R, 1.5);
						AC_SetPlayerPos(playerid, X, Y, Z);
					}

					GetPlayerPos(playerid,X,Y,Z);
					SetPVarFloat(playerid,"CuffX", X);
					SetPVarFloat(playerid,"CuffY", Z);
					SetPVarFloat(playerid,"CuffZ", Z);
				}
			}
		}
	}
	time_update = GetTickCount() - tickcount1;
	if(time_update > time_update_max) time_update_max = time_update;
	return 1;
}



CMD:null_fuel(playerid)
{
	if(GetPlayerState(playerid)!=2) return true;
	gVehicles[GetPlayerVehicleID(playerid)-1][vFuel]=1.0;
	return true;
}

CMD:speed_debug(playerid)
{
	if ( GetPVarInt(playerid, "speed_debug") )
	{
		DeletePVar(playerid, "speed_debug");
		SendClientMessage ( playerid, -1, "Дебаг скорости отключен." );
	}
	else
	{
		SendClientMessage ( playerid, -1, "Дебаг скорости включен." );
		SetPVarInt ( playerid, "speed_debug", true );
	}
	return 1;
}

forward UpdateCarInfo(playerid);
public UpdateCarInfo(playerid)
{
	if(!ShowSpeed[playerid] || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(p_info[playerid][pAFK] == unix)
	{
		new Float:X, Float:Y, Float:Z, Float:A, Float:X2, Float:Y2, Float:Z2;
		new vehicleid = GetPlayerVehicleID(playerid);
		new lights,engine;
		engine = GetEngineStatL(vehicleid,lights);
		//
		X2 = gVehicles[vehicleid-1][veX];
		Y2 = gVehicles[vehicleid-1][veY];
		Z2 = gVehicles[vehicleid-1][veZ];
		//
		GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
		GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
		//
		GetVehicleVelocity(vehicleid,X,Y,Z);
		new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 126.31;
		if(speed >= GetPVarInt(playerid,"slimit") && GetPVarInt(playerid,"slimit") >= 10 && GetPVarInt(playerid,"slimit") <= 150)
		{
			new Float:dif = GetPVarInt(playerid,"slimit") / speed;
			SetVehicleVelocity(vehicleid,X * dif,Y * dif, Z);
		}
		GetVehicleHealth(vehicleid,gVehicles[vehicleid-1][vHealth]);
		GetVehiclePos(vehicleid, X, Y, Z);
		if(X > 10000.0 || Y > 10000.0 || Z > 10000.0 || X < -10000.0 || Y < -10000.0 || Z < -10000.0)
		{
			CheatKick(playerid,11);
			SetVehicleToRespawn(vehicleid);
			return 1;
		}
		if(engine==1)
		{
			new Float:veloc;
			veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;

			if (speed>=350) CheatKick(playerid,18);
			gVehicles[vehicleid-1][vDrived] += veloc;

			if ( !IsAPlane(vehicleid) && !IsAVelik(vehicleid) && !(SelectLowride[playerid][0] != -1 && SelectLowride[playerid][2] == 0 && (TimeLowRide <= 90 && TimeLowRide > 0)))
			{
				gVehicles[vehicleid-1][vFuel] -= (veloc/100) * gTransport[GetVehicleModel(vehicleid)-400][trConsumption];
				// if(vehicleid == caridhouse[playerid][0]) p_info [ playerid ] [ p_car_fuel ][ 0 ] = gVehicles[vehicleid - 1][vFuel];
				// if(vehicleid == caridhouse[playerid][1]) p_info [ playerid ] [ p_car_fuel ][ 1 ] = gVehicles[vehicleid - 1][vFuel];
				//format(stringer,128,"%.4f",(veloc * 2));
				//SCM(playerid,-1,stringer);
				if ( gVehicles[vehicleid-1][vFuel] <= 0.0 )
				{
					SendClientMessage ( playerid , COLOR_GREY , "Двигатель заглох (недостаточное количество бензина в машине)" ) ;
					ToggleEngine ( vehicleid ) ;
				}
			}
			new current_transmis_slot = -1;

			if(IsVehicleDrivingBackwards(vehicleid))
			{
				current_transmis_slot = 5;
			}
			else
			{
				if(speed < 1.0) current_transmis_slot = 6;
				if(speed > 1.0 && speed < 50.0) current_transmis_slot = 0;
				if(speed > 50.0 && speed < 89.0) current_transmis_slot = 1;
				if(speed > 90.0 && speed < 139.0) current_transmis_slot = 2;
				if(speed > 140.0 && speed < 159.0) current_transmis_slot = 3;
				if(speed > 160.0 && speed < 350.0) current_transmis_slot = 4;
			}
			if( current_transmis_slot != -1 && LastTransmisSlot[playerid] != current_transmis_slot)
			{
				if(LastTransmisSlot[playerid] != -1)
				{
					PlayerTextDrawHide(playerid, speedTrans[playerid][LastTransmisSlot[playerid]]);
					PlayerTextDrawBoxColor(playerid,speedTrans[playerid][LastTransmisSlot[playerid]], 1684301055);
					PlayerTextDrawShow(playerid, speedTrans[playerid][LastTransmisSlot[playerid]]);
				}

				PlayerTextDrawHide(playerid, speedTrans[playerid][current_transmis_slot]);
				PlayerTextDrawBoxColor(playerid,speedTrans[playerid][current_transmis_slot], -858993409);
				PlayerTextDrawShow(playerid, speedTrans[playerid][current_transmis_slot]);

				LastTransmisSlot[playerid] = current_transmis_slot;
			}

			//

			new speed_upd[20];

			format(speed_upd, 20, "%.0f%%",(gVehicles[vehicleid-1][vHealth])/10);
			PlayerTextDrawSetString(playerid,speedHealth[playerid],speed_upd);//health

			format(speed_upd, 20, "%.1f L",gVehicles[vehicleid-1][vFuel]);
			PlayerTextDrawSetString(playerid,speedFuel[playerid],speed_upd);//fuel

			format(speed_upd, 20, "%.0f",gVehicles[vehicleid-1][vDrived]);
			new length_millage = strlen(speed_upd);
			switch(length_millage)
			{
				case 0..1:format(speed_upd,20,"0000000%.0f",gVehicles[vehicleid-1][vDrived]);
				case 2:format(speed_upd,20,"000000%.0f",gVehicles[vehicleid-1][vDrived]);
				case 3:format(speed_upd,20,"00000%.0f",gVehicles[vehicleid-1][vDrived]);
				case 4:format(speed_upd,20,"0000%.0f",gVehicles[vehicleid-1][vDrived]);
				case 5:format(speed_upd,20,"000%.0f",gVehicles[vehicleid-1][vDrived]);
				case 6:format(speed_upd,20,"00%.0f",gVehicles[vehicleid-1][vDrived]);
			}
			PlayerTextDrawSetString(playerid,speedMileage[playerid],speed_upd);//millage

			if(speedStick[playerid] != PlayerText:-1)
			{
				new Float:veh_velocity[3], str_update_speed[32];
				GetVehicleVelocity(vehicleid,veh_velocity[0],veh_velocity[1],veh_velocity[2]);
				//new Float:speed = floatsqroot(floatadd(floatadd(floatpower(veh_velocity[0], 2), floatpower(veh_velocity[1], 2)),  floatpower(veh_velocity[2], 2))) * 126.31;

				if ( LastSpeed[playerid] != speed)
				{
					PlayerTextDrawDestroy(playerid, speedStick[playerid]);
					speedStick[playerid] = CreatePlayerTextDraw(playerid, 491.000000 + (( speed >= 270.0 ) ? ( 270.0 ) : (speed) / 3.000000), 364.500000, "speedStick");
					PlayerTextDrawAlignment(playerid, speedStick[playerid], 2);
					PlayerTextDrawBackgroundColor(playerid, speedStick[playerid], 0);
					PlayerTextDrawLetterSize(playerid, speedStick[playerid], 0.000000, 1.750000);
					PlayerTextDrawSetOutline(playerid, speedStick[playerid], 0);
					PlayerTextDrawSetProportional(playerid, speedStick[playerid], 0);
					PlayerTextDrawSetShadow(playerid, speedStick[playerid], 0);
					PlayerTextDrawUseBox(playerid, speedStick[playerid], 1);
					PlayerTextDrawBoxColor(playerid, speedStick[playerid], 3381759);
					PlayerTextDrawTextSize(playerid, speedStick[playerid], 0.000000, -1.000000);
					format(str_update_speed, 32, "%.0f KM/H", speed);
					PlayerTextDrawSetString ( playerid, speedInf[playerid] , str_update_speed ) ;
					PlayerTextDrawShow(playerid, speedStick[playerid]);
					LastSpeed[playerid] = speed;
				}
			}
			GetVehicleZAngle(vehicleid, A);
			if(Signal[vehicleid])
			{
				new Float:LAngle = jfloatsub(A, SignalAngle[vehicleid]);
				if(SignalTick[vehicleid][1] >= 0)
				{
					SignalTick[vehicleid][1] --;
					if(!SignalTick[vehicleid][1])
					{
						Signal[vehicleid] = 0;
						if(LightsObject[vehicleid][0] != -1)
						{
							DestroyDynamicObject(LightsObject[vehicleid][0]);
							LightsObject[vehicleid][0] = -1;
						}
						if(LightsObject[vehicleid][1] != -1)
						{
							DestroyDynamicObject(LightsObject[vehicleid][1]);
							LightsObject[vehicleid][1] = -1;
						}
					}
				}
				else if( LAngle >= 50.0 ) SignalTick[vehicleid][1] = 20;
				SignalTick[vehicleid][0] ++;
				if(SignalTick[vehicleid][0] > 17) SignalTick[vehicleid][0] = 0;
			}
			/////GetVehicleZAngle(vehicleid, A);
		}
		gVehicles[vehicleid-1][veX] = X;
		gVehicles[vehicleid-1][veY] = Y;
		gVehicles[vehicleid-1][veZ] = Z;
	}
	return 1;
}


stock UpdateTDLock(playerid, vehicleid = 0)
{
	if(vehicleid <= 0) return 1;
	if(!ShowSpeed[playerid]) return 0;

	PlayerTextDrawHide(playerid,speedDoors[playerid]);
	PlayerTextDrawColor(playerid, speedDoors[playerid], (gVehicles[vehicleid-1][vLock]) ? (0x06F000FF) : (0x800000FF));
	PlayerTextDrawShow(playerid,speedDoors[playerid]);

	//PlayerTextDrawHide(playerid,PTD_SpeedW[playerid][4]);
	//PlayerTextDrawColor(playerid, PTD_SpeedW[playerid][4], (gVehicles[vehicleid-1][vLock]) ? (CGREEN) : (CRED));
	//PlayerTextDrawShow(playerid,PTD_SpeedW[playerid][4]);
	return 1;
}

stock FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) { hour = hour+24; }
	else if (hour > 23) { hour = hour-24; }
	shifthour = hour;
	return 1;
}

forward ClearAnimTextVar(playerid);
public ClearAnimTextVar(playerid)
{
	FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	DeletePVar(playerid,"Animation");
	return 1;
}


//
forward GatDerevo(playerid,slot);
forward CreateDerevo(slot);
//
public GatDerevo(playerid,slot)
{
	if(gDerevo[slot] != INVALID_OBJECT) DestroyDynamicObject(gDerevo[slot]);
	gDerevo[slot]=INVALID_OBJECT;
	SetTimerEx("CreateDerevo",12*1000,0,"i",slot);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	SetPlayerAttachedObject(playerid,3,1463,5,0.045000,0.152000,0.217000,100.199966,-176.199951,102.500015,0.567000,0.327000,0.516000);
	SetPlayerCheckpoint(playerid,-749.0853,-121.2919,66.0043,3.0);
	AC_TogglePlayerControllable(playerid,1);
	AC_SetPlayerPos(playerid, GetPVarFloat(playerid, "CSAW_pos_x"), GetPVarFloat(playerid, "CSAW_pos_y"), GetPVarFloat(playerid, "CSAW_pos_z"));
	DeletePVar(playerid, "CSAW_pos_x");
	DeletePVar(playerid, "CSAW_pos_y");
	DeletePVar(playerid, "CSAW_pos_z");
	return 1;
}
public CreateDerevo(slot)
{
	if(gDerevo[slot] == INVALID_OBJECT) gDerevo[slot] = CreateDynamicObject(616,Derevo[slot][0],Derevo[slot][1],Derevo[slot][2],0.0000000,0.0000000,0.0000000);
	return 1;
}




#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define HOLDING(%0) ((newkeys & (%0)) == (%0))


/*public PHY_OnObjectUpdate(objectid)
{
	for(new C = 0; C < MAX_BA_PLACES; C++)
	{
		if(objectid == BA_Ball[C][BA_Ball_object])
		{
			new Float:x, Float:y, Float:z;
			GetObjectPos(objectid, x, y, z);
			if(BA_Ball[C][BA_Ball_State] == 1)
			{
				PHY_ApplyRotation(BA_Ball[C][BA_Ball_object], 3.25, 360.0);
			}
			else if(BA_Ball[C][BA_Ball_State]==2)
			{
				if(z <= B_Place_Pos[C][6] + 0.5)
				{
					BA_Ball[C][BA_Ball_Player] = -1;
					BA_Ball[C][BA_Ball_State] = 0;
				}
				for(new j = 0; j < 2; j++)
				{
					if(
					x > floatsub(B_Ring[C][j][0], 0.35) && x < floatadd(B_Ring[C][j][0], 0.35) &&
					y > floatsub(B_Ring[C][j][1], 0.35) && y < floatadd(B_Ring[C][j][1], 0.35) &&
					z > floatsub(B_Ring[C][j][2], 0.35) && z < floatadd(B_Ring[C][j][2], 0.35))
					{
						BA_Ball[C][BA_Ball_State] = 0;
						SetObjectPos(BA_Ball[C][BA_Ball_object],B_Ring[C][j][0],B_Ring[C][j][1],B_Ring[C][j][2]);
						PHY_SetObjectVelocity(BA_Ball[C][BA_Ball_object], 0.0, 0.0, -8.0);

						if ( BA_Ball[C][BA_Ball_Player] != -1 )
						{
							new get_ball_name_win [MAX_PLAYER_NAME], str_ball_win [100]  ;
							GetPlayerName ( BA_Ball[C][BA_Ball_Player], get_ball_name_win, MAX_PLAYER_NAME);
							format(str_ball_win, 100, 	"- Диктор: {ffffff}Гол! Забил: %s", get_ball_name_win ) ;

							foreach(new player:Player)
							{
									if(IsPlayerInDynamicArea(player, BA_Ball[C][BA_Ball_Area]))
									{
										SendClientMessage ( player, 0x7FB151FF, str_ball_win ) ;
									}
							}
						}
						BA_Ball[C][BA_Ball_Player] = -1;
					}
				}
			}
			break;
		}
	}
	FootBall_PHY_OnObjectUpdate(objectid);
	if(PoolStarted)
	{
		for(new i; i < sizeof PoolBall; i++)
		{
			if(objectid == PoolBall[i][bObject] && PHY_IsObjectMoving(PoolBall[i][bObject]))
			{
				new
					hole = IsBallInHole(i);
				if(hole)
				{
					new
						Float:speed,
						Float:vx, Float:vy, Float:vz;
					PHY_GetObjectVelocity(PoolBall[i][bObject], vx, vy, vz);
					speed = floatsqroot(vx * vx + vy * vy) + 0.2;

					PoolBall[i][bExisting] = 0;
					PHY_DeleteObject(PoolBall[i][bObject]);

					PlayPoolSound(31803 + random(3));

					switch(hole)
					{
						case 1: MoveObject(PoolBall[i][bObject], 509.61123657,-85.79737091,998.86785889-0.25, speed);
						case 2: MoveObject(PoolBall[i][bObject], 510.67373657,-84.84423065,998.86785889-0.25, speed);
						case 3: MoveObject(PoolBall[i][bObject], 510.61914062,-83.88769531,998.86785889-0.25, speed);
						case 4: MoveObject(PoolBall[i][bObject], 509.61077881,-83.89227295,998.86785889-0.25, speed);
						case 5: MoveObject(PoolBall[i][bObject], 510.61825562,-85.80107880,998.86785889-0.25, speed);
						case 6: MoveObject(PoolBall[i][bObject], 509.55642700,-84.84602356,998.86785889-0.25, speed);
					}
					if(i)
					{
						if(IsPlayerConnected(PoolLastShooter)) PoolScore[PoolLastShooter] ++;
						PoolLastScore ++;
						new string[128];
						if(PoolLastScore > 0) format(string, 128, "~g~~h~+%d", PoolLastScore);
						else format(string, 128, "~r~~h~%d", PoolLastScore);
						GameTextForPlayer(PoolLastShooter, string, 100000, 4);
						PlayerPlaySound(PoolLastShooter, 1250, 0.0, 0.0, 0.0);
					}
					else
					{
						if(IsPlayerConnected(PoolLastShooter)) PoolScore[PoolLastShooter] --;
						PoolLastScore --;
						new string[128];
						if(PoolLastScore > 0) format(string, 128, "~g~~h~+~r~~h~%d", PoolLastScore);
						else format(string, 128, "~r~~h~%d", PoolLastScore);
						GameTextForPlayer(PoolLastShooter, string, 100000, 4);
						PlayerPlaySound(PoolLastShooter, 1250, 0.0, 0.0, 0.0);
					}
					if(GetPoolBallsCount() <= 1)
					{
						PoolStarted = 0;
						PoolAimer = -1;
						new
							winscore = GetMaxPoolScore(),
							name[MAX_PLAYER_NAME];
						RespawnPoolBalls();
						RestoreCamera(PoolLastShooter);
						PoolLastShooter = -1;
						foreach(new p:Player)
						{
							if(PlayingPool[p] && PoolScore[p] == winscore)
							{
								new
									string[128];
								GetPlayerName(p, name, sizeof name);
								format(string, 128, "{FFFF45}The winner is: {EBEBEB}%s {FFFF45}with {EBEBEB}%d {FFFF45}points.", name, winscore);
								SendPoolPlayersMessage(string);
							}
						}
						foreach(new p:Player)
						{
							if(PlayingPool[p])
							{
								PlayingPool[p] = 0;
							}
						}
					}
					else if(AreAllBallsStopped())
					{
						SetTimerEx("RestoreCamera", 800, 0, "d", PoolLastShooter);
						PoolLastShooter = -1;
					}
				}
				return 1;
			}
		}
	}
	return 1;
}

public PHY_OnObjectCollideWithObject(object1, object2)
{
	if(PoolStarted)
	{
		for(new i; i < sizeof PoolBall; i++)
		{
			if(object1 == PoolBall[i][bObject])
			{
				PlayPoolSound(31800 + random(3));
				return 1;
			}
		}
	}
	return 1;
}

public PHY_OnObjectCollideWithWall(objectid, wallid)
{
	if(PoolStarted)
	{
		for(new i; i < sizeof PoolBall; i++)
		{
			if(objectid == PoolBall[i][bObject])
			{
				PlayPoolSound(31808);
				return 1;
			}
		}
	}
	return 1;
}
*/

forward StopPoliv();
public StopPoliv()
{
	for(new j;j<51;j++)
	{
		DestroyDynamicObject(GardenTreesIDs[j][1]);
	}
	for(new i;i<76;i++)
	{
		if(GardenTreesIs[i] == -1)
		{
			DestroyDynamicObject(GardenTreesIDs[i][0]);
			GardenTreesIDs[i][0] = CreateDynamicObject(737,GardenTrees[i][0],GardenTrees[i][1],GardenTrees[i][2],0.0,0.0,0.0);
			GardenTreesIs[i] = 410+random(30);
			UpdateDynamic3DTextLabelText(GardenText[i], -1, "{"#cWHITE"}Дерево {"#cGREEN"}доступно {"#cWHITE"}подойдите{"#cGRAY"}\nчтобы начать собирать яблоки");
		}
	}
	KillTimer(GardenSys);
	GardenSys = -1;
	GardenSysTime = unix + 1800;
	return 1;
}


public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new tickcount1 = GetTickCount();
	if(GetPVarInt(playerid,"crack_tazer")) FIXES_ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
	new PlayerState = GetPlayerState(playerid);
	new PlayerInterior = GetPlayerInterior ( playerid );
	new vehicleid = GetPlayerVehicleID(playerid);
	GetPlayerPos(playerid, p_info[playerid][pX], p_info[playerid][pY], p_info[playerid][pZ]);

	if(newkeys & KEY_SUBMISSION || newkeys & KEY_NO)
	{
	    new fixed_veh = vehicleid - 1;
		if(fixed_veh >= 0 && fixed_veh<MAX_VEHICLES && PlayerState==PLAYER_STATE_DRIVER)
		{
			if(gVehicles[fixed_veh][vFuel] <= 0.0 && GetEngineStat(vehicleid) != 1) SendErr(playerid,"В машине нет бензина");
			else if ( GetPVarInt ( playerid, "RaceCar" ) == vehicleid && !RaceStatus) SendClientMessage(playerid,COLOR_GREY,"Вы не можете включить двигатель пока не начата гонка");
			else if ( gVehicles[fixed_veh][vFuel] <= 0.0 ) SendClientMessage ( playerid , COLOR_GREY , "Недостаточное количество бензина в машине" ) ;
			else if ( gVehicles[fixed_veh][uDamage] ) SendClientMessage ( playerid , COLOR_GREY , "Машина повреждена, завести невозможно" ) ;
			else
			{
				if(GetChased[playerid] != INVALID_PLAYER_ID && VehicleBomb{vehicleid} == 1)
				{
					if(p_info[playerid][pHeadValue] >= 1)
					{
						if(p_info[GetChased[playerid]][tMember] == F_HITMAN)
						{
							AC_SetVehicleHealth(vehicleid,0);
							new Float:boomx, Float:boomy, Float:boomz;
							GetPlayerPos(playerid,boomx, boomy, boomz);
							CreateExplosion(boomx, boomy , boomz, 7, 1);
							VehicleBomb{GetPlayerVehicleID(playerid)} = 0;
							PlacedVehicleBomb[GetChased[playerid]] = INVALID_VEHICLE_ID;
							Executing(GetChased[playerid], playerid);
							SCM(playerid, COLOR_GREY, "** При включении двигателя раздался тихий щелчок, после которого прогремел взрыв **");
							p_info[GetChased[playerid]][pC4Used] = 0;
							p_info[GetChased[playerid]][pC4] = INVALID_OBJECT;
							PlayerPlaySound(playerid, 11200, 0.0, 0.0, 0.0);
						}
					}
				}
				ToggleEngine(vehicleid);
			}
		}
	}

	if(PRESSED(KEY_FIRE))
	{
		// PRESSED KEY_FIRE
		if( p_info[playerid][pC4Used] == 1 )
		{
			if(GoChase[playerid] != INVALID_PLAYER_ID)
			{
				if(IsPlayerInRangeOfPoint(GoChase[playerid], 12.0, GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z")))
				{
					if(p_info[GoChase[playerid]][pHeadValue] >= 1)
					{
						if (p_info[playerid][tMember] == F_HITMAN)
						{
							Executing(playerid, GoChase[playerid]);
						}
					}//
				}
			}
			p_info[playerid][pC4Used] = 0;
			CreateExplosion(GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z"), 7, 8);
			PickUpC4(playerid);
			SCM(playerid, COLOR_YELLOW, "Бомба взорвалась!");
			p_info[playerid][pC4Used] = 0;
		}
		new slot = GetPVarInt(playerid, "id_derevo");
		if(PlayerState==PLAYER_STATE_ONFOOT && PlayerToPoint(5.0,playerid,Derevo[slot][0],Derevo[slot][1],Derevo[slot][2]) && IsPlayerInCheckpoint(playerid) && GetPlayerWeapon(playerid) == 9) if(GetPVarInt(playerid,"lesopilka")) SetPVarInt(playerid,"CSAW_GO", 1);
		if(PlayerState==PLAYER_STATE_ONFOOT && GetPlayerWeapon(playerid) == 9 && !(PlayerToPoint(5.0,playerid,Derevo[slot][0],Derevo[slot][1],Derevo[slot][2]) && IsPlayerInCheckpoint(playerid)))
		{
			SetPlayerArmedWeapon(playerid, 0);
			FIXES_ApplyAnimation(playerid,"PED","handscower",4.1,1,0,0,0,1000);
			SetTimerEx("ClearAnimText",1000,0,"i",playerid);
		}
		if ( vehicleid >= SIInfernus[0] && vehicleid <= SIInfernus[NUM_SI_VEHICLES-1] && GetPVarInt(playerid, "SIVehicleCols") && PlayerState == PLAYER_STATE_DRIVER && IsPlayerInAnyVehicle(playerid)) AC_AddVehicleComponent(vehicleid, 1010);
		if(GetPVarInt(playerid, "Miner") == 1 && PlayerState==PLAYER_STATE_ONFOOT){
			new id = GetMinerStage(playerid);
			if(GetPVarInt(playerid,"MinerCount")>0 && id == -1){
				ClearAnimations(playerid);
				TogglePlayerControllable(playerid,1);
				FIXES_ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				ClearAnimations(playerid);
				FIXES_ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				DeletePVar(playerid,"MinerCount");
			}
			else if(id != -1){
				if(MinerTime[id][playerid]>unix)
				{
					SendClientMessage(playerid,CGRAY,"Вы уже обработали эту местность");
				}
				else if(GetPVarInt(playerid,"second_player") <= GetTickCount())
				{
					SetPVarInt(playerid,"MinerCount",GetPVarInt(playerid,"MinerCount")+1);
					if(GetPVarInt(playerid,"MinerCount")<10){
						SetPVarInt(playerid,"second_player", GetTickCount() + 700);
						FIXES_ApplyAnimation( playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0 );
					}
					else{
						MinerTime[id][playerid]=unix+300;
						DeletePVar(playerid, "MinerCount");
						ClearAnimations(playerid);
						TogglePlayerControllable(playerid,1);
						FIXES_ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
						FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
						new rand = SHAHTA_ZP_1+random(SHAHTA_ZP_2);
						ClearAnimations(playerid);
						FIXES_ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
						SetPVarInt(playerid,"pJobAmount.2", GetPVarInt(playerid,"pJobAmount.2") + rand);
						if(QuestStep[1][playerid]==1){
							quest_amount_miner[playerid]++;
							if(quest_amount_miner[playerid]>=MAX_QUEST_MINER){
								SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
								QuestStep[1][playerid] = 2;
								UpdatePlayerQuestStep(playerid);
							}
							UpdatePlayerQuestAmount(playerid);
						}
						format(stringer, 128, "Вы обработали данную местность и к вашей зарплате прибавляется %i$, всего ваша зарплата составляет %i$", rand, GetPVarInt(playerid,"pJobAmount.2"));
						SCM(playerid,0xa4cd00AA,stringer);
						format(stringer,16,"~w~Total %i$",GetPVarInt(playerid,"pJobAmount.2"));
						GameTextForPlayer(playerid, stringer, 750, 1);
						SetPVarInt(playerid,"miner_camni", GetPVarInt(playerid,"miner_camni") + 1);
						format(stringer, 44, "STONE: %i", GetPVarInt(playerid,"miner_camni"));
						PlayerTextDrawSetString(playerid, MinerDraw[playerid],stringer);
					}
				}
			}
		}
/*		new s = GetPlayerSkin(playerid);//DEIMOS-ПОЖАР
		if(s == 277 || s == 278 || s == 279){
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407 || GetPlayerWeapon(playerid) == 42) {
				for(new i = TOTALFIRE[0]; i <= TOTALFIRE[1]; i++){
					if(!FireSystem[i][fStatus]) continue;
					if(IsPlayerAimingAt(playerid, FireSystem[i][fPos][0], FireSystem[i][fPos][1], FireSystem[i][fPos][2], 20.0)){
						SetPVarInt(playerid, "FireSystem", 1);
						if ( FireSystem[i][fHealth] <= 580 ){
							FireSystem[i][fHealth] += 10 ;
							SetPlayerProgressBarValue(playerid, universalbar[playerid], FireSystem[i][fHealth]);
							SetPVarInt(playerid,"FireTimerr",_:SetTimerEx("FireTimer", 300, true, "dd", playerid, i));
						}
						else{
							foreach(new j:Player){
								if(IsPlayerInDynamicArea(j, FireSystem[i][fZone])){
									if(GetPlayerSkin(j) == 277 || GetPlayerSkin(j) == 278 || GetPlayerSkin(j) == 279){
										if(GetPVarInt(j, "FireTimerr")){
											KillTimer(GetPVarInt(j, "FireTimerr"));
											DeletePVar(j,"FireTimerr");
										}
										if(GetPVarInt(j, "FireBar") >= 1)
										{
											HidePlayerProgressBar(j, universalbar[j]);
											DestroyPlayerProgressBar(j, universalbar[j]);
											SetPVarInt(j, "FireBar", 0);
										}
									}
								}
							}
							if(FireSystem[i][fObject] != INVALID_OBJECT){
								DestroyDynamicObject(FireSystem[i][fObject]);
								FireSystem[i][fObject]=INVALID_OBJECT;
							}
							if(IsValidDynamicArea(FireSystem[i][fZone])) DestroyDynamicArea(FireSystem[i][fZone]);
							FireSystem[i][fStatus] = false;
							FireSystem[i][fHealth] = 600;
							new bool: cuff = true;
							for(new k = TOTALFIRE[0]; k <= TOTALFIRE[1] - 1; k++){
								if(!FireSystem[k][fStatus]) continue;
								cuff = false;
							}
							if(cuff){
								new rtext[32];
								if(p_info[playerid][pX] > -1080 && p_info[playerid][pY] < 490) rtext = "Лос Сантос";
								else if(p_info[playerid][pX] > -1080 && p_info[playerid][pY] > 490) rtext = "Лас Вентурас";
								else if(p_info[playerid][pX] < -1080) rtext = "Сан Фиерро";
								format(stringer, 128,"[R] Диспетчер: Вызов из %s по причине Пожара, был успешно устранен",rtext);
								SendRadioMessage(4, 0x93FF4CFF, stringer);
								foreach(new k:Player){
									if(p_info[k][tMember] == F_MCLS){
										DisablePlayerCheckpoint(k);
										p_info[k][pSalary] += 1000;
									}
								}
								TOTALFIRE[0] = 0;
								TOTALFIRE[1] = 1;
							}
						}
						break;
					}
				}
			}
		}*/
		if(GetPVarInt(playerid, "StartTraining") == 1 || GetPlayerVirtualWorld(playerid) == 32 || GetPlayerVirtualWorld(playerid) == 33)
		{
			if(GetPVarInt(playerid, "GYM_Bar") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= unix+2)
			{
				FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_up_smooth", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", unix+2);
				if(GetPVarInt(playerid, "ClickBar") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50) SetPVarInt(playerid, "ClickWeight", 0);
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][2] < 100)
					{
						GivePlayerStats(playerid, 2, 1);
						GameTextForPlayer(playerid, "~w~Force ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickBar", 0);
				}
				else GivePVarInt(playerid, "ClickBar", 1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 2)) SetPlayerAttachedObject(playerid, 2, 2913, 6, 0.033000, 0.028000, -0.104999, 5.699995, -1.999999, 0.500062, 1.000000, 1.000000, 1.000000);
			}
			if(GetPVarInt(playerid, "GYM_Dumbbells") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= unix+2)
			{
				FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_down", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", unix+2);
				if(GetPVarInt(playerid, "ClickDumbbells") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50) SetPVarInt(playerid, "ClickWeight", 0);
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][2] < 100)
					{
						GivePlayerStats(playerid, 2, 1);
						GameTextForPlayer(playerid, "~w~Force ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickDumbbells", 0);
				}
				else GivePVarInt(playerid, "ClickDumbbells", 1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 2)) SetPlayerAttachedObject(playerid, 2, 2915, 6, 0.083999, 0.000000, -0.039999, -7.199998, -87.000038, -3.199999, 1.000000, 1.000000, 1.000000);
			}
		}
		if(!GetPlayerWeapon(playerid))
		{
			if(GetPVarInt(playerid, "HitTime") < unix) SetPVarInt(playerid, "HitClick", 0);
			GivePVarInt(playerid, "HitClick", 1);
			SetPVarInt(playerid, "HitTime", unix+10);
			if(GetPVarInt(playerid, "HitClick") == 9) SetPVarInt(playerid, "HitClick", 0);
		}
	}
	else if(PRESSED(KEY_HANDBRAKE))
	{
		// PRESSED KEY_HANDBRAKE
		if(PlayerState==PLAYER_STATE_ONFOOT) target_player(playerid) ;
	}
	else if(PRESSED(KEY_CROUCH))
	{
		if(PlayerToPoint(20.0, playerid, 2064.2183,-102.4871,8.8051)) if(IsAArm(playerid) && GetPlayerState(playerid)==PLAYER_STATE_DRIVER) ShowPlayerDialog(playerid,dSelectPatr,DIALOG_STYLE_MSGBOX,"{ffff00}Загрузка","{"#cWHITE"}Выберите что вы хотите загрузить","{"#cWHITE"}Металл","{"#cWHITE"}Патрон");
		if(PlayerToPoint(10.0, playerid, -1708.4163,10.9306,3.5547) && PlayerState==2)
		{
			if(GetPlayerVehicleSeat(playerid) == 0 && IsAGang(playerid))
			{
				for(new i = 0; i < 98; i++)
				{
					stringer[0] = EOS;
					if(GetPVarInt(playerid, "NormCar"))
					{
						new model = GetVehicleModel(GetPlayerVehicleID(playerid))-400;
						format(stringer, 300, "{ffffff}| Информация об автомобиле:{"#cGRAY"}\n\nНазвание - %s(%d)\nСтоимость утилизации - {"#cGREEN"}$%d\n\n{ffffff}Вы действительно хотите утилизировать авто?", VehicleNames[model], model+400, gTransport[model][trPrice] / 5);
						ShowPlayerDialog(playerid, d_carjack+2, 0, " ",stringer , "Да", "Нет");
						SetPVarInt(playerid,"SelectedSlotBuyingCar", gTransport[model][trPrice] / 5);
					}
					else SendErr(playerid, "Данный автомобиль нам не нужен");
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,10.0, 2497.5657,2773.3835,10.8203) )
		{
			format(stringer, 128, "Вы не состоите в '%s'", f_info[F_JTTF][f_name]);
			if ( p_info[playerid][tMember] != F_JTTF )
			{
				SendClientMessage(playerid,COLOR_GREY,stringer);
			}
			else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid,COLOR_GREY,"Вы должны находиться за рулем автомобиля!");
			}
			else if(!(IsDynamicObjectMoving(fbiimg[1]) || IsDynamicObjectMoving(fbiimg[0])))
			{
				new Float:xone[3];
				GetDynamicObjectPos(fbiimg[1], xone[0],xone[1], xone[2]);
				if(xone[1] == 2777.1829) MoveDynamicObject(fbiimg[1], 2497.2090, 2784.1829, 11.5202, 0.5, 0.00, 0.00, 90.00);
				else if(xone[1] == 2784.1829) MoveDynamicObject(fbiimg[1], 2497.2090, 2777.1829, 11.5200, 0.5, 0.00, 0.00, 90.00);
				GetDynamicObjectPos(fbiimg[0], xone[0],xone[1], xone[2]);
				if(xone[1] > 2769) MoveDynamicObject(fbiimg[0], 2497.2063, 2762.2068, 11.5202, 0.5, 0.00, 0.00, 90.00);
				else if(xone[1] == 2762.2068) MoveDynamicObject(fbiimg[0], 2497.2063, 2769.2068, 11.5200, 0.5, 0.00, 0.00, 90.00);
			}
		}
		if(PlayerState == 2)
		{
			if(PlayerToPoint(4.0, playerid, -82.5608,183.2757,1003.7993) && ShowTuneList[playerid][0] == false && ShowTuneList[playerid][1] == false)
			{
				AC_SetVehiclePos(vehicleid,944.7640,-1738.8625,13.2605);
				AC_SetVehicleZAngle(vehicleid,90.2679);
				AC_SetVehicleVirtualWorld(vehicleid, 0);
				SetCameraBehindPlayer(playerid);
			}
			new barrierid = IsObjectBarrier(playerid);
			if(barrierid != -1) CheckBarrier(playerid,barrierid);
		}
		if(IsPlayerInRangeOfPoint(playerid,  10.0, 880.7454,605.0643,998.3520) && PlayerState == 2)
		{
		    new Veh = GetPlayerVehicleID(playerid);
			if(p_info[playerid][pHouse] && Veh != 0)
			{
				new i = p_info[playerid][pHouse] ;
				new bool:check_valid_vip_car_object = false;
				for(new x = 0; x < 5; x++)
				{
					if(gAttachedObjectToVehicle[Veh-1][x] == INVALID_OBJECT)
					{
						check_valid_vip_car_object=true;
						break;
					}
				}
				if(!check_valid_vip_car_object)
				{
					new get_vw_obj = GetPlayerVirtualWorld(playerid);
					if ( get_vw_obj == p_info[playerid][pHouse] )
					{
						Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,gAttachedObjectToVehicle[Veh-1][0], E_STREAMER_WORLD_ID, 0);
						Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,gAttachedObjectToVehicle[Veh-1][1], E_STREAMER_WORLD_ID, 0);
						Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,gAttachedObjectToVehicle[Veh-1][2], E_STREAMER_WORLD_ID, 0);
						Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,gAttachedObjectToVehicle[Veh-1][3], E_STREAMER_WORLD_ID, 0);
						Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,gAttachedObjectToVehicle[Veh-1][4], E_STREAMER_WORLD_ID, 0);
					}
				}
				AC_SetVehiclePos(Veh, gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
				AC_SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
				SetCameraBehindPlayer(playerid);
				AC_LinkVehicleToInterior(Veh, 0);
				AC_SetVehicleVirtualWorld(Veh, 0);
			}
			else if(p_info[playerid][pTempKey])
			{
				new i = p_info[playerid][pTempKey];
				AC_SetVehiclePos(Veh,gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
				AC_SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
				SetCameraBehindPlayer(playerid);
				AC_LinkVehicleToInterior(Veh,0);
				AC_SetVehicleVirtualWorld(Veh, 0);
			}
		}
	}
	else if(PRESSED(KEY_YES))
	{
		// PRESSED KEY_YES
		if(GetPVarInt(playerid,"bizzProdaet"))
		{
			new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
			new home_cena = GetPVarInt(playerid,"bizzCena");
			if(id_pokupaet == playerid)
			{
				if(p_info[playerid][pCash] < home_cena)
				{
					SendClientMessage(playerid,COLOR_GREY,"У вас не достаточно денег наличными");
					SendClientMessage(id_pokupaet,COLOR_GREY,"У покупателя не достаточно денег наличными");
					DeletePVar(playerid,"bizzProdaet");
					DeletePVar(playerid,"bizzCena");
					DeletePVar(id_pokupaet,"bizzPokupaet");
				}
				else
				{
					TransferMoney(playerid,p_info[playerid][pCash]-home_cena,home_cena,"купил биз с рук");
					TransferMoney(id_prodaet,p_info[id_prodaet][pCash]+home_cena,home_cena,"продал биз игроку");
					p_info[playerid][pCash] -= home_cena;
					UpdateMoney(playerid);
					p_info[id_prodaet][pCash] += home_cena;
					UpdateMoney(id_prodaet);
					p_info[playerid][pPbiskey] = p_info[id_prodaet][pPbiskey];
					p_info[id_prodaet][pPbiskey] = 0;
					UpdatePlayerData(id_prodaet,"pPbiskey",0);
					UpdatePlayerData(playerid,"pPbiskey",p_info[playerid][pPbiskey]);
					strmid(Business[p_info[playerid][pPbiskey]-1][Owner],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),31);
					SaveBusiness(p_info[playerid][pPbiskey]-1);
					Update3DTextLabelBusiness(p_info[playerid][pPbiskey]-1);
					new bizid = p_info[playerid][pPbiskey]-1;
					Business[bizid][bLicenses] = 0;
					UpdateOtherBusiness(bizid);
					format(stringer,128,"Вы купили бизнес у {"#cWHITE"}%s [%i]{ffff00} за {"#cWHITE"}%i {ffff00}$.",NamePlayer[id_prodaet],id_prodaet,home_cena);
					SendClientMessage(playerid,CYELLOW,stringer);
					format(stringer,128,"У вас купил бизнес {"#cWHITE"}%s [%i]{ffff00} за {"#cWHITE"}%i {ffff00}$.",NamePlayer[playerid],playerid,home_cena);
					SendClientMessage(id_prodaet,CYELLOW,stringer);
					DeletePVar(playerid,"bizzProdaet");
					DeletePVar(playerid,"bizzCena");
					DeletePVar(id_pokupaet,"bizzPokupaet");
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");
				DeletePVar(playerid,"bizzProdaet");
				DeletePVar(playerid,"bizzCena");
			}
		}
		if(GetPVarInt(playerid,"carProdaet"))
		{
			new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"carPokupaet")-1;
			new home_cena = GetPVarInt(playerid,"carCena");
			new number_car = GetPVarInt(id_prodaet,"numbercar")-1;
			if(id_pokupaet == playerid)
			{
				if(p_info[playerid][pCash] < home_cena)
				{
					SendClientMessage(playerid,COLOR_GREY,"У вас не достаточно денег наличными");
					SendClientMessage(id_pokupaet,COLOR_GREY,"У покупателя не достаточно денег наличными");
					DeletePVar(playerid,"carProdaet");
					DeletePVar(playerid,"carCena");
					DeletePVar(id_pokupaet,"carPokupaet");
					DeletePVar(id_pokupaet,"numbercar");
				}
				else if(!(number_car < 0 || number_car >= MAX_PLAYER_CAR))
				{
					if(caridhouse[id_prodaet][number_car] != 0)
					{
						DestroyVehicleOP(caridhouse[id_prodaet][number_car]);
						caridhouse[id_prodaet][number_car] = 0;
					}
					PlayerCar[playerid][number_car] = PlayerCar[id_prodaet][number_car];
					PlayerCar[id_prodaet][number_car] = 462;
					UpdatePlayerData(id_prodaet,(!number_car) ? ("pCar") : ("pCar2"),462);
					UpdatePlayerData(playerid,(!number_car) ? ("pCar") : ("pCar2"),PlayerCar[playerid][number_car]);
					for(new i = 0; i < 12; i++)
					{
						gPlayerTuning[playerid][number_car][i] = gPlayerTuning[id_prodaet][number_car][i];
						gPlayerTuning[id_prodaet][number_car][i] = 0;
					}
					UpdateTuning(id_prodaet,number_car + 1);
					UpdateTuning(playerid,number_car + 1);
					SetVehicleToHouse(playerid,number_car + 1, true);
					SetVehicleToHouse(id_prodaet,number_car + 1, true);
					new mes[128];
					format(mes, 128, "купил машину с рук id: %d,%d,%s", PlayerCar[id_prodaet][number_car],number_car,NamePlayer[id_prodaet]);
					TransferMoney(playerid,p_info[playerid][pCash]-home_cena,home_cena,mes);
					format(mes, 128, "продал машину игроку %d,%d,%s", PlayerCar[id_prodaet][number_car],number_car,NamePlayer[playerid]);
					TransferMoney(id_prodaet,p_info[id_prodaet][pCash]+home_cena,home_cena,mes);
					p_info[id_prodaet][p_veh_number][number_car] = p_info[playerid][p_veh_number][number_car];
					p_info[playerid][p_veh_number][number_car] = -1;
					UpdatePlayerData(playerid, "p_veh_number0", p_info[playerid][p_veh_number][0]);
					UpdatePlayerData(playerid, "p_veh_number1", p_info[playerid][p_veh_number][1]);
					UpdatePlayerData(id_prodaet, "p_veh_number0", p_info[id_prodaet][p_veh_number][0]);
					UpdatePlayerData(id_prodaet, "p_veh_number1", p_info[id_prodaet][p_veh_number][1]);
					p_info[playerid][pCash] -= home_cena;
					UpdateMoney(playerid);
					p_info[id_prodaet][pCash] += home_cena;
					UpdateMoney(id_prodaet);
					format(stringer,128,"Вы купили машину у {"#cWHITE"}%s [%i]{ffff00} за {"#cWHITE"}%i {ffff00}$",NamePlayer[id_prodaet],id_prodaet,home_cena);
					SendClientMessage(playerid,CYELLOW,stringer);
					format(stringer,128,"У вас купил машину {"#cWHITE"}%s [%i]{ffff00} за {"#cWHITE"}%i {ffff00}$",NamePlayer[playerid],playerid,home_cena);
					SendClientMessage(id_prodaet,CYELLOW,stringer);
					DeletePVar(playerid,"carProdaet");
					DeletePVar(playerid,"carCena");
					DeletePVar(id_pokupaet,"carPokupaet");
					DeletePVar(id_pokupaet,"numbercar");
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");
				DeletePVar(playerid,"carProdaet");
				DeletePVar(playerid,"carCena");
			}
		}
		if(GetPVarInt(playerid,"houseProdaet"))
		{
			new id_prodaet = GetPVarInt(playerid,"houseProdaet") - 1;
			new id_pokupaet = GetPVarInt(id_prodaet,"housePokupaet") - 1;

			new home_cena = GetPVarInt(playerid,"houseCena");
			if(id_pokupaet == playerid)
			{
				if(p_info[playerid][pCash] < home_cena)
				{
					SendClientMessage(playerid,COLOR_GREY,"У вас не достаточно денег наличными");
					SendClientMessage(id_pokupaet,COLOR_GREY,"У покупателя не достаточно денег наличными");
					DeletePVar(playerid,"houseProdaet");
					DeletePVar(playerid,"houseCena");
					DeletePVar(id_pokupaet,"housePokupaet");
				}
				else
				{
					TransferMoney(playerid,p_info[playerid][pCash]-home_cena,home_cena,"купил дом с рук");
					TransferMoney(id_prodaet,p_info[id_prodaet][pCash]+home_cena,home_cena,"продал дом игроку");
					p_info[playerid][pCash] -= home_cena;
					UpdateMoney(playerid);
					p_info[id_prodaet][pCash] += home_cena;
					UpdateMoney(id_prodaet);
					format(stringer, 512, "[HOUSE BUY PLAYER]: %s HOUSEID: %d | PRICE: %d | MYSQL_ID: %d\n", gHouses[p_info[id_prodaet][pHouse]][houseOwner], p_info[id_prodaet][pHouse], gHouses[p_info[id_prodaet][pHouse]][hValue], gHouses[p_info[id_prodaet][pHouse]][hValue]);
					WriteHouseLog(NamePlayer[playerid], stringer);
					format(stringer, 512, "[HOUSE SELL PLAYER]: %s HOUSEID: %d | PRICE: %d | MYSQL_ID: %d\n", gHouses[p_info[playerid][pHouse]][houseOwner], p_info[playerid][pHouse], gHouses[p_info[id_prodaet][pHouse]][hValue], gHouses[p_info[playerid][pHouse]][hID]);
					WriteHouseLog(NamePlayer[id_prodaet], stringer);
					strmid(gHouses[ p_info[id_prodaet][pHouse] ][houseOwner],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),31);
					UpdateHome(p_info[id_prodaet][pHouse]);
					SaveHome(p_info[id_prodaet][pHouse]);
					p_info[playerid][pHouse] = p_info[id_prodaet][pHouse];
					p_info[id_prodaet][pHouse] = 0;
					UpdatePlayerData(id_prodaet,"pPhousekey",0);
					UpdatePlayerData(playerid,"pPhousekey",p_info[playerid][pHouse]);
					if(caridhouse[id_prodaet][0]) DestroyVehicleOP(caridhouse[id_prodaet][0]), caridhouse[id_prodaet][0] = 0;
					if(caridhouse[id_prodaet][1]) DestroyVehicleOP(caridhouse[id_prodaet][1]), caridhouse[id_prodaet][1] = 0;
					SetVehicleToHouse(playerid, 1, true);
					SetVehicleToHouse(playerid, 2, true);
					format(stringer,128,"Вы купили дом у {"#cWHITE"}%s [%i]{ffff00} за {"#cWHITE"}%i {ffff00}$",NamePlayer[id_prodaet],id_prodaet,home_cena);
					SendClientMessage(playerid,CYELLOW,stringer);
					format(stringer,128,"У вас купил дом {"#cWHITE"}%s [%i]{ffff00} за {"#cWHITE"}%i {ffff00}$",NamePlayer[playerid],playerid,home_cena);
					SendClientMessage(id_prodaet,CYELLOW,stringer);
					DeletePVar(playerid,"houseProdaet");
					DeletePVar(playerid,"houseCena");
					DeletePVar(id_pokupaet,"housePokupaet");
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");
				DeletePVar(playerid,"houseProdaet");
				DeletePVar(playerid,"houseCena");
			}
		}
		if(GetPVarInt(playerid,"Invite") == 1)
		{
			new acter = GetPVarInt(playerid,"Player");
			if(p_info[acter][tMember])
			{
				GetFrak(acter,p_info[acter][tMember],1147);
				SetPVarInt(acter,"invite",playerid);
			}
			DeletePVar(playerid,"Invite");
			DeletePVar(playerid,"Player");
		}
		if(GetPVarInt(playerid,"medcart"))
		{
			new acter = GetPVarInt(playerid,"medcart")-1;
			if(acter >= 0)
			{
				if(IsPlayerConnected(playerid) && IsPlayerConnected(acter))
				{
					ShowMeditionCard(acter, playerid);
					format(stringer,144,"достал(а) медицинскую карту и показал ее %s", NamePlayer[playerid]);
					MeAction(acter,stringer);
					DeletePVar(playerid,"medcart");
				}
			}
		}
		if(GetPVarInt(playerid,"pass"))
		{
			new acter = GetPVarInt(playerid,"pass")-1;
			if(acter >= 0)
			{
				if(IsPlayerConnected(playerid) && IsPlayerConnected(acter))
				{
					ShowPass(acter,playerid);
					format(stringer,128,"достал паспорт и показал его %s",NamePlayer[playerid]);
					MeAction(acter,stringer);
					DeletePVar(playerid,"pass");
				}
			}
		}
		if(GetPVarInt(playerid,"skill"))
		{
			new acter = GetPVarInt(playerid,"skill")-1;
			stringer[0] = EOS;
			format(stringer,1500,"{"#cWHITE"}SDPistol:\t[%s]%d\nDeagle:\t\t[%s]%d\nShotGun:\t[%s]%d\nMP5\t\t[%s]%d\nAK47:\t\t[%s]%d\nM4A1:\t\t[%s]%d",
			ToDevelopSkills(p_info[acter][pGunSkill][0],100 - p_info[acter][pGunSkill][0]),p_info[acter][pGunSkill][0],
			ToDevelopSkills(p_info[acter][pGunSkill][1],100 - p_info[acter][pGunSkill][1]),p_info[acter][pGunSkill][1],
			ToDevelopSkills(p_info[acter][pGunSkill][2],100 - p_info[acter][pGunSkill][2]),p_info[acter][pGunSkill][2],
			ToDevelopSkills(p_info[acter][pGunSkill][3],100 - p_info[acter][pGunSkill][3]),p_info[acter][pGunSkill][3],
			ToDevelopSkills(p_info[acter][pGunSkill][4],100 - p_info[acter][pGunSkill][4]),p_info[acter][pGunSkill][4],
			ToDevelopSkills(p_info[acter][pGunSkill][5],100 - p_info[acter][pGunSkill][5]),p_info[acter][pGunSkill][5]);
			ShowPlayerDialog(playerid,231,DIALOG_STYLE_MSGBOX,"{FFFF00}Навыки владения оружием",stringer,"Закрыть","");
			format(stringer,64,"показал выписку из тира %s'y",NamePlayer[playerid]);
			MeAction(acter,stringer);
			DeletePVar(playerid,"skill");
		}
		if(GetPVarInt(playerid, "SettingGraffiti") == 1){
			if(GetPVarInt(playerid, "KeyPressed") != 1){
				if(GetPVarInt(playerid, "KeyForPress") == 1) SetPVarInt(playerid,"KeyPressed",1);
				else GraffitiFailed(playerid);
			}
		}
		if(DrugOffer[playerid] != -1)
		{
			if(p_info[playerid][pCash] < DrugPrice[DrugOffer[playerid]])
			{
				SendErr(playerid, "У вас нет столько денег");
				SendErr(DrugOffer[playerid], "У покупателя не достаточно денег.");
			}
			else
			{
				format(stringer, 128, "Вы купили %d грамм наркотиков за %d $ у %s",DrugGram[DrugOffer[playerid]],DrugPrice[DrugOffer[playerid]],NamePlayer[DrugOffer[playerid]]);
				SCM(playerid, CINFO, stringer);
				format(stringer, 128, "%s купил у вас %d грамм наркотиков за %d $",NamePlayer[playerid],DrugGram[DrugOffer[playerid]],DrugPrice[DrugOffer[playerid]]);
				SCM(DrugOffer[playerid], CINFO, stringer);
				TransferMoney(playerid,p_info[DrugOffer[playerid]][pCash]+DrugPrice[DrugOffer[playerid]],DrugPrice[DrugOffer[playerid]],"купил граммо наркотиков");
				p_info[DrugOffer[playerid]][pCash] += DrugPrice[DrugOffer[playerid]];
				TransferMoney(playerid,p_info[playerid][pCash]+DrugPrice[DrugOffer[playerid]],DrugPrice[DrugOffer[playerid]],"купил граммо наркотиков");
				p_info[playerid][pCash] -= DrugPrice[DrugOffer[playerid]];
				UpdateMoney(DrugOffer[playerid]);
				UpdateMoney(playerid);
				p_info[DrugOffer[playerid]][pDrugs] -= DrugGram[DrugOffer[playerid]];
				p_info[playerid][pDrugs] += DrugGram[DrugOffer[playerid]];
				UpdatePlayerData(DrugOffer[playerid],"pDrugs",p_info[DrugOffer[playerid]][pDrugs]);
				UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);

			}
			DrugPrice[DrugOffer[playerid]] = 0;
			DrugGram[DrugOffer[playerid]] = 0;
			DrugOffer[playerid] = -1;
		}
		if(GetPVarInt(playerid, "sim_id_sell"))
		{
			new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
			new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
			if(!IsPlayerConnected(sell_sim_id))
			{
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
			else if ( p_info[playerid][pCash]<sell_sim_sum)
			{
				SendClientMessage(playerid,CBADINFO,"У вас недостаточно денег для покупки сим-карты.");
			}
			else
			{
				format(stringer, 128, "Вы приобрели SIM-карту у {"#cWHITE"}%s {"#cINFO"}за {"#cGREEN"}%i$", NamePlayer[sell_sim_id],sell_sim_sum);
				SendClientMessage(playerid, CINFO, stringer);
				format(stringer, 128, "%s {"#cINFO"}купил у Вас SIM-карту за {"#cGREEN"}%i$", NamePlayer[playerid],sell_sim_sum);
				SendClientMessage(sell_sim_id, -1, stringer);
				TransferMoney(playerid,p_info[playerid][pCash]-sell_sim_sum,sell_sim_sum,"купил симку");
				TransferMoney(sell_sim_id,p_info[sell_sim_id][pCash]+sell_sim_sum,sell_sim_sum,"продал симку");
				p_info[playerid][pCash] -= sell_sim_sum;
				p_info[sell_sim_id][pCash] += sell_sim_sum;
				UpdateMoney(playerid);
				UpdateMoney(sell_sim_id);
				p_info[playerid][pPnumber] = p_info[sell_sim_id][pPnumber];
				p_info[sell_sim_id][pPnumber] = 0;
				UpdatePlayerData(playerid,"pPnumber",p_info[playerid][pPnumber]);
				UpdatePlayerData(sell_sim_id,"pPnumber",p_info[sell_sim_id][pPnumber]);
				format(stringer, 128, "Ваш новый номер: {"#cWHITE"}%i",p_info[playerid][pPnumber]);
				SendClientMessage(playerid, CINFO, stringer);
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
		}
		if(GetPVarInt(playerid,"sl"))
		{
			new acter = GetPVarInt(playerid,"sl")-1;
			stringer[0] = EOS;
			format(stringer, 1500, "%s{"#cWHITE"}Водительские права: %s\n",stringer, (Lic[acter][0]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
			format(stringer, 1500, "%s{"#cWHITE"}Лицензия пилота: %s\n",stringer, (Lic[acter][1]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
			format(stringer, 1500, "%s{"#cWHITE"}Лицензия на водный транспорт: %s\n", stringer,(Lic[acter][2]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
			format(stringer, 1500, "%s{"#cWHITE"}Лицензия на оружие: %s\n",stringer, (Lic[acter][3]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
			ShowPlayerDialog(playerid, 0000, 0, "Лицензии", stringer, "Ок", "");
			format(stringer,144, "показал свои лицензии %s'у",NamePlayer[playerid]);
			MeAction(acter,stringer, 5.0);
			format(stringer,144, "показал свои лицензии %s'у",NamePlayer[playerid]);
			SetPlayerChatBubble(acter,stringer,0xE75480FF,30.0,5000);
			DeletePVar(playerid,"sl");
		}
		if(GetPVarInt(playerid,"hi"))
		{
			new hi = GetPVarInt(playerid,"hi")-1;
			new Float:angle;
			GetPlayerFacingAngle(hi, angle);
			SetPlayerFacingAngle(playerid, angle + 180);
			FIXES_ApplyAnimation(hi,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
			FIXES_ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
			format(stringer, 144, "пожал(а) руку %s'у", NamePlayer[playerid]);
			MeAction(hi,stringer, 5.0);
			DeletePVar(playerid,"hi");
		}
		if(GetPVarInt(playerid,"minet"))
		{
			new minet = GetPVarInt(playerid,"minet") - 1;
			FIXES_ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,5,1);
			FIXES_ApplyAnimation(minet,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,5,1);
			DeletePVar(playerid,"minet");
		}
		if(GetPVarInt(playerid,"kiss"))
		{
			new kiss = GetPVarInt(playerid,"kiss")-1;
			if(!IsPlayerStream(4.0, playerid, kiss)) SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!");
			else
			{
				SetPosInFrontOfPlayer(kiss,playerid,1);
				new Float:a;
				GetPlayerFacingAngle(kiss,a);
				SetPlayerFacingAngle(playerid,180 + a);
				FIXES_ApplyAnimation(kiss,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
				FIXES_ApplyAnimation(playerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0);
				DeletePVar(playerid,"kiss");
			}
		}
		if(GetPVarInt(playerid,"get_patron") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			stringer[0] = EOS;
			for(new place=0;place<fraction_amount;place++)
			{
				if(place != 12 && place != 13 && place != 15 && place != 17 && place != 18 && place != 5 && place != 6 && place != 14 && place != 1 && place != 10 && place != 21 && place != 3 && place != 19 && place != 7) continue;
				format(stringer,1500,"%s%s\n",stringer,f_info[place][f_name]);
			}
			ShowPlayerDialog(playerid,dSelectFrac,DIALOG_STYLE_LIST,"Выберите фракцию",stringer,"Выбрать","Закрыть");
		}
		if(GetPVarInt(playerid,"uinvite"))
		{
			new puinvite = GetPVarInt(playerid,"uinvite") - 1;
			new SubLeader = p_info[puinvite][pSubLeader] - 1;
			new Member = p_info[playerid][tMember] - 1;//unit_inc
			format(stringer,128,"Вы вступили в подразделение {"#cRED"}%s",unit_name[Member][SubLeader]);
			SendClientMessage(playerid,CINFO,stringer);
			format(stringer,128,"%s {"#cINFO"}вступил в подразделение {"#cRED"}%s",NamePlayer[playerid],unit_name[Member][SubLeader]);
			SendClientMessage(puinvite,-1,stringer);
			p_info[playerid][pSubLeader] = p_info[puinvite][pSubLeader];
			UpdatePlayerData(playerid,"pSubLeader",p_info[playerid][pSubLeader]);
			DeletePVar(playerid,"uinvite");
		}
		if(GetPVarInt(playerid,"family_invite"))
		{
			if ( p_info[GetPVarInt(playerid,"family_invite")-1][pFamily] )
			{
				p_info[playerid][pFamily] = p_info[GetPVarInt(playerid,"family_invite")-1][pFamily];
				UpdatePlayerData(playerid,"family",p_info[playerid][pFamily]);
				format(stringer,128,"Вы вступили в семью {ffff00}%s",_family[p_info[playerid][pFamily]-1][family_create_name]);
				SendClientMessage(playerid,-1,stringer);
				format(stringer,128,"%s вступил в семью",NamePlayer[playerid]);
				SendClientMessage(GetPVarInt(playerid,"family_invite") - 1,-1,stringer);
				DeletePVar(GetPVarInt(playerid,"family_invite") - 1,"family_invite");
				DeletePVar(playerid,"family_invite");
			}
		}
		if(GetPVarInt(id_player_wbook,"wbook_proposal") && id_player_wbook != INVALID_PLAYER_ID && playerid_wbook != INVALID_PLAYER_ID && playerid_wbook != playerid)
		{
			MeAction(playerid,"показал(а) трудовую книжку");
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 300, "SELECT * FROM `employment_history` WHERE `name_player` = '%s' AND `data_un_invite` != 'No-ne'", NamePlayer[playerid_wbook]);
			mysql_pquery(connects, mysql_query_string, "callback_employment_history", "ds", id_player_wbook, NamePlayer[playerid_wbook]);
			DeletePVar(id_player_wbook,"wbook_proposal");
			DeletePVar(playerid_wbook,"wbook_proposal");
			id_player_wbook = INVALID_PLAYER_ID;
			playerid_wbook = INVALID_PLAYER_ID;
		}
		new id_pvp=GetPVarInt(playerid,"id_pvp")-1;
		new id_to_pvp=GetPVarInt(id_pvp,"id_pvp")-1;
		new id_gun=GetPVarInt(id_pvp,"id_gun");
		new money_pvp=GetPVarInt(id_pvp,"money_pvp");
		if(id_to_pvp==playerid && !GetPVarInt(playerid, "duel_nachalsya"))
		{
			for(new d = 0; d < MAX_DUELS; d++)
			{
				if(duel_[d][duel_id]==-1)
				{
					if(!IsPlayerStream(10.0, playerid, id_pvp) || GetPlayerVirtualWorld(id_pvp) != GetPlayerVirtualWorld(playerid))
					{
						SendErr(playerid, "Ваш противник должен быть рядом с Вами");
					}
					else
					{
						duel_[d][duel_id] = playerid;
						duel_[d][duel_to_id] = id_pvp;
						duel_[d][duel_last_vw]=GetPlayerVirtualWorld(playerid);
						duel_[d][duel_gun]=id_gun;
						duel_[d][duel_money]=money_pvp;
						new Float:a;
						GetPlayerFacingAngle(playerid,a);
						SetPlayerFacingAngle(id_pvp,floatadd(180.0,a));
						GetPlayerHealth(playerid,duel_[d][duel_health_id]);
						GetPlayerHealth(id_pvp,duel_[d][duel_health_to_id]);
						format(stringer,144,"%s {"#cINFO"}согласился на дуэль на {"#cWHITE"}%s",NamePlayer[id_to_pvp], WeaponNames[id_gun]);
						SendClientMessage(id_pvp,-1,stringer);
						format(stringer,144,"Вы согласились на дуэль с {"#cWHITE"}%s {"#cINFO"}на {"#cWHITE"}%s",NamePlayer[id_pvp], WeaponNames[id_gun]);
						SendClientMessage(playerid,CINFO,stringer);
						duel_[d][duel_time]=3;
						duel_[d][duel_timer]=SetTimerEx("Go_PVP_TIME",1000,1,"i", d);
						SetPVarInt(playerid,"duel_nachalsya",true);
						duel_t++;
					}
					break;
				}
			}
		}
	}
	
	if(PRESSED(KEY_NO))
	{
		// PRESSED KEY_NO
		if(GetPVarInt(playerid,"Invite") == 1)
		{
			DeletePVar(playerid,"Invite");
			DeletePVar(playerid,"Player");
		}
		if(GetPVarInt(playerid,"skill"))
		{
			SCM(playerid,-1,"Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"skill")-1,-1,"Игрок отказался от предложения");
			DeletePVar(playerid,"skill");
		}
		if(GetPVarInt(playerid,"pass"))
		{
			SCM(playerid, -1,"- Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"pass")-1,-1,"- Игрок отказался от предложения");
			DeletePVar(playerid,"pass");
		}
		if(GetPVarInt(playerid,"medcart"))
		{
			SCM(playerid, -1,"- Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"medcart")-1,-1,"- Игрок отказался от предложения");
			DeletePVar(playerid,"medcart");
		}
		if(GetPVarInt(playerid,"houseProdaet"))
		{
			new id_prodaet = GetPVarInt(playerid,"houseProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"housePokupaet")-1;
			SendClientMessage(playerid,COLOR_GREY,"- Вы отказались от предложения");
			SendClientMessage(id_prodaet,COLOR_GREY,"- Игрок отказался от предложения");
			DeletePVar(playerid,"houseProdaet");
			DeletePVar(playerid,"houseCena");
			DeletePVar(id_pokupaet,"housePokupaet");
		}
		if(GetPVarInt(playerid,"bizzProdaet"))
		{
			new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
			SendClientMessage(playerid,COLOR_GREY,"- Вы отказались от предложения");
			SendClientMessage(id_pokupaet,COLOR_GREY,"- Игрок отказался от предложения");
			DeletePVar(playerid,"bizzProdaet");
			DeletePVar(playerid,"bizzCena");
			DeletePVar(id_pokupaet,"bizzPokupaet");
		}
		if(GetPVarInt(playerid,"carProdaet"))
		{
			new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"carPokupaet")-1;
			SendClientMessage(playerid,COLOR_GREY,"- Вы отказались от предложения");
			SendClientMessage(id_pokupaet,COLOR_GREY,"- Игрок отказался от предложения");
			DeletePVar(playerid,"carProdaet");
			DeletePVar(playerid,"carCena");
			DeletePVar(id_pokupaet,"numbercar");
			DeletePVar(id_pokupaet,"carPokupaet");
		}
		if(IsABankomat(playerid)) ShowATMMenu(playerid);
		if(DrugOffer[playerid] != -1)
		{
			SCM(playerid,-1,"- Вы отказались от предложения");
			SCM(DrugOffer[playerid],-1,"- Отказался от вашего предложения");
			DrugPrice[DrugOffer[playerid]] = 0;
			DrugGram[DrugOffer[playerid]] = 0;
			DrugOffer[playerid] = -1;
		}
		if(GetPVarInt(playerid, "sim_id_sell"))
		{
			SendClientMessage(GetPVarInt(playerid, "sim_id_sell")-1, -1, "Игрок отказался от предложения");
			SendClientMessage(playerid, -1, "Вы отказались от предложения");
			DeletePVar(playerid, "sim_id_sell");
			DeletePVar(playerid, "sim_summ");
		}
		if(GetPVarInt(playerid,"sl"))
		{
			SCM(playerid,-1,"Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"sl")-1,-1,"Игрок отказался от предложения");
			DeletePVar(playerid,"sl");
		}
		if(GetPVarInt(playerid,"hi"))
		{
			SCM(playerid,-1,"Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"hi")-1,-1,"Игрок отказался от предложения");
			DeletePVar(playerid,"hi");
		}
		if(GetPVarInt(playerid,"minet"))
		{
			SCM(playerid,-1,"Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"minet")-1,-1,"Игрок отказался от предложения");
			DeletePVar(playerid,"minet");
		}
		if(GetPVarInt(playerid,"kiss"))
		{
			SCM(playerid,-1,"Вы отказались от предложения");
			SCM(GetPVarInt(playerid,"kiss")-1,-1,"Игрок отказался от предложения");
			DeletePVar(playerid,"kiss");
		}
		if(GetPVarInt(playerid,"uinvite"))
		{
			new puinvite = GetPVarInt(playerid,"uinvite")-1;
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(puinvite,-1,"Игрок отказался от предложения");
			DeletePVar(playerid,"uinvite");
		}
		if(GetPVarInt(playerid,"family_invite"))
		{
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(GetPVarInt(playerid,"family_invite") - 1,-1,"Игрок отказался от предложения");
			DeletePVar(GetPVarInt(playerid,"family_invite") - 1,"family_invite");
			DeletePVar(playerid,"family_invite");
		}
		if(GetPVarInt(id_player_wbook,"wbook_proposal") && id_player_wbook != INVALID_PLAYER_ID && playerid_wbook != INVALID_PLAYER_ID && playerid_wbook != playerid)
		{
			SendClientMessage(playerid_wbook,-1,"Вы отказались от предложения");
			SendClientMessage(playerid_wbook,-1,"Игрок отказался от предложения");
			DeletePVar(playerid_wbook,"wbook_proposal");
			DeletePVar(id_player_wbook,"wbook_proposal");
			id_player_wbook = INVALID_PLAYER_ID;
			playerid_wbook = INVALID_PLAYER_ID;
		}
		for (new at=newkeys==KEY_NO?MAX_NPC_BOT:0;at;at--)
		{
		    if(at==20) continue;
			if IsPlayerInDynamicArea(playerid, bot_area[at]) && !IsAUseBot[at] *then
			{
				TextDrawHideForPlayer(playerid,Info_TD[0]);
				TextDrawHideForPlayer(playerid,Info_TD[1]);
				if(at == 47)
				{
					if ( p_info[playerid][pLevel] >= 2)
					{
						ShowPlayerDialog(playerid, dVipAd, DIALOG_STYLE_INPUT, "{"#cWHITE"}Аня", "{"#cWHITE"}Привет, меня зовут Аня\nЯ здесь работаю репортером\n\nА именно принимаю "ORG"VIP {"#cWHITE"}объявление\nЦена одного объявления: {"#cGREEN"}8000$\n\n\
						Если вы располагаете такой суммой, Используйте текст объявления в поле ниже", "Ввод", "Отмена");
						ApplyActorAnimation(bot_id[at], "ped", "IDLE_CHAT", 4.1, 1, 0, 0, 0, 4000);
					}
					else SCM(playerid,COLOR_GREY,"Доступно с 2 уровня");
					break;
				}
				cd_bot[at]=!IsAUseBot[at]?1:0;
				UpdateBotText();
				break;
			}
		}
		if ( GetPVarInt ( playerid , "TazerPlayer" ) != 0 )
		{
			new target = GetPVarInt ( playerid , "TazerPlayer" ) - 1 ;
			if(IsPlayerStream(2.0, playerid, target)) pc_cmd_cuff(playerid, IntToStr(target));
			DeletePVar ( target , "TazerPlayer" ) ;
			DeletePVar ( playerid , "TazerPlayer" ) ;
		}
		else if(GetPVarInt(playerid,"f_freeslot") == 0)
		{
			for(new i=0;i<MAX_DROP_GUNS;i++)
			{
				if(drop_gun[i][dg_object] == -1) continue;
				if(drop_gun[i][dg_time] < 1) continue;
				new Float:x, Float:y, Float:z;
				GetDynamicObjectPos(drop_gun[i][dg_object], x,y,z);
				if(!PlayerToPoint(1.5,playerid,x,y,z)) continue;
				if(drop_gun[i][dg_timer] != -1)
				{
					KillTimer(drop_gun[i][dg_timer]);
					drop_gun[i][dg_timer] = -1;
				}
				DestroyDynamicObject(drop_gun[i][dg_object]);
				drop_gun[i][dg_object]=-1;
				if(drop_gun[i][dg_text] != Text3D:-1)
				{
					Delete3DTextLabel(drop_gun[i][dg_text]);
					drop_gun[i][dg_text] = Text3D:-1;
				}
				AC_GivePlayerWeapon ( playerid ,drop_gun[i][dg_gun] , drop_gun[i][dg_ammo] ) ;
				FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			}
		}
		new id_pvp=GetPVarInt(playerid,"id_pvp")-1;
		new id_to_pvp=GetPVarInt(id_pvp,"id_pvp")-1;
		new id_gun=GetPVarInt(id_pvp,"id_gun");
		if(id_to_pvp==playerid)
		{
			format(stringer,144,"%s {"#cINFO"}отказался от дуэля на {"#cWHITE"}%s",NamePlayer[id_to_pvp], WeaponNames[id_gun]);
			SendClientMessage(id_pvp,-1,stringer);
			format(stringer,144,"Вы отказались от дуэля с {"#cWHITE"}%s {"#cINFO"}на {"#cWHITE"}%s",NamePlayer[id_pvp], WeaponNames[id_gun]);
			SendClientMessage(playerid,CINFO,stringer);
			DeletePVar(playerid, "id_pvp");
			DeletePVar(id_pvp, "id_pvp");
			DeletePVar(id_pvp, "id_gun");
			DeletePVar(id_pvp, "money_pvp");
		}
		if(GetPVarInt(playerid, "SettingGraffiti") == 1){
			if(GetPVarInt(playerid, "KeyPressed") != 1){
				if(GetPVarInt(playerid, "KeyForPress") == 3) SetPVarInt(playerid,"KeyPressed",1);
				else GraffitiFailed(playerid);
			}
		}
		if(p_info[playerid][pZ] > 12.86 && p_info[playerid][pZ] < 101.50 && p_info[playerid][pY] > -1611.70 && p_info[playerid][pY] < -1609.50 && p_info[playerid][pX] > 288.00 && p_info[playerid][pX] < 290.10)
		{
			stringer[0] = EOS;
			for(new i; i < sizeof(ElevatorQueue22); i ++)
			{//если этаж занят местом игрока, то отобразить этот этаж красным цветом
				if(FloorRequestedBy22[i] != 10000){strcat(stringer, "{00CC00}");}
				strcat(stringer, FloorNames22[i]);
				strcat(stringer, "\n");
			}
			ShowPlayerDialog(playerid, 152, DIALOG_STYLE_LIST, "{00CC00}Управление лифтом", stringer, "OK", "Отмена");
		}
		if(p_info[playerid][pZ] > 12.86 && p_info[playerid][pZ] < 101.50 && p_info[playerid][pY] < -1611.70 && p_info[playerid][pY] > -1613.40 && p_info[playerid][pX] > 288.50 && p_info[playerid][pX] < 292.10)
		{
			new i = 13;//определение этажа, откуда поступил вызов
			while(p_info[playerid][pZ] < GetDoorsZCoordForFloor22(i) + 3.5 && i > 0){i --;}
			if(i == 0 && p_info[playerid][pZ] < GetDoorsZCoordForFloor22(0) + 2.0){i = -1;}
			if(i <= 12) CallElevator22(playerid, i + 1, 0);//вызов, или начало движения лифта
		}
		if(!(br_player[playerid][br_flag] & (1 << 2)))
		{
			GetPlayerPos(playerid, br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2]);
			GetPlayerFacingAngle(playerid, br_player[playerid][br_line_pos][3]);
			br_player[playerid][br_temp_pickup] = CreateDynamicPickup ( 19198 , 1 , br_player[playerid][br_line_pos][0] , br_player[playerid][br_line_pos][1] , br_player[playerid][br_line_pos][2] ) ;
			ShowPlayerDialog ( playerid , 0000 , DIALOG_STYLE_MSGBOX , "{29A300}Информация" , "{FFFFFF}Вы поставили точку {33CC00}\"A\"{FFFFFF} нашей линии, теперь чтобы линия сформировалась станьте в противоположную точку и нажмите {33CC00}\"N\"", "Хорошо", "");
			br_player[playerid][br_flag] ^= 1 << 3;
			br_player[playerid][br_flag] |= 1 << 2;
		}
		if(!(br_player[playerid][br_flag] & (1 << 3)))
		{
			new Float:endPosX, Float:endPosY, Float:endPosZ, slot = GetPVarInt(playerid, "cs_slot"), Float:per_dis = 0.65;
			GetPlayerPos(playerid, endPosX, endPosY, endPosZ);
			if ( br_player[playerid][br_temp_pickup] != INVALID_OBJECT )
			{
				DestroyDynamicPickup ( br_player[playerid][br_temp_pickup] ) ;
				br_player[playerid][br_temp_pickup] = INVALID_OBJECT;
			}
			if(blocktext[playerid] == Text3D:-1)
			{
				format(stringer, 128, "{"#cWHITE"}Линию установил: "newgrey"%s [%d]", NamePlayer[playerid], playerid);
				blocktext[playerid] = Create3DTextLabel(stringer, -1, endPosX, endPosY, endPosZ, 3.0, GetPlayerVirtualWorld(playerid));
			}
			switch(slot)
			{
				case 2: per_dis = 0.5;
				case 3: per_dis = 0.3;
				case 4: per_dis = 0.95;
			}
			br_player[playerid][br_line_pos][2] -= per_dis;
			endPosZ -= per_dis;
			new objectCount, Float: objectAngles[2], Float: a, Float: b;
			a = GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], endPosY, br_player[playerid][br_line_pos][2], endPosX, endPosY, br_player[playerid][br_line_pos][2]);
			b = GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2], endPosX, endPosY, br_player[playerid][br_line_pos][2]);
			if (br_player[playerid][br_line_pos][0] > endPosX)
			{
				if (br_player[playerid][br_line_pos][1] > endPosY) objectAngles[0] = 180.0 - asin(a / b);
				else if (br_player[playerid][br_line_pos][1] < endPosY) objectAngles[0] = asin(a / b);
			}
			else if (br_player[playerid][br_line_pos][0] < endPosX)
			{
				if (br_player[playerid][br_line_pos][1] > endPosY) objectAngles[0] = asin(a / b) + 180.0;
				else objectAngles[0] = 90.0 - asin(a / b) + 270.0;
			}
			a = GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2], endPosX, endPosY, br_player[playerid][br_line_pos][2]);
			b = endPosZ - br_player[playerid][br_line_pos][2];
			objectAngles[1] = atan2(a, b);
			new Float: lenStep = 3.5 * floatsin(90 - asin((3.5 * floatcos(objectAngles[1], degrees)) / 3.5), degrees);
			objectCount = floatround(GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2],endPosX, endPosY, br_player[playerid][br_line_pos][2]) / lenStep, floatround_ceil) + 1;
			if(objectCount > 25) objectCount = 25;
			for(new i=0;i<25;i++)
			{
				if(br_player[playerid][br_objects][i] != INVALID_OBJECT)
				{
					DestroyDynamicObject(br_player[playerid][br_objects][i]);
					br_player[playerid][br_objects][i]=INVALID_OBJECT;
				}
			}
			for (new i = 0; i < objectCount; i++)
			{
				br_player[playerid][br_objects][i] = CreateDynamicObject(object_select_td_brake[ slot - 1 ], br_player[playerid][br_line_pos][0] + (lenStep * i) * -floatsin(objectAngles[0], degrees), br_player[playerid][br_line_pos][1] + (lenStep * i) * floatcos(objectAngles[0], degrees), br_player[playerid][br_line_pos][2] + (3.5 * i * floatcos(objectAngles[1], degrees)), 0.0, 0.0, (slot == 3) ? (br_player[playerid][br_line_pos][3]) : (br_player[playerid][br_line_pos][3] + 90.0));
				switch(object_select_td_brake[ slot - 1 ])
				{
					case 1228: SetDynamicObjectMaterial(br_player[playerid][br_objects][i], 0, 18996, "mattextures", "lime", 0);
					case 2773:
					{
						SetDynamicObjectMaterial(br_player[playerid][br_objects][i], 0, 19595, "lsappartments1", "carpet4-256x256", 0);
						SetDynamicObjectMaterial(br_player[playerid][br_objects][i], 1, 19523, "sampicons", "reeedgrad32", 0);
					}
				}
			}
			Streamer_Update(playerid);
			br_player[playerid][br_flag]	|= 1 << 3;
		}
		if(p_info[playerid][pX] > -352.80 && p_info[playerid][pX] < -351.10 && p_info[playerid][pY] < -34.86 && p_info[playerid][pY] > -36.18)
		{
			new select_floor = (p_info[playerid][pZ] < -53.0) ? (1) : (2);
			if(!open_lift_doors && hospital_lift_state == 0 && hospital_lift_floor == select_floor){
				SetDoorOptionBL(select_floor);
				open_lift_doors = true;
			}
			else if(hospital_lift_state == 0 && hospital_lift_floor != select_floor)
			{
				GameTextForPlayer(playerid, "~g~~h~wait ...", 500, 1);
				hospital_lift_state = 1;
				open_lift_doors = false;
				SetDoorOptionBL(hospital_lift_floor, true);
				hospital_lift_floor = select_floor;
				UpdateTextFloorB(hospital_lift_floor);
			}
		}
		else if(p_info[playerid][pX] > -351.15 && p_info[playerid][pX] < -349.95 && p_info[playerid][pY] < -33.32 && p_info[playerid][pY] > -35.12)
		{
			new select_floor = (p_info[playerid][pZ] < -53.0) ? (1) : (2);
			if(hospital_lift_state == 0 && hospital_lift_floor == select_floor)
			{
				hospital_lift_state = 1;
				open_lift_doors = false;
				if ( select_floor == 1 ) hospital_lift_floor = 2;
				else hospital_lift_floor = 1;
				UpdateTextFloorB(hospital_lift_floor);
				SetDoorOptionBL(select_floor, true);
			}
		}
	}
	else if(PRESSED(KEY_CTRL_BACK))
	{
		// PRESSED KEY_CTRL_BACK
		if(PlayerState == PLAYER_STATE_ONFOOT)
		{
			if(!GetPVarInt(playerid, "seat_player"))
			{
				for(new i = 0; i < 8; i++)
				{
					if(PlayerToPoint(1.0,playerid,seat_pos_spawn[i][0],seat_pos_spawn[i][1],seat_pos_spawn[i][2]))
					{
						SetPlayerFacingAngle(playerid,seat_pos_spawn[i][3]);
						FIXES_ApplyAnimation( playerid, "MISC", "SEAT_LR", 4.1, 0, 0, 0, 1, 0, 1 );
						SetPVarInt(playerid, "seat_player", true);
						SendClientMessage(playerid,0xD9F6F6AA, "Для того чтобы встать нажмите еще раз {7FB151}H");
						break;
					}
				}
			}
			else
			{
				ClearAnimText(playerid);
				DeletePVar(playerid, "seat_player");
			}
		}
		if(p_info[playerid][tMember] == F_FBI || p_info[playerid][tMember] == F_HITMAN || p_info[playerid][tMember] == F_PMC)
		{
			for(new veh = 1, j = GetVehiclePoolSize(); veh <= j; veh++)
			{
				if(gVehicles[veh-1][vFraction] == 2 || gVehicles[veh-1][vFraction] == 23 || gVehicles[veh-1][vFraction] == 10)
				{
					new Float:X,Float:Y,Float:Z;
					GetVehicleShiftPos(veh,1,X,Y,Z,3.0);

					if(IsPlayerInRangeOfPoint(playerid,3,X,Y,Z))
					{
							SetPVarInt(playerid,"veh", veh);
							stringer = "Название\tК-во{"#cWHITE"}\n";
							format(stringer,500, "%sЖучок\t{CFFF4D}1\n",stringer);
							ShowPlayerDialog(playerid,22115,DIALOG_STYLE_TABLIST_HEADERS,"{ffff00}Багажник", stringer, "Взять", "Закрыть");
							new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,true,objective);
							MeAction(playerid,"открыл(а) багажник");
							break;
					}
				}
			}
		}
		if(PlayerState==PLAYER_STATE_ONFOOT) pc_cmd_vzad(playerid);
		if(GetPVarInt(playerid, "SettingGraffiti") == 1){
			if(GetPVarInt(playerid, "KeyPressed") != 1){
				if(GetPVarInt(playerid, "KeyForPress") == 2){
					SetPVarInt(playerid,"KeyPressed",1);
					GameTextForPlayer(playerid," ", 1000, 5);
				}
				else GraffitiFailed(playerid);
			}
		}
		if(CameraFlag[playerid][3] >= 1 && CameraFlag[playerid][3] <= 5)ShowPlayerDialog(playerid,d_sucess_camera_0,DIALOG_STYLE_MSGBOX,"Управление камерой","{ffffff}Вы действительно хотите удалить точку?","Да","Нет");
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 772.1121, 9.4133, 1001.7000))
		{
			if(!GetPVarInt(playerid, "GYM_Bike"))
			{
				if(SimulatorUse[0] == true)  SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 772.6120, 8.8898, 999.7000);
					SetPlayerFacingAngle(playerid, 89.9620);
					FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_geton", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Bike", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[0] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bike", 0);
				SimulatorUse[0] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 820.4985, -5.0157, 1004.2050))
		{
			if(!GetPVarInt(playerid, "GYM_Bike"))
			{
				if(SimulatorUse[4] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 820.4985, -5.0157, 1004.2050);
					SetPlayerFacingAngle(playerid, 183.5034);
					FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_geton", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Bike", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[4] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bike", 0);
				SimulatorUse[4] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 820.4985, -5.0157, 1004.2050) && GetPlayerVirtualWorld(playerid) == 33)
		{
			if(!GetPVarInt(playerid, "GYM_Bike"))
			{
				if(SimulatorUse[8] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 820.4985, -5.0157, 1004.2050);
					SetPlayerFacingAngle(playerid, 183.5034);
					FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_geton", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Bike", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[8] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bike", 0);
				SimulatorUse[8] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 773.4795, -1.2654, 1000.7258))
		{
			if(!GetPVarInt(playerid, "GYM_Thread"))
			{
				if(SimulatorUse[1] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 773.4795, -1.2654, 1000.7258);
					SetPlayerFacingAngle(playerid, 181.4563);
					FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_geton", 4, 0, 0, 0, 1, 0, 1);
					SetPVarInt(playerid, "GYM_Thread", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[1] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Thread", 0);
				SimulatorUse[1] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 820.0707, -7.8297, 1004.2050))
		{
			if(!GetPVarInt(playerid, "GYM_Thread"))
			{
				if(SimulatorUse[5] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 820.0707, -7.8297, 1004.2050);
					SetPlayerFacingAngle(playerid, 180.3467);
					FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_geton", 4, 0, 0, 0, 1, 0, 1);
					SetPVarInt(playerid, "GYM_Thread", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[5] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Thread", 0);
				SimulatorUse[5] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 820.0707, -7.8297, 1004.2050) && GetPlayerVirtualWorld(playerid) == 33)
		{
			if(!GetPVarInt(playerid, "GYM_Thread"))
			{
				if(SimulatorUse[9] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 820.0707, -7.8297, 1004.2050);
					SetPlayerFacingAngle(playerid, 180.3467);
					FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_geton", 4, 0, 0, 0, 1, 0, 1);
					SetPVarInt(playerid, "GYM_Thread", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[9] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Thread", 0);
				SimulatorUse[9] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 772.9084, 1.4091, 1000.7210))
		{
			if(!GetPVarInt(playerid, "GYM_Bar"))
			{
				if(SimulatorUse[2] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 772.9084, 1.4091, 1000.7210);
					SetPlayerFacingAngle(playerid, 271.5546);
					FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_geton", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Bar", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+6);
					SimulatorUse[2] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bar", 0);
				RemovePlayerAttachedObject(playerid, 2);
				SimulatorUse[2] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 822.2966, -8.6826, 1004.2050))
		{
			if(!GetPVarInt(playerid, "GYM_Bar"))
			{
				if(SimulatorUse[6] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 822.2966, -8.6826, 1004.2050);
					SetPlayerFacingAngle(playerid, 180.0334);
					FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_geton", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Bar", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+6);
					SimulatorUse[6] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bar", 0);
				RemovePlayerAttachedObject(playerid, 2);
				SimulatorUse[6] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 822.2966, -8.6826, 1004.2050) && GetPlayerVirtualWorld(playerid) == 33)
		{
			if(!GetPVarInt(playerid, "GYM_Bar"))
			{
				if(SimulatorUse[10] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 822.2966, -8.6826, 1004.2050);
					SetPlayerFacingAngle(playerid, 180.0334);
					FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_geton", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Bar", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+6);
					SimulatorUse[10] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bar", 0);
				RemovePlayerAttachedObject(playerid, 2);
				SimulatorUse[10] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 773.4990, 5.3875, 1000.7802))
		{
			if(!GetPVarInt(playerid, "GYM_Dumbbells"))
			{
				if(SimulatorUse[3] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 773.4990, 5.3875, 1000.7802);
					SetPlayerFacingAngle(playerid, 91.7721);
					FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_pickup", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Dumbbells", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[3] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 0);
				RemovePlayerAttachedObject(playerid, 2);
				SimulatorUse[3] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 824.7230, -9.2819, 1004.3046))
		{
			if(!GetPVarInt(playerid, "GYM_Dumbbells"))
			{
				if(SimulatorUse[7] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 824.7230, -9.2819, 1004.3046);
					SetPlayerFacingAngle(playerid, 4.2750);
					FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_pickup", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Dumbbells", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[7] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 0);
				RemovePlayerAttachedObject(playerid, 2);
				SimulatorUse[7] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 824.7230, -9.2819, 1004.3046) && GetPlayerVirtualWorld(playerid) == 33)
		{
			if(!GetPVarInt(playerid, "GYM_Dumbbells"))
			{
				if(SimulatorUse[11] == true) SendErr(playerid, "Тренажёр занят");
				else
				{
					AC_SetPlayerPos(playerid, 824.7230, -9.2819, 1004.3046);
					SetPlayerFacingAngle(playerid, 4.2750);
					FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_pickup", 4, 0, 0, 0, 1, 0);
					SetPVarInt(playerid, "GYM_Dumbbells", 1);
					SetPVarInt(playerid, "GYM_Simulator_Time", unix+4);
					SimulatorUse[11] = true;
				}
			}
			else
			{
				FIXES_ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 0);
				RemovePlayerAttachedObject(playerid, 2);
				SimulatorUse[11] = false;
			}
		}
	}
	else if(PRESSED(KEY_LOOK_BEHIND))
	{
		if(GetPVarInt(playerid,"taxijob") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)ShowPlayerDialog(playerid, dEndTaxi, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}Диспетчер автопарка","{ffffff}Вы уверены что хотите завершить рабочий день?","Да","Нет");
		else if(GetPVarInt(playerid,"arendataxi") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ShowPlayerDialog(playerid, dStartTaxi, DIALOG_STYLE_INPUT, "{"#cORANGE"}Название такси","{ffffff}Придумайте название для вашего такси\nМаксимальная длина 15 символов\n\nЕсли вы не хотите как то называться\nНажмите кнопку \"Пропустить\"","Далее","Пропустить");
		else if(p_info[playerid][pJob] == 2 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && gVehicles[vehicleid - 1][vJob] == 2) ShowPlayerDialog(playerid,dStartMehJob,DIALOG_STYLE_MSGBOX,"{"#cORANGE"}Диспетчер автопарка","{ffffff}Вы уверены что хотите начать работу автомеханика?", "Да", "Нет");
	}
	else if(PRESSED(KEY_ANALOG_DOWN))
	{
		if(PlayerState== PLAYER_STATE_DRIVER) pc_cmd_fill(playerid);
	}
	else if(PRESSED(KEY_JUMP))
	{
		if(oldkeys & KEY_SPRINT)
		{
			if(!GetPVarInt(playerid,"PlayerCuffed") && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				if(GetPVarInt(playerid,"anti_sbiv_time") < unix && GetPVarInt(playerid,"MinerCount") == 0 && GetPVarInt(playerid,"anim_bolka") == 0 && GetPVarInt(playerid,"crack_tazer") == 0 && GetPVarInt(playerid,"Animation") == 0 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid,"robbankstime") && !GetPVarInt(playerid,"PlayerTied") && !GetPVarInt(playerid,"PlayerCuffedTime"))
				{
					FIXES_ApplyAnimation(playerid,"PED","GETUP_FRONT",4.0,0,0,0,0,0);
				}
			}
		}
		if(GetPVarInt(playerid,"hrieltor"))
		{
			AC_TogglePlayerControllable(playerid,1);
			AC_SetPlayerPos(playerid,GetPVarFloat(playerid,"rielX"),GetPVarFloat(playerid,"rielY"),GetPVarFloat(playerid,"rielZ"));
			printf("Загружено: %f, %f, %f",GetPVarFloat(playerid,"rielX"),GetPVarFloat(playerid,"rielY"),GetPVarFloat(playerid,"rielZ"));
			SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"rielVW"));
			SetPlayerInterior(playerid,3);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"rielX");
			DeletePVar(playerid,"rielY");
			DeletePVar(playerid,"rielZ");
			DeletePVar(playerid,"rielVW");
			DeletePVar(playerid,"hrieltor");
		}
		if(IsPlayerInDynamicArea(playerid,siren_area))
		{
			if(PlayerToPoint(3.0,playerid,2162.7239,-102.3602,6.7436))
			{
				ClearAnimations(playerid,true);
				for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid,InfoDraw[i]);
				status_siren = (status_siren) ? (false) : (true);
				SendSucc(playerid,(status_siren) ? ("Сирена включена") : ("Сирена отключена"));
				if(!status_siren)
				{
					foreach(i)
					{
						if(PlayerToPoint(120.0,i,2162.7239,-102.3602,6.7436))
						{
							GetPlayerPos(i,p_info[i][pX],p_info[i][pY],p_info[i][pZ]);
							PlayerPlaySound(i, 4203, PlayerPos[i][0], PlayerPos[i][1], PlayerPos[i][2]);
						}
					}
				}
			}
		}
	}
	else if(PRESSED(KEY_SPRINT))
	{
		// PRESSED KEY_SPRINT
		if(pSelectStoreGun[playerid])
		{
			new gunname[32];
			GetWeaponName(gHintGunID[pStoreGun[playerid]],gunname,32);
			format(stringer,144,"{"#cWHITE"}Укажите сколько патронов{"#cGREEN"}%s{"#cWHITE"} Вы хотите взять:",gunname);
			ShowPlayerDialog(playerid,dStoreGet,1,"Шкаф",stringer,"Взять","Отмена");
		}
		new Float:As; GetPlayerFacingAngle(playerid, As);
		for(new i; i<CountGraffity; i++)
		{
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, GrafInfo[i][gr_x][0],GrafInfo[i][gr_x][1],GrafInfo[i][gr_x][2])) continue;
			if(!(As >= GrafInfo[i][gr_x][6] - 20.0 && As < GrafInfo[i][gr_x][6] + 20.0)) continue;
			if(GetPVarInt(playerid, "SettingGraffiti") == 1) continue;
			if(!IsAGang(playerid)) continue;
			if(p_info[playerid][tMember] != GrafInfo[i][gFrak])
			{
				if(GetPlayerWeapon(playerid) == 41)
				{
					SetPVarInt(playerid,"Grafity",i);
					StartDrawing(playerid);
				}
				else SendClientMessage(playerid,0xAFAFAFAA,"У вас нет балончика, приобретите его в магазине 24\7");
			}
		}
		if (Upravakazino[playerid] ==	true)
		{
			switch(NumberFishka[playerid])
			{
				case 0..36:		RuletTip[playerid]		=	NumberFishka[playerid]	+	1;
				case 45,46:		RuletTip[playerid] 		= 	NumberFishka[playerid]	-	7;
				case 40..42: 	RuletTip[playerid] 		= 	NumberFishka[playerid];
				case 43:		RuletTip[playerid] 		=	43;
				case 48:		RuletTip[playerid] 		=	44;
				case 44:		RuletTip[playerid] 		=	45;
				case 47: 		RuletTip[playerid] 		=	46;
				case 37..39: 	RuletTip[playerid] 		= 	NumberFishka[playerid]	+	10;
			}
			switch(RuletkaStol[playerid])
			{
				case 1:ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{ffffff}Минимальная ставка {00CC00}50.000 $\n{ffffff}Максимальная ставка {00CC00}100.000 $\n{ffffff}Введите {00CC00}сумму:","Играть","Назад");
				case 2:ShowPlayerDialog(playerid,5577,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{ffffff}Минимальная ставка {00CC00}100.000 $\n{ffffff}Максимальная ставка {00CC00}500.000 $\n{ffffff}Введите {00CC00}сумму:","Играть","Назад");
				case 3:ShowPlayerDialog(playerid,5578,DIALOG_STYLE_INPUT,"{00CC00}Ставка","{ffffff}Минимальная ставка {00CC00}500.000 $\n{ffffff}Максимальная ставка {00CC00}1.000.000 $\n{ffffff}Введите {00CC00}сумму:","Играть","Назад");
			}
		}
		if(GetPVarInt(playerid, "StartTraining") == 1 || GetPlayerVirtualWorld(playerid) == 32 || GetPlayerVirtualWorld(playerid) == 33)
		{
			if(GetPVarInt(playerid, "GYM_Bike") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= unix+2)
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_pedal", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", unix+2);
				if(GetPVarInt(playerid, "ClickBike") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50) SetPVarInt(playerid, "ClickWeight", 0);
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][1] < 100)
					{
						GivePlayerStats(playerid, 1, 1);
						GameTextForPlayer(playerid, "~w~Stamina ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickBike", 0);
				}
				else GivePVarInt(playerid, "ClickBike", 1);
			}
			else if(GetPVarInt(playerid, "GYM_Thread") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= unix+2)
			{
				FIXES_ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_jog", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", unix+2);
				if(GetPVarInt(playerid, "ClickThread") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50) SetPVarInt(playerid, "ClickWeight", 0);
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][1] < 100)
					{
						GivePlayerStats(playerid, 1, 1);
						GameTextForPlayer(playerid, "~w~Stamina ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickThread", 0);
				}
				else GivePVarInt(playerid, "ClickThread", 1);
			}
		}
		if((CameraFlag[playerid][0] & (1 << 2)) == 0)
		{
			if(CameraFlag[playerid][3] == 0 && CameraFlag[playerid][2] == 0)
			{
				return_player_pos(playerid);
				ShowPlayerDialog(playerid,d_sucess_camera_1,DIALOG_STYLE_MSGBOX,"Управление камерой","{ffffff}Вы действительно хотите создать точку?","Да","Нет");
			}
			else if((CameraFlag[playerid][2] < CameraFlag[playerid][3] && CameraFlag[playerid][3] != 5) ||
			(CameraFlag[playerid][2] < CameraFlag[playerid][3] && CameraFlag[playerid][3] == 5))
			{
				for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
				for(new X = 0; X < 8; X++) TextDrawShowForPlayer(playerid, camera_pos_td[X]);
				if(CameraFlag[playerid][1] != -1)
				{
					KillTimer(CameraFlag[playerid][1]);
					CameraFlag[playerid][1] = -1;
				}
				CameraFlag[playerid][0] |= 1 << 1;
				ShowPositionCamera(playerid, CameraFlag[playerid][2]);
				PrintCameraFlag(playerid, 0, "show");
				PrintCameraFlag(playerid, 2, "show");
			}
			else if(CameraFlag[playerid][2] == CameraFlag[playerid][3] && CameraFlag[playerid][3] != 0 && CameraFlag[playerid][3] != 5)
			{
				return_player_pos(playerid);
				ShowPlayerDialog(playerid,d_sucess_camera_2,DIALOG_STYLE_MSGBOX,"Управление камерой","{ffffff}Вы действительно хотите создать точку?","Да","Нет");
			}
			else if((CameraFlag[playerid][2] == CameraFlag[playerid][3] + 1) || CameraFlag[playerid][2] == 5)
			{
				return_player_pos(playerid);
				new fix_show_tud = (CameraFlag[playerid][3] != 5) ? (CameraFlag[playerid][3] + 1) : (5);
				for(new i = 0; i <= fix_show_tud; i++)
				{
					PlayerTextDrawHide(playerid, CameraList[playerid][i]);
					PlayerTextDrawDestroy(playerid, CameraList[playerid][i]);
					CameraList[playerid][i] = PlayerText:-1;
				}
				for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
				SetCameraBehindPlayer(playerid);
				AC_TogglePlayerControllable(playerid, true);
				CameraFlag[playerid][0] |= 1 << 0;
				CameraFlag[playerid][0] |= 1 << 1;
				CameraFlag[playerid][0] |= 1 << 2;
				CameraFlag[playerid][0] |= 1 << 3;
				CameraFlag[playerid][0] |= 1 << 4;
				PrintCameraFlag(playerid, 0, "exit");
			}
		}
		if(re_choose[playerid][0]>=1 && p_info[playerid][pAdmin]>0)
		{
			if(re_choose[playerid][0]==1) ShowPlayerDialog(playerid,232,DIALOG_STYLE_INPUT,"Change","'	Используйте ид игрока	'","Далее","Отмена");
			else if(re_choose[playerid][0]==2 && re_choose[playerid][1]==1) SendInf(playerid, "На сервере стоит автоматическая система дамага. Следите за показателями (HP) & (ARMOUR)");
			else if((re_choose[playerid][0]==2 && re_choose[playerid][1]==2) || (re_choose[playerid][0]==2 && re_choose[playerid][1]==3)) SendInf(playerid, "На сервере стоит автоматическая система дамага. Следите за показателями (HP) & (ARMOUR)");
			else if(re_choose[playerid][0]==3 && re_choose[playerid][1]==1)
			{
				new rid=GetPVarInt(playerid,"r_specid");
				DeletePVar(rid,"r_shot_hit");
				DeletePVar(rid,"r_shot");
				DeletePVar(rid,"r_shot_10");
				DeletePVar(rid,"r_shot_hit_10");
				SendSucc(playerid, "Все выстрелы и попадания обнулены");
			}
			else if(re_choose[playerid][0]==3 && re_choose[playerid][1]==2)
			{
				ReturnRecon(playerid);
				if(p_info[GetPVarInt(playerid,"r_specid")][pMuteTime] > 0) format(stringer,10,"%d",GetPVarInt(playerid,"r_specid")),pc_cmd_unmute(playerid,stringer);
				else ShowPlayerDialog(playerid,240,DIALOG_STYLE_INPUT,"Mute","'	Используйте время и причину мута (через запятую)	'","Далее","Отмена");
			}
			else if(re_choose[playerid][0]==3 && re_choose[playerid][1]==3) pc_cmd_slap(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
			else if(re_choose[playerid][0]==3 && re_choose[playerid][1]==4) ShowPlayerDialog(playerid,239,DIALOG_STYLE_INPUT,"Тюрьма","'	Используйте время и причину присона (через запятую)	'","Далее","Отмена");
			else if(re_choose[playerid][0]==3 && re_choose[playerid][1]==5) pc_cmd_freeze(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
			else if(re_choose[playerid][0]==3 && re_choose[playerid][1]==6) pc_cmd_unfreeze(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
			else if(re_choose[playerid][0]==4 && re_choose[playerid][1]==1) ShowPlayerDialog(playerid,234,DIALOG_STYLE_INPUT,"Kick","'	Используйте причину кика	'","Далее","Отмена");
			else if(re_choose[playerid][0]==4 && re_choose[playerid][1]==2) ShowPlayerDialog(playerid,234,DIALOG_STYLE_INPUT,"Kick","'	Используйте причину кика	'","Далее","Отмена");
			else if(re_choose[playerid][0]==5) ShowPlayerDialog(playerid,233,DIALOG_STYLE_INPUT,"Warn","'	Используйте дни и причину (через запятую)	'","Далее","Отмена");
			else if(re_choose[playerid][0]==6 && re_choose[playerid][1]==1) ShowPlayerDialog(playerid,235,DIALOG_STYLE_INPUT,"Ban","'	Используйте дни и причину бана (через запятую)	'","Далее","Отмена");
			else if(re_choose[playerid][0]==6 && re_choose[playerid][1]==2) ShowPlayerDialog(playerid,236,DIALOG_STYLE_INPUT,"SBan","'	Используйте дни и причину бана (через запятую)	'","Далее","Отмена");
			else if(re_choose[playerid][0]==6 && re_choose[playerid][1]==3) ShowPlayerDialog(playerid,237,DIALOG_STYLE_INPUT,"IBan","'	Используйте причину бана	'","Далее","Отмена");
			else if(re_choose[playerid][0]==7 && re_choose[playerid][1]==1) pc_cmd_getstats(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
			else if(re_choose[playerid][0]==7 && re_choose[playerid][1]==2) pc_cmd_iwep(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
			else if(re_choose[playerid][0]==7 && re_choose[playerid][1]==3) pc_cmd_getip(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
			else if(re_choose[playerid][0]==8)
			{
				if(GetPlayerState(GetPVarInt(playerid,"r_specid"))==2 || GetPlayerState(GetPVarInt(playerid,"r_specid"))==3)
				{
					PlayerSpectateVehicle(playerid, GetPlayerVehicleID(GetPVarInt(playerid,"r_specid")), SPECTATE_MODE_NORMAL);
				}
				else
				{
					PlayerSpectatePlayer(playerid, GetPVarInt(playerid,"r_specid"), SPECTATE_MODE_NORMAL);
				}
				SetPlayerInterior(playerid,GetPlayerInterior(GetPVarInt(playerid,"r_specid")));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(GetPVarInt(playerid,"r_specid")));
			}
			else if(re_choose[playerid][0]==9)
			{
				TogglePlayerSpectating(playerid,0);
				GameTextForPlayer(playerid,"~w~RECON ~r~OFF",3000,4);
			}
		}
		else if(chose_player[playerid])
		{
			TextDrawHideForPlayer(playerid,tdNextSkin);
			TextDrawHideForPlayer(playerid,tdBackSkin);
			TextDrawHideForPlayer(playerid,tdSelSkin);
			chose_player[playerid]=false;
			DeletePVar(playerid,"chose_count");
			p_info[playerid][pReg]=1;
			p_info[playerid][pChar]=GetPlayerSkin(playerid);
			p_info[playerid][pModel]=GetPlayerSkin(playerid);
			for(new i = 0; i < 10; i++) SendClientMessage(playerid,-1,"");
			SpawnPlayer(playerid);
		}
		else if(listen_surf[playerid][1] != 0)
		{
			SurfPlayerUseSlot[playerid] = listen_surf[playerid][0];
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,surf_pos_id[SurfPlayerUseSlot[playerid]], E_STREAMER_WORLD_ID, 1);
			SetCameraBehindPlayer(playerid);
			SetPlayerAttachedObject(playerid, 3, Streamer_GetIntData(STREAMER_TYPE_OBJECT, surf_pos_id[SurfPlayerUseSlot[playerid]], E_STREAMER_MODEL_ID), 5, 0.1529, -0.1340, 0.0000, -22.3999, -176.6000, 171.9999, 1.0000, 1.0000, 1.0000, 0, 0);
			listen_surf[playerid][0] = 0;
			listen_surf[playerid][1] = 0;
			SendClientMessage(playerid,0x73B461FF,"[Информация] {FFFFFF}Вы взяли в аренду сёрфборд");
			SendClientMessage(playerid,0x73B461FF,"[Информация] {FFFFFF}Использовать его можно возле берега введя команду {AFAFAF} ( /surf )");
		}
	}
	else if(PRESSED(KEY_ANALOG_LEFT)){
		//PRESSED KEY_ANALOG_LEFT
		switch(listen_surf[playerid][1]){
			case 1:{if(listen_surf[playerid][0]>0){    listen_surf[playerid][0]--;	GoCameraToSurf(playerid,listen_surf[playerid][0]);}}
			case 2:{if(listen_surf[playerid][0]>=25){    listen_surf[playerid][0]--;	GoCameraToSurf(playerid,listen_surf[playerid][0]);}}
		}
		if(GetPVarInt(playerid,"takingselfie")){
			new Float:PLAYER_POS[3];
			GetPlayerPos(playerid,PLAYER_POS[0],PLAYER_POS[1],PLAYER_POS[2]);
			SetPVarFloat(playerid,"lX",PLAYER_POS[0]);
			SetPVarFloat(playerid,"lY",PLAYER_POS[1]);
			SetPVarFloat(playerid,"lZ",PLAYER_POS[2]);
			if(GetPVarFloat(playerid,"Degree") >= 360) DeletePVar(playerid,"Degree");
			SetPVarFloat(playerid,"Degree", GetPVarFloat(playerid,"Degree") - Speed);
			PLAYER_POS[0] = GetPVarFloat(playerid,"lX") + Radius * floatcos(GetPVarFloat(playerid,"Degree"), degrees);
			PLAYER_POS[1] = GetPVarFloat(playerid,"lY") + Radius * floatsin(GetPVarFloat(playerid,"Degree"), degrees);
			SetPlayerCameraPos(playerid, PLAYER_POS[0], PLAYER_POS[1], GetPVarFloat(playerid,"lZ") + Height);
			SetPlayerCameraLookAt(playerid, GetPVarFloat(playerid,"lX"), GetPVarFloat(playerid,"lY"), GetPVarFloat(playerid,"lZ")+1);
			SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"Degree") - 90.0);
		}
		new carid = GetPlayerVehicleID(playerid);
		new model = (GetVehicleModel(vehicleid)-400);
		if(model>=0)
		{
			if(LightsObject[carid][0] != -1)
			{
				DestroyDynamicObject(LightsObject[carid][0]);
				LightsObject[carid][0] = -1;
			}
			if(LightsObject[carid][1] != -1)
			{
				DestroyDynamicObject(LightsObject[carid][1]);
				LightsObject[carid][1] = -1;
			}
			if(Signal[carid] == 1)
			{
				SignalTick[carid][0] = 0;
				SignalTick[carid][1] = -1;
				Signal[carid] = 0;
			}
			else
			{
				LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				GetVehicleZAngle(carid, SignalAngle[carid]);
				SignalTick[carid][0] = 0;
				SignalTick[carid][1] = -1;
				Signal[carid] = 1;
				SetPlayerChatBubble(playerid, "Включил левый поворотник", CPURPLE, 30.0, 5000);
			}
		}
	}
	else if(PRESSED(KEY_ANALOG_RIGHT)){
		//PRESSED KEY_ANALOG_RIGHT
		switch(listen_surf[playerid][1]){
			case 1:{if(listen_surf[playerid][0]<25){	GoCameraToSurf(playerid,listen_surf[playerid][0]);	listen_surf[playerid][0]++;}}
			case 2:{if(listen_surf[playerid][0]<50){	GoCameraToSurf(playerid,listen_surf[playerid][0]);	listen_surf[playerid][0]++;}}
		}
		if(GetPVarInt(playerid,"takingselfie")){
			new Float:PLAYER_POS[3];
			GetPlayerPos(playerid,PLAYER_POS[0],PLAYER_POS[1],PLAYER_POS[2]);
			SetPVarFloat(playerid,"lX",PLAYER_POS[0]);
			SetPVarFloat(playerid,"lY",PLAYER_POS[1]);
			SetPVarFloat(playerid,"lZ",PLAYER_POS[2]);
			if(GetPVarFloat(playerid,"Degree") >= 360) DeletePVar(playerid,"Degree");
			SetPVarFloat(playerid,"Degree", GetPVarFloat(playerid,"Degree") + Speed);
			PLAYER_POS[0] = GetPVarFloat(playerid,"lX") + Radius * floatcos(GetPVarFloat(playerid,"Degree"), degrees);
			PLAYER_POS[1] = GetPVarFloat(playerid,"lY") + Radius * floatsin(GetPVarFloat(playerid,"Degree"), degrees);
			SetPlayerCameraPos(playerid, PLAYER_POS[0], PLAYER_POS[1], GetPVarFloat(playerid,"lZ") + Height);
			SetPlayerCameraLookAt(playerid, GetPVarFloat(playerid,"lX"), GetPVarFloat(playerid,"lY"), GetPVarFloat(playerid,"lZ")+1);
			SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"Degree") - 90.0);
		}
		new carid = GetPlayerVehicleID(playerid);
		if(carid && GetPlayerVehicleSeat(playerid) == 0)
		{
		    new model = (GetVehicleModel(vehicleid)-400);
			if(LightsObject[carid][0] != -1)
			{
				DestroyDynamicObject(LightsObject[carid][0]);
				LightsObject[carid][0] = -1;
			}
			if(LightsObject[carid][1] != -1)
			{
				DestroyDynamicObject(LightsObject[carid][1]);
				LightsObject[carid][1] = -1;
			}
			if(Signal[carid] == 2)
			{
				SignalTick[carid][0] = 0;
				SignalTick[carid][1] = -1;
				Signal[carid] = 0;
			}
			else
			{
				SetPlayerChatBubble(playerid, "Включил правый поворотник", CPURPLE, 30.0, 5000);
				LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				GetVehicleZAngle(carid, SignalAngle[carid]);
				SignalTick[carid][0] = 0;
				SignalTick[carid][1] = -1;
				Signal[carid] = 2;
			}
		}
	}
	else if (PRESSED(KEY_SECONDARY_ATTACK))
	{
		//PRESSED KEY_SECONDARY_ATTACK
		if(Casino_Flag[playerid][select_casino_table] == -1)
		{
			for(new c = 0; c < MAX_TABLES_DICE; c++)
			{
				if(IsPlayerInDynamicArea(playerid, InfoDice[c][dice_area]))
				{
				    if(InfoDice[c][dice_game_start] == true)
                         return SendClientMessage(playerid,CGRAY,"Ошибка. Данная партия уже играется");
					if ( Casino_Flag[playerid][casino_crup] == 1 )
					{
						if(InfoDice[c][dice_crup]!=INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Ошибка. Тут уже есть крупье");
						InfoDice[c][dice_crup] = playerid;
					}
					else
					{
						new bool:check_played=false;
						for(new i = 0;i<5;i++)
						{
							if(InfoDice[c][dice_gamer][i]==INVALID_PLAYER_ID)
							{
								InfoDice[c][dice_gamer][i]=playerid;
								check_played=true;
								break;
							}
						}
						if(!check_played) return SendClientMessage(playerid,CGRAY,"Ошибка. Максимум игроков: (5)");
					}
					Casino_Flag[playerid][select_casino_table] = c;
					ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
					UpdateTextCasino(c);
					break;
				}
			}
		}
		for(new f=0;f<4;f++){
			GetDynamicObjectPos(fly_ball_object[f],fly_ball_pos_move[f][0],fly_ball_pos_move[f][1],fly_ball_pos_move[f][2]);
			if(!IsPlayerInRangeOfPoint(playerid,3.0,fly_ball_pos_move[f][0],fly_ball_pos_move[f][1],fly_ball_pos_move[f][2]))continue;
			if(fly_ball_status[f] != -1){
				if(fly_ball_status[f]!=playerid) SendClientMessage(playerid,0xF15A5AFF,"Вы не арендуете этот шар");
				else
				{
					if ( SpeedFlyBall[playerid] == PlayerText:-1 ) {
						SpeedFlyBall[playerid] = CreatePlayerTextDraw(playerid, 526.618041, 321.999938, "_");
						PlayerTextDrawLetterSize(playerid, SpeedFlyBall[playerid], 0.249941, 1.255833);
						PlayerTextDrawTextSize(playerid, SpeedFlyBall[playerid], 587.525512, 493.500030);
						PlayerTextDrawColor(playerid, SpeedFlyBall[playerid], -1);
						PlayerTextDrawUseBox(playerid, SpeedFlyBall[playerid], true);
						PlayerTextDrawBoxColor(playerid, SpeedFlyBall[playerid], 8739404);
						PlayerTextDrawSetOutline(playerid, SpeedFlyBall[playerid], 1);
						PlayerTextDrawBackgroundColor(playerid, SpeedFlyBall[playerid], 230);
						PlayerTextDrawFont(playerid, SpeedFlyBall[playerid], 1);
						PlayerTextDrawSetProportional(playerid, SpeedFlyBall[playerid], 1);
					}
					show_select_ball[playerid][1]=1;
					new movement_str[32];
					format(movement_str,32,"~w~_Speed:_%.2f",fly_ball_pos_move[f][3]);
					PlayerTextDrawSetString(playerid,SpeedFlyBall[playerid],movement_str);
					PlayerTextDrawShow(playerid,SpeedFlyBall[playerid]);
					for(new j = 0; j < 9; j++) TextDrawShowForPlayer(playerid, td_flycontrol[j]);
					SelectTextDraw(playerid,0xC7C7C7FF);
				}
			}
			else {
				SetPVarInt(playerid,"f_ball_rent",f+1);
				ShowPlayerDialog(playerid,dRentFlyBall,0,"Аренда", "{FFFFFF}Вы действительно хотите арендовать воздушный шар?", "Да", "Нет");
			}
		}
		for ( new c = 0; c < 3; c++ )
		{
			if(IsPlayerInRangeOfPoint(playerid,2.0,rullet_[c][rullet_pos][0], rullet_[c][rullet_pos][1], rullet_[c][rullet_pos][2]))
			{
				if (Maxis[c] >5) SendClientMessage(playerid,CWHITE,"За этим столом нет свободных мест");
				else if (RuletkaStol[playerid] > 0) Kazvihod(playerid);
				else
				{
					AC_TogglePlayerControllable(playerid, 0);
					InterpolateCameraPos(playerid, rullet_[c][to_inerpolate][0], rullet_[c][to_inerpolate][1], rullet_[c][to_inerpolate][2], rullet_[c][to_inerpolate][3], rullet_[c][to_inerpolate][4], rullet_[c][to_inerpolate][5], 2000);
					InterpolateCameraLookAt(playerid, rullet_[c][to_inerpolate_look_at][0], rullet_[c][to_inerpolate_look_at][1], rullet_[c][to_inerpolate_look_at][2], rullet_[c][to_inerpolate_look_at][3], rullet_[c][to_inerpolate_look_at][4], rullet_[c][to_inerpolate_look_at][5], 2000);
					fishechkax[playerid] =	rullet_[c][fishka_pos][0];
					fishechkay[playerid] =	rullet_[c][fishka_pos][1];
					fishechkaz[playerid] = 	rullet_[c][fishka_pos][2];
					RuletkaStol[playerid] 	=	c + 1;
					Upravakazino[playerid] 	=	true;
					NumberFishka[playerid] 	=	0;
					Maxis[c]++;
					Fishka[playerid] = 	CreatePlayerObject(playerid, 1913, fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid], 0.00,0.00,0.00);
				}
			}////////////////////////////////
		}
		if(GetPVarInt(playerid,"rieltor"))
		{
			AC_TogglePlayerControllable(playerid, 1);
			AC_SetPlayerPos(playerid,GetPVarFloat(playerid,"rieltorX"),GetPVarFloat(playerid,"rieltorY"),GetPVarFloat(playerid,"rieltorZ"));
			SetPlayerInterior(playerid,GetPVarInt(playerid,"rieltorInt"));
			SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"rieltorVw"));
			DeletePVar(playerid,"rieltor");
			DeletePVar(playerid,"rieltorX");
			DeletePVar(playerid,"rieltorY");
			DeletePVar(playerid,"rieltorZ");
			DeletePVar(playerid,"rieltorInt");
			DeletePVar(playerid,"rieltorVw");
		}
		new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
		if(p_info[playerid][pHouse] > 0 && p_info[playerid][pHouse] < TotalHouse)
		{
			new klass=gHouses[p_info[playerid][pHouse]][hKlass]-1;
			if(PlayerToPoint(4.0,playerid,gSleepPos[klass][0],gSleepPos[klass][1],gSleepPos[klass][2]))
			{
				if(!GetPVarInt(playerid,"sleep"))
				{
					AC_SetPlayerPos(playerid,gSleepPos[klass][0],gSleepPos[klass][1],gSleepPos[klass][2]);
					SetPlayerFacingAngle(playerid,gSleepPos[klass][3]);
					FIXES_ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
					SetPVarInt(playerid,"sleep", true);
					MeAction(playerid,"уснул(а)");
				}
				else
				{
					FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
					MeAction(playerid,"проснулся(ась)");
					DeletePVar(playerid,"sleep");
				}
			}
		}
		if(GetPVarInt(playerid,"Animation") == 2)
		{
			ClearAnimations(playerid);
			DeletePVar(playerid,"Animation");
			TextDrawHideForPlayer(playerid, AnimDraw);
		}
		if(GetPVarInt(playerid,"StartRecon")) SelectTextDraw(playerid, 0xFF9933FF);
		new vw=GetPlayerVirtualWorld(playerid);
		if(IsPlayerInDynamicArea(playerid, swat_door_area[0])) MoveDynamicObject(swat_door_id[0],1914.06,-573.51,1351.32,1.0);
		else if(IsPlayerInDynamicArea(playerid, swat_door_area[1])) MoveDynamicObject(swat_door_id[1],1925.78,-583.93,1351.32,1.0);
		if ( IsACop(playerid) && p_info[playerid][pJailTime] == 0)
		{
			if(PlayerToPoint(2.0,playerid,1614.307,-1627.513,1584.106) && vw>=1 && vw<=3)
			{
				if(!IsDynamicObjectMoving(door_prison[vw + 11])) MoveDynamicObject(door_prison[vw+11],1613.9158,-1628.1846,1584.1059,0.5,0.0000,0.0000,-54.0999);
			}
			else if(PlayerToPoint(2.0,playerid,1614.305,-1630.911,1584.106) && vw>=1 && vw<=3)
			{
				if(!IsDynamicObjectMoving(door_prison[vw + 8])) MoveDynamicObject(door_prison[vw+8],1614.6076,-1630.2711,1584.1059,0.5,0.0000,0.0000,-48.6999);
			}
			else if(PlayerToPoint(2.0,playerid,1642.91, -1630.35, 1583.87) && vw>=1 && vw<=3)
			{
				if(!IsDynamicObjectMoving(door_prison[vw + 5])) MoveDynamicObject(door_prison[vw+5],1640.6083,-1630.9580,1584.0389,0.5,0.0000,0.0000,0.0000);
			}
			else if(PlayerToPoint(2.0,playerid,1634.125,-1626.630,1584.039) && vw>=1 && vw<=3)
			{
				if(!IsDynamicObjectMoving(door_prison[vw + 2])) MoveDynamicObject(door_prison[vw+2],1634.0849,-1627.9301,1584.0389,0.5,0.0000,0.0000,89.9990);
			}
			else if(PlayerToPoint(2.0,playerid,1606.138,-1629.150,1584.106) && vw>=1 && vw<=3)
			{
				if(!IsDynamicObjectMoving(door_prison[vw - 1])) MoveDynamicObject(door_prison[vw-1],1606.9470,-1629.7581,1584.1059,0.5,0.0,0.0,18.3990);
			}
		}
		if(pSelectStoreGun[playerid])
		{
			new Float:x, Float:y, Float:z, Float:x1, Float:y1, Float:z1;
			x = GetPVarFloat(playerid,"oldcx");
			y = GetPVarFloat(playerid,"oldcy");
			z = GetPVarFloat(playerid,"oldcz");
			GetPlayerCameraPos(playerid,x1,y1,z1);
			InterpolateCameraPos(playerid,x1,y1,z1,x,y,z,700,CAMERA_MOVE);
			SetTimerEx("SetCameraBehindPlayerDelay",1000,false,"i",playerid);
			pSelectStoreGun[playerid]=false;
			GameTextForPlayer(playerid," ",100,3);
			AC_TogglePlayerControllable(playerid,1);
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0, -2337.6880,-1560.1523,486.7859) || IsPlayerInRangeOfPoint(playerid,1.6,-2540.9517,-649.3965,149.2903)) pc_cmd_vadone(playerid);
		else if(IsPlayerInRangeOfPoint(playerid,1.0, -2331.8169,-1559.0144,486.7859) || IsPlayerInRangeOfPoint(playerid,1.6,-2532.8064,-648.6586,148.9953)) pc_cmd_vadtwo(playerid);
		else  if(IsValidVehicle(vehicleid) && PlayerState == PLAYER_STATE_DRIVER) if(gVehicles[vehicleid-1][skiing]) ShowPlayerDialog(playerid,137,0,"Прокат Лыж","{FFFFFF}Здравствуйте накатались уже?\nГотовы здать всё обратно?","Да","Нет");
		if(listen_surf[playerid][1] != 0)
		{
			listen_surf[playerid][0] = 0;
			listen_surf[playerid][1] = 0;
		}
		if(!(CameraFlag[playerid][0] & (1 << 2)))
		{
			new fix_show_tud = (CameraFlag[playerid][3] != 5) ? (CameraFlag[playerid][3] + 1) : (5);
			for(new i = 0; i <= fix_show_tud; i++)
			{
				PlayerTextDrawHide(playerid, CameraList[playerid][i]);
				PlayerTextDrawDestroy(playerid, CameraList[playerid][i]);
				CameraList[playerid][i] = PlayerText:-1;
			}
			for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
			SetCameraBehindPlayer(playerid);
			AC_TogglePlayerControllable(playerid, true);
			CameraFlag[playerid][0] |= 1 << 0;
			CameraFlag[playerid][0] |= 1 << 1;
			CameraFlag[playerid][0] |= 1 << 2;
			CameraFlag[playerid][0] |= 1 << 3;
			CameraFlag[playerid][0] |= 1 << 4;
			PrintCameraFlag(playerid, 0, "hide");
			return_player_pos(playerid);
		}
		if( step_cppd[playerid] != -1 )
		{
			if((CameraFlag[playerid][0] & (1 << 0)) == 0) ShowPlayerDialog(playerid,d_sucess_camera_3,DIALOG_STYLE_MSGBOX,"Управление камерой","{ffffff}Вы действительно хотите сохранить точку?","Да","Нет");
		}
	}
	else if (PRESSED(KEY_WALK))
	{
 		if(IsPlayerInRangeOfPoint(playerid, 2.5, 1471.5071,-1711.6891,14.0467 ))
		{
			return ShowPlayerDialog(playerid,1449,2,"Задать вопрос","- Что ты тут делаешь?\n- Сколько необходимо подарков для обмена\n- Почему подарки раскиданы по городам?\n {852A2A}Обменять подарки","Закрыть","");
		}
		//PRESSED KEY_WALK
		for ( new i = 0 ; i < 24; i++ )
		{
			if ( !PlayerToPoint(1.2, playerid, gCarSells[i][SellsPos][0], gCarSells[i][SellsPos][1], gCarSells[i][SellsPos][2]) ) continue ;
			if ( strcmp(gCarSells[i][SellsOwner], "The State") )  break;
			ShowInfoInputSells(playerid);
			SetPVarInt(playerid, "g_car_sells_id", i + 1 ) ;
		}
		if(IsPlayerInRangeOfPoint(playerid,2,2130.2817,1626.2802,993.6882))
		{
			AC_SetPlayerPos(playerid,1521.1288,-1020.6489,23.8692);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 280.4242);
		}
		if(PlayerToPoint(2.0,playerid,2312.31, -2008.25, -34.16))
		{
			if(p_info[playerid][pLevel] < 3) SCM(playerid,COLOR_GREY,"Голосование с 3 уровня");
			else if(GetPVarInt(playerid,"pGolos")) SCM(playerid,COLOR_GREY,"Вы уже голосовали");
			else if(GetPVarInt(playerid,"vote")) SCM(playerid,COLOR_GREY,"У вас уже есть бюллетень");
			else
			{
				FIXES_ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
				SetPlayerAttachedObject(playerid, 8, 1277, 5, 0.25, 0, 0, 0, 0, 0);
				SendClientMessage(playerid, -1, "Поместите избирательную бюллетень в одну из урн");
				SetPVarInt(playerid,"vote", true);
			}
		}
		if(p_info[playerid][pShield] > 0){
			if(!UsingShield[playerid]){
				ResetShield[playerid] = 20;
				UsingShield[playerid] = true;
				SetPlayerAttachedObjectEx(playerid, 6, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
				ShowSHBarForPlayer(playerid, p_info[playerid][pShield]);
				FIXES_ApplyAnimation(playerid, "PED", "WEAPON_CROUCH", 4.1, 0, 1, 1, 1, 0, 0);
			}
			else{
				SetPlayerAttachedObjectEx(playerid, 6, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
				HideSHBarForPlayer(playerid);
				UsingShield[playerid] = false;
				ClearAnims(playerid);
			}
		}
		if(PointToPoint(p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ],-1119.1193,-1218.9299,129.2188)<1.2 && PlayerState==PLAYER_STATE_ONFOOT){
			if(GardenSysTime>unix){
				format(stringer,144,"В данный момент поливать нельзя, в связи с маленьким напором воды. Таймер до увеличения напора: {AFAFAF}[%s]",date("%ii:%ss",GardenSysTime-unix));
				SendErr(playerid,stringer);
			}
			else if(GardenSys==-1)
			{
				GardenSys = SetTimer("StopPoliv",60000,0);
				for(new j;j<51;j++) 	GardenTreesIDs[j][1] = CreateDynamicObject(18739,GardenWaterTrees[j][0],GardenWaterTrees[j][1],GardenWaterTrees[j][2],GardenWaterTrees[j][3],GardenWaterTrees[j][4],GardenWaterTrees[j][5]);
			}
		}
		else if ( PlayerInterior == 1 && GetPVarInt ( playerid, "p_sm_used" ) == 0)
		{
			for ( new sm = 0; sm < sm_count; sm ++ )
			{
				if ( sm_used [ sm ] != false ) continue ;
				if ( ! IsPlayerInRangeOfPoint ( playerid, 1.50, sm_coord [ sm ] [ 0 ], sm_coord [ sm ] [ 1 ], sm_coord [ sm ] [ 2 ] ) ) continue ;
				SetPVarInt ( playerid, "p_sm_used", sm + 1 ) ;
				TogglePlayerControllable ( playerid, false ) ;
				sm_used [ sm ] = true ;
				sm_ptd [ playerid ]  = CreatePlayerTextDraw ( playerid, 266.000000, 272.000000, "BET:  0$" ) ;
				PlayerTextDrawBackgroundColor ( playerid, sm_ptd [ playerid ] , 255 ) ;
				PlayerTextDrawFont ( playerid, sm_ptd [ playerid ] , 2 ) ;
				PlayerTextDrawLetterSize ( playerid, sm_ptd [ playerid ] , 0.310000, 2.700000 ) ;
				PlayerTextDrawColor ( playerid, sm_ptd [ playerid ] , -2711041 ) ;
				PlayerTextDrawSetOutline ( playerid, sm_ptd [ playerid ] , 1 ) ;
				PlayerTextDrawSetProportional ( playerid, sm_ptd [ playerid ] , 1 ) ;
				PlayerTextDrawSetSelectable ( playerid, sm_ptd [ playerid ] , 0 ) ;
				for ( new i = 0 ; i < 4 ; i ++ ) TextDrawShowForPlayer ( playerid, sm_td [ i ] ) ;
				PlayerTextDrawShow ( playerid, sm_ptd [ playerid ] ) ;
				SelectTextDraw ( playerid, 0xFFDA82FF ) ;
				SetPlayerCameraPos(playerid, sm_coord [ sm ] [ 3 ], sm_coord [ sm ] [ 4 ], sm_coord [ sm ] [ 5 ] );
				SetPlayerCameraLookAt ( playerid, sm_coord [ sm ] [ 6 ], sm_coord [ sm ] [ 7 ], sm_coord [ sm ] [ 8 ] ) ;
				new td_string [ 14 ] ;
				format ( td_string, 14, "bet:  %d$", GetPVarInt(playerid,"sm_bet") ) ;
				PlayerTextDrawSetString ( playerid, sm_ptd [ playerid ], td_string ) ;
				break ;
			}
		}
		if(PlayerToPoint(1.5,playerid,2295.6125,-1991.9835,-34.1641))
		{
			if(strcmp(date_password[playerid], "None") && QuestStep[0][playerid] != 2)  SendClientMessage(playerid,-1,"У вас уже есть паспорт.");
			else
			{
				AC_SetPlayerPos(playerid, 2295.6189,-1991.9874,-34.1641);
				SetPlayerFacingAngle(playerid, 186.6634);
				FIXES_ApplyAnimation(playerid, "PED", "SEAT_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
				SetCameraBehindPlayer(playerid);
				ShowPlayerDialog(playerid,dRegistrationPass,1,"{FFFFFF}Заполнение бланка паспорта", "{FFFFFF}Введите дату вашего рождения, через запятую. Пример:\n{FF6347}13.09.1993 {AFAFAF}(Год должен быть от 1900 до 1993)", "Далее", "Отмена");
			}
		}
		for(new i = 0; i < sizeof(sdbd); i++)
		{
			if(PlayerToPoint(2.5,playerid,sdbd[i][sdbd_pos][0],sdbd[i][sdbd_pos][1],sdbd[i][sdbd_pos][2]))
			{
				sdbd_step[playerid] = 1;
				SetPVarInt(playerid,"talk_bot", i + 1);
				break;
			}
		}
		new idx = GetPVarInt(playerid, "BUSINESS_ID");
		if(PlayerToPoint(1.5,playerid,Business[idx][PickupEnterX],Business[idx][PickupEnterY],Business[idx][PickupEnterZ]))
		{
			if(!strcmp(Business[idx][Owner], "The State",true))
			{
				format(stringer, 200, "{"#cWHITE"}Внимание бизнес на продаже!\n\nЦена бизнеса: {"#cGREEN"}$%i",Business[idx][BuyPrice]);
				ShowPlayerDialog(playerid, 9828, DIALOG_STYLE_MSGBOX, "Бизнес", stringer, "Войти", "Купить");
			}
			else
			{
				new bizid = idx;
				if(Business[bizid][Lock]) SendClientMessage(playerid,CRED,"Бизнес закрыт");
				else if(Business[bizid][EnterPrice] >= 20 && !player_enter_price[playerid][bizid] )
				{
					format(stringer, 103, "{fcfcfc}Цена за вход в бизнес: {33AA33}%d$\n{fcfcfc}Вы действительно хотите зайти в бизнес?",Business[bizid][EnterPrice]);
					ShowPlayerDialog(playerid, 9829, DIALOG_STYLE_MSGBOX, "Бизнес", stringer, "Да", "Нет");
				}
				else
				{
					Business[bizid][bVisitors]++;
					SetPlayerPosBusiness(playerid, bizid);
				}
			}
		}
	}
	else if (RELEASED(KEY_FIRE))
	{
		//RELEASED KEY_FIRE
		new slot = GetPVarInt(playerid, "id_derevo");
		if(PlayerState==PLAYER_STATE_ONFOOT && PlayerToPoint(5.0,playerid,Derevo[slot][0],Derevo[slot][1],Derevo[slot][2]) && IsPlayerInCheckpoint(playerid) && GetPlayerWeapon(playerid) == 9) if(GetPVarInt(playerid,"CSAW_GO")) DeletePVar(playerid,"CSAW_GO");
		if(PlayerState==PLAYER_STATE_DRIVER) ToggleLamp(vehicleid);
		new s = GetPlayerSkin(playerid);
		if(s == 277 || s == 278 || s == 279){
			if(GetPVarInt(playerid,"FireTimerr")){
				KillTimer(GetPVarInt(playerid,"FireTimerr"));
				DeletePVar(playerid,"FireTimerr");
			}
			SetPVarInt(playerid, "FireSystem", 0);
		}
	}
	else if (RELEASED(KEY_HANDBRAKE))
	{
		//RELEASED KEY_HANDBRAKE
		if(PlayerState == PLAYER_STATE_ONFOOT){
			if(Targetplayer[playerid] > -1){
				Targetplayer[playerid] = -1 ;
				for(new gu = 0; gu < 8; gu++) PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][gu]);
			}
		}
	}
	if(GetPVarInt(playerid,"gun_key") && GetPVarInt(playerid,"pgunlocat")>0 && oldkeys == 0)
	{
		new get_key = GetPVarInt(playerid,"gun_key");
		new check_key = -1;
		if(PRESSED(KEY_YES)) check_key = KEY_YES;
		if(PRESSED(KEY_NO)) check_key = KEY_NO;
		if(PRESSED(KEY_CTRL_BACK)) check_key = KEY_CTRL_BACK;
		new locat = GetPVarInt(playerid,"pgunlocat") - 1;
		if(IsPlayerInDynamicArea(playerid,gWorkCP[locat]))
		{
			if((check_key != get_key || check_key == -1) && pgunobject[playerid] != INVALID_OBJECT)
			{
				AC_TogglePlayerControllable(playerid, 1);
				//////FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
				DestroyDynamicObject(pgunobject[playerid]);
				pgunobject[playerid]=INVALID_OBJECT;
				DeletePVar(playerid,"pgunmodel");
				DeletePVar(playerid,"pgunlocat");
				gGunWorkTableStat[locat] = false;
				RemovePlayerAttachedObject(playerid,0);
				RemovePlayerAttachedObject(playerid,1);
				GameTextForPlayer(playerid, "~r~~h~FAILED", 6000, 4);
				ClearAnimations(playerid);
				FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				DeletePVar(playerid, "gun_key");
				DeletePVar(playerid,"Count_Gun");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			}
			else
			{
				new conclusion;
				new last_key = GetPVarInt(playerid,"gun_key"),new_key;
				for(;;)
				{
						conclusion = random(3);
						new_key = (conclusion==0) ? (KEY_YES) : (conclusion==1) ? (KEY_NO) : (KEY_CTRL_BACK);
						if(last_key != new_key) break;
				}
				GameTextForPlayer(playerid, (conclusion==0) ? ("~n~~n~~n~~n~~w~PRESS ~g~~h~Y") : (conclusion==1) ? ("~n~~n~~n~~n~~w~PRESS ~g~~h~N") : ("~n~~n~~n~~n~~w~PRESS ~b~~h~H"), 6000, 4);
				SetPVarInt(playerid,"gun_key",new_key);
				FIXES_ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.0,1,1,1,0,2000,0);
				SetPVarInt(playerid,"Count_Gun", GetPVarInt(playerid,"Count_Gun") + 1);
				if(GetPVarInt(playerid,"Count_Gun")>=8 && pgunobject[playerid] != INVALID_OBJECT)
				{
					GameTextForPlayer(playerid, "~w~SUCCESSFULLY", 2000, 4);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					DestroyDynamicObject(pgunobject[playerid]);
					pgunobject[playerid]=INVALID_OBJECT;
					DeletePVar(playerid,"pgunmodel");
					DeletePVar(playerid,"pgunlocat");
					gGunWorkTableStat[locat] = false;
					RemovePlayerAttachedObject(playerid,0);
					RemovePlayerAttachedObject(playerid,1);
					SetPVarInt(playerid,"gunamount",true);
					ClearAnimations(playerid);
					SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
					DeletePVar(playerid, "gun_key");
					DeletePVar(playerid,"Count_Gun");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
					AC_TogglePlayerControllable(playerid, 1);
					if(QuestStep[1][playerid]==7)
					{
						quest_amount_farm[playerid]++;
						if(quest_amount_farm[playerid]>=MAX_QUEST_FARM)
						{
							SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
							QuestStep[1][playerid] = 8;
							UpdatePlayerQuestStep(playerid);
						}
						UpdatePlayerQuestAmount(playerid);
					}
				}
			}
		}
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) if(newkeys != 1024) FreezePlayerForTime(playerid, 5000);
	if((((newkeys & KEY_SPRINT) && (newkeys & KEY_JUMP)) || (newkeys == KEY_FIRE) || (newkeys & KEY_SECONDARY_ATTACK  || (newkeys & KEY_SUBMISSION  && newkeys & KEY_SECONDARY_ATTACK ))) && GetPVarInt(playerid,"usemats"))
	{
		RemovePlayerAttachedObject(playerid, 1);
		SendErr(playerid, "Вы уронили Ящик");
		DeletePVar(playerid,"usemats");
		DeletePVar(playerid, "TempMats");
	}
	if(newkeys & KEY_SECONDARY_ATTACK  || (newkeys & KEY_SUBMISSION  && newkeys & KEY_SECONDARY_ATTACK ))
	{
		if(GetPVarInt(playerid,"udar") >= 500)
		{
			SCM(playerid, CGRAD1, "Урок закончен, чтобы продолжить начните новый урок у тренера");
			FIXES_ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
			SetPlayerChatBubble(playerid,"Устал",0xE75480FF,30.0,10000);
		}
	}
	// LOWRIDES
	if ( (vehicleid == cLowrideCar [ playerid ]) && SelectLowride[playerid][0] != -1 && SelectLowride[playerid][2] == 0 && (TimeLowRide <= 90 && TimeLowRide > 0))
	{
		if ( PRESSED(KEY_NUM2) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_DOWN ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM8) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_UP ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM4) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_LEFT ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM6) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_RIGHT ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM2 | KEY_NUM4) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_DOWNL ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM2 | KEY_NUM6) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_DOWNR ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM8 | KEY_NUM4) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_UPL ) SuccessLowride(playerid);
		else if ( PRESSED(KEY_NUM8 | KEY_NUM6) && lowrideArrows [ SelectLowride[playerid][1] ] [ lowrideAdataType ] == LOWRIDE_TYPE_UPR ) SuccessLowride(playerid);
		else SelectLowride[playerid][4]--;
	}
	if(!(CameraFlag[playerid][0] & (1 << 1)))
	{
		if((newkeys & KEY_YES || newkeys & KEY_NO) && CameraFlag[playerid][1] == -1 && CameraFlag[playerid][2] != 5) CameraFlag[playerid][1] = SetTimerEx("ZoomCameraPlayer", 200, 1, "iii", playerid, newkeys, CameraFlag[playerid][2]);
	}
	else if((oldkeys & KEY_YES || oldkeys & KEY_NO) && CameraFlag[playerid][1] != -1)
	{
		KillTimer(CameraFlag[playerid][1]);
		CameraFlag[playerid][1] = -1;
		PrintCameraFlag(playerid, 1, "old");
	}
	if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
	|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
	|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
	&& PlayerState == PLAYER_STATE_ONFOOT)
	{
		if(p_info[playerid][pSetWalk] != 0 && !(GetPVarInt(playerid,"anti_sbiv_time") > unix) && !(HOLDING(KEY_HANDBRAKE))) SetPVarInt(playerid,"playerWalkTimer",_:SetTimerEx("AnimationWalk",200,0,"d",playerid));
	}
	if(newkeys & 128 && oldkeys & 128 && newkeys & KEY_SECONDARY_ATTACK){
		if(GetPVarInt(playerid, "StartTraining") == 1 && GetPVarInt(playerid, "ChooseStyle") > 0){
			if(IsPlayerInRangeOfPoint(playerid, 1, 767.1263, -3.2047, 1000.7186) || IsPlayerInRangeOfPoint(playerid, 1, 769.4302, -3.2047, 1000.7236) || IsPlayerInRangeOfPoint(playerid, 1, 771.1208, 15.6786, 1000.6957) || IsPlayerInRangeOfPoint(playerid, 1, 768.7616, 15.6708, 1000.6974)){
				if(p_info[playerid][P_Style][GetPVarInt(playerid, "ChooseStyle")-1] < 1000){
					if(GetPVarInt(playerid, "ClickStyle") >= 10){
						if(GetPVarInt(playerid, "ClickWeight") == 50) SetPVarInt(playerid, "ClickWeight", 0);
						else GivePVarInt(playerid, "ClickWeight", 1);
						p_info[playerid][P_Style][GetPVarInt(playerid, "ChooseStyle")-1]++;
						if(GetPVarInt(playerid, "ChooseStyle") == 1) GameTextForPlayer(playerid, "~w~Boxing Style ~g~+1", 500, 1);
						if(GetPVarInt(playerid, "ChooseStyle") == 2) GameTextForPlayer(playerid, "~w~Kung Fu Style ~g~+1", 500, 1);
						SetPVarInt(playerid, "ClickStyle", 0);
					}
					else GivePVarInt(playerid, "ClickStyle", 1);
				}
			}
		}
		else DP_SetPlayerFightingStyle(playerid);
	}
	if(GetPVarInt(playerid, "Procedure") >= 1)
	{
		if((playerFlags[playerid] & YN))
		{
			if(GetPlayerProgressBarValue(playerid, universalbar[playerid]) < 590)
			{
				switch(KeyYN{playerid})
				{
					case 0:
					{
						if(newkeys & KEY_NO)
						{

							KeyYN{playerid} = RandomEx(0, 2);
							switch(KeyYN{playerid})
							{
								case 0: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~N");
								case 1: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~Y");
							}
							PlayerTextDrawHide(playerid, YNText[playerid][1]);
							PlayerTextDrawShow(playerid, YNText[playerid][1]);
							SetPlayerProgressBarValue(playerid, universalbar[playerid], GetPlayerProgressBarValue(playerid, universalbar[playerid])+10);
							if(!IsPlayerInAnyVehicle(playerid)) FIXES_ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,0);
						}
						else if(newkeys & KEY_YES)
						{
							SetPVarInt(playerid, "TryingVzlom", GetPVarInt(playerid, "TryingVzlom") - 1);
							if(GetPVarInt(playerid, "TryingVzlom") <= 0)
							{
								if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
								SetPVarInt(playerid, "Procedure", 0);
								SetPVarInt(playerid, "CarJack", 0);
								CreateBarForPlayer[playerid] = 0;
								playerFlags[playerid] ^= YN;
								for(new i; i < 2; i++) PlayerTextDrawHide(playerid, YNText[playerid][i]);
								HidePlayerProgressBar(playerid, universalbar[playerid]);
								DestroyPlayerProgressBar(playerid, universalbar[playerid]);
								SendErr(playerid, "Вы сломали отмычку");
								p_info[playerid][pOtmbI4ka]--;
								UpdatePlayerData(playerid, "pOtmbI4ka", p_info[playerid][pOtmbI4ka]);
							}
							else
							{
								KeyYN{playerid} = RandomEx(0, 2);
								switch(KeyYN{playerid})
								{
									case 0: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~N");
									case 1: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~Y");
								}
								PlayerTextDrawHide(playerid, YNText[playerid][1]);
								PlayerTextDrawShow(playerid, YNText[playerid][1]);
								SetPlayerProgressBarValue(playerid, universalbar[playerid], GetPlayerProgressBarValue(playerid, universalbar[playerid])-15);
							}
						}
					}
					case 1:
					{
						if(newkeys & KEY_YES)
						{
							KeyYN{playerid} = RandomEx(0, 2);
							switch(KeyYN{playerid})
							{
								case 0: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~N");
								case 1: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~Y");
							}
							PlayerTextDrawHide(playerid, YNText[playerid][1]);
							PlayerTextDrawShow(playerid, YNText[playerid][1]);
							SetPlayerProgressBarValue(playerid, universalbar[playerid], GetPlayerProgressBarValue(playerid, universalbar[playerid])+10);
							if(!IsPlayerInAnyVehicle(playerid)) FIXES_ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,0);
						}
						else if(newkeys & KEY_NO)
						{
							SetPVarInt(playerid, "TryingVzlom", GetPVarInt(playerid, "TryingVzlom") - 1);
							if(GetPVarInt(playerid, "TryingVzlom") <= 0)
							{
								if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
								SetPVarInt(playerid, "Procedure", 0);
								SetPVarInt(playerid, "CarJack", 0);
								CreateBarForPlayer[playerid] = 0;
								playerFlags[playerid] ^= YN;
								for(new i; i < 2; i++) PlayerTextDrawHide(playerid, YNText[playerid][i]);
								HidePlayerProgressBar(playerid, universalbar[playerid]);
								DestroyPlayerProgressBar(playerid, universalbar[playerid]);
								SendErr(playerid, "Вы сломали отмычку");
								p_info[playerid][pOtmbI4ka]--;
								UpdatePlayerData(playerid, "pOtmbI4ka", p_info[playerid][pOtmbI4ka]);
							}
							else
							{
								KeyYN{playerid} = RandomEx(0, 2);
								switch(KeyYN{playerid})
								{
									case 0: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~N");
									case 1: PlayerTextDrawSetString(playerid, YNText[playerid][1], "PRESS ~r~Y");
								}
								PlayerTextDrawHide(playerid, YNText[playerid][1]);
								PlayerTextDrawShow(playerid, YNText[playerid][1]);
								SetPlayerProgressBarValue(playerid, universalbar[playerid], GetPlayerProgressBarValue(playerid, universalbar[playerid])-15);
							}
						}
					}
				}
			}
			else
			{
				if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
				switch(GetPVarInt(playerid, "Procedure"))
				{
					case 1:
					{
						GameTextForPlayer(playerid, "~g~UNLOCK", 3000, 3);
						for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
						{
							if(PlayerToPoint(4.0, playerid, gVehicles[i-1][veX],gVehicles[i-1][veY],gVehicles[i-1][veZ]))
							{
								new model = GetVehicleModel(i);
								if(!model) break;
								ToggleLock(i, (gVehicles[i-1][vLock]) ? (false) : (true));
								UpdateTDLock(playerid, i);
							}
						}
						SetPVarInt(playerid, "NachaloCarJack", 1);
						MeAction(playerid,"открыл(-а) автомобиль");
						SendSucc(playerid, "Вы успешно взломали замок");
						if(p_info[playerid][pWanted] < 6)
						{
							p_info[playerid][pWanted] += 1;
							UpdatePlayerData(playerid, "pWanted", p_info[playerid][pWanted]);
							format(stringer, 128, "[R] Диспетчер: В данный момент совершается кража автомобиля");
							SendRadioMessage(1, 0x93FF4CFF, stringer);
							SendRadioMessage(2, 0x93FF4CFF, stringer);
						}
					}
					case 2:
					{
						vehicleid = GetPVarInt(playerid, "CarJack");
						new lights, alarm, doors, bonnet, boot, objective;
						MeAction(playerid,"завел(-а) двигатель");
						SetVehicleParamsEx(vehicleid,1,lights,alarm,doors,bonnet,boot,objective);
						SendSucc(playerid, "Вы успешно замок зажигания двигателя");
						SendSucc(playerid, "Теперь Вы можете отвезти автмобиль на утилизацию");
						DeletePVar(playerid, "NachaloCarJack");
						SetPVarInt(playerid, "NormCar", 1);
					}
				}
				SetPVarInt(playerid, "Procedure", 0);
				SetPVarInt(playerid, "CarJack", 0);
				CreateBarForPlayer[playerid] = 0;

				KeyYN{playerid} = 0;
				playerFlags[playerid] ^= YN;
				for(new i; i < 2; i++) PlayerTextDrawHide(playerid, YNText[playerid][i]);
				HidePlayerProgressBar(playerid, universalbar[playerid]);
				DestroyPlayerProgressBar(playerid, universalbar[playerid]);
			}
		}
	}
	time_newkeys = GetTickCount() - tickcount1;
	if(time_newkeys > time_newkeys_max) time_newkeys_max = time_newkeys;
	return 1;
}



public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(!IsValidVehicle(vehicleid)) return 1;
	if ( vehicleid != 0 )
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,(gVehicles[vehicleid-1][vLock]) ? (false) : (true));
		UpdateVehiclePos(vehicleid, 0);
		GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][veX], gVehicles[vehicleid - 1][veY], gVehicles[vehicleid - 1][veZ]);
		GetVehicleZAngle(vehicleid, gVehicles[vehicleid - 1][veA]);
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if (source)
	{
		CheatKick(playerid,12);
	}
	else if (source == CLICK_SOURCE_SCOREBOARD)
	{
		if(IsPlayerConnected(clickedplayerid))
		{
			format(stringer,144,"{FFFFFF}Введите номер телефона для контакта %s",NamePlayer[clickedplayerid]);
			ShowPlayerDialog(playerid, dContactAdd, DIALOG_STYLE_INPUT, "{"#cORANGE"}Добавление нового контакта", stringer, "Добавить", "Отмена");
			SetPVarInt(playerid,"contact_id",clickedplayerid);
		}
	}
	return 1;
}



public OnPlayerExitedMenu(playerid)
{
	if (GetPlayerMenu(playerid)==Menu:255)  CheatKick(playerid,13);
	return 1;
}

stock VodPrava(carid)
{
	switch (GetVehicleModel(carid))
	{
		case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return 1;
		case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return 1;
		case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return 1;
	}
	return 0;
}

stock Megaphone(carid)
{
	switch (GetVehicleModel(carid))
	{
		case 425,427,433,451,470,490,497,498,500,522,523,528,548,554,563,579,596,597,598,599,601: return 1;
	}
	return 0;
}




LoadVehicles()//Машины сервера
{
	//
	buscar[0]=AddStaticVehicleExOP(431,1243.5302,-1431.0288,13.7872,0.0111,16,16,-1); //
	AddStaticVehicleExOP(431,1248.1793,-1431.0284,13.7923,359.6862,16,16,-1); //
	AddStaticVehicleExOP(431,1252.7859,-1431.0703,13.7879,0.2340,16,16,-1); //
	buscar[1]=AddStaticVehicleExOP(431,1257.2361,-1431.0507,13.8016,359.8047,16,16,-1); //
	//
	for(new i;i<250;i++) DynamicPodarokInfo[i][porCreat] = -1;
    for(new i;i<110;i++)
	{
			PodarokInfo[i][porCreat] = CreateDynamicPickup(19056,1,PodarokInfo[i][porPos][0], PodarokInfo[i][porPos][1], PodarokInfo[i][porPos][2],-1);
	}
	for(new v = 0; v < MAX_RENT_VEHICLES; v++)
	{
	    V_RENT[v][V_RENT_VEHICLE] = CreateVehicleOP(V_RENT[v][V_RENT_MODEL],V_RENT[v][V_RENT_POS_X],V_RENT[v][V_RENT_POS_Y],V_RENT[v][V_RENT_POS_Z],V_RENT[v][V_RENT_POS_A],V_RENT[v][V_RENT_POS_COLOR_1],V_RENT[v][V_RENT_POS_COLOR_2]);
		V_RENT[v][V_RENT_TEXT] = CreateDynamic3DTextLabel("",0xFF9900AA, 0.0, 0.0, 0.0, 4.0, INVALID_PLAYER_ID, V_RENT[v][V_RENT_VEHICLE]);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,V_RENT[v][V_RENT_TEXT],E_STREAMER_ATTACH_OFFSET_Z, 1.5);
		UpdateTextRent(v);
	}
	return 1;
}
public OnVehicleMod(playerid,vehicleid,componentid)
{
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = islegalcarmod(vehicleide, componentid);
	if (!modok) {
		RemoveVehicleComponent(vehicleid,componentid);
		return 0;
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(PlayerToPoint(30.0,playerid,1024.8700,-1023.9111,31.8337)) return 0;
	return 1;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,PX,PY,PZ);
	GetVehiclePos(vehicleid, X,Y,Z);
	new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	if(Distance <= radi*radi) return 1;
	return 0;
}

stock IsPlayerInBandOnline(bandid)
{
	new count_band_online = 1;
	foreach(i)
	{
		if(IsPlayerAuthorized(i) == PLAYER_OFFLINE) continue;
		if(p_info[i][tMember] == bandid)
		{
			count_band_online++;
			if(count_band_online >= 2) return true;
		}
	}
	return false;
}

new Text:PaintText[3];

LoadStaticDraws()
{
	InfoDraw[0] = TextDrawCreate(136.934112, 213.250015, "_");
	TextDrawLetterSize(InfoDraw[0], 0.000000, 7.586267);
	TextDrawTextSize(InfoDraw[0], 33.607612, 0.000000);
	TextDrawAlignment(InfoDraw[0], 1);
	TextDrawUseBox(InfoDraw[0], 1);
	TextDrawBoxColor(InfoDraw[0], 144);
	TextDrawBackgroundColor(InfoDraw[0], 255);
	TextDrawFont(InfoDraw[0], 1);

	InfoDraw[1] = TextDrawCreate(43.103973, 215.833404, "~w~PRESS~n~~r~~k~~PED_JUMPING~~n~~w~FOR~n~~g~ACTIVATE");
	TextDrawLetterSize(InfoDraw[1], 0.449999, 1.600000);
	TextDrawAlignment(InfoDraw[1], 1);
	TextDrawColor(InfoDraw[1], -1);
	TextDrawSetShadow(InfoDraw[1], 1);
	TextDrawSetOutline(InfoDraw[1], 0);
	TextDrawBackgroundColor(InfoDraw[1], 255);
	TextDrawFont(InfoDraw[1], 2);

	gSkinShopDraw[0] = TextDrawCreate(88.000000, 242.000000, "~>~");
	TextDrawBackgroundColor(gSkinShopDraw[0], 255);
	TextDrawFont(gSkinShopDraw[0], 1);
	TextDrawLetterSize(gSkinShopDraw[0], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[0], -1);
	TextDrawSetOutline(gSkinShopDraw[0], 0);
	TextDrawSetProportional(gSkinShopDraw[0], 1);
	TextDrawSetShadow(gSkinShopDraw[0], 1);
	TextDrawTextSize(gSkinShopDraw[0], 107.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[0], 1);

	gSkinShopDraw[1] = TextDrawCreate(18.000000, 242.000000, "~<~");
	TextDrawBackgroundColor(gSkinShopDraw[1], 255);
	TextDrawFont(gSkinShopDraw[1], 1);
	TextDrawLetterSize(gSkinShopDraw[1], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[1], -1);
	TextDrawSetOutline(gSkinShopDraw[1], 0);
	TextDrawSetProportional(gSkinShopDraw[1], 1);
	TextDrawSetShadow(gSkinShopDraw[1], 1);
	TextDrawTextSize(gSkinShopDraw[1], 36.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[1], 1);

	gSkinShopDraw[2] = TextDrawCreate(115.000000, 221.000000, "_");
	TextDrawBackgroundColor(gSkinShopDraw[2], 0x00000066);
	TextDrawBoxColor(gSkinShopDraw[2], 0x00000066);
	TextDrawFont(gSkinShopDraw[2], 1);
	TextDrawLetterSize(gSkinShopDraw[2], 0.000000, 7.199996);
	TextDrawUseBox(gSkinShopDraw[2], 1);
	TextDrawTextSize(gSkinShopDraw[2], 11.000000, 0.000000);
	TextDrawSetSelectable(gSkinShopDraw[2], 0);

	gSkinShopDraw[3] = TextDrawCreate(45.000000, 245.000000, "BUY");
	TextDrawBackgroundColor(gSkinShopDraw[3], 255);
	TextDrawFont(gSkinShopDraw[3], 3);
	TextDrawLetterSize(gSkinShopDraw[3], 0.629999, 1.500000);
	TextDrawColor(gSkinShopDraw[3], -1);
	TextDrawSetOutline(gSkinShopDraw[3], 0);
	TextDrawSetProportional(gSkinShopDraw[3], 1);
	TextDrawSetShadow(gSkinShopDraw[3], 1);
	TextDrawTextSize(gSkinShopDraw[3], 83.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[3], 1);

	gSkinShopDraw[4] = TextDrawCreate(30.000000, 268.000000, "CANCEL");
	TextDrawBackgroundColor(gSkinShopDraw[4], 255);
	TextDrawFont(gSkinShopDraw[4], 3);
	TextDrawLetterSize(gSkinShopDraw[4], 0.629998, 1.500000);
	TextDrawColor(gSkinShopDraw[4], -1);
	TextDrawSetOutline(gSkinShopDraw[4], 0);
	TextDrawSetProportional(gSkinShopDraw[4], 1);
	TextDrawSetShadow(gSkinShopDraw[4], 1);
	TextDrawTextSize(gSkinShopDraw[4], 101.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[4], 1);

	PaintText[0] = TextDrawCreate(94.375000, 279.416839, "TEAM BLUE: ~w~0");
	TextDrawLetterSize(PaintText[0], 0.310000, 1.197499);
	TextDrawAlignment(PaintText[0], 2);
	TextDrawColor(PaintText[0], CBLUE);
	TextDrawSetShadow(PaintText[0], 0);
	TextDrawSetOutline(PaintText[0], 1);
	TextDrawBackgroundColor(PaintText[0], 51);
	TextDrawFont(PaintText[0], 2);
	TextDrawSetProportional(PaintText[0], 1);

	PaintText[1] = TextDrawCreate(93.500000, 299.667266, "TEAM RED: ~w~0");
	TextDrawLetterSize(PaintText[1], 0.310000, 1.197499);
	TextDrawAlignment(PaintText[1], 2);
	TextDrawColor(PaintText[1], CRED);
	TextDrawSetShadow(PaintText[1], 0);
	TextDrawSetOutline(PaintText[1], 1);
	TextDrawBackgroundColor(PaintText[1], 51);
	TextDrawFont(PaintText[1], 2);
	TextDrawSetProportional(PaintText[1], 1);

	PaintText[2] = TextDrawCreate(92.500000, 258.999969, "TIME: ~w~10:00");
	TextDrawLetterSize(PaintText[2], 0.307499, 0.882499);
	TextDrawAlignment(PaintText[2], 2);
	TextDrawColor(PaintText[2], -1610631169);
	TextDrawSetShadow(PaintText[2], 0);
	TextDrawSetOutline(PaintText[2], 1);
	TextDrawBackgroundColor(PaintText[2], 51);
	TextDrawFont(PaintText[2], 2);
	TextDrawSetProportional(PaintText[2], 1);

	ReconText[0] = TextDrawCreate(582.00000, 142.00000, "usebox");
	TextDrawLetterSize(ReconText[0], 0.000000, 16.655555);
	TextDrawTextSize(ReconText[0], 520.00000, 0.000000);
	TextDrawBoxColor(ReconText[0], -951309398);
	TextDrawAlignment(ReconText[0], 1);
	TextDrawColor(ReconText[0], 0);
	TextDrawUseBox(ReconText[0], true);
	TextDrawSetShadow(ReconText[0], 0);
	TextDrawSetOutline(ReconText[0], 0);
	TextDrawBackgroundColor(ReconText[0], 0x00000000);
	TextDrawFont(ReconText[0], 0);//----<!
	ReconText[1] = TextDrawCreate(49.00000, 142.00000, "~g~::Level:~n~~g~::Warns:~n~~r~::Armour:~n~~r~::Health:~n~~b~::CarHP:~n~~b~::Speed:~n~~y~::Ping:~n~~y~::Ammo:~n~~p~::Shot:~n~~p~::TimeShot:~n~~g~::AFKTime:~n~~b~::P. Loss:");
	TextDrawLetterSize(ReconText[1],0.199999, 0.899999);
	TextDrawAlignment(ReconText[1], 1);
	TextDrawColor(ReconText[1], -1);
	TextDrawSetOutline(ReconText[1], 1);
	TextDrawBackgroundColor(ReconText[1], 255);
	TextDrawFont(ReconText[1], 1);
	TextDrawSetProportional(ReconText[1], 1);

	for (new s=0;s<MAX_PLAYERS;s++)
	{
		for(new d=0;d<27;d++) ReconPlayerText[s][d]=PlayerText:-1;
	}
	//
	AnimDraw = TextDrawCreate(444.000000, 428.586578, "~w~PRESS ~r~~h~ENTER~w~ TO STOP ANIMATION");
	TextDrawLetterSize(AnimDraw, 0.261599, 1.047466);
	TextDrawAlignment(AnimDraw, 1);
	TextDrawColor(AnimDraw, -1);
	TextDrawSetShadow(AnimDraw, 0);
	TextDrawSetOutline(AnimDraw, 1);
	TextDrawBackgroundColor(AnimDraw, 51);
	TextDrawFont(AnimDraw, 1);
	TextDrawSetProportional(AnimDraw, 1);

	AutoShopText[0] = TextDrawCreate(490.0 - 120.0, 280.0, "usebox");
	TextDrawLetterSize(AutoShopText[0], 0.000000, 6.596829);
	TextDrawTextSize(AutoShopText[0], 490.0 + 120.0, 0.0);
	TextDrawAlignment(AutoShopText[0], 1);
	TextDrawColor(AutoShopText[0], -547730996);
	TextDrawUseBox(AutoShopText[0], true);
	TextDrawBoxColor(AutoShopText[0], -547731056);
	TextDrawSetShadow(AutoShopText[0], 0);
	TextDrawSetOutline(AutoShopText[0], 0);
	TextDrawBackgroundColor(AutoShopText[0], -547730996);
	TextDrawFont(AutoShopText[0], 0);
		//
	AutoShopText[1] = TextDrawCreate(490.0 - (120.0 / 2) - 1.5, 280.0 + 65.0, "<<");
	AutoShopText[2] = TextDrawCreate(490.0 + (120.0 / 2) + 1.5, 280.0 + 65.0, ">>");
		//
	AutoShopText[3] = TextDrawCreate(490.0 - (120.0 / 2) - 1.5, 280.0 + 65.0+ 18.0, "BACK_COLOR_1");
	AutoShopText[4] = TextDrawCreate(490.0 + (120.0 / 2) + 1.5, 280.0 + 65.0+ 18.0, "NEXT_COLOR_1");
		//
	AutoShopText[5] = TextDrawCreate(490.0 - (120.0 / 2) - 1.5, 280.0 + 65.0+ 36.0, "BACK_COLOR_2");
	AutoShopText[6] = TextDrawCreate(490.0 + (120.0 / 2) + 1.5, 280.0 + 65.0+ 36.0, "NEXT_COLOR_2");
		//
	AutoShopText[7] = TextDrawCreate(490.0 - (120.0 / 2) - 1.5, 280.0 + 65.0 + 54.0, "BUY");
	AutoShopText[8] = TextDrawCreate(490.0 + (120.0 / 2) + 1.5, 280.0 + 65.0 + 54.0, "EXIT");
		//
	TextDrawBoxColor(AutoShopText[1], 0xE27A3F70);
	TextDrawBoxColor(AutoShopText[2], 0xE27A3F70);
	//
	TextDrawBoxColor(AutoShopText[3], 0xEFC94C70);
	TextDrawBoxColor(AutoShopText[4], 0xEFC94C70);
	TextDrawBoxColor(AutoShopText[5], 0xEFC94C70);
	TextDrawBoxColor(AutoShopText[6], 0xEFC94C70);
	//
	TextDrawBoxColor(AutoShopText[7], 0x45B29D70);
	TextDrawBoxColor(AutoShopText[8], 0x45B29D70);
	for ( new G = 1; G <= 8; G++)
	{
		TextDrawLetterSize(AutoShopText[G], 0.382532, 1.209166);
		TextDrawTextSize(AutoShopText[G], 5.0, 120.0 - 1.5);
		TextDrawAlignment(AutoShopText[G], 2);
		TextDrawColor(AutoShopText[G], -1);
		TextDrawUseBox(AutoShopText[G], true);
		TextDrawSetOutline(AutoShopText[G], 1);
		TextDrawBackgroundColor(AutoShopText[G], 255);
		TextDrawFont(AutoShopText[G], 2);
		TextDrawSetSelectable(AutoShopText[G], true);
	}
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(!p_info[playerid][pFeFinder])
    {
		new carid = GetPlayerVehicleID(playerid);
		if ( GetPlayerState(playerid) == 2 )
		{
			if( !IsAVelik(carid) && !(carid >= SIInfernus[0] && carid <= SIInfernus[NUM_SI_VEHICLES-1]))
			{
				if ( GetEngineStat(carid) == 1 )
				{
				    engine_nulled[playerid]++;
				    if ( engine_nulled[playerid] >= 2 )
				    {
						ToggleEngine(carid);
						GameTextForPlayer(playerid, "ENGINE ~r~OFF", 1000, 6);
					}
				}
			}
		}
	}
	if ( !GetPVarInt(playerid, "_belt") && GetPVarInt(playerid, "_belt_fix") <= unix)
	{
		SetPlayerDrunkLevel(playerid, 2000) ;
		GetPlayerHealth(playerid, ServerHP[playerid]);
		AC_SetPlayerHealth(playerid,ServerHP[playerid] - 0.5);
		SetPVarInt(playerid, "_belt_fix", unix + 1);
	}
	GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
	GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);

	new Float:vehicleHealth;
	GetVehicleHealth(vehicleid, vehicleHealth);

	if(vehicleHealth<300.0)
	{
		ToggleEngine(vehicleid);
		AC_SetVehicleHealth(vehicleid, 350.0);
	}
	if(gVehicles[vehicleid - 1][vJob] == 8)
	{
		if(GetPVarInt(playerid,"bus_id") == vehicleid) SetPVarFloat(playerid,"bus_damage", vehicleHealth);
	}

	if(!caridhouse[playerid][0] || !caridhouse[playerid][1]) return 1;
	if(vehicleid == caridhouse[playerid][0])
	{
		if(!p_info[playerid][pProz]) return 1;
		if(vehicleHealth > 700 && vehicleHealth < 1000)
		{
			p_info[playerid][pProz] -= 0;
		}
		else if(vehicleHealth > 500 && vehicleHealth < 700)
		{
			p_info[playerid][pProz] -= 1;
		}
		else if(vehicleHealth > 200 && vehicleHealth < 500)
		{
			p_info[playerid][pProz] -= 2;
		}
		UpdatePlayerData(playerid,"pProz",p_info[playerid][pProz]);
	}
	else if(vehicleid == caridhouse[playerid][1])
	{
		if(!p_info[playerid][pProz2]) return 1;
		if(vehicleHealth > 700 && vehicleHealth < 1000)
		{
			p_info[playerid][pProz2] -= 0;
		}
		else if(vehicleHealth > 500 && vehicleHealth < 700)
		{
			p_info[playerid][pProz2] -= 1;
		}
		else if(vehicleHealth > 200 && vehicleHealth < 500)
		{
			p_info[playerid][pProz2] -= 2;
		}
		UpdatePlayerData(playerid,"pProz2",p_info[playerid][pProz2]);
	}
	return 1;
}



stock SetPlayerSkills(playerid)
{
	for(new P = 0; P < 6; P++)
	{
		if(p_info[playerid][pGunSkill][P] < 0) p_info[playerid][pGunSkill][P] = 0;
		else if(p_info[playerid][pGunSkill][P] > 100) p_info[playerid][pGunSkill][P] = 100;
	}

	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, p_info[playerid][pGunSkill][0] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, p_info[playerid][pGunSkill][1] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, p_info[playerid][pGunSkill][2] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, p_info[playerid][pGunSkill][3] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, p_info[playerid][pGunSkill][4] * 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, p_info[playerid][pGunSkill][5] * 10);

	return 1;
}

stock GetPlayerID(string[])
{
	foreach(i)
	{
		if(strcmp(NamePlayer[i], string, true, strlen(string)) == 0) { return i; }
	}
	return INVALID_PLAYER_ID;
}

stock SendHelperMessage(color, string[])
{
	foreach(i)
	{
		if(p_info[i][tHelper] > 0 && IsPlayerAuthorized(i) == PLAYER_ONLINE && SELECT_SERVER != 2)
		{
			SCM(i, color, string);
		}
	}
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(ShowDebugTakeDamage[playerid]==1)
	{
		new ShowDebugTakeDamage_str[128];
		format(ShowDebugTakeDamage_str,128,"OnPlayerTakeDamage : <%d>(playerid) | <%d>(issuerid) | <%.2f>(amount) | <%d>(weaponid) | <%d>(bodypart)",playerid, issuerid, amount, weaponid, bodypart);
		SCM(playerid,-1,ShowDebugTakeDamage_str);
		return 1;
	}
	if(!IsPlayerConnected(issuerid))return 1;
	if(issuerid != INVALID_PLAYER_ID)
	{
		if( weaponid == 9 )
		{
			SetPlayerArmedWeapon(issuerid, 0);
			FIXES_ApplyAnimation(issuerid,"PED","handscower",4.1,1,0,0,0,1000);
			SetTimerEx("ClearAnimText",1000,0,"i",issuerid);
			return 1;
		}
		if ( weaponid == 3 || ( GetPVarInt ( issuerid , "tazershoot" ) > 0 && weaponid == GetPVarInt ( issuerid , "tazergun" ) ) )
		{
			if(!GetPVarInt(playerid,"crack_tazer"))
			{
				if(p_info[issuerid][tMember] == F_SAPD ||
				p_info[issuerid][tMember] == F_PMC ||
				p_info[issuerid][tMember] == F_SWAT ||
				p_info[issuerid][tMember] == F_FBI ||
				p_info[issuerid][tMember] == F_JTTF ||
				p_info[issuerid][tMember] == F_DEPJUST ||
				p_info[issuerid][tMember] == F_WHOUSE)
				{
					if ( GetPVarInt ( issuerid , "tazershoot" ) > 0 && weaponid != 3 )
					{
						SetPVarInt ( issuerid , "tazershoot", GetPVarInt ( issuerid, "tazershoot" ) - 1 );
						if ( GetPVarInt ( issuerid, "tazershoot" ) == 0 )
						{
							SendClientMessage ( issuerid, CNRED , "[ ! ] {"#cWHITE"}Парализующие боеприпасы закончены. {AFAFAF}( Следующая зарядка через 5 минут )" ) ;

							SetPVarInt ( issuerid , "tazershoottime", unix + 60 );

							DeletePVar ( issuerid , "tazershoot" ) ;
							DeletePVar ( issuerid , "tazergun" ) ;
						}
					}

					new Float:X, Float:Y, Float:Z;

					GetPlayerPos(playerid, X, Y, Z);
					Z += 1.5;

					if ( TempTazerObject[issuerid] != -1 ) DestroyPlayerObject(issuerid, TempTazerObject[issuerid]);
					TempTazerObject[issuerid] = CreatePlayerObject(issuerid, 1559, X, Y, Z, 0.0, 0.0, 0.0);

					switch(GetPlayerAnimationIndex(issuerid))
					{
						case 17: SetTimerEx("UnTazer",5 * 1000, 0, "i", playerid);
						case 18: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
						case 19: SetTimerEx("UnTazer",15 * 1000, 0, "i", playerid);
						default: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
					}

					SendClientMessage(issuerid, CWHITE, "Нажмите {FF0000}\"N\"{FFFFFF} около игрока чтобы сковать его");
					SetPVarInt ( playerid , "TazerPlayer", issuerid ) ;
					SetPVarInt ( issuerid , "TazerPlayer", playerid + 1) ;
					SetPVarInt ( playerid  ,"crack_tazer", true ) ;



					AC_TogglePlayerControllable(playerid,false);
					FIXES_ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 0, 1);

					format(stringer,128,"оглушил(а) гражданина %s",NamePlayer[playerid]);
					MeAction(issuerid,stringer);
				}
			}
		}
		for(new i = 0; i < MAX_DAMAGES_STRING; i++)
		{
			if(gDamagesData[playerid][i][gdBody]==-1)
			{
				gDamagesData[playerid][i][gdBody]=bodypart;
				gDamagesData[playerid][i][gdTime]=unix;
				gDamagesData[playerid][i][gdGun] = weaponid;
				gDamagesData[playerid][i][gdDamage] = amount;
				strmid(gDamagesData[playerid][i][gdNameDamages], NamePlayer[issuerid], 0, strlen(NamePlayer[issuerid]), MAX_PLAYER_NAME);
				gDamagesData[playerid][i][gdNameID] = issuerid;
				break;
			}
		}
	}
	return 1;
}

SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance)
{
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerPos(playerid, x, y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	AC_SetPlayerPos(giveplayerid,x,y,z);
	SetPlayerFacingAngle(giveplayerid,a);
}

stock IsAnyPlayerInVehicle(vehicleid,seat)
{
	foreach(i)
	{
		if (IsPlayerInVehicle(i, vehicleid) && GetPlayerVehicleSeat(i) == seat) return 1;
	}
	return 0;
}

#define ac__Difference(%0,%1) (%0 > %1) ? (%0 - %1) : (%1-%0)

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	if(GetVehicleModel(vehicleid) != 570 && GetVehicleModel(vehicleid) != 449)
	{
		if(vel_x > 100 || vel_y > 100 || vel_z > 100)
		{
			format(stringer,60,"<Warning> %s[%d]: Возможно Car Hack (%.2f)",NamePlayer[playerid],playerid,vel_x);
			AdmMes(CREDD,stringer,1);
		}
	}
	new Float:Count[2];
 //	new Float:v_health;
	Count[0] = ac__Difference(new_x,VehPos[vehicleid][0]);
	Count[1] = ac__Difference(new_y,VehPos[vehicleid][1]);
	if(passenger_seat!=0)
	{
		new Float:spz;
		spz=floatsqroot(floatpower(floatabs(vel_x),2.0)+floatpower(floatabs(vel_y),2.0))*30.3;
		if(spz>15)
		{
			if(floatround(spz)-GetPVarInt(playerid,"Carsspeed")>=5 || spz>70)
			{
				SetPVarInt(playerid,"SCarstime",GetPVarInt(playerid,"SCarstime")+2);
				if(GetPVarInt(playerid,"SCarstime")==6)
					CheatKick(playerid,839);
				else if(floatround(spz)-GetPVarInt(playerid,"Carsspeed")>=15 && GetPVarInt(playerid,"SCarstime")>3)
					CheatKick(playerid,840);
			}
			else if(GetPVarInt(playerid,"SCarstime")>=1)
				SetPVarInt(playerid,"SCarstime",GetPVarInt(playerid,"SCarstime")-1);
		}
		else
		{
			if(GetPVarInt(playerid,"SCarstime")>=1)
				SetPVarInt(playerid,"SCarstime",GetPVarInt(playerid,"SCarstime")-1);
		}
		SetPVarInt(playerid,"Carsspeed",floatround(spz));
	}
	if(Count[0]>10000 || Count[1]>10000)
		return 0;
	switch(GetVehicleModel(vehicleid))
	{
		case 435, 450, 584, 591, 606..608, 610..611: return UpdateVehiclePos(vehicleid, 0);
	}
	if((Count[0] > 10 || Count[1] > 10) && !UseCar(vehicleid) && !BanCar[vehicleid])
	{
		if((Count[0] > 25 || Count[1] > 25) && IsPlayerInAnyVehicle(playerid))
		{
			/*SetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
			SetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
			GetVehicleHealth(vehicleid, v_health);
			if(v_health<300.0)
			{
				ToggleEngine(vehicleid);
				AC_SetVehicleHealth(vehicleid, 350.0);
			}*/

			AC_VehicleTeleportToMe[playerid]++;
			return 0;
		}
		else
		{
			/*SetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
			SetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
			RepairVehicle(vehicleid);
			GetVehicleHealth(vehicleid, v_health);
			if(v_health<300.0)
			{
				ToggleEngine(vehicleid);
				AC_SetVehicleHealth(vehicleid, 350.0);
			}*/

			AC_VehicleTeleportToMe[playerid]++;
			return 0;
		}
	}
	UpdateVehiclePos(vehicleid, 0);
	VehPos[vehicleid][0]=new_x;
	VehPos[vehicleid][1]=new_y;
	VehPos[vehicleid][2]=new_z;
	return 1;
}



stock EndBus(playerid)
{
	if( T_IsValid3DTextLabel ( gPlayerBusText[playerid] ) ) DestroyDynamic3DTextLabelEx(gPlayerBusText[playerid]);

	SendClientMessage(playerid,-1,"___________________________________");
	SendClientMessage(playerid,CORANGE,"Рабочий день окончен");
	format(stringer,128,"Заработано: {"#cWHITE"}%i$",GetPVarInt(playerid,"bus_salary"));
	SendClientMessage(playerid,CORANGE,stringer);
	format(stringer,128,"За ремонт: {"#cWHITE"}%i$",floatround((1000.0-GetPVarFloat(playerid,"bus_damage"))));
	SendClientMessage(playerid,CORANGE,stringer);
	SendClientMessage(playerid,-1,"___________________________________");
	new salary = (GetPVarInt(playerid,"bus_salary") - floatround((1000.0-GetPVarFloat(playerid,"bus_damage"))) < 0) ? (50) : (GetPVarInt(playerid,"bus_salary") - floatround((1000.0-GetPVarFloat(playerid,"bus_damage"))));

	format(stringer,128,"Итого: {"#cWHITE"}%i$",salary);
	SendClientMessage(playerid,CORANGE,stringer);
	SendInf(playerid,"Деньги будут начислены во время зарплаты {"#cGRAY"}(PayDay)");

	p_info[playerid][pSalary] += salary;
	UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);

	DisablePlayerRaceCheckpoint(playerid);

	DeletePVar(playerid,"bus_id");
	DeletePVar(playerid,"bus_price");
	DeletePVar(playerid,"timetaxi");
	DeletePVar(playerid,"id_cp");
	DeletePVar(playerid,"bus_salary");
	DeletePVar(playerid,"bus_damage");
	DeletePVar(playerid, "route");
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	ChangeVehicleColor(vehicleid,gVehicles [ vehicleid - 1 ] [ vCol1 ],gVehicles [ vehicleid - 1 ] [ vCol2 ]);
	if ((gVehicles[vehicleid-1][vJob] >= 1 && gVehicles[vehicleid-1][vJob] <= 4) || gVehicles[vehicleid-1][vJob] == 8)
	{
		ToggleLock(vehicleid, true);
	}

	UpdateVehiclePos(vehicleid,0);
	if(gVehicles[vehicleid-1][vRentPlayer] != -1)
	{
		if(gVehicles[vehicleid-1][vRentPlayerText] != Text3D:-1)
		{
			DestroyDynamic3DTextLabel(gVehicles[vehicleid-1][vRentPlayerText]);
			gVehicles[vehicleid-1][vRentPlayerText] = Text3D:-1;
		}
		SendClientMessage(gVehicles[vehicleid-1][vRentPlayer],COLOR_GREY,"Ваш велосипед был удален, в связи спавном т.с.");
		DestroyVehicleOP(vehicleid);
	}
	for(new f = 0; f < MAX_FARMS; f++)
	{
		for ( new f2 = 0; f2 < 3; f2++)
		{
			if(vehicleid==_farm[f][farm_vehicles_first][f2])
			{
				if ( _farm[f][farm_pickup_first][f2] != -1 )
				{
					DestroyPickup(_farm[f][farm_pickup_first][f2]);
					_farm[f][farm_pickup_first][f2] = -1;
				}
				if ( _farm[f][farm_area_first][f2] != -1 )
				{
					DestroyDynamicArea(_farm[f][farm_area_first][f2]);
					_farm[f][farm_area_first][f2] = -1;
				}
				/*for ( new f3 = 0; f3 < 30; f3++)
				{
					if(IsValidDynamicObject(farm_object_flows[f][f2][f3]))
						DestroyDynamicObject(farm_object_flows[f][f2][f3]);
				}*/
			}
		}
   }
	if(gVehicles [ vehicleid - 1 ] [ vFraction ] != 0)
	{
		stringer[0] = EOS;
		format(stringer, 512, "UPDATE `fr_vehicles` SET `f_fuel` = '%f' WHERE `f_c_id` = '%d'",gVehicles [ vehicleid - 1 ] [ vFuel ] , gVehicles [ vehicleid - 1 ] [ vInc ] );
		mysql_pquery(connects , stringer , "" , "" ) ;
	}
	gVehicles[vehicleid - 1][uDamage] = false;
	vProtect[vehicleid]=0.0;
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1)
	{
		if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
		if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
		LightsObject[vehicleid][0] = -1;
		LightsObject[vehicleid][1] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	VehHealth[vehicleid] = 1000.0;
	if(vehicleid >= vehicles_ao[0] && vehicleid <= vehicles_ao[6])
	{
		if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT)
		{
			DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][0]);
			gAttachedObjectToVehicle[vehicleid-1][0] = INVALID_OBJECT;
			if(gAttachedObjectToVehicle[vehicleid-1][0] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][0]=CreateDynamicObject(19309,0.0,0.0,0.0,0.0,0.0,0.0, -1, -1, -1, 300.0, 300.0);
			if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT) SetDynamicObjectMaterialText(gAttachedObjectToVehicle[vehicleid-1][0], 0, "Учебная",  50, "Arial", 27, 1, -1, -65536, 1);
			if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][0], vehicleid, 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
		}
	}
	else if(gVehicles[vehicleid-1][skiing])
	{
		countsport--;
		format(stringer, 90, "Лыжи в прокате: %d/20",countsport);
		SetDynamicObjectMaterialText(textsport[1],  0,stringer, 130, "Arial", 34, 1, -1, 0, 1);
		DestroyVehicleOP(vehicleid);
	}
	else if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading])
	{
		gVehicleGun[vehicleid][vGunAmount] = 0;
		gVehicleGun[vehicleid][vGunLoading] = false;
		gVehicleGun[vehicleid][vGunUnloading] = false;
		if(IsValidDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText])) DestroyDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]);
		DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
		DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
		gVehicleGun[vehicleid][vGunArea] = 0;
		gVehicleGun[vehicleid][vGunPickup] = 0;
		//print ( "Itter_Remove(VehicleGun, vehicleid);" ) ;
		//Itter_Remove(VehicleGun, vehicleid);
		//SetTimerEx("Itter_OPDCInternal_VehicleGun", 0, false, "i", vehicleid);

	}

	if(GetVehicleModel(vehicleid) == 462)
	{
		gVehicles[vehicleid - 1][vFuel] = 100.0;
	}
	gVehicles[vehicleid - 1][vOccupied] = -1;
	///gVehicles[vehicleid - 1][vEngine] = false;
	gVehicles[vehicleid - 1][vLamp] = false;

	GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][veX], gVehicles[vehicleid - 1][veY], gVehicles[vehicleid - 1][veZ]);
	GetVehicleZAngle(vehicleid, gVehicles[vehicleid - 1][veA]);

	if(gVehicles[vehicleid - 1][vJob] == 4)	ChangeVehicleColor(vehicleid, 6, 0);
	if(gVehicles[vehicleid - 1][vJob] == 8)
	{
		foreach(i)
		{
			if(GetPVarInt(i,"bus_id") == vehicleid)
			{
				EndBus(i);
				break;
			}
		}
	}

	foreach(i)
	{
		if(GetPVarInt(i,"prod_vehicle_id") == vehicleid)
		{
			if(gPlayerProdText[i][0] != Text3D:-1 || gPlayerProdText[i][1] != Text3D:-1 || gPlayerProdCP[i] != -1)
			{
				if(gPlayerProdText[i][0] != Text3D:-1) DestroyDynamic3DTextLabel(gPlayerProdText[i][0]);
				if(gPlayerProdText[i][1] != Text3D:-1) DestroyDynamic3DTextLabel(gPlayerProdText[i][1]);
				if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);

				gPlayerProdText[i][0] = Text3D:-1;
				gPlayerProdText[i][1] = Text3D:-1;
				gPlayerProdCP[i] = -1;

				SendClientMessage(i, COLOR_GREY, "Ваш рабочий транспорт отбуксирован");
				SendClientMessage(i, 0xFFFF00AA, "Рабочий день завершен");

				DeletePVar(i,"prod_vehicle_id");
				DeletePVar(i,"prod_next");
				DeletePVar(i,"count_prod2");
				DeletePVar(i,"timetaxi");
				DeletePVar(i,"prod_id");
			}
		}
		if(vehicleid == caridhouse[i][0] || vehicleid == caridhouse[i][1])
		{
			new slot = -1;
			for(new vehicle = 0; vehicle < MAX_PLAYER_CAR; vehicle++)
			{
				if(vehicleid == caridhouse[i][vehicle])
				{
					slot = vehicle;
					break;
				}
			}
			if(slot == -1) break;
			if(slot == 1)
			{
				new bool:check_valid_vip_car_object = false;
				for(new x = 0; x < 5; x++)
				{
					if(gAttachedObjectToVehicle[vehicleid-1][x] == INVALID_OBJECT)
					{
						check_valid_vip_car_object=true;
						break;
					}
				}

				if(!check_valid_vip_car_object)
				{
					if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT)DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][0]);
					if(gAttachedObjectToVehicle[vehicleid-1][1] != INVALID_OBJECT)DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][1]);
					if(gAttachedObjectToVehicle[vehicleid-1][2] != INVALID_OBJECT)DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][2]);
					if(gAttachedObjectToVehicle[vehicleid-1][3] != INVALID_OBJECT)DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][3]);
					if(gAttachedObjectToVehicle[vehicleid-1][4] != INVALID_OBJECT)DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][4]);

					for(new x = 0; x < 5; x++) gAttachedObjectToVehicle[vehicleid-1][x] = INVALID_OBJECT;

					if(gAttachedObjectToVehicle[vehicleid-1][0] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][0] = CreateDynamicObject(3790, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[i][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[vehicleid-1][1] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][1] = CreateDynamicObject(3790, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[i][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[vehicleid-1][2] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][2] = CreateDynamicObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[i][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[vehicleid-1][3] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][3] = CreateDynamicObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[i][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[vehicleid-1][4] == INVALID_OBJECT) gAttachedObjectToVehicle[vehicleid-1][4] = CreateDynamicObject(19477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[i][pHouse], -1, -1, 300.0, 300.0);
				//
					if(gAttachedObjectToVehicle[vehicleid-1][4] != INVALID_OBJECT) SetDynamicObjectMaterialText(gAttachedObjectToVehicle[vehicleid-1][4],0,  NamePlayer[i], OBJECT_MATERIAL_SIZE_512x512, "BankGothic Md BT", 60, 1, 0xFF0000FF, 0, 1);
				//
					if(gAttachedObjectToVehicle[vehicleid-1][0] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][0], vehicleid, -1.049999,-1.700000,0.150000,0.000000,0.000000,-89.099983);
					if(gAttachedObjectToVehicle[vehicleid-1][1] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][1], vehicleid, 1.049999,-1.775000,0.150000,0.000000,0.000000,-89.099983);
					if(gAttachedObjectToVehicle[vehicleid-1][2] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][2], vehicleid, -1.049999,-3.125000,-1.500000,0.000000,0.000000,0.000000);
					if(gAttachedObjectToVehicle[vehicleid-1][3] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][3], vehicleid, 1.049999,-3.100001,-1.425000,0.000000,0.000000,0.000000);
					if(gAttachedObjectToVehicle[vehicleid-1][4] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[vehicleid-1][4], vehicleid, 1.153, -1.2, 0.46,0.0,0.0,0.0);
				}
			}
			if(p_info[i][pHouse] == 0)
			{
				DestroyVehicleOP(caridhouse[i][slot]);
				caridhouse[i][slot] = 0;
				break;
			}
			if(!caridhouse[i][slot]) break;

			if ( p_info[i][p_car_pos_x][slot]==883.4248 || p_info[i][p_car_pos_x][slot]==889.6341 )
			{
				AC_LinkVehicleToInterior(caridhouse[i][slot], gHouseExitInterior[gHouses[p_info[i][pHouse]][hKlass]-1]);
				AC_SetVehicleVirtualWorld(caridhouse[i][slot], p_info[i][pHouse]);
			}
			else
			{
				AC_SetVehicleVirtualWorld(caridhouse[i][slot],p_info[i][p_car_vw][slot]);
				AC_LinkVehicleToInterior(caridhouse[i][slot],p_info[i][p_car_int][slot]);
			}
			gVehicles[caridhouse[i][slot]-1][vLock] = false;
			// gVehicles[caridhouse[i][slot]-1][vFuel] = p_info [ i ] [ p_car_fuel ][ slot ];
			if(gPlayerTuning[i][slot][0] != 255) ChangeVehiclePaintjob(caridhouse[i][slot], gPlayerTuning[i][slot][0]);
			for(new F = 2; F <= 11; F++) if(gPlayerTuning[i][slot][F] != -1) AC_AddVehicleComponent(caridhouse[i][slot], gPlayerTuning[i][slot][F]);
			ChangeVehicleColor(caridhouse[i][slot], gPlayerTuning[i][slot][1], 0);
			break;
		}
		if(vehicleid == GetPVarInt(i, "is_boat") - 1)
		{
			DestroyVehicleOP(GetPVarInt(i, "is_boat") - 1);
			DeletePVar(i, "is_boat");
			break;
		}
		if(vehicleid == GetPVarInt(i, "is_plane") - 1)
		{
			DestroyVehicleOP(GetPVarInt(i, "is_plane") - 1);
			DeletePVar(i, "is_plane");
			break;
		}
	}
	return 1;
}




forward changekey(playerid,giveplayerid[]);
public changekey(playerid,giveplayerid[])
{
	new Password[16];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	cache_get_value(0, "password", Password, 16);
	SetPVarInt(playerid, "ChangePass",0);
	ShowPlayerDialog(playerid,1228,DIALOG_STYLE_PASSWORD, "Смена админ пароля", "Используйте старый пароль", "Далее", "Отмена");
	return 1;
}

forward alogin1(playerid,giveplayerid[]);
public alogin1(playerid,giveplayerid[])
{
	new Password[16];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, CWHITE, "Извините, вы не администратор.");
	cache_get_value(0, "password", Password, 16);
	if(!strcmp(Password,"qwerty",true)) SetPVarInt(playerid,"aLogin",1),ShowPlayerDialog(playerid,1227,DIALOG_STYLE_PASSWORD, "Админ-авторизация", "{a9c4e4}Используйте пароль\n\nПароль должен состоять из латинских букв и цифр, размером от 6 до 15 символов", "Вход", "Отмена");
	else SetPVarInt(playerid,"aLogin",0),ShowPlayerDialog(playerid,1227,DIALOG_STYLE_PASSWORD, "Админ-авторизация", "{a9c4e4}Используйте пароль\n\nПароль должен состоять из латинских букв и цифр, размером от 6 до 15 символов", "Вход", "Отмена");
	return 1;
}

forward alogin(playerid,giveplayerid[]);
public alogin(playerid,giveplayerid[])
{
	new inputtext[16];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, CWHITE, "Вы не администратор");
	GetPVarString(playerid,"inputtext",inputtext,15);
	for(new i=0; i<17; i++)uAdmin[playerid][i]=1;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 160, "UPDATE `admin` SET  `password` = '%s' WHERE `name` = '%s'", inputtext, NamePlayer[playerid]);
	mysql_pquery(connects,mysql_query_string);
	SCM(playerid, CGREEN, "Поздравляем! Вы получили доступ модератора");
	gAdmin[playerid][6]=0;
	gAdmin[playerid][7]=0;
	SetPVarInt(playerid,"dostup", true);
	cache_get_value_int(0,"level",p_info[playerid][pAdmin]);
	format(stringer, 50, "%s[%d] авторизовался на сервере.", NamePlayer[playerid], playerid);
	AdmMes(0xEAC700FF, stringer, 1);
	format(stringer, 57, "- IP: %s | Уровень администрирования: %d", PlayerIp[playerid], p_info[playerid][pAdmin]);
	AdmMes(0xEAC700FF, stringer, 5);
	return 1;
}
forward changepass(playerid,inputtext[]);
public changepass(playerid,inputtext[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SCM(playerid, CWHITE, "Неверный пароль");
	SetPVarInt(playerid, "ChangePass",1);
	ShowPlayerDialog(playerid,1228,DIALOG_STYLE_PASSWORD, "Смена админ пароля", "Используйте новый пароль", "Далее", "Отмена");
	return 1;
}

forward password(playerid,inputtext[]);
public password(playerid,inputtext[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		SCM(playerid, CWHITE, "Неверный пароль");
		SetPVarInt(playerid, "Popytki", GetPVarInt(playerid, "Popytki") + 1);
		if(GetPVarInt(playerid, "Popytki") > 3)
		{
			DeletePVar(playerid, "Popytki");
			KickEx(playerid);
		}
	}
	else
	{
		SetPVarInt(playerid,"dostup", true);

		cache_get_value_int(0, "level",p_info[playerid][pAdmin]);
		cache_get_value_int(0,"kick",gAdmin[playerid][0]);
		cache_get_value_int(0,"ban",gAdmin[playerid][1]);
		cache_get_value_int(0,"mute",gAdmin[playerid][2]);
		cache_get_value_int(0,"pm",gAdmin[playerid][3]);
		cache_get_value_int(0,"warn",gAdmin[playerid][4]);
		cache_get_value_int(0,"jail",gAdmin[playerid][5]);
		cache_get_value_int(0,"vig",gAdmin[playerid][6]);
		cache_get_value_int(0,"point",gAdmin[playerid][7]);
		cache_get_value_int(0,"blockadmin",gAdmin[playerid][8]);
		cache_get_value_int(0,"full_dostup",gAdmin[playerid][9]);
		cache_get_value_int(0,"activate_perenos",gAdmin[playerid][10]);
		cache_get_value_int(0,"helper_dostup",gAdmin[playerid][11]);

		if(gAdmin[playerid][8] == 1)
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			SendClientMessage(playerid,-1,"Ваши админ-действия заморожены");
			return 1;
		}

		new l_u_admin[64];
		cache_get_value(0, "uAdmin", l_u_admin, 64 ) ;
		sscanf(l_u_admin, "p<,>a<i>[17]",uAdmin[playerid]);

		if(gAdminTime[playerid] == 0)
		{
			new who_load[32];
			format(who_load, 32, "online_%s", getDay());
			if(!strcmp(who_load,"online_monday")) cache_get_value_index_int(0,14,gAdminTime[playerid]);
			else if(!strcmp(who_load,"online_tuesday")) cache_get_value_index_int(0,15,gAdminTime[playerid]);
			else if(!strcmp(who_load,"online_wednesday")) cache_get_value_index_int(0,16,gAdminTime[playerid]);
			else if(!strcmp(who_load,"online_thursday")) cache_get_value_index_int(0,17,gAdminTime[playerid]);
			else if(!strcmp(who_load,"online_friday")) cache_get_value_index_int(0,18,gAdminTime[playerid]);
			else if(!strcmp(who_load,"online_saturday")) cache_get_value_index_int(0,19,gAdminTime[playerid]);
			else if(!strcmp(who_load,"online_sunday")) cache_get_value_index_int(0,20,gAdminTime[playerid]);
		}
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "UPDATE `admin` SET  `online_connection` = NOW() WHERE `Name` = '%s' LIMIT 1", NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
		format(stringer, 53,"Вы авторизировались как модератор %d уровня",p_info[playerid][pAdmin]);
		SCM(playerid,0xEAC700FF, stringer);
		
		format(stringer, 50, "%s[%d] авторизовался на сервере.", NamePlayer[playerid], playerid);
		AdmMes(0xEAC700FF, stringer, 1);
		format(stringer, 57, "- IP: %s | Уровень администрирования: %d", PlayerIp[playerid], p_info[playerid][pAdmin]);
		AdmMes(0xEAC700FF, stringer, 5);
	}
	return 1;
}

forward Moderator(playerid,giveplayerid[],level);
public Moderator(playerid,giveplayerid[],level)
{
	new rows;
	cache_get_row_count(rows);
	new sqlcmd[350];
	if(rows != 0)
	{
		new load_level;
		cache_get_value_int(0,"level",load_level);
		if(load_level != 0)
		{
			if(level == 0)
			{
				if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
				{
					format(sqlcmd, 128, "%s успешно удален из списка модераторов", giveplayerid);
					SCM(playerid, COLOR_LIGHTRED, sqlcmd);
					return 1;
				}
				format(sqlcmd, 128, "DELETE FROM `admin` WHERE `name`='%s'", giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");
				format(sqlcmd, 128, "%s успешно удален из списка модераторов", giveplayerid);
				SCM(playerid, COLOR_LIGHTRED, sqlcmd);
			}
			else
			{
				if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
				{
					format(sqlcmd, 144, "Уровень администрирования у  %s изменен на %d", giveplayerid, level);
					SCM(playerid, CGREEN, sqlcmd);
					return 1;
				}
				format(sqlcmd, 128, "UPDATE `admin` SET  `level` = '%d' WHERE `name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");
				format(sqlcmd, 144, "Уровень администрирования у  %s изменен на %d", giveplayerid, level);
				SCM(playerid, CGREEN, sqlcmd);
			}
		}
	}
	else
	{
		if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
		{
			format(sqlcmd, 128, "%s успешно добавлен в список модераторов. Уровень полномочий %d", giveplayerid, level);
			SendClientMessage(playerid,CGREEN,sqlcmd);
			return 1;
		}
		if(level == 0) return SCM(playerid,-1,"игрок не администратор.");
		//new years, months, days;
		//r_getdate(years, months, days);
		format(sqlcmd, 350, "INSERT INTO `admin` (`Name`, `level`, `online_connection`,`CheckName`, `date_start`) VALUES ('%s', %d, NOW(),'%s', NOW())", giveplayerid, level, NamePlayer[playerid]);
		mysql_pquery(connects, sqlcmd, "","");

		format(sqlcmd, 128, "%s успешно добавлен в список модераторов. Уровень полномочий %d", giveplayerid, level);
		SendClientMessage(playerid,CGREEN,sqlcmd);

		if(GetPVarInt(playerid,"gsled"))
		{
			new type = -1;
			if(type==-1) return 1;
			format(sqlcmd, 128, "UPDATE `admin` SET `sled` = '%d' WHERE `name` = '%s' LIMIT 1", type, giveplayerid);
			mysql_pquery(connects, sqlcmd, "", "");

			DeletePVar(playerid,"gsled");
		}
	}
	return 1;
}
forward OffBan(playerid,tmp[],reason[], days);
public OffBan(playerid,tmp[],reason[], days)
{
	new rows;
	cache_get_row_count(rows);
	if(rows) return SCM(playerid, CWHITE, "Игрок заблокирован!");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(IsIpFound(reason))
	{
		SendReklama(playerid,reason);
		return 1;
	}
	if(AntiReklama(reason) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив <<< в /ban]: %s(%i){ff0000} попытался отправить текст: %s",NamePlayer[playerid],playerid,reason);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(reason,Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],reason,strlen(reason),64);


	new data[16],year, month, day,unbandate;
	r_getdate(year, month, day);
	format(data, 16, "%02d.%02d.%04d", day, month, year);
	unbandate = unix + days*86400;

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 800, "INSERT INTO `table_ban` (`Name_Admin`, `Name_Player`, `Ban_Data`, `Unban_Data`, `Ban_Reason`) VALUES ('%s', '%s', '%s', '%d', '%s')", NamePlayer[playerid], tmp, data, unbandate, reason);
	mysql_pquery(connects, mysql_query_string, "", "");

	format(mysql_query_string, 128, "Администратор %s забанил %s на %d дней в оффлайне. Причина: %s",NamePlayer[playerid], tmp, days, reason);
	SendClientMessageToAll(COLOR_LIGHTRED,mysql_query_string);
	return 1;
}

forward get_jail_info(playerid);
public get_jail_info(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if (rows == 0) return 1;

	new Admin_Load_MJ[25],Reason_Load_MJ[64],Time_Load_MJ[64];

	cache_get_value(0,"Admin_Jail",Admin_Load_MJ,25);
	cache_get_value(0,"Reason_Jail",Reason_Load_MJ,25);
	cache_get_value(0,"time",Time_Load_MJ,64);

	format ( stringer, 200 , "Вас посадил: {ff0000}%s{ffffff} Время: {ff0000}%s", Admin_Load_MJ, Time_Load_MJ);
	SendClientMessage ( playerid , -1 , stringer ) ;
	format ( stringer, 200 , "Причина: {ff0000}%s", Reason_Load_MJ);
	SendClientMessage ( playerid , -1 , stringer ) ;
	return 1;
}

forward get_mute_info(playerid);
public get_mute_info(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if (0 == rows) return 1;

	new Admin_Load_MJ[25],Reason_Load_MJ[64],Time_Load_MJ[64];

	cache_get_value(0,"Admin_Mute",Admin_Load_MJ,25);
	cache_get_value(0,"Reason_Mute",Reason_Load_MJ,25);
	cache_get_value(0,"time",Time_Load_MJ,64);

	format ( stringer, 200 , "Затычку выдал: {ff0000}%s{ffffff} Время: {ff0000}%s", Admin_Load_MJ, Time_Load_MJ);
	SendClientMessage ( playerid , -1 , stringer ) ;
	format ( stringer, 200 , "Причина: {ff0000}%s", Reason_Load_MJ);
	SendClientMessage ( playerid , -1 , stringer ) ;
	return 1;
}

forward get_warn_info(playerid);
public get_warn_info(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if (0 == rows) return 1;

	new Admin_Load_MJ[25],Reason_Load_MJ[64],Time_Load_MJ[64];

	cache_get_value(0,"Admin_Warn",Admin_Load_MJ,25);
	cache_get_value(0,"Reason_Warn",Reason_Load_MJ,25);
	cache_get_value(0,"time",Time_Load_MJ,64);

	format ( stringer, 200 , "Предупреждение выдал: {ff0000}%s{ffffff} Время: {ff0000}%s", Admin_Load_MJ, Time_Load_MJ);
	SendClientMessage ( playerid , -1 , stringer ) ;
	format ( stringer, 200 , "Причина: {ff0000}%s", Reason_Load_MJ);
	SendClientMessage ( playerid , -1 , stringer ) ;
	return 1;
}

forward LoadPlayerData(playerid);
public LoadPlayerData(playerid)
{
	if(!GetPVarInt(playerid,"Logged")) return 1;

	new l_guns [ 56 ], l_ammo [ 56 ] ,l_data_pos[64], Float:e_X, Float:e_Y, Float:e_Z, e_Virt, e_Int, e_time, str1[100+1], ipreg[17], Scode[100], trunk_guns[90],trunk_guns_set[9][10];

	new get_name_store[240];
	new l_acc[5][64],house_cash,golos,dj;

	if (cache_is_valid(p_info[playerid][Cache_ID]))
	{
		cache_set_active(p_info[playerid][Cache_ID]);
	}
	else
	{
		mysql_query_string[0]=EOS;
		format(mysql_query_string,512,"SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1", NamePlayer[playerid]);
		p_info[playerid][Cache_ID] = mysql_query(connects,mysql_query_string);
	}
	cache_get_value_index_int(0,0,p_info[playerid][pID]); //ID
	cache_get_value_index_int(0,3,p_info[playerid][pLevel]); //pLevel
	cache_get_value_index_int(0,39,p_info[playerid][pHouse]); //pPhousekey
	cache_get_value_index_int(0,65,p_info[playerid][pPbiskey]); //pPbiskey
	cache_get_value_index_int(0,52,p_info[playerid][pCheckKey]); //pCheckKey
	cache_get_value_index_int(0,62,PlayerCar[playerid][0]);//pCar
	cache_get_value_index_int(0,74,PlayerCar[playerid][1]);//pCar2
	cache_get_value_index_int(0,4,p_info[playerid][tHelper]); //tHelper
	cache_get_value_index_int(0,5,p_info[playerid][tDonatemoney2]); //tDonatemoney2
	cache_get_value_index_int(0,6,p_info[playerid][pDonateRank]); //pDonateRank
	cache_get_value_index_int(0,8,p_info[playerid][pSex]); //pSex
	cache_get_value_index_int(0,9,p_info[playerid][pExp]); //pExp
	cache_get_value_index_int(0,10,p_info[playerid][pCash]);//pCash
	cache_get_value_index_int(0,12,p_info[playerid][pJailTime]); //pJailTime
	cache_get_value_index_int(0,13,p_info[playerid][pMats]); //pMats
	cache_get_value_index_int(0,14,p_info[playerid][pDrugs]); //pDrugs
	cache_get_value_index_int(0,15,p_info[playerid][tLeader]); //tLeader
	cache_get_value_index_int(0,16,p_info[playerid][tMember]); //tMember
	cache_get_value_index_int(0,17,p_info[playerid][tRank]); //tRank
	cache_get_value_index_int(0,18,p_info[playerid][pJob]); //pJob
	cache_get_value_index_int(0,114,start_work[playerid]);//start_work
	cache_get_value_index_int(0,66,p_info[playerid][pGunSkill][0]); //pSDPistol
	cache_get_value_index_int(0,67,p_info[playerid][pGunSkill][1]); //pDesertEagle
	cache_get_value_index_int(0,68,p_info[playerid][pGunSkill][2]); //pShotGun
	cache_get_value_index_int(0,69,p_info[playerid][pGunSkill][3]); //pMP5
	cache_get_value_index_int(0,70,p_info[playerid][pGunSkill][4]); //pAK47
	cache_get_value_index_int(0,71,p_info[playerid][pGunSkill][5]); //pM4
	cache_get_value_index_int(0,25,p_info[playerid][pChar]); //pChar
	cache_get_value_index_int(0,26,p_info[playerid][pModel]); //pModel
	cache_get_value_index_int(0,27,p_info[playerid][pPnumber]); //pPnumber
	cache_get_value_index_int(0,28,p_info[playerid][pPayDayHad]); //pPayDayHad
	cache_get_value_index_int(0,29,p_info[playerid][pWarns]); //pWarns
	cache_get_value_index_int(0,30,p_info[playerid][punWarnstime]); //punWarnstime
	cache_get_value_index_int(0,31,p_info[playerid][pVerevka]); //pVerevka
	cache_get_value_index_int(0,32,p_info[playerid][pOtmbI4ka]); //pOtmbI4ka
	cache_get_value_index_int(0,34,p_info[playerid][pMuteTime]); //pMuteTime
	cache_get_value_name_int(0, "pRMuteTime",p_info[playerid][pRMuteTime]); //pRMuteTime
	cache_get_value_index_int(0,35,p_info[playerid][pMobile]); //pMobile
	cache_get_value_index_int(0,38,p_info[playerid][pZakonp]); //pZakonp
	cache_get_value_index_int(0,60,p_info[playerid][pProz]); //pProz
	cache_get_value_index_int(0,75,p_info[playerid][pProz2]); //pProz2
	cache_get_value_index_int(0,41,p_info[playerid][pWanted]); //pWanted
	cache_get_value_index_int(0,55,p_info[playerid][pSpawn]); //pSpawn
	cache_get_value_index_int(0,40,p_info[playerid][pMestoJail]); //pMestoJail
	cache_get_value_index_int(0,51,p_info[playerid][pAvig]); //pAvig
	cache_get_value_index_int(0,56,p_info[playerid][pPoint]); //pPoint
	cache_get_value_index_int(0,82,p_info[playerid][pVipCar]); //pVipCar
	cache_get_value_index_int(0,84,p_info[playerid][pRoom]); //pRoom
	cache_get_value_index_int(0,85,p_info[playerid][pFloor]); //pFloor
	cache_get_value_index_int(0,73,p_info[playerid][pFamily]); //family
	cache_get_value_index_int(0,58,p_info[playerid][pRouble]); //pRouble
	cache_get_value_index_int(0,76,p_info[playerid][pTempKey]); //pTempKey
	cache_get_value_index_int(0,77,p_info[playerid][pPatron]); //pPatron
	cache_get_value_index_int(0,90,p_info[playerid][pSalary]); //pSalary
	cache_get_value_index_int(0,89,p_info[playerid][pAge]); //pAge
	cache_get_value_index_int(0,88,p_info[playerid][pNation]); //pNation
	cache_get_value_index_int(0,87,p_info[playerid][pModelPhone]); //pModelPhone
	cache_get_value_index_int(0,93,p_info[playerid][pStats][1]); //pStats1
	cache_get_value_index_int(0,94,p_info[playerid][pStats][2]); //pStats2
	cache_get_value_index_int(0,95,p_info[playerid][P_Style][0]);//P_Style0
	cache_get_value_index_int(0,96,p_info[playerid][P_Style][1]);//P_Style1
	cache_get_value_index_int(0,97,p_info[playerid][P_Style][2]);//P_Style2
	cache_get_value_index_int(0,98,p_info[playerid][p_veh_number][0]);//p_veh_number0
	cache_get_value_index_int(0,99,p_info[playerid][p_veh_number][1]);//p_veh_number1
	cache_get_value_index_int(0,102,p_info[playerid][p_plane_color][0]);//p_plane_color
	cache_get_value_index_int(0,103,p_info[playerid][p_plane_color][1]);//p_plane_color2
	cache_get_value_index_int(0,105,p_info[playerid][p_boat_color][0]);//p_boat_color
	cache_get_value_index_int(0,106,p_info[playerid][p_boat_color][1]);//p_boat_color2
	cache_get_value_index_int(0,107,p_info[playerid][Disease][0]);//Disease0
	cache_get_value_index_int(0,108,p_info[playerid][Disease][1]);//Disease1
	cache_get_value_index_int(0,109,p_info[playerid][Disease][2]);//Disease2
	cache_get_value_index_int(0,101,p_info[playerid][p_plane]); //p_plane
	cache_get_value_index_int(0,104,p_info[playerid][p_boat]); //p_boat
	cache_get_value_index_int(0,110,p_info[playerid][pSetWalk]); //pSetWalk
	cache_get_value_index_int(0,111,p_info[playerid][pSetAnim]); //pSetAnim
	cache_get_value_index_int(0,128,p_info[playerid][pSpining]); //pSpining
	cache_get_value_index_int(0,129,p_info[playerid][pWorms]); //pWorms
	cache_get_value_index_int(0,130,QuestStep[0][playerid]);//quest_step_0
	cache_get_value_index_int(0,131,QuestStep[1][playerid]);//quest_step_1
	cache_get_value_index_int(0,132,QuestStep[2][playerid]);//quest_step_2
	cache_get_value_index_int(0,133,QuestStep[3][playerid]);//quest_step_3
	cache_get_value_index_int(0,134,QuestStep[4][playerid]);//quest_step_4
	cache_get_value_index_int(0,135,QuestStep[5][playerid]);//quest_step_5
	cache_get_value_index_float(0,126,p_info [ playerid ] [ p_car_fuel ][ 0 ]);//p_car_fuel_0
	cache_get_value_index_float(0,127,p_info [ playerid ] [ p_car_fuel ][ 1 ]);//p_car_fuel_1
	cache_get_value_index_int(0,120,p_info [ playerid ] [ p_f_mute ]);//p_f_mute
	cache_get_value_index_int(0,78,p_info[playerid][pMed]);//pMed
	cache_get_value_index_int(0,79,p_info[playerid][pSubLeader]);//pSubLeader
	cache_get_value_index_int(0,145,p_info[playerid][pArmours]);//pArmours
	cache_get_value_index_int(0,146,p_info[playerid][pKanistra]);//pKanistra
	cache_get_value_index_int(0,147,p_info[playerid][pDee]);//pDee
	cache_get_value_index_int(0,136, quest_amount_lesopilka[playerid]);//quest_amount_lesopilka
	cache_get_value_index_int(0,137, quest_amount_bus[playerid]);//quest_amount_bus
	cache_get_value_index_int(0,138, quest_amount_taxi[playerid]);//quest_amount_taxi
	cache_get_value_index_int(0,139, quest_amount_prod[playerid]);//quest_amount_prod
	cache_get_value_index_int(0,140, quest_amount_miner[playerid]);//quest_amount_miner
	cache_get_value_index_int(0,141, quest_amount_garden[playerid]);//quest_amount_garden
	cache_get_value_index_int(0,142, quest_amount_farm[playerid]);//quest_amount_farm
	cache_get_value_index_int(0,142, advert_count[playerid]);//advert_count
	cache_get_value_index_int(0,72,house_cash);//pHouseCash
	cache_get_value_index_int(0,80,golos);//pGolos
	cache_get_value_index_int(0,81,dj);//DJ
	cache_get_value_index_int(0,153,p_info[playerid][pHeadValue]);//pHeadValue
	cache_get_value_index_int(0,156,p_info[playerid][pCHits]);//pCHits
	cache_get_value_index_int(0,157,p_info[playerid][pFHits]);//pFHits
	cache_get_value_index_int(0,160,p_info[playerid][pEat]);//pEat
	cache_get_value_index_int(0,161,p_info[playerid][pBombs]);//pBombs
	cache_get_value_index_int(0,164,p_info[playerid][pFeFinder]);//pFeFinder
	cache_get_value_index_int(0,165,p_info[playerid][pNewYear]);//pFeFinder
	//========================[ загрузка строк ]========================
	cache_get_value_index(0,33,p_info[playerid][pMarried], 40);//pMarried
	cache_get_value_index(0,112,l_guns, 56);//p_guns
	cache_get_value_index(0,113,l_ammo, 56);//p_ammo
	cache_get_value_index(0,115,gPlayerTuning[playerid][0], 74);//cVehcom
	cache_get_value_index(0,116,gPlayerTuning[playerid][1], 74);//cVehcom2
	cache_get_value_index(0,117,get_name_store, 240);//nick_history
	cache_get_value_index(0,43,ipreg, 17);//pIpReg
	cache_get_value_index(0,45,Email[playerid], 65);//pEmail
	cache_get_value_index(0,57,Scode, 100);//SCode
	cache_get_value_index(0,83,str1, 101);//EPLAYER
	cache_get_value_index(0,118,HelperStat[playerid], 64);//helper_stats
	cache_get_value_index(0,119,Lic[playerid], 64);//licenses
	cache_get_value_index(0,143,date_password[playerid], 64);//date_password
	cache_get_value_index(0,121,l_acc[0], 64);//acc_player_0
	cache_get_value_index(0,122,l_acc[1], 64);//acc_player_1
	cache_get_value_index(0,123,l_acc[2], 64);//acc_player_2
	cache_get_value_index(0,124,l_acc[3], 64);//acc_player_3
	cache_get_value_index(0,125,l_acc[4], 64);//acc_player_4
	cache_get_value_index(0,148,trunk_guns, 90);//TrunkGuns0
	cache_get_value_index(0,154,p_info[playerid][pContractDetail], 32);//pContractDetail
	cache_get_value_index(0,155,p_info[playerid][pContractBy], 24);//pContractBy
	sscanf(trunk_guns,"p<|>s[10]s[10]s[10]s[10]s[10]s[10]s[10]s[10]s[10]",trunk_guns_set[0],trunk_guns_set[1],trunk_guns_set[2],trunk_guns_set[3],trunk_guns_set[4],trunk_guns_set[5],trunk_guns_set[6],trunk_guns_set[7],trunk_guns_set[8]);
	for(new j = 0; j < 9; j++) sscanf(trunk_guns_set[j],"p<,>ii",p_info[playerid][pTrunkGun1][j],p_info[playerid][pTrunkAmmo1][j]);
	cache_get_value_index(0,149,trunk_guns, 90);//TrunkGuns1
	sscanf(trunk_guns,"p<|>s[10]s[10]s[10]s[10]s[10]s[10]s[10]s[10]s[10]",trunk_guns_set[0],trunk_guns_set[1],trunk_guns_set[2],trunk_guns_set[3],trunk_guns_set[4],trunk_guns_set[5],trunk_guns_set[6],trunk_guns_set[7],trunk_guns_set[8]);
	for(new j = 0; j < 9; j++) sscanf(trunk_guns_set[j],"p<,>ii",p_info[playerid][pTrunkGun2][j],p_info[playerid][pTrunkAmmo2][j]);
	cache_get_value_index(0,150,trunk_guns, 90);//TrunkData0
	sscanf(trunk_guns,"p<,>iiiiii",p_info[playerid][pTrunkMoney][0],p_info[playerid][pTrunkDrugs][0],p_info[playerid][pTrunkMats][0],p_info[playerid][pTrunkArmours][0],p_info[playerid][pTrunkKanistra][0],p_info[playerid][pTrunkDee][0]);
	cache_get_value_index(0,151,trunk_guns, 90);//TrunkData1
	sscanf(trunk_guns,"p<,>iiiiii",p_info[playerid][pTrunkMoney][1],p_info[playerid][pTrunkDrugs][1],p_info[playerid][pTrunkMats][1],p_info[playerid][pTrunkArmours][1],p_info[playerid][pTrunkKanistra][1],p_info[playerid][pTrunkDee][1]);
	cache_get_value_index(0,158,l_data_pos, 64);//p_car_pos_data0
	sscanf(l_data_pos,"p<,>ffffii",p_info[playerid][p_car_pos_x][0],p_info[playerid][p_car_pos_y][0],p_info[playerid][p_car_pos_z][0],p_info[playerid][p_car_pos_a][0],p_info[playerid][p_car_vw][0],p_info[playerid][p_car_int][0]);
	cache_get_value_index(0,159,l_data_pos, 64);//p_car_pos_data1
	sscanf(l_data_pos,"p<,>ffffii",p_info[playerid][p_car_pos_x][1],p_info[playerid][p_car_pos_y][1],p_info[playerid][p_car_pos_z][1],p_info[playerid][p_car_pos_a][1],p_info[playerid][p_car_vw][1],p_info[playerid][p_car_int][1]);
	//========================================================================
	cache_delete(p_info[playerid][Cache_ID]);
	p_info[playerid][Cache_ID] = MYSQL_INVALID_CACHE;
	ChangePlayerFraction(playerid, p_info[playerid][tMember], false);
	SetPVarInt(playerid,"pGolos",golos);//pGolos
	SetPVarInt(playerid,"DJ",dj);//DJ
	if ( QuestStep[5][playerid] > 0 && QuestStep[4][playerid] < 4) QuestStep[5][playerid] = 0;
	if ( QuestStep[4][playerid] > 0 && QuestStep[3][playerid] < 8) QuestStep[4][playerid] = 0;
	if ( QuestStep[3][playerid] > 0 && QuestStep[2][playerid] < 5) QuestStep[3][playerid] = 0;
	if ( QuestStep[2][playerid] > 0 && QuestStep[1][playerid] < 9) QuestStep[2][playerid] = 0;
	if ( QuestStep[1][playerid] > 0 && QuestStep[0][playerid] < 8) QuestStep[1][playerid] = 0;
	if(p_info [ playerid ] [ p_car_fuel ][ 0 ] == 0.0000) p_info [ playerid ] [ p_car_fuel ][ 0 ] = 50.0000;
	else if(p_info [ playerid ] [ p_car_fuel ][ 1 ] == 0.0000) p_info [ playerid ] [ p_car_fuel ][ 1 ] = 50.0000;
	sscanf(str1,"p<,>fffiii",e_X, e_Y, e_Z, e_Int, e_Virt, e_time);
	sscanf(HelperStat[playerid],"p<,>a<i>[4]",HelperStat[playerid]);
	sscanf(Lic[playerid],"p<,>a<i>[4]",Lic[playerid]);
	sscanf(gPlayerTuning[playerid][0], "p<,>a<i>[12]",gPlayerTuning[playerid][0]);
	sscanf(gPlayerTuning[playerid][1], "p<,>a<i>[12]",gPlayerTuning[playerid][1]);
	sscanf(get_name_store,"p<,>s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]",pNiksHistory[playerid][0],pNiksHistory[playerid][1],pNiksHistory[playerid][2],pNiksHistory[playerid][3],pNiksHistory[playerid][4],pNiksHistory[playerid][5],pNiksHistory[playerid][6],pNiksHistory[playerid][7],pNiksHistory[playerid][8],pNiksHistory[playerid][9]);
	sscanf(l_acc[0],"p<,>ifff",acc_player[playerid][acc_object_id][0],acc_player[playerid][acc_object_x][0],acc_player[playerid][acc_object_y][0],acc_player[playerid][acc_object_z][0]);
	sscanf(l_acc[1],"p<,>ifff",acc_player[playerid][acc_object_id][1],acc_player[playerid][acc_object_x][1],acc_player[playerid][acc_object_y][1],acc_player[playerid][acc_object_z][1]);
	sscanf(l_acc[2],"p<,>ifff",acc_player[playerid][acc_object_id][2],acc_player[playerid][acc_object_x][2],acc_player[playerid][acc_object_y][2],acc_player[playerid][acc_object_z][2]);
	sscanf(l_acc[3],"p<,>ifff",acc_player[playerid][acc_object_id][3],acc_player[playerid][acc_object_x][3],acc_player[playerid][acc_object_y][3],acc_player[playerid][acc_object_z][3]);
	sscanf(l_acc[4],"p<,>ifff",acc_player[playerid][acc_object_id][4],acc_player[playerid][acc_object_x][4],acc_player[playerid][acc_object_y][4],acc_player[playerid][acc_object_z][4]);
	SetPVarFloat(playerid, "e_X", e_X);
	SetPVarFloat(playerid, "e_Y", e_Y);
	SetPVarFloat(playerid, "e_Z", e_Z);
	SetPVarInt(playerid, "e_Int", e_Int);
	SetPVarInt(playerid, "e_Virt", e_Virt);
	SetPVarInt(playerid, "e_time", e_time);
	if(strcmp(Scode, "0")) SetPVarString(playerid,"SCode", Scode);
	SetPVarString(playerid,"pIpReg",ipreg);
	UpdatePlayerLevel(playerid);
	if ( biz_war_gangzone != -1 ) GangZoneShowForPlayer ( playerid, biz_war_gangzone, GetColor( MZInfo [ bFrakVlad ] ) ) ;
	if(house_cash>0)
	{
		format(stringer, 144, "[ИНФОРМАЦИЯ] {ffffff}Вам возвращены деньги за дом {"#cGRAY"}(%d$)",house_cash);
		SCM(playerid,CORANGE,stringer);
		TransferMoney(playerid,p_info[playerid][pCash]+house_cash,house_cash,"возвращены деньги за дом");
		p_info[playerid][pCash] += house_cash;
		UpdateMoney(playerid);
		UpdatePlayerData(playerid,"pHouseCash",0);
	}
	if ( p_info[playerid][pRoom] > 0 ){
		if( strcmp(gRoomOwner[p_info[playerid][pFloor] - 1][p_info[playerid][pRoom] - 1], NamePlayer[playerid]) ) {
			p_info[playerid][pFloor]=0;
			p_info[playerid][pRoom]=0;
			UpdatePlayerData(playerid,"pFloor",0);
			UpdatePlayerData(playerid,"pRoom",0);
		}
	}
	bl_info [ playerid ] [ bl_is_killed ] = false ;
	bl_info [ playerid ] [ bl_finder ] = INVALID_PLAYER_ID ;
	bl_info [ playerid ] [ bl_observe ] = INVALID_PLAYER_ID ;
	if ( p_info[playerid][tMember] != 0 )
	{
		if (strcmp(f_info [ p_info[playerid][tMember] ] [ f_message ], "None", true) )
		{
			format(stringer,144,"[F]: %s", f_info [ p_info[playerid][tMember] ] [ f_message ]);
			SendClientMessage(playerid,CNRED,stringer);
		}
	}


	new sql_string [ 128 ] ;
	format ( sql_string, sizeof ( sql_string ), "SELECT * FROM `fraction_bl` WHERE `f_bl_accused` = '%s'", NamePlayer [ playerid ] ) ;
	mysql_pquery(connects, sql_string, "bl_loading_callback", "i", playerid );
	if(p_info[playerid][pHouse] > 0)
	{
		if (strcmp(gHouses[p_info[playerid][pHouse]][houseOwner], NamePlayer[playerid]))
		{
			p_info[playerid][pHouse] = 0;
			for(new i = 1; i < TotalHouse; i++)
			{
				if (!strcmp(gHouses[i][houseOwner], NamePlayer[playerid], true) && strcmp(gHouses[i][houseOwner], "The State", true) && strlen(gHouses[i][houseOwner])>0)
				{
					if(p_info[playerid][pHouse] != i)
					{
						format(stringer, 512, "[HOUSE-RETURN]: Вернули дом %s ( до: %d , после: %d, id_house: (до: %d, после: %d))", NamePlayer[playerid], p_info[playerid][pHouse], i, gHouses[p_info[playerid][pHouse]][hID],gHouses[i][hID]);
						WriteHouseLog(NamePlayer[playerid], stringer);
						p_info[playerid][pHouse] = i ;
						break;
					}
				}
			}
			UpdatePlayerData(playerid,"pPhousekey", p_info[playerid][pHouse]);
		}
	}
	else if(p_info[playerid][pHouse] == 0)
	{
		for(new i = 1; i < TotalHouse; i++)
		{
			if (!strcmp(gHouses[i][houseOwner], NamePlayer[playerid], true) && strcmp(gHouses[i][houseOwner], "The State", true) && strlen(gHouses[i][houseOwner])>0)
			{
				format(stringer, 144, "[HOUSE-RETURN]: Вернули дом %s ( до: %d , после: %d, id_house: (до: %d, после: %d))", NamePlayer[playerid], p_info[playerid][pHouse], i, gHouses[p_info[playerid][pHouse]][hID],gHouses[i][hID]);
				WriteHouseLog(NamePlayer[playerid], stringer);
				p_info[playerid][pHouse] = i ;
				UpdatePlayerData(playerid,"pPhousekey", p_info[playerid][pHouse]);
				break;
			}
		}
	}
	
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT * FROM `online_player` WHERE `date` >= CURDATE() AND `accountid` = '%d'", p_info[playerid][pID]);
	mysql_pquery ( connects, mysql_query_string , "load_online_today" , "i" , playerid ) ;

	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT * FROM `online_player` WHERE `date` = CURDATE() - 1 AND `accountid` = '%d'", p_info[playerid][pID]);
	mysql_pquery ( connects, mysql_query_string , "load_online_yesterday" , "i" , playerid ) ;


	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT * FROM `online_player` WHERE `date` = CURDATE() - 2 AND `accountid` = '%d'", p_info[playerid][pID]);
	mysql_pquery ( connects, mysql_query_string , "load_online_before" , "i" , playerid ) ;
	
	if(p_info[playerid][pCash] <= 0) p_info[playerid][pCash]=300;
	UpdateMoney(playerid);
	if(p_info[playerid][pTempKey] > 0 && p_info[playerid][pHouse] > 0)
	{
		UpdatePlayerData ( playerid , "pPhousekey", p_info[playerid][pHouse] ) ;
		p_info[playerid][pTempKey] = 0;
	}
	DeletePVar(playerid,"connecttime");
	if(p_info[playerid][pJailTime] < 0) p_info[playerid][pJailTime] = 0;
	if(p_info[playerid][tLeader] > 0 && p_info[playerid][tMember] > 0)
	{
		if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1])
		{
			p_info[playerid][tRank] = FractionRank[p_info[playerid][tMember]-1];
			UpdatePlayerData(playerid,"tRank",p_info[playerid][tRank]);
		}
	}
	mysql_query_string[0] = EOS;
	if(GetPVarInt(playerid,"table_ban") == 0 && IsPlayerAuthorized(playerid) == PLAYER_OFFLINE)
	{
		format(mysql_query_string, 128, "SELECT * FROM `table_ban` WHERE `Name_Player` = '%s' LIMIT 1", NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "Check_Ban_List", "dsd", playerid,NamePlayer[playerid],2);
		//return 1;
	}
	AC_TogglePlayerControllable(playerid,false);
	for(new i=0; i<CountBusiness; i++)
	{
		if(!strcmp(Business[i][Owner], NamePlayer[playerid],true))
		{
			if(p_info[playerid][pPbiskey]!=i+1)
			{
				p_info[playerid][pPbiskey]=i+1;
				UpdatePlayerData(playerid,"pPbiskey",i+1);
				break;
			}
		}
	}
	DeletePVar(playerid,"Check_Code");
	if(p_info[playerid][pPbiskey] > 0)
	{
		if(!strcmp(Business[p_info[playerid][pPbiskey]-1][Owner], NamePlayer[playerid],true))
		{
			format(stringer,128,"Вы являетесь владельцем бизнеса: %s", Business[p_info[playerid][pPbiskey]-1][BizName]);
			SendClientMessage(playerid,0x269BD8FF,stringer);
			SendClientMessage(playerid,0x269BD8FF,"Управление бизнесом: {"#cWHITE"}/business");
		}
	}
	new mysql_load_jm[200];
	if(p_info[playerid][pJailTime] > 0)
	{
		mysql_format ( connects, mysql_load_jm,200,"SELECT `Admin_Jail`,`Reason_Jail`,`time` FROM  `get_jail_or_mute` WHERE  `id_account` =  '%d' ORDER BY `id` DESC LIMIT 1",p_info[playerid][pID]);
		mysql_pquery(connects, mysql_load_jm, "get_jail_info", "i", playerid) ;
	}
	if(p_info[playerid][pMuteTime] > 0)
	{
		mysql_format ( connects, mysql_load_jm,200,"SELECT `Admin_Mute`,`Reason_Mute`,`time` FROM  `get_jail_or_mute` WHERE  `id_account` =  '%d' ORDER BY `id` DESC LIMIT 1",p_info[playerid][pID]);
		mysql_pquery(connects, mysql_load_jm, "get_mute_info", "i", playerid) ;
	}
	if(p_info[playerid][pWarns] > 0)
	{
		if(p_info[playerid][punWarnstime] > unix)
		{
			format(stringer,128,"[Внимание]: {"#cWHITE"}У вас {"#cRED"}%d{"#cWHITE"} предупреждени%s. Дата снятия предупреждений: {"#cRED"}%s",p_info[playerid][pWarns],(p_info[playerid][pWarns]<1) ? ("е"):("я"),date("%dd/%mm/%yyyy в %hh:%ii",p_info[playerid][punWarnstime]));
			SendClientMessage(playerid,CRED,stringer);
		}
		if(p_info[playerid][punWarnstime] <= unix)
		{
			SendSucc(playerid, "Варн был снят");
			p_info[playerid][punWarnstime] = 0;
			p_info[playerid][pWarns] = 0;
			UpdatePlayerData(playerid, "pWarns", 0);
			UpdatePlayerData(playerid, "punWarnstime", 0);
		}
		mysql_format ( connects, mysql_load_jm,200,"SELECT `Admin_Warn`,`Reason_Warn`,`time` FROM  `get_jail_or_mute` WHERE  `id_account` =  '%d' ORDER BY `id` DESC LIMIT 1",p_info[playerid][pID]);
		mysql_pquery(connects, mysql_load_jm, "get_warn_info", "i", playerid) ;
	}
	format(mysql_query_string, 128, "UPDATE `accounts` SET `pOnline` = '%d' WHERE `tName` = '%s' LIMIT 1",playerid, NamePlayer[playerid]);
	mysql_pquery(connects, mysql_query_string, "", "");
	format(mysql_query_string,200,"UPDATE `accounts` SET `pGetonDate` = '%d-%s%d-%s%d %02d:%02d:%02d', `pGetonIP` = '%s' WHERE `tName` = '%s' LIMIT 1",tmpday, ((tmpmonth < 10) ? ("0") : ("")), tmpmonth, (tmpyear < 10) ? ("0") : (""), tmpyear, tmphour, tmpminute, tmpsecond, PlayerIp[playerid],NamePlayer[playerid]);
	mysql_pquery(connects, mysql_query_string, "", "");
	if(p_info[playerid][pDonateRank] > 0) 	SCM(playerid, 0xeac700aa,"Здравствуйте VIP игрок!");
	format(stringer,128,"~w~welcome~n~~b~~h~%s",NamePlayer[playerid]);
	GameTextForPlayer(playerid, stringer, 5000, 1);
	if( p_info[playerid][pHouse] > 0 )
	{
		SetVehicleToHouse(playerid,1);
		SetVehicleToHouse(playerid,2);
	}
	if(strfind(Email[playerid], "@", false) == -1 || strfind(Email[playerid], ".", false) == -1)
	{
		new podemail[34], podip[34], passwordlevel[29];
		if(strfind(Email[playerid], "@", false) != -1 || strfind(Email[playerid], ".", false) != -1) podemail = "{00dd35}Подтвержден";
		else podemail = "{f64c06}Не подтвержден";
		if(p_info[playerid][pCheckKey] != 0) podip = "{00dd35}Активирована{ffffff}";
		else podip = "{f64c06}Не активирована{ffffff}";
		if(strlen(UserKey[playerid]) > 8) passwordlevel = "{00dd35}Надежный{ffffff}";
		else passwordlevel = "{f64c06}Не надежный{ffffff}";
		format(stringer, 185, "{FFFFFF}Внимание! Ваш аккаунт под угрозой взлома!\n\n\nПароль: %s\n\nЗащита по IP-адресу: %s\n\nЭлектронный адрес: %s", passwordlevel, podip, podemail);
		ShowPlayerDialog(playerid, 8005, DIALOG_STYLE_MSGBOX, "Безопасность", stringer, "Скрыть", "Настроить");
	}
	CreateEatTextDraw(playerid);
	SendClientMessage(playerid,0x339999AA,"Добро пожаловать на "PROJECT_NAME);
	if(BONUS_PAYDAY) SendClientMessage(playerid, 0x73B461FF, "[Акция!] "newblue"Каждый час +4 exp и зарплата. {AFAFAF}(( Зови друзей и мы удвоим твоё количество exp ))");
	SendClientMessage(playerid,CGREEN, "Приобрести админ-права можно по низким ценам уже сегодня: {"#cWHITE"}"PROJECT_WEBSITE" > Магазин");
	if(p_info[playerid][pProz] <= 0) p_info[playerid][pProz] = 0;
	if(p_info[playerid][pProz2] <= 0) p_info[playerid][pProz2] = 0;
	if(GetPVarInt(playerid,"table_ban") == 1) DeletePVar(playerid,"table_ban");
	SetPlayerSkills(playerid);
	GangZoneShowForPlayer(playerid, Army, 0xCF4F2DBB);
	new g_data[ 13 ], a_data [ 13 ] ;
	sscanf ( l_guns, "p<,>a<i>[13]", g_data ) ;
	sscanf ( l_ammo, "p<,>a<i>[13]", a_data ) ;
	for ( new i ; i < 13 ; i ++ )
	{
		GunPlayer [ playerid ] [ i ] [ 0 ] = g_data [ i ] ;
		GunPlayer [ playerid ] [ i ] [ 1 ] = a_data [ i ] ;
	}
	SetPlayerAuthorized(playerid, PLAYER_ONLINE);
	if(strcmp(Scode,"0",false) && !GetPVarInt(playerid,"Check_Code") && strlen(Scode) > 1) ShowPlayerDialog(playerid, dEnterCode, DIALOG_STYLE_PASSWORD, "Безопасность", "Пожалуйста Используйте защитный код:", "Далее", "Отмена");
	else if((GetPVarFloat(playerid,"e_X")!=CameraPosJoin[0][2][0] && GetPVarFloat(playerid,"e_X")!=CameraPosJoin[1][2][0] && GetPVarFloat(playerid,"e_X")!=CameraPosJoin[2][2][0]) && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0) ShowPlayerDialog(playerid, dEPLAYER, DIALOG_STYLE_MSGBOX, ""ORG"Вернуться", "{"#cWHITE"}Вы хотите вернуться на ту позицию, где вы вышли из игры?", "Да", "Нет");
	else
	{
		// SetSpawnInfoEx(playerid, p_info[playerid][pModel], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] );
		SpawnPlayer(playerid);
	}
	DeletePVar(playerid,"Logged");
	DeletePVar(playerid,"request_use");
	LoadBankAccount(playerid);

    for(new i, s = 0; i < MAX_PLAYERS; i++)
	{
	    if(!strlen(actor_exit_name[i])) continue;
		if(!strcmp(actor_exit_name[i], NamePlayer[playerid], true))
		{
		    for(new g = 0 ; g < 100; g++)
			{
				if(gTempBot[g] == -1 || gTempBot[g] != actor_exit_id[i]) continue;
				DestroyDynamic3DTextLabel(gTempBotText[g]);
				DestroyActor(gTempBot[g]);
				gTempBot[g] = -1;
			 	actor_exit_id[i] = -1;
			 	actor_exit_name[i][0] = '\0';
			 	s++;
			 	break;
			}
		}
		if(s) break;
	}
	
	return 1;
}

stock IsIpFound(const text[])
{
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}


public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	print ("[SQL] OnQueryError");
	printf("[SQL] errorid: %d", errorid);
	printf("[SQL] error: %s", error);
	printf("[SQL] callback: %s", callback);
	printf("[SQL] query: %d", query);
	return true;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

//Альтернативные команды
ALT:prison:jail;
/*CMD:mskip(playerid,params[])
{
	if(p_info[playerid][tMember] == 7)
	{
		if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,COLOR_GREY,"/mskip [id игрока]");
		if(GetPlayerInterior(params[0]) != 3) return SendClientMessage(playerid,COLOR_GREY,"Игрок должен находится в здании мэрии");
		if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");

		format(stringer,128,"Вам выдал пропуск на верхний этаж сотрудник мэрии %s",NamePlayer[playerid]);
		SendClientMessage(params[0],CBLUE,stringer);
		format(stringer,128,"Вы выдали пропуск на верхний этаж гражданину %s",NamePlayer[params[0]]);
		SendClientMessage(playerid,CBLUE,stringer);

		SetPVarInt(playerid,"mskip",true);
	}
	return 1;
}*/

CMD:mleave(playerid,params[])
{
	if(p_info[playerid][tMember] == F_DEPJUST)
	{
		if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,COLOR_GREY,"/mleave [id игрока]");
		if(GetPlayerInterior(params[0]) != 3) return SendClientMessage(playerid,COLOR_GREY,"Игрок должен находится в здании мэрии");
		if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");

		SetPlayerInterior(params[0],0);
		SetPlayerVirtualWorld(params[0], 0);
		AC_SetPlayerPos(params[0],1481.4224,-1768.7247,18.7958);
		SetPlayerFacingAngle(params[0], 2.5878);

		format(stringer,128,"Вас выставил за дверь мэрии сотрудник %s",NamePlayer[playerid]);
		SendClientMessage(params[0],CBLUE,stringer);
		format(stringer,128,"Вы выставили игрока %s за дверь мэрии",NamePlayer[params[0]]);
		SendClientMessage(playerid,CBLUE,stringer);

		SetPVarInt(playerid,"mleave",unix);
	}
	return 1;
}

CMD:fakepass(playerid,params[])
{
	if(p_info[playerid][tMember] != F_FBI && p_info[playerid][tMember] != F_HITMAN && p_info[playerid][tMember] != F_PMC) return SendClientMessage(playerid,COLOR_GREY,"Вам недоступна данная команда");
	if(sscanf(params,"i",params[0]))
	{
		SendClientMessage(playerid,COLOR_GREY,"/fakepass [id фракции]");
		SendClientMessage(playerid,COLOR_GREY,"1 - Hostage Rescue Team | 2 - Police Department | 3 - San Andreas Sheriff Department | 4 - A.R.G.U.S. | 5 - Русская Мафия");
		SendClientMessage(playerid,COLOR_GREY,"6 - Yakuza | 7 - La Cosa Nostra | 8 - Grove Street");
		SendClientMessage(playerid,COLOR_GREY,"9 - The Vagos | 10 - The Ballas | 11 - The Rifa | 12 - The Aztecas | 13 - Гражданский");
		SendClientMessage(playerid,COLOR_GREY,"0 - Вернуть свой настоящий паспорт");
		return 1;
	}
	else
	{
		if(params[0] == 0)
		{
			SendClientMessage(playerid,-1,"Вы вернули свой настоящий паспорт");
			DeletePVar(playerid,"fakepass");
			return 1;
		}
		if(params[0] < 0 || params[0] > 13)
		{
			SendClientMessage(playerid,COLOR_GREY,"/fakepass [id фракции]");
			SendClientMessage(playerid,COLOR_GREY,"1 - SWAT | 2 - Police Department | 3 - San Andreas Sheriff Department | 4 - A.R.G.U.S. | 5 - Русская Мафия");
			SendClientMessage(playerid,COLOR_GREY,"6 - Yakuza | 7 - La Cosa Nostra | 8 - Grove Street");
			SendClientMessage(playerid,COLOR_GREY,"9 - The Vagos | 10 - The Ballas | 11 - The Rifa | 12 - The Aztecas | 13 - Гражданский");
			return 1;
		}

		new rankid_frac = 0;
		switch(params[0])
		{
			case 1: 	rankid_frac = 25;
			case 2: 	rankid_frac = 1;
			case 3: 	rankid_frac = 21;
			case 4: 	rankid_frac = 10;
			case 5: 	rankid_frac = 14;
			case 6: 	rankid_frac = 6;
			case 7: 	rankid_frac = 5;
			case 8: 	rankid_frac = 15;
			case 9: 	rankid_frac = 13;
			case 10: 	rankid_frac = 12;
			case 11: 	rankid_frac = 18;
			case 12: 	rankid_frac = 17;
			case 13: 	rankid_frac = 0;
		}

		format(stringer,128,"Вы подделали паспорт под фракцию: %s",f_info[rankid_frac][f_name]);
		SendClientMessage(playerid,-1,stringer);
		SetPVarInt(playerid,"fakepass",params[0]);
	}
	return 1;
}

forward DropSpikes(playerid);
public DropSpikes(playerid)
{
	if(IsValidObject(ObjectShip[playerid])) DestroyObject(ObjectShip[playerid]);
	new PlayerState = GetPlayerState(playerid);
	if(PlayerState != PLAYER_STATE_DRIVER) return 1;
	new Float:X,Float:Y,Float:Z,Float:A, vehicleid = GetPlayerVehicleID(playerid);
	GetVehiclePos(vehicleid, X, Y, Z);
	GetVehicleZAngle(vehicleid, A);

	X -= (3.0 * floatsin(-A, degrees));
	Y -= (3.0 * floatcos(-A, degrees));
	Z -= 0.5;

	ObjectShip[playerid] = CreateObject(2899, X, Y, Z, 0, 0, A - 90.0);
	SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
	format(stringer,128,"Установил шипы: %s(%i)",NamePlayer[playerid],playerid);
	ShipText[playerid] = CreateDynamic3DTextLabel(stringer,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
	return 1;
}

CMD:spikes(playerid)
{
	if(!IsACop(playerid) || IsACop(playerid) && p_info[playerid][tRank] < 5 && p_info[playerid][tMember] != F_JTTF || p_info[playerid][tMember] == F_FBI) return SCM(playerid,CWHITE, "Вам недоступна эта команда.");
	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	if(GetPlayerInterior(playerid) != 0) return 1;
	if(StartWork(playerid) &&  !start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	new PlayerState = GetPlayerState(playerid);
	if(PlayerState != PLAYER_STATE_ONFOOT && PlayerState != PLAYER_STATE_DRIVER) return SCM(playerid, CWHITE, "Нельзя использовать в машине.");
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	if(!GetPVarInt(playerid,"block"))
	{
		if(PlayerState == PLAYER_STATE_ONFOOT)
		{
			format(stringer,128,"Установил шипы: %s(%i)",NamePlayer[playerid],playerid);
			ShipText[playerid] = CreateDynamic3DTextLabel(stringer,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
			SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
			FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1);
		}
		if(ObjectShip[playerid] == INVALID_OBJECT)
		{
			ObjectShip[playerid] = CreateObject(2899, X, Y, Z-0.8, 0, 0, ANGLE, 500.0);
			if(PlayerState == PLAYER_STATE_DRIVER)
			{
				AttachObjectToVehicle(ObjectShip[playerid], GetPlayerVehicleID(playerid), 0.0, -2.2, -0.3, 0.0, 0.0, 90.0);
				SetTimerEx("DropSpikes", 5000, 0, "i", playerid);
			}
		}
		SetPVarInt(playerid,"block", true);
		SCM(playerid, 0x07f6b3FF, "Вы установили шипы новейшей технологии. Они имеют радиуправляемый интерфейс.");
		SCM(playerid, 0x07f6b3FF, "Этот интерфейс даёт возможность деактивировать шипы на приличном расстоянии от них. (/spikes)");

	}
	else
	{
		if(PlayerState==PLAYER_STATE_ONFOOT)
		{
			DestroyDynamic3DTextLabel(ShipText[playerid]);
			if(ObjectShip[playerid] != INVALID_OBJECT)
			{
				DestroyObject(ObjectShip[playerid]);
				ObjectShip[playerid] = INVALID_OBJECT;
			}
			DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
			DeletePVar(playerid,"block");
			DeletePVar(playerid,"Ships");
			SCM(playerid, COLOR_GREY, "Шипы деактивированы");
		}
		else SCM(playerid,COLOR_GREY,"Недоступно в машине");
	}
	return 1;
}

CMD:offhelper(playerid,params[])
{
	if(SELECT_SERVER == 2) return 1;
	if(p_info[playerid][tHelper] < 8 && p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAGaHelper(playerid) && !IsAFullDostup(playerid)) return 1;

	if(isnull(params)) return SendClientMessage(playerid,COLOR_GREY,"/offhelper [name]");
	else if(strlen(params) > MAX_PLAYER_NAME) return SendClientMessage(playerid,COLOR_GREY,"Слишком длинное имя");

	mysql_query_string[0] = EOS;
	format(mysql_query_string,200,"UPDATE `accounts` SET `tHelper` = '0' WHERE `tName` = '%s'", params);
	mysql_pquery(connects,mysql_query_string);

	format(mysql_query_string,128,"%s снят с хелперки в оффлайне Вами.",params[0]);
	SendClientMessage(playerid,COLOR_GREY,mysql_query_string);
	return 1;
}
//

//
CMD:prisoners(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");

	new line_string [ 60 + MAX_PLAYER_NAME];
	stringer[0] = EOS;
	new prisoners_count ;
	foreach(i)
	{
		if ( !p_info[i][pJailTime] ) continue;
		format ( line_string, sizeof ( line_string ), "{9ACD32}%s{FFFFFF} | ID: {9ACD32}%d{FFFFFF} | Время: {9ACD32}%d\n", NamePlayer [ i ], i, p_info [ i ] [ pJailTime ] ) ;
		strcat ( stringer, line_string ) ;
		prisoners_count ++ ;
	}
	if ( ! prisoners_count ) return SendClientMessage ( playerid, -1, "Заключенные не найдены!" ) ;
	ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Список заключенных", stringer, "Закрыть", "");
	return 1 ;
}
CMD:prison(playerid, params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(!uAdmin[playerid][0]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "dds[100]",params[0],params[1],params[2])) return SCM(playerid, CWHITE, "Используйте: /prison [ид] [минуты] [причина]");
	if (!IsPlayerConnected(params[0])) return SendClientMessage(playerid,-1,"Игрок не в сети");
	if(params[1] < 1 || params[1] > 180) return SCM(playerid, CWHITE, "Время от 1 минуты до 180");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}

	if(p_info[params[0]][pAdmin] > 0 && params[0] != playerid) return SCM(playerid, CWHITE, "Ошибка. Игрок администратор");
	if(p_info[params[0]][pJailTime]>0) return SCM(playerid, CWHITE, "Ошибка. Игрок в тюрьме");

	if(AntiReklama(params[2]) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /prison]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params[2]);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(params[2],Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}

	string_replace(params[2], ''', ' ') ;


	strmid(Reason__[playerid],params[2],strlen(params[2]),64);
	AC_ResetPlayerWeapons(params[0]);

	if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
	{
		p_info[params[0]][pJailTime] = params[1]*60;
		p_info[params[0]][pMestoJail] = 6;
		UpdatePlayerData(params[0],"pMestoJail",p_info[params[0]][pMestoJail]);
		UpdatePlayerData(params[0],"pJailTime",p_info[params[0]][pJailTime]);
		p_info[params[0]][pWanted] = 0;
		UpdatePlayerData(params[0],"pWanted",p_info[params[0]][pWanted]);
		GameTextForPlayer(params[0], "~w~YOU IN ~R~PRISON", 5000, 4);
		SpawnPlayer(params[0]);


		format(stringer, 200, "[A] %s[%d] посадил в тюрьму игрока %s[%d] на %d минут. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0],params[1],params[2]);
		AdmMes(CADMIN_INFO, stringer, 1);

		format(stringer, 200, "Администратор %s посадил в тюрьму игрока %s на %d минут. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1],params[2]);
		WriteLog(TYPE_LOG_JAIL,stringer);

		stringer[0] = EOS;
		format(stringer,700,"{FFFFFF}Внимание! Вас только что {AA3333}посадил администратор.\
		\n{FFFFFF}Ник администратора: {AA3333}%s\
		\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
		\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
		\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
		tmpyear, tmpmonth, tmpday, params[1]);
		strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
		\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
		ShowPlayerDialog(params[0],0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");

		Insert_Reason_Jail(p_info[params[0]][pID], NamePlayer[playerid], params[2]);

		gAdmin[playerid][ADMIN_JAIL] += 1;
	}
	else
	{
		format(stringer, 200, "[A] %s[%d] посадил в тюрьму игрока %s[%d] на %d минут. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0],params[1],params[2]);
		SendClientMessage(playerid, CADMIN_INFO, stringer);
	}

	return 1;
}

/*CMD:buysurf(playerid)
{
	SPD(playerid,BUYT_SERF,DIALOG_STYLE_MSGBOX,"{ffffff}Покупка доски для серфинга","{ffffff}Продавец: Вы хотите купить доску для серфинга за 600$?","Да","Нет");
	return 1;
}*/

/*CMD:getsurf(playerid)
{
	new Float:pos_srf[3];
	GetPlayerPos(playerid,pos_srf[0],pos_srf[1],pos_srf[2]);
	CreateSurfboard(1, pos_srf[0],pos_srf[1],pos_srf[2]+0.7, 270.0, 0.0, 180.0);
	return true;
}*/

forward WaitToCreateSurfBoard(playerid);
public WaitToCreateSurfBoard(playerid)
{
	new Float:objPos[3];
	new sbid = IsPlayerAtAnySurfboard(playerid);
	if(sbid != -1)
	{
		new isOccupied = IsSurfboardOccupied(sbid);
		if(isOccupied != INVALID_PLAYER_ID) return SCM(playerid, 0xFFFFFFFF, "Ошибочка вышла. №1");
		SurfPlayerUse[playerid] = sbid;
		GetObjectPos(surfboardData[sbid][surf_objectID], objPos[0], objPos[1], objPos[2]);
		AC_SetPlayerPos(playerid, objPos[0], objPos[1], objPos[2] + 1.0);
		SetPlayerFacingAngle(playerid, surfboardData[sbid][position][5] + 270.0);
		OnePlayAnim(playerid, "BSKTBALL", "BBALL_def_loop", 4.0, 1, 0, 0, 0, 0);
		SendClientMessage(playerid,0x73B461FF,"[Информация] {FFFFFF}Чтобы убрать сёрфборд используйте {AFAFAF} ( /unsurf )");
	}
	else SCM(playerid, 0xFFFFFFFF, "Ошибочка вышла. №2");
	return true;
}


CMD:unsurf(playerid)
{
	if(SurfPlayerUseSlot[playerid]!=-1)
	{
		RemovePlayerAttachedObject(playerid,3);
		SendClientMessage(playerid,0x73B461FF,"[Информация]{FFFFFF} Вы убрали сёрфборд.");
		Streamer_AppendArrayData(STREAMER_TYPE_OBJECT,surf_pos_id[SurfPlayerUseSlot[playerid]], E_STREAMER_WORLD_ID, 0);
		if(SurfPlayerUse[playerid] != -1)
		{
			StopSurfboard(SurfPlayerUse[playerid]);
			DestroySurfboard(SurfPlayerUse[playerid]);
			SurfPlayerUse[playerid] = -1;
		}
		SurfPlayerUseSlot[playerid]=-1;
	}
	else SCM(playerid, COLOR_GREY, "У вас нет серфборда");
	return true;
}




CMD:surf(playerid)
{
	new Float:pos_srf[3];
	if(SurfPlayerUseSlot[playerid] == -1) return SendClientMessage(playerid,-1,"У вас нет сёрфборда");
	GetPlayerPos(playerid,pos_srf[0],pos_srf[1],pos_srf[2]);
	if(pos_srf[0]>1001.16 || pos_srf[0] <123.31 || pos_srf[1] > -1878.22 || pos_srf[1] < -2004.14) return SendClientMessage(playerid,-1,"- Вы должны находиться в воде, на пляже у берега");
	if(SurfPlayerUse[playerid] == -1)
	{
		RemovePlayerAttachedObject(playerid,3);
		new id_model = Streamer_GetIntData(STREAMER_TYPE_OBJECT, surf_pos_id[SurfPlayerUseSlot[playerid]], E_STREAMER_MODEL_ID);
		new get_data_to_create = CreateSurfboard(id_model, pos_srf[0],pos_srf[1],pos_srf[2]+0.7, 270.0, 0.0, 180.0);
		printf ("id_model: %d cs: %d", id_model,get_data_to_create);
		SetTimerEx("WaitToCreateSurfBoard",1000,0,"i",playerid);
		FreezePlayerForTime(playerid,10000);
	}
	else
	{
		RemovePlayerAttachedObject(playerid,3);
		StopSurfboard(SurfPlayerUse[playerid]);
		DestroySurfboard(SurfPlayerUse[playerid]);
		SurfPlayerUse[playerid] = -1;
		ClearAnimations(playerid,1);
	}
	//SPD(playerid, D_YPRAV_SERF, DIALOG_STYLE_LIST, "Меню Серфинга", "Начать/Закончить управление доской\nУбрать доску", "Выбрать", "Отмена");
	return 1;
}

CMD:fm(playerid)
{
	ShowPlayerDialog(playerid, 1022, DIALOG_STYLE_LIST, " Radio ", "Отключить\nWorld FM", "Выбрать", "Выйти");
	return 1;
}
CMD:fmute(playerid, params[])
{
	if(!p_info[ playerid ] [ tMember]) return 1;
	else if(p_info[ playerid ] [ tRank] < FractionRank[p_info[ playerid ] [ tMember] - 1] - 1) return SendErr ( playerid, "Вы не уполномочены использовать эту команду!" ) ;

	if ( sscanf ( params, "dds[100]", params [ 0 ], params [ 1 ], params [ 2 ] ) ) return SCM(playerid, CWHITE, "Используйте: /fmute [ид] [минуты] [причина]" ) ;
	if ( params[0] == playerid) return SCM ( playerid, CWHITE, "Неверный ID" ) ;
	if ( params[1] < 1 || params[1] > 60 ) return SCM ( playerid, CWHITE, "Время от 1 минуты до 60" ) ;
	if ( p_info [ params [ 0 ] ] [ tMember ] != p_info[ playerid] [ tMember ] ) return SCM ( playerid, CWHITE, "Игрок не состоит в Вашей фракции!" ) ;


	if ( p_info[ params [ 0 ] ] [ p_f_mute ] > unix ) return SCM(playerid, CWHITE, "Игроку уже запрещено писать в чат фракции!");

	new text_string [ 128 ] ;
	format(text_string, 128, "[F] %s поставил затычку игроку %s на %i мин. Причина: %s", NamePlayer [ playerid ], NamePlayer [ params [ 0 ] ], params [ 1 ], params [ 2 ] ) ;
	SendFamilyMessage ( p_info [ playerid ] [ tMember ], 0x4682B4AA, text_string);

	p_info [ params [ 0 ] ] [ p_f_mute ] = unix + params [ 1 ] * 60 ;
	UpdatePlayerData ( params [ 0 ],"p_f_mute", p_info [ params [ 0 ] ] [ p_f_mute ] ) ;
	return 1;
}

CMD:funmute(playerid, params[])
{
	if(!p_info[ playerid ] [ tMember]) return 1;
	else if(p_info[ playerid ] [ tRank] < FractionRank[p_info[ playerid ] [ tMember]-1] - 1) return SendErr ( playerid, "Вы не уполномочены использовать эту команду!" ) ;

	if ( sscanf ( params, "d", params [ 0 ] ) ) return SCM(playerid, CWHITE, "Используйте: /funmute [ид]" ) ;
	if ( params[0] == playerid) return SCM ( playerid, CWHITE, "Неверный ID" ) ;
	if ( params[1] < 1 || params[1] > 60 ) return SCM ( playerid, CWHITE, "Время от 1 минуты до 60" ) ;
	if ( p_info [ params [ 0 ] ] [ tMember ] != p_info[ playerid] [ tMember ] ) return SCM ( playerid, CWHITE, "Игрок не состоит в Вашей фракции!" ) ;

	if ( p_info[ params [ 0 ] ] [ p_f_mute ] > unix)
	{
		new text_string [ 128 ] ;
		format(text_string, 128, "[F] %s снял затычку игроку %s", NamePlayer [ playerid ], NamePlayer [ params [ 0 ] ] ) ;
		SendFamilyMessage ( p_info [ playerid ] [ tMember ], 0x4682B4AA, text_string);

		p_info [ params [ 0 ] ] [ p_f_mute ] = 0 ;
		UpdatePlayerData ( params [ 0 ],"p_f_mute", p_info [ params [ 0 ] ] [ p_f_mute ] ) ;
	}
	return 1;
}


CMD:mute(playerid, params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 1 && p_info[playerid][tHelper] < 4) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(!uAdmin[playerid][1]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "dds[100]",params[0],params[1],params[2])) return SCM(playerid, CWHITE, "Используйте: /mute [ид] [минуты] [причина]");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Неверный ID");
	if (!IsPlayerConnected(params[0])) return SendClientMessage(playerid,-1,"Игрок не в сети");
	if(params[1] < 1 || params[1] > 60) return SCM(playerid, CWHITE, "Время от 1 минуты до 60");
	if(p_info[params[0]][pAdmin] > 0 && params[0] != playerid) return SCM(playerid, CWHITE, "Ошибка. Игрок администратор");
	if(p_info[params[0]][pMuteTime] > 0) return SCM(playerid, CWHITE, "Ошибка. У игрока уже есть затычка");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}

	if(AntiReklama(params[2]) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /mute]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params[2]);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(params[2],Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],params[2],strlen(params[2]),64);
	if(!strcmp(params[2], "!") || !strcmp(params[2], "1"))
	{
		format(stringer, 128, "%s %s поставил затычку игроку %s на %i мин.",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("Агент поддержки") : ("Администратор"), NamePlayer[playerid],NamePlayer[params[0]], params[1]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	else
	{
		format(stringer, 128, "%s %s поставил затычку игроку %s на %i мин. Причина: %s",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("Агент поддержки") : ("Администратор"), NamePlayer[playerid],NamePlayer[params[0]], params[1], params[2]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;
	format(stringer, 128, "%s %s поставил затычку игроку %s на %i мин. Причина: %s",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("Агент поддержки") : ("Администратор"), NamePlayer[playerid],NamePlayer[params[0]], params[1], params[2]);
	WriteLog(TYPE_LOG_MUTE,stringer);


	p_info[params[0]][pMuteTime] = params[1]*60;
	UpdatePlayerData(params[0],"pMuteTime",p_info[params[0]][pMuteTime]);

	Insert_Reason_Mute(p_info[params[0]][pID], NamePlayer[playerid], params[2]);

	gAdmin[playerid][ADMIN_MUTE] += 1;

	stringer[0] = EOS;
	format(stringer,700,"{FFFFFF}Внимание! Вам только что {AA3333}выдали затычку.\
	\n{FFFFFF}Выдал: {AA3333}%s\
	\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
	\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
	\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
	tmpyear, tmpmonth, tmpday, params[1]);
	strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
	\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
	ShowPlayerDialog(params[0],0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
	return 1;
}

CMD:rmute(playerid, params[])
{	if(p_info[playerid][pAdmin] < 1 && p_info[playerid][tHelper] < 4)
		return SendErr(playerid,"Вы не уполномочены использовать эту команду!");

	if(!uAdmin[playerid][1])
		return SendErr(playerid,"Данная функция отключена основателем.");

	new giveplayerid,
		mute_time;

	if(sscanf(params, "dds[100]",giveplayerid, mute_time, params))
		return SCM(playerid, CWHITE, "Используйте: /rmute [ид] [минуты] [причина]");

	if (!IsPlayerConnected(giveplayerid))
		return SendClientMessage(playerid,-1,"Игрок не в сети");

	if(giveplayerid == playerid)
		return SCM(playerid, CWHITE, "Неверный ID");

	if(mute_time < 1 || mute_time > 60)
		return SCM(playerid, CWHITE, "Время от 1 минуты до 60");

	if(p_info[giveplayerid][pAdmin])
		return SCM(playerid, CWHITE, "Ошибка. Игрок администратор");

	if(p_info[giveplayerid][pRMuteTime] > gettime())
		return SCM(playerid, CWHITE, "Ошибка. Игроку уже запрещено писать в /report");
	if(!AntiSlivTime[playerid]) AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid] >= 2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader] = 0;
			p_info[playerid][tMember] = 0;
			p_info[playerid][tRank] = 0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}

	stringer[0] = EOS;

	if(AntiReklama(params) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /rmute]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(params, Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}

	strmid(Reason__[playerid], params, strlen(params), 64);

	if(!strcmp(params, "!") || !strcmp(params, "1"))
	{
		format(stringer, 128, "%s %s запретил игроку %s писать в /report %i мин.",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("Агент поддержки") : ("Администратор"), NamePlayer[playerid],NamePlayer[giveplayerid], mute_time);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	else
	{
		format(stringer, 128, "%s %s запретил игроку %s писать в /report %i мин. Причина: %s",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("Агент поддержки") : ("Администратор"), NamePlayer[playerid],NamePlayer[giveplayerid], mute_time, params);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;
	format(stringer, 128, "%s %s запретил игроку %s писать в /report %i мин. Причина: %s",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("Агент поддержки") : ("Администратор"), NamePlayer[playerid],NamePlayer[giveplayerid], mute_time, params);
	WriteLog(TYPE_LOG_MUTE,stringer);


	p_info[giveplayerid][pRMuteTime] = gettime()+mute_time*60;
	UpdatePlayerData(giveplayerid,"pRMuteTime", p_info[giveplayerid][pRMuteTime]);

	Insert_Reason_Mute(p_info[giveplayerid][pID], NamePlayer[playerid], params);

	gAdmin[playerid][ADMIN_MUTE] += 1;

	stringer[0] = EOS;
	format(stringer,sizeof(stringer),"{FFFFFF}Внимание! Вам только что {AA3333}запретили писать в /report.\
		\n{FFFFFF}Запретил: {AA3333}%s\
		\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
		\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
		\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
		tmpyear, tmpmonth, tmpday, mute_time);
		
	strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
	ShowPlayerDialog(giveplayerid,0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
	return 1;
}

CMD:unrmute(playerid, params[])
{
	stringer[0] = EOS;
	
	if(p_info[playerid][pAdmin] < 1)
		return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
		
	if(sscanf(params, "u",params[0]))
		return SCM(playerid, CWHITE, "Используйте: /unrmute [ид]");
		
	if(params[0] == INVALID_PLAYER_ID)
		return SCM(playerid, CWHITE, "Ошибка. Игрок не в сети.");
		
	if(p_info[params[0]][pRMuteTime] <= gettime())
		return SCM(playerid, CWHITE, "Ошибка. Игроку не запрещено писать в report");
		
	p_info[params[0]][pRMuteTime] = 0;
	UpdatePlayerData(params[0], "pRMuteTime", 0);
	
	format(stringer, sizeof(stringer), "Администратор %s разрешил Вам писать в report",NamePlayer[playerid],NamePlayer[params[0]]);
	SCM(params[0], CWHITE, stringer);
	
	format(stringer, sizeof(stringer), "Администратор %s разрешил игроку %s писать в report",NamePlayer[playerid],NamePlayer[params[0]]);
	AdmMes(COLOR_LIGHTRED, stringer, 1);
	WriteLog(TYPE_LOG_UNMUTE,stringer);
	return 1;
}

CMD:unmute(playerid, params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params, "d",params[0])) return SCM(playerid, CWHITE, "Используйте: /unmute [ид]");
	if(p_info[params[0]][pMuteTime] <= 0) return SCM(playerid, CWHITE, "Ошибка. У игрока нет затычки");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Ошибка. Игрок не в сети.");
	p_info[params[0]][pMuteTime] = 0;
	UpdatePlayerData(params[0],"pMuteTime",p_info[params[0]][pMuteTime]);
	format(stringer, 128, "Администратор %s снял затычку игроку %s",NamePlayer[playerid],NamePlayer[params[0]]);
	SendClientMessageToAll(COLOR_LIGHTRED, stringer);
	format(stringer, 128, "Администратор %s снял затычку игроку %s",NamePlayer[playerid],NamePlayer[params[0]]);
	WriteLog(TYPE_LOG_UNMUTE,stringer);
	return 1;
}

CMD:shieldoff(playerid)
{
	RemovePlayerAttachedObject(playerid, 1);
	SendClientMessage(playerid, COLOR_GREY, "Вы сняли Щит.");
}

CMD:uval(playerid, params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /uval [ид] [причина]");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(p_info[params[0]][tMember] == 0) return SCM(playerid, CWHITE, "Игрок нигде не состоит");

	format(stringer, 255, "Администратор %s [%i] уволил Вас из организации. Причина: %s", NamePlayer[playerid],playerid, params[1]);
	SCM(params[0], 0xFF182DFF, stringer);


	if(p_info[playerid][pAdmin] < 11 && p_info[params[0]][tLeader]) return SCM(playerid, CGRAD2, "Лидера нельзя уволить");

	format(stringer,255,"[A] (Администратор) %s[%d] уволил %s[%d]. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0],params[1]);
	if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))AdmMes(CADMIN_INFO,stringer,1);
	else SendClientMessage(playerid, CADMIN_INFO,stringer);

	if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;
	format(stringer,128,"(Администратор) %s [%i] уволил %s [%i]. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0],params[1]);
	WriteLog(TYPE_LOG_UVAL,stringer);

	AC_SetPlayerArmour(params[0],0);
	AC_ResetPlayerWeapons(params[0]);

	if(StartWork(params[0]))
	{
		SetWBook(params[0], true);
		SCM(params[0],CBLUE,"Рабочий день окончен");
		start_work[params[0]] = 0;
		UpdatePlayerData(params[0], "start_work", start_work[params[0]]);
	}
	p_info[params[0]][tLeader] = 0;
	UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
	p_info[params[0]][tRank] = 0;
	UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
	p_info[params[0]][pSubLeader] = 0;
	UpdatePlayerData(params[0],"pSubLeader",p_info[params[0]][pSubLeader]);
	ChangePlayerFraction(params[0], 0);

	// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );

	SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
	SetPlayerSkin(params[0], p_info[params[0]][pChar]);

	return 1;
}

CMD:uninvite(playerid, params[])
{
	if(!p_info[playerid][tMember]) return 1;
	if(StartWork(playerid) &&  !start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(p_info[playerid][tRank] < f_info[p_info[playerid][tMember]][f_rank_uninvite])
	{
		format(stringer,128,"Доступно с %i ранга", f_info[p_info[playerid][tMember]][f_rank_uninvite]);
		SendErr(playerid,stringer);
		return 1;
	}
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /uninvite [playerid] [причина]");
	if(params[0] == playerid) return SCM(playerid,-1,"Себя невозможно уволить");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(p_info[params[0]][tLeader] >= 1) return SCM(playerid, CWHITE, "Неверный ID");
	if(p_info[playerid][tLeader] <= 0 && p_info[playerid][tRank] <=  p_info[params[0]][tRank]) return SCM(playerid, CWHITE, "Ошибка");
	if(p_info[params[0]][tMember] == 0) return SCM(playerid, CWHITE,"Этот человек гражданский");
	if(p_info[params[0]][tMember] == p_info[playerid][tLeader] ||p_info[params[0]][tMember] == p_info[playerid][tMember])
	{
		if(p_info[params[0]][tMember] > 0)
		{
			format(stringer,255,"[A] (Обычный игрок) %s[%d] уволил %s[%d]. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0],params[1]);
			AdmMes(CADMIN_INFO,stringer,1);

			format(stringer,255," %s уволил %s . Причина : %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
			WriteLog ( TYPE_LOG_UNINVITE , stringer , p_info[playerid][tMember]) ;

			format(stringer, 144,"%s уволил Вас из организации. Причина: %s", NamePlayer[playerid],params[1]);
			SCM(params[0], 0xFF182DFF,stringer);
			format(stringer, 144,"%s был уволен из организации. Причина: %s", NamePlayer[params[0]],params[1]);
			SCM(playerid, 0x269BD8FF, stringer);
			if(StartWork(params[0]))
			{
				SetWBook(params[0], true);
				SCM(params[0],CBLUE,"Рабочий день окончен");
				start_work[params[0]] = 0;
				UpdatePlayerData(params[0], "start_work", start_work[params[0]]);
			}
			ChangePlayerFraction(params[0], 0);
			p_info[params[0]][tRank] = 0;
			UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
			p_info[params[0]][tLeader] = 0;
			UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
			p_info[params[0]][pSubLeader] = 0;
			UpdatePlayerData(params[0],"pSubLeader",p_info[params[0]][pSubLeader]);
			p_info[params[0]][pJob] = 0;
			SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
			SetPlayerSkin(params[0], p_info[params[0]][pChar]);

			// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
		}
	}
	return 1;
}

CMD:unjail(playerid, params[])
{
	stringer[0] = EOS;//
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params, "d",params[0])) return SCM(playerid, CWHITE, "Используйте: /unjail [ид]");
	if (!IsPlayerConnected(params[0])) return SendClientMessage(playerid,-1,"Игрок не в сети");
	if(!p_info[params[0]][pJailTime] && p_info[params[0]][pMestoJail] == 0) return SCM(playerid, CWHITE, "Ошибка. Игрок не в тюрьме");
	format(stringer, 64, "Вы освободили %s", NamePlayer[params[0]]);
	SCM(playerid, 0x09B000AA, stringer);

	format(stringer, 128, "[A] %s[%d] выпустил игрока %s[%d] из тюрьмы.",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0]);
	AdmMes(CADMIN_INFO,stringer,1);

	format(stringer, 128, "%s выпустил игрока %s из тюрьмы.",NamePlayer[playerid],NamePlayer[params[0]]);
	WriteLog(TYPE_LOG_UNJAIL,stringer);

	SCM(params[0],0x09B000AA, "Вы освобождены администратором "PROJECT_NAME);
	p_info[params[0]][pJailTime] = 0;
	UpdatePlayerData(params[0],"pJailTime",p_info[params[0]][pJailTime]);
	p_info[params[0]][pMestoJail] = 0;
	UpdatePlayerData(params[0],"pMestoJail",p_info[params[0]][pMestoJail]);
	SpawnPlayer(params[0]);
	return 1;
}

CMD:re(playerid,params[])
{
	if(!p_info[playerid][pAdmin]) return 1;
	if(strcmp(params[0],"off",true) == 0 && GetPlayerState(playerid)==9) return TogglePlayerSpectating(playerid,0),GameTextForPlayer(playerid,"~w~RECON ~r~OFF",3000,4);
	if(!sscanf (params, "i", params[0]))
	{
		if(!IsBotServer(params[0]) && IsPlayerConnected(params[0]) && params[0] != INVALID_PLAYER_ID)
		{
			if(p_info[params[0]][pAdmin]==12 && p_info[playerid][pAdmin]<12)
			{
				format(stringer, 144, "[A] %s[%d] хочет следить за %s[%d] (но он основатель, и может дать выговор)", NamePlayer[playerid], playerid, NamePlayer[params[0]], params[0]);
				return AdmMes(CRED, stringer, 1);
			}
			foreach(i)
			{
				if ( i == playerid ) continue;
				if(GetPVarInt(i, "r_specid") == params[0] && GetPVarInt(i,"StartRecon") == 1)
				{
					format(stringer, 144, "Ошибка: {FFFFFF}За данным игроком уже кто-то следит (ID %d)", i);
					SendClientMessage(playerid, 0xFF0000FF, stringer);
					return 1;
				}
			}
			if(GetPlayerState(playerid) != 9)
			{
				new Float:spec_pos[3];
				GetPlayerPos(playerid,spec_pos[0],spec_pos[1],spec_pos[2]);
				SetPVarFloat(playerid,"float_pos_recon_x",spec_pos[0]);
				SetPVarFloat(playerid,"float_pos_recon_y",spec_pos[1]);
				SetPVarFloat(playerid,"float_pos_recon_z",spec_pos[2]);
				SetPVarInt(playerid,"int_interior",GetPlayerInterior(playerid));
				SetPVarInt(playerid,"int_virtualworld",GetPlayerVirtualWorld(playerid));
				SetPVarInt(playerid,"old_recon_skin",GetPlayerSkin(playerid));
			}
			SetPVarInt(playerid,"StartRecon",1);
			TogglePlayerSpectating(playerid, 1);
			if(!(p_info[params[0]][pAdmin] > 0 && p_info[playerid][pAdmin] == 12))
			{
				format(stringer, 144, "[A] %s[%d] начал следить за %s[%d]", NamePlayer[playerid], playerid, NamePlayer[params[0]], params[0]);
				AdmMes(COLOR_GREY, stringer, 1);
			}
			SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
			if(IsPlayerInAnyVehicle(params[0])) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]), SPECTATE_MODE_NORMAL);
			else PlayerSpectatePlayer(playerid, params[0], SPECTATE_MODE_NORMAL);
			SetPVarInt(playerid,"r_specid",params[0]);
			UpdateRecon(playerid,GetPVarInt(playerid,"r_specid"));
			for(new x=0x0; x <= 1; x++) TextDrawShowForPlayer(playerid, Text:ReconText[x]);
			for(new x=0x0; x <= 9; x++)
			{
				if(x>=2)PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][x], -1091854422);
				else if(x==1)PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][x], 0x79BD8FAA);
				PlayerTextDrawShow(playerid, PlayerText:ReconPlayerText[playerid][x]);
			}
			re_choose[playerid][0]=1;
			re_choose[playerid][1]=0;
		}
		else SendClientMessage(playerid, -1, "Игрок не в сети");
	}
	else SendClientMessage(playerid, -1, "/re [ID]");
	return 1;
}

CMD:warn(playerid, params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][4]) return SendErr(playerid,"Данная функция отключена основателем.");
	new WarnID,Days,Reason[64];

	if(sscanf(params, "iis[64]",WarnID,Days,Reason)) return SendInf(playerid, "Используйте: /warn [playerid] [дни] [причина]");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(p_info[WarnID][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя заварнить");
	if(!IsPlayerConnected(WarnID)) return 1;
	if(Days > 7) return SendErr(playerid, "Максимальное количество дней 7");
	if(p_info[playerid][pAdmin] < 11 && p_info[WarnID][tLeader]) return SendErr(playerid, "Лидера нельзя заварнить");
	if(IsIpFound(Reason))
	{
		SendReklama(playerid,Reason);
		return 1;
	}
	if(IsAFullDostup(WarnID) && !IsAFullDostup(playerid))
	{
		SendErr(playerid, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(AntiReklama(Reason) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /warn]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,Reason);
		AdmMes(CBADINFO,stringer,1);

		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(Reason,Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],Reason,strlen(Reason),64);
	if(p_info[WarnID][pWarns] >= 2)
	{
		format(stringer, 128, "Администратор %s забанил игрока %s на 7 дней. Причина: %s", NamePlayer[playerid],NamePlayer[WarnID], Reason);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;

		new data[16],unbandate, year, month, day;
		r_getdate(year, month, day);
		format(data, 16, "%02d.%02d.%04d", day, month, year);
		unbandate = unix + 7*86400;

		mysql_query_string[0] = EOS;
		format(mysql_query_string, 500, "INSERT INTO `table_ban` (`Name_Admin`, `Name_Player`, `Ban_Data`, `Unban_Data`, `Ban_Reason`) VALUES ('%s', '%s', '%s', '%d', '%s')", NamePlayer[playerid], NamePlayer[WarnID], data, unbandate, Reason);
		mysql_pquery(connects, mysql_query_string, "", "");
		KickEx(WarnID);

		gAdmin[playerid][ADMIN_BAN] += 1;

		stringer[0] = EOS;
		format(stringer,700,"{FFFFFF}Внимание! Вас только что {AA3333}забанили на 7 дней.\
		\n{FFFFFF}Вас забанил(а): {AA3333}%s\
		\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
		\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
		\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
		tmpyear, tmpmonth, tmpday, Reason);
		strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
		\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
		ShowPlayerDialog(WarnID,0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
		return 0;
	}
	else
	{
		if(!GetPVarInt(WarnID,"AntiWarn") && strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
		{
			p_info[WarnID][pWarns] ++;
			UpdatePlayerData(WarnID,"pWarns",p_info[WarnID][pWarns]);
			p_info[WarnID][punWarnstime] = unix + Days*86400;
			UpdatePlayerData(WarnID,"punWarnstime",p_info[WarnID][punWarnstime]);
			p_info[WarnID][tLeader] = 0;
			UpdatePlayerData(WarnID,"tLeader",p_info[WarnID][tLeader]);
			ChangePlayerFraction(WarnID, 0);
			p_info[WarnID][pJob] = 0;
			UpdatePlayerData(WarnID,"pJob",p_info[WarnID][pJob]);
			p_info[WarnID][pSubLeader] = 0;
			UpdatePlayerData(WarnID,"pSubLeader",p_info[WarnID][pSubLeader]);
			KickEx(WarnID);
		}

		if(!strcmp(Reason, "!") || !strcmp(Reason, "1"))
		{
			format(stringer, 128, "Администратор %s выдал предупреждение игроку %s на %d дней [%i/3].", NamePlayer[playerid],NamePlayer[WarnID], Days, p_info[WarnID][pWarns]);
			if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
			else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		else
		{
			format(stringer, 128, "Администратор %s выдал предупреждение игроку %s на %d дней [%i/3]. Причина: %s", NamePlayer[playerid],NamePlayer[WarnID], Days, p_info[WarnID][pWarns],Reason);
			if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
			else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}

		if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;
		format(stringer, 128, "Администратор %s выдал предупреждение игроку %s на %d дней [%i/3]. Причина: %s", NamePlayer[playerid],NamePlayer[WarnID], Days, p_info[WarnID][pWarns],Reason);
		WriteLog(TYPE_LOG_WARN,stringer);

		SetPVarInt(WarnID,"AntiWarn",true);

		//new day,month,year,hour,minute,second;
		//getdate(year, month, day);
		//gettime(hour,minute,second);

		Insert_Reason_Warn(p_info[WarnID][pID],NamePlayer[playerid],Reason);

		gAdmin[playerid][ADMIN_WARN] ++;

		stringer[0] = EOS;
		format(stringer,700,"{FFFFFF}Внимание! Вам только что {AA3333}выдали предупреждение.\
		\n{FFFFFF}Выдал: {AA3333}%s\
		\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
		\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
		\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
		tmpyear, tmpmonth, tmpday, Reason);
		strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
		\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
		ShowPlayerDialog(WarnID,0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
	}
	return 1;
}
CMD:damages(playerid,params[])
{
	new id_damage;
	if(sscanf(params,"i",id_damage))
	{
		SCM(playerid,COLOR_GREY,"/damages [id игрока]");
		id_damage = playerid;
	}
	else if(!IsPlayerConnected(id_damage)) return SCM(playerid,COLOR_GREY,"Игрок не в сети");
	else if(!IsPlayerStream(10.0, playerid, id_damage) && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING) return SendErr(playerid, "Игрок не рядом с вами");
	new count_damages_show=1;
	stringer = "{4EBA6F}#\tВремя\tУрон\tОружие\tЧасть тела\tНик нападавшего\n\n";
	for(new i = 0; i < MAX_DAMAGES_STRING; i++)
	{
		if(gDamagesData[id_damage][i][gdBody]==-1) continue;
		new date_ban[6];
		timestamp_to_date(gDamagesData[id_damage][i][gdTime],date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

		new to_part_body[32], name_damage_weapon[32];
		if(gDamagesData[id_damage][i][gdGun]<0 || gDamagesData[id_damage][i][gdGun]>50) name_damage_weapon = "Неизвестно";
		else if(gDamagesData[id_damage][i][gdGun]<47) strmid(name_damage_weapon, WeaponNames[gDamagesData[id_damage][i][gdGun]], 0, strlen(WeaponNames[gDamagesData[id_damage][i][gdGun]]), 32);
		else if(gDamagesData[id_damage][i][gdGun]>=48) name_damage_weapon="Автомобильные ранения";

		switch(gDamagesData[id_damage][i][gdBody])
		{
			case BODY_PART_TORSO: to_part_body = "Тело";
			case BODY_PART_GROIN: to_part_body = "Пах";
			case BODY_PART_LEFT_ARM: to_part_body = "Левая рука";
			case BODY_PART_RIGHT_ARM: to_part_body = "Правая рука";
			case BODY_PART_LEFT_LEG: to_part_body = "Левая нога";
			case BODY_PART_RIGHT_LEG: to_part_body = "Левая нога";
			case BODY_PART_HEAD: to_part_body = "Голова";
			default: to_part_body = "Неизвестно";
		}//
		format(stringer,2000,"%s{AFAFAF}%d. {FFFFFF}%d секунд(-у, -а) назад (%02d:%02d:%02d), %.1f DMG, %s, %s, %s (%d)\n",
		stringer,
		count_damages_show,
		unix-gDamagesData[id_damage][i][gdTime],
		date_ban[3],date_ban[4],date_ban[5],
		gDamagesData[id_damage][i][gdDamage],
		name_damage_weapon,
		to_part_body,
		gDamagesData[id_damage][i][gdNameDamages],
		gDamagesData[id_damage][i][gdNameID]);
		count_damages_show++;
		//strcat(str_damaes,"\n");
	}
	if(count_damages_show==0) SCM(playerid,COLOR_GREY,"У игрока нет повреждений");
	else ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, NamePlayer[id_damage], stringer, "Закрыть", "");

	return true;
}

CMD:kick(playerid, params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 3) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][2]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "ds[144]",params[0],params[1])) return SendInf(playerid, "Используйте: /kick [ид] [причина]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(IsIpFound(params[1]))
	{
		SendReklama(playerid,params[1]);
		return 1;
	}
	if(IsAFullDostup(params[0]) && !IsAFullDostup(playerid))
	{
		SCM(playerid, -1, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=4  && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(p_info[params[0]][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя кикнуть");
	if(AntiReklama(params[1]) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /kick]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params[1]);
		AdmMes(CBADINFO,stringer,1);

		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}

	if(!strcmp(params[1], "!") || !strcmp(params[1], "1"))
	{
		format(stringer, 144, "Администратор %s кикнул игрока %s.", NamePlayer[playerid],NamePlayer[params[0]]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	else
	{
		format(stringer, 144, "Администратор %s кикнул игрока %s. Причина: %s", NamePlayer[playerid],NamePlayer[params[0]], params[1]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;
	format(stringer, 144, "Администратор %s кикнул игрока %s. Причина: %s", NamePlayer[playerid],NamePlayer[params[0]], params[1]);
	WriteLog(TYPE_LOG_KICK,stringer);

    if(!IsMegaAdmin(params[0]))
	{
		KickEx(params[0]);
		gAdmin[playerid][ADMIN_KICK] += 1;

		stringer[0] = EOS;
		format(stringer,700,"{FFFFFF}Внимание! Вас только что {AA3333}кикнули.\
		\n{FFFFFF}Кикнул: {AA3333}%s\
		\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
		\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
		\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
		tmpyear, tmpmonth, tmpday, params[1]);
		strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
		\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
		ShowPlayerDialog(params[0],0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
	}
	return 1;
}

CMD:cw(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params, "iis[144]",params[0],params[1],params[2])) return SendInf(playerid, "Используйте: /cw [ид] [время] [причина]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(params[1] < 1 || params[1] > 180) return SCM(playerid, CWHITE, "Время от 1 минуты до 180");
	if(IsIpFound(params[2]))
	{
		SendReklama(playerid,params[2]);
		return 1;
	}
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(p_info[params[0]][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя посадить в читерский мир");
	if(p_info[params[0]][pJailTime]>0) return SCM(playerid, CWHITE, "Ошибка. Игрок в тюрьме");
	if(AntiReklama(params[2]) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /cw]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params[1]);
		AdmMes(CBADINFO,stringer,1);

		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}

	if(!strcmp(params[2], "!") || !strcmp(params[2], "1"))
	{
		format(stringer, 144, "Администратор %s поместил в читерский мир игрока %s на %d минут.", NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		SendClientMessageToAll(COLOR_LIGHTRED, stringer);
	}
	else
	{
		format(stringer, 144, "Администратор %s поместил в читерский мир игрока %s на %d минут. Причина: %s", NamePlayer[playerid],NamePlayer[params[0]],params[1],params[2]);
		SendClientMessageToAll(COLOR_LIGHTRED, stringer);
	}
	format(stringer, 144, "Администратор %s поместил в читерский мир игрока %s на %d минут. Причина: %s", NamePlayer[playerid],NamePlayer[params[0]], params[1],params[2]);
	WriteLog(TYPE_LOG_KICK,stringer);

	p_info[params[0]][pJailTime] = params[1]*60;
	p_info[params[0]][pMestoJail] = 6;
	UpdatePlayerData(params[0],"pMestoJail",p_info[params[0]][pMestoJail]);
	UpdatePlayerData(params[0],"pJailTime",p_info[params[0]][pJailTime]);

	Insert_Reason_Jail(p_info[params[0]][pID], NamePlayer[playerid], params[2]);
	return 1;
}
CMD:tempmember(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	new fraction_member;
	if(sscanf(params,"i", fraction_member))
	{
		new tmmr_str[1200] = "{ffffff}";
		for(new i=1;i<fraction_amount;i++)
		{
		    if(isnull(f_info[i][f_name])) continue;
			format(tmmr_str,1200,"%s- {%06x}%s  {ffffff} >>\n",tmmr_str,fraction_color[i] >>> 8,f_info[i][f_name]);
		}
		SPD(playerid,dTempMember,DIALOG_STYLE_TABLIST,"Выберите фракцию",tmmr_str,"Выбор","Отмена");
	}
	else
	{
		if(!(0 < fraction_member < MAX_FRACTIONS)) return SendErr(playerid, "От 1 до 50");
		if(isnull(f_info[fraction_member][f_name])) return SendErr(playerid, "Данная фракция недоступна");
		if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV))
		{
			format(stringer, 128, "[A] %s[%d] временно вступил(а) в фракцию {%06x}%s",NamePlayer[playerid],playerid,fraction_color[fraction_member] >>> 8,f_info[fraction_member][f_name]);
			SendClientMessage(playerid, CADMIN_HELP_INFO,stringer);
			return 1;
		}
		ChangePlayerFraction(playerid, fraction_member);
		p_info[playerid][tRank] = 1;
		UpdatePlayerData(playerid,"tRank",p_info[playerid][tRank]);
		format(stringer, 128, "[A] %s[%d] временно вступил(а) в фракцию {%06x}%s",NamePlayer[playerid],playerid,fraction_color[fraction_member] >>> 8,f_info[fraction_member][f_name]);
		AdmMes(CADMIN_HELP_INFO,stringer,1);

		format(stringer, 128, "%s [%d] временно вступил(а) в фракцию %s",NamePlayer[playerid],playerid,f_info[fraction_member][f_name]);
		WriteLog(TYPE_LOG_TEMPMEMBER,stringer);

		if(StartWork(playerid))
		{
			start_work[playerid] = 1;
			UpdatePlayerData(playerid, "start_work", start_work[playerid]);
			SCM(playerid,CBLUE,"Рабочий день начат");
		}

		// SetSpawnInfoEx(playerid, p_info[playerid][pModel], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] );
	}
	return true;
}



CMD:gmx(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	IS_A_GMX = true;
	foreach(i)
	{
		GameTextForPlayer(i, "~r~RESTART", 10000, 0);
	}
	SetTimer("game_mode_exit",10000,0);
	return 1;
}

forward game_mode_exit();
public game_mode_exit()
{
	IS_A_GMX = false;
	DestroyAllDynamicObjects();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamicRaceCPs();
	DestroyAllDynamicAreas();
	SendRconCommand("gmx");
}

CMD:namestore(playerid,params[])
{
	SendInf(playerid,"/namestore [id игрока]");
	if(sscanf(params,"i",params[0]))
	{
		stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
		for(new namestore = 0; namestore < 10; namestore++)
		{
			if(!strcmp(pNiksHistory[playerid][namestore],"None"))
				format(stringer,2400,"%s%i. -\n",stringer,namestore+1);
			else
				format(stringer,2400,"%s%i. %s\n",stringer,namestore+1,pNiksHistory[playerid][namestore]);
		}
		ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{ffff00}История изменения ников",stringer,"Закрыть","");
		return 1;
	}
	if(!IsPlayerConnected(params[0])) return 1;
	stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
	for(new namestore = 0; namestore < 10; namestore++)
	{
		if(!strcmp(pNiksHistory[params[0]][namestore],"None"))
			format(stringer,2400,"%s%i. -\n",stringer,namestore+1);
		else
			format(stringer,2400,"%s%i. %s\n",stringer,namestore+1,pNiksHistory[params[0]][namestore]);
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{ffff00}История изменения ников",stringer,"Закрыть","");
	return 1;
}

CMD:setname(playerid,params[])
{
	stringer[0] = EOS;
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "/setname [ID]");
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(params[0], "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(!strlen(playerName)) return SendClientMessage(playerid,COLOR_GREY,"Игрок не подавал завку на смену ника");
	format(stringer,128,"[A] %s сменил ник игроку %s на %s",NamePlayer[playerid],NamePlayer[params[0]],playerName);
	AdmMes(CADMIN_INFO,stringer,1);
	format(stringer,128,"%s сменил ник игроку %s на %s",NamePlayer[playerid],NamePlayer[params[0]],playerName);
	WriteLog(TYPE_LOG_CHANGENAME,stringer);

	if(GetPVarInt(params[0],"changename_fix")) return 1;
	ChangeName ( params[0] );
	return 1;
}



CMD:sellsim(playerid, params[])
{
	if(!p_info[playerid][pPnumber]) return SendErr(playerid,"У вас нет SIM-карты");
	else if(sscanf(params,"ii",params[0],params[1])) return SendInf(playerid,"/sellsim [ID] [сумма]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в сети");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Этот человек далеко от вас");
	else if(params[1] < 1 || params[1] > 2000000) return SendErr(playerid, "Сумма должна быть от 1 до 2.000.000 $");
	if(GetPVarInt(params[0],"sim_id_sell")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"minet")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"hi")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"pass")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"sl")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");

	format(stringer, 144, "%s {"#cINFO"}предложил(а) Вам купить SIM-карту за {"#cGREEN"}%i$", NamePlayer[playerid], params[1]);
	SendClientMessage(params[0], -1, stringer);
	SendClientMessage(params[0],-1,"Нажмите {33AA33}'Y' {"#cWHITE"}чтобы принять, или {FF0000}'N'{"#cWHITE"} для отказа");

	format(stringer, 144, "Вы предложили {"#cWHITE"}%s {"#cINFO"}купить SIM-карту за {"#cGREEN"}%i$", NamePlayer[params[0]], params[1]);
	SendClientMessage(playerid, CINFO, stringer);

	SetPVarInt(params[0], "sim_id_sell", playerid + 1);
	SetPVarInt(params[0], "sim_summ", params[1]);
	return 1;
}
//DeimoS-tMember
CMD:changeskin(playerid, params[])
{
	if ( !p_info[playerid][tMember] ) return SendClientMessage ( playerid, COLOR_GREY, "Вы не состоите в фракции" ) ;
	if(StartWork(playerid) &&  !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	if(p_info[playerid][tRank] < f_info[p_info[playerid][tMember]][f_rank_giverank])
	{
		format(stringer,128,"Доступно с %i ранга", f_info[p_info[playerid][tMember]][f_rank_giverank]);
		SendErr(playerid,stringer);
		return 1;
	}
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /changeskin [id]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	if(p_info[playerid][tMember] != p_info[params[0]][tMember]) return SendErr(playerid, "Данный игрок не в вашей фракции");
	stringer[0] = EOS;
	strcat(stringer, "{"#cWHITE"}");
	for(new I=0; I<10; I++)
	{
		if(fChangeSkin [ p_info[playerid][tMember] - 1 ][I] == 0) continue;
		format(stringer,500,"%s%d\n",stringer,fChangeSkin [ p_info[playerid][tMember] - 1 ][I]);
	}
	ShowPlayerDialog(playerid,1145,DIALOG_STYLE_LIST,f_info[p_info[playerid][tMember]][f_name],stringer,"Выбрать","Отмена");
	SetPVarInt(playerid,"change",params[0]);
	return 1;
}

CMD:unit(playerid)
{
	if(!p_info[playerid][tMember]) return 1;

	if(p_info[playerid][tMember] != 1 && p_info[playerid][tMember] != 27 && p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 3 &&
	!IsAMedic(playerid) && p_info[playerid][tMember] != 7 && p_info[playerid][tMember] != 10 &&
	p_info[playerid][tMember] != 11 && p_info[playerid][tMember] != 16 && p_info[playerid][tMember] != 19 &&
	p_info[playerid][tMember] != 21 && p_info[playerid][tMember] != 23 && p_info[playerid][tMember] != 25 && p_info[playerid][tMember] != 26) return SendErr(playerid, "Вам недоступно создание подразделения");

	if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1]) return 1;

	stringer = "{ff0000}Создать подразделение{"#cWHITE"}\n";
	for(new i=0; i<MAX_UNITS; i++)
	{
		if(strlen(unit_name[p_info[playerid][tMember]-1][i]))
			format(stringer,1500,"%s%i. %s\n",stringer,i+1,unit_name[p_info[playerid][tMember]-1][i]);
		else
			format(stringer,1500,"%s%i. -\n",stringer,i+1);
	}
	ShowPlayerDialog(playerid,dUnit,DIALOG_STYLE_LIST,"{"#cWHITE"}Подразделения", stringer,"Выбрать", "Закрыть");
	return 1;
}

CMD:uinvite(playerid,params[])
{
	if(!p_info[playerid][pSubLeader]) return SendErr(playerid,"Вы не состоите в подразделении");
	else if(!p_info[playerid][tMember]) return SendErr(playerid,"Вы не состоите в фракции");
	if(sscanf(params, "i", params[0])) return SendInf(playerid, "Используйте: /uinvite [id игрока]");
	new SubLeader = p_info[playerid][pSubLeader] - 1;
	new Member = p_info[playerid][tMember] - 1;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	if(strcmp(unit_leader[Member][SubLeader],NamePlayer[playerid])) return SendErr(playerid, "Вам недоступна данная команда");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,CRED,"Игрок не в сети");
	if(!PlayerToPoint(4.0,params[0],X,Y,Z)) return SendErr(playerid, "Игрок не рядом с Вами");
	if(p_info[playerid][tMember]!=p_info[params[0]][tMember]) return SendErr(playerid, "Игрок состоит не в вашей фракции");
	if(p_info[params[0]][pSubLeader]) return SendErr(playerid, "Игрок состоит в подразделении");

	format(stringer, 128,"%s {269BD8}предложил вам вступить в подразделение {ff0000}%s",NamePlayer[playerid],unit_name[Member][SubLeader]);
	SendClientMessage(params[0],-1,stringer);
	SendClientMessage(params[0],CINFO,"Чтобы потвердить нажмите {"#cGREEN"}Y {"#cINFO"} иначе{"#cRED"} N");

	format(stringer, 128, "Вы предложили {"#cWHITE"}%s{269BD8} вступить в подразделение {"#cRED"}%s", NamePlayer[params[0]],unit_name[Member][SubLeader]);
	SendClientMessage(playerid,CINFO,stringer);

	SetPVarInt(params[0],"uinvite", playerid + 1);
	return 1;
}

/*CMD:umembers(playerid)
{
	if(p_info[playerid][pSubLeader] == 0) return SendErr(playerid, "Вы не состоите в подразделении");
	new COUNT_MEMBERS = 0;
	stringer="Имя\t\t\t\t\tРанг\t\t\tТелефон\t\tУровень\n\n{"#cWHITE"}";
	foreach(i)
	{
		if (p_info[i][pSubLeader] != p_info[playerid][pSubLeader] && p_info[i][tMember] != p_info[playerid][tMember]) continue;
		format(stringer, 2400, "%s%s(%i)\t\t\t%s(%i)\t\t%i\t\t\t%i %s\n",stringer,NamePlayer[i],i,GetRank(p_info[i][tMember],p_info[i][tRank]),p_info[i][tRank],p_info[i][pPnumber],p_info[i][pLevel],(p_info[i][pAFK]) > 3 ? ("{ffff00}[AFK]{"#cWHITE"}") : (""));
		COUNT_MEMBERS++;
	}
	format(stringer,2400,"%s\n\nВсего: %i человек",stringer,COUNT_MEMBERS);
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Члены подразделения онлайн", stringer, "Закрыть", "");
	return 1;
}*/

CMD:uuninvite(playerid,params[])
{
	if(!p_info[playerid][pSubLeader]) return 1;
	new SubLeader = p_info[playerid][pSubLeader]-1;
	new Member = p_info[playerid][tMember]-1;
	if(strcmp(unit_leader[Member][SubLeader],NamePlayer[playerid]) && !p_info[playerid][tLeader]) return SendErr(playerid, "Вам недоступна данная команда");
	if(sscanf(params, "i", params[0])) return SendInf(playerid, "Используйте: /uuninvite [id игрока]");
	if(p_info[playerid][pSubLeader] != p_info[params[0]][pSubLeader]) return SendErr(playerid, "Игрок не состоит в вашем подразделении");
	if(!IsPlayerConnected(params[0])) return 1;
	SendClientMessage(playerid,CRED,"Вы исключили игрока из подразделения");
	SendClientMessage(params[0],CRED,"Вы были исключены из подразделения");
	p_info[params[0]][pSubLeader] = 0;
	UpdatePlayerData(params[0],"pSubLeader",p_info[params[0]][pSubLeader]);
	return 1;
}

CMD:showall(playerid)
{
	if(!p_info[playerid][tMember]) return 1;
	if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1]) return 1;

	mysql_query_string[0] = EOS;
	format(mysql_query_string,200,"SELECT `tName`,`tRank` FROM `accounts` WHERE `tMember` = '%i' ORDER BY `tRank` LIMIT 0, 20", p_info[playerid][tMember]);
	mysql_pquery(connects, mysql_query_string, "showall_callback", "i", playerid ) ;
	return 1;
}

CMD:markload(playerid)
{
	if(p_info[playerid][tMember] != 3 && p_info[playerid][tMember] != 19) return 1;
	SCM(playerid, CORANGE, "Метка {"#cWHITE"}на карте указана в виде {"#cRED"}красного{"#cWHITE"} флажка");
	SetPlayerGPS(playerid,80,2129.9585,-79.4998,2.9628,19,-1,MAPICON_GLOBAL_CHECKPOINT);
	return 1;
}

CMD:loadgun(playerid)
{
	if(p_info[playerid][tMember] != 3 && p_info[playerid][tMember] != 19 && p_info[playerid][tMember] != 27 && !IsAGang(playerid) && !ISAMAFIA(playerid)) return SendErr(playerid, "Вам недоступна эта функция");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetVehicleModel(vehicleid);
		//
		if( (p_info[playerid][tMember] == 27 && !IsABenAirVehicle(model)) ||
			(p_info[playerid][tMember] == 3 &&  model != 455) ||
			(p_info[playerid][tMember] == 19 && model != 455) ||
			(IsAGang(playerid) && model != 482) ||
			(ISAMAFIA(playerid) && model != 482)) return SendErr(playerid, "Вы должны быть за рулем т.с. для перевозки оружия");
		//
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendErr(playerid, "Авто уже стоит на загрузке / разгрузке");
		gVehicleGun[vehicleid][vGunLoading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z, Float:a;
		GetVehiclePos(vehicleid,x,y,z);
		GetVehicleZAngle(vehicleid,a);
		if(p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 19 || p_info[playerid][tMember] == 27)
		{
			if(p_info[playerid][tMember] == 27)
			{
				x = x - (-10.0*floatsin(a,degrees));
				y = y - 10.0*floatcos(a,degrees);
				z -= 0.4;
			}
			else
			{
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);
			}
			gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(3013, 23, x, y, z, -1, -1, -1, 100.0);
		}
		else
		{
			x = x - (-3.5*floatsin(a,degrees));
			y = y - 3.5*floatcos(a,degrees);
			gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(3013, 23, x, y, z, -1, -1, -1, 100.0);
		}
		format(stringer,144,"{f0f0f0}Загрузка: \n{"#cBLUE"}%d{f0f0f0} из {"#cBLUE"} 40{f0f0f0} ящиков",gVehicleGun[vehicleid][vGunAmount]);
		gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(stringer,0xFFFFFF20,x,y,z+0.8,20.0);
		gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x,y,z,1.0);
		//print ( "Itter_Add(VehicleGun, vehicleid);" ) ;
		//Itter_Add(VehicleGun, vehicleid);
		SendClientMessage(playerid,CGREEN,"Загрузка началась");
	}
	return 1;
}

CMD:unloadgun(playerid)
{
	if(p_info[playerid][tMember] != 3 && p_info[playerid][tMember] != 19 && p_info[playerid][tMember] != 27 && !IsAGang(playerid) && !ISAMAFIA(playerid)) return SendErr(playerid, "Вам недоступна эта функция");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetVehicleModel(vehicleid);
		//
		if( (p_info[playerid][tMember] == 27 && !IsABenAirVehicle(model)) ||
			(p_info[playerid][tMember] == 3 &&  model != 455) ||
			(p_info[playerid][tMember] == 19 && model != 455) ||
			(IsAGang(playerid) && model != 482) ||
			(ISAMAFIA(playerid) && model != 482)) return SendErr(playerid, "Вы должны быть за рулем т.с. для перевозки оружия");
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendErr(playerid, "Авто уже стоит на загрузке / разгрузке");
		gVehicleGun[vehicleid][vGunUnloading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z, Float:a;
		GetVehiclePos(vehicleid,x,y,z);
		GetVehicleZAngle(vehicleid,a);
		if(p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 19 || p_info[playerid][tMember] == 27)
		{
			if(p_info[playerid][tMember] == 27)
			{
				x = x - (-10.0*floatsin(a,degrees));
				y = y - 10.0*floatcos(a,degrees);
				z -= 0.4;
			}
			else
			{
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);
			}
			gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(3013, 23, x, y, z, -1, -1, -1, 100.0);
		}
		else
		{
			x = x - (-3.5*floatsin(a,degrees));
			y = y - 3.5*floatcos(a,degrees);
			gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(3013, 23, x, y, z, -1, -1, -1, 100.0);
		}
		format(stringer,144,"{f0f0f0}Разгрузка: \n{"#cBLUE"}%d{f0f0f0} из {"#cBLUE"} 40{f0f0f0} ящиков",gVehicleGun[vehicleid][vGunAmount]);
		gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(stringer,0xFFFFFF20,x,y,z+0.5,20.0);
		gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x,y,z,1.0);
		//print ( "Itter_Add(VehicleGun, vehicleid);" ) ;
		//Itter_Add(VehicleGun, vehicleid);
		SendClientMessage(playerid,CGREEN,"Разгрузка началась");
	}
	return 1;
}
//William_Franklin
CMD:lmenu(playerid)
{
	if ( p_info[ playerid ] [ tMember] == 0 ) return 1;
	if ( p_info[playerid][pAdmin] > 0 && p_info[playerid][pAdmin] < 11) return 1;
	new Member = p_info[ playerid ] [ tMember] - 1;
	if( p_info[ playerid ] [tRank] != FractionRank[Member])
	{
		format(stringer, 128, "Доступно с %d ранга", FractionRank[Member]);
		SendClientMessage(playerid,COLOR_GREY,stringer);
		return true;
	}
//	printf ("%d %d", Member + 1, f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]);
	//if(gFractionRank[Member][fractionInvite]==0) gFractionRank[Member][fractionInvite] = 1;
	//if(gFractionRank[Member][fractionUnInvite]==0) gFractionRank[Member][fractionUnInvite] = 1;
	//if(gFractionRank[Member][fractionGiverank]==0) gFractionRank[Member][fractionGiverank] = 1;

	if(f_info [ p_info[playerid][tMember] ] [ f_rank_invite ] == 0 ) f_info [ p_info[playerid][tMember] ] [ f_rank_invite ] = FractionRank [ Member ] ;
	if(f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ] == 0 ) f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ] = FractionRank [ Member ] ;
	if(f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ] == 0 ) f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ] = FractionRank [ Member ] ;
	//
//	printf ("%d %d", Member + 1, f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]);
//	printf ("%d", Member);
	stringer = "{"#cWHITE"}Респавн машин\n";
	format(stringer,1500,"%sМожет принимать:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]),f_info [ p_info[playerid][tMember] ] [ f_rank_invite ]);
	format(stringer,1500,"%sМожет увольнять:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ]),f_info [ p_info[playerid][tMember] ] [ f_rank_uninvite ]);
	format(stringer,1500,"%sМожет повышать:\t{ffff00}%s (%i){"#cWHITE"}\n",stringer, GetRank(p_info[playerid][tMember],f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ]),f_info [ p_info[playerid][tMember] ] [ f_rank_giverank ]);
	strcat(stringer, "Управление рангами\n");
	//strcat(stringer, "Управление автомобилем\n");
	strcat(stringer, "Изменить место спавна\n");
	strcat(stringer, "Изменить место склада\n");
	strcat(stringer, "Изменить место разгрузки\n");
	strcat(stringer, "Управление чёрным списком\n");
	strcat(stringer, "Установить сообщение фракции\n");
	ShowPlayerDialog(playerid,dLeaderMenu,DIALOG_STYLE_LIST,"{ffff00}Панель лидера", stringer, "Выбрать", "Закрыть");

	return 1;//f_message
}//fractionra
CMD:bl( playerid )
{
	if(!p_info[ playerid ] [ tMember]) return 1;
	else if(p_info[ playerid ] [ tRank] < f_info [ p_info[ playerid ] [ tMember] ] [ f_bl_config ] [ 0 ]) return 1;
	ShowPlayerDialog(playerid,dBlMenu,DIALOG_STYLE_LIST,"{ffff00}Чёрный список", "Внести в ЧС\nВычеркнуть из ЧС\nПросмотреть ЧС\nПросмотреть ЧС{33AA33} [онлайн]", "Выбрать", "Закрыть");
	return 1;
}

CMD:setspawnbomjpos(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	//if(p_info[playerid][pAdmin] != 12) return 1;
	GetPlayerPos ( playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ] ) ;
	GetPlayerFacingAngle ( playerid, f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] ) ;

	f_info [ p_info[playerid][tMember] ] [ f_spawn_int ] = GetPlayerInterior ( playerid ) ;
	f_info [ p_info[playerid][tMember] ] [ f_spawn_virt ] = GetPlayerVirtualWorld ( playerid ) ;

	SendSucc(playerid, "Место спавна успешно изменено");

	new sql_string [250];
	format(sql_string, 250, "UPDATE `fractions` SET `f_spawn` = '%f,%f,%f,%f,%d,%d' WHERE `f_id` = '%d'",
	f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ],
	f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ], f_info [ p_info[playerid][tMember] ] [ f_spawn_int ], f_info [ p_info[playerid][tMember] ] [ f_spawn_virt ],  f_info [ p_info[playerid][tMember] ] [ f_id ] );
	mysql_pquery(connects, sql_string, "", "");
	return 1;
}

CMD:amusic(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "ds[144]", params[0], params[1])) return SendInf(playerid, "Используйте: /amusic [радиус] [ссылка]");
	new Float:x,Float:y,Float:z;
	if(params[0] < 1 || params[0] > 500) return 1;
	GetPlayerPos(playerid,x,y,z);
	format(stringer, 128, "%s",params[1]);
	PlayAudioStreamForPlayer(playerid, stringer, x,y,z, float(params[0]),true);
	format(stringer, 144,"Вы включили радио и назначили дистанцию %d",params[0]);
	SCM(playerid,-1,stringer);
	return 1;
}

CMD:iban(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 5) return 1;
	if(!uAdmin[playerid][10]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "ds[144]", params[0], params[1])) return SendInf(playerid, "Используйте: /iban [id] [причина]");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(IsAFullDostup(params[0]) && !IsAFullDostup(playerid))
	{
		SCM(playerid, -1, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(p_info[params[0]][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя забанить");
	if(p_info[playerid][pAdmin] < 11 && p_info[params[0]][tLeader]) return SendErr(playerid, "Лидера нельзя забанить");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	if(IsIpFound(params[1]))
	{
		SendReklama(playerid,params[1]);
		return 1;
	}
	if(AntiReklama(params[1]) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив в /iban]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params[1]);
		AdmMes(CBADINFO,stringer,1);

		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(params[1],Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],params[1],strlen(params[1]),64);

	if(!strcmp(params[1], "!") || !strcmp(params[1], "1"))
	{
		format(stringer, 144, "Администратор %s забанил игрока %s на 3 дня.",NamePlayer[playerid],NamePlayer[params[0]]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	else
	{
		format(stringer, 144, "Администратор %s забанил игрока %s на 3 дня. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]], params[1]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;
	format(stringer, 144, "Администратор %s забанил игрока %s на 3 дня. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]], params[1]);
	WriteLog(TYPE_LOG_BAN,stringer);

	mysql_query_string[0] = EOS;
	format(mysql_query_string,500,"INSERT INTO `new_ban`(`IP`, `Name_Admin`, `Ban_Reason`, `Unban_Data`) VALUES ('%s','%s','%s','%i')",
												PlayerIp[params[0]], NamePlayer[playerid], params[1], unix + (3*86400));
	mysql_pquery(connects, mysql_query_string, "", "");


	new ipreg[17];
	GetPVarString(params[0], "IpReg", ipreg, 16);

	format(stringer, 128, "    Nik  [%s]    R-IP [%s]   L-IP  [%s]    IP  [%s]",NamePlayer[params[0]],ipreg,PlayerIp[params[0]],PlayerIp[params[0]]);
	AdmMes(COLOR_LIGHTRED,stringer,1);
	KickEx(params[0]);
	gAdmin[playerid][ADMIN_BAN] += 1;

	stringer[0] = EOS;
	format(stringer,700,"{FFFFFF}Внимание! Вас только что {AA3333}забанили на 3 дня.\
	\n{FFFFFF}Вас забанил(а): {AA3333}%s\
	\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
	\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
	\n{FFFFFF}Причина: {AA3333}%s", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
	tmpyear, tmpmonth, tmpday, params[1]);
	strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
	\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
	ShowPlayerDialog(params[0],0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
	return 1;
}

CMD:ban(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid, "Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][6]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "dds[144]", params[0], params[1], params[2])) return SendInf(playerid, "Используйте: /ban [id] [дни] [причина]");
	if(params[1] < 1 || params[1] > 30) return SendErr(playerid, "Ошибка. Неверное количество дней.");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	if(IsAFullDostup(params[0]) && !IsAFullDostup(playerid))
	{
		SCM(playerid, -1, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(p_info[params[0]][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя забанить");
	if(p_info[playerid][pAdmin] < 4 && p_info[params[0]][tLeader]) return SendErr(playerid, "Лидера нельзя забанить");
	if(IsIpFound(params[1]))
	{
		SendReklama(playerid,params[1]);
		return 1;
	}
	if(AntiReklama(params[1]) && !IsMegaAdmin(playerid))
	{
		format(stringer,250,"[Анти-слив <<< в /ban]: %s(%i){ff0000} попытался отправить текст: %s",NamePlayer[playerid],playerid,params[1]);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(params[2],Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],params[2],strlen(params[2]),64);
	if(!strcmp(params[2], "!") || !strcmp(params[2], "1"))
	{
		format(stringer, 128, "Администратор %s забанил игрока %s на %d дней.",NamePlayer[playerid],NamePlayer[params[0]], params[1]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	else
	{
		format(stringer, 128, "Администратор %s забанил игрока %s на %d дней. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]], params[1],params[2]);
		if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(COLOR_LIGHTRED, stringer);
		else SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
	}
	if(!strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return 1;

	format(stringer, 128, "Администратор %s забанил игрока %s на %d дней. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]], params[1],params[2]);
	WriteLog(TYPE_LOG_BAN,stringer);

	if(!IsMegaAdmin(params[0]))
	{
		new data[16],unbandate;
		new day, month, year;
		r_getdate(year, month, day);
		format(data, 16, "%02d.%02d.%04d", day, month, year);
		unbandate = unix + params[1]*86400;
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 512, "INSERT INTO `table_ban` (`Name_Admin`, `Name_Player`, `Ban_Data`, `Unban_Data`, `Ban_Reason`) VALUES ('%s', '%s', '%s', '%d', '%s')", NamePlayer[playerid], NamePlayer[params[0]], data, unbandate, params[2]);
		mysql_pquery(connects, mysql_query_string, "", "");

		new ipreg[17];
		GetPVarString(params[0], "IpReg", ipreg, 16);

		format(stringer, 128, "    Nik  [%s]    R-IP [%s]   L-IP  [%s]    IP  [%s]",NamePlayer[params[0]],ipreg,PlayerIp[params[0]],PlayerIp[params[0]]);
		AdmMes(COLOR_LIGHTRED,stringer,1);
		KickEx(params[0]);
		gAdmin[playerid][ADMIN_BAN] += 1;


		stringer[0] = EOS;
		format(stringer,700,"{FFFFFF}Внимание! Вас только что {AA3333}забанили.\
		\n{FFFFFF}Вас забанил(а): {AA3333}%s\
		\n{FFFFFF}Время: {AA3333}%02d:%02d:%02d\
		\n{FFFFFF}Дата: {AA3333}%d.%d.%d\
		\n{FFFFFF}Причина: {AA3333}%s\
		\n{FFFFFF}Разбан через: {AA3333}%d дней", NamePlayer[playerid], tmphour, tmpminute, tmpsecond,
		tmpyear, tmpmonth, tmpday, params[2], params[1]);
		strcat(stringer,"\n\n{FFFFFF}Если вы считаете это ошибкой и т. д. сделайте {AA3333}скриншот «F8» {FFFFFF}и отправьте на форум\
		\nФорум поддержки: {AA3333}"PROJECT_FORUM"\n{FFFFFF}Форум > Жалобы > {AA3333}Жалобы на администрацию");
		ShowPlayerDialog(params[0],0000,DIALOG_STYLE_MSGBOX,"{AA3333}Информация",stringer,"Закрыть","");
	}
	return 1;
}


CMD:skick(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 3) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][3]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "ds[144]", params[0], params[1])) return SendInf(playerid, "Используйте: /skick [playerid] [причина]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	if(IsAFullDostup(params[0]) && !IsAFullDostup(playerid))
	{
		SCM(playerid, -1, "Вы были сняты с админки за попытку тихо кикнуть основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(p_info[params[0]][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя забанить");
	if(p_info[playerid][pAdmin] < 11 && p_info[params[0]][tLeader]) return SendErr(playerid, "Лидера нельзя кикнуть");
	if(AntiReklama(params[1]))
	{
		format(stringer,250,"[Анти-слив <<< в /skick]: %s[%d] попытался отправить текст: %s (%i/3)",NamePlayer[playerid],playerid,params[1]);
		AdmMes(CREDD,stringer,1);

		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}

	format(stringer,128,"[A] %s[%d] кикнул без лишнего шума игрока %s. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[1]);
	AdmMes(CADMIN_INFO,stringer,1);

	format(stringer,128,"%s[%d] кикнул без лишнего шума игрока %s. Причина: %s",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[1]);
	WriteLog(TYPE_LOG_KICK,stringer);

	KickEx(params[0]);
	return 1;
}

CMD:sban(playerid, params[])
{
	new id, days, reason[64],ipreg[17],unbandate,day, month, year;
	if(p_info[playerid][pAdmin] < 4) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][11]) return SendErr(playerid,"Данная функция отключена основателем.");
	else if(sscanf(params, "iis[64]", id,days,reason)) return SendInf(playerid, "Используйте: /sban [playerid] [дни] [причина]");
	else if(!IsPlayerConnected(id)) return SendErr(playerid, "Игрок оффлайн");
	else if(IsAFullDostup(id) && !IsAFullDostup(playerid))
	{
		SCM(playerid, -1, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	else if(p_info[id][pAdmin] > p_info[playerid][pAdmin]) return SendErr(playerid, "Администратора нельзя забанить");
	else if(p_info[playerid][pAdmin] < 11 && p_info[id][tLeader]) return SendErr(playerid, "Лидера нельзя забанить");

	//getdate(year1, month1, day1);
	//gettime(hour1, minute1, second1);
	if(AntiReklama(reason))
	{
		format(stringer,250,"[Анти-слив в /sban]: %s[%d] попытался отправить текст: %s (%i/3)",NamePlayer[playerid],playerid,reason);
		AdmMes(CBADINFO,stringer,1);

		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}

	format(stringer, 255, "[A] %s тихо забанил игрока %s на %d дней. Причина: %s",NamePlayer[playerid], NamePlayer[id], days, reason);
	AdmMes(CADMIN_INFO,stringer,1);

	format(stringer, 128, "%s тихо забанил игрока %s на %d дней. Причина: %s",NamePlayer[playerid], NamePlayer[id], days, reason);
	WriteLog(TYPE_LOG_BAN,stringer);


	r_getdate(year, month, day);
	unbandate = unix + days*86400;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "INSERT INTO `table_ban` (`Name_Admin`, `Name_Player`, `Ban_Data`, `Unban_Data`, `Ban_Reason`) VALUES ('%s', '%s', '%02d.%02d.%04d', '%d', '%s')", NamePlayer[playerid], NamePlayer[id], day, month, year, unbandate, reason);
	mysql_pquery(connects, mysql_query_string, "", "");

	GetPVarString(id, "IpReg", ipreg, 16);

	format(stringer, 255, "    Nik [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",NamePlayer[id],ipreg,PlayerIp[id],PlayerIp[id]);
	AdmMes(CADMIN_INFO,stringer,1);
	KickEx(id);
	gAdmin[playerid][ADMIN_BAN] ++;

	return 1;
}

CMD:si(playerid)
{
	if(GetPVarInt(playerid,"PlayerCuffed") == 1) return SendErr(playerid, "Вы в наручниках");
	///if(SELECT_SERVER == 2) return 1;
	if(p_info[playerid][pJailTime]) return SendErr(playerid, "Вы в тюрьме");
	if(LapTime < ((60 * 20)-60)) return SendErr(playerid, "Ожидайте старта гонки");
	if (GetPlayerState(playerid)==PLAYER_STATE_DRIVER)
	{
		AC_SetVehiclePos(GetPlayerVehicleID(playerid), 260.0048 + random(2), -2219.4446, 4.6540);
		AC_SetVehicleZAngle(GetPlayerVehicleID(playerid), 310.5739);
		AC_SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
		AC_LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
	}
	else
	{
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		AC_SetPlayerPos(playerid, 260.0048 + random(2), -2219.4446, 4.6540);
		SetPlayerFacingAngle(playerid, 310.5739);
	}

	SetCameraBehindPlayer(playerid);

	SendClientMessage(playerid, 0xFFDD00AA, "Вы приняли участие в гонке 'Stunt Island'");

	if (FastestLapTime != 999)
	{
		format(stringer, 128, "* Текущий рекорд %i секунд, поставил: %s", FastestLapTime, FastestLapName);
		SendClientMessage(playerid, 0xFFDD00AA, stringer);
	}

	GameTextForPlayer(playerid, "~b~~h~Stunt Island!", 3000, 3);

	if(GetPVarInt(playerid,"SIPlayerCP")) DeletePVar(playerid,"SIPlayerCP");
	SetPlayerRaceCheckpoint(playerid, 1, StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP")][2], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][0], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][1], StuntIslandCPs[GetPVarInt(playerid,"SIPlayerCP") + 1][2], 12.0);
	return 1;
}

CMD:showpass(playerid) return SendInf(playerid,"Используйте: /pass [id]");





CMD:pvp(playerid,params[])
{
	if(duel_t >= MAX_DUELS) return SendClientMessage(playerid,COLOR_GREY,"В данный момент нельзя вести дуэли (ожидайте)");
	new id_pvp,id_gun,money_pvp;
	if(!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в банде.");
	else if(sscanf(params,"ddd", id_pvp,id_gun,money_pvp)) return SendInf(playerid,"Введите /pvp [id игрока] [id оружие] [ставка]");
	else if(!IsPlayerConnected(id_pvp)) return SendErr(playerid,"Игрок не в сети");
	else if(!IsAGang(id_pvp))return SendErr(playerid,"Игрок не состоит в банде");
	else if(!IsPlayerStream(10.0, playerid, id_pvp) || GetPlayerVirtualWorld(id_pvp) != GetPlayerVirtualWorld(playerid)) return SendErr(playerid, "Игрок не рядом с вами");
	else if(id_gun != 25 && id_gun != 29 && id_gun != 31 && id_gun != 24 && id_gun != 30) return SendErr(playerid, "Доступные ID оружия: Desert Eagle(24), ShotGun(25), MP5(29), AK-47(30), M4(31)");
	else if(money_pvp < 1 || money_pvp > p_info[playerid][pCash] || money_pvp < p_info[id_pvp][pCash]) return SCM(playerid,COLOR_GREY,"У вас нет столько денег / У противника нет столько денег");
	format(stringer,128,"%s {"#cINFO"}предлагает вам дуэль на {"#cWHITE"}%s", NamePlayer[playerid], WeaponNames[id_gun]);
	SendClientMessage(id_pvp,-1,stringer);
	SendClientMessage(id_pvp,CINFO,"Чтобы согласиться нажмите {"#cGREEN"}Y{"#cINFO"}, для отказа {"#cRED"}N");

	format(stringer,128,"Вы предложили дуэль {"#cWHITE"}%s {"#cINFO"}на {"#cWHITE"}%s", NamePlayer[id_pvp], WeaponNames[id_gun]);
	SendClientMessage(playerid,CINFO,stringer);

	SetPVarInt(playerid,"id_pvp",id_pvp+1);
	SetPVarInt(playerid,"id_gun",id_gun);
	SetPVarInt(playerid,"money_pvp",money_pvp);
	SetPVarInt(id_pvp,"id_pvp",playerid+1);
	return 1;
}

CMD:mm(playerid)
{
	ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{"#cWHITE"}Меню игрока", "{"#cORANGE"}1.{"#cWHITE"} Личные настройки\n{"#cORANGE"}2.{"#cWHITE"} Статистика игрока\n{"#cORANGE"}3.{"#cWHITE"} Список команд\n{"#cORANGE"}4.{"#cWHITE"} Связь с администрацией\n{"#cORANGE"}5.{"#cWHITE"} Безопасность\n{"#cORANGE"}6.{"#cWHITE"} Донат\n{"#cORANGE"}7.{"#cWHITE"} Доступ к игре\n{"#cORANGE"}8.{"#cWHITE"} Смена нонРП ника", "Ок", "Выход");
	DeletePVar(playerid,"showhelp");
	return 1;
}

CMD:mn(playerid)
{
	ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{"#cWHITE"}Меню игрока", "{"#cORANGE"}1.{"#cWHITE"} Личные настройки\n{"#cORANGE"}2.{"#cWHITE"} Статистика игрока\n{"#cORANGE"}3.{"#cWHITE"} Список команд\n{"#cORANGE"}4.{"#cWHITE"} Связь с администрацией\n{"#cORANGE"}5.{"#cWHITE"} Безопасность\n{"#cORANGE"}6.{"#cWHITE"} Донат\n{"#cORANGE"}7.{"#cWHITE"} Доступ к игре\n{"#cORANGE"}8.{"#cWHITE"} Смена нонРП ника", "Ок", "Выход");
	DeletePVar(playerid,"showhelp");
	return 1;
}

CMD:help(playerid)
{
	ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{"#cWHITE"}Меню игрока", "{"#cORANGE"}1.{"#cWHITE"} Личные настройки\n{"#cORANGE"}2.{"#cWHITE"} Статистика игрока\n{"#cORANGE"}3.{"#cWHITE"} Список команд\n{"#cORANGE"}4.{"#cWHITE"} Связь с администрацией\n{"#cORANGE"}5.{"#cWHITE"} Безопасность\n{"#cORANGE"}6.{"#cWHITE"} Донат\n{"#cORANGE"}7.{"#cWHITE"} Доступ к игре\n{"#cORANGE"}8.{"#cWHITE"} Смена нонРП ника", "Ок", "Выход");
	DeletePVar(playerid,"showhelp");
	return 1;
}

CMD:setquests1(playerid, params[])
{
	if(sscanf(params,"ii", params[0], params[1])) return SendClientMessage(playerid,-1,"/setquest [slot] [data]");
	QuestStep[params[0]][playerid] = params[1];
	return 1;
}

CMD:present(playerid, params[])
{
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid,CYELLOW,"Введите: {FFFFFF}/present [playerid]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CRED,"Ошибка: {FFFFFF}Игрок не в сети.");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendClientMessage(playerid,CRED,"Ошибка: {FFFFFF}Игрок не рядом с вами.");
	if(GetPlayerWeapon(playerid) != 14) return SendClientMessage(playerid,CRED,"Ошибка: {FFFFFF}У вас нет цветов.");
	new weapons[13][2],me_str[64];
	for(new S = 0; S<13; S++) GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
	AC_ResetPlayerWeapons ( playerid ) ;
	for(new S = 0; S<13 ; S++) if(weapons[S][0] != 14 && weapons[S][0] != 0) AC_GivePlayerWeapon (playerid,weapons[S][0],weapons[S][1]);
	AC_GivePlayerWeapon(params[0], 14, 1);
	format(me_str,64,"подарил(а) цветы %s.",NamePlayer[params[0]]);
	MeAction(playerid, me_str);
	MeAction(params[0], "взял(а) цветы.");
	FIXES_ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return 1;
}

CMD:quest(playerid)
{
	new quest_string[120];
	stringer[0] = EOS;
	strcat(stringer, "{"#cWHITE"}");
	//
	if ( QuestStep[0][playerid] == 0 ) strcat ( stringer, "1. Начало\t{"#cLIGHTRED"}[Не начато]\n");
	else if ( QuestStep[0][playerid] >= 1 && QuestStep[0][playerid] <= 7)
	{
		format(quest_string, 120, "1. Начало\t{"#cORANGE"}[В процессе: %.1f / 100.0 %]\n", floatmul(floatdiv( 100,8 ),QuestStep[0][playerid]));
		strcat ( stringer, quest_string);
	}
	else if ( QuestStep[0][playerid] == 8) strcat ( stringer, "1. Начало\t{"#cGREEN"}[Завершено]\n");
	//
	if ( QuestStep[1][playerid] == 0 ) strcat ( stringer, "2. Первая работа\t{"#cLIGHTRED"}[Не начато]\n");
	else if ( QuestStep[1][playerid] >= 1 && QuestStep[1][playerid] <= 8)
	{
		format(quest_string, 120, "2. Первая работа\t{"#cORANGE"}[В процессе: %.1f / 100.0 %]\n", floatmul(floatdiv( 100,9 ),QuestStep[1][playerid]));
		strcat ( stringer, quest_string);
	}
	else if ( QuestStep[1][playerid] == 9) strcat ( stringer, "2. Первая работа\t{"#cGREEN"}[Завершено]\n");
	//
	if ( QuestStep[2][playerid] == 0 ) strcat ( stringer, "3. Модный приговор\t{"#cLIGHTRED"}[Не начато]\n");
	else if ( QuestStep[2][playerid] >= 1 && QuestStep[2][playerid] <= 4)
	{
		format(quest_string, 120, "3. Модный приговор\t{"#cORANGE"}[В процессе: %.1f / 100.0 %]\n", floatmul(floatdiv( 100,5 ),QuestStep[2][playerid]));
		strcat ( stringer, quest_string);
	}
	else if ( QuestStep[2][playerid] == 5) strcat ( stringer, "3. Модный приговор\t{"#cGREEN"}[Завершено]\n");
	//
	if ( QuestStep[3][playerid] == 0 ) strcat ( stringer, "4. Трудовые будни\t{"#cLIGHTRED"}[Не начато]\n");
	else if ( QuestStep[3][playerid] >= 1 && QuestStep[3][playerid] <= 7)
	{
		format(quest_string, 120, "4. Трудовые будни\t{"#cORANGE"}[В процессе: %.1f / 100.0 %]\n", floatmul(floatdiv( 100,8 ),QuestStep[3][playerid]));
		strcat ( stringer, quest_string);
	}
	else if ( QuestStep[3][playerid] == 8) strcat ( stringer, "4. Трудовые будни\t{"#cGREEN"}[Завершено]\n");
	//
	if ( QuestStep[4][playerid] == 0 ) strcat ( stringer, "5. Средство связи\t{"#cLIGHTRED"}[Не начато]\n");
	else if ( QuestStep[4][playerid] >= 1 && QuestStep[4][playerid] <= 2)
	{
		format(quest_string, 120, "5. Средство связи\t{"#cORANGE"}[В процессе: %.1f / 100.0 %]\n", floatmul(floatdiv( 100,3 ),QuestStep[4][playerid]));
		strcat ( stringer, quest_string);
	}
	else if ( QuestStep[4][playerid] == 3) strcat ( stringer, "5. Средство связи\t{"#cGREEN"}[Завершено]\n");
	//
	if ( QuestStep[5][playerid] == 0 ) strcat ( stringer, "6. Лесник\t{"#cLIGHTRED"}[Не начато]\n");
	else if ( QuestStep[5][playerid] >= 1 && QuestStep[5][playerid] <= 3)
	{
		format(quest_string, 120, "6. Лесник\t{"#cORANGE"}[В процессе: %.1f / 100.0 %]\n", floatmul(floatdiv( 100,3 ),QuestStep[4][playerid]));
		strcat ( stringer, quest_string);
	}
	else if ( QuestStep[5][playerid] == 4) strcat ( stringer, "6. Лесник\t{"#cGREEN"}[Завершено]\n");
	ShowPlayerDialog(playerid, dQuestShowList, 2, "{"#cINFO"}Информация о квестах", stringer, "Далее", "Отмена");
	return 1;
}

CMD:menu(playerid)
{
	ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{"#cWHITE"}Меню игрока", "{"#cORANGE"}1.{"#cWHITE"} Личные настройки\n{"#cORANGE"}2.{"#cWHITE"} Статистика игрока\n{"#cORANGE"}3.{"#cWHITE"} Список команд\n{"#cORANGE"}4.{"#cWHITE"} Связь с администрацией\n{"#cORANGE"}5.{"#cWHITE"} Безопасность\n{"#cORANGE"}6.{"#cWHITE"} Донат\n{"#cORANGE"}7.{"#cWHITE"} Доступ к игре\n{"#cORANGE"}8.{"#cWHITE"} Смена нонРП ника\n{"#cORANGE"}9.{"#cWHITE"} Перенос аккаунта", "Ок", "Выход");
	DeletePVar(playerid,"showhelp");
	return 1;
}

CMD:mainmenu(playerid)
{
	ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "{"#cWHITE"}Меню игрока", "{"#cORANGE"}1.{"#cWHITE"} Личные настройки\n{"#cORANGE"}2.{"#cWHITE"} Статистика игрока\n{"#cORANGE"}3.{"#cWHITE"} Список команд\n{"#cORANGE"}4.{"#cWHITE"} Связь с администрацией\n{"#cORANGE"}5.{"#cWHITE"} Безопасность\n{"#cORANGE"}6.{"#cWHITE"} Донат\n{"#cORANGE"}7.{"#cWHITE"} Доступ к игре\n{"#cORANGE"}8.{"#cWHITE"} Смена нонРП ника\n{"#cORANGE"}9.{"#cWHITE"} Перенос аккаунта", "Ок", "Выход");
	DeletePVar(playerid,"showhelp");
	return 1;
}

CMD:gbank(playerid)
{
	if(!IsAGang(playerid)) return 1;
	format(stringer, 128,"В банке %s: %d $", f_info[p_info[playerid][tMember]][f_name],frac_money[p_info[playerid][tMember]]);
	SendClientMessage(playerid,0x6ab1ffaa,stringer);

	return 1;
}

CMD:makedj(playerid,params[])
{
	//if(p_info[playerid][pAdmin] < 1) return 1;
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(SELECT_SERVER != 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	if(sscanf(params, "i", params[0])) return SendInf(playerid,"/makedj [playerid]");

	SetPVarInt(params[0], "DJ", (!GetPVarInt(params[0],"DJ")) ? (true) : (false));

	format(stringer, 128, "Вы %s %s [%d] %s диджея", (GetPVarInt(params[0],"DJ")) ? ("назначили") : ("сняли"), NamePlayer[params[0]], params[0], (GetPVarInt(params[0],"DJ")) ? ("на пост") : ("с поста"));
	SendSucc(playerid,stringer);

	format(stringer, 128, "Вас %s %s диджея %s [%d]", (GetPVarInt(params[0],"DJ")) ? ("назначил") : ("снял"), (GetPVarInt(params[0],"DJ")) ? ("на пост") : ("с поста"), NamePlayer[playerid], playerid);
	SendInf(params[0],stringer);

	UpdatePlayerData(params[0], "DJ", GetPVarInt(params[0],"DJ"));
	return 1;
}

CMD:makedjoff(playerid,params[])
{
	//if(p_info[playerid][pAdmin] < 1) return 1;
	if(SELECT_SERVER != 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	if(isnull(params) || strlen(params) > 24) return SendInf(playerid,"/makedjoff [ник]");

	format(stringer, 128, "Вы успешно сняли диджея %s", params);
	SendClientMessage(playerid, CBLUE, stringer);

	mysql_query_string[0] = EOS;
	format(mysql_query_string,256,"UPDATE `accounts` SET `DJ` = '0' WHERE `tName` = '%s'", params);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}

CMD:offdj(playerid)
{
	//if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	mysql_pquery(connects, "SELECT `tName` FROM `accounts` WHERE `DJ` = '1'", "offdj", "i", playerid);
	return 1;
}

forward offdj(playerid);
public offdj(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendErr(playerid, "Диджеев не найдено");
	new name[MAX_PLAYER_NAME];
	stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
	for(new i = 0; i < rows; i++)
	{
		cache_get_value_index(i,0,name, MAX_PLAYER_NAME);
		format(stringer,1500,"%s%d. %s\n",stringer,i+1,name);
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX, "Диджеи", stringer, "Закрыть", "");

	return 1;
}

CMD:fdj(playerid,params[])
{
	if(SELECT_SERVER != 1) return 1;
	if(!GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не диджей");
	if(isnull(params) || strlen(params) > 144) return SendInf(playerid,"/fdj [текст]");

	foreach(i)
	{
		if(!GetPVarInt(i,"DJ")) continue;
		format(stringer, 128, "[DJ] %s [%d]: %s", NamePlayer[playerid],playerid,params);
		SendClientMessage(i, CLIGHTBLUE, stringer);
	}

	return 1;
}

CMD:vroff(playerid,params[])
{
	if(!p_info[playerid][pDonateRank]) return SendErr(playerid,"Вы не имеете VIP");
	if(GetPVarInt(playerid,"vroff"))
	{
		DeletePVar(playerid,"vroff");
		SCM(playerid,CGREEN,"Вы включили VIP-чат");
	}
	else
	{
		SetPVarInt(playerid,"vroff",true);
		SCM(playerid,CRED,"Вы отключили VIP-чат");
	}
	return 1;
}

CMD:vr(playerid,params[])
{
	if(!p_info[playerid][pDonateRank]) return SendErr(playerid,"Вы не имеете VIP");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	if(isnull(params) || strlen(params) > 144) return SendInf(playerid,"/vr [текст]");
	foreach(i)
	{
		if(!p_info[i][pDonateRank]) continue;
		if(GetPVarInt(i,"vroff")) continue;
		format(stringer, 128, "[V] %s [%d]: %s", NamePlayer[playerid],playerid,params);
		SendClientMessage(i, CLIGHTBLUE, stringer);
	}

	return 1;
}

CMD:dj(playerid)
{
	if(SELECT_SERVER != 1) return 1;
	stringer = "Имя\t\t\tТелефон{"#cWHITE"}\n\n";
	foreach(i)
	{
		if(GetPVarInt(i,"DJ")) format(stringer,1500,"%s[DJ] %s\t%i\n", stringer,NamePlayer[i],p_info[i][pPnumber]);
	}
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{"#cINFO"}DJ онлайн", stringer, "Закрыть", "");
	return 1;
}

CMD:carmat(playerid)
{
	if(p_info[playerid][tMember] != 3 && p_info[playerid][tMember] != 19) return SendErr(playerid,"Вы не военный");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548 || !start_work[playerid]) return 1;
	SetPlayerRaceCheckpoint(playerid,1,2064.2183,-102.4871,8.8051,0.0,0.0,0.0,10.0);
	SetPVarInt(playerid,"carmat", true);
	SendSucc(playerid,"Метка обозначена на карте");
	return 1;
}

CMD:members(playerid)
{
	if(p_info[playerid][tMember] == 0) return SendErr(playerid,"Вы не состоите в организации");
	ShowPlayerDialog(playerid, 9010, DIALOG_STYLE_LIST, "{ffff00}Члены организации", "{ffff00}--{FFFFFF} Отразить диалогом\n{ffff00}--{FFFFFF} Отразить картой", "Выбрать", "Закрыть" ) ;
	return 1;
}
CMD:sap(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	stringer[0] = EOS;
	if(BONUS_PAYDAY) strcat(stringer, "1) Отключить x4 PayDay, EXP, donate\n");
	else strcat(stringer, "1) Включить x4 PayDay, EXP, donate\n");
	strcat(stringer, "2) Пересоздать подарки\n");
	ShowPlayerDialog(playerid, dSAP, DIALOG_STYLE_LIST, "{FFFF00}Управление", stringer, "Выбор", "Отмена");
	return 1;
}
ALT:ap:apanel;
ALT:ap:ahelp;
ALT:ap:adminhelp;
ALT:ap:adminpanel;
CMD:ap(playerid, params[])
{
	if(p_info[playerid][pAdmin] == 0) return -1;
	ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "{"#cPINK"}Админ-панель", "{"#cORANGE"}-{ffffff} Команды\n{"#cORANGE"}-{ffffff} Запустить развлечения\n{"#cORANGE"}-{ffffff} Телепорт меню\n{"#cORANGE"}-{ffffff} Устроиться на работу\n{"#cORANGE"}-{ffffff} Игроки с одинаковым IP - адресом\n{"#cORANGE"}-{ffffff} Информация о игроках с варном\n{"#cORANGE"}-{ffffff} Информация о игроках с баном чата\n{"#cORANGE"}-{ffffff} Выдать PayDay", "Выбрать", "Отмена");
	return 1;
}

CMD:gps(playerid)
{
	stringer[0] = EOS;
	strcat(stringer,"{"#cORANGE"}-{"#cWHITE"} Найти ближашую заправку\n{"#cORANGE"}1.{"#cWHITE"} Важные места\n{"#cORANGE"}2.{"#cWHITE"} Работы\n{"#cORANGE"}3.{"#cWHITE"} Государственные места\n{"#cORANGE"}4.{"#cWHITE"} Мафии\n{"#cORANGE"}5.{"#cWHITE"} Банды\n{"#cORANGE"}6.{"#cWHITE"} Бизнес организации\n{"#cORANGE"}7.{"#cWHITE"} Автосалоны/Мастерские\n{"#cORANGE"}8.{"#cWHITE"} Клубы\n{"#cORANGE"}9.{"#cWHITE"} Развлечения\n{"#cORANGE"}10.{"#cWHITE"} Магазины оружия\n{"#cORANGE"}11.{"#cWHITE"} Магазины одежды\n");
	strcat(stringer,"{"#cORANGE"}12.{"#cWHITE"} Бар\n{"#cORANGE"}13.{"#cWHITE"} Место добычи металл/патрон\n{"#cORANGE"}14.{"#cWHITE"} Отели\n{"#cORANGE"}15.{"#cWHITE"} Риэлторские агенства\n{"#cORANGE"}16.{"#cWHITE"} Салоны связи\n{"#cORANGE"}17.{"#cWHITE"} Спортивные залы\n{"#cORANGE"}18.{"#cWHITE"} Магазин мебели\n");
	ShowPlayerDialog(playerid, 9624, DIALOG_STYLE_LIST, "{ffff00}GPS - меню", stringer, "Выбрать", "Отмена");
	return 1;
}

CMD:inv(playerid)
{
	ShowPlayerDialog(playerid, dInv, DIALOG_STYLE_TABLIST,"{ffff00}Инвентарь", "{"#cORANGE"}1.{"#cWHITE"} Аксессуары", "Выбрать", "Закрыть");
	return 1;
}

CMD:attachments1(playerid)
{
	//stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
	/*for(new index=0;index<MAX_PLAYER_ATTACHED_OBJECTS;index++)
	{
		format(stringer, 500, "%sСлот: %i\t%s\n", stringer, (index+1),(GP_AO[playerid][index][g_modelid]) ? ("[Используется]"):(""));
	}
	ShowPlayerDialog(playerid, 6557, DIALOG_STYLE_TABLIST,"{FF0000}Выберите слот, куда вы хотите одеть аксессуар", stringer, "Выбрать", "Закрыть");*/
	return 1;
}

CMD:unmark(playerid)
{
	if(!GetPVarFloat(playerid,"GPS_X")) return 1;
	DeletePVar(playerid,"GPS_X");
	DeletePVar(playerid,"GPS_Y");
	DeletePVar(playerid,"GPS_Z");
	RemovePlayerMapIcon(playerid, 80);
	PlayerTextDrawHide(playerid,TD_GPS[playerid]);
	return 1;
}

CMD:ainvite(playerid,params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(p_info[playerid][pAdmin] < 5) return 1;
	if(p_info[playerid][tMember] == 0) return SendErr(playerid,"Вы не состоите в фракции");
	if(sscanf(params,"i",params[0])) return	SendInf(playerid, "Используйте: /ainvite [ид игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(IsPlayerInAnyVehicle(params[0])) return  SendErr(playerid, "Игрок в машине");
	if (p_info[params[0]][tMember] > 0 || p_info[params[0]][tLeader] > 0) return SendErr(playerid, "Игрок уже где то состоит");
	if(p_info[params[0]][pWarns] >= 1) return SendErr(playerid, "У игрока есть предупреждение");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");

	format(stringer, 250, "Администратор "nwhite"%s "newblue"предложил вам вступить в фракцию %s", NamePlayer[playerid],f_info[p_info[playerid][tMember]][f_name]);
	SendClientMessage(params[0], CNBLUE, stringer);
	SCM(params[0], CNBLUE, "- Чтобы потвердить нажмите "newgreen"Y "newblue" иначе"newred" N");

	format(stringer, 144, "Вы предложили "nwhite"%s"newblue" вступить в фракцию "nwhite"%s",NamePlayer[params[0]],f_info[p_info[playerid][tMember]][f_name]);
	SendClientMessage(playerid, CNBLUE, stringer);

	SetPVarInt(params[0],"Invite",1);
	SetPVarInt(params[0],"Player",playerid);
	return 1;
}

CMD:invite(playerid, params[])
{
	if(p_info[playerid][tMember] == 0) return 1;
	if(p_info[playerid][tRank] < f_info[p_info[playerid][tMember]][f_rank_invite])
	{
		format(stringer,128,"Доступно с %i ранга", f_info[p_info[playerid][tMember]][f_rank_invite]);
		SendErr(playerid,stringer);
		return 1;
	}
	if(StartWork(playerid) &&  !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return	SendInf(playerid, "Используйте: /invite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(IsPlayerInAnyVehicle(params[0])) return  SendErr(playerid, "Игрок в машине");
	if(p_info[params[0]][tMember] > 0 || p_info[params[0]][tLeader] > 0) return SendErr(playerid, "Игрок уже где то состоит");
	if(p_info[params[0]][pWarns] >= 1) return SendErr(playerid, "У игрока есть предупреждение");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");

	format(stringer, 250, "%s {"#cINFO"}предложил вам вступить в фракцию %s.",NamePlayer[playerid],f_info[p_info[playerid][tMember]][f_name]);
	SCM(params[0],  CWHITE, stringer);
	SCM(params[0],  0x269BD8FF, "Чтобы потвердить нажмите {33AA33}Y {"#cINFO"} иначе{"#cRED"} N");

	format(stringer, 250,"Вы предложили {"#cWHITE"}%s{"#cINFO"} вступить в фракцию {"#cWHITE"}%s",NamePlayer[params[0]],f_info[p_info[playerid][tMember]][f_name]);
	SCM(playerid, 0x269BD8FF,  stringer);
	SetPVarInt(params[0],"Invite",1);
	SetPVarInt(params[0],"Player",playerid);
	return 1;
}

ALT:bandchat:bc;
CMD:bandchat(playerid, params[])
{
	if(!IsAGang(playerid)) return  SendErr(playerid, "Вы не бандит");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: /bandchat [текст]");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас бан чата");
	if(p_info[playerid][tMember] == 12 || p_info[playerid][tMember] == 13 || p_info[playerid][tMember] == 15
	|| p_info[playerid][tMember] ==17 || p_info[playerid][tMember] == 18)
	{
		if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1]) return SendErr(playerid, "Доступно только лидеру");
		format(stringer, 144, "[BC] {%06x}%s {"#cWHITE"}%s [%d]: %s", fraction_color[p_info [ playerid ] [ tMember ]] >>> 8,f_info[p_info[playerid][tMember]][f_name],NamePlayer[playerid],playerid, params);
		SendGangerMessage(CRED, stringer);
	}
	return 1;
}

CMD:subleader(playerid,params[])
{
	if(p_info[playerid][tMember] != 26) return SendErr(playerid, "Вы не состоите в правительство");
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /subleader [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(p_info[params[0]][tMember]>0) return SendErr(playerid, "Игрок находится во фракции");
	if(p_info[params[0]][pAdmin]>0) return SendErr(playerid, "Игрок администратор");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");
	switch(p_info[playerid][tRank])
	{
		case 10:ShowPlayerDialog(playerid,dSubleader,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите фракцию","{"#cWHITE"}Police Department\nSan Andreas Sheriff Department\nA.R.G.U.S.\nHostage Rescue Team","Выбрать","Закрыть");
		case 9:ShowPlayerDialog(playerid,dSubleader,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите фракцию","{"#cWHITE"}Национальная Гвардия","Выбрать","Закрыть");
		case 8:ShowPlayerDialog(playerid,dSubleader,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите фракцию","{"#cWHITE"}Больница Лос-Сантос\nБольница Сан-Фиерро\nБольница Лас-Вентурас","Выбрать","Закрыть");
	}
	SetPVarInt(playerid,"subplayerid",params[0]);
	return 1;
}
CMD:giverank(playerid, params[])
{
	if(!p_info[playerid][tMember]) return 1;
	if(p_info[playerid][tRank] < f_info[p_info[playerid][tMember]][f_rank_giverank])
	{
		format(stringer,128,"Доступно с %i ранга", f_info[p_info[playerid][tMember]][f_rank_giverank]);
		SendErr(playerid,stringer);
		return 1;
	}
	if(StartWork(playerid) &&  !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /giverank [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(p_info[params[0]][tLeader] >= 1) return SendErr(playerid, "Неверный ID");
	if(p_info[playerid][tMember] != p_info[params[0]][tMember]) return SendErr(playerid, "Данный игрок не в вашей фракции");
	if(p_info [params[0]][tRank] >= p_info[playerid][tRank]) return SendErr(playerid, "Игрок выше вас рангом / Или вашего ранга");

	stringer[0] = EOS;
	if(p_info[playerid][tRank] == FractionRank[p_info[playerid][tMember]-1])
	{
		for(new i = 1; i <= FractionRank[p_info[playerid][tMember]-1]-1; i++)
		{
			format(stringer,1000,"%s%s%s (%i)\n",stringer,(p_info[params[0]][tRank] == i) ? ("{ffff00}") : (""),GetRank(p_info[playerid][tMember],i),i);
			ShowPlayerDialog(playerid,dRank,DIALOG_STYLE_LIST,"Выберите ранг",stringer,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	else if(p_info[playerid][tRank] == FractionRank[p_info[playerid][tMember]-1]-(FractionRank[p_info[playerid][tMember]-1]-p_info[playerid][tRank]))
	{
		for(new i = 1; i <= FractionRank[p_info[playerid][tMember]-1]-2; i++)
		{
			format(stringer,1000,"%s%s%s (%i)\n",stringer,(p_info[params[0]][tRank] == i) ? ("{ffff00}") : (""),GetRank(p_info[playerid][tMember],i),i);
			ShowPlayerDialog(playerid,dRank,DIALOG_STYLE_LIST,"Выберите ранг",stringer,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	return 1;
}

CMD:createpodar(playerid, params[])
{
	if(p_info[playerid][pAdmin]<11)return false;
	if(GetPlayerState(playerid)!=2 && GetPlayerState(playerid)!=3)return SendClientMessage(playerid,COLOR_RED,"only in car!");

	for(new i;i<250;i++)
	{
	    if(DynamicPodarokInfo[i][porCreat]==-1)
	    {
	        GetPlayerPos(playerid,DynamicPodarokInfo[i][porPos][0], DynamicPodarokInfo[i][porPos][1], DynamicPodarokInfo[i][porPos][2]);
	        DynamicPodarokInfo[i][porCreat] = CreateDynamicPickup(19056,1,DynamicPodarokInfo[i][porPos][0], DynamicPodarokInfo[i][porPos][1], DynamicPodarokInfo[i][porPos][2],-1);
	        return 1;
	    }
	}
	return true;
}

CMD:rent(playerid,params[])
{
	new vehicleid = GetRentCar(playerid);
	if(vehicleid == INVALID_PLAYER_ID) return SendErr(playerid, "Вам недоступно данное действие");
	if(!strlen(params[0]))
	{
		SendClientMessage(playerid,CORANGE, "» {"#cWHITE"}/rent {"#cORANGE"}[действие]");
		SendClientMessage(playerid,CORANGE,"[1] {"#cWHITE"}lock {"#cORANGE"}» {"#cWHITE"}открыть/закрыть машину");
		SendClientMessage(playerid,CORANGE,"[2] {"#cWHITE"}gps {"#cORANGE"}» {"#cWHITE"}найти машину");
		SendClientMessage(playerid,CORANGE,"[3] {"#cWHITE"}fix {"#cORANGE"}» {"#cWHITE"}зареспавнить машину");
		SendClientMessage(playerid,CORANGE,"[4] {"#cWHITE"}exit {"#cORANGE"}» {"#cWHITE"}отказаться от аренды");
		return 1;
	}
	new t_params = !strcmp(params[0],"lock") ? (1) : !strcmp(params[0],"gps") ? (2) : !strcmp(params[0],"fix") ? (3) : !strcmp(params[0],"lock") ? (4) : strval(params[0]);
	if(t_params >= 1 && t_params <= 4)
	{
		switch(t_params)
		{
			case 1:
			{
				GetVehiclePos(vehicleid,gVehicles[vehicleid-1][veX],gVehicles[vehicleid-1][veY],gVehicles[vehicleid-1][veZ]);
				if(PlayerToPoint(4.0,playerid,gVehicles[vehicleid-1][veX],gVehicles[vehicleid-1][veY],gVehicles[vehicleid-1][veZ]))
				{
					ToggleLock(vehicleid, (gVehicles[vehicleid-1][vLock]) ? (false) : (true));
					UpdateTDLock(playerid, vehicleid);
					GameTextForPlayer(playerid, (!gVehicles[vehicleid-1][vLock]) ? ("~r~~h~CLOSE"):("~g~~h~OPEN"), 2000, 4);
					SendClientMessage(playerid,CORANGE, (gVehicles[vehicleid-1][vLock]) ? ("Вы открыли машину") : ("Вы закрыли машину"));
				}
			}
			case 2:
			{
				GetVehiclePos(vehicleid,gVehicles[vehicleid-1][veX],gVehicles[vehicleid-1][veY],gVehicles[vehicleid-1][veZ]);
				SetPlayerCheckpoint(playerid,gVehicles[vehicleid-1][veX],gVehicles[vehicleid-1][veY],gVehicles[vehicleid-1][veZ],10.0);
				SendClientMessage(playerid,CORANGE,"{"#cORANGE"}» {"#cWHITE"}Машина отмечена на радаре");
			}
			case 3:
			{
				SetVehicleToRespawn(vehicleid);
				SendClientMessage(playerid,CORANGE,"{"#cORANGE"}» {"#cWHITE"}Вы зареспавнили машину");
			}
			case 4:
			{
				for(new v = 0; v < MAX_RENT_VEHICLES; v++)
				{
					if(vehicleid == V_RENT[v][V_RENT_VEHICLE])
					{
     					DisablePlayerCheckpoint(playerid);
						SendClientMessage(playerid,CORANGE,"{"#cORANGE"}» {"#cWHITE"}Вы отказались от аренды");
						V_RENT[v][V_RENT_PLAYER] = INVALID_PLAYER_ID;
						UpdateTextRent(v);
						return 1;
					}
				}
				return SendClientMessage(playerid,CRED,"{"#cRED"}» {"#cWHITE"}Ошибка. Вы не арендуете транспорт");
			}
		}
	}
	return 1;
}

CMD:bizlock(playerid)
{
	/*for(new x = 0; x < CountBusiness; x++)
	{
		if(PlayerToPoint(3,playerid,Business[x][PickupEnterX],Business[x][PickupEnterY],Business[x][PickupEnterZ]) || PlayerToPoint(3,playerid,bizz_type[Business[x][bType]][bz_pickup_pos][0],bizz_type[Business[x][bType]][bz_pickup_pos][1],bizz_type[Business[x][bType]][bz_pickup_pos][2]))
		{
			if(p_info[playerid][tMember] == 2 && p_info[playerid][tRank] >= 8)
			{
				if(Business[x][Lock] == 1)
				{
					Business[x][Lock] = 0;
					Update3DTextLabelBusiness(x);
					SendSucc(playerid, "Вы открыли бизнес");
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return 1;
				}
				if(Business[x][Lock] == 0)
				{
					Business[x][Lock] = 1;
					Update3DTextLabelBusiness(x);
					SendSucc(playerid, "Вы закрыли бизнес");
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return 1;
				}
			}
			else SendErr(playerid, "У вас нет доступа");
		}
	}*/
	return 1;
}

CMD:abizlock(playerid)
{
	for(new x = 0; x < CountBusiness; x++)
	{
		if(PlayerToPoint(3,playerid,Business[x][PickupEnterX],Business[x][PickupEnterY],Business[x][PickupEnterZ])
		|| PlayerToPoint(3,playerid,bizz_type[Business[x][bType]][bz_pickup_pos][0],bizz_type[Business[x][bType]][bz_pickup_pos][1],bizz_type[Business[x][bType]][bz_pickup_pos][2]))
		{
			if(!IsMegaAdmin(playerid)) return  SendErr(playerid, "У вас нет доступа");
			if(Business[x][Lock])
			{
				Business[x][Lock] = 0;
				SendSucc(playerid, "Вы открыли бизнес");
			}
			else
			{
				Business[x][Lock] = 1;
				SendSucc(playerid, "Вы закрыли бизнес");
			}
			Update3DTextLabelBusiness(x);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
	}
	return 1;
}

/*CMD:takebizlic(playerid)
{
	for(new x = 0; x < CountBusiness; x++)
	{
		if(PlayerToPoint(3,playerid,Business[x][PickupEnterX],Business[x][PickupEnterY],Business[x][PickupEnterZ]) || PlayerToPoint(3,playerid,bizz_type[Business[x][bType]][bz_pickup_pos][0],bizz_type[Business[x][bType]][bz_pickup_pos][1],bizz_type[Business[x][bType]][bz_pickup_pos][2]))
		{
			if(p_info[playerid][tMember] == 2 && p_info[playerid][tRank] >= 8)
			{
				if(Business[x][bLicenses] == 1)
				{
					Business[x][bLicenses] = 0;
					UpdateOtherBusiness(x);
					SendSucc(playerid, "Вы отобрали лицензию у бизнеса");
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return 1;
				}
				if(Business[x][bLicenses] == 0)
				{
					SendErr(playerid, "У бизнеса нет лицензии");
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return 1;
				}
			}
			else SendErr(playerid, "У вас нет доступа");
		}
	}
	return 1;
}*/


forward SelectFromTableForDelete(playerid, account_dell[]);
public SelectFromTableForDelete(playerid, account_dell[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,-1,"Такой аккаунт не найден");

	new id;
	sscanf(account_dell, "u", id);
	if(id != INVALID_PLAYER_ID)
	{
		format(stringer, 144, "Ваш аккаунт удален администратором %s", NamePlayer[playerid]);
		SendClientMessage(id,CRED,stringer);
		KickEx(id);
	}

	cache_get_value_index_int(0,0,id);
	mysql_query_string[0]=EOS;
	format(mysql_query_string,512,"UPDATE `accounts` SET `tName` = '%s_BACKUP' WHERE `ID` = '%d' LIMIT 1", account_dell, id);
	mysql_pquery(connects,mysql_query_string);

	format(stringer,144,"Вы успешно удалили аккаунт: {"#cLIGHTGREEN"}%s", account_dell);
	SendClientMessage(playerid,CRED,stringer);


	return 1;
}

CMD:delacc(playerid, params[])
{
    if ( p_info[playerid][pAdmin] == 0 ) return 1 ;
	if(!IsMegaAdmin(playerid)) return 1;
	new account_dell[24];
	if(sscanf(params,"s[24]", account_dell)) return SendClientMessage(playerid,-1,"/delacc [имя аккаунта]");
	mysql_query_string[0]=EOS;
	format(mysql_query_string,512,"SELECT `ID` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", account_dell);
	mysql_pquery(connects,mysql_query_string,"SelectFromTableForDelete","is",playerid,account_dell);

	return 1;
}


CMD:setstats(playerid,params[])
{
	if ( p_info[playerid][pAdmin] == 0 ) return 1 ;
	if(!IsMegaAdmin(playerid)) return 1;
	if(sscanf(params,"iii", params[0], params[1], params[2]))
	{
		SendClientMessage(playerid, CGRAY, "/setstats [ID игрока] [Номер данных] [Значение]");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Номера данных: 1)Пол 2)Возраст 3)Работа");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "4)Скин 5)Деньги 6)Банк 7)Уровень 8)Exp 9)Номер телефона");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "10)Наркотики 11)Лицензия вождение 12)Лицензия полёты");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "13)Лицензия лодки 14)Лицензия оружие 15)Донат");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "16)Патроны 17)Материалы 18)Фракционный скин");
		return 1;
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CRED,"Игрок не в сети!");
	switch(params[1])
	{
		case 1:
		{
			if(params[2] < 1 || params[2] > 2) return SendClientMessage(playerid, CGRAY, "Пол | 1)Мужской 2)Женский");
			format(stringer, sizeof(stringer), "Администратор %s изменил пол игрока %s с %s на %s", NamePlayer[playerid], NamePlayer[params[0]], (p_info[params[0]][pSex] == 1 ? ("\"Мужской\"") : ("\"Женский\"")), (params[2] ? ("\"Мужской\"") : ("\"Женский\"")));
			WriteLog(666, stringer, 0);
			p_info[params[0]][pSex] = params[2];
			UpdatePlayerData(params[0],"pSex",p_info[params[0]][pSex]);
			format(stringer, 100, "Вы успешно изменили пол %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, CLIGHTRED, stringer);//////
		}
		case 2:
		{
			if(params[2] < 16 || params[2] > 110) return SendClientMessage(playerid,CGRAY,"Возраст не может быть менее 16 и более 110");
            format(stringer, sizeof(stringer), "Администратор %s изменил возраст игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pAge], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pAge] = params[2];
			UpdatePlayerData(params[0],"pAge",p_info[params[0]][pAge]);
			format(stringer, 100, "Вы успешно изменили возраст %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 3:
		{
			if(params[2] < 1 || params[2] > 6) return SendClientMessage(playerid,CGRAY, "Работа | 1)Развозчик продуктов 2)Механик 3)Развозчик топлива 4)Таксист 8)Автобусник");
            format(stringer, sizeof(stringer), "Администратор %s изменил место работы игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pJob], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pJob] = params[2];
			UpdatePlayerData(params[0],"pJob",p_info[params[0]][pJob]);
			format(stringer, 100, "Вы успешно изменили место работы %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 4:
		{
			if(params[2] < 1 || params[2] > 299) return SendClientMessage(playerid,CGRAY,"ID скина от 1 до 299");
			format(stringer, sizeof(stringer), "Администратор %s изменил скин игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pChar], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pChar] = params[2];
			UpdatePlayerData(params[0],"pChar",p_info[params[0]][pChar]);
			format(stringer, 100, "Вы успешно изменили скин игроку %s", NamePlayer[params[0]]);
			if(!p_info[params[0]][tMember]) SetPlayerSkin(params[0], params[2]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 5:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил количество денег игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pCash], params[2]);
			WriteLog(666, stringer, 0);
			format(stringer, 100, "Вы успешно изменили количество денег %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			p_info[params[0]][pCash] = params[2];
			UpdateMoney(params[0]);
		}
		case 6:
		{
			/*p_info[params[0]][pBank] = params[2];
			UpdatePlayerData(i,"bank",p_info[params[0]][pBank]);
			format(stringer, 100, "Вы успешно изменили количество денег в банке %s", NamePlayer[params[0]]);*/
			SendClientMessage(playerid, COLOR_LIGHTRED, "Временно не работает");
		}
		case 7:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил уровень игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pLevel], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pLevel] = params[2];
			SetPlayerScore(params[0], params[2]);
			UpdatePlayerData(params[0],"pLevel",p_info[params[0]][pLevel]);
			format(stringer, 100, "Вы успешно изменили уровень игрока %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 8:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил EXP игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pExp], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pExp] = params[2];
			UpdatePlayerData(params[0],"pExp",p_info[params[0]][pExp]);
			format(stringer, 100, "Вы успешно изменили EXP игрока %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			UpdatePlayerLevel(params[0]);
		}
		case 9:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил номер телефона игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pPnumber], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pPnumber] = params[2];
			UpdatePlayerData(params[0],"pPnumber",p_info[params[0]][pPnumber]);
			format(stringer, 100, "Вы успешно изменили номер телефона %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 10:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил количество наркотиков у игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pDrugs], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pDrugs] = params[2];
			UpdatePlayerData(params[0],"drugs",p_info[params[0]][pDrugs]);
			format(stringer, 100, "Вы успешно изменили количество наркотиков у %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 11:
		{
			if(params[2]) {
			    format(stringer, sizeof(stringer), "Администратор %s выдал лицензию на вождение игроку %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][0] = 1;
				format(stringer, 100, "Вы выдали %s лицензию на вождение", NamePlayer[params[0]]);
			}
			else {
			    format(stringer, sizeof(stringer), "Администратор %s забрал лицензию на вождение у игрока %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][0] = 0;
				format(stringer, 100, "Вы забрали лицензию на вождение у %s", NamePlayer[params[0]]);
			}
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			UpdateLicenses(params[0]);
		}
		case 12:
		{
			if(params[2]) {
			    format(stringer, sizeof(stringer), "Администратор %s выдал лицензию на полёты игроку %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][1] = 1;
				format(stringer, 100, "Вы выдали %s лицензию на полёты", NamePlayer[params[0]]);
			}
			else {
			    format(stringer, sizeof(stringer), "Администратор %s забрал лицензию на полёты у игрока %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][1] = 0;
				format(stringer, 100, "Вы забрали лицензию на полёты у %s", NamePlayer[params[0]]);
			}
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			UpdateLicenses(params[0]);
		}
		case 13:
		{
			if(params[2]) {
			    format(stringer, sizeof(stringer), "Администратор %s выдал лицензию на лодку игроку %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][2] = 1;
				format(stringer, 100, "Вы выдали %s лицензию на лодку", NamePlayer[params[0]]);
			}
			else {
				format(stringer, sizeof(stringer), "Администратор %s забрал лицензию на лодку у игрока %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][2] = 0;
				format(stringer, 100, "Вы забрали лицензию на лодку у %s", NamePlayer[params[0]]);
			}
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			UpdateLicenses(params[0]);
		}
		case 14:
		{
			if(params[2]) {
			    format(stringer, sizeof(stringer), "Администратор %s выдал лицензию на оружие игроку %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][3] = 1;
				format(stringer, 100, "Вы выдали %s лицензию на оружие", NamePlayer[params[0]]);
			}
			else {
			    format(stringer, sizeof(stringer), "Администратор %s забрал лицензию на оружие у игрока %s", NamePlayer[playerid], NamePlayer[params[0]]);
				WriteLog(666, stringer, 0);
				Lic[params[0]][3] = 0;
				format(stringer, 100, "Вы забрали лицензию на оружие у %s", NamePlayer[params[0]]);
			}
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			UpdateLicenses(params[0]);
		}
		case 15:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил количество доната у игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pRouble], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pRouble] = params[2];
			UpdatePlayerData(params[0],"pRouble",p_info[params[0]][pRouble]);
			format(stringer, 100, "Вы успешно изменили количество доната у %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 16:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил количество патрон у игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pPatron], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pPatron] = params[2];
			UpdatePlayerData(params[0],"pPatron",p_info[params[0]][pPatron]);
			format(stringer, 100, "Вы успешно изменили количество патрон у %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 17:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил количество материалов у игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pMats], params[2]);
			WriteLog(666, stringer, 0);
			p_info[params[0]][pMats] = params[2];
			UpdatePlayerData(params[0],"pMats",p_info[params[0]][pMats]);
			format(stringer, 100, "Вы успешно изменили количество материалов у %s", NamePlayer[params[0]]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		case 18:
		{
		    format(stringer, sizeof(stringer), "Администратор %s изменил фракционный скин у игрока %s с %d на %d", NamePlayer[playerid], NamePlayer[params[0]], p_info[params[0]][pModel], params[2]);
			WriteLog(666, stringer, 0);
			if(params[2] < 1 || params[2] > 299) return SendClientMessage(playerid,CGRAY,"ID скина от 1 до 299");
			if(!p_info[params[0]][tMember]) return SendClientMessage(playerid, CGRAY, "Игрок не в организации");
			p_info[params[0]][pModel] = params[2];
			UpdatePlayerData(params[0],"pModel",p_info[params[0]][pModel]);
			format(stringer, 100, "Вы успешно изменили фракционный скин игроку %s", NamePlayer[params[0]]);
			SetPlayerSkin(params[0], params[2]);
			SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
		}
		default:
		{
			SendClientMessage(playerid, CGRAY, "/setstats [ID игрока] [Номер данных] [Значение]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Номера данных: 1)Пол 2)Возраст 3)Работа");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "4)Скин 5)Деньги 6)Банк 7)Уровень 8)Exp 9)Номер телефона");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "10)Наркотики 11)Лицензия вождение 12)Лицензия полёты");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "13)Лицензия лодки 14)Лицензия оружие 15)Донат");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "16)Патроны 17)Материалы 18)Фракционный скин");
		}
	}
	return 1;
}


CMD:lock(playerid,params[])
{
	if(sscanf(params,"i",params[0]))
	{
		new Float:check_pos[6];
		GetPlayerPos(playerid,check_pos[0],check_pos[1],check_pos[2]);
		for(new v = 1; v < MAX_VEHICLES; v++)
		{
			if(IsValidVehicle(v))
			{
				GetVehiclePos(v,check_pos[3],check_pos[4],check_pos[5]);
				if(PointToPoint(check_pos[0],check_pos[1],check_pos[2],check_pos[3],check_pos[4],check_pos[5]) < 4.0)
				{
					if(gVehicles[v-1][vRentPlayer]==playerid)
					{
						ToggleLock(v, (gVehicles[v-1][vLock]) ? (false) : (true));
						UpdateTDLock(playerid, v);
						GameTextForPlayer(playerid, (!gVehicles[v-1][vLock]) ? ("~r~~h~CLOSE") : ("~g~~h~OPEN"), 1000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid,(!gVehicles[v-1][vLock]) ? ("закрыл(а) автомобиль") : ("открыл(а) автомобиль"),0xE75480FF,30.0,10000);
						/////if(IsValidDynamic3DTextLabel(gVehicles[v-1][vRentPlayerText])) DestroyDynamic3DTextLabel(gVehicles[v-1][vRentPlayerText]);
						format(stringer, 128, "{00FF66}Велосипед\nАрендовал: {00FF99}[%s]\n{00FF66}Статус замка: {00FF99}[%s]", NamePlayer[playerid], (gVehicles[v-1][vLock]) ? ("Открыт") : ("Закрыт"));
						UpdateDynamic3DTextLabelText(gVehicles[v-1][vRentPlayerText],0xFFFFFFAA,stringer);
						return 1;
					}
				}
			}
		}
		return SendInf(playerid, "Используйте: /lock [тип] (1 - первая машина | 2 - вторая машина | 3 - фракционная машина | 4 - рабочая машина)");
	}

	if(params[0] < 1 || params[0] > 4) return SendInf(playerid, "Используйте: /lock [тип] (1 - первая машина | 2 - вторая машина | 3 - фракционная машина | 4 - рабочая машина)");
	if(p_info[playerid][pRoom] && params[0] == 1)
	{
		new vehicleid = caridhouse[playerid][0];
		if(!vehicleid) return SendClientMessage(playerid,COLOR_GREY,"Ошибка #111");
		GetVehiclePos(vehicleid,gVehicles[vehicleid-1][veX], gVehicles[vehicleid-1][veY], gVehicles[vehicleid-1][veZ]);
		if(!PlayerToPoint(4.0, playerid, gVehicles[vehicleid-1][veX], gVehicles[vehicleid-1][veY], gVehicles[vehicleid-1][veZ])) return SendErr(playerid,"Вы должны быть рядом с автомобилем");
		ToggleLock(vehicleid, (gVehicles[vehicleid-1][vLock]) ? (false) : (true));
		UpdateTDLock(playerid, vehicleid);
		GameTextForPlayer(playerid, (!gVehicles[vehicleid-1][vLock]) ? ("~r~~h~CLOSE") : ("~g~~h~OPEN"), 1000, 4);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		SetPlayerChatBubble(playerid,(!gVehicles[vehicleid-1][vLock]) ? ("закрыл(а) автомобиль") : ("открыл(а) автомобиль"),0xE75480FF,30.0,10000);
		return 1;
	}
	if(params[0] == 4)
	{
		if(!p_info[playerid][pJob]) return SendErr(playerid,"Вы нигде не работаете.");
		new Float:pos_v_x, Float:pos_v_y, Float:pos_v_z;
		new check_nearest_vehicle = -1;
		if(IsValidVehicle(GetPVarInt(playerid,"bus_id"))) check_nearest_vehicle = GetPVarInt(playerid,"bus_id");
		else if(IsValidVehicle(GetPVarInt(playerid,"taxijob"))) check_nearest_vehicle = GetPVarInt(playerid,"taxijob");
		else if(IsValidVehicle(GetPVarInt(playerid,"meh_car"))) check_nearest_vehicle = GetPVarInt(playerid,"meh_car");
		else if(IsValidVehicle(GetPVarInt(playerid,"prod_vehicle_id"))) check_nearest_vehicle = GetPVarInt(playerid,"prod_vehicle_id");
		if(check_nearest_vehicle == -1) return SendClientMessage(playerid,CRED,"Вы не арендуете {"#cLIGHTRED"}автомобиль");
		GetVehiclePos(check_nearest_vehicle, pos_v_x, pos_v_y, pos_v_z);
		if(!PlayerToPoint(8.0, playerid, pos_v_x, pos_v_y, pos_v_z)) return SendClientMessage(playerid, CRED, "Вы должны быть рядом с {"#cLIGHTRED"}рабочим автомобилем");
		ToggleLock(check_nearest_vehicle, (gVehicles[check_nearest_vehicle-1][vLock]) ? (false) : (true));
		UpdateTDLock(playerid, check_nearest_vehicle);
		GameTextForPlayer(playerid, (!gVehicles[check_nearest_vehicle-1][vLock]) ? ("~r~~h~CLOSE") : ("~g~~h~OPEN"), 1000, 4);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		SetPlayerChatBubble(playerid,(!gVehicles[check_nearest_vehicle-1][vLock]) ? ("закрыл(а) автомобиль") : ("открыл(а) автомобиль"),0xE75480FF,30.0,10000);
		return 1;
	}
	if(params[0] == 3)
	{
		if(!p_info[playerid][tMember]) return SendErr(playerid,"Вы не состоите в организации");

		for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
		{
				if(gVehicles[i-1][vFraction] == p_info[playerid][tMember])
				{
					if(PlayerToPoint(4.0, playerid, gVehicles[i-1][veX], gVehicles[i-1][veY], gVehicles[i-1][veZ]))
					{
						ToggleLock(i, (gVehicles[i-1][vLock]) ? (false) : (true));
						UpdateTDLock(playerid, i);
						GameTextForPlayer(playerid, (!gVehicles[i-1][vLock]) ? ("~r~~h~CLOSE") : ("~g~~h~OPEN"), 1000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid,(!gVehicles[i-1][vLock]) ? ("закрыл(а) автомобиль") : ("открыл(а) автомобиль"),0xE75480FF,30.0,10000);
						return 1;
					}
				}
		}
		SendErr(playerid, "Вы должны быть рядом с фракционным автомобилем");
		return 1;
	}
	if(0 == p_info[playerid][pHouse] && 0 == p_info[playerid][pTempKey]) return SendErr(playerid,"У вас нет недвижимости");
	new vehicleid = caridhouse[playerid][params[0]-1];
	if(IsSellsCar(playerid, params[0]) != -1) return SendClientMessage(playerid,COLOR_GREY,"Недоступно. Данный автомобиль продается");
	if(!vehicleid) return SendClientMessage(playerid,COLOR_GREY,"Ошибка #111");
	GetVehiclePos(vehicleid,gVehicles[vehicleid-1][veX], gVehicles[vehicleid-1][veY], gVehicles[vehicleid-1][veZ]);
	if(!PlayerToPoint(4.0, playerid, gVehicles[vehicleid-1][veX], gVehicles[vehicleid-1][veY], gVehicles[vehicleid-1][veZ])) return SendErr(playerid,"Вы должны быть рядом с автомобилем");
	ToggleLock(vehicleid, (gVehicles[vehicleid-1][vLock]) ? (false) : (true));
	UpdateTDLock(playerid, vehicleid);
	GameTextForPlayer(playerid, (!gVehicles[vehicleid-1][vLock]) ? ("~r~~h~CLOSE") : ("~g~~h~OPEN"), 1000, 4);
	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
	SetPlayerChatBubble(playerid,(!gVehicles[vehicleid-1][vLock]) ? ("закрыл(а) автомобиль") : ("открыл(а) автомобиль"),0xE75480FF,30.0,10000);
	format(stringer, 128, "Владелец: %s\nСтатус замка: %s", NamePlayer[playerid], (gVehicles[vehicleid-1][vLock]) ? ("Открыт") : ("Закрыт"));
	UpdateDynamic3DTextLabelText(gVehicles[vehicleid-1][vOwnerVehicleText],CORANGE,stringer);
	return 1;
}

CMD:donate(playerid)
{
	UpdateDonate(playerid);
	if(BONUS_PAYDAY)
	{
		SendClientMessage(playerid, -1, "Сегодня проходит акция! "newblue"При пополнения счёта x4 donate.");
	}
	stringer[0] = EOS;
	strcat(stringer,"\
	{"#cORANGE"}- {"#cWHITE"} Проверить баланс\n\
	{"#cORANGE"}1.{"#cWHITE"} Именная VIP-машина\t\t{baffc3}200 рублей\n\
	{"#cORANGE"}2.{"#cWHITE"} Игровая валюта: \t\t\t{baffc3}1 рубль = "ROUBLE_DOLLARS" $\n\
	{"#cORANGE"}3.{"#cWHITE"} Донат-очки: \t\t\t\t{baffc3}1 рубль = 5 донат-очков\n");

	strcat(stringer,"\
	{"#cORANGE"}4.{"#cWHITE"} Cмена ника:{baffc3} \t\t\t\t20 рублей\n\
	{"#cORANGE"}5.{"#cWHITE"} Снятие 1 варна: \t\t\t{baffc3}25 рублей\n");
	strcat(stringer,"\
	{"#cORANGE"}6.{"#cWHITE"} Игровые привелегии\n\
	{"#cORANGE"}7.{"#cWHITE"} VIP-услуги\n\
	{"#cORANGE"}8.{"#cWHITE"} Улучшения для персонажа\n\
	{"#cORANGE"}9.{"#cWHITE"} Покупка донат-транспорта\n\
	{"#cORANGE"}10.{"#cWHITE"} Лицензии");
	ShowPlayerDialog(playerid, dDonate, DIALOG_STYLE_LIST, "{ffff00}Донат",stringer,"Выбрать", "Закрыть");
	return 1;
}

CMD:service(playerid)
{
	//if(!GetPVarInt(playerid,"PlayerCuffed")) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	ShowPlayerDialog(playerid, 9956, 2, "Выберите сервис",
		"- Вызвать Таксиста\n- Вызвать Медицинскую помощь\n- Вызвать Механика\n- Вызвать Полицию",
	"Выбрать", "Отмена");
	MeAction(playerid, "достаёт мобильник", 5.0);
	return 1;
}

CMD:to(playerid,params[])
{
	if(!IsACop(playerid) && p_info[playerid][pJob] != 4 && p_info[playerid][pJob] != 2 && p_info[playerid][tMember] != 4) return SendErr(playerid,"Нет доступа");
	if(sscanf(params,"i",params[0]))return SendInf(playerid,"/to [playerid]");
	if(!GetPVarInt(params[0],"service_to"))return SendErr(playerid,"Игрок никого не вызывал");
	format(stringer,144,"Вы приняли вызов от {ffffff}%s",NamePlayer[params[0]]);
	SCM(playerid,CGREEN,stringer);
	new Float:to_pos[3];
	GetPlayerPos(params[0],to_pos[0],to_pos[1],to_pos[2]);
	SCM(playerid, CORANGE, "Метка {"#cWHITE"}на карте указана в виде {"#cRED"}красного{"#cWHITE"} флажка");
	SetPlayerGPS(playerid,80,to_pos[0],to_pos[1],to_pos[2],19,-1,MAPICON_GLOBAL_CHECKPOINT);
	format(stringer,144,"%s {"#cGREEN"}принял ваш вызов. Ожидайте!",NamePlayer[playerid]);
	SCM(params[0],-1,stringer);
	//SCM(playerid,CGREEN,"Место отмечено на радаре");
	DeletePVar(params[0],"service_to");
	return 1;
}

CMD:dir(playerid)
{
	ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST,"Справочник","1. Адвокаты\n2. Таксисты\n3. Крупье\n4. Лидеры организаций\n5. Инструкторы\n6. Механики\n7. Медики","Выбрать","Отмена");
	return 1;
}

CMD:togphone(playerid)
{
	if(p_info[playerid][pDonateRank] < 2 && p_info[playerid][pAdmin] < 1 && p_info[playerid][tLeader] < 1) return SendErr(playerid, "Вам не доступно");
	if (!GetPVarInt(playerid,"PhoneOnline")) SetPVarInt(playerid,"PhoneOnline", true),SendSucc(playerid, "Вы выключили телефон");
	else if (GetPVarInt(playerid,"PhoneOnline")) DeletePVar(playerid,"PhoneOnline"),SendSucc(playerid, "Вы включили телефон");
	return 1;
}

CMD:time(playerid)
{
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(p_info[playerid][pMuteTime] > 0)
	{
		format(stringer, 144, "Осталось молчать: {ff8800}%d секунд", p_info[playerid][pMuteTime]);
		SCM(playerid, COLOR_GREY, stringer);
	}
	if(p_info[playerid][pJailTime] > 0)
	{
		format(stringer, 144, "Осталось сидеть: {ff8800}%d секунд", p_info[playerid][pJailTime]);
		SCM(playerid, COLOR_GREY, stringer);
	}

	new h,m,s;
	new year,month,day;

	r_getdate(year, month, day);
	r_gettime(h,m,s);

	format(stringer,128,"Вы отыграли за сеанс в игре %d сек. (%d минут)",p_info[playerid][pTime], floatround(p_info[playerid][pTime]/60));
	SendClientMessage(playerid, 0x66cc00AA, stringer);

	format(stringer,128,"~w~%02d:%02d:%02d~n~~b~%d-%s%d-%s%d",h,m,s,day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	GameTextForPlayer(playerid,stringer,5000,1);

	FIXES_ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,2000,1);
	return 1;
}

CMD:agetstats(playerid, params[])
{
	if (p_info[playerid][pAdmin] < 7) return 1;
	if(isnull(params) || strlen(params) > 30)return SendInf(playerid, "Используйте: /agetstats [Имя игрока]");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "AGetStats", "is", playerid, params);
	return 1;
}

CMD:stats(playerid)
{
	ShowStats(playerid,playerid);
	return 1;
}

CMD:getstats(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 2) return SendErr(playerid, "Вы не уполномочены использовать эту команду");
	if(sscanf(params,"d",params[0])) return	SendInf(playerid, "Используйте: /getstats [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	ShowStats(playerid,params[0]);
	return 1;
}

CMD:slap(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 2) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /slap [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(params[0], slx, sly, slz);
	AC_SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(stringer, 128, "[A] %s подкинул игрока %s", NamePlayer[playerid],NamePlayer[params[0]]);
	AdmMes(CADMIN_INFO, stringer,1);
	return 1;
}
CMD:aheal(playerid,params[])
{
	if(p_info[playerid][pAdmin]==0) return 1;
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /heal [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(gKilledWithAntiDeath[params[0]] > 0)
	{
		AC_SetPlayerHealth(params[0], 100.0);
		if(damage_text[params[0]]!=Text3D:-1)
		{
			Delete3DTextLabel(damage_text[params[0]]);
			damage_text[params[0]]=Text3D:-1;
		}
		SetCameraBehindPlayer(params[0]);
		AC_TogglePlayerControllable(params[0], true);
		FIXES_ApplyAnimation(params[0],"CARRY","crry_prtial",4.0,0,0,0,0,0);
		gKilledWithAntiDeath[params[0]] = 0;
		SetPlayerDrunkLevel(params[0], 0);
		for(new i = 0; i < MAX_DAMAGES_STRING; i++)
		{
			if(gDamagesData[params[0]][i][gdBody]==-1) continue;
			gDamagesData[params[0]][i][gdBody] = -1;
			gDamagesData[params[0]][i][gdTime] = 0;
			gDamagesData[params[0]][i][gdGun] = 0;
			gDamagesData[params[0]][i][gdDamage] = 0.0;
			gDamagesData[params[0]][i][gdNameDamages][0] = EOS;
			gDamagesData[params[0]][i][gdNameID] = 0;
		}
		DeletePVar(params[0], "anti_sbiv_time");
	}
	return 1;
}
CMD:timestat(playerid)
{
	new str[256];
	format(str, sizeof(str),"Последнее время прокрутки Timer_Unix: (%d ms). пик: (%d ms).\n", time_grandtimer, time_grandtimer_max);
	format(str, sizeof(str),"%sПоследнее время прокрутки OnPlayerUpdate: (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"newkeys\": (%d ms). пик: (%d ms).", str, time_update,time_update_max,time_newkeys,time_newkeys_max);
	ShowPlayerDialog(playerid,0,0,"Нагрузка мода", str, "Ok", "");
	return 1;
}
CMD:heal(playerid,params[])
{
	for (new j = 0; j != 23; j++)
	{
		if (MyBed [playerid] != 255) continue;
		if (!IsPlayerInRangeOfPoint (playerid, 2.0, BedInfo [j][b_X],BedInfo [j][b_Y],BedInfo[j][b_Z])) continue;
		if (BedInfo [j][Busy] == true)
		{
			SendClientMessage( playerid, -1, "* Койка уже кем то занята." );
			break;
		}
		MyBed[ playerid ] = j;
		format (stringer, 200, "{FFFFFF}Вы действительно хотите арендовать данную койку за {00CC00}$%d", BedPrice);
		ShowPlayerDialog (playerid, BED_DIALOG, DIALOG_STYLE_MSGBOX, "{00CC00}Койка", stringer, "Да", "Нет" );
		break;
	}
	if(!IsAMedic(playerid)) return 1;
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /heal [id]");
	if(params[0] == INVALID_PLAYER_ID || !IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в сети");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");
	if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	new text_string [ 68 + MAX_PLAYER_NAME + 6 ] ;
	format(text_string, sizeof ( text_string ), "Вы предложили %s игроку купить лекарство за %d$", NamePlayer[params[0]], healpric);
	SendClientMessage(playerid, CGREEN, text_string);
	format(text_string, sizeof ( text_string ), "{"#cWHITE"}%s предлагает Вам купить лекарство за {"#cGREEN"}%d$",NamePlayer[playerid],healpric);
	ShowPlayerDialog(params[0],dHeal,0,"Медицинское обслуживание",text_string,"Да","Нет");
	SetPVarInt(params[0],"HealOffer",playerid+1);
	return 1;
}

CMD:accept(playerid,params[])
{
	if(isnull(params) || strlen(params) > 24) return SendInf(playerid, "Используйте: /accept [name]");

	if(!strcmp(params,"witness",true))
	{
		if(!GetPVarInt(playerid,"MarryWitnessOffer")) return SendErr(playerid, "Вам не предлагали быть свидетелем!");
		if(!IsPlayerStream(10.0, playerid, GetPVarInt(playerid,"MarryWitnessOffer")-1)) return SendErr(playerid, "Игрок, который просил, чтобы вы были свидетелем не рядом с вами");
		format(stringer, 128, "Вы приняли предложение  %s's быть свидетелем на свадьбе", NamePlayer[GetPVarInt(playerid,"MarryWitnessOffer")-1]);
		SCM(playerid, 0x6ab1ffaa, stringer);
		format(stringer, 128, "%s согласился быть вашим свидетелем на свадьбе", NamePlayer[playerid]);
		SCM(GetPVarInt(playerid,"MarryWitnessOffer")-1, 0x6ab1ffaa, stringer);
		SetPVarInt(GetPVarInt(playerid,"MarryWitnessOffer") - 1,"MarryWitness", playerid + 1);
		DeletePVar(playerid,"MarryWitness");
		DeletePVar(playerid,"MarryWitnessOffer");
	}
	else if(!strcmp(params,"marriage",true))
	{
		if(!GetPVarInt(playerid,"ProposeOffer")) return SendErr(playerid, "Вам ни кто не предлагал");
		if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726)) return SendErr(playerid, "Вы не у церкви в Сан-Фиерро");
		new id_marriage=GetPVarInt(playerid,"ProposeOffer")-1;
		if(!IsPlayerConnected(id_marriage)) return SendErr(playerid, "Игрок оффлайн");
		if(!IsPlayerStream(10.0, playerid, id_marriage)) return SendErr(playerid, "Жених/Невеста не рядом с Вам");
		if(!GetPVarInt(id_marriage,"MarryWitness")) return SendErr(playerid, "У него/неё нет свидетеля");
		if(!IsPlayerStream(12.0, id_marriage, GetPVarInt(id_marriage,"MarryWitness")-1)) return SendErr(playerid, "Нет рядом свидетеля");
		format(stringer, 128, "Вы приняли предложение от %s's", NamePlayer[id_marriage]);
		SCM(playerid, 0x6ab1ffaa, stringer);
		format(stringer, 128, "%s приняла Ваш запрос быть Вашей Женой", NamePlayer[playerid]);
		SCM(id_marriage, 0x6ab1ffaa, stringer);
		format(stringer, 128, "{FC6DEC}::: Поздравляем! %s и %s теперь муж и жена! :::", NamePlayer[playerid], NamePlayer[id_marriage]);
		SendClientMessageToAll(CWHITE,stringer);

		strmid(p_info[playerid][pMarried], NamePlayer[id_marriage], 0, strlen(NamePlayer[id_marriage]));
		strmid(p_info[id_marriage][pMarried], NamePlayer[playerid], 0, strlen(NamePlayer[id_marriage]));

		mysql_query_string[0] = EOS;
		format(mysql_query_string, 512, "UPDATE `accounts` SET `pMarried` = '%s' WHERE `ID` = '%d' LIMIT 1",p_info[playerid][pMarried],p_info[playerid][pID]);
		mysql_pquery(connects, mysql_query_string, "", "");

		format(mysql_query_string, 512, "UPDATE `accounts` SET `pMarried` = '%s' WHERE `ID` = '%d' LIMIT 1",p_info[id_marriage][pMarried],p_info[id_marriage][pID]);
		mysql_pquery(connects, mysql_query_string, "", "");

		DeletePVar(id_marriage,"MarryWitness");
		DeletePVar(playerid,"ProposeOffer");
		DeletePVar(id_marriage,"ProposeOffer");
	}
	else if(strcmp(params,"ticket",true) == 0)
	{
		if(GetPVarInt(playerid,"TicketOffer"))
		{
			if (IsPlayerStream(5.0, playerid, GetPVarInt(playerid,"TicketOffer")-1))
			{
				if(p_info[playerid][pCash] < GetPVarInt(playerid,"TicketMoney")) return SendErr(playerid,"У вас не достаточно денег наличными");
				format(stringer, 128, "Вы оплатили штраф в размере %d $ офицеру %s", GetPVarInt(playerid,"TicketMoney"), NamePlayer[GetPVarInt(playerid,"TicketOffer")-1]);
				SCM(playerid, CBLUE, stringer);
				format(stringer, 128, "%s оплатил штраф в размере %d $", NamePlayer[playerid], GetPVarInt(playerid,"TicketMoney"));
				SCM(GetPVarInt(playerid,"TicketOffer")-1, CBLUE, stringer);
				TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"TicketMoney"),GetPVarInt(playerid,"TicketMoney"),"оплата штрафа");
				p_info[playerid][pCash] -= GetPVarInt(playerid,"TicketMoney");
				UpdateMoney(playerid);
				p_info[GetPVarInt(playerid,"TicketOffer")-1][pCash] += GetPVarInt(playerid,"TicketMoney");
				UpdateMoney(GetPVarInt(playerid,"TicketOffer")-1);
				DeletePVar(playerid,"TicketOffer");
				DeletePVar(playerid,"TicketMoney");
			}
			else SendErr(playerid, "Полицейский не рядом с вами");
		}
		else SendErr(playerid, "Вам не выписывали штраф");
	}
	else if(strcmp(params,"drugs",true) == 0)
	{
		if(!GetPVarInt(playerid,"DrugOffer")) return SendErr(playerid, "Вам никто не предлагал купить наркотики");
		if(p_info[playerid][pCash] < GetPVarInt(playerid,"DrugPrice")) return SendErr(playerid, "У вас нет столько денег");
		format(stringer, 128, "Вы купили %d грамм наркотиков за %d $ у %s",GetPVarInt(playerid,"DrugGram"),GetPVarInt(playerid,"DrugPrice"),NamePlayer[GetPVarInt(playerid,"DrugOffer")-1]);
		SCM(playerid, 0x6ab1ffaa, stringer);
		format(stringer, 128, "%s купил у вас %d грамм наркотиков за %d $",NamePlayer[playerid],GetPVarInt(playerid,"DrugGram"),GetPVarInt(playerid,"DrugPrice"));
		SCM(GetPVarInt(playerid,"DrugOffer")-1, 0x6ab1ffaa, stringer);
		TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"DrugPrice"),GetPVarInt(playerid,"DrugPrice"),"покупка наркотиков");
		p_info[playerid][pCash] -=	GetPVarInt(playerid,"DrugPrice");
		UpdateMoney(playerid);
		p_info[GetPVarInt(playerid,"DrugOffer")-1][pCash] += GetPVarInt(playerid,"DrugPrice");
		UpdateMoney(GetPVarInt(playerid,"DrugOffer")-1);
		p_info[playerid][pDrugs] += GetPVarInt(playerid,"DrugGram");
		UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
		p_info[GetPVarInt(playerid,"DrugOffer")-1][pDrugs] -= GetPVarInt(playerid,"DrugGram");
		UpdatePlayerData(GetPVarInt(playerid,"DrugOffer")-1,"pDrugs",p_info[GetPVarInt(playerid,"DrugOffer")-1][pDrugs]);
		DeletePVar(playerid,"DrugOffer");
	}
	else if(strcmp(params,"medic",true) == 0)
	{
		if(IsAMedic(playerid))
		{
			if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
			if(MedicCall != INVALID_PLAYER_ID)
			{
					format(stringer, 128, "Вы приняли запрос от %s",NamePlayer[MedicCall]);
					SCM(playerid, 0x6ab1ffaa, stringer);
					format(stringer, 128, "Медик %s принял ваш вызов",NamePlayer[playerid]);
					SCM(MedicCall, CGREEN, stringer);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MedicCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					MedicCall = INVALID_PLAYER_ID;
			}
			else SendErr(playerid, "Вызовов нет");
		}
		else SendErr(playerid, "Вы не медик");
	}
	else if(strcmp(params,"police",true) == 0)
	{
		if(!IsACop(playerid)) return SendErr(playerid, "Вы не полицейский");
		if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
		if(PoliceCall != INVALID_PLAYER_ID)
		{
				format(stringer, 128, "Вы приняли вызов от %s",NamePlayer[PoliceCall]);
				SCM(playerid, 0x6ab1ffaa, stringer);
				format(stringer, 128, "Патрульный %s принял Ваш вызов",NamePlayer[playerid]);
				SCM(PoliceCall, CGREEN, stringer);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(PoliceCall, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				PoliceCall = INVALID_PLAYER_ID;
		}
		else SendErr(playerid, "Вызовов нет");
	}
	else if(strcmp(params,"mechanic",true) == 0)
	{
		if(p_info[playerid][pJob] != 2) return SendErr(playerid, "Вы не механик");
		if(MechanicCall != INVALID_PLAYER_ID)
		{
				format(stringer, 128, "Вы приняли вызов от %s",NamePlayer[MechanicCall]);
				SCM(playerid, 0x6ab1ffaa, stringer);
				format(stringer, 128, "Механик %s принял Ваш вызов",NamePlayer[playerid]);
				SCM(MechanicCall, CGREEN, stringer);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(MechanicCall, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				MechanicCall = INVALID_PLAYER_ID;
		}
		else SendErr(playerid, "Вызовов нет");
	}
	else if(strcmp(params,"livels",true) == 0)
	{
		if(GetPVarInt(playerid,"LiveOfferls"))
		{
				if(IsPlayerStream(5.0, playerid, GetPVarInt(playerid,"LiveOfferls")-1))
				{
					SetPVarInt(GetPVarInt(playerid,"LiveOfferls")-1,"TalkingLivels",2);
					SendInf(GetPVarInt(playerid,"LiveOfferls")-1, "Используйте: /live, чтобы закончить интервью");
					DeletePVar(playerid,"lNews");
					DeletePVar(GetPVarInt(playerid,"LiveOfferls")-1,"lNews");
					DeletePVar(playerid,"LiveOfferls");
					SetPVarInt(playerid,"TalkingLivels",2);
					SCM(playerid, CYELLOW, "Вы даёте интервью в прямом эфире радио Los Santos");
				}
				else SendErr(playerid, "Вы далеко от репортёра");
		}
		else SendErr(playerid, "Вам никто не предлагал дать интервью");
	}
	else if(strcmp(params,"zone",true) == 0)
	{
		if(GetPVarInt(playerid,"ZoneOffer"))
		{
				if(p_info[playerid][pCash] > GetPVarInt(playerid,"ZonePrice"))
				{
					IDGZ[playerid] = GetIDGZ(playerid);
					if(IDGZ[playerid] != -1)
					{
						new i = IDGZ[playerid];
						if(GZInfo[i][gFrakVlad] != GetPVarInt(playerid,"sellzone")) return 	SendErr(playerid, "Вам не предлагали купить эту территорию");
						VladGzone[GZInfo[i][gFrakVlad]]--;
						VladGzone[p_info[playerid][tMember]]++;
						UpdateStoreGang(GZInfo[i][gFrakVlad]);
						UpdateStoreGang(p_info[playerid][tMember]);
						GZInfo[i][gFrakVlad] = p_info[playerid][tMember];
						GangZoneStopFlashForAll(GZInfo[i][gIDs]);
						GangZoneHideForAll(GZInfo[i][gIDs]);
						GangZoneShowForAll(GZInfo[i][gIDs],GetGangZoneColor(i));
						SaveGZ(i);
						//break;
					}
					format(stringer, 128, "Вы купили территорию у %s за %d $",NamePlayer[GetPVarInt(playerid,"ZoneOffer")-1], GetPVarInt(playerid,"ZonePrice"));
					SCM(playerid, 0x6ab1ffaa, stringer);
					format(stringer, 128, "Вы продали территорию %s за %d $",NamePlayer[playerid],GetPVarInt(playerid,"ZonePrice"));
					SCM(GetPVarInt(playerid,"ZoneOffer")-1, 0x6ab1ffaa, stringer);
					TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"ZonePrice"),GetPVarInt(playerid,"ZonePrice"),"покупка территория");
					p_info[playerid][pCash] -= GetPVarInt(playerid,"ZonePrice");
					UpdateMoney(playerid);
					p_info[GetPVarInt(playerid,"ZoneOffer")-1][pCash] += GetPVarInt(playerid,"ZonePrice");
					UpdateMoney(GetPVarInt(playerid,"ZoneOffer")-1);
					DeletePVar(playerid,"ZoneOffer");
					DeletePVar(playerid,"ZonePrice");
					DeletePVar(playerid,"sellzone");
					UpdateInfoZones();
				}
				else SendErr(playerid, "У вас не достаточно денег");
		}
		else SendErr(playerid, "Вам ни кто не предлагал территорию");
	}
	else if(strcmp(params,"hotdog",true) == 0)
	{
		if(GetPVarInt(playerid,"HotdogOffer"))
		{
				if(p_info[playerid][pCash] > GetPVarInt(playerid,"HotdogPrice"))
				{
					new Float:health;
					GetPlayerHealth(playerid,health);
					format(stringer, 128, "Вы купили ХотДог у %s за %d $",NamePlayer[GetPVarInt(playerid,"HotdogOffer")-1], GetPVarInt(playerid,"HotdogPrice"));
					SCM(playerid, 0x6ab1ffaa, stringer);
					format(stringer, 128, " Вы продали ХотДог %s за %d $",NamePlayer[playerid],GetPVarInt(playerid,"HotdogPrice"));
					SCM(GetPVarInt(playerid,"HotdogOffer")-1, 0x6ab1ffaa, stringer);
					TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"HotdogPrice"),GetPVarInt(playerid,"HotdogPrice"),"покупка хотдога");
					p_info[playerid][pCash] -= GetPVarInt(playerid,"HotdogPrice");
					UpdateMoney(playerid);
					AC_SetPlayerHealth(playerid, health + 20.0);
					SetPlayerChatBubble(playerid,"съел(а) хотдог",0xE75480FF,30.0,10000);
					p_info[GetPVarInt(playerid,"HotdogOffer")-1][pCash] += GetPVarInt(playerid,"HotdogPrice");
					UpdateMoney(GetPVarInt(playerid,"HotdogOffer")-1);
					DeletePVar(playerid,"HotdogOffer");
					DeletePVar(playerid,"HotdogPrice");
				}
				else SendErr(playerid, "У вас не достаточно денег");
		}
		else return SendErr(playerid, "Вам ни кто не предлагал ХотДог");
	}
	else if(strcmp(params,"free",true) == 0)
	{
		if(GetPVarInt(playerid,"FreeOffer"))
		{
				if(!GetPVarInt(playerid,"SposobOffer"))
				{
					if(p_info[playerid][pCash] > GetPVarInt(playerid,"FreePrice"))
					{
						format(stringer, 144, "Вы приняли услуги адвоката %s за %d $",NamePlayer[GetPVarInt(playerid,"FreeOffer") - 1], GetPVarInt(playerid,"FreePrice"));
						SCM(playerid, 0x6ab1ffaa, stringer);
						format(stringer, 144, " Вы выпустили %s из тюрьмы за %d $",NamePlayer[playerid],GetPVarInt(playerid,"FreePrice"));
						SCM(GetPVarInt(playerid,"FreeOffer") - 1, 0x6ab1ffaa, stringer);
						TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"FreePrice"),GetPVarInt(playerid,"FreePrice"),"оплата услуг адвоката");
						p_info[playerid][pCash] -= GetPVarInt(playerid,"FreePrice");
						UpdateMoney(playerid);
						p_info[GetPVarInt(playerid,"FreeOffer") - 1][pCash] += GetPVarInt(playerid,"FreePrice");
						UpdateMoney(GetPVarInt(playerid,"FreeOffer") - 1);
						DeletePVar(playerid,"FreeOffer");
						DeletePVar(playerid,"FreePrice");
						DeletePVar(playerid,"SposobOffer");
						SetPlayerInterior(playerid, 0);
						AC_SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);//Тюрьма
						SetPlayerFacingAngle(playerid, 95.0636);
						p_info[playerid][pJailTime] = 0;
						UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pJailTime]);
						p_info[playerid][pMestoJail] = 0;
						UpdatePlayerData(playerid,"pMestoJail",p_info[playerid][pMestoJail]);
						p_info[playerid][pWanted] = 0;
						UpdatePlayerData(playerid,"pWanted",p_info[playerid][pWanted]);
						SCM(playerid, CISPOLZUY,"Вы заплатили свой долг обществу, теперь вы свободны");
						SetPlayerSkin(playerid, (p_info[playerid][tMember]) ? (p_info[playerid][pModel]) : (p_info[playerid][pChar]));
						format(stringer, 32, "~g~Freedom");
						SetPlayerWantedLevel(playerid, p_info[playerid][pWanted]);
						SetPlayerVirtualWorld(playerid, 0);
					}
					else SendErr(playerid, "У вас не достаточно денег");
				}
				if(GetPVarInt(playerid,"SposobOffer"))
				{
					if(p_info[playerid][pCash] > GetPVarInt(playerid,"FreePrice"))
					{
						format(stringer, 144, "Вы приняли услуги адвоката %s за %d $",NamePlayer[GetPVarInt(playerid,"FreeOffer") - 1], GetPVarInt(playerid,"FreePrice"));
						SCM(playerid, 0x6ab1ffaa, stringer);
						format(stringer, 144, " Вы выпустили %s из тюрьмы за %d $",NamePlayer[playerid], GetPVarInt(playerid,"FreePrice"));
						SCM(GetPVarInt(playerid,"FreeOffer") - 1, 0x6ab1ffaa, stringer);
						TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"FreePrice"),GetPVarInt(playerid,"FreePrice"),"оплата услуг адвоката");
						p_info[playerid][pCash] -= GetPVarInt(playerid,"FreePrice");
						p_info[GetPVarInt(playerid,"FreeOffer") - 1][pCash] += GetPVarInt(playerid,"FreePrice");
						DeletePVar(playerid,"FreeOffer");
						DeletePVar(playerid,"FreePrice");
						DeletePVar(playerid,"SposobOffer");
						SetPlayerInterior(playerid, 0);
						AC_SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
						SetPlayerFacingAngle(playerid, 95.0636);
						p_info[playerid][pJailTime] = 0;
						UpdatePlayerData(playerid,"pJailTime",p_info[playerid][pJailTime]);
						p_info[playerid][pMestoJail] = 0;
						UpdatePlayerData(playerid,"pMestoJail",p_info[playerid][pMestoJail]);
						SetPlayerSkin(playerid, (p_info[playerid][tMember]) ? (p_info[playerid][pModel]) : (p_info[playerid][pChar]));
						p_info[playerid][pWanted] = 0;
						UpdatePlayerData(playerid,"pWanted",p_info[playerid][pWanted]);
						SCM(playerid, CISPOLZUY,"Вы заплатили свой долг обществу, теперь вы свободны");
						format(stringer, 32, "~g~Freedom");
						SetPlayerWantedLevel(playerid, p_info[playerid][pWanted]);
						SetPlayerVirtualWorld(playerid, 0);
						UpdateMoney(playerid);
						UpdateMoney(GetPVarInt(playerid,"FreeOffer") - 1);
					}
					else SendErr(playerid, "У вас не достаточно денег");
			}
		}
		else SendErr(playerid, "Вам ни кто не предлагал услуги адвоката");
	}
	return 1;
}

ALT:w:whisper;
CMD:w(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, Вы не можете говорить");
	else if(p_info[playerid][pMuteTime] > 0) return	SendErr(playerid, "У Вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: /w(hisper) [сообщение]");
	else if(IsIpFound(params[0])) return SendReklama(playerid,params);
	format(stringer, 144, "%s[%d] шепчет: %s", NamePlayer[playerid],playerid, params);
	SendStreamMessage(2.0, playerid, stringer,0x6E6E6E6E);
	SetPlayerChatBubble(playerid,params[0],0x6E6E6E6E,30.0,10000);
	return 1;
}

ALT:n:b;
CMD:n(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	else if(p_info[playerid][pMuteTime] > 0) return	SendErr(playerid, "У Вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: /n [сообщение]");
	else if(IsIpFound(params[0])) return SendReklama(playerid,params);
	format(stringer, 144, "{CCCC99}(( %s[%d]: %s ))", NamePlayer[playerid],playerid, params);
	SendStreamMessage(20.0, playerid, stringer, 0xCCCC99FF);
	SetPlayerChatBubble(playerid,params[0],0xCCCC99FF,30.0,10000);
	return 1;
}
CMD:try(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	else if(p_info[playerid][pMuteTime] > 0) return	SendErr(playerid, "У Вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: /try [действие]");
	else if(IsIpFound(params[0])) return SendReklama(playerid,params);
	TryAction(playerid,params[0]);
	return 1;
}


ALT:aad:msg;
CMD:aad(playerid, params[])
{
	if(!p_info[playerid][pAdmin] && !GetPVarInt(playerid,"DJ")) return 1;
	if(p_info[playerid][pAdmin] < 6 && !GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid,"/aad [сообщение]");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN + 120;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=5  && !IsMegaAdmin(playerid))
		{
			if(GetPVarInt(playerid, "DJ"))
			{
				DeletePVar(playerid, "DJ");
			}
			else
			{
				p_info[playerid][pAdmin] = 0;
				p_info[playerid][tLeader]=0;
				p_info[playerid][tMember]=0;
				p_info[playerid][tRank]=0;
				gAdmin[playerid][8] = 1;
				SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			}
			return false;
		}
	}
	if(IsIpFound(params))
	{
		SendReklama(playerid,params);
		return 1;
	}

	format(stringer, 128, "%s %s: %s", (GetPVarInt(playerid,"DJ")) ? ("Диджей") : ("Администратор"), NamePlayer[playerid], params);
	if(strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) SendClientMessageToAll(0xFFCD00ff,stringer);
	else SendClientMessage(playerid, 0xFFCD00ff, stringer);

	return 1;
}

CMD:news(playerid, params[])
{
	if(p_info[playerid][tMember] != 16) return SendErr(playerid, "Недоступно");
	if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: /news [текст]");
	new newcar = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(newcar)) return SendErr(playerid, "Вы должны быть в машине");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	if (gVehicles[newcar-1][vFraction] == 16 || PlayerToPoint(30.0, playerid, 1771.7032,-1302.9386,65.8055)){ }
	else return SendErr(playerid, "Вы не в офисе / репортёрской машине / вертолёте");
	if(IsIpFound(params))
	{
		SendReklama(playerid,params);
		return 1;
	}
	if(AntiReklama(params))
	{
		p_info[playerid][tLeader]=0;
		p_info[playerid][tRank]=0;
		UpdatePlayerData(playerid,"tLeader",0);
		UpdatePlayerData(playerid,"tRank",0);
		ChangePlayerFraction(playerid, 0);

		format(stringer,250,"[Анти-слив в /news]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,params);
		AdmMes(CBADINFO,stringer,1);
		return 1;
	}
	format(stringer, 128, "[Радио Лос Сантос] %s [%d]: %s", NamePlayer[playerid], playerid, params);
	LSNews(0x6B8E23FF, stringer);
	DeletePVar(playerid,"lNews");
	return 1;
}

CMD:vad(playerid, params[])
{
	if(sscanf(params,"s[144]",params[0])) return SCM(playerid, CWHITE,"Введите: /vipad [текст]");
	if(p_info[playerid][pMuteTime] > 0) return SCM(playerid, COLOR_LIGHTRED, "У вас бан чата!");
	if(p_info[playerid][pDonateRank] != 3) return SCM(playerid, CWHITE, "Вы должны иметь GOLD VIP.");
	if(gVip[playerid][adTime] > 1) return SCM(playerid, COLOR_GREY, "Вы уже подали объявление на публикацию. Ожидайте...");
	strmid(gVip[playerid][adSender], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 31);
	gVip[playerid][adID] = playerid;
	strmid(gVip[playerid][adText], params[0], 0, strlen(params[0]), 128);
	gVip[playerid][adTime] = gVipTime;
	gVipTime += 5;
	if(gVip[playerid][adTime] >= 0) gVip[playerid][adTime] += 5;
	gVip[playerid][adNumber] = p_info[playerid][pPnumber];
	format(stringer, 144, "Ваше объявление поставлено в очередь на публикацию. (Примерное время ожидания: %i секунд)", gVip[playerid][adTime] ) ;
	SCM(playerid, COLOR_GREY, stringer);
	return 1;
}


CMD:createflower(playerid, params[])
{
	new get_free_flower = GetFreeFlower(), flower_objectid, flower_name[32], Float:flower_pos[3];
	if(get_free_flower == -1) return SendClientMessage(playerid,0xFFFF00FF,"Информация: {ffffff}Свободный слот не найден");
	if(sscanf(params,"is[32]", flower_objectid, flower_name)) return SendClientMessage(playerid,0xFFFF00FF,"Информация: {ffffff}/createflower [flower_objectid] [flower_name]");
	GetPlayerPos(playerid, flower_pos[0],flower_pos[1],flower_pos[2]);
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"INSERT INTO `flowers` (`x`, `y`, `z`, `objectid`, `name_flower`) VALUES ('%f', '%f', '%f', '%d', '%s')",flower_pos[0],flower_pos[1],flower_pos[2],flower_objectid,flower_name);
	new Cache:result = mysql_query(connects, mysql_query_string);
	_flower[get_free_flower][flmysqlID] = cache_insert_id();
	_flower[get_free_flower][flPos] = flower_pos;
	_flower[get_free_flower][flobjectid] = flower_objectid;
	strmid(_flower[get_free_flower][flname_flower], flower_name, 0, strlen(flower_name), 32);
	_flower[get_free_flower][flPickupid] = CreateDynamicPickup(_flower[get_free_flower][flobjectid], 2, flower_pos[0],flower_pos[1],flower_pos[2], -1, -1, -1, 100.0);
	format(fl_str,64,"%s\n\n\n\n\n{"#cGRAY"}подойдите\nчтобы подобрать",_flower[get_free_flower][flname_flower]);
	_flower[get_free_flower][flText] = CreateDynamic3DTextLabel(fl_str,CWHITE,flower_pos[0],flower_pos[1],flower_pos[2],5.0);
	cache_delete(result);
	return 1;
}

ALT:advertise:ad;
CMD:advertise(playerid, params[])
{
	if(gAdvertCount >= 15) return SendErr(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
	if(GetPVarInt(playerid,"CountFlood") > unix) return SendErr(playerid,"Нельзя посылать чаще одного объявления в минуту");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid,"/ad [текст объявления]");
	SetPVarString(playerid,"advert",params);
	new price = params[0] * gAdvertPrice;
	stringer[0] = EOS;
	format(stringer,500,"{"#cWHITE"}Цена объявления: "ORG"%i$\n{"#cWHITE"}Текст: "ORG"%s\n{"#cWHITE"}Вы действительно хотите отправить объявление?",price,params);
	ShowPlayerDialog(playerid,516,0,""ORG"Подача объявления",stringer,"Да","Нет");
	return 1;
}

ALT:report:rep;
CMD:report(playerid, params[])
{
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "/report [текст]");
	if(GetPVarInt(playerid,"pReportTime") > unix) return SendErr(playerid, "Подождите немного...");
	if(p_info[playerid][pRMuteTime] > gettime())
	{
		SendErr(playerid, "Вам запрещено писать в report");
		format(stringer, 128, "Повторите запрос через %d сек.", p_info[playerid][pRMuteTime]-gettime());
		return SCM(playerid, 0xFFFFFFFF, stringer);
	}

	format(stringer, 128, "%s [%d] : "nwhite"%s",NamePlayer[playerid], playerid, params);
	SCM(playerid, 0x008e8cff, stringer);
	SCM(playerid, -1, "Ожидайте ответа администратора");

	foreach(i)
	{
		if(p_info[i][pAdmin] == 0) continue;
		format(stringer, 128, "[PM] %s [%d]: {"#cWHITE"}%s", NamePlayer[playerid], playerid, params);
		SCM(i, 0x008e8cff, stringer);
	}

	SetPVarInt(playerid, "pReportTime", unix + 15);
	return 1;
}


ALT:ask:qe;
CMD:ask(playerid, params[])
{
	if(isnull(params) || strlen(params) > 50) return SendInf(playerid, "/ask [текст]");
	if(GetPVarInt(playerid,"pReportTime") > unix) return SendErr(playerid, "Подождите немного...");
	if(p_info[playerid][pRMuteTime] > gettime())
	{
		SendErr(playerid, "Вам запрещено писать в ask");
		format(stringer, 128, "Повторите запрос через %d сек.", p_info[playerid][pRMuteTime]-gettime());
		return SCM(playerid, 0xFFFFFFFF, stringer);
	}

	format(stringer, 128, "%s [%d] : "nwhite"%s",NamePlayer[playerid], playerid, params);
	SCM(playerid, 0x008e8cff, stringer);
	SCM(playerid, -1, "Ожидайте ответа администратора");

	foreach(i)
	{
		if(p_info[i][tHelper] < 1 && p_info[i][pAdmin] < 1) continue;
		if(p_info[i][tHelper] > 1) { HelperStat[i][0] += 1; }
		format(stringer, 128, "[QE] %s [%d]: {"#cWHITE"}%s", NamePlayer[playerid], playerid, (params));
		SCM(i, 0x008e8cff, stringer);

	}
	SetPVarInt ( playerid, "is_question", 1 ) ;
	SetTimerEx ( "clear_player_pvar", 180000, 0, "i", params [ 0 ] ) ;
	SetPVarInt(playerid, "pReportTime", unix + 15);
	return 1;
}


/*CMD:pm(playerid, params[])
{
	if(sscanf(params,"is[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_GREY,"Введите: /pm [ ID ] [ текст ]");
	else if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети");
	else if((Settings[params[0]] & getPrivateMessage) == 0) return SendClientMessage(playerid,COLOR_GREY,"Данный игрок отключил приём личных сообщений!");
	else if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас бан чата");
	else if(p_info[playerid][pAdmin] != 0 || p_info[playerid][tHelper] != 0) return 1;
	else if(IsIpFound(params[1]))
	{
		SendReklama(playerid,params[1]);
		return 1;
	}

	format(stringer, 144, "(( PM %s[%d]: %s ))",NamePlayer[params[0]],params[0],params[1]);
	SendClientMessage(playerid,0xFFFF00AA, stringer);
	format(stringer, 144, "(( PM от %s[%d]: %s ))",NamePlayer[playerid],playerid,params[1]);
	SendClientMessage(params[0],0xFFFF00AA, stringer);

	foreach(i)
	{
		if(GetPVarInt(i, "ChatPM"))
		{
			format(stringer, 144, "[CHAT-PM] %s[%d] отправил личное сообщение ( %s ) игроку %s[%d]", NamePlayer[playerid],playerid,params[1],NamePlayer[params[0]],params[0]);
			SendClientMessage(i,COLOR_GREY,stringer);
		}
	}

	return 1;
}*/


ALT:sms:txt;
CMD:sms(playerid, params[])
{
	if(!p_info[playerid][pPnumber]) return SendErr(playerid, "У вас нет SIM-карты, приобретите её в 24/7");
	else if(GetPVarInt(playerid,"FloodByPlayer")>unix && p_info[playerid][pExp] < 2) return SendErr(playerid, "Пожалуйста, подождите..");
	else if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	else if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас бан чата");
	else if(GetPVarInt(playerid,"takephone")) return SendErr(playerid, "У Вас нет телефона");
	else if(p_info[playerid][pMobile] <= 0) return SendErr(playerid,"Суммы на вашем счету не достаточно для вызова");
	else if(sscanf(params,"ds[100]",params[0],params[1])) return SendInf(playerid, "Используйте: /sms [номер телефона] [текст]");
	else if(params[0]==p_info[playerid][pPnumber]) return SendErr(playerid,"Вы указали свой номер телефона.");
	else if ( params[0] == 0 ) return SendErr(playerid, "Вы не можете послать сообщение на этот номер.");
	else if(IsIpFound(params[1]))
	{
		SendReklama(playerid,params[1]);
		return 1;
	}
	mysql_query_string[0] = EOS;
	mysql_format(connects,mysql_query_string,512,"SELECT `number`, `name_id` FROM `phone_book_w` WHERE `number` = '%d' AND `player_id` = '%d'", params[0], p_info[playerid][pID]);
	new Cache:result = mysql_query(connects, mysql_query_string);
	new rows = cache_num_rows();
	if(rows != 0)
	{
		new check_phone,number_phone;
		cache_get_value_index_int(0,1,check_phone);
		cache_get_value_index_int(0,0,number_phone);

		if ( params[0] ==  number_phone)
		{
			foreach(i)
			{
				if(p_info[i][pID]== check_phone)
				{
					cache_delete(result);
					return SendPlayerSms(playerid, p_info[i][pPnumber], params[1]);
				}
			}
			cache_delete(result);
			return SendClientMessage(playerid, COLOR_GREY, "Ошибка. Игрок не в сети");
		}
	}
	cache_delete(result);
	SendPlayerSms(playerid, params[0], params[1]);

	return 1;
}

stock SendPlayerSms(playerid, number, text[])
{
	foreach(i)
	{
		if(p_info[i][pPnumber] == number)
		{
			if(GetPVarInt(i,"PhoneOnline")) return SendErr(playerid, "Телефон абонента выключен");
			format(stringer, 100 + 20, "SMS: %s | Получатель: %s(%i) [т. %i]",text,NamePlayer[i],i, p_info[i][pPnumber]);
			SendClientMessage(playerid, CYELLOW, stringer);
			//
			format(stringer, 100 + 20, "SMS: %s | Отправитель: %s(%i) [т. %i]",text,NamePlayer[playerid],playerid, p_info[playerid][pPnumber]);
			SendClientMessage(i,  CYELLOW, stringer);
			
			for(new x=0;x<MAX_PLAYERS;x++)
			{
			    if(!IsPlayerConnected(x)) continue;
				if(GetPVarInt(x, "BigEarSms") != 1) continue;

				format(stringer, 100 + 20, "[A] SMS: %s | отправил %s(%i) игроку %s(%d)", text,NamePlayer[playerid],playerid,NamePlayer[i],i);
				SCM(x, COLOR_GREY, stringer);
			}
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SetPVarInt(playerid,"FloodByPlayer", unix+5);

			return 1;
		}
	}
	if ( p_info[playerid][pMobile] > 5 )
	{
		p_info[playerid][pMobile] -= 5 ;
		UpdatePlayerData(playerid,"pMobile",p_info[playerid][pMobile]);
	}
	return SendClientMessage(playerid, CBRIGHTRED, "Неверный номер абонента / Абонент не в сети");
}

ALT:departments:d;
CMD:departments(playerid,params[])
{
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != 11 && p_info[playerid][tMember] != 26) return SendErr(playerid, "Вам недоступен этот чат");
	else if(p_info[playerid][tRank] < FractionRank[p_info[playerid][tMember]-1]-1 && p_info[playerid][tMember] != 26) return SendErr(playerid, "Вам недоступна эта команда");
	else if(p_info[playerid][tMember] == 26 && p_info[playerid][tRank]<8) return SendErr(playerid, "Вам недоступна эта команда");
	//else if(p_info[playerid][tMember]==10) return SendErr(playerid,"Вашей организации это не доступно");
	else if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: (/d)epartments [текст]");
	else if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	else if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	format(stringer, 144, "[D] %s %s[%d]: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid], playerid,params);
	SendTeamMessage(CALLDEPT, stringer, false);
	SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
	return 1;
}

ALT:gnews:gov;
CMD:gnews(playerid, params[])
{
	new count_player_row = GetPVarInt(playerid,"count_row");
	new max_rows = GetPVarInt(playerid, "max_rows");
	new get_goverment_text[100];
	new set_pvar_string[15];

	stringer[0] = EOS;
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != 11) return 1;
	else if(p_info[playerid][tMember] == 0 || p_info[playerid][tMember] == 16) return 1;
	else if(p_info[playerid][tMember]==10) return SendErr(playerid,"Вашей организации это не доступно");
	else if(p_info[playerid][tRank] < FractionRank[p_info[playerid][tMember]-1]-1 && p_info[playerid][tMember] != 26) return SendErr(playerid, "Вам недоступна эта команда");
	else if(p_info[playerid][tMember] == 26 && p_info[playerid][tRank] < 8) return SendErr(playerid, "Вам недоступна эта команда");
	else if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	else if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	else if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	//
	if(!max_rows)
	{
		if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /gnews [количество строк]");
		if(params[0] < 1 || params[0] > 5) return SendErr(playerid, "от 1 до 5 строк");
		SetPVarInt(playerid,"max_rows", params[0] + 1);
		SetPVarInt(playerid, "count_row", 1);
		format(stringer, 256, "Вы выбрали для гос. новостей строк: %d {C0C0C0}| Используйте /gnews [строка 1]", params[0]);
		SendClientMessage(playerid, 0x489191C8, stringer);
	}
	else
	{
		if(max_rows == count_player_row)
		{
			new years, months, days, data[32];
			r_getdate(years, months, days);
			format(data, 32, "%02d.%02d.%04d", days, months, years);

			//r_gettime(tmphour, tmpminute, tmpsecond);
			//FixHour(tmphour);
			//tmphour = shifthour;

			SendClientMessageToAll(0x489191C8,"================== {C0C0C0}[ Государственные новости ]{489191} ==================");

			for(new i = 1; i < max_rows; i++)
			{
				format(set_pvar_string, 15, "gnews%d", i);
				GetPVarString(playerid, set_pvar_string, get_goverment_text, 100);


				if(IsIpFound(get_goverment_text))
				{
					SendReklama(playerid,get_goverment_text);
					return 1;
				}
				else if(AntiReklama(get_goverment_text))
				{
					p_info[playerid][tLeader]=0;
					p_info[playerid][tRank]=0;
					UpdatePlayerData(playerid,"tLeader",0);
					UpdatePlayerData(playerid,"tRank",0);
					ChangePlayerFraction(playerid, 0);

					format(stringer,250,"[Анти-слив в /gnews]: %s[%d] попытался отправить текст: %s",NamePlayer[playerid],playerid,get_goverment_text);
					AdmMes(CBADINFO,stringer,1);
					return 1;
				}
				format(stringer, 256, "%s: {FFFFFF}%s", f_info[p_info[playerid][tMember]][f_name], get_goverment_text);
				SendClientMessageToAll(0xD6D6D6C8, stringer);
			}
			format(stringer, 256, "%02d:%02d:%02d | %s", tmphour, tmpminute, tmpsecond, data);
			SendClientMessageToAll(0xD6D6D6C8, stringer);
			SendClientMessageToAll(0x489191C8, "=============================================================");
			format(stringer, 256, "[A] %s %s[%d] - Использовал /gnews", f_info[p_info[playerid][tMember]][f_name], NamePlayer[playerid], playerid);
			AdmMes(CADMIN_HELP_INFO, stringer, 1);

			DeletePVar(playerid,"max_rows");
			DeletePVar(playerid,"count_row");

			return 1;
		}
		format(stringer, 64, "Используйте: /gnews [строка %d]",count_player_row);
		if (isnull(params)) return SCM(playerid, COLOR_GREY, stringer);
		format(set_pvar_string, 15, "gnews%d", count_player_row);
		SetPVarString(playerid, set_pvar_string, params);


		if(count_player_row + 1 == max_rows)
		{
			format(stringer, 255, "Строка %d : %s", count_player_row, params);
			SendClientMessage(playerid,0xD6D6D6C8, stringer);
			SendClientMessage(playerid, CGREEN, "Используйте команду /gnews еще раз. Чтобы опубликовать новости");
		}
		else
		{
			format(stringer, 255, "Строка %d : %s {489191}| Используйте /gnews [строка %d]", count_player_row, params, count_player_row + 1);
			SendClientMessage(playerid, 0xD6D6D6C8, stringer);
		}
		SetPVarInt(playerid,"count_row", count_player_row + 1);
	}
	return 1;
}

CMD:hc(playerid,params[])
{
	if(SELECT_SERVER == 2) return 1;
	else if(p_info[playerid][tHelper] == 0) return 1;
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас бан чата");
	else if(isnull(params) || strlen(params) > 90 ) return SendInf ( playerid, "Используйте: (/hc) [helpers chat]");
	new text_string [ 128 ] ;
	format ( text_string, sizeof ( text_string ), "[H] %s[%d]: %s", NamePlayer[playerid],playerid, params);
	SendHelperMessage(0x00ff7fff, text_string);
	return 1;
}

CMD:fid(playerid)
{
	if(p_info[playerid][pAdmin] < 5) return 1;
	stringer = "{"#cWHITE"}ID фракции\tНазвание\n\n";
	for(new i=0; i<27; i++)
	{
		format(stringer,1000,"%s%i\t\t%s\n",stringer,i,f_info[i][f_name]);
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"   ",stringer,"Ок","");
	return 1;
}

CMD:atipster(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(sscanf(params,"i",params[0])) return SendInf(playerid, "/atipster [ID фракции]");
	else if(params[0]<1 || params[0] > fraction_amount) return SendInf(playerid, "/atipster [ID фракции]");
	else if(GetPVarInt(playerid,"tipster_listen"))
	{
		SendClientMessage(playerid,CORANGE,"Вы отключили прослушку");
		DeletePVar(playerid,"tipster_listen");
		return 1;
	}
	SetPVarInt(playerid,"tipster_listen", params[0]);
	format(stringer,128,"Вы начали прослушку фракции {"#cWHITE"}%s",f_info[params[0]][f_name]);
	SendClientMessage(playerid,CORANGE,stringer);
	SendClientMessage(playerid,-1,"Используйте /tipster еще раз чтобы отключить прослушку");
	return 1;
}

CMD:submembers(playerid, params[])
{
	if(p_info[playerid][tMember] != 26) return 1;
	if(sscanf(params,"i",params[0]))
	{
		SendInf(playerid, "/submembers [ID фракции]");
		if(p_info[playerid][tRank] == 10 || p_info[playerid][tRank] == 12 || p_info[playerid][tRank] == 7 || p_info[playerid][tRank] == 11)
			SendClientMessage(playerid,COLOR_GREY,"ID: 1 - Police Department | 10 - A.R.G.U.S. | 21 - San Andreas Sheriff Department | 25 - SWAT");
		if(p_info[playerid][tRank] == 9 || p_info[playerid][tRank] == 12 || p_info[playerid][tRank] == 6 || p_info[playerid][tRank] == 11)
			SendClientMessage(playerid,COLOR_GREY,"ID: 3 - ВМФ");
		if(p_info[playerid][tRank] == 8 || p_info[playerid][tRank] == 12 || p_info[playerid][tRank] == 5 || p_info[playerid][tRank] == 11)
			SendClientMessage(playerid,COLOR_GREY,"ID: 4 - Больница Лос Сантос");
		return 1;
	}
	switch(p_info[playerid][tRank])
	{
		case 11,12:if(params[0]!=1 && params[0]!=10 && params[0]!=21 && params[0]!=25 && params[0]!=3 && params[0]!=19 && params[0]!=4) return SendErr(playerid, "Неверный ID");
		case 10,7:if(params[0]!=1 && params[0]!=10 && params[0]!=21 && params[0]!=25) return SendErr(playerid, "Неверный ID");
		case 9,6:if(params[0]!=3) return SendErr(playerid, "Неверный ID");
		case 8,5:if(params[0]!=4) return SendErr(playerid, "Неверный ID");
		default: return SendErr(playerid, "Недоступно");
	}

	new COUNT_MEMBERS = 0;
	stringer[0] = EOS, strcat(stringer, "Имя\t\t\t\t\tРанг\t\t\tТелефон\t\tУровень\n\n{"#cWHITE"}");
	foreach(i)
	{
		if (p_info[i][tMember] != params[0])continue;
		format(stringer, 2400, "%s%s(%i)\t\t\t%s(%i)\t\t%i\t\t\t%i %s\n",stringer,NamePlayer[i],i,GetRank(p_info[i][tMember],p_info[i][tRank]),p_info[i][tRank],p_info[i][pPnumber],p_info[i][pLevel],(unix - p_info[i][pAFK] > 3) ? ("{ffff00}[AFK]{"#cWHITE"}") : (""));
		COUNT_MEMBERS++;
	}
	format(stringer,2400,"%s\n\nВсего: %i человек",stringer,COUNT_MEMBERS);
	ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}Члены организации онлайн", stringer, "Закрыть", "");
	return 1;
}
CMD:tipster(playerid,params[])
{
	if(p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 23 && p_info[playerid][tMember] != 10) return SendErr(playerid, "Доступно только ФБР / Хитманы / A.R.G.U.S.");
	if ( p_info[playerid][tRank] < 9 && p_info[playerid][tMember] == 23) return SendClientMessage ( playerid, COLOR_GREY , "Доступно с 9 ранга" ) ;
	if ( p_info[playerid][tRank] < 2 && p_info[playerid][tMember] == 10) return SendClientMessage ( playerid, COLOR_GREY , "Доступно с 2 ранга" ) ;
	if(!GetPVarInt(playerid,"tipster")) return SendErr(playerid, "У вас нет жучка. Подойдите к багажнику машины и нажмите 'H'");
	new param[40];
	if(sscanf(params, "s[32]S()[64]", param, params))
	{
		SCM(playerid,CYELLOW, 	"• [Подсказка]: {"#cWHITE"} /tipster [действие]");
		SCM(playerid,CINFO, 	"- {"#cWHITE"}SET {"#cINFO"} Прикрепить жучок к игроку");
		SCM(playerid,CINFO, 	"- {"#cWHITE"}REMOVE {"#cINFO"} Деактивировать жучок");
		SCM(playerid,CINFO, 	"- {"#cWHITE"}LISTEN {"#cINFO"} Начать прослушивание чата фракции");
		return 1;
	}
	else if(!strcmp(param, "set",true))
	{
		new giveplayerid;
		if(sscanf(params, "i", giveplayerid)) return SendErr(playerid, "Используйте: /tipster set [ид игрока]");
		if(!IsPlayerConnected(giveplayerid)) return SendErr(playerid, "Игрок оффлайн");
		if(!p_info[giveplayerid][tMember]) return SendErr(playerid, "Игрок не состоит в организации");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid,X,Y,Z);
		if(!PlayerToPoint(10.0,playerid,X,Y,Z)) return SendErr(playerid, "Игрок не рядом с вами");
		SetPVarInt(playerid,"tipster_set", giveplayerid + 1);
		format(stringer,200,"Вы поставили жучок на {"#cWHITE"}%s {269BD8}Используйте {"#cWHITE"}/tipster listen {269BD8}для прослушки",NamePlayer[giveplayerid]);
		SCM(playerid,CINFO,stringer);
	}
	else if(!strcmp(param, "listen",true))
	{
		if(!GetPVarInt(playerid,"tipster_set")) return SendErr(playerid, "Сначала поставьте на игрока жучок {"#cBADINFO"}/tipster set");

		new giveplayerid = GetPVarInt(playerid,"tipster_set")-1;

		format(stringer,128, "Вы начали прослушку за игроком {"#cWHITE"}%s", NamePlayer[giveplayerid]);
		SCM(playerid,CINFO,stringer);

		SetPVarInt(playerid,"tipster_listen", p_info[giveplayerid][tMember]);
		DeletePVar(playerid,"tipster_set");
	}
	else if(!strcmp(param, "remove",true))
	{
		if(GetPVarInt(playerid,"tipster_set"))		DeletePVar(playerid,"tipster_set");
		if(GetPVarInt(playerid,"tipster_listen"))	DeletePVar(playerid,"tipster_listen");
		if(GetPVarInt(playerid,"tipster"))			DeletePVar(playerid,"tipster");
		SendClientMessage(playerid,COLOR_LIGHTRED,	"Вы деактивировали жучок");
	}
	return 1;
}

CMD:subspy(playerid,params[])
{
	if(p_info[playerid][tMember] != 26) return 1;
	if(sscanf(params,"i",params[0]))
	{
		SendInf(playerid, "/subspy [ID фракции]");
		if(p_info[playerid][tRank] == 10 || p_info[playerid][tRank] == 12 || p_info[playerid][tRank] == 7 || p_info[playerid][tRank] == 11)
			SendClientMessage(playerid,COLOR_GREY,"ID: 1 - Police Department | 10 - A.R.G.U.S. | 21 - San Andreas Sheriff Department | 25 - Hostage Rescue Team");
		if(p_info[playerid][tRank] == 9 || p_info[playerid][tRank] == 12 || p_info[playerid][tRank] == 6 || p_info[playerid][tRank] == 11)
			SendClientMessage(playerid,COLOR_GREY,"ID: 3 - ВМФ");
		if(p_info[playerid][tRank] == 8 || p_info[playerid][tRank] == 12 || p_info[playerid][tRank] == 5 || p_info[playerid][tRank] == 11)
			SendClientMessage(playerid,COLOR_GREY,"ID: 4 - Больница Лос Сантос");
		return 1;
	}
	switch(p_info[playerid][tRank])
	{
		case 11,12:
			if(params[0]!=1 && params[0]!=10 && params[0]!=21 && params[0]!=25 && params[0]!=3 && params[0]!=19 && params[0]!=4) return SendErr(playerid, "Вы можете прослушивать только чат гос. структур");
		case 10,7:
			if(params[0]!=1 && params[0]!=10 && params[0]!=21 && params[0]!=25) return SendErr(playerid, "Вы можете прослушивать только чат Полиции");
		case 9,6:
			if(params[0]!=3) return SendErr(playerid, "Вы можете прослушивать только чат Армий");
		case 8,5:
			if(params[0]!=4) return SendErr(playerid, "Вы можете прослушивать только чат Больниц");
		default: return SendErr(playerid, "Прослушивать могут только министры или советники");
	}
	if(GetPVarInt(playerid,"tipster_listen"))
	{
		SendClientMessage(playerid,CORANGE,"Вы отключили прослушку");
		DeletePVar(playerid,"tipster_listen");
		return 1;
	}
	SetPVarInt(playerid,"tipster_listen", params[0]);
	format(stringer,128,"Вы начали прослушку фракции {"#cWHITE"}%s",f_info[params[0]][f_name]);
	SendClientMessage(playerid,CORANGE,stringer);
	SendClientMessage(playerid,-1,"Используйте /subspy еще раз чтобы отключить прослушку");
	return 1;
}

CMD:channel(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(!p_info[playerid][tMember]) return SendErr(playerid, "Вы не состоите в фракции");
	if(sscanf(params,"ii",params[0],params[1])) return SendErr(playerid, "/channel [номер канала] [номер слота]");
	if(params[0] <= 0 || params[1] <= 0) return SendErr(playerid, "/channel [номер канала] [номер слота]");

	format(stringer, 128, "[F] %s [%i] подключился к защищенному каналу номер %i [слот: %i]", NamePlayer[playerid],playerid,params[0], params[1]);
	SendFamilyMessage(playerid,CALLDEPT,stringer);
	SendInf(playerid,"Чтобы разговаривать по защищенному каналу используйте "ORG"/rl");

	SetPVarInt(playerid,"channel", params[0]);
	SetPVarInt(playerid,"channel_slot", params[1]);
	return 1;
}

CMD:rl(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(!p_info[playerid][tMember]) return SendErr(playerid, "Вы не состоите в фракции");
	if(!GetPVarInt(playerid,"channel") || !GetPVarInt(playerid,"channel_slot")) return SendErr(playerid, "Вы не подключены на волну");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "/rl [текст]");
	foreach(i)
	{
		if(GetPVarInt(i,"channel"))
		{
			if(GetPVarInt(i,"channel")==GetPVarInt(playerid,"channel") && GetPVarInt(i,"channel_slot")==GetPVarInt(playerid,"channel_slot"))
			{
				format(stringer,128,"** [CH: %i,S:%i] %s: %s", GetPVarInt(playerid,"channel"),GetPVarInt(playerid,"channel_slot"), NamePlayer[playerid],params);
				SendClientMessage(i,-1,stringer);
			}
		}
	}
	return 1;
}

CMD:u(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(!p_info[playerid][pSubLeader]) return SendErr(playerid,  "Вы не состоите в подразделении");
	if(isnull(params) || strlen(params) > 100) return SendErr(playerid,  "/u [текст]");
	foreach(i)
	{
		if(p_info[i][pSubLeader] == p_info[playerid][pSubLeader] && p_info[i][tMember] == p_info[playerid][tMember])
		{
			format(stringer, 144, "[U] %s %s [%i]: %s", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], playerid, params);
			SCM(i, 0x7CBBE6FF, stringer);
		}
	}
	format(stringer, 144, "[U] %s %s [%i]: %s", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], playerid, params);
	SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
	return 1;
}

ALT:radio:r;
CMD:radio(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(!IsACop(playerid) && !IsAArm(playerid) && p_info[playerid][tMember] != 27 && !IsAMayor(playerid) && !IsAMedic(playerid)) return SendErr(playerid, "Вам недоступен этот чат");
	if(StartWork(playerid) && !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: (/r)adio [текст]");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас бан чата");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");

	if ( p_info[ playerid ] [ p_f_mute ] > unix ) return SCM(playerid, CWHITE, "Вам запрещено писать в чат фракции!");
	else
	{
		if ( p_info[ playerid ] [ p_f_mute ] != 0 )
		{
			p_info[ playerid ] [ p_f_mute ] = 0, UpdatePlayerData ( playerid,"p_f_mute", p_info [ playerid ] [ p_f_mute ] ) ;
		}
	}

	new SubLeader = p_info[playerid][pSubLeader]-1;
	new Member = p_info[playerid][tMember]-1;

	if(p_info[playerid][pSubLeader])
	{
		format(stringer, 144, "[R] %s %s [%i]: [%s]: %s", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], playerid, unit_name[Member][SubLeader],params);
	}
	else
	{
		format(stringer, 144, "[R] %s %s [%i]: %s", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], playerid, params);
	}
	SendRadioMessage(p_info[playerid][tMember], 0x93FF4CFF, stringer);
	SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
	SetPlayerChatBubble(playerid, "Сказал(а) что-то в рацию", 0xE75480FF, 10.0, 3000);
	return 1;
}

CMD:rb(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(!IsACop(playerid) && !IsAArm(playerid) && p_info[playerid][tMember] != 27 && !IsAMayor(playerid) && !IsAMedic(playerid)) return SendErr(playerid, "Вам недоступен этот чат");
	if(StartWork(playerid) &&  !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: /rb [текст]");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У вас бан чата");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");

	if ( p_info[ playerid ] [ p_f_mute ] > unix ) return SCM(playerid, CWHITE, "Вам запрещено писать в чат фракции!");
	else
	{
		if ( p_info[ playerid ] [ p_f_mute ] != 0 )
		{
			p_info[ playerid ] [ p_f_mute ] = 0, UpdatePlayerData ( playerid,"p_f_mute", p_info [ playerid ] [ p_f_mute ] ) ;
		}
	}

	new SubLeader = p_info[playerid][pSubLeader]-1;
	new Member = p_info[playerid][tMember]-1;

	if(p_info[playerid][pSubLeader])
	{
		format(stringer, 144, "[R] %s %s [%i]: [%s]: (( %s ))", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], playerid, unit_name[Member][SubLeader],params);
	}
	else
	{
		format(stringer, 144, "[R] %s %s [%i]: (( %s ))", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], playerid, params);
	}
	SendRadioMessage(p_info[playerid][tMember], 0x93FF4CFF, stringer);
	SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
	SetPlayerChatBubble(playerid, "Сказал(а) что-то в рацию", 0xE75480FF, 10.0, 3000);
	return 1;
}




CMD:f(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(!p_info[playerid][tMember]) return 1;
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");

	if ( p_info[ playerid ] [ p_f_mute ] > unix ) return SCM(playerid, CWHITE, "Вам запрещено писать в чат фракции!");
	else
	{
		if ( p_info[ playerid ] [ p_f_mute ] != 0 )
		{
			p_info[ playerid ] [ p_f_mute ] = 0 ;
			UpdatePlayerData ( playerid,"p_f_mute", p_info [ playerid ] [ p_f_mute ] ) ;
		}
	}
	if(IsAGang(playerid) || ISAMAFIA(playerid) || p_info[playerid][tMember] == 24 || p_info[playerid][tMember] == 9 || p_info[playerid][tMember] == 16 || p_info[playerid][tMember] == 23 ||  p_info[playerid][tMember] == 11)
	{
		if(StartWork(playerid) &&  !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
		if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: (/f)amily [текст]");
		format(stringer, 128, "[F] %s %s [%i]: %s", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, params);
		SendFamilyMessage(p_info[playerid][tMember], 0x4682B4AA, stringer);
		SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
		SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", 0xE75480FF, 10.0, 3000);
	}
	else
	{
		new Text[101];
		if(sscanf(params,"s[100]",Text)) return SendInf(playerid, "Введите: (/f)amily [текст]");
		//if(p_info[playerid][tMember]==10) return SendErr(playerid,"Вашей организации это не доступно");
		new bool:fix = false;
		new SubLeader = p_info[playerid][pSubLeader]-1;
		new Member = p_info[playerid][tMember]-1;

		if(p_info[playerid][tMember] == 1 || p_info[playerid][tMember] == 10 || p_info[playerid][tMember] == 21 || p_info[playerid][tRank] == 7 && p_info[playerid][tMember] == 26 || p_info[playerid][tRank] == 10 && p_info[playerid][tMember] == 26 || p_info[playerid][tMember] == 2 || p_info[playerid][tMember] == 25)
		{
			foreach(i)
			{
				if(p_info[i][tMember] == 1 || p_info[i][tMember] == 21 || p_info[i][tRank] == 7 && p_info[i][tMember] == 26 || p_info[i][tRank] == 10 && p_info[i][tMember] == 26 || p_info[i][tMember] == 2 || p_info[i][tMember] == 25)
				{
					if(p_info[playerid][pSubLeader])
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: [%s]: %s", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, unit_name[Member][SubLeader], Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
					}
					else
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: %s", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
						//SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
						if(!fix)
						{
							SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
							fix = true;
						}
					}
				}
			}
			return 1;
		}
		if(p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 19 || p_info[playerid][tRank] == 6 && p_info[playerid][tMember] == 26 || p_info[playerid][tRank] == 9 && p_info[playerid][tMember] == 26)
		{
			foreach(i)
			{
				if(p_info[i][tMember] == 3 || p_info[i][tMember] == 19 || p_info[i][tRank] == 6 && p_info[i][tMember] == 26 || p_info[i][tRank] == 9 && p_info[i][tMember] == 26)
				{
					if(p_info[playerid][pSubLeader])
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: [%s]: %s", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, unit_name[Member][SubLeader], Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
					}
					else
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: %s", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
						if(!fix)
						{
							SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
							fix = true;
						}
					}
				}
			}
			return 1;
		}
		if(p_info[playerid][tMember] == 7 || p_info[playerid][tMember] == 26 && p_info[playerid][tRank] != 9 || p_info[playerid][tMember] == 26 && p_info[playerid][tRank] != 8 || p_info[playerid][tMember] == 26 && p_info[playerid][tRank] != 10 || p_info[playerid][tMember] == 8 || p_info[playerid][tMember] == 9 || p_info[playerid][tRank] == 5 && p_info[playerid][tMember] == 26 || p_info[playerid][tRank] == 8 && p_info[playerid][tMember] == 26)
		{
			foreach(i)
			{
				if(p_info[i][tMember] == 7 || p_info[i][tMember] == 26 || p_info[i][tMember] == 8 || p_info[i][tMember] == 9 || p_info[i][tRank] == 6 && p_info[i][tMember] == 26 || p_info[i][tRank] == 9 && p_info[i][tMember] == 26)
				{
					if(p_info[playerid][pSubLeader])
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: [%s]: %s", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, unit_name[Member][SubLeader], Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
					}
					else
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: %s", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
						if(!fix)
						{
							SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
							fix = true;
						}
					}
				}
			}
			return 1;

		}
	}

	return 1;
}

CMD:fb(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	new Text[101];
	if(!p_info[playerid][tMember]) return 1;
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");

	if ( p_info[ playerid ] [ p_f_mute ] > unix ) return SCM(playerid, CWHITE, "Вам запрещено писать в чат фракции!");
	else
	{
		if ( p_info[ playerid ] [ p_f_mute ] != 0 )
		{
			p_info[ playerid ] [ p_f_mute ] = 0, UpdatePlayerData ( playerid,"p_f_mute", p_info [ playerid ] [ p_f_mute ] ) ;
		}
	}

	if(IsAGang(playerid) || ISAMAFIA(playerid) || p_info[playerid][tMember] == 24 || p_info[playerid][tMember] == 9 || p_info[playerid][tMember] == 16 || p_info[playerid][tMember] == 23 ||  p_info[playerid][tMember] == 11)
	{
		if(StartWork(playerid) &&  !start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
		if(sscanf(params,"s[100]",Text)) return SendInf(playerid, "Используйте: /fb [текст]");
		format(stringer, 128, "[F] %s %s [%i]: (( %s ))", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
		SendFamilyMessage(p_info[playerid][tMember], 0x4682B4AA, stringer);
		SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
		SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", 0xE75480FF, 10.0, 3000);
	}
	else
	{
		if(sscanf(params,"s[100]",Text)) return SCM(playerid, CWHITE, " Используйте: /fb [текст]");

		new bool:fix = false;
		new SubLeader = p_info[playerid][pSubLeader]-1;
		new Member = p_info[playerid][tMember]-1;

		if(p_info[playerid][tMember] == 1 || p_info[playerid][tMember] == 21 || p_info[playerid][tRank] == 7 && p_info[playerid][tMember] == 26 || p_info[playerid][tRank] == 10 && p_info[playerid][tMember] == 26 || p_info[playerid][tMember] == 2 || p_info[playerid][tMember] == 25)
		{
			foreach(i)
			{
				if(p_info[i][tMember] == 1 || p_info[i][tMember] == 21 || p_info[i][tRank] == 7 && p_info[i][tMember] == 26 || p_info[i][tRank] == 10 && p_info[i][tMember] == 26 || p_info[i][tMember] == 2 || p_info[i][tMember] == 25)
				{
					if(p_info[playerid][pSubLeader])
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: [%s]: (( %s ))", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, unit_name[Member][SubLeader], Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
					}
					else
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: (( %s ))", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
						SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
						if(!fix)
						{
							SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
							fix = true;
						}
					}
				}
			}
			return 1;
		}
		if(p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 19 || p_info[playerid][tRank] == 6 && p_info[playerid][tMember] == 26 || p_info[playerid][tRank] == 9 && p_info[playerid][tMember] == 26)
		{
			foreach(i)
			{
				if(p_info[i][tMember] == 3 || p_info[i][tMember] == 19 || p_info[i][tRank] == 6 && p_info[i][tMember] == 26 || p_info[i][tRank] == 9 && p_info[i][tMember] == 26)
				{
					if(p_info[playerid][pSubLeader])
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: [%s]: (( %s ))", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, unit_name[Member][SubLeader], Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
					}
					else
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: (( %s ))", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
						if(!fix)
						{
							SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
							fix = true;
						}
					}
				}
			}
			return 1;
		}
		if(p_info[playerid][tMember] == 7 || p_info[playerid][tMember] == 26 && p_info[playerid][tRank] != 9 || p_info[playerid][tMember] == 26 && p_info[playerid][tRank] != 8 || p_info[playerid][tMember] == 26 && p_info[playerid][tRank] != 10 || p_info[playerid][tMember] == 8 || p_info[playerid][tMember] == 9 || p_info[playerid][tRank] == 5 && p_info[playerid][tMember] == 26 || p_info[playerid][tRank] == 8 && p_info[playerid][tMember] == 26)
		{
			foreach(i)
			{
				if(p_info[i][tMember] == 7 || p_info[i][tMember] == 26 || p_info[i][tMember] == 8 || p_info[i][tMember] == 9 || p_info[i][tRank] == 6 && p_info[i][tMember] == 26 || p_info[i][tRank] == 9 && p_info[i][tMember] == 26)
				{
					if(p_info[playerid][pSubLeader])
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: [%s]: (( %s ))", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, unit_name[Member][SubLeader], Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
					}
					else
					{
						format(stringer, 128, "[F] [%s] %s %s [%i]: (( %s ))", f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid],playerid, Text);
						SendClientMessage(i,0xEFFF87FF,stringer);
						if(!fix)
						{
							SendSpyMessage(p_info[playerid][tMember], 0xADFFEFFF, stringer);
							fix = true;
						}
					}
				}
			}
			return 1;

		}
	}
	return 1;
}

ALT:megaphone:m;
CMD:megaphone(playerid,params[])
{
	if(p_info[playerid][pMuteTime]>1) return SendErr(playerid, "У вас бан чата");
	else if(p_info[playerid][tMember] != 1 && p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 3 && p_info[playerid][tMember] != 25 && p_info[playerid][tMember] != 19 && p_info[playerid][tMember] != 21 && p_info[playerid][tMember] != 10) return SendErr(playerid, "Вам недоступна эта команда");
	else if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	else if(!Megaphone(GetPlayerVehicleID(playerid))) return SendErr(playerid, "Вы не в служебной машине");
	else if(isnull(params) || strlen(params) > 100) return SendInf(playerid, "Используйте: (/m)egaphone [текст]");

	format(stringer, 144, "{{ [%s] %s %s: %s }}", f_info[p_info[playerid][tMember]][f_name], GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid], params);
	SendStreamMessage(80.0, playerid, stringer,CYELLOW);
	return 1;
}

CMD:ticket(playerid,params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вы не полицейский");
	else if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	else if(sscanf(params,"dds[100]",params[0],params[1],params[2])) return	SendInf(playerid, "Используйте: /ticket [id] [цена] [причина]");
	else if(params[1] < 1 || params[1] > 10000) return SendErr(playerid, "Штраф не должен превышать 10.000$ и не должен быть меньше 1$");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");
	else if(p_info[params[0]][pCash] < params[1]) return SendErr(playerid, "У вас нет столько денег");
	else if(params[0] == playerid) return SendErr(playerid, "Вы указали свой ID");
	else if(GetPVarInt(params[0],"TicketOffer") - 1 == playerid) return SendClientMessage(playerid,-1,"Вы уже выписали данному игроку штраф");
	format(stringer, 144, "Вы выписали штраф в размере %d $ %s. Причина: %s",params[1], NamePlayer[params[0]], (params[2]));
	SCM(playerid, CBLUE, stringer);
	format(stringer, 144, "Офицер %s выписал вам штраф в размере %d $. Причина: %s", NamePlayer[playerid], params[1], (params[2]));
	SCM(params[0], CBLUE, stringer);
	SCM(params[0], CWHITE, "(( Используйте: /accept ticket, чтобы оплатить штраф ))");
	SetPVarInt(params[0],"TicketOffer", playerid+1);
	SetPVarInt(params[0],"TicketMoney", params[1]);
	return 1;
}

ALT:suspect:su;
CMD:suspect(playerid, params[])
{
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "/su [ID игрока]");
	else if(!IsACop(playerid)) return SendErr(playerid, "Недоступно");
	else if(p_info[playerid][tMember]==10) return SendErr(playerid,"Вашей организации это не доступно");
	else if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	else if(p_info[params[0]][pJailTime]) return SendErr(playerid, "Этот Человек в тюрьме");
	else if(p_info[params[0]][pWanted] >= 6) return SendErr(playerid, "У данного игрока уже 6 уровней розыска");
	else if(IsACop(params[0])) return SendErr(playerid, "Вы не можете давать розыск законникам");
	else if(GetPVarInt(playerid,"PlayerTied")) return SendErr(playerid, "Вы связаны");
	else if ( p_info [ playerid ] [ tRank ] < 3 ) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");

	stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
	for(new i=0; i<13; i++)
	{
		format(stringer,1000,"%s%s\n",stringer,suspect_player[i][suspect_name_folder]);
	}
	ShowPlayerDialog(playerid,dSu,DIALOG_STYLE_LIST,"Выберите раздел",stringer,"Выбрать","Закрыть");
	SetPVarInt(playerid,"su_player",params[0]);
	return 1;
}

CMD:todo(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	new Text_[60], Deistvie_[60];
	if(sscanf(params, "p<*>s[60]s[60]", Text_,Deistvie_)) return SendInf(playerid,"Используйте: /todo [текст]*[действие]");
	stringer[0] = EOS;
	format(stringer, 500, "\"{FFFFFF}%s{E75480}\", - сказал %s, %s",Text_,NamePlayer[playerid],Deistvie_);
	SendStreamMessage(15.0, playerid, stringer, 0xE75480FF);
	return 1;
}

CMD:action(playerid, params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	new ActText[144];
	if(sscanf(params, "s[144]", ActText)) return SendInf(playerid,"Используйте: /action [текст]");
	if(GetPVarInt(playerid,"PlayerUseAction")) return SendErr(playerid,"Вы уже устанавливали действие своего персонажа. (( {"#cBLUE"}/dellaction {"#cGRAY"}))");

	stringer[0] = EOS;
	format(stringer,500,"%s\n(( %s[%d] ))",ActText,NamePlayer[playerid],playerid);
	playerTextAction[playerid] = CreateDynamic3DTextLabel(stringer,0xE75480FF,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
	SetPVarInt(playerid,"playerUseAction",1);
	SendSucc(playerid,"Вы установили действие своего персонажа. (( {"#cBLUE"}/dellaction{"#cWHITE"} ))");
	return 1;
}

CMD:adellaction(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 4) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params, "is[60]", params[0],params[1])) return SendInf(playerid,"Используйте: /adellaction [playerid] [причина]");
	if(!GetPVarInt(params[0],"PlayerUseAction")) return SendErr(playerid,"Данный игрок не устанавливал какое-либо действие.");

	DeletePVar(params[0],"playerUseAction");
	if(T_IsValid3DTextLabel(playerTextAction[params[0]])) DestroyDynamic3DTextLabelEx(playerTextAction[params[0]]);

	SendSucc(playerid,"Вы удалили действие данного игрока!");

	format(stringer,128,"%s удалил ваше действие. Причина: %s",NamePlayer[playerid],params[1]);
	SendClientMessage(params[0],CBADINFO,stringer);
	return 1;
}



CMD:dellaction(playerid, params[])
{
	if(!GetPVarInt(playerid,"PlayerUseAction")) return SendErr(playerid,"Вы не устанавливали действие своего персонажа!");
	DeletePVar(playerid,"playerUseAction");
	if(T_IsValid3DTextLabel(playerTextAction[playerid])) DestroyDynamic3DTextLabelEx(playerTextAction[playerid]);
	DeletePVar(playerid,"playerTextAction");
	SendSucc(playerid,"Вы удалили действие своего персонажа!");
	return 1;
}



CMD:bugs(playerid)
{
	ShowPlayerDialog(playerid, d_report, DIALOG_STYLE_INPUT, "{F0C419} [ Баг-репорт ]", "{"#cWHITE"}Уважаемый игрок ! Если вы заметили на нашем сервере {4EBA6F}ошибку {"#cWHITE"}или {4EBA6F}баг\n{"#cWHITE"}Убедительная {4EBA6F}просьба подробно {"#cWHITE"}описать\nИ нажать кнопку \" {4EBA6F}Отправить {"#cWHITE"}\" ", "Отправить", "Отмена");
	return 1;
}



CMD:caraction(playerid, params[])
{
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	new length = strlen(params), a_do_string[5][35];
	if(playerText_ame_Action[playerid][1] != Text3D:-1)
	{
		SendClientMessage(playerid, CBADINFO, "Вы удалили своё действие на игрока");
		Delete3DTextLabel(playerText_ame_Action[playerid][1]);
		playerText_ame_Action[playerid][1]=Text3D:-1;
		return 1;
	}

	if( GetPlayerState ( playerid ) != 2 ) return SendClientMessage(playerid,COLOR_GREY,"Вы должны быть в машине");

	if(strlen(params) >= 150) return SendClientMessage(playerid, COLOR_GREY, "/caraction [действие (150 символов)]");
	if(isnull(params)) return SendClientMessage(playerid, COLOR_GREY, "/caraction [действие (150 символов)]");
	else if(IsIpFound(params)) return SendReklama(playerid,params);

	if(length > 0) 		strmid(a_do_string[0], params, 0, length);
	if(length > 30) 	strmid(a_do_string[1], params, 30, 60);
	if(length > 60) 	strmid(a_do_string[2], params, 60, 90);
	if(length > 90) 	strmid(a_do_string[3], params, 90, 120);
	if(length > 120) 	strmid(a_do_string[4], params, 120, 150);


	stringer[0] = EOS;
	if(length > 0) 		strcat(stringer, a_do_string[0]), 	strcat(stringer, "\n");
	if(length > 30) 	strcat(stringer, a_do_string[1]),	strcat(stringer, "\n");
	if(length > 60) 	strcat(stringer, a_do_string[2]),	strcat(stringer, "\n");
	if(length > 90) 	strcat(stringer, a_do_string[3]),	strcat(stringer, "\n");
	if(length > 120) 	strcat(stringer, a_do_string[4]);


	new Float:x, Float:y, Float:z;
	GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);

	playerText_ame_Action[playerid][1] = Create3DTextLabel(stringer,  0xE75480FF, x,y,z, 10.5, GetPlayerVirtualWorld(playerid));
	Attach3DTextLabelToVehicle(playerText_ame_Action[playerid][1], GetPlayerVehicleID(playerid), 0.0, 1.0, 4.0);

	SendClientMessage(playerid, CGREEN, "Вы успешно создали действие на игрока");
	SendClientMessage(playerid, CBLUE, "Введите /caraction еще раз чтобы удалить");
	//sss

	return 1;
}

CMD:ado(playerid, params[])
{
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	new length = strlen(params), a_do_string[5][35];

	if(playerText_ame_Action[playerid][0] != Text3D:-1)
	{
		SendClientMessage(playerid, CBADINFO, "Вы удалили своё действие на игрока");
		Delete3DTextLabel(playerText_ame_Action[playerid][0]);
		playerText_ame_Action[playerid][0]=Text3D:-1;
		return 1;
	}

	if(strlen(params) >= 150) return SendClientMessage(playerid, COLOR_GREY, "/ado [действие (150 символов)]");
	if(isnull(params)) return SendClientMessage(playerid, COLOR_GREY, "/ado [действие (150 символов)]");
	else if(IsIpFound(params)) return SendReklama(playerid,params);

	if(length > 0) 		strmid(a_do_string[0], params, 0, length);
	if(length > 30) 	strmid(a_do_string[1], params, 30, 60);
	if(length > 60) 	strmid(a_do_string[2], params, 60, 90);
	if(length > 90) 	strmid(a_do_string[3], params, 90, 120);
	if(length > 120) 	strmid(a_do_string[4], params, 120, 150);


	stringer[0] = EOS;
	if(length > 0) 		strcat(stringer, a_do_string[0]), 	strcat(stringer, "\n");
	if(length > 30) 	strcat(stringer, a_do_string[1]),	strcat(stringer, "\n");
	if(length > 60) 	strcat(stringer, a_do_string[2]),	strcat(stringer, "\n");
	if(length > 90) 	strcat(stringer, a_do_string[3]),	strcat(stringer, "\n");
	if(length > 120) 	strcat(stringer, a_do_string[4]);


	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);

	playerText_ame_Action[playerid][0] = Create3DTextLabel(stringer,0xE75480FF, x, y, z, 10.5, GetPlayerVirtualWorld(playerid));
	Attach3DTextLabelToPlayer(playerText_ame_Action[playerid][0], playerid, 0.0, 0.0, 1.0);

	SendClientMessage(playerid, CGREEN, "Вы успешно создали действие на игрока");
	SendClientMessage(playerid, CBLUE, "Введите /ado еще раз чтобы удалить");
	//sss


	return 1;
}

CMD:belt(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) return SendClientMessage(playerid,COLOR_GREY,"Вы должны находиться в автомобиле.");
	if(!GetPVarInt(playerid,"_belt"))
	{
		SetPVarInt(playerid,"_belt",true);
		MeAction(playerid,"пристегнул(а) ремень безопасности");
	}
	else
	{
		DeletePVar(playerid, "_belt");
		MeAction(playerid,"отстегнул(а) ремень безопасности");
	}
	return 1;
}

alias:me("/я");
CMD:me(playerid, params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	if(isnull(params) || strlen(params) > 200) return 	SCM(playerid, CWHITE, " Используйте: /me [действие]");
	if(IsIpFound(params))
	{
		SendReklama(playerid,params);
		return 1;
	}
	if(strlen(params) >= 80)
	{
		new str_1[144], str_2[200];
		strmid(str_1,params,0,80,144);
		strmid(str_2,params,80,strlen(params),200);

		format(stringer,144,"%s %s ...",NamePlayer[playerid], str_1);
		SendStreamMessage(13.0, playerid, stringer, 0xE75480FF);

		format(stringer,144,"... %s",str_2);
		SendStreamMessage(13.0, playerid, stringer, 0xE75480FF);

	}
	else
	{
		format(stringer,144,"%s %s",NamePlayer[playerid], params);
		SendStreamMessage(13.0, playerid, stringer, 0xE75480FF);
	}
	return 1;
}
CMD:ame(playerid, params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	if(isnull(params) || strlen(params) > 200) return 	SCM(playerid, CWHITE, " Используйте: /ame [действие]");
	if(IsIpFound(params))
	{
		SendReklama(playerid,params);
		return 1;
	}
	if(strlen(params) >= 80)
	{
		new str_1[144], str_2[200];
		strmid(str_1,params,0,80,144);
		strmid(str_2,params,80,strlen(params),200);
		stringer[0]=EOS;
		format(stringer,288,"%s ...\n... %s",str_1,str_2);
		SetPlayerChatBubble ( playerid, stringer, 0xE75480FF, 13.0 , 10000 ) ;
	}
	else
	{
		format(stringer,144,"%s %s",NamePlayer[playerid], params);
		SetPlayerChatBubble ( playerid, stringer, 0xE75480FF, 13.0 , 7000 ) ;
	}
	return 1;
}


CMD:do(playerid, params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	if(isnull(params) || strlen(params) > 100) return 	SCM(playerid, CWHITE, " Используйте: /do [действие]");
	if(IsIpFound(params))
	{
		SendReklama(playerid,params);
		return 1;
	}
	DoAction(playerid,params);
	SetPlayerChatBubble(playerid,params,0xE75480FF,30.0,10000);
	return 1;
}

ALT:shout:s;
CMD:shout(playerid,params[])
{
	if(gKilledWithAntiDeath[playerid]==2) return SCM(playerid,COLOR_GREY,"- Вы не можете использовать это");
	if(GetPVarInt(playerid,"FloodByPlayer") > unix && p_info[playerid][pExp] < 1) return SCM(playerid,COLOR_GREY,"Пожалуйста подождите...");
	else if(GetPVarInt(playerid,"gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	else if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid,"У вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SCM(playerid, CWHITE, " Используйте: (/s)hout [текст]");
	else if(IsIpFound(params[0])) return SendReklama(playerid,params);
	format(stringer, 144, "[S] %s[%d] кричит: %s", NamePlayer[playerid],playerid,params);
	SendStreamMessage(60.0, playerid, stringer,0x98FB98FF);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid,"PlayerCuffed")) FIXES_ApplyAnimation(playerid,"ON_LOOKERS","shout_in",9000.999,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,params,CYELLOW,60.0,10000);
	SetPVarInt(playerid,"FloodByPlayer", unix+5);
	return 1;
}



CMD:inter(playerid,params[])
{
	if(sscanf(params, "i",params[0])) return SCM(playerid, CWHITE, "/inter [#]");
	SetPlayerInterior(playerid, params[0]);
	return 1;
}

CMD:ceject(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /ceject [id игрока]");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");
	else if(p_info[playerid][tMember] != 1 && p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 3 && p_info[playerid][tMember] != 25 && p_info[playerid][tMember] != 19 && p_info[playerid][tMember] != 21 && p_info[playerid][tMember] != 10) return SendClientMessage(playerid,COLOR_GREY,"Вам недоступна эта команда");
	else if(!start_work[playerid]) return SCM(playerid,COLOR_GREY,"Вам необходимо начать рабочий день на базе организаций");

	format(stringer, 128, "Вы вытолкнули %s из машины", NamePlayer[params[0]]);
	SendClientMessage(playerid,CLIGHTYELLOW,stringer);

	AC_TogglePlayerControllable(params[0], true);
	AC_RemovePlayerFromVehicle(params[0]);

	return 1;
}

CMD:elections(playerid)
{
	if(p_info[playerid][pAdmin] < 11) return 1;
	ShowPlayerDialog(playerid, 9217, DIALOG_STYLE_LIST, "{ECCC15}Управление выборами", "1. Список кандидатов\n2. Добавить кандидата\n3. Снять кандитата\n4. Окончить выборы", "Выбрать", "Закрыть");
	return 1;
}

CMD:wbook(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /wbook [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, 0x999999AA, "Такого игрока нет.");
	if(!IsPlayerStream(8.0, playerid, params[0])) return SendClientMessage(playerid, 0x999999AA, "Игрок слишком далеко.");

	if(GetPVarInt(playerid,"wbook_proposal")) DeletePVar(playerid,"wbook_proposal");
	if(playerid == params[0])
	{
		MeAction(playerid,"просматривает свою трудовую книгу");
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 300, "SELECT * FROM `employment_history` WHERE `name_player` = '%s' AND `data_un_invite` != 'No-ne'",NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "callback_employment_history", "is", playerid, NamePlayer[playerid]);
		return 1;
	}

	format(stringer, 128, "Вы предложили %s посмотреть Вашу трудовую книгу", NamePlayer[params[0]]);
	SendClientMessage(playerid, 0x3399ffAA, stringer);

	format(stringer, 128, "%s хочет показать Вам свою трудовую книгу", NamePlayer[playerid]);
	SendClientMessage(params[0], 0x3399ffAA, stringer);
	SendClientMessage(params[0], 0xffffffAA, "Нажмите {00cc00}Y{"#cWHITE"} для просмотра или {ff6600}N{"#cWHITE"} для отказа");

	playerid_wbook = playerid;
	id_player_wbook = params[0];

	SetPVarInt(params[0],"wbook_proposal", true);
	return 1;
}


forward callback_employment_history(const id_player, const name_wbook[]);
public callback_employment_history(const id_player, const name_wbook[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
		strcat(stringer,"В трудовой книге отсутсвуют записи. Первая запись появится после ухода из организации: \n\n");
		strcat(stringer,"1. Если у вас был 3 ранг и выше\n");
		strcat(stringer,"2. Вы были уволены из организации.\n");
		ShowPlayerDialog(id_player,0,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Трудовая книга",stringer,"Ок","");

		return 1;
	}//

	stringer = "Дата принятия\tУвольнение\t\tРанг\t\tОрганизация\t\tДолжность\n\n{"#cWHITE"}";
	for(new row = 0; row < rows; ++row)
	{
		if(strlen(stringer) > 2000) break;
		new str_data[32],rang;


		cache_get_value(row, "data_invite", str_data,32);
		format(stringer,2400,"%s\t%s",stringer,str_data);
		cache_get_value(row, "data_un_invite", str_data,32);
		format(stringer,2400,"%s\t%s",stringer,str_data);
		cache_get_value_int(row,"rang",rang);
		format(stringer,2400,"%s\t%i",stringer,rang);
		cache_get_value(row, "organization", str_data, 32);
		format(stringer,2400,"%s\t\t%s",stringer,str_data);
		cache_get_value(row, "organization_position", str_data, 32);
		format(stringer,2400,"%s\t\t%s",stringer,str_data);
		strcat(stringer,"\n");
	}//

	ShowPlayerDialog(id_player,0,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Трудовая книга",stringer,"Ок","");

	return 1;
}

ALT:live:l;
CMD:live(playerid,params[])
{
	new newcar = GetPlayerVehicleID(playerid);
	if(p_info[playerid][tMember] != 16) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(GetPVarInt(playerid,"gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(p_info[playerid][pMuteTime] > 0) { SCM(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return 1; }
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,COLOR_GREY,"Вы не в машине.");
	if(gVehicles[newcar-1][vFraction] == 16 || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SCM(playerid, CWHITE, "Вы не в репортёрской машине / вертолёте / офисе!"); return 1;}
	if(GetPVarInt(playerid,"TalkingLivels"))
	{
		SCM(playerid, 0x6ab1ffaa, "Прямой эфир завершён");
		SCM(GetPVarInt(playerid,"TalkingLivels"), 0x6ab1ffaa, "Прямой эфир завершён");
		AC_TogglePlayerControllable(playerid, true);
		AC_TogglePlayerControllable(GetPVarInt(playerid,"TalkingLivels"), true);
		DeletePVar(GetPVarInt(playerid,"TalkingLivels"),"TalkingLivels");
		DeletePVar(playerid,"TalkingLivels");
		return 1;
	}
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /live [id]");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Вы не можете брать интервью у себя!");
	if(!IsPlayerStream(5.0, playerid, params[0])) return SCM(playerid, CWHITE, "Человек далеко от вас!");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	format(stringer, 200,"Вы предложили %s снять интервью", NamePlayer[params[0]]);
	SCM(playerid,0x6ab1ffaa,stringer);
	format(stringer, 200,"%s предлагает вам снять интервью", NamePlayer[playerid]);
	SCM(params[0],0x6ab1ffaa,stringer);
	SCM(params[0], CWHITE, "Используйте /accept livels, чтобы согласиться");
	SetPVarInt(params[0],"LiveOfferls", playerid + 1);
	return 1;
}

CMD:npanel(playerid)
{
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	new Float:Z;
	GetPlayerPos(playerid,Z,Z,Z);
	if(model != 582 && model != 488 && Z<60) return SendErr(playerid,"Вы не в служебном офисе");
	if(p_info[playerid][tMember] != 16) return SendErr(playerid,"Вы не работаете в LSNews");
	ShowPlayerDialog(playerid,2224, DIALOG_STYLE_LIST, "{"#cWHITE"}Новостное меню", ""ORG"1.{"#cWHITE"} Войти / Выйти в прямой эфир\n"ORG"2.{"#cWHITE"} Начать принимать звонки / смс\n"ORG"3.{"#cWHITE"} Завершить принимать звонки / смс\n"ORG"4.{"#cWHITE"} Установить цену за звонки и смс\n"ORG"5.{"#cWHITE"} Установить цену за объявления", "Далее", "Отмена");
	return 1;
}



CMD:v(playerid,params[])
{
	if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return SendErr(playerid,"Вы не в машине");
	new vehicleid=GetPlayerVehicleID(playerid);
	if(isnull(params)) return SendInf(playerid,"/v [действие]");
	if(!strcmp(params,"protect")) {
		if(gVehicles[vehicleid-1][vFraction]==0)return SendErr(playerid,"Можно только на фракционный автомобиль");
		if(vProtect[vehicleid]==0.0){
			switch(GetVehicleModel(vehicleid))
			{
				case 425:vProtect[vehicleid]=3500.0;
				default:vProtect[vehicleid]=4000.0;
			}
			if(gVehicles[vehicleid-1][vFraction]==26)
			{
				vProtect[vehicleid]=float(4000+random(3000));
			}
			else if(gVehicles[vehicleid-1][vFraction]==25 || gVehicles[vehicleid-1][vFraction]==1)
			{
				vProtect[vehicleid]=float(9000+random(4000));
			}
			if(gVehicles[vehicleid-1][vFraction]==2)
			{
				vProtect[vehicleid]=1000.0;
			}
			format(stringer,144,"Защита на ваш автомобиль установлена {"#cORANGE"}( +%.1f )",vProtect[vehicleid]);
			SCM(playerid,0x9ACD32AA,stringer);
			SCM(playerid,0x9ACD32AA,"Чтобы отключить защиту введите еще раз: {"#cBLUE"}/v protect");
		}
		else
		{
			SendClientMessage(playerid,0x9ACD32AA,"Защита {"#cRED"}отключена.");
			vProtect[vehicleid]=0.0;
		}
	}
	return true;
}

CMD:selldrugs(playerid,params[])
{
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return SendInf(playerid, "/selldrugs [playerid] [число] [цена]");
	if(params[1] < 1 || params[1] > 150) return SCM(playerid, CWHITE, "Вес не может быть меньше 1 и больше 150!");
	if(params[2] < 1 || params[2] > 5000) return SCM(playerid, CWHITE, "Цена не может быть меньше 1 и больше $5000!");
	if(params[1] > p_info[playerid][pDrugs]) return SCM(playerid, CWHITE, "У вас нет столько наркотиков!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Этот Человек далеко от вас!");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Вы не можете продать себе наркотики!");
	format(stringer, 144, "Вы предложили %s купить %d грамм наркоты за %d $",NamePlayer[params[0]], params[1], params[2]);
	SCM(playerid,CINFO,stringer);
	format(stringer, 144,"Бандит %s предлагает вам купить %d грам наркоты за %d $. (( Используйте /accept drugs для покупки ))", NamePlayer[playerid], params[1], params[2]);
	SCM(params[0],CINFO,stringer);
	SCM(params[0],CINFO,"Чтобы подтвердить нажмите {33AA33}Y{"#cINFO"}, иначе {"#cRED"}N");

	DrugOffer[params[0]]=playerid;
	DrugPrice[playerid]=params[2];
	DrugGram[playerid]=params[1];

	return 1;
}

CMD:fuelcars(playerid)
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		gVehicles[i - 1][vFuel] = 50.0;
		foreach(h)
		{
			if(i == caridhouse[h][0]) p_info [ h ] [ p_car_fuel ][ 0 ] = 50.0;
			if(i == caridhouse[h][1]) p_info [ h ] [ p_car_fuel ][ 1 ] = 50.0;
		}
	}
	format(stringer,128,"[A] %s заправил весь транспорт.",NamePlayer[playerid]);
	AdmMes(CADMIN_INFO, stringer, 1);
	return 1;
}

CMD:gangattempt(playerid)
{
	new attemptslot = -1;
	switch(p_info[playerid][tMember])
	{
		case 13: attemptslot = 0;
		case 12: attemptslot = 1;
		case 15: attemptslot = 2;
		case 18: attemptslot = 3;
		case 17: attemptslot = 4;
	}
	if(attemptslot != -1)
	{
		if(!CaptureAttempt[attemptslot])
		{
			SendClientMessage(playerid,COLOR_GREY,"Вы исчерпали максимальное к-во попыток");
			return 1;
		}
		format(stringer,128,"Осталось %i попыток",MAX_ATTEMPT_GANG-CaptureAttempt[attemptslot]);
		SendClientMessage(playerid,COLOR_GREY,stringer);
	}
	return 1;
}
/*CMD:showbiz(playerid,params[])
{
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/showbiz [id]");
	TextDrawShowForPlayer(playerid,Bizwar2[params[0]]);
	return 1;
}

CMD:hidebiz(playerid,params[])
{
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/hidebiz [id]");
	TextDrawHideForPlayer(playerid,Bizwar2[params[0]]);
	return 1;
}*/




CMD:capture(playerid, params[])
{
	if(sscanf(params,"i",params[0])) return SendInf(playerid,"/capture [тип захвата (1 - по киллам | 2 - по мясу)]");
	if(params[0] != 1 && params[0] != 2) return SendInf(playerid,"/capture [тип захвата (1 - по киллам | 2 - по мясу)] {ff0000}Укажите тип!");
	if(zahvat == true) return SendErr(playerid, "В данный момент идёт захват территории");
	if(!IsAGang(playerid)) return SendErr(playerid, "Вам не доступна эта функция");
	if(p_info[playerid][tRank] < 7) return SendErr(playerid, "Доступно с 7 ранга");

	//new capture_time_zahvat;
	//gettime(capture_time_zahvat);
	if(tmphour < 11 || tmphour > 22) return SendErr(playerid, "Использовать команду можно только с 11:00 до 23:00");
	if(CaptureTime > unix)
	{
		new year, month, day, hour, minute, second;
		timestamp_to_date(CaptureTime - unix, year, month, day, hour, minute, second);
		format(stringer,144,"Таймер до следующего захвата {AFAFAF}[%02d:%02d]", minute, second);
		SendErr(playerid, stringer);
		return 1;
	}
	new gang1 = -1;

	switch(p_info[playerid][tMember])
	{
		case 12: gang1 = MOROZ_BALLAS;
		case 13: gang1 = MOROZ_VAGOS;
		case 15: gang1 = MOROZ_GROVE;
		case 17: gang1 = MOROZ_AZTECAS;
		case 18: gang1 = MOROZ_RIFA;
	}
	if(gang1 != -1)
	{
		if(fracmoroz[gang1] > unix)
		{
			SendErr(playerid,"Ваша банда заморожена");
			return 1;
		}
	}
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] != -1)
	{
		new i = IDGZ[playerid];
		if(p_info[playerid][tMember] == GZInfo[i][gFrakVlad]) return SendErr(playerid,"Вы не можете захватить собственную территорию");
		if(SELECT_SERVER != 2)
			if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SendErr(playerid, "Банда на которую вы собираетесь напасть нет в сети / Меньше трёх человек");

		new gang = -1;

		switch(GZInfo[i][gFrakVlad])
		{
			case 12: gang = MOROZ_BALLAS;
			case 13: gang = MOROZ_VAGOS;
			case 15: gang = MOROZ_GROVE;
			case 17: gang = MOROZ_AZTECAS;
			case 18: gang = MOROZ_RIFA;
		}

		if(gang != -1)
		{
			if(fracmoroz[gang] > unix)
			{
				SendErr(playerid,"Банду которую вы хотите захватить невозможно");
				SendErr(playerid,"Она заморожена администратором, ожидайте сообщения в чате когда заморозка будет снята");
				return 1;
			}
		}
		new attemptslot= -1;
		switch(p_info[playerid][tMember])
		{
			case 13: attemptslot = 0;
			case 12: attemptslot = 1;
			case 15: attemptslot = 2;
			case 18: attemptslot = 3;
			case 17: attemptslot = 4;
		}
		if(attemptslot != -1)
		{
			if(CaptureAttempt[attemptslot] >= MAX_ATTEMPT_GANG)
			{
				format(stringer, 128, "Ваша банда уже воевала более %i раз", MAX_ATTEMPT_GANG);
				SendErr(playerid, stringer);
				return 1;
			}
		}
		stringer[0] = EOS;
		format(stringer, 220, "{FFFFFF}Данная территория принадлежит банде {"#cORANGE"}%s\n{93C722}Вы согласны начать её захват?",f_info[GZInfo[i][gFrakVlad]][f_name]);
		ShowPlayerDialog(playerid, 16, DIALOG_STYLE_MSGBOX,"{ffff00}Захват территории", stringer, "Выбрать", "Отмена");
		SetPVarInt ( playerid, "TypeBattle", params[0]);
		SetPVarInt ( playerid, "capture_gz_id", i ) ;
		return 1;
	}
	else SendErr(playerid, "Необходимо находится на территории которую хотите завоевать");
	return 1;
}


CMD:trailer(playerid)
{
	new vehicle = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != 2) return SCM(playerid,COLOR_GREY,"Вы должны быть в машине");
	else if(GetPVarInt(playerid,"attach")) return SendClientMessage(playerid,COLOR_GREY,"Вы уже прицепили автомобиль");
	else if(p_info[playerid][pJob] != 2) return SendClientMessage(playerid,COLOR_GREY,"Вы не механик");
	else if(gVehicles[vehicle - 1][vJob] != 2) return SendErr(playerid,"Вы должны быть в рабочей машине.");
	new Float:vX,Float:vY,Float:vZ;
	for(new vid = 1, j = GetVehiclePoolSize(); vid <= j; vid++)
	{
		GetVehiclePos(vid,vX,vY,vZ);
		if ((floatabs(p_info[playerid][pX]-vX)<7.0)&&(floatabs(p_info[playerid][pY]-vY)<7.0)&&(floatabs(p_info[playerid][pZ]-vZ)<7.0)&&(vid!=vehicle))
		{
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			else AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));

			SetPVarInt(playerid,"attach", true);
			break;
		}
	}
	//if(!Found) SCM(playerid,0xFFFF00AA,"Рядом нет автомобиля");
	return 1;
}

CMD:untrailer(playerid)
{
	if(!GetPVarInt(playerid,"attach")) return SendClientMessage(playerid,COLOR_GREY,"Вы не прицепили автомобиль");
	else if(p_info[playerid][pJob] != 2) return SendClientMessage(playerid,COLOR_GREY,"Вы не механик");
	else if(GetPlayerState(playerid) != 2) return SCM(playerid,COLOR_GREY,"Вы должны быть в машине");
	else if(gVehicles[GetPlayerVehicleID(playerid) - 1][vJob] != 2) return SendErr(playerid,"Вы должны быть в рабочей машине.");

	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
	SCM(playerid, 0x6ab1ffaa, "Вы отцепили автомобиль");

	DeletePVar(playerid,"attach");
	return 1;
}

CMD:hhelp(playerid)
{
	if(SELECT_SERVER == 2) return 1;
	switch(p_info[playerid][tHelper])
	{
		case 0: return 1;
		case 1..3:
		{
			SCM(playerid,0x6495EDFF,"/ans - ответить на вопрос игроку");
			SCM(playerid,0x6495EDFF,"/hc - Чат хелперов");
		}
		case 4..8:
		{
			SCM(playerid,0x6495EDFF,"/mute - поставить затычку игроку");
			SCM(playerid,0x6495EDFF,"/ans - ответить на вопрос игроку");
			SCM(playerid,0x6495EDFF,"/hc - Чат хелперов");
		}
	}
	return 1;
}

CMD:skin(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 2  && !GetPVarInt(playerid,"DJ")) return 1;
	else if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /skin [id скина]");
	else if(params[0] > 310 || params[0] < 1 || params[0] == 74) return SendErr(playerid, "Неправильный ID скина");
	p_info[playerid][pModel] = params[0];
	UpdatePlayerData(playerid,"pModel",p_info[playerid][pModel]);
	p_info[playerid][pChar] = params[0];
	UpdatePlayerData(playerid,"pChar",p_info[playerid][pChar]);
	SetPlayerSkin(playerid, p_info[playerid][pChar]);
	PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
	return 1;
}

CMD:givehelper(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(SELECT_SERVER == 2) return 1;
	//else if(!IsAFullDostup(playerid)) return 1;
	else if(!IsAGaHelper(playerid) && !IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	else if(sscanf(params, "ii", params[0], params[1])) return SendInf(playerid, "Используйте /givehelper [playerid] [level]");
	else if(params[1] < 0 || params[1] > 8) return SendInf(playerid, "Не меньше '0' и не больше '8'");

	p_info[params[0]][tHelper] = params[1];
	UpdatePlayerData(params[0],"tHelper",p_info[params[0]][tHelper]);

	new yst[144];

	format(yst, 144, "Вы были назначены хелпером %i уровня. Назначил: %s", params[1], NamePlayer[playerid]);
	SendInf(params[0], yst);
	SendInf(params[0], "Чтобы посмотреть команды, Используйте /hhelp");

	format(yst, 144, "Вы назначили %s %i уровня хелпера", NamePlayer[params[0]], params[1]);
	SendSucc(playerid, yst);
	return 1;
}


/*CMD:delgraff(playerid)
{
	for(new gf=0; gf<23; gf++)
	{
		if(PlayerToPoint(4.0,playerid,gPosGraff[gf][0],gPosGraff[gf][1],gPosGraff[gf][2]))
		{
			if(!graff_status[gf]) return 1;
			graff_cp[gf]=CreateDynamicCP(gPosGraff[gf][0],gPosGraff[gf][1],gPosGraff[gf][2], 1.0, 0, 0, -1, 100.0);
			DestroyDynamicObject(graff_obj[gf]);
			DestroyDynamic3DTextLabel(graff_text[gf]);
			graff_status[gf]=false;
			break;
		}
	}
	return 1;
}*/



CMD:dedmoroz(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;

	if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
	{
		for(new i = 0; i < 6; i++)
		{
			RemovePlayerAttachedObject(playerid,i);
		}
		return 1;
	}
	SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
	SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
	SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
	SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
	SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
	SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
	SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
	SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
	SetPlayerSkin(playerid, 189);
	return 1;
}

CMD:admin(playerid)
{
	if ( p_info[playerid][pAdmin] == 0 ) return true;
	if(counthead[playerid] == -1)
	{
		TextHead[playerid] = Create3DTextLabel(" ",0xFFFFFFAA,0.000,0.000,-4.000,18.0,0,1);
		Attach3DTextLabelToPlayer(TextHead[playerid],playerid,0.0,0.0,0.47);
		counthead[playerid] = SetTimerEx("AdminColore", 300, 1, "i", playerid);
		SetPlayerColor(playerid,colorseee[colorheads[playerid]][colorname]);
		SendClientMessage(playerid, -1, "{bef574}Команда сработала, ваш ник мигает, что-бы выключить наберите еще раз: /admin");
	}
	else
	{
		SendClientMessage(playerid, -1, "{bef574}Команда сработала, ваш ник уже не мигает !!!");
		KillTimer(counthead[playerid]);
		counthead[playerid] = -1;
		if(TextHead[playerid] != Text3D:-1)
		{
			Delete3DTextLabel(TextHead[playerid]);
			TextHead[playerid]=Text3D:-1;
		}
	}
	return 1;
}

CMD:a(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if (isnull(params)) return SendInf(playerid, "/a [текст]");
	format(stringer, 214, "[A] %s[%d]: %s", NamePlayer[playerid], playerid, params);
	AdmMes(0x01B0B6AA, stringer, 1);
	return 1;
}

////////////////////////////
CMD:admins(playerid, params[])
{
	new ttext[46], stringer1[256];
	stringer[0] = EOS;
	foreach(i)
	{
		if (p_info[i][pAdmin] <= 0) continue;
		//if(!strcmp(NamePlayer[i],"Allison_Bennet")) continue;
		if(!strcmp(NamePlayer[i],"Don_Corleone"))
		{
			ttext = "{FF0000}(Следящий за администрацией){ffffff}";
		}
		else
		{
			switch (p_info[i][pAdmin])
			{
				case 1: ttext = "{33AA33}(Практикант){ffffff}";
				case 2: ttext = "{33AA33}(Ст.Практикант){ffffff}";
				case 3: ttext = "{33AA33}(Мл.Модератор){ffffff}";
				case 4: ttext = "{33AA33}(Модератор){ffffff}";
				case 5: ttext = "{33AA33}(Ст.Модератор){ffffff}";
				case 6: ttext = "{33CCFF}(Гл.Модератор){ffffff}";
				case 7: ttext = "{33CCFF}(Мл.Администратор){ffffff}";
				case 8: ttext = "{"#cBLUE"}(Администратор){ffffff}";
				case 9: ttext = "{"#cBLUE"}(Ст.Администратор){ffffff}";
				case 10: ttext = "{D900D3}(Зам. Гл.Администратора){ffffff}";
				case 11: ttext = "{EAC700}(Главный Администратор){ffffff}";
				case 12: ttext = "{FF0000}(Основатель){ffffff}";
			}
		}
		if(IsMegaAdmin(i))	ttext = "{FF0000}(Скриптер){ffffff}";
		strcat(stringer, ttext);
		strcat(stringer, " ");
		strcat(stringer, NamePlayer[i]);
		format(stringer1, 256," [lvl: %d] [ID: {9ACD32}%d] {afafaf}(Выговоров: %d) %s\n",p_info[i][pAdmin], i, gAdmin[i][6], (unix - p_info[i][pAFK] > 3) ? ("{ffff00}[AFK]{FFFFFF}") : (""));
		strcat(stringer, stringer1);
	}
	if(stringer[0] == EOS) return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Администрация в сети:", "{FFFFFF}Нет администрации в сети", "Закрыть", "");
	ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Администрация в сети:", stringer, "Закрыть", "");
	return 1;
}

CMD:spawncars(playerid)
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid, "Вы не можете использовать эту команду");
	stringer[0] = EOS;
	for(new i=0; i<=26; i++)
	{
		format(stringer,1500,"%s{%06x}%s\n",stringer,fraction_color[i] >>> 8, f_info[i][f_name]);
	}
	ShowPlayerDialog(playerid,dSpawnCars,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите фракцию",stringer,"Выбрать","Закрыть");
	return 1;
}


CMD:leaders(playerid)
{
	new countleader = 0, count_zamestitel = 0;
	stringer[0] = EOS;
	foreach(i)
	{
		if(p_info[ i ] [ tMember ] == 0 || p_info[ i ] [ tMember ] == 23) continue;
		if( p_info[ i ] [tRank] == FractionRank[p_info[ i ] [ tMember ] - 1])
		{
			format(stringer, 5000, "%s{F0F0F0}%s [%d] - [т. %d] - {%06x}%s {afafaf}(Выговоров: %d) %s\n", stringer, NamePlayer[i], i,p_info[i][pPnumber], fraction_color[p_info [ i ] [ tMember ]] >>> 8, f_info[p_info[i][tMember]][f_name],p_info[i][pAvig],unix - p_info[i][pAFK]>=3?("{ffa800}[AFK]"):(""));
			countleader++;
		}
		else if( p_info[ i ] [tRank] == FractionRank[p_info[ i ] [ tMember ] - 1] - 1)
		{
			format(stringer, 5000, "%s{F0F0F0}%s [%d] - [т. %d] - {%06x}%s {afafaf}(Выговоров: %d) {FF3B3B}[Заместитель] %s\n", stringer, NamePlayer[i], i,p_info[i][pPnumber],fraction_color[p_info [ i ] [ tMember ]] >>> 8, f_info[p_info[i][tMember]][f_name],p_info[i][pAvig],unix - p_info[i][pAFK]>=3?("{ffa800}[AFK]"):(""));
			count_zamestitel++;
		}
	}
	if(countleader > 0 || count_zamestitel > 0)
	{
		format(stringer, 5000, "%s\n{F0F0F0}В сети всего %i лидеров, %i заместителей", stringer,countleader,count_zamestitel);
		ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{21FC8D}Информация о лидерах и заместителей фракции",stringer, "Хорошо", "");
	}
	else ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{21FC8D}Информация о лидерах и заместителей фракции","{F0F0F0}Нет ни кого из лидеров в сети.", "Хорошо", "");
	return 1;
}
//
CMD:helpers(playerid)
{
	if(SELECT_SERVER == 2) return 1;
	new ttext[32];
	stringer[0] = EOS;
	foreach(i)
	{
		ttext[0] = 0;
		if(p_info[i][tHelper] <= 0) continue;
		switch(p_info[i][tHelper])
		{
			case 1..7: ttext = "{FFD700}(Агент Поддержки)";
			case 8: ttext = "{FF0000}(Главный хелпер)";
			default: ttext = "{FFD700}(Агент Поддержки)";
		}
		format(stringer,1500,"%s%s %s [lvl: %d] [ID: %d] [Выговоров: %d] %s\n", stringer, ttext,NamePlayer[i],p_info[i][tHelper],i,p_info[i][pAvig], (unix - p_info[i][pAFK] > 3) ? ("{ffff00}[AFK]{FFFFFF}") : (""));
	}
	if(strlen(stringer) < 1) strcat(stringer, "В данный момент нет хелперов в сети");
	ShowPlayerDialog(playerid, 666, DIALOG_STYLE_MSGBOX, "{ffffff}Хелперы в сети", stringer, "Ок", "");
	return 1;
}

CMD:mmenu(playerid)
{
	if(p_info[playerid][tMember] != 6 && p_info[playerid][tMember] != 14 && p_info[playerid][tMember] != 5) return 1;
	ShowPlayerDialog(playerid,9596,DIALOG_STYLE_LIST,"Mafia Menu","[1] Проверить банк мафии\n[2] Пополнить банк мафии \n[3] Снять деньги с банка мафии\n[4] Проверить склад мафии\n[5] Захваченные бизнесы", "»", "X");
	return 1;
}

ALT:usedrugs:drugs;
CMD:usedrugs(playerid,params[])
{
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(p_info[playerid][pDrugs] <= 0) return SendErr(playerid, "У вас нет наркотиков");
	if(DrugEffect[playerid] >= 1) return  SendErr(playerid, "Вы употребляете наркотик слишком часто");
	p_info[playerid][pDrugs] -= 1;
	UpdatePlayerData(playerid,"pDrugs",p_info[playerid][pDrugs]);
	FIXES_ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.0,0,1,1,1,1);
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	DrugEffect[playerid] = 60;
	p_info[playerid][Disease][2] += random(30);
	UpdatePlayerData(playerid, "Disease2", p_info[playerid][Disease][2]);
	MeAction(playerid, "{E75480}употребил(а) {FF9915}1 г {E75480}наркотиков");
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	return 1;
}

CMD:sellgun(playerid,params[])
{
	new id_player, id_gun, id_patron, count_price;
	if(sscanf(params,"iiii",id_player, id_gun, id_patron, count_price))
	{
		SCM(playerid, -1, "Используйте: /sellgun [id] [ID оружие] [патроны] [цена]");
		SCM(playerid, -1, "Чтобы узнать ID оружия посмотрите /gunlist");
		SCM(playerid, -1, "Цена должна быть не меньше 5 $!");
		return 1;
	}
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] != -1)
	{
		new i = IDGZ[playerid];
		if(p_info[playerid][tMember] != GZInfo[i][gFrakVlad]) return SCM(playerid, COLOR_GREY, "Вы не на своей территории");
		else if(!IsAGang(playerid)) return SCM(playerid, COLOR_GREY, "Вы не в банде");
		else if(id_player == INVALID_PLAYER_ID || !IsPlayerConnected(id_player)) return SCM(playerid, COLOR_GREY, "Не правильный id");
		else if(!IsPlayerStream(8.0, playerid, id_player)) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!");
		else if(id_gun != 24 && id_gun != 25 && id_gun != 29 && id_gun != 23 && id_gun != 30 && id_gun != 31 && id_gun != 33) return SCM(playerid, COLOR_GREY, "Неверный ид оружия"), SCM(playerid, COLOR_GREY, "Чтобы узнать ID оружия посмотрите /gunlist");
		else if(id_patron > 100||id_patron < 0) return SCM(playerid, COLOR_GREY, "От 1 до 100 патронов");
		else if(p_info[playerid][pPatron]<id_patron) return SCM(playerid, COLOR_GREY, "У вас нет столько патронов.");
		else if(count_price < 4 || count_price > 100000) return SCM(playerid, COLOR_GREY, "Не меньше 4 либо 100,000 $");
		else if(p_info[playerid][pMats] < (2*id_patron)) return SCM(playerid, COLOR_GREY, "У вас не достаточно металла");
		sellgun4 = playerid;
		sellgun = id_player;
		sellgun1 = id_gun;
		sellgun2 = id_patron;
		sellgun3 = count_price;
		format(stringer,200,"{"#cWHITE"}Вам предложили купить оружие:\n- Deagle\n- Стоимость %d\n- Патроны %d",count_price,id_patron);
		ShowPlayerDialog(id_player, 22572, DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Покупка оружия",stringer,"Купить","Отмена");
		SCM(playerid, 0x6ab1ffaa, "Вы предложили купить оружие!");
	}
	return 1;
}

CMD:gunlist(playerid)
{
	if(IsAGang(playerid)) ShowPlayerDialog(playerid,8321,DIALOG_STYLE_MSGBOX,"Список оружия","\tИмя\t\tМатов за 1 патрон\t\tМатов за 1 обойму\n________________________________________________________________________\n\n\tDeagle\t\t\t2м\t\t\t\t42м\n\tSdpistol\t\t2м\t\t\t\t102м\n\tRifle\t\t\t2м\t\t\t\t-\n\tShotgun\t\t2м\t\t\t\t-\n\tSMG\t\t\t2м\t\t\t\t180м\n\tAK47\t\t\t2м\t\t\t\t180м\n\tM4\t\t\t2м\t\t\t\t300м","Закрыть","");
	return 1;
}

CMD:makegun(playerid)
{
	if(!p_info[playerid][pMats]) return SendErr(playerid, "У вас нет металла");
	stringer = "Имя оружия\tК-во металла{"#cWHITE"}\n";
	for(new i = 0; i < 7; i++)
	{
		format(stringer,1000,"%s%s\t%i\n",stringer,MakeGunData[i][mgunname],MakeGunData[i][mgunamount]);
	}
	ShowPlayerDialog(playerid,dMakeGun,DIALOG_STYLE_TABLIST_HEADERS,"Сборка оружия",stringer,"Выбрать","Закрыть");
	return 1;
}

CMD:radar(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Данная функция Вам недоступна");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "вы находитесь в интерьере");

	new Float:X, Float:Y, Float:Z, Float:A, max_speed;
	if(sscanf(params,"i",max_speed)) return SendClientMessage(playerid,COLOR_GREY,"/radar [ максимальная скорость ]");
	if ( radar_object [ playerid ] [ 0 ] != INVALID_OBJECT )
	{
		DestroyDynamicObject ( radar_object [ playerid ] [ 0 ] ) ;
		if ( radar_object [ playerid ] [ 1 ] != INVALID_OBJECT) DestroyDynamicObject ( radar_object [ playerid ] [ 1 ] ) ;
		if ( radar_object [ playerid ] [ 2 ] != INVALID_OBJECT) DestroyDynamicObject ( radar_object [ playerid ] [ 2 ] ) ;

		radar_object [ playerid ] [ 0 ] = INVALID_OBJECT ;
		radar_object [ playerid ] [ 1 ] = INVALID_OBJECT ;
		radar_object [ playerid ] [ 2 ] = INVALID_OBJECT ;

		total_radars--;

		if(blocktext[playerid] != Text3D:-1)
		{
			Delete3DTextLabel(blocktext[playerid]);
			blocktext[playerid]=Text3D:-1;
		}

		SendClientMessage ( playerid, COLOR_GREY, "Радар удалён");

		return 1;
	}

	if ( max_speed < 50 || max_speed > 250 ) return SendClientMessage ( playerid, COLOR_GREY, "Скорость указывайте от 50 до 250" ) ;

	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);

	radar_object [ playerid ] [ 0 ] = CreateDynamicObject(11453, X + 3.0 * floatsin(-A, degrees), Y + 3.0 * floatcos(-A, degrees), Z + 1.2, 0.0, 0.0, A );
	SetDynamicObjectMaterial(radar_object [ playerid ] [ 0 ], 0, 18646, "matcolours", "grey-50-percent", 0);
	SetDynamicObjectMaterial(radar_object [ playerid ] [ 0 ], 1, 18646, "matcolours", "grey-80-percent", 0);

	EditDynamicObject ( playerid , radar_object [ playerid ] [ 0 ] ) ;
	SetPVarInt(playerid, "max_speed" , max_speed ) ;

	SendClientMessage ( playerid, CNBLUE, "[ ! ] {"#cWHITE"}Установите радар используя стрелки , чтобы радар работал корректно поверните его боком к дороге");
	return 1;
}

CMD:break(playerid,params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Данная функция Вам недоступна");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы находитесь в интерьере");

	if ( br_player[playerid][br_flag] != 15 ) return SendClientMessage ( playerid , COLOR_GREY , "Пожалуйста подождите ..." ) ;
	for(new i = 0; i <= 11; i++) TextDrawShowForPlayer ( playerid , TD_BRAKE[i] ) ;
	SelectTextDraw(playerid, 0x022F3299);
	br_player[playerid][br_flag] ^= 1 << 0;

	/*if(GetPVarInt(playerid,"breaked") == 1)
	{
		DeletePVar(playerid,"breaked");
		Delete3DTextLabel(Text3D:blocktext[playerid]);
		blocktext[playerid]=Text3D:-1;
		SendSucc(playerid,"Вы убрали ограждение");
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendInf(playerid,"Используйте: /break [тип (1-4)]");
	if(params[0] < 1 || params[0] > 4) return 1;

	new Float:x, Float:y, Float:z, Float:angle;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);
	x += floatsin(-angle, degrees);
	y += floatcos(-angle, degrees);
	FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);

	if(GetPVarInt(playerid,"breaked") == 0)
	{
		format(stringer, 128, "Ограждение установил %s", NamePlayer[playerid]);
		blocktext[playerid] = Create3DTextLabel(stringer,CBLUE,x,y,z-0.7,30.0,0,0);
		SetPVarInt(playerid,"breaked",1);
		SendSucc(playerid,"Вы установили ограждение. Используйте '/break' ещё раз, чтобы убрать его");
	}*/
	return 1;
}


stock GetNearestTrunckFuel(playerid)
{
	for(new i=0; i<CountBusiness; i++)
	{
		if(Business[i][bType]!=13) continue;
		if(PlayerToPoint(10.0,playerid,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ]))  return i;
	}
	return -1;
}


CMD:fill(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErr(playerid, "Вы не за рулем");
	new i = GetNearestTrunckFuel(playerid);
	if(i==-1) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:cfuel = float(GetFloatAroundFive(gVehicles[vehicleid - 1][vFuel]));
	if(cfuel==0.0 || gVehicles[vehicleid - 1][vFuel] >= 100.0)
	{
		if(gVehicles[vehicleid - 1][vFuel]>100.0)
		{
			SendErr(playerid, "Вашему автомобилю не требуется заправка");
			return 1;
		}
	}
	if(Business[i][bProd] <= 0)
	{
			SendErr(playerid, "На заправке нет топлива");
			return 1;
	}
	////SetPVarInt(playerid,"fuelid",i);

	if(GetPVarInt(playerid,"fuel_show")) return 1;
	SetPVarInt(playerid,"fuel_show", true);

	new step = 0;
	CreatePlayerFuelDraw(playerid);

	for(new Float:tFuel = 212.0; tFuel <= 422.0; tFuel += 10.5)
	{
		if((step * 5.0)==cfuel)
		{
			PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], tFuel, 0.0);
			SetPVarInt(playerid,"start_step",step);
			SetPVarFloat(playerid,"start_fuel",cfuel);
			SetPVarInt(playerid,"td_step",step);
			SetPVarFloat(playerid,"td_fuel",tFuel);
			format(stringer, 64, "%.1f FUEL",cfuel);
			PlayerTextDrawSetString(playerid,PTD_Fuel[playerid][1],stringer);
			break;
		}
		step++;
	}
	for(new s = 0; s < 8; s++)
	{
		TextDrawShowForPlayer(playerid,TD_Fuel[s]);
	}
	PlayerTextDrawShow(playerid,PTD_Fuel[playerid][0]);
	PlayerTextDrawShow(playerid,PTD_Fuel[playerid][1]);


///format(stringer, 144, "BIZ: %d", i);
///SendClientMessage(playerid,-1,stringer);

	SelectTextDraw(playerid,2051617500);
	return 1;
}

CMD:maskoff(playerid)
{
	if(!GetPVarInt(playerid,"pMasked")) return SendErr(playerid, "Вы не в маске");
	if(!p_info[playerid][tMember]) SetPlayerColorAc(playerid,0);
	if(p_info[playerid][tMember]) SetPlayerColorAc(playerid,p_info[playerid][tMember]);
	SCM(playerid,CBLUE,"Вы сняли маску");
	DeletePVar(playerid,"pMasked");
	DeletePVar(playerid,"mask");
	return 1;
}

CMD:giveguns(playerid,params[])
{
	if(sscanf(params,"ii",params[0],params[1])) return SendInf(playerid, "Используйте: /giveguns [id игрока] [к-во]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не найден");
	if(params[1] < 1 || params[1] > 500) return SendErr(playerid, "от 1 до 500");
	if(p_info[playerid][pMats]<params[1]) return SendErr(playerid, "У вас нет столько металла");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");

	p_info[playerid][pMats] -= params[1];
	p_info[params[0]][pMats] += params[1];

	UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);
	UpdatePlayerData(params[0],"pMats",p_info[params[0]][pMats]);

	format(stringer,128,"Вы передали игроку %s %i металла",NamePlayer[params[0]],params[1]);
	SendClientMessage(playerid,CBLUE,stringer);

	format(stringer,128,"%s передал вам %i металла",NamePlayer[playerid],params[1]);
	SendClientMessage(params[0],CBLUE,stringer);

	format(stringer,128,"передал(а) %s %i металла", NamePlayer[params[0]],params[1]);
	MeAction(playerid,stringer);
	return 1;
}

CMD:givepatr(playerid,params[])
{
	if(p_info[playerid][tMember] == 0) return SendErr(playerid, "Вы не состоите в фракции");
	if(sscanf(params,"ii",params[0],params[1])) return SendInf(playerid, "Используйте: /givepatr [id игрока] [к-во]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не найден");
	if(params[1] < 1 || params[1] > 500) return SendErr(playerid, "от 1 до 500");
	if(p_info[playerid][pPatron]<params[1]) return SendErr(playerid, "У вас нет столько патрон");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");

	p_info[playerid][pPatron] -= params[1];
	p_info[params[0]][pPatron] += params[1];

	UpdatePlayerData(playerid,"pPatron",p_info[playerid][pPatron]);
	UpdatePlayerData(params[0],"pPatron",p_info[params[0]][pPatron]);

	format(stringer,128,"Вы передали игроку %s %i патрон",NamePlayer[params[0]],params[1]);
	SendClientMessage(playerid,CBLUE,stringer);

	format(stringer,128,"%s передал вам %i патрон",NamePlayer[playerid],params[1]);
	SendClientMessage(params[0],CBLUE,stringer);

	format(stringer,128,"передал(а) %s %i патрон", NamePlayer[params[0]],params[1]);
	MeAction(playerid,stringer);
	return 1;
}

CMD:givehealme(playerid,params[])
{
	if(p_info[playerid][tMember] == 0) return SendErr(playerid,"Вы не состоите в фракции");
	if(!GetPVarInt(playerid,"pHealing")) return SendErr(playerid, "У вас нет аптечки");
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /givehealme [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не найден");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid,  "Игрок не рядом с вами");
	if(GetPVarInt(params[0],"pHealing")) return SendErr(playerid, "У игрока уже есть аптечка");

	format(stringer,128,"Вы передали игроку %s аптечку",NamePlayer[params[0]]);
	SendClientMessage(playerid,CBLUE,stringer);

	format(stringer,128,"%s передал вам аптечку",NamePlayer[playerid]);
	SendClientMessage(params[0],CBLUE,stringer);

	format(stringer,128,"передал(а) %s аптечку", NamePlayer[params[0]]);
	MeAction(playerid,stringer);

	SetPVarInt(params[0], "pHealing", true);
	return 1;
}

CMD:med(playerid,params[])
{
	if(!p_info[playerid][pMed]) return SendErr(playerid, "У вас нет медицинской карты");
	if(sscanf(params,"i",params[0]))
	{
		params[0] = playerid;
		SendInf(playerid, "Используйте: /med [id игрока]");
	}
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0],X,Y,Z);
	if(!PlayerToPoint(8.0,playerid,X,Y,Z)) return SendErr(playerid, "Игрок не рядом с Вами");
	if(params[0] == playerid)
	{
		ShowMeditionCard(playerid, playerid);
		MeAction(playerid,"достал(а) медицинскую карту и рассматривает ее");
	}
	else
	{
		format(stringer, 144, "Вы предложили {"#cWHITE"}%s {"#cINFO"} показать медицинскую карту",NamePlayer[params[0]]);
		SCM(playerid, 0x269BD8FF, stringer);
		format(stringer, 144, "%s {"#cINFO"}хочет показать Вам медицинскую карту. Чтобы подтвердить нажмите {33AA33}Y{"#cINFO"}, иначе {"#cRED"}N",NamePlayer[playerid]);
		SCM(params[0], -1, stringer);
		SetPVarInt(params[0],"medcart", playerid + 1);
	}
	return 1;
}



CMD:givemed(playerid,params[])
{
	if(!IsAMedic(playerid)) return SendErr(playerid, "Вы не состоите в МЧС");
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /givemed [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0],X,Y,Z);
	if(!PlayerToPoint(8.0,playerid,X,Y,Z)) return SendErr(playerid, "Игрок не рядом с Вами");
	if(p_info[params[0]][pMed]) return SendErr(playerid, "У игрока есть мед. карта");

	format(stringer,144, "* %s выдал вам мед. карту", NamePlayer[playerid]);
	SCM(params[0],CBLUE,stringer);

	format(stringer,144, "* Вы выдали %s мед. карту", NamePlayer[params[0]]);
	SCM(playerid,CBLUE,stringer);

	format(stringer,144,"выдал(а) медицинскую карту %s", NamePlayer[params[0]]);
	MeAction(playerid,stringer);

	p_info[params[0]][pMed] = 1;
	UpdatePlayerData(params[0], "pMed",p_info[params[0]][pMed]);
	return 1;
}



CMD:healup(playerid)
{
	if(GetPlayerInterior(playerid) == 0) return 1;
	new bizid = GetPVarInt(playerid, "BUSINESS_ID");
	if ( GetPlayerVirtualWorld(playerid) != bizid + 1) return SendClientMessage(playerid,CGRAY,"Вы должны быть в бизнесе");
	if(Business[bizid][bHel] == 0) return SendErr(playerid, "В бизнесе нет аптечек");
	if(p_info[playerid][pCash]<150) return SendClientMessage(playerid,CGRAY,"У вас нет 150$");
	Business[bizid][Bank] += 150;
	AddMafiaBank(bizid, 150);
	UpdateOtherBusiness(bizid);
	TransferMoney(playerid,p_info[playerid][pCash]-150,150,"покупка в 24/7 (/healup)");
	p_info[playerid][pCash] -= 150;
	UpdateMoney(playerid);
	new Float:health;
	GetPlayerHealth(playerid,health);
	if ( health + 60.0 < 100.0 ) health += 60.0;
	else health = 100.0;
	AC_SetPlayerHealth(playerid,health);
	//AC_SetPlayerHealth(playerid,health);
	MeAction(playerid,"перебинтовал рану");
	SetPlayerChatBubble(playerid,"+ 60 HP",CYELLOW,20.0,10000);
	FIXES_ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	return 1;
}

CMD:healme(playerid)
{
	if(!GetPVarInt(playerid,"pHealing")) return SendErr(playerid, "У вас нет аптечки");
	if(gKilledWithAntiDeath[playerid] == 1)
	{
		new Float:health;
		GetPlayerHealth(playerid,health);
		AC_SetPlayerHealth(playerid,health+60);
		AC_SetPlayerHealth(playerid,health+60);
		if(damage_text[playerid]!=Text3D:-1)
		{
			Delete3DTextLabel(damage_text[playerid]);
			damage_text[playerid]=Text3D:-1;
		}
		SetCameraBehindPlayer(playerid);
		FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
		gKilledWithAntiDeath[playerid] = 0;
		return true;
	}
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;

	new Float:health;
	GetPlayerHealth(playerid,health);
	AC_SetPlayerHealth(playerid,health+60);
	AC_SetPlayerHealth(playerid,health+60);
	MeAction(playerid,"перебинтовал рану");
	SetPlayerChatBubble(playerid,"+60 HP",CYELLOW,20.0,10000);
	FIXES_ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	SetPVarInt(playerid, "heal_me",GetPVarInt(playerid, "heal_me") + 1);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	if(GetPVarInt(playerid, "heal_me") >= 3) return DeletePVar(playerid,"pHealing"), DeletePVar(playerid, "heal_me");
	return 1;
}

CMD:mask(playerid)
{
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(!GetPVarInt(playerid,"pMask")) return SendErr(playerid, "У Вас нет маски");
	if(GetPVarInt(playerid,"pMasked")) return SendErr(playerid, "Вы уже одели маску");
	/*for(new i = GetPlayerPoolSize(); i != -1; --i)
	{
		if(p_info[i][pAdmin]>0)continue;
		ShowPlayerNameTagForPlayer(i, playerid, false);
	}*/
	SetPlayerColor(playerid, 0x7a766700);
	SetPVarInt(playerid,"mask",30);
	SCM(playerid, CBLUE, "Вы надели маску. Ваше местоположение скрыто (Используйте /maskoff, чтобы снять маску)");
	GameTextForPlayer(playerid, "~b~Invisible on", 5000, 3);
	FIXES_ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	SetPlayerChatBubble(playerid, "Одевает маску", CORANGE, 30.0, 10000);
	DeletePVar(playerid,"pMask");
	SetPVarInt(playerid,"pMasked", true);
	return 1;
}

CMD:newsbank(playerid)
{
	if(p_info[playerid][tMember] != 16) return true;
	else if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");

	format(stringer, 144, "В банке LS News: %d $", frac_money[p_info[playerid][tMember]]);
	SendClientMessage(playerid, 0x6ab1ffaa, stringer);
	return true;
}

/*CMD:getgun(playerid)
{
	if(p_info [playerid][tMember] == 3 || p_info [playerid][tMember] == 19)
	{
		if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 470) return SendErr(playerid, "Вы не в Хаммере");
		if(frac_metall[p_info [playerid][tMember]] < 500) return SendErr(playerid, "На складе нет оружия");

		AC_GivePlayerWeapon(playerid, 30, 100);
		AC_SetPlayerArmour(playerid, 100);
		AC_SetPlayerHealth(playerid,100);
		frac_metall[p_info [playerid][tMember]] -= 500;
		UpdateFractionStore(p_info[playerid][tMember]);
		SetPlayerChatBubble(playerid,"взял оружие из багажника",0xE75480FF,30.0,10000);
		SCM(playerid, CISPOLZUY,"Вы достали из багажника: AK-47 (100), Бронижелет, Сухой паёк");
	}
	else if(p_info [playerid][tMember] == 4)
	{
		if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 407) return SendErr(playerid, "Вы не в пожарной машине");

		AC_GivePlayerWeapon(playerid, 42, 1500);
		AC_SetPlayerArmour(playerid, 100);
		AC_SetPlayerHealth(playerid, 100);
		SetPlayerChatBubble(playerid,"взял вспомогательные средства из багажника",0xE75480FF,30.0,10000);
		SCM(playerid, CISPOLZUY,"Вы достали из багажника: Огнетушитель (1500), Бронижелет, Сухой паёк");
	}
	return 1;
}*/

CMD:warehouse(playerid)
{
	if(!p_info[playerid][tMember]) return 1;

	SendClientMessage(playerid,0xF0F0F0FF,"-======= Склад =======-");
	format(stringer, 128, "			Металл: {"#cORANGE"}%d кг.", frac_metall[p_info[playerid][tMember]]);
	SendClientMessage(playerid,0xF0F0F0FF,stringer);
	format(stringer, 128, "			Патроны: {"#cORANGE"}%d шт.", frac_patron[p_info[playerid][tMember]]);
	SendClientMessage(playerid,0xF0F0F0FF,stringer);
	SendClientMessage(playerid,0xF0F0F0FF,"-=====================-");
	return 1;
}

CMD:hotdog(playerid,params[])
{
	if(p_info[playerid][pJob] != 3) return SCM(playerid, CWHITE, "Вы не продавец ХотДогов!");
	else if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, CWHITE, " Используйте: /hotdog [id] [цена]");
	else if(params[1] < 10 || params[1] > 999) { SCM(playerid, CWHITE, "Цена должна быть: от 10 до 999!"); return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 588) return SCM(playerid,CWHITE,"Вы не в машине продажи хотдого!");
	else if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Человек не рядом с вами");
	else if(params[0] == playerid)  return  SCM(playerid,CGRAD1,"Вы указали свой ID");
	format(stringer, 144, "Вы предложили %s ХотДог за %d $",NamePlayer[params[0]],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer);
	format(stringer, 144, "%s предлагает Вам ХотДог за %d $. ((  Используйте: /accept hotdog для покупки ХотДога ))",NamePlayer[playerid],params[1]);
	SCM(params[0], 0x6ab1ffaa, stringer);
	SetPVarInt(params[0],"HotdogOffer", playerid + 1);
	SetPVarInt(params[0],"HotdogPrice", params[1]);
	return 1;
}

CMD:free(playerid,params[])
{
	if(!IsAMayor(playerid)) return 1;
	else if(p_info[playerid][tRank] != 5) return SCM(playerid, CWHITE, "Вы не адвокат!");
	else if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	else if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, CWHITE, " Используйте: /free [id] [цена]");
	else if(!p_info[params[0]][pJailTime]) return SCM(playerid, CGRAD1, "Человек не в тюрьме!");
	else if(params[1] < 100 || params[1] > 50000) { SCM(playerid, CWHITE, "Цена не может быть меньше 100 и больше 50000!"); return 1; }
	else if(params[0] == playerid)  return  SCM(playerid,CGRAD1,"Вы указали свой ID");
	else if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");
	format(stringer, 144, "[Адвокат] Вы предложили %s выпустить его за %d $",NamePlayer[params[0]],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer);
	format(stringer, 144, "[Адвокат] Адвокат %s предлагает Вам свободу за %d $",NamePlayer[playerid],params[1]);
	SCM(params[0], 0x6ab1ffaa, stringer);
	ShowPlayerDialog(params[0],6622,DIALOG_STYLE_MSGBOX,"Адвокатские услуги", "Выберите способ оплаты:", "Наличные", "Банк");
	SetPVarInt(params[0],"FreeOffer", playerid + 1);
	SetPVarInt(params[0],"FreePrice", params[1]);
	DeletePVar(params[0],"SposobOffer");
	return 1;
}

CMD:setskin(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 9) return 1;
	else if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, CWHITE, "/setskin [ID игрока] [ID скина]");
	else if(params[1] > 310 || params[1] < 1 || params[1] == 74) return SCM(playerid, CWHITE, "Неправильный ID скина!");
	else if(!IsPlayerConnected(params[0])) return 1;
	p_info[params[0]][pChar] = params[1];
	UpdatePlayerData(params[0],"pChar",p_info[params[0]][pChar]);
	format(stringer, 128, "Администратор [Nik: %s | ID: %d] выдал вам постоянный скин [Number skin: %d]",NamePlayer[playerid],playerid,params[1]);
	SCM(params[0], CORANGE, stringer);
	format(stringer, 128, "Вы выдали постоянный скин игроку [Nik: %s | ID: %d] [Number skin: %d]",NamePlayer[params[0]],params[0],params[1]);
	SCM(playerid, CORANGE, stringer);
	SetPlayerSkin(params[0], p_info[params[0]][pChar]);
	return 1;
}
CMD:tempskin(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 8) return 1;
	if(sscanf(params,"ii",params[0],params[1])) return SCM(playerid, CWHITE, "/tempskin [ID игрока] [ID скина]");
	if(params[1] > 310 || params[1] < 1 || params[1] == 74) return SCM(playerid, CWHITE, "Неправильный ID скина!");

	format(stringer, 144, "Администратор [Nik: %s | ID: %d] выдал вам временный [Number skin: %d]",NamePlayer[playerid],playerid,params[1]);
	SCM(params[0], CORANGE, stringer);
	format(stringer, 144, "Вы выдали временный скин игроку [Nik: %s | ID: %d] [Number skin: %d]",NamePlayer[params[0]],params[0],params[1]);
	SCM(playerid, CORANGE, stringer);
	SetPlayerSkin(params[0], params[1]);
	return 1;
}

CMD:givedonate(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && strcmp(NamePlayer[playerid],"Mattio_AnconaO")) return 1;
	else if(sscanf(params,"ii",params[0],params[1])) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givedonate [id] [к-во]");
	else if(!IsPlayerStream(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами !");
	else if(params[1] < 0 && p_info[playerid][tDonatemoney2] <= params[1]) return SCM(playerid, CGRAD1, "У вас нет столько донат-очков");

	p_info[params[0]][tDonatemoney2] += params[1];
	UpdatePlayerData(params[0],"tDonatemoney2",p_info[params[0]][tDonatemoney2]);
	p_info[playerid][tDonatemoney2] -= params[1];
	UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);

	new yst[144];
	format(yst, 144, "[A] %s выдал %d донат-очков игроку %s", NamePlayer[playerid],params[1],NamePlayer[params[0]]);
	AdmMes(CADMIN_INFO, yst, 1);
	return 1;
}


CMD:adonate(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 10 && !GetPVarInt(playerid,"DJ")) return SCM(playerid, CWHITE, "Недоступно!");

	if(GetPVarInt(playerid,"adonate_time"))
	{
		if(GetPVarInt(playerid,"adonate_time") > unix)
		{
			format(stringer, 200, "Выдавать можно раз в {"#cRED"}10 {"#cWHITE"}минут по {"#cRED"}10 {"#cWHITE"}доната. Осталось ждать: {"#cRED"}%i {"#cWHITE"}сек.",unix-GetPVarInt(playerid,"adonate_time"));
			SendErr(playerid,stringer);

			return 1;
		}
	}

	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, CWHITE, " Используйте: /adonate [id] [к-во]");
	if(params[1] > 10) return SCM(playerid, CGRAD1, "Максимум можно выдать: 10 доната.");
	if(!IsPlayerStream(5.0, playerid, params[0])) return SCM(playerid, CGRAD1, "Вы слишком далеко.");
	if(p_info[params[0]][pAdmin] > 0) return SCM(playerid, CGRAD1, "Вы указали ID администратора!");
	if(params[1] < 0 && p_info[playerid][tDonatemoney2] <= params[1]) return SCM(playerid, CGRAD1, "У вас нет столько донат-очков");
	p_info[params[0]][tDonatemoney2] += params[1];
	UpdatePlayerData(params[0],"tDonatemoney2",p_info[params[0]][tDonatemoney2]);
	p_info[playerid][tDonatemoney2] -= params[1];
	UpdatePlayerData(playerid,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
	format(stringer, 144, "[A] %s выдал %d донат-очков игроку %s", NamePlayer[playerid],params[1],NamePlayer[params[0]]);
	AdmMes(CADMIN_INFO, stringer,1);
	format(stringer, 128, "Администратор %s[%d] выдал вам %d донат-очков",NamePlayer[playerid],playerid, params[1]);
	SCM(params[0], CBLUE, stringer);
	SetPVarInt(playerid,"adonate_time", unix + (10 * 60));
	return 1;
}


CMD:pay(playerid,params[])
{
	if(p_info[playerid][pLevel] < 2) return SendErr(playerid,"Команда доступна с второго уровня");
	else if(sscanf(params,"ii",params[0],params[1])) return SendInf(playerid, "/pay [ID игрока] [сумма]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Неверный ID игрока");
	else if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING) return 1;
	else if(!IsPlayerStream(5.0, playerid, params[0])) return SendErr(playerid,"Вы далеко друг от друга");
	else if(params[1] < 1 || params[1] > 2000) return SendErr(playerid,"Можно передавать от 1$ до 2.000$");
	else if(p_info[playerid][pCash] < params[1]) return SendErr(playerid,"У Вас не достаточно денег");

	new transfer_formatted_string[64];
	format(transfer_formatted_string,64,"%s передал %s -> cmd:pay",NamePlayer[playerid],NamePlayer[params[0]]);

	TransferMoney(playerid,p_info[playerid][pCash]-params[1],params[1],transfer_formatted_string);
	TransferMoney(params[0],p_info[params[0]][pCash]+params[1],params[1],transfer_formatted_string);

	p_info[playerid][pCash] -= params[1];
	p_info[params[0]][pCash] += params[1];

	UpdateMoney(playerid);
	UpdateMoney(params[0]);

	format(stringer, 144, "%s {"#cINFO"}передал Вам {"#cGREEN"}$%d",NamePlayer[playerid],params[1]);
	SendClientMessage(params[0],CWHITE,stringer);

	format(stringer,144,"Вы передали {"#cWHITE"}%s {"#cRED"}$%d",NamePlayer[params[0]],params[1]);
	SendClientMessage(playerid,CINFO,stringer);

	format(stringer,144,"достал деньги и передал их %s",NamePlayer[params[0]]);
	MeAction(playerid,stringer);

	FIXES_ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return 1;
}

CMD:eject(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return SCM(playerid,CWHITE,"Вы не водитель!");
		if(sscanf(params,"d",params[0])) return	SCM(playerid, CWHITE, "Используйте: /eject [id]");
		if(IsPlayerConnected(params[0]))
		{
				if(params[0] == playerid) { SCM(playerid, CWHITE, "Вы не можете выкинуть из машины себя!"); return 1; }
				if(IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid)))
				{
					if(GetPVarInt(params[0],"PlayerCuffed"))
					{
						AC_RemovePlayerFromVehicle(params[0]);
						format(stringer, 144, "Вы выкинули из машины %s, наручники сломались!", NamePlayer[params[0]]);
						SCM(playerid, 0x6495EDFF, stringer);
						format(stringer, 144, "Вас выкинул из машины %s, наручники сломались!!", NamePlayer[playerid]);
						SCM(params[0], 0x6495EDFF, stringer);
						AC_TogglePlayerControllable(params[0], true);
						SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
						RemovePlayerAttachedObject(params[0],0);
						DeletePVar(params[0],"PlayerCuffed");
					}
					else
					{
						format(stringer, 144, "Вы выкинули из машины %s!", NamePlayer[params[0]]);
						SCM(playerid, 0x6495EDFF, stringer);
						format(stringer, 144, "Вас выкинул из машины %s!", NamePlayer[playerid]);
						SCM(params[0], 0x6495EDFF, stringer);
						AC_RemovePlayerFromVehicle(params[0]);
						DeletePVar(params[0],"PlayerTied");
						AC_TogglePlayerControllable(params[0], true);
					}
				}
				else SCM(playerid, CWHITE, "Не рядом с вами!");
		}
		else SCM(playerid, CWHITE, "Игрок оффлайн!");
	}
	else SCM(playerid, CWHITE, "Вы должны быть в машине!");
	return 1;
}

CMD:wanted(playerid)
{
	if(!IsACop(playerid)) return SendErr(playerid,"Эта функция только для Полиции/ФБР");

	new count_wanted = 0;

	stringer = "\tДело\tИмя преступника\tУровень розыска\n\n";
	foreach(i)
	{
		if(p_info[i][pWanted] > 0)
		{
			format(stringer,2400,"%s\t\t%d\t%s\t\t%d\n",stringer,i,NamePlayer[i],p_info[i][pWanted]);
			count_wanted++;
		}
	}
	if(count_wanted < 45) ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Список преступников", stringer, "Закрыть", "");
	else ShowPlayerDialog(playerid,dWanted,DIALOG_STYLE_MSGBOX,"Список преступников", stringer, "Далее", "Закрыть");
	return 1;
}



CMD:mbalance(playerid)
{

	SCM(playerid, CLIGHTGREEN, "==[ Мобильный баланс ] ==");
	format(stringer, 144, "- Баланс %d $",p_info[playerid][pMobile]);
	SCM(playerid, CWHITE, stringer);
	SCM(playerid, CWHITE, "- Пополнить баланс можно в любом банкомате");
	SCM(playerid, CLIGHTGREEN, "==[ Мобильный баланс ] ==");
	MeAction(playerid, "достаёт мобильник", 5.0);
	return 1;
}

CMD:yes(playerid,params[])
{
	if(p_info[playerid][tMember] != 16) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return 	SCM(playerid, CWHITE, "Используйте: /yes [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!GetPVarInt(params[0],"zvonok")) return  SCM(playerid, CGRAD1, "Этот человек не звонил в студию!");
	if(params[0] == playerid) { SCM(playerid, CWHITE, "Вы указали свой ID"); return 1; }
	format(stringer, 144, "Вы приняли звонок от %s", NamePlayer[params[0]]);
	SCM(playerid, CWHITE, stringer);
	SetPVarInt(params[0],"Tel", true);
	SCM(params[0], CYELLOW, "Вы попали в студию, говорите...");
	if(p_info[playerid][tMember] == 16)
	{
		SetPVarInt(params[0],"TalkingLivels", 2);
		TransferMoney(playerid,p_info[params[0]][pCash]-smspricels,smspricels,"/yes");
		p_info[params[0]][pCash] -= smspricels;
		frac_money[16] += smspricels;
	}
	return 1;
}

CMD:spveh(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0])) return SCM(playerid,CWHITE," Используйте: /spveh [радиус]");
	if(params[0]>100) return SCM(playerid,CWHITE,"Слишком большой радиус");
	if(GetVehiclePoolSize()>=MAX_VEHICLES) return SendClientMessage(playerid,COLOR_GREY,"pizda");
	new spveh=0;
	for(new c = 1, j = GetVehiclePoolSize(); c <= j; c++)
	{
		if(!IsValidVehicle(c)) continue;
		if(PlayerToPoint(params[0],playerid,gVehicles[c-1][veX],gVehicles[c-1][veY],gVehicles[c-1][veZ]))
		{
			if(!IsVehicleOccupied(c))
			{
				SetVehicleToRespawn(c);
				spveh++;
			}
		}
	}
	format(stringer, 255, "[A] %s зареспавнил весь транспорт рядом с ним. ( %i машин )",NamePlayer[playerid],spveh);
	AdmMes(CADMIN_INFO,stringer,1);
	return 1;
}

CMD:arrest(playerid,params[])
{
	if(!IsACop(playerid)) return SendErr(playerid,"Вы не член Полиции/Армии/ФБР!");
	if(!PlayerToPoint(50.0, playerid, 1614.68, -1629.41, 1583.87) && !PlayerToPoint(50.0, playerid, 2080.4060,-1450.4495,1516.7599) && !PlayerToPoint(50.0, playerid, 1614.1172,-1629.5081,1583.8660)) return SCM(playerid, CWHITE, "Вы далеко от тюрьмы!");
	if(!start_work[playerid]) return SendErr(playerid,"Вам необходимо начать рабочий день на базе организаций");


	new suspect;
	if(sscanf(params,"i",suspect)) return SendInf(playerid,"/arrest [playerid]");
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1]=0;
		DeletePVar(playerid,"walk_goto_me_player");
	}

	if(!IsPlayerConnected(suspect)) return SCM(playerid, CWHITE, "Игрок оффлайн");
	if(!IsPlayerStream(4.0, playerid, suspect)) return SCM(playerid, CWHITE, "Рядом с вами никого нет!");

	if(p_info[suspect][pWanted] < 1) return  SCM(playerid, CWHITE, "Человек должен иметь хотя бы один уровень розыска!");
	//
	format(stringer, 144, "Вы посадили в тюрьму %s на %d секунд", NamePlayer[suspect], (p_info[suspect][pWanted] * 600));
	SCM(playerid, 0x6ab1ffaa, stringer);
	//
	format(stringer, 144, "Вас посадил в тюрьму %s на %d секунд", NamePlayer[playerid], (p_info[suspect][pWanted] * 600));
	SCM(suspect, 0x6ab1ffaa, stringer);


	AC_ResetPlayerWeapons(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	AC_TogglePlayerControllable(suspect, true);
	DeletePVar(suspect,"PlayerCuffed");

	format(stringer, 144, "%s %s арестовал(а) преступника %s", GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid], NamePlayer[suspect]);
	SendRadioMessage(1, 0x007FFFFF, stringer);
	SendRadioMessage(2, 0x007FFFFF, stringer);

	p_info[suspect][pJailTime] = (p_info[suspect][pWanted] * 600);
	UpdatePlayerData(suspect,"pJailTime",p_info[suspect][pJailTime]);
	p_info[suspect][pMestoJail] = GetJailWorldID(playerid);
	UpdatePlayerData(suspect,"pMestoJail",p_info[suspect][pMestoJail]);
	p_info[suspect][pWanted] = 0;
	UpdatePlayerData(suspect,"pWanted",p_info[suspect][pWanted]);
	p_info[suspect][pZakonp] = 0;
	SetPlayerWantedLevel(suspect, p_info[suspect][pWanted]);
	UpdatePlayerData(suspect,"pZakonp",p_info[suspect][pZakonp]);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	AC_TogglePlayerControllable(suspect, true);
	DeletePVar(suspect,"PlayerCuffed");

	Insert_Reason_Jail(p_info[suspect][pID], NamePlayer[playerid], "Арест");

	SpawnPlayer(suspect);
	return 1;
}


CMD:mdc(playerid,params[])
{
	if(!IsACop(playerid)) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return    SCM(playerid, COLOR_GREY, " Используйте: /mdc [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок оффлайн!");
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_GREY, "Вы должны находиться в патрульной машине");
	new carr = GetVehicleModel (GetPlayerVehicleID(playerid));
	if ((carr != 441) || (carr != 446) || (carr != 448) || (carr != 449) || (carr != 452) || (carr != 450) || (carr != 453) || (carr != 454) || (carr != 460) || (carr != 461) || (carr != 462) || (carr != 463) || (carr != 464) || (carr != 465) || (carr != 468) ||
			(carr != 472) || (carr != 473) || (carr != 481) || (carr != 484) || (carr != 493) || (carr != 501) || (carr != 509) || (carr != 510) || (carr != 521) || (carr != 522) || (carr != 523) || (carr != 539) || (carr != 564) || (carr != 568) || (carr != 569) ||
			(carr != 570) || (carr != 571) || (carr != 584) || (carr != 586) || (carr != 595))
	{
		SendClientMessage(playerid,-1,"--------------------------------");
		format(stringer,128,"ФИО: {"#cWHITE"}%s",NamePlayer[params[0]]);
		SendClientMessage(playerid,CINFO,stringer);
		format(stringer,128,"Лет в штате: {"#cWHITE"}%s",p_info[params[0]][pLevel]);
		SendClientMessage(playerid,CINFO,stringer);
		format(stringer,128,"Уровень розыска: {"#cWHITE"}%d",p_info[params[0]][pWanted]);
		SendClientMessage(playerid,CINFO,stringer);
		SendClientMessage(playerid,-1,"--------------------------------");
		MeAction(playerid,"достал(а) портативный компьютер");
		format(stringer,128,"просматривает информацию о %s",NamePlayer[params[0]]);
		MeAction(playerid,stringer);
	}
	return 1;
}

CMD:frisk(playerid,params[])
{
	if(IsACop(playerid))
	{
		if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
		if(sscanf(params,"d",params[0])) return    SCM(playerid, COLOR_GREY, " Используйте: /frisk [id]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок оффлайн!");
		if (!IsPlayerStream(3.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Этого игрока рядом с вами нет !");
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Вы не можете обыскать себя!"); return 1; }
		new text1[20], text2[20];
		if(p_info[params[0]][pDrugs] > 0) { text1 = "| Наркотики."; } else { text1 = "| Пустой карман."; }
		if(p_info[params[0]][pMats] > 0) { text2 = "| Металл."; } else { text2 = "| Пустой карман."; }
		format(stringer, 128, ":::: Вещи %s ::::", NamePlayer[params[0]]);
		SCM(playerid, CWHITE, stringer);
		SCM(playerid, CWHITE, text1);
		SCM(playerid, CWHITE, text2);
		format(stringer, 144, "обыскал %s", NamePlayer[params[0]]);
		MeAction(playerid, stringer, 5.0);
	}
	else SCM(playerid, CWHITE, "Вы не член Полиции/ФБР/Армии!");
	return 1;
}

CMD:hi(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return  SCM(playerid, COLOR_GREY, "Нельзя использовать в машине");
	if(sscanf(params,"d",params[0])) return   	SCM(playerid, COLOR_GREY, "Используйте: /hi [playerid]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок оффлайн!");
	if (!IsPlayerStream(2.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Человек далеко от Вас");
	if(params[0] == GetPVarInt(playerid,"hi")-1) return SCM(playerid, CWHITE, "Вы уже предлагали этому игроку пожать руку");
	if(GetPVarInt(params[0],"sim_id_sell")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"minet")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"hi")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"pass")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"sl")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	format(stringer,144,"Вы предложили {"#cWHITE"}%s {"#cINFO"}пожать руку",NamePlayer[params[0]]);
	SCM(playerid,CINFO,stringer);

	format(stringer,160,"%s {"#cINFO"}предложил вам пожать руку. Нажмите {"#cGREEN"}Y {"#cINFO"}чтобы пожать руку или {"#cRED"}N {"#cINFO"}для отказа",NamePlayer[playerid]);
	SCM(params[0],-1,stringer);

	SetPVarInt(params[0],"hi", playerid+1);
	return 1;
}



CMD:minet(playerid,params[])
{
	if(sscanf(params,"i",params[0])) return  	SCM(playerid, CWHITE, "Используйте: /minet [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	if(!IsPlayerStream(4.0, playerid, params[0])) return SCM(playerid, CWHITE, "Человек далеко от Вас");
	if(params[0] == playerid) return SCM(playerid,-1,"Ошибка. Нельзя делать минет себе!");
	if(params[0] == GetPVarInt(playerid,"minet")-1) return SCM(playerid, CWHITE, "Вы уже предлагали этому игроку минет");
	if(GetPVarInt(params[0],"sim_id_sell")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"sim_id_sell")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"minet")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"hi")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"pass")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"sl")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");

	format(stringer,144,"Вы предложили {"#cWHITE"}%s {"#cINFO"}сделать минет",NamePlayer[params[0]]);
	SCM(playerid,CINFO,stringer);

	format(stringer,144,"%s {"#cINFO"}предложил вам минет. Нажмите {"#cGREEN"}Y {"#cINFO"}для минета или {"#cRED"}N {"#cINFO"}для отказа",NamePlayer[playerid]);
	SCM(params[0],-1,stringer);

	SetPVarInt(params[0],"minet", playerid+1);
	return 1;
}




CMD:viphelp(playerid)
{
	if(p_info[playerid][pDonateRank] == 0) return SCM(playerid, CWHITE, "(( Вы не имеете VIP аккаунта! /mm - Донат ))");
	ShowVIPHelp(playerid) ;
	return 1;
}

CMD:vipuninvite(playerid)
{
	if(!p_info[playerid][tMember]) return SendErr(playerid,"Вы не состоите в организации");
	if(p_info[playerid][pDonateRank] < 3) return SendErr(playerid,"Доступно с статуса {ffff00}VIP THIRD");
	if(p_info[playerid][tRank] == FractionRank[p_info[playerid][tMember]-1]) return SendErr(playerid,"Лидер не может уволится по С/Ж.");
	if(StartWork(playerid))
	{
		SCM(playerid,CBLUE,"Рабочий день окончен");
		start_work[playerid] = 0;
		UpdatePlayerData(playerid, "start_work", start_work[playerid]);
	}
	foreach(i)
	{
		if(p_info[i][tMember] != p_info[playerid][tMember]) continue;
		format(stringer, 128, "%s покинул организацию по собственному желанию", NamePlayer[playerid]);
		SendClientMessage(i,CORANGE,stringer);
	}

	AC_SetPlayerArmour(playerid,0);
	ChangePlayerFraction(playerid, 0);
	p_info[playerid][tRank] = 0;
	UpdatePlayerData(playerid,"tRank",p_info[playerid][tRank]);
	p_info[playerid][tLeader] = 0;
	UpdatePlayerData(playerid,"tLeader",p_info[playerid][tLeader]);
	p_info[playerid][pJob] = 0;
	UpdatePlayerData(playerid,"pJob",p_info[playerid][pJob]);

	// SetSpawnInfoEx(playerid, p_info[playerid][pModel], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[playerid][tMember] ] [ f_spawn ] [ 3 ] );

	SpawnPlayer(playerid);
	return 1;
}

CMD:licenses(playerid)
{
	stringer[0] = EOS;
	format(stringer, 1500, "%s{"#cWHITE"}Водительские права: %s\n",stringer, (Lic[playerid][0]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
	format(stringer, 1500, "%s{"#cWHITE"}Лицензия пилота: %s\n",stringer, (Lic[playerid][1]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
	format(stringer, 1500, "%s{"#cWHITE"}Лицензия на водный транспорт: %s\n", stringer,(Lic[playerid][2]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
	format(stringer, 1500, "%s{"#cWHITE"}Лицензия на оружие: %s\n", stringer,(Lic[playerid][3]) ? ("{"#cGREEN"}Есть") : ("{"#cRED"}Нет"));
	ShowPlayerDialog(playerid, 0000, 0, "Лицензии", stringer, "Ок", "");
	MeAction(playerid,"смотрит свои лицензии", 5.0);
	return 1;
}

CMD:getip(playerid,params[])
{
	if(!p_info[playerid][pAdmin]) return 1;
	if(p_info[playerid][pAdmin] < 3) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0])) return SCM(playerid,CWHITE," Используйте: /getip [id]");
	format(stringer, 144, "[%s] IP: %s",NamePlayer[params[0]],PlayerIp[params[0]]);
	SendClientMessage(playerid,0x6495EDFF,stringer);
	return 1;
}

CMD:edit(playerid)
{
	if(p_info[playerid][tMember] != 16) return SCM(playerid,CWHITE,"Недоступно");
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(GetPVarInt(playerid,"adchecking_fix"))
	{
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	ShowAdvertList(playerid);
	return 1;
}

CMD:off(playerid,params[])
{
	if(p_info[playerid][tMember] != 16) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /off [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!GetPVarInt(params[0],"zvonok")) return   SCM(playerid, CGRAD1, "Этот человек не звонил в студию!");
	format(stringer, 144, "Вы завершили звонок от %s", NamePlayer[params[0]]);
	SCM(playerid, CBLUE, stringer);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_STOPUSECELLPHONE);
	SCM(params[0], CYELLOW, "Звонок завершён...");
	DeletePVar(params[0],"Tel");
	DeletePVar(params[0],"zvonok");
	if(p_info[playerid][tMember] == 16) DeletePVar(params[0],"TalkingLivels");
	return 1;
}

//SELECT SQL_CALC_FOUND_ROWS * FROM Board LIMIT ?i, ?i
//SELECT SQL_CALC_FOUND_ROWS `id`,`name`,`number` FROM `phone_book_w` WHERE `player_id` = '397894' LIMIT 0,5
//SELECT `id`,`name`,`number` FROM `phone_book_w` WHERE `player_id` = '397894'
CMD:book(playerid)
{
	new book_name[MAX_PLAYER_NAME];
	new book_number = 0;
	new book_header_dialog[64];
	format(book_header_dialog,64,"{"#cORANGE"}Телефонная книга {FFFFFF}| Страница №%d",GetPVarInt(playerid,"book_show_list")+1);
	mysql_query_string[0] = EOS;
	mysql_format(connects,mysql_query_string,512,"SELECT `id`,`name`,`number` FROM `phone_book_w` WHERE `player_id` = '%d' LIMIT %d, 5",
	p_info[playerid][pID], (GetPVarInt(playerid,"book_show_list") == 0) ? (0) : (floatround(GetPVarInt(playerid,"book_show_list") * 5)));
	new Cache:result = mysql_query(connects, mysql_query_string);
	new rows = cache_num_rows();
	if(rows == 0)
	{
		cache_delete(result);
		return SendClientMessage(playerid,COLOR_GREY,"Ваша телефонная книга пуста.");
	}
	stringer[0] = EOS;
	strcat(stringer,"{FFFFFF}");
	for(new r = 0; r < rows; r++)
	{
		cache_get_value_index_int(r,0,LoadBookID[playerid][r]);
		cache_get_value_index(r, 1, book_name, MAX_PLAYER_NAME);
		cache_get_value_index_int(r,2,book_number);
		format(stringer, 1500, "%s%s - т. %d\n", stringer, book_name, book_number);
	}
	if(rows==5) strcat(stringer,"{"#cGREEN"}Следующая страница");
	else if(GetPVarInt(playerid,"book_show_list")>0) strcat(stringer,"{"#cRED"}Предыдущая страница");
	cache_delete(result);
	ShowPlayerDialog(playerid, dContact, DIALOG_STYLE_LIST, book_header_dialog, stringer, "Варианты", "Отмена");
	return 1;
}




CMD:call(playerid,params[])
{
	if(!p_info[playerid][pPnumber]) return SendErr(playerid, "У вас нет SIM-карты, приобретите её в 24/7");
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить!");
	if(GetPVarInt(playerid,"takephone")) return SendErr(playerid, "У Вас нет телефона");
	if(p_info[playerid][pMobile] <= 0) return SendErr(playerid,"Суммы на вашем счету не достаточно для вызова");
	new number;
	if(sscanf(params,"i",number)) return SendInf(playerid,"/call [номер]");
	if(!number) return 1;
	if(number == p_info[playerid][pPnumber]) return SendErr(playerid,"Вы указали свой номер");
	switch (number)
	{
		case 911:
		{
			pc_cmd_service(playerid);
			return 1;
		}
		case 060:
		{
			new mtext[20],year, month,day,hour,minuite,second;
			r_getdate(year, month, day);
			r_gettime(hour,minuite,second);
			switch(month)
			{
				case 1: mtext = "Января";
				case 2: mtext = "Февраля";
				case 3: mtext = "Марта";
				case 4: mtext = "Апреля";
				case 5: mtext = "Мая";
				case 6: mtext = "Июня";
				case 7: mtext = "Июля";
				case 8: mtext = "Августа";
				case 9: mtext = "Сентября";
				case 10: mtext = "Октября";
				case 11: mtext = "Ноября";
				case 12: mtext = "Декабря";
			}
			format(stringer, 200, "{"#cWHITE"}Информация:\n\n{"#cWHITE"}Сегодняшняя дата:\t{34c924}%d %s 2016 г.\n{"#cWHITE"}Точное время:\t{1e90ff}%02d:%02d:%02d", day, mtext, hour, minuite);
			ShowPlayerDialog(playerid,8888, DIALOG_STYLE_MSGBOX, "{ffff00}Точное время:", stringer, "Закрыть", "");
			MeAction(playerid,"позвонил(а) в службу точного времени", 25.0);
			FIXES_ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
		}
		case 11888:
		{
			if(!smsls) return SendErr(playerid, "Прямой эфир отключен");
			format(stringer, 144, "[F] В студию звонит {"#cWHITE"}%s{"#cINFO"} Используйте {"#cWHITE"}/yes %i{"#cINFO"} чтобы ответить",NamePlayer[playerid], playerid);
			SendFamilyMessage(16, CINFO, stringer);
			SCM(playerid,  CWHITE, "Чтобы повесить трубку Используйте /h");
			SetPlayerSpecialAction(playerid,11);
			SetPVarInt(playerid,"zvonok", 1);
			TransferMoney(playerid,p_info[playerid][pCash]-smspricels,smspricels,"/h");
			p_info[playerid][pCash] -= smspricels;
			UpdateMoney(playerid);
			frac_money[16] += smspricels;
		}
		default:
		{
			new bool:isnumber = false ;
			mysql_query_string[0] = EOS;
			mysql_format(connects,mysql_query_string,512,"SELECT `number`,`name_id` FROM `phone_book_w` WHERE `number` = '%d' AND `player_id` = '%d'", number, p_info[playerid][pID]);
			new Cache:result = mysql_query(connects, mysql_query_string);
			new rows = cache_num_rows();
			if(rows != 0)
			{
				new check_phone,number_phone;
				cache_get_value_index_int(0,1,check_phone);
				cache_get_value_index_int(0,0,number_phone);
				if ( number ==  number_phone)
				{
					foreach(i)
					{
						if(p_info[i][pID] == check_phone)
						{
							number = p_info[i][pPnumber];
							break;
						}
					}
				}
			}
			cache_delete(result);

			foreach(t)
			{
				if(p_info[t][pPnumber] == number)
				{
					if(GetPVarInt(t,"called")) return SendErr(playerid, "Абонент занят");
					if(GetPVarInt(t,"PhoneOnline")) return SendErr(playerid, "Телефон абонента отключен");

					format(stringer, 128, "Исходящий звонок | Номер: %i "ORG"| Ожидание ответа от %s",p_info[t][pPnumber],NamePlayer[t]);
					SCM(playerid,CBLUE,stringer);

					format(stringer, 128, "Входящий звонок | Номер: "ORG"%i",p_info[playerid][pPnumber]);
					SCM(t,CBLUE,stringer);
					SCM(t,-1,"Чтобы поднять трубку Используйте {"#cGREEN"}/p{"#cWHITE"} для завершения Используйте {"#cRED"}/h");

					SetPVarInt(playerid,"called",t+1);
					SetPVarInt(t,"called",playerid+1);

					MeAction(playerid,"достал(а) телефон", 5.0);
					DoAction(t,"Звонит телефон");

					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
					SetPlayerAttachedObject(playerid,2,p_info[playerid][pModelPhone],6,0.09,0.019,-0.011,88.90,-176.40,0.49,0.787,0.753,0.562);

					isnumber = true;
					if ( p_info[playerid][pMobile] > 10 )
					{
						p_info[playerid][pMobile] -= 10 ;
						UpdatePlayerData(playerid,"pMobile",p_info[playerid][pMobile]);
					}
					break;
				}
			}
			if ( !isnumber ) SendErr(playerid, "Номер вне зоны доступа сети");
		}
	}

	return 1;
}

CMD:p(playerid)
{
	new callid =GetPVarInt(playerid,"called")-1;
	if(callid == playerid) return 1;
	if(!IsPlayerConnected(callid)) return SendErr(playerid, "Вам никто не звонит");

	format(stringer,128, "%s ответил(а) на ваш звонок", NamePlayer[playerid]);
	SCM(callid,CGREEN,stringer);
	SCM(playerid,CGREEN,"Вы подняли трубку");

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject(playerid,2,p_info[playerid][pModelPhone],6,0.09,0.019,-0.011,88.90,-176.40,0.49,0.787,0.753,0.562);

	MeAction(playerid,"ответил(а) на звонок", 5.0);
	SetPVarInt(playerid,"talkcall",true);
	SetPVarInt(callid,"talkcall",true);
	return 1;
}

CMD:h(playerid)
{
	new callid =GetPVarInt(playerid,"called")-1;
	//if(callid == playerid) return 1;
	if(!IsPlayerConnected(callid)) return SendErr(playerid, "Вам никто не звонит");

	format(stringer,128, "%s положил(а) трубку", NamePlayer[playerid]);
	SCM(callid,CRED,stringer);
	SCM(playerid,CGREEN,"Вы положили трубку");

	MeAction(playerid,"положил(а) трубку", 5.0);

	DeletePVar(playerid,"talkcall");
	DeletePVar(playerid,"called");
	DeletePVar(callid,"talkcall");
	DeletePVar(callid,"called");
	DeletePVar(playerid,"TalkingLive");
	DeletePVar(playerid,"TalkingLivels");
	DeletePVar(playerid,"Tel");
	DeletePVar(playerid,"zvonok");

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	SetPlayerSpecialAction(callid,SPECIAL_ACTION_STOPUSECELLPHONE);
	RemovePlayerAttachedObject(playerid,2);
	RemovePlayerAttachedObject(callid,2);
	return 1;
}
CMD:house(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 10) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /house [housenumber]");
	new hid = params[0];
	if(hid>= TotalHouse || hid < 1) return 1;
	AC_SetPlayerPos(playerid,gHouses[hid][houseX],gHouses[hid][houseY],gHouses[hid][houseZ]);
	SetPlayerFacingAngle(playerid, gHouses[hid][houseA]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return 1;
}

CMD:chatsms(playerid)
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(GetPVarInt(playerid, "BigEarSms") != 1) SetPVarInt(playerid, "BigEarSms",1),SCM(playerid, CGRAD2, "Слушать смс чат ON");
	else if (GetPVarInt(playerid, "BigEarSms") == 1) SetPVarInt(playerid, "BigEarSms",0),SCM(playerid, CGRAD2, "Слушать смс чат OFF");
	return 1;
}

CMD:chatpm(playerid)
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(GetPVarInt(playerid, "ChatPM") != 1) SetPVarInt(playerid, "ChatPM",1),SCM(playerid, CGRAD2, "Слушать PM чат ON");
	else if (GetPVarInt(playerid, "ChatPM") == 1) SetPVarInt(playerid, "ChatPM",0),SCM(playerid, CGRAD2, "Слушать PM чат OFF");
	return 1;
}
CMD:showmehq(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		if(sscanf(params,"i",params[0])) return SendInf(playerid, "/showmehq [1-7]");
		else if(params[0] >= 8 || params[0] == 0) return SendErr(playerid, "Неверный номер. Используйте /showmehq [1-7]");
		else if(params[0] == 1)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили убежище наемников на карте, используйте /hint чтобы войти в него на месте");
			GameTextForPlayer(playerid, "~w~[1]~r~HQ", 5000, 1);
			SetPlayerGPS(playerid,80,-418.9500, -1759.2600, 6.2200, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
		else if(params[0] == 2)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили убежище наемников на карте, используйте /hint чтобы войти в него на месте");
			GameTextForPlayer(playerid, "~w~[2]~r~HQ", 5000, 1);
			SetPlayerGPS(playerid,80,811.0877, -564.4938, 16.3359, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
		else if(params[0] == 3)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили тайник наемников на карте, используйте /hint возле него, чтобы забрать оружие");
			GameTextForPlayer(playerid, "~w~[3]~r~drop", 5000, 1);
			SetPlayerGPS(playerid,80,1415.7279, -1299.3710, 15.0546, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
		else if(params[0] == 4)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили убежище наемников на карте, используйте /hint чтобы войти в него на месте");
			GameTextForPlayer(playerid, "~w~[4]~r~HQ", 5000, 1);
			SetPlayerGPS(playerid,80,-1979.0654,426.9077,24.6145, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
		else if(params[0] == 5)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили убежище наемников на карте, используйте /hint чтобы войти в него на месте");
			GameTextForPlayer(playerid, "~w~[5]~r~HQ", 5000, 1);
			SetPlayerGPS(playerid,80,-740.1547,1602.3281,27.1172, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
		else if(params[0] == 6)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили убежище наемников на карте, используйте /hint чтобы войти в него на месте");
			GameTextForPlayer(playerid, "~w~[6]~r~HQ", 5000, 1);
			SetPlayerGPS(playerid,80,1126.3776,1998.6783,10.8203, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
		else if(params[0] == 7)
		{
			SCM(playerid, COLOR_GREY, "Вы отметили убежище наемников на карте, используйте /hint чтобы войти в него на месте");
			GameTextForPlayer(playerid, "~w~[7]~r~HQ", 5000, 1);
			SetPlayerGPS(playerid,80,326.2093,-1337.6958,17.9531, 6,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
	}
	return 1;
}
ALT:hitmansinterior:hint;
CMD:hitmansinterior(playerid, params[])
{
	if(p_info[playerid][tMember] == 23)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -418.95, -1759.26, 6.22 )) // Дом на окраине ЛС
		{
			SetPlayerVirtualWorld(playerid, 666420);
			SetPlayerInterior(playerid, 6);
			AC_SetPlayerPos(playerid, -68.8239,1351.4331,1080.6257);
			SetPlayerFacingAngle(playerid, 160);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2323.3135, 7.6760, 26.5640)) // Dillimore
		{
			SetPlayerVirtualWorld(playerid, 666421);
			SetPlayerInterior(playerid, 6);
			AC_SetPlayerPos(playerid, -68.8239,1351.4331,1080.6257);
			SetPlayerFacingAngle(playerid, 160);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1979.0654,426.9077,24.6145)) // Подземная парковка
		{
			SetPlayerVirtualWorld(playerid, 666422);
			SetPlayerInterior(playerid, 1);
			AC_SetPlayerPos(playerid, 2204.6428,1551.9387,1008.6310);
			SetPlayerFacingAngle(playerid, 160);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, -740.1547,1602.3281,27.1172)) // Дом в пустыне
		{
			SetPlayerVirtualWorld(playerid, 666423);
			SetPlayerInterior(playerid, 1);
			AC_SetPlayerPos(playerid, 243.7682,304.8524,999.1484);
			SetPlayerFacingAngle(playerid, 160);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1126.3776,1998.6783,10.8203)) // Мясная лавка
		{
			SetPlayerVirtualWorld(playerid, 666424);
			SetPlayerInterior(playerid, 1);
			AC_SetPlayerPos(playerid, 964.8469,2107.8076,1011.0303);
			SetPlayerFacingAngle(playerid, 160);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 326.2093,-1337.6958,17.9531)) // BDSM
		{
			SetPlayerVirtualWorld(playerid, 666425);
			SetPlayerInterior(playerid, 6);
			AC_SetPlayerPos(playerid, 343.9711,304.9871,999.1484);
			SetPlayerFacingAngle(playerid, 160);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -68.845336914063, 1351.3386230469, 1079.2109375 ) && (GetPlayerVirtualWorld(playerid) == 666420)) // ВЫХОДЫ
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid, -418.95, -1759.26, 6.22);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -68.845336914063, 1351.3386230469, 1079.2109375 ) && (GetPlayerVirtualWorld(playerid) == 666421))
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid, 2323.3135, 7.6760, 26.5640);
			SetPlayerFacingAngle(playerid, 265.11);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2204.6428,1551.9387,1008.6310 ) && (GetPlayerVirtualWorld(playerid) == 666422))
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid, -1979.0654,426.9077,24.6145);
			SetPlayerFacingAngle(playerid, 265.11);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 243.7682,304.8524,999.1484 ) && (GetPlayerVirtualWorld(playerid) == 666423))
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid, -740.1547,1602.3281,27.1172);
			SetPlayerFacingAngle(playerid, 265.11);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 964.8469,2107.8076,1011.0303 ) && (GetPlayerVirtualWorld(playerid) == 666424))
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid, 1126.3776,1998.6783,10.8203);
			SetPlayerFacingAngle(playerid, 265.11);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 343.9711,304.9871,999.1484 ) && (GetPlayerVirtualWorld(playerid) == 666425))
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			AC_SetPlayerPos(playerid, 326.2093,-1337.6958,17.9531);
			SetPlayerFacingAngle(playerid, 265.11);
			SetCameraBehindPlayer(playerid);
		}
	}
	return 1;
}
ALT:hitmanmegaphone:hitm;
CMD:hitmanmegaphone(playerid,params[])
{
	if(p_info[playerid][pMuteTime]>1) return SendErr(playerid, "У вас бан чата");
	else if(p_info[playerid][tMember] != 23) return SendErr(playerid, "Вам недоступна эта команда");
	else if(p_info[playerid][tRank] < 3) return SendErr(playerid, "Доступно с 3-го ранга");
	else if(sscanf(params,"s[100]",params[0])) return SendInf(playerid, "Используйте: (/hit)man(m)egaphone [текст]");

	format(stringer, 144, "{{ [Мегафон] %s: %s }}", NamePlayer[playerid], params[0]);
	SendStreamMessage(80.0, playerid, stringer,COLOR_YELLOW);
	return 1;
}
CMD:contract(playerid, params[])
{
	if(GetPVarInt(playerid,"PlayerCuffed") == 1) return SendErr(playerid, "Вы не можете заказать человека, будучи в наручниках.");
	if(p_info[playerid][pJailTime] > 0) return SendErr(playerid, "Вы не можете сделать заказ из камеры.");

	new string[128], giveplayerid, moneys, detail[32];
	if(sscanf(params, "uds[32]", giveplayerid, moneys, detail)) return SendInf(playerid, "Используйте: /contract [id] [сумма] [детали]");

	if (!IsPlayerConnected(giveplayerid)) return SendErr(playerid, "Неверный ID.");
	else if( moneys < 20000 || moneys > 10000000) return SendErr(playerid, "Сумма контракта не может быть дешевле $20.000 или дороже $10.000.000.");
	else if((moneys < 15000 || moneys > 10000000) && IsACop(playerid)) return SendErr(playerid, "Заказать сотрудника государственной организации можно только от $15.000");
	else if(p_info[playerid][pLevel] < 3) return SendErr(playerid, "У вас недостаточный уровень для того, чтобы заказать игрока ( требуется 3-ий ).");
	else if(p_info[giveplayerid][pLevel] < 3) return SendErr(playerid, "Игрок, которого вы хотите заказать, еще не достиг 3-го лвл'а. Заказ отменен.");
	else if(p_info[giveplayerid][tMember] == 23 || p_info[giveplayerid][pAdmin] >= 1)
	{
		SendErr( playerid, "Заказать игрока невозможно." );
	}
	else
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if( moneys >= 10000001 )
			{
				SendErr( playerid, "Максимальная сумма заказа - $10,000,000!" );
				return 1;
			}

			if( p_info[giveplayerid][pHeadValue] >= 10000000 )
			{
				SendErr( playerid, "Сумма заказа этого человека достигла максимума." );
				return 1;
			}
			if(moneys + p_info[giveplayerid][pHeadValue] >= 10000001 )
			{
				SendErr( playerid, "Сумма заказа этого человека достигла максимума." );
				return 1;
			}

			if(giveplayerid == playerid) { SendErr(playerid, "Вы не можете заказать себя."); return 1; }
			new playermoney = p_info[playerid][pCash];
			if (moneys > 0 && playermoney >= moneys)
			{
				if(strlen(detail) > 32) return SendErr(playerid, "Вы превысили лимит (32 символа) в описании к контракту.");
				p_info[playerid][pCash] -= moneys;
				p_info[giveplayerid][pHeadValue]+=moneys;
				strmid(p_info[giveplayerid][pContractBy], GetPlayerNameEx(playerid), 0, strlen(GetPlayerNameEx(playerid)), MAX_PLAYER_NAME);
				strmid(p_info[giveplayerid][pContractDetail], detail, 0, strlen(detail), 32);
				format(string, sizeof(string), "%s заказал %s за $%d, детали: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
				SendFamilyMessage(23, COLOR_YELLOW, string);
				format(string, sizeof(string), "* Вы закали голову игрока %s за $%d, детали: %s.",GetPlayerNameEx(giveplayerid), moneys, detail);
				SCM(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "[hitmans contract] %s заказал голову %s за $%d, детали: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
				AdmMes(COLOR_GREY,string,4);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				UpdateMoney(playerid);
				UpdatePlayerData(giveplayerid,"pHeadValue",p_info[giveplayerid][pHeadValue]);
				new save_contact[512];
				format(save_contact,512,"UPDATE `accounts` SET `pContractBy` = '%s', `pContractDetail` = '%s' WHERE `ID` = '%d'",p_info[giveplayerid][pContractBy],p_info[giveplayerid][pContractDetail],p_info[giveplayerid][pID]);
				mysql_pquery(connects,save_contact,"","");
			}
			else
			{
				SendErr(playerid, "У вас нет денег на это.");
			}
		}
	}
	return 1;
}
CMD:order(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы не можете использовать это в автомобиле.");
		if(IsPlayerInRangeOfPoint(playerid, 4.0, -71.419654846191,1360.4097900391,1080.2185058594)
		|| IsPlayerInRangeOfPoint(playerid, 6.0, 962.9583,2101.9265,1011.0272)
		|| IsPlayerInRangeOfPoint(playerid, 6.0, 2216.0776,1574.8546,999.9702)
		|| IsPlayerInRangeOfPoint(playerid, 6.0, 249.2551,302.1152,999.1484)
		|| IsPlayerInRangeOfPoint(playerid, 6.0, 1415.727905, -1299.371093, 15.054657)
		|| IsPlayerInRangeOfPoint(playerid, 6.0, 349.5699,304.5612,999.1484))
		{
			new Hitman[32], skin = -1;
			if(sscanf(params, "s[32]D", Hitman, skin))
			{
				SendInf(playerid, "Используйте: /order [наименование]");
				SCM(playerid, CGRAY, " 1 ранг: Knife ($800), SDPistol ($1000), Shotgun ($1500), Skin ($2500), Deagle ($5000), MP5 ($2500), Armour ($6000), Healme ($500)");
				SCM(playerid, CGRAY, " 3 ранг: Rifle ($3000), AK47 ($10,000), M4 ($12,000)");
				SCM(playerid, CGRAY, " 6 ранг: SPAS12 ($35,000), Sniper ($35,000)");
				SCM(playerid, CGRAY, " 9 ранг: C4 ($15,000)");
				return 1;
			}
			else if(strcmp(Hitman,"skin",true) == 0)
			{
				if(p_info[playerid][tRank] < 1) {
					SendErr(playerid, "Вашего ранга недостаточно!");
				}
				else if(skin > 310 || skin < 1 || skin == 74) {
					SendInf(playerid, "Используйте: /order skin [skin ID]");
				}
				else if(p_info[playerid][pCash] >= 2500) {
					SetPlayerSkin(playerid, skin);
					p_info[playerid][pModel] = skin;
					p_info[playerid][pCash] -= 2500;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили себе маскировочный скин!");
				}
				else SendErr(playerid, "Вы не можете позволить себе это!");
			}
			else if(strcmp(Hitman,"Knife",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 800)
				{
					AC_GivePlayerWeapon(playerid, 4, 3);
					p_info[playerid][pCash] -= 800;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили нож!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Healme",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 500)
				{
					AC_SetPlayerHealth(playerid, 100);
					p_info[playerid][pCash] -= 500;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили аптечку и использовали ее!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"SDPistol",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 1000)
				{
					AC_GivePlayerWeapon(playerid, 23, 800);
					p_info[playerid][pCash] -= 1000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили пистолет с глушителем!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Shotgun",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 1500)
				{
					AC_GivePlayerWeapon(playerid, 25, 800);
					p_info[playerid][pCash] -= 1500;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили дробовик!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Deagle",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] > 5000)
				{
					AC_GivePlayerWeapon(playerid, 24, 800);
					p_info[playerid][pCash] -= 5000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили пустынный орел!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"MP5",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 2500)
				{
					AC_GivePlayerWeapon(playerid, 29, 800);
					p_info[playerid][pCash] -= 2500;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили МП5!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Rifle",true) == 0)
			{
				if(p_info[playerid][tRank] < 3)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 3000)
				{
					AC_GivePlayerWeapon(playerid, 33, 800);
					p_info[playerid][pCash] -= 3000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили винтовку!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"AK47",true) == 0)
			{
				if(p_info[playerid][tRank] < 3)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 10000)
				{
					AC_GivePlayerWeapon(playerid, 30, 800);
					p_info[playerid][pCash] -= 10000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили автомат АК-47!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"M4",true) == 0)
			{
				if(p_info[playerid][tRank] < 3)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 12000)
				{
					AC_GivePlayerWeapon(playerid, 31, 800);
					p_info[playerid][pCash] -= 12000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили автомат M4!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Armour",true) == 0)
			{
				if(p_info[playerid][tRank] < 1)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 6000)
				{
					AC_SetPlayerArmour(playerid, 99);
					p_info[playerid][pCash] -= 6000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили бронежилет!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Spas12",true) == 0)
			{
				if(p_info[playerid][tRank] < 6)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 35000)
				{
					AC_GivePlayerWeapon(playerid, 27, 800);
					p_info[playerid][pCash] -= 35000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили дробовик SPAS-12!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Sniper",true) == 0)
			{
				if(p_info[playerid][tRank] < 6)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 35000)
				{
					AC_GivePlayerWeapon(playerid, 34, 800);
					p_info[playerid][pCash] -= 35000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили снайперскую винтовку!");
					return 1;
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"C4",true) == 0)
			{
				if(p_info[playerid][tRank] < 9)
				{
					SendErr(playerid, "Вашего ранга недостаточно!");
					return 1;
				}
				if(p_info[playerid][pCash] >= 15000)
				{
					p_info[playerid][pC4Get] = 1;
					p_info[playerid][pBombs]++;
					UpdatePlayerData(playerid,"pBombs",p_info[playerid][pBombs]);
					p_info[playerid][pCash] -= 15000;
					UpdateMoney(playerid);
					SCM(playerid, COLOR_LIGHTBLUE,"Вы купили один блок C4!");
				}
				else
				{
					SendErr(playerid, "Вы не можете позволить себе это!");
					return 1;
				}
			}
		}
		else
		{
			SendErr(playerid, "Вы не у места, где можно забрать оружие!");
			return 1;
		}
	}
	else
	{
		SendErr(playerid, "Недоступно для вас!");
		return 1;
	}
	return 1;
}



ALT:pcb:placecarbomb;
CMD:pcb(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		if (p_info[playerid][pC4] == INVALID_OBJECT)
		{
			if (p_info[playerid][pBombs] != 0)
			{
				new carid = GetPlayerVehicleID(playerid);
				new closestcar = GetClosestCar(playerid, carid);
				if(PlayerToPoint(4.0, playerid, gVehicles[closestcar-1][veX], gVehicles[closestcar-1][veY], gVehicles[closestcar-1][veZ]))
				{
					if(VehicleBomb{closestcar} == 1)
					{
						SendErr(playerid, "Автомобиль уже заминирован!");
						return 1;
					}
					VehicleBomb{closestcar} = 1;
					PlacedVehicleBomb[playerid] = closestcar;
					FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					SCM(playerid, COLOR_GREEN, "Вы заминировали автомобиль, /pickupbomb чтобы убрать взрывчатку.");
					p_info[playerid][pC4] = 1;
					p_info[playerid][pBombs]--;
					UpdatePlayerData(playerid,"pBombs",p_info[playerid][pBombs]);
					p_info[playerid][pC4Used] = 2;
				}
				else
				{
					SendErr(playerid, "Вы далеко от транспортного средства!");
					return 1;
				}
			}
			else
			{
				SendErr(playerid, "У вас нет C4!");
				return 1;
			}
		}
		else
		{
			SendErr(playerid, "Вы можете установить только одну взрывчатку C4!");
			return 1;
		}
	}
	else
	{
		SendErr(playerid, "Недоступно для вас!");
	}
	return 1;
}

ALT:pb:plantbomb;
CMD:pb(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		if (p_info[playerid][pC4] == INVALID_OBJECT)
		{
			if (p_info[playerid][pBombs] != 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SendErr(playerid, "Вы не можете заложить C4, будучи в автомобиле!");
					SendErr(playerid, "Для закладки C4 в автомобиль используйте /pcb возле транспорта!");
					return 1;
				}
				GetPlayerPos(playerid,Positions[0][0], Positions[0][1], Positions[0][2]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_X", Positions[0][0]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_Y", Positions[0][1]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_Z", Positions[0][2]);
				p_info[playerid][pC4] = CreateDynamicObject(1654, Positions[0][0], Positions[0][1], Positions[0][2]-0.9, 0, 89.325012207031, 3.9700012207031);
				FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
				FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
				SCM(playerid, COLOR_GREEN, "Вы заложили взрывчатку C4 на землю, /pickupbomb чтобы убрать ее.");
				//PlayerInfo[playerid][pC4] = 1;
				p_info[playerid][pBombs]--;
				UpdatePlayerData(playerid,"pBombs",p_info[playerid][pBombs]);
				p_info[playerid][pC4Used] = 1;
			}
			else
			{
				SendErr(playerid, "У вас нет C4!");
				return 1;
			}
		}
		else
		{
			SendErr(playerid, "Вы можете заложить только один пакет C4 одновременно!");
			return 1;
		}
	}
	else
	{
		SendErr(playerid, "Недоступно для вас!");
	}
	return 1;
}

ALT:pickupbomb:pub;
CMD:pickupbomb(playerid, params[])
{
	if (p_info[playerid][tMember] != 23)
	{
		SendErr(playerid, "Недоступно для вас!");
		return 1;
	}
	if (p_info[playerid][pC4] == INVALID_OBJECT)
	{
		SendErr(playerid, "У вас нет заложенной бомбы!");
		return 1;
	}
	new carid = GetPlayerVehicleID(playerid);
	new closestcar = GetClosestCar(playerid, carid);
	if(PlayerToPoint(4.0, playerid, gVehicles[closestcar-1][veX], gVehicles[closestcar-1][veY], gVehicles[closestcar-1][veZ]) && VehicleBomb{closestcar} == 1)
	{
		VehicleBomb{closestcar} = 0;
		PlacedVehicleBomb[playerid] = INVALID_VEHICLE_ID;
		PickUpC4(playerid);
		SCM(playerid, COLOR_GREEN, "Бомба успешно поднята.");
		p_info[playerid][pBombs]++;
		UpdatePlayerData(playerid,"pBombs",p_info[playerid][pBombs]);
		p_info[playerid][pC4Used] = 0;
		p_info[playerid][pC4Get] = 1;
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z")))
	{
		PickUpC4(playerid);
		SCM(playerid, COLOR_GREEN, "Бомба успешно поднята.");
		p_info[playerid][pBombs]++;
		UpdatePlayerData(playerid,"pBombs",p_info[playerid][pBombs]);
		p_info[playerid][pC4Used] = 0;
		p_info[playerid][pC4Get] = 1;
		return 1;
	}
	return 1;
}

CMD:myc4(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		new string[128];

		if (p_info[playerid][pBombs] > 0)
		{
			format(string, sizeof(string), "У вас %i C4 в инвентаре.", p_info[playerid][pBombs]);
		}
		else
		{
			format(string, sizeof(string), "У вас нет ни одной C4.");
		}

		SCM(playerid, CGRAY, string);
	}

	return 1;
}

CMD:ranks(playerid, params[])
{
	if (p_info[playerid][tMember] != 23 && p_info[playerid][pAdmin] < 10) return SendErr(playerid, "Недоступно для вас!");
	SCM(playerid, COLOR_WHITE, "|__________________ Список рангов __________________|");
	new string[128];
	foreach(i)
	{
		if(p_info[i][tMember] == 23)
		{
			if( GoChase[i] == INVALID_PLAYER_ID )
			{
				format(string, sizeof(string), "* Имя: %s | Ранг %d | Выполнено заказов: %d | Провалено заказов: %d", NamePlayer[i],p_info[i][tRank], p_info[i][pCHits], p_info[i][pFHits]);
				SCM(playerid, COLOR_GREY, string);
			}
			else
			{
				format(string, sizeof(string), "* Имя: %s | Ранг %d | Выполнено заказов: %d | Провалено заказов: %d | Преследует: %s", NamePlayer[i],p_info[i][tRank], p_info[i][pCHits], p_info[i][pFHits], NamePlayer[GoChase[i]]);
				SCM(playerid, COLOR_GREY, string);
			}
		}
	}
	return 1;
}

CMD:givehit(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		if(p_info[playerid][tRank] < 11)
		{
			SendErr(playerid, "Только директор и его заместители могут выдавать заказы на убийство!");
			return 1;
		}

		new string[128], giveplayerid, targetid;
		if(sscanf(params, "uu", giveplayerid, targetid)) return SendInf(playerid, "Используйте: /givehit [id наемника] [id цели]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GoChase[giveplayerid] != INVALID_PLAYER_ID)
			{
				SendErr(playerid, "Этот наемник уже занят выполнением контракта!");
				return 1;
			}
			if(!IsPlayerConnected(targetid))
			{
				SendErr(playerid, "Игрок не в сети!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendErr(playerid, "Убийством этой цели уже занялся другой наемник!");
				return 1;
			}
			if(IsPlayerConnected(targetid))
			{
				if(p_info[targetid][pHeadValue] == 0)
				{
					SendErr(playerid, "На эту цель нет контракта, преследование невозможно!");
					return 1;
				}

				format(string, sizeof(string), "* Вы выдали %s контракт на убийство %s.", NamePlayer[giveplayerid], NamePlayer[targetid]);
				SCM(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Хитман %s выдал вам контракт на убийство %s (введите (/a)ccept(contract), чтобы принять его).", NamePlayer[playerid], NamePlayer[targetid]);
				SCM(giveplayerid, COLOR_LIGHTBLUE, string);
				HitOffer[giveplayerid] = playerid;
				HitToGet[giveplayerid] = targetid;
				return 1;
			}
			else
			{
				SCM(playerid, COLOR_GREY, "Заказанный игрок оффлайн, введите /contracts!");
				return 1;
			}
		}
		else
		{
			SCM(playerid, COLOR_GREY, "Этот хитман оффлайн!");
			return 1;
		}
	}
	return 1;
}

CMD:givemehit(playerid, params[])
{
	if (p_info[playerid][tMember] == 23)
	{
		new string[128], targetid;
		if(sscanf(params, "u", targetid)) return SendInf(playerid, "Используйте: /givemehit [id цели]");

		if(IsPlayerConnected(targetid))
		{
			if(GoChase[playerid] != INVALID_PLAYER_ID)
			{
				SendErr(playerid, "Вы уже заняты другим контрактом!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendErr(playerid, "Контракт уже выполняется другим наемником!");
				return 1;
			}
			if(p_info[targetid][pHeadValue] == 0)
			{
				SendErr(playerid, "Эта цель не заказана, преследование невозможно!");
				return 1;
			}
			format(string, sizeof(string), "* Вы хотите взять контракт на убийство %s. (введите (/a)ccept(contract))", NamePlayer[targetid]);
			SCM(playerid, COLOR_LIGHTBLUE, string);
			HitOffer[playerid] = playerid;
			HitToGet[playerid] = targetid;
			return 1;
		}
		else
		{
			SendErr(playerid, "Заказанный игрок оффлайн, введите /contracts!");
			return 1;
		}
	}
	return 1;
}

ALT:acceptcontract:acontract;
CMD:acceptcontract(playerid, params[])
{
	if(HitOffer[playerid] != INVALID_PLAYER_ID)
	{
		if(HitToGet[playerid] != INVALID_PLAYER_ID)
		{
			if(IsPlayerConnected(HitToGet[playerid]))
			{
				new szMessage[128];
				format(szMessage, sizeof(szMessage), "* %s принял контракт на убийство %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(HitToGet[playerid]));
				SCM(HitOffer[playerid], COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), "* Вы приняли контракт на убийство %s, вы получите $%d если все пройдет успешно.", GetPlayerNameEx(HitToGet[playerid]), (p_info[HitToGet[playerid]][pHeadValue] / 4) * 3);
				SCM(playerid, COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), "%s принял контракт на убийство %s, за $%d.", GetPlayerNameEx(playerid), GetPlayerNameEx(HitToGet[playerid]),  (p_info[HitToGet[playerid]][pHeadValue] / 4) * 3);
				SendFamilyMessage(23, COLOR_YELLOW, szMessage);
				GoChase[playerid] = HitToGet[playerid];
				GetChased[HitToGet[playerid]] = playerid;
				GotHit[HitToGet[playerid]] = 1;
				HitToGet[playerid] = INVALID_PLAYER_ID;
				HitOffer[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			else
			{
				HitToGet[playerid] = INVALID_PLAYER_ID;
				HitOffer[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
		}
	}
	else
	{
		SendErr(playerid, "Никакой контракт не требует вашего подтверждения!");
	}
	return 1;
}

CMD:deletehit(playerid, params[])
{
	if( !(p_info[playerid][pAdmin] >= 10 || p_info[playerid][tMember] == 23) ) return 1;
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendInf(playerid, "Используйте: /deletehit [id]");
	if( p_info[playerid][tRank] <= 11 ) return SendErr(playerid, "Вашего ранга недостаточно!");
	if(!IsPlayerConnected(giveplayerid)) return SendErr(playerid, "Контракт оффлайн.");
	if(!(p_info[giveplayerid][pHeadValue] >= 1)) return SendErr( playerid, "Игрок не заказан!" );
	p_info[giveplayerid][pHeadValue] = 0;
	format(string, sizeof(string), "%s удалил контракт на %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	SendFamilyMessage(23, COLOR_GREY, string);
	format(string, sizeof(string), "Вы обнулили контракт на убийство %s.", GetPlayerNameEx(giveplayerid) );
	SCM(playerid, COLOR_WHITE, string);
	GoChase[giveplayerid] = INVALID_PLAYER_ID;
	foreach(i)
	{
		if( HitToGet[i] == giveplayerid )
		{
			HitToGet[i] = INVALID_PLAYER_ID;
			HitOffer[i] = INVALID_PLAYER_ID;
		}
	}

	return 1;
}
ALT:cancelcontract:ccontract;
CMD:cancelcontract(playerid, params[])
{
	if(p_info[playerid][tMember] != 23) return SendErr(playerid, "Недоступно для вас!");
	if(sscanf(params,"s[100]",params[0])) return SendInf(playerid, " Используйте: (/c)ancel(contract) [причина]");
	new Float:health;
	GetPlayerHealth(playerid, health);
	new hpint = floatround( health, floatround_round );
	if (GoChase[playerid] == INVALID_PLAYER_ID)
	{
		return SendErr(playerid, "У вас нет открытого контракта.");
	}
	if (hpint >=  80)
	{
		new string[128];
		format(string, sizeof(string), "Вы отказались от контракта на убийство %s.", GetPlayerNameEx(GoChase[playerid]));
		SCM(playerid, COLOR_WHITE, string);
		HitToGet[playerid] = INVALID_PLAYER_ID;
		HitOffer[playerid] = INVALID_PLAYER_ID;
		GetChased[GoChase[playerid]] = INVALID_PLAYER_ID;
		GotHit[GoChase[playerid]] = 0;
		format(string, sizeof(string), "%s отказался от контракта на %s по причине: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(GoChase[playerid]), params[0]);
		SendFamilyMessage(23, COLOR_GREY, string);
		GoChase[playerid] = INVALID_PLAYER_ID;
	}
	else return SendErr(playerid, "Вы не можете отменить контракт, имея меньше 80 процентов здоровья!");
	return 1;
}
CMD:contracts(playerid, params[])
{
	if(p_info[playerid][tMember] == 23 || p_info[playerid][pAdmin] >= 10 ) SearchingHit(playerid);
	return 1;
}
CMD:spy(playerid)
{
	if(p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 23) return SendErr(playerid, "Вы не агент FBI / Хитман");
	if(GetPVarInt(playerid,"mask"))
	{
		SetPlayerSkin(playerid,p_info[playerid][pModel]);
		SetPlayerColorAc(playerid, p_info[playerid][tMember]);
		DeletePVar(playerid,"mask");
		return 1;
	}
	if((p_info[playerid][tRank] < 2 && p_info[playerid][tMember]==2) || (p_info[playerid][tRank] < 6 && p_info[playerid][tMember]==23)) return SendErr(playerid, "Команда не доступна");
	stringer = "{"#cWHITE"}";
	for (new i = 0; i <fraction_amount; i ++)
	{
		format(stringer, 1500, "%s%s\n", stringer, f_info[i][f_name]);
	}
	ShowPlayerDialog(playerid, dSpy, DIALOG_STYLE_LIST, "Выберите фракцию", stringer, "Выбрать", "Закрыть");
	return 1;
}


CMD:makeleader(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 11) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(!uAdmin[playerid][12]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(GetPVarInt(playerid, "makeleader_time") > unix)
	{
		format(stringer, 128, "Ограничение по /makeleader 5 минут. Осталось: %d секунд.", GetPVarInt(playerid, "makeleader_time")-unix);
		SCM(playerid,COLOR_GREY,stringer);
		return 1;
	}
	if(sscanf(params,"dd",params[0],params[1]))
	{
		SendInf(playerid, "/makeleader [playerid] [номер фракции]");
		return true;
	}
	if(params[1] > fraction_amount || params[1] < 1) return SendErr(playerid, "Нельзя меньше 1 или больше 26");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendErr(playerid, "Игрок не в сети");
	if(p_info[params[0]][tMember] > 0) return SendErr(playerid, "Игрок в фракции");
	if(p_info[params[0]][pWarns] >= 1) return SendErr(playerid, "У игрока есть предупреждение");
	GetFrak(playerid,params[1],1146);
	SetPVarInt(playerid,"mkl",params[0]);
	SetPVarInt(playerid,"level",params[1]);
	return 1;
}

CMD:demote(playerid, params[])
{
	new player_member = p_info[playerid][tMember];

	switch(player_member)
	{
		case F_FBI:
		{
		    if(p_info[playerid][tRank] < 9)
		        return SendErr(playerid,"Доступно с 9 ранга");
		}
		case F_DEPJUST:
		{
			if(p_info[playerid][tRank] < 8)
				return SendErr(playerid,"Доступно с 8 ранга");
		}
		default:
			return SendErr(playerid,"Нет доступа");
	}
	if(!start_work[playerid])
		return SendErr(playerid,"Вам необходимо начать рабочий день на базе организаций");

	new giveplayerid;
	if(sscanf(params,"u",giveplayerid))
		return  SendInf(playerid, "/demote [id]");

	if(giveplayerid == INVALID_PLAYER_ID)
		return SendErr(playerid,"Игрок оффлайн");

	if(p_info[giveplayerid][tLeader])
		return SendErr(playerid,"Вы не можете уволить лидера");

	new giveplayer_member = p_info[giveplayerid][tMember];

	switch(giveplayer_member)
	{
		case F_SAPD, F_FBI, F_NAVY, F_DEPJUST,
		F_CHSF, F_CHLV, F_PMC, F_NATGUARD,
		F_SWAT, F_JTTF, F_WHOUSE :{}
		default:
			return SendErr(playerid, "Этот человек не состоит в армии/ПД/МЧС");
	}

	new rankdemote = p_info[giveplayerid][tRank];

	if((rankdemote >= 10 || rankdemote <= 1) && !p_info[playerid][tLeader])
				return SendErr(playerid,"У этого человека ранг больше 9 или меньше 2");

	rankdemote --;
	if(!rankdemote)
	{
		switch(giveplayer_member)
		{
			case F_SAPD, F_PMC, F_SWAT:
			{
				ChangePlayerFraction(giveplayerid, 19);

				p_info[giveplayerid][tRank] = 3;
				AC_ResetPlayerWeapons(giveplayerid);
				p_info[giveplayerid][pJob] = 0;
				p_info[giveplayerid][pModel] = GetPVarInt(giveplayerid,"InviteSkin");
				start_work[ giveplayerid ] = 0;

				UpdatePlayerData(giveplayerid,"tRank",p_info[giveplayerid][tRank]);
				SetPVarInt(giveplayerid,"InviteSkin", (p_info[giveplayerid][pSex] == 1) ? (287) : (141));
				UpdatePlayerData(giveplayerid,"pModel",p_info[giveplayerid][pModel]);
				SetPlayerColorAc(giveplayerid,p_info[giveplayerid][tMember]);
				SetPlayerSkin(giveplayerid, GetPVarInt(giveplayerid,"InviteSkin"));
				UpdatePlayerData(giveplayerid, "start_work", start_work[giveplayerid]);

				SCM(giveplayerid,CBLUE,"Рабочий день окончен");
				format(stringer, sizeof(stringer), "%s перевел вас обратно в армию", NamePlayer[playerid]);
				SCM(giveplayerid, 0x6ab1ffaa, stringer);
				format(stringer, sizeof(stringer), "Вы перевели %s обратно в армию", NamePlayer[giveplayerid],rankdemote);
				SCM(playerid, 0x6ab1ffaa, stringer);
				format(stringer, sizeof(stringer)," %s перевел обратно в армию %s . Причина : /demote",NamePlayer[playerid],NamePlayer[giveplayerid]);
				WriteLog ( TYPE_LOG_INV , stringer , p_info[playerid][tMember] ) ;

				return 1;
			}
		}
		p_info[giveplayerid][tRank] = 0;
		UpdatePlayerData(giveplayerid,"tRank",p_info[giveplayerid][tRank]);
		ChangePlayerFraction(giveplayerid, 0);

		p_info[giveplayerid][tLeader] = 0;
		UpdatePlayerData(giveplayerid,"tLeader",p_info[giveplayerid][tLeader]);

		p_info[giveplayerid][pSubLeader] = 0;
		UpdatePlayerData(giveplayerid,"pSubLeader",p_info[giveplayerid][pSubLeader]);

		AC_SetPlayerArmour(giveplayerid,0);
		AC_ResetPlayerWeapons(giveplayerid);
		SetPlayerColorAc(giveplayerid,p_info[giveplayerid][tMember]);
		SetPlayerSkin(giveplayerid, p_info[giveplayerid][pChar]);

		format(stringer, sizeof(stringer), "%s уволил вас из армии", NamePlayer[playerid]);
		SCM(giveplayerid, 0x6ab1ffaa, stringer);
		format(stringer, sizeof(stringer), "Вы снова гражданский", NamePlayer[playerid]);
		SCM(giveplayerid, 0x6ab1ffaa, stringer);
		SCM(giveplayerid,CBLUE,"Рабочий день окончен");

		start_work[ giveplayerid ] = 0;
		UpdatePlayerData(giveplayerid, "start_work", start_work[giveplayerid]);

		format(stringer, sizeof(stringer), "Вы уволили %s из армии", NamePlayer[giveplayerid]);
		SCM(playerid, 0x6ab1ffaa, stringer);
		format(stringer, sizeof(stringer)," %s уволил %s . Причина : /demote",NamePlayer[playerid],NamePlayer[giveplayerid]);
		WriteLog ( TYPE_LOG_UNINVITE , stringer , p_info[playerid][tMember]) ;

		return 1;
	}
	p_info[giveplayerid][tRank] = rankdemote;
	UpdatePlayerData(giveplayerid,"tRank",p_info[giveplayerid][tRank]);

	format(stringer, 128, "%s понизил вас до %d ранга", NamePlayer[playerid], rankdemote);
	SCM(giveplayerid, 0x6ab1ffaa, stringer);

	format(stringer, 128, "Вы понизили %s до %d ранга", NamePlayer[giveplayerid],rankdemote);
	SCM(playerid, 0x6ab1ffaa, stringer);

	format(stringer,255," %s понизил %s до %d. Причина : /demote", NamePlayer[playerid], NamePlayer[giveplayerid], rankdemote);
	WriteLog ( TYPE_LOG_GIVE_RANK , stringer , p_info[playerid][tMember] ) ;
	return 1;
}

///////// /lmenu


CMD:changerank(playerid,params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(p_info[playerid][pAdmin] < 11) return 1;
	if(!p_info[playerid][tMember]) return SendErr(playerid, "Сперва войдите в организацию. (/tempmember)");

	stringer[0] = EOS, strcat(stringer, ""nwhite"");
	for(new i = 1; i <= FractionRank[p_info[playerid][tMember]-1]; i++)
	{
		format(stringer,1500,"%s%s\n",stringer,GetRank(p_info[playerid][tMember],i));
	}
	ShowPlayerDialog(playerid,dEditRank,DIALOG_STYLE_LIST,""neworange"Выберите ранг",stringer,"Выбрать","Закрыть");
	return 1;
}

CMD:agiverank(playerid,params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(p_info[playerid][pAdmin] < 9) return 1;
	if(sscanf(params,"ii",params[0],params[1])) return SendInf(playerid, "/agiverank [id игрока] [номер ранга]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendErr(playerid, "Игрок не в сети");
	if(!p_info[params[0]][tMember]) return SendErr(playerid, "Игрок не в фракции");
	if(!p_info[playerid][tMember]) return SendErr(playerid, "Вы не в фракции");
	if(params[1] > (FractionRank[p_info[playerid][tMember]-1]) || params[1] < 1) return SendErr(playerid, "Неверный номер ранга");
	if(p_info[params[0]][tRank] < 1) return SendErr(playerid, "У игрока ранг меньше 1");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");

	stringer[0] = EOS;
	format(stringer, 300, "[A] %s изменил ранг игроку %s c %s на %s", NamePlayer[playerid],NamePlayer[params[0]],fRankName[p_info[params[0]][tMember]-1][p_info[params[0]][tRank]-1],fRankName[p_info[params[0]][tMember]-1][params[1]-1]);
	AdmMes(CADMIN_INFO,stringer,1);
	if ( playerid == params[0] )
	{
		stringer[0] = EOS;
		format(stringer, 300, "%s изменил ранг игроку %s c %s (%d) на %s (%d)", NamePlayer[playerid],NamePlayer[params[0]],fRankName[p_info[params[0]][tMember]-1][p_info[params[0]][tRank]-1],p_info[params[0]][tRank],fRankName[p_info[params[0]][tMember]-1][params[1]-1],params[1]);
		WriteLog(TYPE_LOG_AGIVERANK, stringer);
	}
	stringer[0] = EOS;
	format(stringer, 300, "Администратор %s изменил Вам ранг на %s (%d)",NamePlayer[playerid],fRankName[p_info[params[0]][tMember]-1][params[1]-1],params[1]);
	SendClientMessage(params[0], CNBLUE, stringer);

	p_info[params[0]][tRank] = params[1];
	UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
	return 1;
}

CMD:capoff(playerid)
{
	if(!start_work[playerid] || p_info[playerid][tMember] != 1) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
	RemovePlayerAttachedObject(playerid,3);
	return 1;
}

CMD:cap(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,8.0,257.8165,77.0322,1003.6406)) return 1;
	if(p_info[playerid][tMember] != 1) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	SetPlayerAttachedObject(playerid,3 , 18636, 2,0.131,0.045,0.00,0.0,90.0,96.0);
	SCM(playerid, CWHITE, "Чтобы снят Используйте: /capoff");
	return 1;
}

CMD:startpb(playerid)
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	if(PaintBallTime < ((2 * 60) +2) || PaintBallStatus) return 1;
	PaintBallTime = ((2 * 60) +2);
	return 1;
}

CMD:startrace(playerid, params[])
{
	new time_race, veh_race, veh_race_Cfirst, veh_race_Csecond;

	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(TimeRace < 121 || RaceStatus) return  SendClientMessage(playerid,COLOR_GREY,"В данный момент идёт гонка / регистрация на гонку");
	else if(sscanf(params,"iiii", time_race, veh_race, veh_race_Cfirst, veh_race_Csecond)) return SendClientMessage(playerid,COLOR_GREY, "/startrace [ время на регистрацию ] [ номер машины ] [ цвет 1 ] [ цвет 2 ]" ) ;
	else if(time_race > 120) return SendClientMessage(playerid,COLOR_GREY, "Максимум две минуты" ) ;

	stringer[0] = EOS;
	for(new i = 0; i < TotalRaces; i++)
	{
		format(stringer, 500,"%s%s\n",stringer,RaceName[i]);
	}

	SetPVarInt(playerid, "time_race" , time_race ) ;
	SetPVarInt(playerid, "veh_race" , veh_race ) ;
	SetPVarInt(playerid, "veh_race_Cfirst" , veh_race_Cfirst ) ;
	SetPVarInt(playerid, "veh_race_Csecond" , veh_race_Csecond ) ;

	ShowPlayerDialog(playerid,dRace,DIALOG_STYLE_LIST,"Выберите трассу",stringer,"Выбрать","Закрыть");
	return 1;
}

CMD:joinrace(playerid)
{
	if(GetPVarInt(playerid,"PlayerCuffed") == 1) return SendClientMessage(playerid,COLOR_GREY,"Нельзя");
	if( GetPlayerState ( playerid ) != 1 ) return SendClientMessage(playerid,COLOR_GREY,"Вы не должны быть в машине");
	else if ( !administrator_tp_race ) return SendClientMessage(playerid,COLOR_GREY,"Администратор не создавал телепортирование на гонку");
	else if ( GetPVarInt ( playerid, "RaceCar" ) ) return SendClientMessage(playerid,COLOR_GREY, "Вы уже на гонке");


	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);

	SetPVarFloat(playerid, "JoinRace_X", X);
	SetPVarFloat(playerid, "JoinRace_Y", Y);
	SetPVarFloat(playerid, "JoinRace_Z", Z);

	SetPVarInt(playerid,   "JoinRace_Interior", GetPlayerInterior(playerid));
	SetPVarInt(playerid,   "JoinRace_Virtual", GetPlayerVirtualWorld(playerid));

	CreateRaceText(playerid);
	//print ( "Itter_Add(PlayerRace, playerid)" ) ;
	//Itter_Add(PlayerRace, playerid);
	TotalRacePlayer++;
	SetPVarInt(playerid,"InRaces", TotalRacePlayer );
	format(stringer, 144,"Вы зарегистрировались на гонку под номером %d, ожидайте старта" , GetPVarInt(playerid, "InRaces"));
	SendClientMessage(playerid,-1,stringer);
	SendClientMessage(playerid,-1,"Если вы покинете помещение, тогда вы не попадете на гонку");

	new update_race_player[100];

	format(update_race_player,100,"~y~   TIME: ~w~00:00~n~~n~~n~~n~~n~~n~~n~~y~  POINT: ~w~0 / 0~n~~y~LOOP: ~w~0 / %d", RaceLoop[TypeRace]);
	PlayerTextDrawSetString(playerid,race_text[playerid][0],update_race_player);

	format(update_race_player, 32, "%d", GetPVarInt(playerid,"InRaces"));
	PlayerTextDrawSetString(playerid,race_text[playerid][1],update_race_player);

	format(stringer, 32, "%d", TotalRacePlayer);
	TextDrawSetString(race_back_text[3], stringer);

	for ( new i = 0; i < 5; i++)
	{
		TextDrawShowForPlayer(playerid,race_back_text[i]);
	}

	PlayerTextDrawShow(playerid,race_text[playerid][0]);
	PlayerTextDrawShow(playerid,race_text[playerid][1]);

	number_player = (number_player != 3) ? ( number_player + 1 ) : ( 0 ) ;

	new vehicle = CreateVehicleOP(vehicle_admin_race,
			SpawnCarRacePos[TypeRace][number_player][0],
			SpawnCarRacePos[TypeRace][number_player][1],
			SpawnCarRacePos[TypeRace][number_player][2],
			SpawnCarRacePos[TypeRace][number_player][3],
			vehicle_admin_race_color_first,vehicle_admin_race_color_second,600_000);

	SetPlayerInterior(playerid, 0);
	AC_LinkVehicleToInterior(vehicle, 0);
	AC_SetVehicleVirtualWorld(vehicle, number_world);
	SetPlayerVirtualWorld( playerid , number_world);

	AC_PutPlayerInVehicle(playerid,vehicle,0);
	print("create race car");
	SetPVarInt (playerid,"RaceCar", vehicle);

	DisablePlayerRaceCheckpoint(playerid);

	gVehicles[vehicle - 1][vFuel] += 50.0;

	RaceTime[playerid][0] = GetTickCount();
	RaceTime[playerid][1] = 0;

	if(number_player == 3) number_world ++;

	return 1;
}


CMD:lowlist(playerid)
{
	stringer = "{ffffff}#\tИмя\tОчки\n";
	for(new i = 0; i < 10; i++)
	{
		if(i<=2 && (strlen(LowRideWinners[i])>5))
			format(stringer,1000,"%s%i.\t%s - (%d{33aa33}${ffffff}) - (%d)\n",stringer,(i+1),(strlen(LowRideWinners[i])<5)?("-"):(LowRideWinners[i]), LowRideWinnersSum[i], lowride_list_score_desc[i]);
		else
			format(stringer,1000,"%s%i.\t%s - (%d)\n",stringer,(i+1),(strlen(LowRideWinners[i])<5)?("-"):(LowRideWinners[i]), lowride_list_score_desc[i]);
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{ffffff}Список победителей Low Co",stringer,"Закрыть","");
	return 1;
}

CMD:racelist(playerid)
{
	stringer = "{"#cWHITE"}#\tИмя\n";
	for(new i = 0; i < 24; i++)
	{
		format(stringer,2000,"%s%i.\t%s\n",stringer,(i+1),(strlen(RaceWinners[i])<5)?("-"):(RaceWinners[i]));
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Список победителей гонки",stringer,"Закрыть","");
	return 1;
}
CMD:mp(playerid)
{
    if( !GetPVarInt(playerid,"DJ") && p_info[playerid][pAdmin] == 0) return SendClientMessage(playerid,-1,"Вы не диджей");
	else if ( p_info[playerid][pAdmin] < 7 ) return SendClientMessage(playerid,-1,"Доступно с 7 уровня.");
	else if(!uAdmin[playerid][15]) return SendErr(playerid,"Данная функция отключена основателем.");
	ShowPlayerDialog(playerid, 5343, DIALOG_STYLE_LIST,"Создание МП","{"#cORANGE"}1.{"#cWHITE"} Раздать оружие(В радиусе 50)\n{"#cORANGE"}2.{"#cWHITE"} Раздать жизни(В радиусе 50)\n{"#cORANGE"}3.{"#cWHITE"} Обезаружить всех(В радиусе 50)", "Выбрать", "Отмена");
	return 1;
}

CMD:offgoto(playerid)
{
	if(p_info[playerid][pAdmin] < 8) return SCM(playerid, CWHITE, "Вы не уполномочены использовать эту команду!");
	else if (!GetPVarInt(playerid,"toggotome")) SetPVarInt(playerid,"toggotome", true), SCM(playerid, CBLUE, "Запрет включен!");
	else if (GetPVarInt(playerid,"toggotome")) DeletePVar(playerid,"toggotome"), SCM(playerid, CBLUE, "Запрет выключен !");
	return 1;
}

ALT:goto:g;
CMD:gotocarsddd(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, " Используйте: /gotocarsddd [id]");
	AC_SetPlayerPos(playerid, gVehicles [ params[0] - 1 ] [ veX ], gVehicles [ params[0] - 1 ] [ veY ], gVehicles [ params[0] - 1 ] [ veZ ] );
	return 1 ;
}

CMD:goto(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1 && !GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, " Используйте: /g(oto) [id игрока]");
	if (!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок не найден");
	if(GetPVarInt(params[0],"toggotome") && p_info[playerid][pAdmin] != 12) return SendErr(playerid,"Администратор запретил к нему телепортироваться");

	new Float:X, Float:Y, Float:Z, Float:A;

	switch(GetPlayerState(params[0]))
	{
		case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER:
		{
			GetVehiclePos(GetPlayerVehicleID(params[0]), X, Y, Z);
			GetVehicleZAngle(GetPlayerVehicleID(params[0]), A);
		}
		case PLAYER_STATE_ONFOOT:
		{
			GetPlayerPos(params[0], X, Y, Z);
			GetPlayerFacingAngle(params[0], A);
		}
		default:
		{
			SendErr(playerid, "Игрок не вступил в игру!");
			return 1;
		}
	}

	switch(GetPlayerState(playerid))
	{
		case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
		{
			AC_SetPlayerPos(playerid,X,Y,Z);
			SetPlayerFacingAngle(playerid,A);
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(params[0]));
			SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
		}
		case PLAYER_STATE_DRIVER:
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			AC_SetVehiclePos(vehicleid, X, Y, Z);
			AC_SetVehicleZAngle(vehicleid, A);
			AC_LinkVehicleToInterior(vehicleid,GetPlayerInterior(params[0]));
			AC_SetVehicleVirtualWorld(vehicleid,GetPlayerVirtualWorld(params[0]));
		}
		default: return 1;
	}
	GameTextForPlayer(playerid,"TELEPORT",5000, 4);
	return 1;
}

ALT:gethere:gh;
CMD:gethere(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 2 && !GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "/gethere [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок не в сети");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SendErr(playerid,"Игрок не вступил в игру");
	if(p_info[playerid][pAdmin] < p_info[params[0]][pAdmin]) return SendErr(playerid,"Нельзя телепортиповать администратора который старше вас");

	new Float:X,Float:Y,Float:Z, Float:A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid,A);

	SetPlayerInterior(params[0],GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(params[0],GetPlayerVirtualWorld(playerid));

	switch(GetPlayerState(params[0]))
	{
		case PLAYER_STATE_ONFOOT:
		{
			AC_SetPlayerPos(params[0], X,Y,Z);
			SetPlayerFacingAngle(params[0], A);
		}
		case PLAYER_STATE_DRIVER:
		{
			AC_LinkVehicleToInterior(GetPlayerVehicleID(params[0]),GetPlayerInterior(playerid));
			AC_SetVehicleVirtualWorld(GetPlayerVehicleID(params[0]),GetPlayerVirtualWorld(playerid));
			AC_SetVehiclePos(GetPlayerVehicleID(params[0]), X, Y, Z);
			AC_SetVehicleZAngle(GetPlayerVehicleID(params[0]), A);
		}
		case PLAYER_STATE_PASSENGER:
		{
			AC_RemovePlayerFromVehicle(params[0]);
			AC_SetPlayerPos(params[0], X,Y,Z);
			SetPlayerFacingAngle(params[0], A);
		}
	}

	format(stringer, 128, "Вы были телепортированы администратором %s", NamePlayer[playerid]);
	SendInf(params[0], stringer);

	format(stringer, 128, "Вы телепортировали %s к себе", NamePlayer[params[0]]);
	SendSucc(playerid, stringer);
	return 1;
}


CMD:givegun(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][16]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return SendInf(playerid, "Используйте: /givegun [id] [id оружия] [патроны]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(params[2] <1||params[2]>9999) return SendErr(playerid, "Нельзя меньше 1 или больше 9999 патронов");
	AC_GivePlayerWeapon(params[0], params[1], params[2]);
	SendSucc(playerid, "Оружие Выдано");

	format(stringer,200,"[A] %s выдал оружие [id: %d] [патронов: %d] игроку %s",NamePlayer[playerid],params[1],params[2],NamePlayer[params[0]]);
	AdmMes(CADMIN_INFO,stringer,1);
	return 1;
}

CMD:light(playerid)
{
	if(!PlayerToPoint(5, playerid,2143.0061,1620.307,1000.969)) return SCM(playerid, COLOR_LIGHTRED, "Вы не у блока электропитания.");
	if(!ISAMAFIA(playerid) && !IsAGang(playerid)) return SCM(playerid, COLOR_LIGHTRED, "Вы не можете отключить электропитание");
	if(lighttime>unix) return SCM(playerid, COLOR_LIGHTRED, "Электропитание уже отключено.");
	FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
	lighttime=unix+300;
	MeAction(playerid,"отключает электропитание банка", 5.0);
	FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
	FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
	return 1;
}

CMD:bankdoor(playerid)
{
	if(!PlayerToPoint(3, playerid,2144.178,1627.082,994.2620)) return SCM(playerid, COLOR_LIGHTRED, "Вы далеко от банковской двери");
	if(lighttime<=unix && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTRED, "Для начала надо отключить электропитание.");
	if(IsDynamicObjectMoving(DoorOpen)) return 1;
	if(bankdoors) return SCM(playerid, COLOR_LIGHTRED, "Банковская дверь уже открыта.");
	FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
	bankdoors = true;
	FIXES_ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,0,0);
	SCM(playerid, CWHITE, "Дверь банковского сейфа открыта на 2 минуты, спешите!");
	MoveDynamicObject (DoorOpen, 2146.0,1627.082,994.2620, 0.3);
	MeAction(playerid,"открывает дверь", 5.0);
	SetTimer("bankdoortime", 120 * 1000, 0);
	return 1;
}

forward bankdoortime();
public bankdoortime()
{
	bankdoors = false;
	MoveDynamicObject (DoorOpen, 2144.17,1627.082,994.2620, 0.3);
	return 1;
}

CMD:gotome(playerid,params[])
{
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1]=0;
		ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
		DeletePVar(playerid,"walk_goto_me_player");
		SendClientMessage(playerid,-1,"Вы отключили ходьбу за игроком");
		return 1;
	}
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != 11 && p_info[playerid][tMember] != 26) return 1;
	if(sscanf(params,"i",params[0])) return SCM(playerid, COLOR_GREY, "/gotome [id игрока]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,COLOR_GREY, "Игрок оффлайн");
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SCM(playerid,CWHITE,"Игрок должен находится на улице, и вы тоже");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");
	if(IsACop(params[0])) return SendClientMessage(playerid,COLOR_GREY,"Игрок полицейский");

	SetPVarInt(playerid,"walk_goto_me_player",params[0] + 1);
	walk_goto_me[params[0]]=playerid+1;

	SendClientMessage(playerid,CBLUE,"Вы повели игрока за собой");
	SendClientMessage(playerid,-1,"Используйте /gotome еще раз чтобы отключить ходьбу игрока за Вами");

	MeAction(playerid,"взял(а) преступника за руку");
	MeAction(playerid,"повёл(а) преступника за собой");
	return 1;
}


ALT:cput:incar;
CMD:cput(playerid, params[])
{
	if (IsACop(playerid) || ISAMAFIA(playerid))
	{
		new ta4a = 0, res, next = 0, carr = GetVehicleModel(GetPlayerVehicleID(playerid)), giveplayerid;
		if (sscanf(params, "i", giveplayerid)) return SCM(playerid, COLOR_GREY, "Используйте: /cput [id игрока]");
		if(!IsPlayerConnected(giveplayerid)) return SCM(playerid, COLOR_GREY, "Игрок не найден");
		if ((carr != 441) || (carr != 446) || (carr != 448) || (carr != 449) || (carr != 452) || (carr != 450) || (carr != 453) || (carr != 454) || (carr != 460) || (carr != 461) || (carr != 462) || (carr != 463) || (carr != 464) || (carr != 465) || (carr != 468) ||
				(carr != 472) || (carr != 473) || (carr != 481) || (carr != 484) || (carr != 493) || (carr != 501) || (carr != 509) || (carr != 510) || (carr != 521) || (carr != 522) || (carr != 523) || (carr != 539) || (carr != 564) || (carr != 568) || (carr != 569) ||
				(carr != 570) || (carr != 571) || (carr != 584) || (carr != 586) || (carr != 595))
		{
			if(IsPlayerInAnyVehicle(giveplayerid))
			{
				return SCM(playerid, CWHITE, "Игрок находится в машине.");
			}
			if((!GetPVarInt(giveplayerid,"PlayerCuffed")) && IsACop(playerid))
			{
				return SCM(playerid, CWHITE, "Игрок без наручников.");
			}
			if(IsPlayerInRangeOfPlayer(3.0, playerid, giveplayerid))
			{
				walk_goto_me[giveplayerid]=0;
				for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
				{
					new disto = CheckPlayerDistanceToVehicle(3.0, playerid, i);
					if (disto)
					{
						res = i;
						ta4a++;
						break;
					}
				}
				for (new i = 1; i < 3; i++)
				{
					if (next == 0)
					{
						if (!IsAnyPlayerInVehicle(res, i))
						{
							next = 1;
							AC_PutPlayerInVehicle(giveplayerid, res, i);
							AC_TogglePlayerControllable(giveplayerid, false);
							SCM(giveplayerid, CWHITE, "Вас насильно затолкали в тачку!");
							break;
						}
					}
				}
				if(next == 0) return SCM(playerid, CWHITE, "В тачке нет свободных мест!");
			}
			else return SCM(playerid, CWHITE, "Вы слишком далеко от игрока!");
		}
		else return SCM(playerid, CWHITE, "Недоступный транспорт!");
	}
	return 1;
}

CMD:tie(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /tie [id]");
	if(!ISAMAFIA(playerid) && p_info[playerid][tMember]!=23) return SCM(playerid, CWHITE, " Вам недоступна данная команда.");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,CWHITE,"Вы не водитель!");
	if(GetPVarInt(playerid,"PlayerTied"))  return SCM(playerid, CWHITE, "Вы связаны!");
	if(GetPVarInt(params[0],"PlayerTied")) return SCM(playerid, CWHITE, "Человек уже связан!");
	if(p_info[playerid][pVerevka] <= 0) return SCM(playerid, CWHITE, "У Тебя нет веревку, купи её в 24/7.!");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Человек не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Нельзя связать самого себя!");
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != 2 && !IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SCM(playerid, CWHITE, "Человек не в машине!");
	format(stringer, 144, "достал веревку и завязал %s на узел.", NamePlayer[params[0]]);
	MeAction(playerid,stringer, 5.0);
	AC_TogglePlayerControllable(params[0], 0);
	p_info[playerid][pVerevka]--;
	UpdatePlayerData(playerid,"pVerevka",p_info[playerid][pVerevka]);
	SetPVarInt(params[0],"PlayerTied", true);
	return 1;
}

CMD:iwep(playerid,params[])
{
	stringer[0] = EOS;
	new Gun[13], Ammo[13];
	if(p_info[playerid][pAdmin] < 2) return 1;
	if(sscanf(params,"d",params[0])) return	SendInf(playerid, "Используйте: /iwep [playerid]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн!");
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(params[0], i, Gun[i], Ammo[i]);
		format(stringer, 2000, "%s{"#cWHITE"}Slot: %i\t Weaponid: %i\t Ammo: %i\n", stringer, i, Gun[i], Ammo[i]);
		if(i == 12) format(stringer, 2000, "%s\n",stringer);
	}
	for(new slot = 2; slot <= 6; slot++)
	{
		GetPlayerWeaponData(params[0], slot, Gun[slot], Ammo[slot]);
		format(stringer, 2000, "%s{33AA33}Слот %i: %i\n",stringer, slot, PlayerWeaponData[params[0]][slot][PLAYER_AMMO]);
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX, NamePlayer[params[0]], stringer, "Ок", "");
	return 1;
}

CMD:number(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /number [id]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	format(stringer,64, "Владелец: %s. Телефон: %d",NamePlayer[params[0]], (IsBotServer(params[0])) ? (3500+random(1000)) : (p_info[params[0]][pPnumber]));
	SCM(playerid, CWHITE, stringer);
	return 1;
}

CMD:giverouble2(playerid, params[])
{
	if(!IsMegaAdmin(playerid)) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, CWHITE, "Используйте: /giverouble [playerid] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн");
	p_info[params[0]][pRouble] += params[1];
	UpdatePlayerData(params[0],"pRouble",p_info[params[0]][pRouble]);

	new yst[144];
	format(yst, 144, "Администратор %s выдал вам %d рублей. Чтобы проверить введите {"#cWHITE"}/donate", NamePlayer[playerid], params[1]);
	SendClientMessage(params[0], CGREEN, yst);
	return 1;
}

CMD:agivevip(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(!IsAFullDostup(playerid)) return 1;
	if (sscanf(params, "ii", params[0], params[1])) return SendInf(playerid, "/agivevip [id игрока] [уровень вип (0 - забрать)] ");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок не в сети");
	if(params[1] < 0 || params[1] > 3) return SendInf(playerid, "/agivevip [id игрока] [уровень вип (0 - забрать)] ");

	format(stringer, 128, "Администратор %s [%i] %s VIP-услугу", NamePlayer[playerid], playerid, (params[1] == 0) ? ("забрал у Вас") : ("выдал Вам"));
	SendClientMessage(params[0], CBLUE, stringer);
	SendClientMessage(params[0], -1, (params[0] == 0) ? ("Если администратор это сделал просто так подайте жалобу на форум") : (params[1] == 1) ? ("Ваш статус: "ORG"BRONZE VIP") : (params[1] == 2) ? ("Ваш статус: "ORG"SILVER VIP") : ("Ваш статус: "ORG"GOLD VIP"));

	format(stringer, 128, "Вы выдали %s VIP-услугу %i уровня игроку %s [%i]",(params[1] == 0) ? ("забрали") : ("выдали"),params[1],NamePlayer[params[0]], params[0]);
	SendClientMessage(playerid, CBLUE, stringer);

	p_info[params[0]][pDonateRank] = params[1];
	UpdatePlayerData(params[0],"pDonateRank",p_info[params[0]][pDonateRank]);
	return 1;
}



CMD:skill(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /skill [id]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Неверный ID игрока");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Человек не рядом с вами");

	format(stringer, 128, "Вы предложили {"#cWHITE"}%s {"#cINFO"} показать выписку из тира",NamePlayer[params[0]]);
	SCM(playerid, 0x269BD8FF, stringer);

	format(stringer, 128, "%s {"#cINFO"}хочет показать Вам выписку из тира. Чтобы подтвердить нажмите {33AA33}Y{"#cINFO"}, иначе {"#cRED"}N",NamePlayer[playerid]);
	SCM(params[0], -1, stringer);

	SetPVarInt(params[0],"skill", playerid + 1);
	return 1;
}



ALT:showlicenses:sl;
CMD:showlicenses(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return  SendInf(playerid, "Используйте: /showlicenses [id]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Человек не рядом с вами");
	if(GetPVarInt(params[0],"sim_id_sell")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"minet")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"hi")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"pass")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"sl")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	format(stringer,144,"Вы предложили {"#cWHITE"}%s {"#cINFO"} показать лицензии",NamePlayer[params[0]]);
	SendClientMessage(playerid,CINFO,stringer);
	format(stringer,144,"%s {"#cINFO"}хочет показать Вам лицензии. Чтобы подтвердить нажмите {"#cGREEN"}Y{"#cINFO"}, иначе {"#cRED"}N",NamePlayer[playerid]);
	SendClientMessage(params[0],CWHITE,stringer);

	SetPVarInt(params[0],"sl", playerid + 1);
	return 1;
}

CMD:divorce(playerid)
{
	if(strlen(p_info[playerid][pMarried]) < 10) return SendErr(playerid, "Вы не женаты (замужем)");
	SCM(playerid, CWHITE, "Вы развелись, ваш(а) супруг(а) должна сделать тоже самое");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "UPDATE `accounts` SET `pMarried` = 'No-ne' WHERE `ID` = '%d' LIMIT 1",p_info[playerid][pID]);
	mysql_pquery(connects, mysql_query_string, "", "");

	strmid(p_info[playerid][pMarried], "", 0, 10);
	return 1;
}

CMD:propose(playerid,params[])
{
	if(strlen(p_info[playerid][pMarried]) > 10) return SendErr(playerid, "Вы уже женаты/замужем");
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "Используйте: /propose [id]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	if(strlen(p_info[params[0]][pMarried]) > 10) return SendErr(playerid, "Человек уже состоит в браке");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Человек не рядом с вами");
	if(params[0] == playerid) { SendErr(playerid, "Вы указали свой ID"); return 1; }
	format(stringer, 144, "Вы предложили руку и сердце %s", NamePlayer[params[0]]);
	SCM(playerid, 0x6ab1ffaa, stringer);
	format(stringer, 128, "%s предлагает вам руку и сердце. (( Используйте: /accept marriage, чтобы принять ))", NamePlayer[playerid]);
	SCM(params[0], CBLUE, stringer);
	SetPVarInt(params[0],"ProposeOffer",playerid+1);
	return 1;
}

CMD:witness(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return	SendInf(playerid, "Используйте: /witness [id]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Человек не рядом с Вами");
	else if(params[0] == playerid) return SendErr(playerid, "Вы указали свой ID");
	format(stringer, 128, "Вы преложили %s быть свидетелем на вашей свадьбе", NamePlayer[params[0]]);
	SCM(playerid, CBLUE, stringer);
	format(stringer, 128, "%s предлагает Вам быть свидетелем на его/её свадьбе.(( Используйте /accept witness, чтобы принять ))", NamePlayer[playerid]);
	SCM(params[0], CBLUE, stringer);
	SetPVarInt(params[0],"MarryWitnessOffer", playerid + 1);
	return 1;
}

CMD:spawnchange(playerid)
{
	ShowPlayerDialog(playerid, 56, DIALOG_STYLE_LIST, "{"#cORANGE"}Изменение места появления в игре", ""ORG"1.{"#cWHITE"} Респа новичков\n"ORG"2.{"#cWHITE"} В собственном доме\n"ORG"3.{"#cWHITE"} На базе организации\n"ORG"4. {"#cWHITE"}В доме семьи", "Выбрать", "Отмена");
	return 1;
}

CMD:home(playerid)
{
	if(0 == p_info[playerid][pHouse]) return 1;
	SetPlayerCheckpoint(playerid,gHouses[p_info[playerid][pHouse]][houseX], gHouses[p_info[playerid][pHouse]][houseY], gHouses[p_info[playerid][pHouse]][houseZ], 4.0);
	SCM(playerid, CWHITE, "Ваш дом обозначен на карте красной меткой");
	SetPVarInt(playerid,"gPlayerCheckpointStatus", 12);
	return 1;
}
//SendErr(playerid, "Игрок не вступил в игру!");
CMD:clear(playerid,params[])
{
	if(StartWork(playerid) &&  !start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return  SCM(playerid, CWHITE, " Используйте: /clear [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Вы не можете снять розыск себе!");
	if(!((p_info[playerid][tMember] == 1 &&  p_info[playerid][tRank] >= 2) || (p_info[playerid][tMember] == 10 &&  p_info[playerid][tRank] >= 2) || (p_info[playerid][tMember] == 21 &&  p_info[playerid][tRank] >= 2) || (p_info[playerid][tMember] == 2 &&  p_info[playerid][tRank] >= 2) || (p_info[playerid][pAdmin] >= 6))) return SendClientMessage(playerid,-1,"Ошибка. Функция вам не доступна.");
	if(p_info[playerid][pAdmin] >= 6)
	{
	    if(!IsPlayerStream(8.0, playerid, params[0]) && GetPVarInt(playerid,"r_specid") != params[0]) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");
		format(stringer, 128, "Администратор %s снял с Вас уровни розыска.", NamePlayer[playerid]);
		SCM(params[0], 0x6ab1ffaa, stringer);
		p_info[params[0]][pWanted]=0;
		UpdatePlayerData(params[0],"pWanted",p_info[params[0]][pWanted]);
		SetPlayerWantedLevel(params[0], p_info[params[0]][pWanted]);
	}
	else
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, CGRAD1, "Вы не в машине");
	    new vehicleid =GetPlayerVehicleID(playerid);
	    if(gVehicles[vehicleid-1][vFraction] != 1 || gVehicles[vehicleid-1][vFraction] != 10 || gVehicles[vehicleid-1][vFraction] != 21 || gVehicles[vehicleid-1][vFraction] != 2) return SCM(playerid, CGRAD1, "Вы не в полицейской машине");
        if(!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");
		format(stringer, 128, "Вы сняли уровни розыска у %s.", NamePlayer[params[0]]);
		SCM(playerid, 0x6ab1ffaa, stringer);
		MeAction(playerid,"зашел в базу данных", 5.0);
		format(stringer, 128, "Офицер %s снял с Вас уровни розыска.", NamePlayer[playerid]);
		SCM(params[0], 0x6ab1ffaa, stringer);
		p_info[params[0]][pWanted]=0;
		UpdatePlayerData(params[0],"pWanted",p_info[params[0]][pWanted]);
		SetPlayerWantedLevel(params[0], p_info[params[0]][pWanted]);
	}
	return 1;
}

CMD:unwarn(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0])) return	SCM(playerid, CWHITE, " Используйте: /unwarn [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(params[0] == playerid) return SendClientMessage(playerid,-1,"Вы указали свой ID.");
	if(p_info[params[0]][pWarns] <= 0) {SCM(playerid, CRED, "Варнов нет"); return 1;}
	p_info[params[0]][pWarns] =0;
	UpdatePlayerData(params[0],"pWarns",0);
	p_info[params[0]][punWarnstime] =0;
	UpdatePlayerData(params[0],"punWarnstime",0);
	format(stringer, 255, "[A] %s снял предупреждения с игрока %s",NamePlayer[playerid],NamePlayer[params[0]]);
	AdmMes(CADMIN_INFO,stringer,1);
	format(stringer, 128, "Администратор %s[%d] снял предупреждения с игрока %s[%d]",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0]);
	WriteLog(TYPE_LOG_UNWARN,stringer);

	format(stringer, 128, "Администратор %s[%d] снял c вас предупреждения",NamePlayer[playerid],playerid);
	SCM(params[0], CGREEN, stringer);

	return 1;
}

CMD:sp(playerid)
{
	if(p_info[playerid][pAdmin] < 2) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	SpawnPlayer(playerid);
	return 1;
}

CMD:freeze(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return	SCM(playerid, CWHITE, " Используйте: /freeze [id]");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=4 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(p_info[params[0]][pAdmin] > 0) return SCM(playerid, CGRAD2, "Администратор не может быть заморожен!");
	if (p_info[playerid][pAdmin] >= 2)
	{
		if(IsPlayerConnected(params[0]))
		{
				AC_TogglePlayerControllable(params[0], false);

				format(stringer, 128, "[A] %s заморозил %s",NamePlayer[playerid],NamePlayer[params[0]]);
				AdmMes(CADMIN_INFO,stringer,1);

				format(stringer,128,"Вас заморозил администратор %s",NamePlayer[playerid]);
				SCM(params[0],COLOR_LIGHTRED, stringer);
		}
	}
	return 1;
}

CMD:unfreeze(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, " Используйте: /unfreeze [id]");
	if (p_info[playerid][pAdmin] < 2) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(!IsPlayerConnected(params[0])) return 1;

	AC_TogglePlayerControllable(params[0], true);
	format(stringer, 128, "[A] %s разморозил %s",NamePlayer[playerid],NamePlayer[params[0]]);
	AdmMes(CADMIN_INFO,stringer,1);

	format(stringer,128,"Вас разморозил администратор %s",NamePlayer[playerid]);
	SCM(params[0],COLOR_LIGHTRED, stringer);
	return 1;
}

CMD:warnmans(playerid)
{
	if(p_info[playerid][pAdmin] < 4) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	new countmute = 0;
	foreach(i)
	{
		if(p_info[i][pWarns] >= 1 && IsPlayerConnected(i))
		{
			format(stringer, 128, "- %s [ID: %d] | Варнов: %d ",NamePlayer[i], i,p_info[i][pWarns]);
			countmute++;
			SCM(playerid, CLIGHTGREEN, stringer); }
	}
	if(countmute == 0) return SCM(playerid, CGRAD1, "Нет игроков с Варнами");

	format(stringer, 128, "Всего: %d человек!", countmute);
	SCM(playerid, CWHITE, stringer);
	return 1;
}

CMD:mutelist(playerid)
{
	if(p_info[playerid][pAdmin] < 4) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	new countmute = 0;
	foreach(i)
	{
		if(p_info[i][pMuteTime] > 0 && IsPlayerConnected(i))
		{
			format(stringer, 128, "%s [ID: %d] | %d секунд",NamePlayer[i], i,p_info[i][pMuteTime]);
			countmute++;
			SCM(playerid, CLIGHTGREEN, stringer);
		}
	}
	if(countmute == 0) SCM(playerid, CGRAD1, "Нет игроков с баном чата");
	else
	{
		format(stringer, 128, "Всего: %d человек!", countmute);
		SCM(playerid, CISPOLZUY, stringer);
	}
	return 1;
}

CMD:knocklist(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	foreach(i)
	{
		if(GetPVarInt(i,"PlayerTied"))
		{
			format(stringer, 128, "%s [ID: %d]",NamePlayer[i], i);
			SCM(playerid, CLIGHTGREEN, stringer);
		}
	}
	return 1;
}

CMD:id(playerid, params[])
{
	new Name[30],
		id = 0;
	if(sscanf(params,"s[24]",Name)) return SCM(playerid, COLOR_GREY, "/id [Ник игрока]");
	SendClientMessage(playerid,CGREEN,"Игроки онлайн:");
	if(!isNumeric(Name))
	{
		if(!IsPlayerConnected(strval(Name))) return SendClientMessage(playerid,COLOR_GREY,"Не найдено");
		format(stringer, sizeof(stringer),"%s (%i) %s",NamePlayer[strval(Name)],strval(Name), (unix - p_info[strval(Name)][pAFK]>=3) ? (""ORG"[AFK]"):(""));
		SendClientMessage(playerid,-1,stringer);
		return 1;
	}
	foreach(i)
	{
		if(strfind(NamePlayer[i],Name, true) != -1)
		{
			if(id > 10) break;
			format(stringer, sizeof(stringer),"%s (%i) %s",NamePlayer[i],i,(unix - p_info[i][pAFK]>=3) ? (""ORG"[AFK]"):(""));
			SendClientMessage(playerid,-1,stringer);
			id++;
		}
	}
	return 1;
}

CMD:offmute(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 4) return SCM(playerid, CWHITE, "Вам недоступна эта функция!");
	new
		Nick [MAX_PLAYER_NAME + 1],
		Reason [30],
		Time;

	if(sscanf(params,"s[32]is[64]",Nick,Time,Reason))  return SCM(playerid, CWHITE, "Используйте: /offmute [ник] [минуты] [причина]");
	if(Time < 1 || Time > 180) return SCM(playerid, CWHITE, "Время от 1 минуты до 180");

	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT `ID`,`tName` FROM `accounts` WHERE `tName` = '%s' LIMIT 1",Nick);
	mysql_pquery(connects, mysql_query_string, "offmute_callback", "isis", playerid, Nick, Time, Reason ) ;

	return 1;
}





CMD:offjail(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return SCM(playerid, CWHITE, "Вам недоступна эта функция!");
	if(!uAdmin[playerid][9]) return SendErr(playerid,"Данная функция отключена основателем.");
	new
		Nick [MAX_PLAYER_NAME + 1],
		Reason [30],
		Time;

	if(sscanf(params,"s[32]is[64]",Nick,Time,Reason))  return SCM(playerid, CWHITE, "Используйте: /offjail [ник] [минуты] [причина]");
	if(Time < 1 || Time > 180) return SCM(playerid, CWHITE, "Время от 1 минуты до 180");

	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT `ID`,`tName` FROM `accounts` WHERE `tName` = '%s' LIMIT 1",Nick);
	mysql_pquery(connects, mysql_query_string, "offjail_callback", "isis", playerid, Nick, Time, Reason ) ;

	return 1;
}

CMD:offleader(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 11) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(isnull(params) || strlen(params) > 24)  return SendInf(playerid,"/offleader [ник]");
	if(!uAdmin[playerid][13]) return SendErr(playerid,"Данная функция отключена основателем.");
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT `tLeader` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "offleader", "is",playerid,params);
	return 1;
}

forward offleader(playerid,Nick[]);
public offleader(playerid,Nick[])
{
	print ("cache_get_row [ offleader ]");
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,COLOR_GREY,"Игрок не найден!");
	new count_warns;
	cache_get_value_index_int(0,0,count_warns);
	if(!count_warns) return SendClientMessage(playerid,COLOR_GREY,"Игрок не лидер!");
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 250, "UPDATE `accounts` SET `tLeader` = '0',`tMember`='0',`tRank`='0' WHERE `tName` = '%s' LIMIT 1", Nick);
	mysql_pquery(connects,mysql_query_string);

	format(stringer, 128, "[A] %s снял лидера в оффлайне %s",NamePlayer[playerid],Nick);
	AdmMes(CADMIN_INFO,stringer,1);
	return 1;
}

CMD:offunwarn(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(isnull(params) || strlen(params) > 24)  return SendInf(playerid,"/offunwarn [ник]");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT `pWarns` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "un_warn_player", "is",playerid,params);
	return 1;
}

forward un_warn_player(playerid,Nick[]);
public un_warn_player(playerid,Nick[])
{
	print ("cache_get_row [ un_warn_player ]");
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,COLOR_GREY,"Игрок не найден!");
	new count_warns;
	cache_get_value_index_int(0,0,count_warns);
	if(!count_warns) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет варнов!");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 250, "UPDATE `accounts` SET `pWarns` = '0' WHERE `tName` = '%s' LIMIT 1", Nick);
	mysql_pquery(connects,mysql_query_string);

	format(stringer, 128, "[A] %s разварнил в оффлайне игрока %s",NamePlayer[playerid],Nick);
	AdmMes(CADMIN_INFO,stringer,1);
	return 1;
}

CMD:offwarn(playerid, params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][5]) return SendErr(playerid,"Данная функция отключена основателем.");
	new
		Nick [MAX_PLAYER_NAME + 1],
		Reason [30],days;

	if(sscanf(params,"is[24]s[30]",days,Nick,Reason))  return SCM(playerid, CWHITE, "Используйте: /offwarn [дни] [ник] [Причина]");

	new check_id;
	sscanf(Nick,"u",check_id);
	if(check_id != INVALID_PLAYER_ID)
	{
	    new send_off_warn_string[64];
	    format(send_off_warn_string,64,"Игрок в игре. ID: %d", check_id);
		SendErr(playerid,send_off_warn_string);
	    return 1;
	}
	/*
	if()
	{
		SCM(playerid, CWHITE, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}*/

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "SELECT `ID`,`pWarns` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", Nick);
	mysql_pquery(connects, mysql_query_string, "offwarn", "isis",playerid,Nick,days,Reason);

	return 1;
}

forward offwarn(playerid, Nick[],days,Reason[]);
public offwarn(playerid, Nick[],days,Reason[])
{
	print ("cache_get_row [ offwarn ]");
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendErr(playerid, "Игрок не найден");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(IsIpFound(Reason))
	{
		SendReklama(playerid,Reason);
		return 1;
	}
	if(AntiReklama(Reason))
	{
		format(stringer,250,"[Анти-слив <<< в /ban]: %s(%i){ff0000} попытался отправить текст: %s",NamePlayer[playerid],playerid,Reason);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(Reason,Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],Reason,strlen(Reason),64);
	mysql_query_string[0] = EOS;
	new count_warns,id;
	cache_get_value_int(0,"pWarns",count_warns);
	if((count_warns+1) < 3)
	{
		format(mysql_query_string, 512, "UPDATE `accounts` SET `pWarns` = '%i', `punWarnstime` = '%i', `tLeader` = '0', `tMember` = '0', `tRank` = '0' WHERE `tName` = '%s'  LIMIT 1",(count_warns+1),unix + days*86400,Nick);
		mysql_pquery(connects,mysql_query_string);

		format(mysql_query_string,128,"Администратор %s выдал предупреждение игроку %s в оффлайне на %d дней [%i/3]. Причина: %s",NamePlayer[playerid],Nick,days,(count_warns+1),Reason);
		SendClientMessageToAll(COLOR_LIGHTRED,mysql_query_string);
		cache_get_value_int(0,"ID",id);
		Insert_Reason_Warn(id,NamePlayer[playerid],Reason);
	}
	else
	{
		format(mysql_query_string, 128, "SELECT * FROM `table_ban` WHERE `Name_Player` = '%s' LIMIT 1", Nick);
		mysql_pquery(connects, mysql_query_string, "OffBan", "issi",playerid,Nick,Reason,7);
	}
	return 1;
}



CMD:offban(playerid,params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if ( p_info[playerid][pAdmin] < 5 ) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][8]) return SendErr(playerid,"Данная функция отключена основателем.");
	new nicks[24], reason[100], day;
	if(sscanf(params, "s[24]is[100]", nicks,day,reason)) return SCM(playerid, CWHITE, "Используйте: /offban [ник] [дни] [причина]");
	/*if()
	{
		SCM(playerid, CWHITE, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}*/
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `table_ban` WHERE `Name_Player` = '%s' LIMIT 1", nicks);
	mysql_pquery(connects, mysql_query_string, "OffBan", "issi",playerid,nicks,reason,day);
	return 1;
}

CMD:getban(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 4) return SendErr(playerid, "Вам недоступна эта функция");
	if(isnull(params) || strlen(params) > 24)  return SCM(playerid, CWHITE, " Используйте: /getban [Ник]");
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `table_ban` WHERE `Name_Player` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "Check_Ban_List", "dsd", playerid,params,1);
	return 1;
}

CMD:offuninvite(playerid,params[])
{
	if(p_info[playerid][tMember]==0)return 1;
	if(p_info[playerid][tRank] != FractionRank[p_info[playerid][tMember]-1]) return SendErr(playerid, "Не достаточно прав для использования команды");
	if(isnull(params) || strlen(params) > 24) return SendInf(playerid, "Используйте: /offuninvite [ник]");
	mysql_query_string[0] = EOS;
	format(mysql_query_string,200,"SELECT `tMember` FROM `accounts` WHERE `tName` = '%s' LIMIT 1",params);
	mysql_pquery(connects, mysql_query_string, "offuninvite_callback", "is", playerid,params) ;
	return 1;
}

CMD:unban(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid, "Не достаточно прав для использования команды");
	else if(isnull(params) || strlen(params) > 24) return SendInf(playerid, "Используйте: /unban [ник]");
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `table_ban` WHERE `Name_Player` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "UnBan", "is", playerid, params);
	return 1;
}

forward UnBan(playerid,ban_name[]);
public UnBan(playerid,ban_name[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		SendErr(playerid,"Игрок не был заблокирован");
		return 1;
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "DELETE FROM `table_ban` WHERE `Name_Player` = '%s'",ban_name);
	mysql_pquery(connects, mysql_query_string, "", "");


	format(mysql_query_string, 128, "[A] %s разбанил %s.",NamePlayer[playerid],ban_name);
	AdmMes(CADMIN_INFO,mysql_query_string,1);

	format(mysql_query_string, 128, "%s разбанил %s.",NamePlayer[playerid],ban_name);
	WriteLog(TYPE_LOG_UNBAN,mysql_query_string);

	return 1;
}

CMD:klyap(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /klyap [id]");
	else if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	else if(params[0] == playerid) return SCM(playerid, CWHITE, "Нельзя у самого себя вытащить кляп.");
	else if(!GetPVarInt(params[0],"PlayerTied"))  return SCM(playerid, CWHITE, "Игрок не связан!");
	else if(GetPVarInt(playerid,"PlayerTied"))  return SCM(playerid, CWHITE, "Вы связаны");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Человек не рядом с вами!");
	else if(GetPVarInt(params[0],"gag"))
	{
		DeletePVar(params[0],"gag");
		format(stringer, 128, "%s вытащил кляп у %s'a", NamePlayer[playerid] ,NamePlayer[params[0]]);
		SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	}
	else
	{
		if(!ISAMAFIA(playerid)) return SCM(playerid, CWHITE, " Вам недоступна данная команда.");
		SetPVarInt(params[0],"gag", true);
		SetPVarInt(params[0],"TieTime", 600);
		format(stringer, 128, "%s вставил кляп в рот %s'у", NamePlayer[playerid] ,NamePlayer[params[0]]);
		SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	}
	return 1;
}

CMD:klyapoff(playerid)
{
	if(GetPVarInt(playerid,"gag")) return 1;
	else if(GetPVarInt(playerid,"PlayerTied"))  return SCM(playerid, CWHITE, "Вы связаны!");
	DeletePVar(playerid,"gag");
	format(stringer, 128, "%s выплевывает кляп из рта.", NamePlayer[playerid]);
	SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	return 1;
}

CMD:untie(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /untie [id]");
	else if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Вы далеко от этого человека!");
	else if(GetPVarInt(playerid,"PlayerTied"))  return SCM(playerid, CWHITE, "Вы связаны!");
	else if(!GetPVarInt(params[0],"PlayerTied"))  return SCM(playerid, CWHITE, "Игрок не связан!");
	else if(params[0] == playerid)  return SCM(playerid, CWHITE, "Нельзя связывать себя!");
	else if(!GetPVarInt(params[0],"PlayerTied")) SCM(playerid, CWHITE, "Этот человек не связан!");
	format(stringer, 128, "%s развязал %s", NamePlayer[playerid] ,NamePlayer[params[0]]);
	SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	AC_TogglePlayerControllable(params[0], 1);
	p_info[playerid][pVerevka]++;
	UpdatePlayerData(playerid,"pVerevka",p_info[playerid][pVerevka]);
	DeletePVar(params[0],"PlayerTied");
	return 1;
}

CMD:jackcar(playerid)
{
	if(!IsAGang(playerid) && !ISAMAFIA(playerid)) return SendErr(playerid, "Вам не доступна данная команда");
	else if(!p_info[playerid][pOtmbI4ka]) return SendErr(playerid, "У вас нет отмычек");
	new Float:X, Float:Y, Float:Z;
	new bool:check_vehicle=false;
	foreach(i)
	{
		if(caridhouse[i][0])
		{
			GetVehiclePos(caridhouse[i][0],X,Y,Z);
			if(PlayerToPoint(4.0,playerid,X,Y,Z))
			{
				SetPVarInt(playerid, "CarJack", caridhouse[i][0]);
				check_vehicle=true;
				break;
			}
		}
		if(caridhouse[i][1])
		{
			GetVehiclePos(caridhouse[i][1],X,Y,Z);
			if(PlayerToPoint(4.0,playerid,X,Y,Z))
			{
				SetPVarInt(playerid, "CarJack", caridhouse[i][1]);
				check_vehicle=true;
				break;
			}
		}
	}
	if(!check_vehicle) return SendErr(playerid, "Можно взламывать только личный т/с игроков");
	ShowPlayerDialog(playerid,d_carjack,0," ","Вы хотите воспользоваться отмычкой и угнать транспорт?\n\nДанное действие нельзя отменить!","Да","Нет");
	GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
	return 1;
}

CMD:offcontract(playerid, params[])
{
	if(p_info[playerid][tMember] != 23) return true;
	else if(p_info[playerid][tRank]<11)return SCM(playerid,COLOR_GREY,"Доступно с 7 ранга");
	if(sscanf(params,"i",params[0]))return SCM(playerid,COLOR_GREY,"/offcontract [номер контракта]");

	new mfcontract[250];
	format(mfcontract,250,"DELETE FROM `hitmans_setting` WHERE `id` = '%d'", params[0]);
	mysql_pquery(connects,mfcontract,"","");

	format(stringer, 144, "Контракт %d удален", params[0]);
	SendClientMessage(playerid,COLOR_GREY,stringer);
	return 1;
}


CMD:deal(playerid)
{
	new g = GetPVarInt(playerid,"Crup");
	if (g!=1) return SendClientMessage(playerid,0xFFFFFFAA,"Вы не работник казино!");

	for ( new c = 0; c < 3; c++ )
	{
		if(!IsPlayerInRangeOfPoint(playerid,2.0,rullet_[c][rullet_pos][0], rullet_[c][rullet_pos][1], rullet_[c][rullet_pos][2])) continue;
		if(KrupieTime[c] > 0) return SendClientMessage(playerid,0x8FDFC4FF,"Рулетка уже запущена!");
		new bool:proverka = false;
		foreach(X)
		{
			if (RuletkaStol[X] == c + 1 && RuletSum[X] > 0)
			{
				proverka = true;
				break;
			}
		}
		if(!proverka) return SendClientMessage(playerid,0x8FDFC4FF,"Никто ещё не сделал ставку за этим столом!");
		KrupieTime[c] = 1;
		if(rullet_[c][rullet_timer] != -1)
		{
			KillTimer(rullet_[c][rullet_timer]);
		}
		rullet_[c][rullet_timer] = SetTimerEx("RuletCheck", 100, 1, "i", c);
		return MeAction(playerid,"крутанул рулетку");
	}
	SendClientMessage(playerid,0xFFFFFFAA,"Вы не возле игрального стола!");
	return 1;
}

CMD:drink(playerid)
{
	if(GetPVarInt(playerid, "dRink") < 1) return 1;
	format(stringer,128,"выпил(-а) напиток %s", SHOP_CLUB[GetPVarInt(playerid, "dRink")-1]);
	MeAction(playerid,stringer);
	SetPlayerSpecialAction(playerid, 0);
	FIXES_ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 2.0,0,0,0,0,5000,1);
	SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,0);
	DeletePVar(playerid, "dRink");
	p_info[playerid][pEat] += 20;
	UpdatePlayerHunger(playerid);
	return 1;
}

CMD:eat(playerid)
{
	new Float:health;
	GetPlayerHealth(playerid,health);
	new name[32];
	if(GetPVarInt(playerid, "burger") < 1) return 1;
	//
	new eat_string[32+1];
	GetPVarString(playerid, "EatString", eat_string, 15);
	//
	if(GetPVarInt(playerid, "burger") == 1)
	{
		strcat(name,"хот-дог");
		AC_SetPlayerHealth(playerid, health + 20.0);
	}
	else if(GetPVarInt(playerid, "burger") == 2)
	{
		strcat(name,"бургер");
		AC_SetPlayerHealth(playerid, health + 30.0);
	}
	else if(GetPVarInt(playerid, "burger") == 3)
	{
		strcat(name,"пиццу");
		AC_SetPlayerHealth(playerid, health + 60.0);
	}
	else format(name, 32, "%s", eat_string);
	//
	format(stringer,128,"съел(-а) %s", name);
	MeAction(playerid,stringer);

	new RDisease = random(5);
	if(!RDisease && p_info[playerid][Disease][1] != 3)
	{
		p_info[playerid][Disease][1]++;
		UpdatePlayerData(playerid, "Disease1", p_info[playerid][Disease][1]);
		format(stringer, 144, "У вас появилось новое заболивание - гастрит %d степени", p_info[playerid][Disease][1]);
		SendClientMessage(playerid, CWHITE, stringer);
	}
	//
	FIXES_ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
	SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,0);
	SetPlayerSpecialAction(playerid, 0);
	//
	DeletePVar(playerid, "satiety");
	DeletePVar(playerid, "burger");
	DeletePVar(playerid,"EatString");
	p_info[playerid][pEat] += 20;
	UpdatePlayerHunger(playerid);
	return 1;
}

CMD:buyinterior(playerid)
{
	if(!GetPVarInt(playerid,"listitem_remont")) return 1;
	ShowPlayerDialog(playerid,dBuyInterior,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Ремонт","{"#cWHITE"}Вы действительно хотите купить этот интерьер?","Да","Нет");
	return 1;
}

CMD:parkcar(playerid)
{
	if(!GetPVarInt(playerid,"parkcar"))
	{
		SendClientMessage(playerid,CYELLOW,"Вы установили парковку вашей машины {"#cWHITE"}на улице");
		SetPVarInt(playerid,"parkcar",true);
		return 1;
	}
	SendClientMessage(playerid,CYELLOW,"Вы установили парковку вашей машины {"#cWHITE"}в гараже");
	DeletePVar(playerid,"parkcar");
	return 1;
}

CMD:unmask(playerid)
{
	if(GetPVarInt(playerid,"mask"))
	{
		SetPlayerSkin(playerid,p_info[playerid][pModel]);
		SetPlayerColorAc(playerid, p_info[playerid][tMember]);
		DeletePVar(playerid,"mask");
	}
	return 1;
}

CMD:kiss(playerid,params[])
{
	new kiss;
	if(p_info[playerid][pJailTime] > 0) return SCM(playerid, CWHITE, "Нельзя использовать эту команду в тюрьме.");
	else if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return 1;
	else if(sscanf(params,"i",kiss)) return SCM(playerid, COLOR_GREY, "Используйте: /kiss [playerid]");
	if ( kiss == playerid ) return SCM(playerid, COLOR_GREY, "Нельзя поцеловать самого себя!");
	else if(!IsPlayerConnected(kiss)) return 1;
	else if(!IsPlayerStream(4.0, playerid, kiss)) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!");
	else if(kiss == GetPVarInt(kiss,"kiss")-1) return SCM(playerid, COLOR_GREY, "Вы уже предлагали этому игроку поцелуй");
	else if(p_info[kiss][pJailTime] > 0) return SCM(playerid, CWHITE, "Игрок в тюрьме.");

	new text_string [ 128 ] ;

	format ( text_string, sizeof ( text_string ),"Вы предложили {"#cWHITE"}%s {"#cINFO"}поцелуй",NamePlayer[kiss]);
	SCM(playerid,CINFO,text_string);

	format(text_string, sizeof ( text_string ),"%s {"#cINFO"}предложил вам поцелуй. Нажмите {"#cGREEN"}Y {"#cINFO"}для поцелуя или {"#cRED"}N {"#cINFO"}для отказа",NamePlayer[playerid]);
	SCM ( kiss, -1, text_string ) ;

	SetPVarInt(kiss,"kiss", playerid+1);
	return 1;
}

CMD:robbank(playerid, params[])
{
	if(robtime) return SCM(playerid, COLOR_LIGHTRED, "Грабить банк можно раз в 3 часа.");
	if(!PlayerToPoint(2, playerid,2147.2971,1637.2709,993.5759)) return SCM(playerid, COLOR_LIGHTRED, "Вы не у банковского сейфа.");
	if(!IsAGang(playerid) && !ISAMAFIA(playerid)) return SCM(playerid, -1, "Только для банд / мафий");
	AC_TogglePlayerControllable(playerid, false);
	GameTextForPlayer(playerid, "~y~~h~LOADING...", 9000, 6);
	FIXES_ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,1,1,1,0,0);
	robbanks = true;
	SetPVarInt(playerid,"robbankstime",10);
	FIXES_ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,1,1,1,0,0);
	SendStreamMessage(30.0, playerid, "Незнакомец пытается взломать банковский сейф.", 0xE75480FF);
	return 1;
}

CMD:hp(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(IsPlayerInAnyVehicle(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if ( vehicleid != INVALID_PLAYER_ID )
		{
			RepairVehicle(vehicleid);
			gVehicles[vehicleid - 1][vFuel] = 30.0;
			SCM(playerid, CWHITE, "Машина отремонтирована!");
			AC_SetPlayerHealth(playerid, 100.0);
			gVehicles[vehicleid - 1][uDamage] = false;
		}
		return 1;
	}
	AC_SetPlayerHealth(playerid, 100.0);
	p_info[playerid][pEat] = 100;
	UpdatePlayerHunger(playerid);
	return 1;
}


CMD:sethpprice(playerid, params[])
{
	if(!IsAMedic(playerid) || p_info[playerid][tRank] != 8) return 1;
	else if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	else if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /sethpprice [сумма]");
	else if(params[0] < 1 || params[0] > 1000) { SCM(playerid, CWHITE, "Вы не можете поставить меньше 0 и больше 1000"); return 1; }
	healpric = params[0];
	SendClientMessageToAll(CWHITE, "---========== Государственные Новости==========---");
	new text_string [ 66 + MAX_PLAYER_NAME + 6 ] ;
	format(text_string, sizeof ( text_string ), "Цена лечения, в размере %d $. установлена Глав. Врачом LS: %s.", healpric, NamePlayer[playerid]);
	SendClientMessageToAll(0xA52A2AFF, text_string);
	return 1;
}



CMD:setvw1(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 10) return SCM(playerid, CWHITE, "Недоступно");
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, CWHITE, " Используйте: /setvw1 [id] [мир]");
	SetPlayerVirtualWorld(params[0],params[1]);
	return 1;
}

CMD:sethp(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 6) return SCM(playerid, CWHITE, "Недоступно");
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, CWHITE, " Используйте: /sethp [id] [уровень hp]");
	if(params[1] < 0 || params[1] > 100) return 1;
	AC_SetPlayerHealth(params[0], params[1]);
	new text_string [ 94 ] ;
	format ( text_string, 94, "[A] %s[%d] установил уровень здоровья игроку %s[%d] на %.2f",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0], float(params[1]));
	AdmMes ( COLOR_GREY, text_string, 1 ) ;
	format ( text_string, 94, "Вам установил уровень здоровья (%i) администратор %s[%d]",params[1],NamePlayer[playerid],playerid);
	SCM(params[0], COLOR_GREY, text_string ) ;
	return 1;
}

CMD:gotospawn(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 6) return SCM(playerid, CWHITE, "Недоступно");
	if(sscanf(params,"d",params[0])) return	SCM(playerid, CWHITE, " Используйте: /gotospawn [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,CGRAY,"Игрок не в сети!");
	SpawnPlayer(params[0]);
	new text_string [ 94 ] ;
	format ( text_string, 94, "[A] %s[%d] заспавнил игрока %s[%d]",NamePlayer[playerid],playerid,NamePlayer[params[0]],params[0]);
	AdmMes ( COLOR_GREY, text_string, 1 ) ;
	format ( text_string, 94, "Вас заспавнил администратор %s[%d]",NamePlayer[playerid],playerid);
	SCM(params[0], COLOR_GREY, text_string ) ;
	return 1;
}


stock IsAAdminVehicle(vehicleid)
{
	return 1;
}



CMD:addfractionvehicle(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/addfractionvehicle [ фракция ]" ) ;
	else if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");

	new veh_id = GetPlayerVehicleID(playerid);
	GetVehiclePos(veh_id, gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ]);
	GetVehicleZAngle(veh_id, gVehicles [ veh_id - 1 ] [ veA ]);

	if ( ! gVehicles [ veh_id - 1] [ vAdminCreate ] ) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в админ-автомобиле ( /veh ) ") ;

	gVehicles [ veh_id - 1 ] [ vModel ] = GetVehicleModel ( veh_id ) ;
	gVehicles [ veh_id - 1 ] [ vFraction ] = params [ 0 ] ;

	new str_add_fract [ 512 ] ;
	format ( str_add_fract , 512 , "INSERT INTO `fr_vehicles`(`f_c_model`, `f_c_fraction`, `f_c_color_1`, `f_c_color_2`, `f_c_pos_x`, `f_c_pos_y`, `f_c_pos_z`, `f_c_pos_a`) VALUES ('%d','%d','%d','%d','%.4f','%.4f','%.4f','%.4f')",gVehicles [ veh_id - 1 ] [ vModel ], gVehicles [ veh_id - 1 ] [ vFraction ], gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ],
	gVehicles [ veh_id - 1 ] [ veX ],gVehicles [ veh_id - 1 ] [ veY ],gVehicles [ veh_id - 1 ] [ veZ ],gVehicles [ veh_id - 1 ] [ veA ]);
	mysql_pquery(connects,str_add_fract,"CreateFractionVehicle","dd",playerid,veh_id);

	if(IsValidVehicle(veh_id))
	{
		DestroyVehicleOP(veh_id);
	}
	TotalAdminVehicles--;
	gVehicles [ veh_id - 1 ] [ vID ] = 	AddTeamVehicle ( params [ 0 ], gVehicles [ veh_id - 1 ] [ vModel ],gVehicles [ veh_id - 1 ] [ veX ],gVehicles [ veh_id - 1 ] [ veY ],gVehicles [ veh_id - 1 ] [ veZ ],gVehicles [ veh_id - 1 ] [ veA ],gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ], -1 ) ;
	if ( gVehicles [ veh_id - 1 ] [ vModel ] == 482 || (IsABenAirVehicle(gVehicles [ veh_id - 1 ] [ vModel ]) && gVehicles [ veh_id - 1 ] [ vFraction ] == 27) )
	{
		new Text3D:attachedtext;
		attachedtext = CreateDynamic3DTextLabel("{f0f0f0}Машина для загрузки \n{"#cBLUE"}металла и патронов", 0xFFFFFF20, 77.77, 77.77, 77.77, 5.0, INVALID_PLAYER_ID, gVehicles [ veh_id - 1 ] [ vID ], 0, -1, -1, -1, 100.0);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, attachedtext,E_STREAMER_ATTACH_OFFSET_Z, 2.0);
	}
	fraction_veh_amount ++ ;
	print("create car fraction #1");
	return 1;
}

CMD:setfractionrankvehicle(playerid,params[])
{
	new veh_id = GetPlayerVehicleID(playerid);
	if( p_info[ playerid ] [ tMember] == 0 ) return 1;
	new Member = p_info[ playerid ] [ tMember] - 1;
	if( p_info[ playerid ] [tRank] != FractionRank[Member]) return 1;
	else if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/setfractionrankvehicle [ ранг ] ( 0 - любой ранг )" ) ;
	if(params[0]<0 || params[0]>17) return SendClientMessage(playerid,-1,"от 0 до 17" ) ;
	else if(gVehicles [ veh_id - 1 ] [ vFraction ] != Member + 1) return SendClientMessage ( playerid , -1, "Вы должны быть в машине своeй фракции");
	gVehicles [ veh_id - 1 ] [ vFractionRank ] = params[0];

	new sql_string[250];
	format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_fraction_rank` = '%d' WHERE `f_c_id` = '%d'",gVehicles [ veh_id - 1 ] [ vFractionRank ], gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");
	if(params[0]==0)
	{
		SendClientMessage(playerid,-1,"Вы успешно изменили ранг этого автомобиля на {00CC00}( Любой ранг )");
	}
	else
	{
		format ( stringer , 128 , "Вы успешно изменили ранг этого автомобиля на {00CC00}( %s )", GetRank(p_info[playerid][tMember],gVehicles[veh_id-1][vFractionRank]));
		SendClientMessage(playerid,-1,stringer);
	}
	return 1;
}

CMD:setfractionvehicle(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if(!IsAFullDostup(playerid)) return 1;
	else if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/addfractionvehicle [ фракция ]" ) ;

	gVehicles [ veh_id - 1 ] [ vFraction ] = params[0];

	new sql_string[250];
	format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_fraction` = '%d' WHERE `f_c_id` = '%d'",gVehicles [ veh_id - 1 ] [ vFraction ], gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	format ( stringer , 128 , "Вы успешно изменили фракцию этого автомобиля на {00CC00}( %s )", f_info[gVehicles [ veh_id - 1 ] [ vFraction ]][f_name]);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}

//

CMD:changefractionvehiclepos(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if ( gVehicles [ veh_id - 1 ] [ vFraction ] == -1 ) return SendClientMessage ( playerid, COLOR_GREY , "Автомобиль не принадлежит никакой фракции" ) ;

	GetVehiclePos(veh_id, gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ]);
	GetVehicleZAngle(veh_id, gVehicles [ veh_id - 1 ] [ veA ]);

	new sql_string[250];
	format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_pos_x` = '%f',`f_c_pos_y` = '%f',`f_c_pos_z` = '%f',`f_c_pos_a` = '%f' WHERE `f_c_id` = '%d'",gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ], gVehicles [ veh_id - 1 ] [ veA ], gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	DestroyVehicleOP(veh_id, false);
	gVehicles [ veh_id - 1 ] [ vID ] = 	AddTeamVehicle ( gVehicles [ veh_id - 1 ] [ vFraction ], gVehicles [ veh_id - 1 ] [ vModel ],gVehicles [ veh_id - 1 ] [ veX ],gVehicles [ veh_id - 1 ] [ veY ],gVehicles [ veh_id - 1 ] [ veZ ],gVehicles [ veh_id - 1 ] [ veA ],gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ], -1 ) ;

	format ( stringer , 128 , "Вы успешно перенесли место спавна автомобиля фракции {00CC00}( %s )", f_info[gVehicles [ veh_id - 1 ] [ vFraction ]][f_name]);
	SendClientMessage(playerid,-1,stringer);
	print("create car fraction #2");
	return 1;
}



CMD:destroyfamilyvehicle(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if ( gVehicles [ veh_id - 1 ] [ vFamily ] == -1 ) return SendClientMessage ( playerid, COLOR_GREY , "Автомобиль не принадлежит никакой семье" ) ;
	new v_family_listitem = -1, f = gVehicles[veh_id - 1][vFamily];
	for ( new i = 0; i < 5; i++)
	{
		if(veh_id == _family[f][family_vehicle_id][i])
		{
			v_family_listitem = i;
			break;
		}
	}
	if(v_family_listitem == -1) return SendClientMessage ( playerid, COLOR_GREY , "Автомобиль не принадлежит никакой семье #2" ) ;
	_family[f][family_vehicle_model][v_family_listitem] = 0;
	_family[f][family_vehicle_v1][v_family_listitem] = 0;
	_family[f][family_vehicle_v2][v_family_listitem] = 0;
	_family[f][family_vehicle_pos_x][v_family_listitem] = 0.0;
	_family[f][family_vehicle_pos_y][v_family_listitem] = 0.0;
	_family[f][family_vehicle_pos_z][v_family_listitem] = 0.0;
	_family[f][family_vehicle_pos_a][v_family_listitem] = 0.0;
	SaveFamily(f);
	format ( stringer , 128 , "Вы успешно удалили машину семьи {00CC00}( %s.%d.%d )",_family[f][family_create_name],_family[f][family_vehicle_id],v_family_listitem);
	SendClientMessage(playerid,-1,stringer);
	DestroyVehicleOP(veh_id);
	return 1;
}

CMD:destroyfractionvehicle(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if ( gVehicles [ veh_id - 1 ] [ vFraction ] == -1 ) return SendClientMessage ( playerid, COLOR_GREY , "Автомобиль не принадлежит никакой фракции" ) ;
	format ( stringer , 128 , "Вы успешно удалили машину фракции {00CC00}( %s .%d. ) ", f_info[gVehicles [ veh_id - 1 ] [ vFraction ]][f_name], gVehicles [ veh_id - 1 ] [ vInc ]);
	SendClientMessage(playerid,-1,stringer);


	new sql_string[250];
	
	mysql_format( connects, sql_string, sizeof(sql_string), "INSERT INTO `fr_vehicles_backup`(`f_c_id`, `f_c_model`, `f_c_fraction`, `f_c_fraction_rank`, `f_c_color_1`, `f_c_color_2`, `f_c_pos_x`, `f_c_pos_y`, `f_c_pos_z`, `f_c_pos_a`, `f_fuel`, `f_c_job`) SELECT * FROM `fr_vehicles` WHERE `f_c_id` = %d", gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");
	
	mysql_format( connects, sql_string, 250, "DELETE FROM `fr_vehicles` WHERE `f_c_id` = '%d'", gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	DestroyVehicleOP(veh_id);

	return 1;
}

forward CreateFractionVehicle(playerid,vehicle_insert);
public CreateFractionVehicle(playerid,vehicle_insert)
{
	gVehicles [ vehicle_insert - 1 ] [ vInc ] = cache_insert_id();
	format ( stringer , 128 , "Машина для создана {00CC00}( MysqlID: %d )", gVehicles [ vehicle_insert - 1 ] [ vInc ]);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}

CMD:addjobvehicle(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/addjobvehicle [ работа ]" ) ;
	else if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");

	new veh_id = GetPlayerVehicleID(playerid);
	GetVehiclePos(veh_id, gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ]);
	GetVehicleZAngle(veh_id, gVehicles [ veh_id - 1 ] [ veA ]);

	if ( ! gVehicles [ veh_id - 1] [ vAdminCreate ] ) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в админ-автомобиле ( /veh ) ") ;

	gVehicles [ veh_id - 1 ] [ vModel ] = GetVehicleModel ( veh_id ) ;
	gVehicles [ veh_id - 1 ] [ vJob ] = params [ 0 ] ;

	new str_add_fract [ 512 ] ;
	format ( str_add_fract , 512 , "INSERT INTO `fr_vehicles`(`f_c_model`, `f_c_job`, `f_c_color_1`, `f_c_color_2`, `f_c_pos_x`, `f_c_pos_y`, `f_c_pos_z`, `f_c_pos_a`) VALUES ('%d','%d','%d','%d','%.4f','%.4f','%.4f','%.4f')",gVehicles [ veh_id - 1 ] [ vModel ], gVehicles [ veh_id - 1 ] [ vJob ], gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ],
	gVehicles [ veh_id - 1 ] [ veX ],gVehicles [ veh_id - 1 ] [ veY ],gVehicles [ veh_id - 1 ] [ veZ ],gVehicles [ veh_id - 1 ] [ veA ]);
	mysql_pquery(connects,str_add_fract,"CreateFractionVehicle","dd",playerid,veh_id);

	if(IsValidVehicle(veh_id))
	{
		DestroyVehicleOP(veh_id, true, false);
	}
	TotalAdminVehicles--;
	gVehicles [ veh_id - 1 ] [ vID ] = 	AddJobVehicle ( gVehicles [ veh_id - 1 ] [ vJob ], gVehicles [ veh_id - 1 ] [ vModel ],gVehicles [ veh_id - 1 ] [ veX ],gVehicles [ veh_id - 1 ] [ veY ],gVehicles [ veh_id - 1 ] [ veZ ],gVehicles [ veh_id - 1 ] [ veA ],gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ], -1 ) ;
	fraction_veh_amount ++ ;
	print("create car job #1");
	return 1;
}



CMD:changevehiclecolorex(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if(!IsAFullDostup(playerid)) return 1;
	else if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if(sscanf(params,"ii",params[0], params[1])) return SendClientMessage(playerid,-1,"/changejobvehiclecolor [ color1 ] [ color 2 ]" ) ;

	gVehicles [ veh_id - 1 ] [ vCol1 ] = params[0];
	gVehicles [ veh_id - 1 ] [ vCol2 ] = params[1];

	ChangeVehicleColor ( veh_id, gVehicles [ veh_id - 1 ] [ vCol1 ], gVehicles [ veh_id - 1 ] [ vCol2 ] ) ;

	//f_c_color_1

	new sql_string[250];
	format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_color_1` = '%d',`f_c_color_2` = '%d' WHERE `f_c_id` = '%d'",
	gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ], gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	format ( stringer , 128 , "Вы успешно изменили цвет этого автомобиля на {00CC00}( %d, %d )", params[0], params[1]);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}

CMD:setjobvehicle(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if(!IsAFullDostup(playerid)) return 1;
	else if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/setjobvehicle [ работа ]" ) ;

	gVehicles [ veh_id - 1 ] [ vJob ] = params[0];

	new sql_string[250];
	format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_job` = '%d' WHERE `f_c_id` = '%d'",gVehicles [ veh_id - 1 ] [ vJob ], gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	format ( stringer , 128 , "Вы успешно изменили работу этого автомобиля на {00CC00}( %d )", gVehicles [ veh_id - 1 ] [ vJob ]);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}

//

CMD:changejobvehiclepos(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if ( gVehicles [ veh_id - 1 ] [ vJob ] == -1 ) return SendClientMessage ( playerid, COLOR_GREY , "Автомобиль не принадлежит никакой работе" ) ;

	GetVehiclePos(veh_id, gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ]);
	GetVehicleZAngle(veh_id, gVehicles [ veh_id - 1 ] [ veA ]);

	new sql_string[250];
	format(sql_string, 250, "UPDATE `fr_vehicles` SET `f_c_pos_x` = '%f',`f_c_pos_y` = '%f',`f_c_pos_z` = '%f',`f_c_pos_a` = '%f' WHERE `f_c_id` = '%d'",gVehicles [ veh_id - 1 ] [ veX ], gVehicles [ veh_id - 1 ] [ veY ], gVehicles [ veh_id - 1 ] [ veZ ], gVehicles [ veh_id - 1 ] [ veA ], gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	DestroyVehicleOP(veh_id, true, false);
	gVehicles [ veh_id - 1 ] [ vID ] = 	AddJobVehicle ( gVehicles [ veh_id - 1 ] [ vJob ], gVehicles [ veh_id - 1 ] [ vModel ],gVehicles [ veh_id - 1 ] [ veX ],gVehicles [ veh_id - 1 ] [ veY ],gVehicles [ veh_id - 1 ] [ veZ ],gVehicles [ veh_id - 1 ] [ veA ],gVehicles [ veh_id - 1 ] [ vCol1 ],gVehicles [ veh_id - 1 ] [ vCol2 ], -1 ) ;

	format ( stringer , 128 , "Вы успешно перенесли место спавна автомобиля работы {00CC00}( %d )", f_info[gVehicles [ veh_id - 1 ] [ vFraction ]][f_name]);
	SendClientMessage(playerid,-1,stringer);
	print("create car job #2");
	return 1;
}

CMD:destroyjobvehicle(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new veh_id = GetPlayerVehicleID(playerid);
	if ( GetPlayerState(playerid) != 2 ) return SendClientMessage ( playerid , -1, "Сядь в машину");
	else if ( gVehicles [ veh_id - 1 ] [ vJob ] == -1 ) return SendClientMessage ( playerid, COLOR_GREY , "Автомобиль не принадлежит никакой работе" ) ;

	DestroyVehicleOP(veh_id);

	new sql_string[250];
	mysql_format( connects, sql_string, 250, "DELETE FROM `fr_vehicles` WHERE `f_c_id` = '%d'", gVehicles [ veh_id - 1 ] [ vInc ] );
	mysql_pquery(connects, sql_string, "", "");

	format ( stringer , 128 , "Вы успешно удалили машину работы {00CC00}( %d .%d. ) ", gVehicles [ veh_id - 1 ] [ vJob ], gVehicles [ veh_id - 1 ] [ vInc ]);
	SendClientMessage(playerid,-1,stringer);

	return 1;
}

CMD:veh(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 5 && !GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return	SCM(playerid, CWHITE, " Используйте: /veh [carid] [цвет1] [цвет2]");
	if(params[0] < 400 || params[0] > 611) return SCM(playerid, CWHITE, "Номер машины не может быть меньше 400 и больше чем 611!");
	if(params[1] < 0 || params[1] > 250) return SCM(playerid, CWHITE, "Номер цвета не может быть меньше 0 и больше 250!");
	if(params[2] < 0 || params[2] > 250) return SCM(playerid, CWHITE, "Номер цвета не может быть меньше 0 и больше 250!");
	if(TotalAdminVehicles > 80)
	{
		SCM(playerid,COLOR_GREY,"Лимит админ-машин превышен");
		return 1;
	}
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	new veh_id = 0 ;
	veh_id = CreateVehicleOP(params[0], X,Y,Z, 0.0, params[1], params[2], 600_000);
	ToggleLock(veh_id, true);
	AC_LinkVehicleToInterior(veh_id, GetPlayerInterior(playerid));
	AC_SetVehicleVirtualWorld(veh_id,GetPlayerVirtualWorld(playerid));
	gVehicles [ veh_id - 1] [ vAdminCreate ] = true;
	format(stringer, 128, "[A] %s [%d] создал автомобиль [model: %d] [vehicleid: %d]", NamePlayer[playerid],playerid,params[0],veh_id);
	AdmMes(COLOR_GREY, stringer,1);
	TotalAdminVehicles ++;
	print("create admin vehicles");
	return 1;
}

CMD:alldelveh(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	new text_string [ 58 + MAX_PLAYER_NAME ] ;
	format ( text_string, sizeof ( text_string ), "[A] %s удалил все автомобили созданные администраторами", NamePlayer[playerid]);
	AdmMes ( CADMIN_INFO, text_string, 1 ) ;
	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		if(gVehicles [ i - 1] [ vAdminCreate ])
		{
			DestroyVehicleOP(i);
		}
	}
	TotalAdminVehicles=0;
	return 1;
}

CMD:delveh(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 5 && !GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
	if( ! TotalAdminVehicles) return 1;
	new vehh = GetPlayerVehicleID(playerid);
	if ( ! gVehicles [ vehh - 1] [ vAdminCreate ] ) return SendClientMessage(playerid, COLOR_GREY, "Этот автомобиль не создавал администратор") ;
	format(stringer, 128, "[A] %s удалил автомобиль [model: %d] [vehicleid: %d]", NamePlayer[playerid],GetVehicleModel(vehh),vehh);
	AdmMes(CADMIN_INFO, stringer,1);
	if(IsValidVehicle(vehh))
	{
		DestroyVehicleOP(vehh);
	}
	TotalAdminVehicles--;
	return 1;
}

CMD:weather(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	else if(sscanf(params,"d",params[0])) return    SCM(playerid, CWHITE, " Используйте: /weather [id погоды]");
	else if(params[0] < 0||params[0] > 45) return SCM(playerid, CWHITE, "ID Погоды не может быть меньше 0 и больше 45!"),1;
	format(stringer, 128, "[A] %s сменил номер погоды на %d", NamePlayer[playerid],params[0]);
	AdmMes(CADMIN_INFO, stringer,1);
	SetWeather(params[0]);
	return 1;
}

CMD:unbanip(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(isnull(params) || strlen(params) > 32) return SendInf(playerid,"/unbanip [IP адрес]");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 144, "SELECT `IP` FROM `new_ban` WHERE `IP` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "unban_ip", "is", playerid, params);

	return 1;
}

forward unban_ip(playerid,ip_banned[]);
public unban_ip(playerid,ip_banned[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		SendErr(playerid,"IP не заблокирован !");
		return 1;
	}

	mysql_query_string[0] = EOS;
	format(mysql_query_string,128,"DELETE FROM `new_ban` WHERE `IP` = '%s' LIMIT 1",ip_banned);
	mysql_pquery(connects, mysql_query_string, "", "");

	format(mysql_query_string,128, "[A] %s разбанил IP: %s", NamePlayer[playerid], ip_banned);
	AdmMes(CADMIN_INFO,mysql_query_string,1);

	return 1;
}

CMD:banip(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 6) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(!uAdmin[playerid][7]) return SendErr(playerid,"Данная функция отключена основателем.");
	//
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	//придут другие наиболее адекватные лидеры , с которыми игрокам будет играть комфортней .
	static BanIP[32];
	static Reason[32];
	//
	if(sscanf(params,"s[31]s[31]",BanIP,Reason)) return SendInf(playerid,"/banip [IP] [причина]");
	if(strfind(BanIP, "*", true) != -1 || strfind(BanIP, "#", true) != -1) return SendInf(playerid,"/banip [IP] [причина]");
	//
	foreach(i)
	{
		if (p_info[i][pAdmin] > 6)
		{
			if (!strcmp(BanIP, PlayerIp[i], true))
			{
				if(IsMegaAdmin(i))
				{
					SCM(playerid, -1, "Вы были сняты с админки за попытку бана основателя");
					DelAdmin(playerid,NamePlayer[playerid]);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Данный IP Адрес нельзя забанить");
					return 1;
				}
			}
		}
	}
	//
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 144, "SELECT `IP` FROM `new_ban` WHERE `IP` = '%s' LIMIT 1", BanIP);
	mysql_pquery(connects, mysql_query_string, "banip", "iss", playerid, BanIP, Reason);
	return 1;
}

forward banip(playerid,ip_banned[], reason[]);
public banip(playerid,ip_banned[], reason[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		mysql_query_string[0] = EOS;
		format(mysql_query_string,512,"INSERT INTO `new_ban`(`IP`, `Name_Admin`, `Ban_Reason`, `Unban_Data`) VALUES ('%s','%s','%s','%i')",ip_banned, NamePlayer[playerid], reason, unix + (7*86400));
		mysql_pquery(connects, mysql_query_string, "", "");

		format(mysql_query_string,255, "[A] %s забанил IP: %s | Причина: %s", NamePlayer[playerid], ip_banned, reason);
		AdmMes(CADMIN_INFO,mysql_query_string,1);
	}
	else SendErr(playerid, "IP уже заблокирован");
	return 1;
}

CMD:alock(playerid)
{
	if(p_info[playerid][pAdmin] < 3) return 1;
	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
		if(PlayerToPoint(4.0, playerid, gVehicles[i-1][veX],gVehicles[i-1][veY],gVehicles[i-1][veZ]))
		{
			new model = GetVehicleModel(i);
			if(!model) break;
			ToggleLock(i, (gVehicles[i-1][vLock]) ? (false) : (true));
			UpdateTDLock(playerid, i);
			format(stringer, 128, "машина: <%s> [%i] %s", VehicleNames[model-400], i, (gVehicles[i-1][vLock]) ? ("{"#cGREEN"}открыта{"#cWHITE"}") : ("{"#cRED"}закрыта{"#cWHITE"}"));
			SendInf(playerid,stringer);
			break;
		}
	}
	return 1;
}
//
CMD:facepalm(playerid)
{
	SetPlayerChatBubble(playerid, "Facepalm", 0xE75480FF, 30.0, 10000);
	FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
	return 1;
}
//
ALT:animlist:anim;
CMD:animlist(playerid,params[])
{
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(GetPVarInt(playerid,"crack_tazer"))
	{
		FIXES_ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
		SendClientMessage(playerid,COLOR_GREY,"Вы оглушены. Действие не возможно");
		return 1;
	}
	new id;
	if(sscanf(params,"i",id))
	{
		stringer[0] = EOS;
		strcat(stringer,"1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Одеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n");
		strcat(stringer,"25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n");
		strcat(stringer,"45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться");
		ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST, "Список анимаций", stringer, "Выбрать", "Отмена");
	}
	switch(id)
	{
			case 0:
			{
				stringer[0] = EOS;
				strcat(stringer,"1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Одеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n");
				strcat(stringer,"25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n");
				strcat(stringer,"45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться");
				ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST, "Список анимаций", stringer, "Выбрать", "Отмена");
				return 1;
			}
			case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
			case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
			case 6: FIXES_ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
			case 7: FIXES_ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
			case 8: FIXES_ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
			case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
			case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
			case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
			case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
			case 13: FIXES_ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
			case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
			case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
			case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
			case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
			case 18: FIXES_ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
			case 19: GoAnim(playerid,"PED","handsup",4.1,1,0,0,0,0,0);
			case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
			case 21: FIXES_ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
			case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
			case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
			case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
			case 25: FIXES_ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
			case 26: FIXES_ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
			case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
			case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
			case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
			case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
			case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
			case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
			case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
			case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
			case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
			case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
			case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
			case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
			case 39: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
			case 40: FIXES_ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
			case 41: FIXES_ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
			case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
			case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
			case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
			case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
			case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
			case 47: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
			case 48: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
			case 49: FIXES_ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
			case 50: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
			case 51: FIXES_ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
			case 52: FIXES_ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
			case 53: FIXES_ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
			case 54: FIXES_ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
			case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
			case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
			case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
			case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
			case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
			case 60: FIXES_ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
			case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
			case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
			case 63: FIXES_ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
			case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
	}
	SetPVarInt(playerid,"Animation", 2);
	TextDrawShowForPlayer(playerid, AnimDraw);
	return 1;
}

CMD:renthome(playerid)
{
	for(new h = 1; h < TotalHouse; h++)
	{
		if(!PlayerToPoint(3.0,playerid,gHouses[h][houseX],gHouses[h][houseY],gHouses[h][houseZ])) continue;
		if(!gHouses[h][gRentStatus]) return SendClientMessage(playerid,COLOR_GREY,"Аренда в этом доме отключена");
		//
		for(new i = 0; i < 5; i++)
		{
			if(!strcmp(gHouseArendator[h][i],"The State"))
			{
				if ( p_info[playerid][pHouse] > 0 || p_info[playerid][pTempKey] > 0 ) return SendClientMessage ( playerid, COLOR_GREY, "У вас есть дом" ) ;

				p_info[playerid][pTempKey] = h ;
				strmid(gHouseArendator[h][i],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),31);
				gHouses[h][RentPlata][i] = gHouses[h][RentAllPlata];
				gHouses[h][RentStatus][i] = 1;
				format(stringer,128,"Вы арендуете дом у %s", gHouses[h][houseOwner]);
				SendClientMessage(playerid,CORANGE,stringer);
				SendClientMessage(playerid,CORANGE,"Не забывайте оплачивать дом в банкомате");
				SaveHome(h);
				UpdatePlayerData(playerid,"pTempKey", p_info[playerid][pTempKey] ) ;
				UpdateTempVehicle(playerid,1);
				UpdateTempVehicle(playerid,2);
				SetExitHousePos(playerid,h);
				SetPlayerVirtualWorld(playerid,h);

				return 1;
			}
		}
	}
	SendClientMessage(playerid,COLOR_GREY,"В доме нет места");
	return 1;
}


CMD:givevipcar(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && strcmp(NamePlayer[playerid],"Mattio_AnconaO")) return 1;
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "/givevipcar [playerid]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(0 == p_info[params[0]][pHouse]) return SendClientMessage(playerid,COLOR_GREY, "У игрока нет дома");

	p_info[params[0]][pVipCar] = (p_info[params[0]][pVipCar]) ? (0) : (1);


	new yst[144];

	format(yst, 144, "Вы %s VIP-машину игроку %s [%i]" , (p_info[params[0]][pVipCar]) ? ("выдали") : ("забрали"), NamePlayer[params[0]], params[0]);
	SendClientMessage(playerid, CBLUE, yst);

	format(yst, 144, "Вам %s VIP-машину администратор %s [%i]" , (p_info[params[0]][pVipCar]) ? ("выдал") : ("забрал"), NamePlayer[playerid], playerid);
	SendClientMessage(params[0], CBLUE, yst);

	/*if(p_info[params[0]][pVipCar])
	{
		SendClientMessage(params[0], CBLUE, "Управление машиной: {"#cWHITE"}/vipcar");
	}*/


	UpdatePlayerData(params[0], "pVipCar", p_info[params[0]][pVipCar]);
	return 1;
}

CMD:t(playerid,params[])
{
	if ( p_info[playerid][pAdmin] < 10 ) return 1;
	new text[70], text_ID;
	if(sscanf(params,"is[70]", text_ID, text)) return SCM(playerid,CGRAY, "/t [ID] [Текст]");
	if (!IsPlayerConnected(text_ID) || IsBotServer(text_ID)) return SCM(playerid,CGRAY,"Игрок не в сети!");
	OnPlayerText(text_ID, text);
	return 1;
}

CMD:rmenu(playerid)
{
	if(!p_info[playerid][pRoom]) return SendErr(playerid, "У вас нет комнаты");
	ShowPlayerDialog(playerid, dFlatMenu, DIALOG_STYLE_LIST, ""ORG"Управление комнатой", ""ORG"1. {"#cWHITE"}Управление счетом\n"ORG"2. {"#cWHITE"}Выселиться из комнаты", "Выбрать", "Отмена");
	return 1;
}

CMD:asellhome1(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	new houseid;
	if(sscanf(params,"i",houseid)) return SendClientMessage(playerid, -1, "/asellhome [houseid]");
	if(houseid < 1 || houseid >= TotalHouse) return 1;
	if(!strcmp(gHouses[houseid][houseOwner],"The State")) return SendClientMessage(playerid, -1, "Дом продан уже.");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 144, "UPDATE `housetest` SET `hOwner` = 'The State' WHERE `hID` = '%d' LIMIT 1", gHouses[houseid][hID]);
	mysql_pquery(connects,mysql_query_string);

	format(mysql_query_string, 144, "UPDATE `accounts` SET `pPhousekey` = '0', `pHouseCash` = '%d' WHERE `tName` = '%s' LIMIT 1", gHouses[houseid][hValue]/10, gHouses[houseid][houseOwner]);
	mysql_pquery(connects,mysql_query_string);

	new playeridd = GetPlayerID (  gHouses[houseid ][houseOwner] ) ;
	if ( playeridd != INVALID_PLAYER_ID )
	{
		p_info[playeridd][pHouse] = 0;

		format(mysql_query_string, 144, "Ваш дом был продан администратором: %s", NamePlayer[playerid]);
		SCM(playeridd, CBADINFO, mysql_query_string);
	}

	gHouses[ houseid ][hHel] = 0;
	gHouses[ houseid ][hLock] = 1;
	strmid(gHouses[ houseid ][houseOwner], "The State", 0, strlen("The State"), 31);

	UpdateHome(houseid);
	SaveHome(houseid);

	stringer[0] = EOS;
	format(stringer, 68, "%s продал дом номер %d", NamePlayer [ playerid ], houseid ) ;
	WriteLog(TYPE_LOG_ASELLHOME, stringer);

	return 1;
}

CMD:hfurn(playerid)
{
	if(GetPlayerVirtualWorld(playerid) != p_info[playerid][pHouse]) return SendErr(playerid, "Вы не дома");
	if ( show_furn_p_td[playerid][0] ) return 1;
	new
		Float:start_furn_object_x = 348.000000,
		Float:start_furn_object_y = 275.000000 - 100.000000,

		Float:size_furn_object_x = 50.000000,
		Float:size_furn_object_y = 40.000000,

		Float:start_furn_text_x = 350.000000,
		Float:start_furn_text_y = 316.000000 - 100.000000,

		Float:size_furn_text_x = 396.300000,
		Float:size_furn_text_y = 5.000000, h = p_info[playerid][pHouse], count_furniture = 0;

	for(new d = 0; d < MAX_SLOT_FURNITURE; d++){
		if ( p_td_furn_object[playerid][d] != PlayerText:-1){
			PlayerTextDrawDestroy(playerid, p_td_furn_object[playerid][d]);
			p_td_furn_object[playerid][d] = PlayerText:-1 ;
		}
		if ( p_td_furn_text[playerid][d] != PlayerText:-1){
			PlayerTextDrawDestroy(playerid, p_td_furn_text[playerid][d]);
			p_td_furn_text[playerid][d] = PlayerText:-1 ;
		}
	}
	for(new d = 0; d < MAX_SLOT_FURNITURE; d++){
		if ( gHouseFurniture[h][d][Furn_Model] == 0 ) continue;
		p_td_furn_object[playerid][d] = CreatePlayerTextDraw ( playerid, start_furn_object_x, start_furn_object_y, "PreviewModel" ) ;
		PlayerTextDrawTextSize ( playerid, p_td_furn_object[playerid][d], size_furn_object_x, size_furn_object_y ) ;
		PlayerTextDrawAlignment ( playerid, p_td_furn_object[playerid][d], 3);
		PlayerTextDrawColor ( playerid, p_td_furn_object[playerid][d], -1);
		PlayerTextDrawBackgroundColor ( playerid, p_td_furn_object[playerid][d], (gHouseFurniture[h][d][Furn_ObjectID] == -1) ? (0xEE6055AA) : (1046507434));
		PlayerTextDrawFont ( playerid, p_td_furn_object[playerid][d], 5);
		PlayerTextDrawSetPreviewModel ( playerid, p_td_furn_object[playerid][d], gHouseFurniture[h][d][Furn_Model]);
		PlayerTextDrawSetPreviewRot ( playerid, p_td_furn_object[playerid][d], 0.000000, 0.000000, 90.000000, 0.800000);
		PlayerTextDrawSetSelectable ( playerid, p_td_furn_object[playerid][d], true);

		p_td_furn_text[playerid][d] = CreatePlayerTextDraw ( playerid, start_furn_text_x, start_furn_text_y + 1.00000, Furn_GetNameClass(gHouseFurniture[h][d][Furn_Model]));
		PlayerTextDrawLetterSize ( playerid, p_td_furn_text[playerid][d], 0.232605, 0.830000);
		PlayerTextDrawTextSize ( playerid, p_td_furn_text[playerid][d], size_furn_text_x, size_furn_text_y);
		PlayerTextDrawAlignment ( playerid, p_td_furn_text[playerid][d], 1);
		PlayerTextDrawSetOutline ( playerid, p_td_furn_text[playerid][d], 1);
		PlayerTextDrawColor ( playerid, p_td_furn_text[playerid][d], -50334209);
		PlayerTextDrawUseBox ( playerid, p_td_furn_text[playerid][d], true);
		PlayerTextDrawBoxColor ( playerid, p_td_furn_text[playerid][d], (gHouseFurniture[h][d][Furn_ObjectID] == -1) ? (0xEE6055AA) : (1046507434));
		PlayerTextDrawBackgroundColor ( playerid, p_td_furn_text[playerid][d], 0x00000000);
		PlayerTextDrawFont ( playerid, p_td_furn_text[playerid][d], 1);
		PlayerTextDrawSetSelectable ( playerid, p_td_furn_text[playerid][d], true);

		start_furn_object_x += 52.000000;
		start_furn_text_x += 52.000000;
		size_furn_text_x += 52.000000;
		if ( d == 5 - 1 || d == 10 - 1 || d == 15 - 1 || d == 20 - 1 )
		{
			start_furn_object_y += 55.000000;
			start_furn_text_y += 55.000000;
			start_furn_object_x = 348.000000;
			start_furn_text_x = 350.000000;
			size_furn_text_x = 396.000000;
		}
		count_furniture++;
	}
	if ( count_furniture == 0) return SendClientMessage(playerid,CGRAY,"У вас нет мебели");
	TextDrawShowForPlayer ( playerid, gFurnInfo ) ;
	for(new d = 0; d < MAX_SLOT_FURNITURE; d++)if(p_td_furn_object[playerid][d]!=PlayerText:-1) PlayerTextDrawShow ( playerid, p_td_furn_object[playerid][d] ) ;
	for(new d = 0; d < MAX_SLOT_FURNITURE; d++)if(p_td_furn_text[playerid][d]!=PlayerText:-1) PlayerTextDrawShow ( playerid, p_td_furn_text[playerid][d] ) ;
	SelectTextDraw(playerid,0x91AA9DFF);
	show_furn_p_td[playerid][0]=true;
	return 1;
}//

CMD:hmenu(playerid)
{
	if(p_info[playerid][pTempKey] > 0)
	{
		ShowPlayerDialog(playerid, dRentMenu, DIALOG_STYLE_LIST, "Панель арендатора", "Выселиться из дома\nПосмотреть счет аренды", "Выбрать", "Закрыть");
		return 1;
	}
	if(0 == p_info[playerid][pHouse]) return SCM(playerid, -1, "Вы не владелец жилого дома");
	stringer[0]=EOS;
	format(stringer, sizeof(stringer),
		"\
		{"#cWHITE"}Номер дома:\t\t\t{"#cORANGE"}%d\n\
		{"#cWHITE"}Класс:\t\t\t\t{"#cORANGE"}%s\n\
		{"#cWHITE"}Cтоимость:\t\t\t{"#cORANGE"}%d\n\
		{"#cWHITE"}Двери дома:\t\t\t{"#cORANGE"}%s\n\
		{"#cWHITE"}Автомобиль #1:\t\t{"#cORANGE"}%s\n\
		{"#cWHITE"}Автомобиль #2:\t\t{"#cORANGE"}%s\n\
		{"#cWHITE"}Оплачено дней:\t\t{"#cORANGE"}%d\n\
		{"#cWHITE"}Аптечки:\t\t\t{"#cORANGE"}%d\n\
		{"#cORANGE"}Для открытия панели управления вашим домом\nНажмите кнопку 'Изменить'",
	p_info[playerid][pHouse],
	gHousesClassName[gHouses[p_info[playerid][pHouse]][hKlass]-1],
	gHouses[p_info[playerid][pHouse]][hValue],
	(gHouses[p_info[playerid][pHouse]][hLock]) ? ("Открыты") : ("Закрыты"),
	(!caridhouse[playerid][0] || GetVehicleModel(caridhouse[playerid][0]) < 400) ? ("Не имеется") : (VehicleNames[GetVehicleModel(caridhouse[playerid][0])-400]),
	(!caridhouse[playerid][1] || GetVehicleModel(caridhouse[playerid][1]) < 400) ? ("Не имеется") : (VehicleNames[GetVehicleModel(caridhouse[playerid][1])-400]),
	gHouses[p_info[playerid][pHouse]][hDays],
	gHouses[p_info[playerid][pHouse]][hHel]);
	ShowPlayerDialog(playerid, 5301, DIALOG_STYLE_MSGBOX, "Панель дома", stringer, "Изменить", "Закрыть");
	return 1;
}
//
CMD:fixcar(playerid,params[])
{
	if(p_info[playerid][pCash] < 50) return SendErr(playerid, "Не достаточно денег");
	if(p_info[playerid][pRoom])
	{
		SetHotelCar(playerid);
		GameTextForPlayer(playerid, "~r~$-50", 5000, 1);
		TransferMoney(playerid,p_info[playerid][pCash]-50,50,">> fixcar");
		p_info[playerid][pCash] -= 50;
		UpdateMoney(playerid);
		return 1;
	}
	if(p_info[playerid][pTempKey])
	{
		if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /fixcar [1/2]");
		if(params[0] < 1 || params[0] > 2) return SendInf(playerid, "Используйте: /fixcar [1/2]");
		UpdateTempVehicle(playerid,params[0]);
		GameTextForPlayer(playerid, "~r~$-50", 5000, 1);
		TransferMoney(playerid,p_info[playerid][pCash]-50,50,">> fixcar");
		p_info[playerid][pCash] -= 50;
		UpdateMoney(playerid);
		return 1;
	}
	if(0 == p_info[playerid][pHouse]) return 1;
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "Используйте: /fixcar [1/2]");
	if(params[0] < 1 || params[0] > 2) return SendInf(playerid, "Используйте: /fixcar [1/2]");
	if(IsSellsCar(playerid, params[0]) != -1) return SendClientMessage(playerid,COLOR_GREY,"Недоступно. Данный автомобиль продается");
	new vehicleid = caridhouse[playerid][ params[0] - 1 ];
	if(!vehicleid) return SendClientMessage(playerid,COLOR_GREY,"Попробуйте перезайти для решения проблемы.");
	SetVehicleToHouse(playerid, params[0], true);
	ToggleLock(vehicleid);
	//gVehicles[vehicleid - 1][vFuel] = p_info [ playerid ] [ p_car_fuel ][ params[0] - 1 ];
	GameTextForPlayer(playerid, "~r~-50$", 5000, 1);
	TransferMoney(playerid,p_info[playerid][pCash]-50,50,">> fixcar");
	p_info[playerid][pCash] -= 50;
	UpdateMoney(playerid);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}
//
CMD:showcarpass(playerid,params[])
{
	if(!caridhouse[playerid][0] && !caridhouse[playerid][1] && GetVehicleModel(caridhouse[playerid][0]) < 400 && GetVehicleModel(caridhouse[playerid][1]) < 400) return true;
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "/showcarpass [playerid]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок не в сети");
	if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid,"Игрок не рядом с вами");
	new house = p_info[playerid][pHouse];
	if(caridhouse[playerid][0] <= 0 || house == 0) return SendClientMessage(playerid,CGRAY,"У вас нет автомобиля / дома.");
	SendClientMessage(params[0],0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	//
	format(stringer, 128, "Модель: %s",VehicleNames[GetVehicleModel(caridhouse[playerid][0])-400]);
	SendClientMessage(params[0],0xC0E1EEFF,stringer);
	//
	format(stringer, 128, "Владелец: %s",gHouses[house][houseOwner]);
	SendClientMessage(params[0],0xC0E1EEFF,stringer);
	//
	format(stringer, 128, "Состояние: %d",p_info[playerid][pProz]);
	SendClientMessage(params[0],0xC0E1EEFF,stringer);
	//
	SendClientMessage(params[0],0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	format(stringer, 128, "%s достал(а) документы и показал(а) их %s", NamePlayer[playerid],NamePlayer[params[0]]);
	SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	return 1;
}

CMD:carpass(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return   SCM(playerid, CGRAD2, "Вы не в машине!");
	new house = p_info[playerid][pHouse];
	if(caridhouse[playerid][0] <= 0 || house == 0) return SendClientMessage(playerid,CGRAY,"У вас нет автомобиля / дома.");
	SCM(playerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	format(stringer, 144, "Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SCM(playerid,0xC0E1EEFF, stringer);
	format(stringer, 144, "Владелец: %s",gHouses[house][houseOwner]);
	SCM(playerid,0xC0E1EEFF, stringer);
	format(stringer, 144, "Состояние: %d",p_info[playerid][pProz]);
	SCM(playerid,0xC0E1EEFF, stringer);
	SCM(playerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	format(stringer,128, "достал(а) документы из бардачка",NamePlayer[playerid]);
	SetPlayerChatBubble(playerid,stringer,0xE75480FF,30.0,10000);
	return 1;
}

CMD:sellcar(playerid,params[])
{
	if(GetPVarInt(playerid,"carPokupaet")) return SendClientMessage(playerid,COLOR_GREY,"В данный момент недоступно.");
	if(p_info[playerid][pHouse] == 0 && p_info[playerid][pTempKey] == 0 && p_info[playerid][pRoom] == 0) return SCM(playerid,CRED,"У вас нет дома");
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,COLOR_GREY,"Используйте: /sellcar [1/2]");
	if(params[0]<1 || params[0]>MAX_PLAYER_CAR) return SendClientMessage(playerid,COLOR_GREY,"Используйте: /sellcar [1/2]");
	if(PlayerCar[playerid][params[0]-1] == 462 || PlayerCar[playerid][params[0]-1]==0) return SCM(playerid,CGRAD1,"Вы не можете продать мопед");
	if(IsSellsCar(playerid, params[0]) != -1) return SendClientMessage(playerid,COLOR_GREY,"Недоступно. Данный автомобиль продается");
	if ( params[0] == 2 )
	{
		if ( p_info[playerid][pVipCar] != 0 )
		{
			p_info[playerid][pVipCar] = 0;
			UpdatePlayerData(playerid, "pVipCar", 0);
			SetVehicleToHouse(playerid, 2, true);
			//////
			return 1;
		}
	}
	new price = floatround(gTransport[PlayerCar[playerid][params[0]-1]-400][trPrice]/10);
	TransferMoney(playerid,p_info[playerid][pCash]+price,price,"продал машину (/sellcar)");
	p_info[playerid][pCash] += price;
	UpdateMoney(playerid);

	gPlayerTuning[playerid][params[0]-1][0]  = 1;
	gPlayerTuning[playerid][params[0]-1][1]  = 255;
	gPlayerTuning[playerid][params[0]-1][2]  = -1;
	gPlayerTuning[playerid][params[0]-1][3]  = -1;
	gPlayerTuning[playerid][params[0]-1][4]  = -1;
	gPlayerTuning[playerid][params[0]-1][5]  = -1;
	gPlayerTuning[playerid][params[0]-1][6]  = -1;
	gPlayerTuning[playerid][params[0]-1][7]  = -1;
	gPlayerTuning[playerid][params[0]-1][8]  = -1;
	gPlayerTuning[playerid][params[0]-1][9]  = -1;
	gPlayerTuning[playerid][params[0]-1][10] = -1;
	gPlayerTuning[playerid][params[0]-1][11] = -1;

	PlayerCar[playerid][params[0]-1] = 462;
	SendSucc(playerid,"Вы продали свой автомобиль");
	UpdatePlayerData(playerid,"pCar",PlayerCar[playerid][0]);
	UpdatePlayerData(playerid,"pCar2",PlayerCar[playerid][1]);
	UpdateTuning(playerid,params[0]);
	SetVehicleToHouse(playerid,params[0], true);
	return 1;
}

CMD:get(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 3) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(isnull(params) || strlen(params) > 24) return SendInf(playerid,"/get [ник]");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 300, "SELECT `ID`, `tName`, `pCash`, `pLevel`, `pIpReg`, `pGetonIP`, `pDataReg`, `pRouble` FROM `accounts` WHERE `tName` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "get_info_player", "i", playerid);

	return 1;
}

forward get_info_player(playerid);
public get_info_player(playerid)
{
	print ("cache_get_row [ get_info_player ]");
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		new name[MAX_PLAYER_NAME];
		new ipreg[32+1];
		new getonip[32+1];
		new datareg[32+1];

		cache_get_value_index(0,1,name, MAX_PLAYER_NAME);
		cache_get_value_index(0,4,ipreg, 32+1);
		cache_get_value_index(0,5,getonip, 32+1);
		cache_get_value_index(0,6,datareg, 32+1);

		new id,cash,level,donate;
		cache_get_value_index_int(0,0,id);
		cache_get_value_index_int(0,2,cash);
		cache_get_value_index_int(0,3,level);
		cache_get_value_index_int(0,7,donate);

		mysql_query_string[0] = EOS;
		format(mysql_query_string, 800, "{"#cORANGE"}Номер аккаунта: {ffffff}%d\n{"#cORANGE"}Деньги наличными: {ffffff}%d $\n{"#cORANGE"}Уровень: {ffffff}%d\n{"#cORANGE"}REG-IP: {ffffff}%s\n{"#cORANGE"}LAST-IP: {ffffff}%s\n{"#cORANGE"}Донат-рублей: {ffffff}%d\n{"#cORANGE"}Дата-регистрации: {ffffff}%s",
		id,cash,level,ipreg,getonip,donate,datareg);
		ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,name,mysql_query_string,"Закрыть","");
	}
	else SendClientMessage(playerid,COLOR_GREY,"Не найдено");

	return 1;
}

CMD:pgetip(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(isnull(params) || strlen(params) > 32) return SCM(playerid, CWHITE, " Используйте: /pgetip [ip]");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 300, "SELECT `tName` FROM `accounts` WHERE `pGetonIP` = '%s'", params);
	mysql_pquery(connects, mysql_query_string, "p_get_ip", "i",playerid);

	return 1;
}

forward p_get_ip(playerid);
public p_get_ip(playerid)
{
	print ("cache_get_row [ p_get_ip ]");
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		SendClientMessage(playerid,CYELLOW,"# 	Имя");
		new name[MAX_PLAYER_NAME+1];
		for(new i = 0; i < rows; i++)
		{
			cache_get_value_index(i,0,name,MAX_PLAYER_NAME+1);
			format(stringer, 128, "%i. 	%s", i+1,name);
			SendClientMessage(playerid,-1,stringer);
		}
	}
	else SendClientMessage(playerid,COLOR_GREY,"Не найдено");

	return 1;
}

CMD:sellzone(playerid,params[])
{
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] != -1)
	{
		new i = IDGZ[playerid];
		if(p_info[playerid][tLeader] != GZInfo[i][gFrakVlad]) return 	SCM(playerid, CGRAD1, "Вы не на своей зоне!");
		else if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, CWHITE, " Используйте: /sellzone [id] [цена]");
		else if(params[1] < 10000 || params[1] > 100000) { SCM(playerid, CWHITE, "Цена должна быть: от 10000 до 100000!"); return 1; }
		else if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
		else if(!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами");
		else if(params[0] == playerid) { SCM(playerid, CWHITE, "Себе  нельзя!"); return 1; }
		format(stringer, 144, "Вы предложили %s купить территорию за %d $",NamePlayer[params[0]],params[1]);
		SCM(playerid, 0x6ab1ffaa, stringer);
		format(stringer, 144, "%s предлагает Вам купить территорию за %d $. ((  Используйте: /accept zone для покупки ))",NamePlayer[playerid],params[1]);
		SCM(params[0], 0x6ab1ffaa, stringer);
		SetPVarInt(params[0],"ZoneOffer", playerid + 1);
		SetPVarInt(params[0],"ZonePrice", params[1]);
		SetPVarInt(params[0],"sellzone", p_info[playerid][tMember]);
	}
	return 1;
}

CMD:agetip(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	else if(isnull(params) || strlen(params) > 24) return SCM(playerid, CWHITE, "Используйте: /agetip [имя игрока]");

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `accounts` WHERE `tName` = '%s' LIMIT 1", params);
	mysql_pquery(connects, mysql_query_string, "AGetIp", "is", playerid, params);
	return 1;
}

CMD:agetipreg(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(sscanf(params,"i",params[0])) return	SCM(playerid, CWHITE, "Используйте: /agetipreg [playerid]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок не найден");

	new ipreg[17];
	GetPVarString(params[0], "IpReg", ipreg, 16);

	format(stringer, 128,"Ник: %s | IP: %s",NamePlayer[params[0]],ipreg);
	SCM(playerid,CWHITE,stringer);
	return 1;
}

CMD:addhouse(playerid,params[])
{
	if(!IsAFullDostup(playerid)) return 1;
	new house_class, house_price;
	new Float:X, Float:Y, Float:Z, Float:A;

	if(TotalHouse>=MAX_HOUSES) return SendClientMessage(playerid,COLOR_GREY,"Лимит домов исчерпан");
	if(sscanf(params, "ii", house_class,house_price))
	{
		SCM(playerid, COLOR_GREY, "/addhouse [номер класса] [цена продажи]");
		SCM(playerid, COLOR_GREY, "Классы: [1 - Эконом-класс] [2 - Комфорт-класс] [3 - Премиум-класс] [4 - Элитный-класс]");
		return 1;
	}
	if(house_class > 4 || house_class < 1)
	{
		SCM(playerid, COLOR_GREY, "ID интерьера от 0 до 30");
		return 1;
	}
	SetPVarInt(playerid, "aretick", GetTickCount());
	//
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	gHouses[TotalHouse][houseX]=X;
	gHouses[TotalHouse][houseY]=Y;
	gHouses[TotalHouse][houseZ]=Z;
	gHouses[TotalHouse][houseA]=A;
	gHouses[TotalHouse][hKlass]=house_class;
	gHouses[TotalHouse][hValue]=house_price;
	gHouses[TotalHouse][hLock]=0;
	gHouses[TotalHouse][hDays]=1;
	strmid(gHouses[TotalHouse][houseOwner],"The State",0,strlen("The State"),28);
	format(stringer, 144, "Вы успешно создали дом номер {e7e7e7}%d {ffffff}Стоимость покупки: {e7e7e7}%d",TotalHouse,gHouses[TotalHouse][hValue]);
	SendClientMessage(playerid,-1,stringer);
	//
	mysql_query_string[0] = EOS;
	format(mysql_query_string,1000,"INSERT INTO `housetest`\
	(`hEntrx`, `hEntry`, `hEntrz`,`houseA`, `hOwner`, `hDiscript`, `hPrice`, `hLock`, `hCarx`, `hCary`, `hCarz`, `hCara`, `hDays`) VALUES \
	('%.2f','%.2f','%.2f','%.2f','The State','%d','%d','0','%.2f','%.2f','%.2f','%.2f','1')",
	gHouses[TotalHouse][houseX],gHouses[TotalHouse][houseY],gHouses[TotalHouse][houseZ],gHouses[TotalHouse][houseA],gHouses[TotalHouse][hKlass],gHouses[TotalHouse][hValue],
	gHouses[TotalHouse][houseParkX],gHouses[TotalHouse][houseParkY],gHouses[TotalHouse][houseParkZ],gHouses[TotalHouse][houseParkR]);
	mysql_pquery(connects,mysql_query_string,"AddHouseEpt","d", TotalHouse);
	//
	gHouses[TotalHouse][hPickup] = CreateDynamicPickup(1273, 23, gHouses[TotalHouse][houseX], gHouses[TotalHouse][houseY], gHouses[TotalHouse][houseZ]);
	gHouses[TotalHouse][hMIcon] = CreateDynamicMapIcon(gHouses[TotalHouse][houseX], gHouses[TotalHouse][houseY], gHouses[TotalHouse][houseZ], 31, CWHITE);
	gHouses[TotalHouse][hArea] = CreateDynamicSphere(gHouses[TotalHouse][houseX], gHouses[TotalHouse][houseY], gHouses[TotalHouse][houseZ], 1.3, 0, 0, -1);
	//
	TotalHouse++;
	return 1;
}

forward AddHouseEpt(id_house);
public AddHouseEpt(id_house)
{
	gHouses[id_house][hID] = cache_insert_id();
	return 1;
}

CMD:changehousepos(playerid,params[])
{
	if(!IsAFullDostup(playerid)) return 1;
	new houseid,Float:X, Float:Y, Float:Z, Float:A;
	if(sscanf(params,"i",houseid)) return SendClientMessage(playerid,-1,"/changehousepos [houseid]");
	if(houseid < 1 || houseid >= TotalHouse) return 1;

	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,A);

	SetPVarInt(playerid, "aretick", GetTickCount());

	gHouses[houseid][houseX]=X;
	gHouses[houseid][houseY]=Y;
	gHouses[houseid][houseZ]=Z;
	gHouses[houseid][houseA]=A;


	DestroyDynamicArea(gHouses[houseid][hArea]);
	DestroyDynamicPickup(gHouses[houseid][hPickup]);
	DestroyDynamicMapIcon(gHouses[houseid][hMIcon]);

	if(!strcmp(gHouses[houseid][houseOwner],"The State"))
	{
		gHouses[houseid][hPickup] = CreateDynamicPickup(1273, 1, X, Y, Z);
		gHouses[houseid][hMIcon] = CreateDynamicMapIcon(X, Y, Z, 31, -1);
	}
	else
	{
		gHouses[houseid][hPickup]= CreateDynamicPickup(1272, 1, X, Y, Z);
		gHouses[houseid][hMIcon] = CreateDynamicMapIcon(X, Y, Z, 32, -1);
	}

	gHouses[houseid][hArea] = CreateDynamicSphere(X, Y, Z, 1.3, 0, 0, -1);

	format(stringer, 128, "Вы установили новые координаты для дома: {e7e7e7}%d",houseid);
	SendClientMessage(playerid,-1,stringer);

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 350, "UPDATE `housetest` SET `hEntrx` = '%.2f', `hEntry` = '%.2f', `hEntrz` = '%.2f',`houseA` = '%.2f' WHERE `hID` = '%d'",X,Y,Z,A,gHouses[houseid][hID]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}

CMD:changehouseposcar(playerid,params[])
{
	if(!IsAFullDostup(playerid)) return 1;
	new houseid,Float:X, Float:Y, Float:Z, Float:A;
	if(sscanf(params,"i",houseid)) return SendClientMessage(playerid,-1,"/changehouseposcar [houseid]");
	if(houseid < 1 || houseid >= TotalHouse) return 1;

	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_GREY, "Нужно быть в машине");
	GetVehiclePos(GetPlayerVehicleID(playerid),X,Y,Z);
	GetVehicleZAngle(GetPlayerVehicleID(playerid),A);

	gHouses[houseid][houseParkX]=X;
	gHouses[houseid][houseParkY]=Y;
	gHouses[houseid][houseParkZ]=Z;
	gHouses[houseid][houseParkR]=A;

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "Вы установили новые координаты машины для дома: {e7e7e7}%d",houseid);
	SendClientMessage(playerid,-1,mysql_query_string);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 350, "UPDATE `housetest` SET `hCarx` = '%.2f', `hCary` = '%.2f', `hCarz` = '%.2f',`hCara` = '%.2f' WHERE `hID` = '%d'",X,Y,Z,A,gHouses[houseid][hID]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}

CMD:addbiz(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	new bizz_price;
	if(sscanf(params,"i",bizz_price)) return SendClientMessage(playerid,-1,"/addbiz [цена]");
	stringer[0]=EOS;
	for ( new i = 0; i < sizeof(bizz_type); i++) format(stringer,512,"%s%s\n",stringer,bizz_type[i][bz_name]);
	ShowPlayerDialog(playerid, dRandom, DIALOG_STYLE_LIST, "  ", stringer,"Выбрать","Отмена");
	SetPVarInt(playerid,"bizz_buy_price",bizz_price);
	return 1;
}

CMD:setbuyprice(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "/setenter [ID]");
	new Float:X[4];
	GetPlayerPos(playerid, X[0], X[1], X[2]);
	GetPlayerFacingAngle(playerid, X[3]);
	Business[params[0]][EnterX] = X[0];
	Business[params[0]][EnterY] = X[1];
	Business[params[0]][EnterZ] = X[2];
	Business[params[0]][EnterR] = X[3];
	//SavePositionBizz(params[0]);
	SCM(playerid, CYELLOW, "Готово");
	return 1;
}

CMD:setenter(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "/setenter [ID]");
	new Float:X[4];
	GetPlayerPos(playerid, X[0], X[1], X[2]);
	GetPlayerFacingAngle(playerid, X[3]);
	Business[params[0]][EnterX] = X[0];
	Business[params[0]][EnterY] = X[1];
	Business[params[0]][EnterZ] = X[2];
	Business[params[0]][EnterR] = X[3];
	//SavePositionBizz(params[0]);
	SCM(playerid, CYELLOW, "Готово");
	return 1;
}

CMD:mark(playerid)
{
	if(p_info[playerid][pAdmin] < 3) return 1;
	new Float: MarkX, Float: MarkY, Float: MarkZ;
	GetPlayerPos(playerid, MarkX, MarkY, MarkZ);
	SetPVarFloat(playerid, "MarkX", MarkX);
	SetPVarFloat(playerid, "MarkY", MarkY);
	SetPVarFloat(playerid, "MarkZ", MarkZ);
	SetPVarInt(playerid, "MarkInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "MarkVW", GetPlayerVirtualWorld(playerid));
	SCM(playerid, -1, "Position Save");
	return 1;
}

CMD:gotomark(playerid)
{
	if(p_info[playerid][pAdmin] < 3) return 1;
	AC_SetPlayerPos(playerid, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"));
	SetPlayerInterior(playerid, GetPVarInt(playerid, "MarkInt"));
	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "MarkVW"));
	return 1;
}

CMD:atm(playerid)
{
	if(!IsABankomat(playerid)) return 1;
	ShowATMMenu(playerid);
	return 1;
}

CMD:tp(playerid)
{
	if (p_info[playerid][pAdmin] >= 1) return ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Телепорт меню", "[1] > Важные места\n[2] > Базы организаций\n[3] > Развлечения", "Выбрать", "Назад");
	return 1;
}

CMD:int(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 4) return 1;
	if(sscanf(params,"i",params[0])) return SendInf(playerid,"Использование: /int [1-140]");
	else if(params[0] > 140 && params[0] < 0)  return SendInf(playerid,"/int [1-140]");

	switch(params[0])
	{
		case 1: AC_SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988), SetPlayerInterior(playerid,17);
		case 2: AC_SetPlayerPos(playerid,6.091180,-29.271898,1003.549988), SetPlayerInterior(playerid,10);
		case 3: AC_SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988), SetPlayerInterior(playerid,18);
		case 4: AC_SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988), SetPlayerInterior(playerid,16);
		case 5: AC_SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988), SetPlayerInterior(playerid,4);
		case 6: AC_SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988), SetPlayerInterior(playerid,6);
		case 7: AC_SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554), SetPlayerInterior(playerid,14);
		case 8: AC_SetPlayerPos(playerid,2.384830,33.103397,1199.849976), SetPlayerInterior(playerid,1);
		case 9: AC_SetPlayerPos(playerid,315.856170,1024.496459,1949.797363), SetPlayerInterior(playerid,9);
		case 10: AC_SetPlayerPos(playerid,286.148987,-40.644398,1001.569946), SetPlayerInterior(playerid,1);
		case 11: AC_SetPlayerPos(playerid,286.800995,-82.547600,1001.539978), SetPlayerInterior(playerid,4);
		case 12: AC_SetPlayerPos(playerid,296.919983,-108.071999,1001.569946), SetPlayerInterior(playerid,6);
		case 13: AC_SetPlayerPos(playerid,314.820984,-141.431992,999.661987), SetPlayerInterior(playerid,7);
		case 14: AC_SetPlayerPos(playerid,316.524994,-167.706985,999.661987), SetPlayerInterior(playerid,6);
		case 15: AC_SetPlayerPos(playerid,302.292877,-143.139099,1004.062500), SetPlayerInterior(playerid,7);
		case 16: AC_SetPlayerPos(playerid,235.508994,1189.169897,1080.339966), SetPlayerInterior(playerid,3);
		case 17: AC_SetPlayerPos(playerid,225.756989,1240.000000,1082.149902), SetPlayerInterior(playerid,2);
		case 18: AC_SetPlayerPos(playerid,223.043991,1289.259888,1082.199951), SetPlayerInterior(playerid,1);
		case 19: AC_SetPlayerPos(playerid,225.630997,1022.479980,1084.069946), SetPlayerInterior(playerid,7);
		case 20: AC_SetPlayerPos(playerid,295.138977,1474.469971,1080.519897), SetPlayerInterior(playerid,15);
		case 21: AC_SetPlayerPos(playerid,328.493988,1480.589966,1084.449951), SetPlayerInterior(playerid,15);
		case 22: AC_SetPlayerPos(playerid,385.803986,1471.769897,1080.209961), SetPlayerInterior(playerid,15);
		case 23: AC_SetPlayerPos(playerid,375.971985,1417.269897,1081.409912), SetPlayerInterior(playerid,15);
		case 24: AC_SetPlayerPos(playerid,490.810974,1401.489990,1080.339966), SetPlayerInterior(playerid,2);
		case 25: AC_SetPlayerPos(playerid,447.734985,1400.439941,1084.339966), SetPlayerInterior(playerid,2);
		case 26: AC_SetPlayerPos(playerid,227.722992,1114.389893,1081.189941), SetPlayerInterior(playerid,5);
		case 27: AC_SetPlayerPos(playerid,260.983978,1286.549927,1080.299927), SetPlayerInterior(playerid,4);
		case 28: AC_SetPlayerPos(playerid,221.666992,1143.389893,1082.679932), SetPlayerInterior(playerid,4);
		case 29: AC_SetPlayerPos(playerid,27.132700,1341.149902,1084.449951), SetPlayerInterior(playerid,10);
		case 30: AC_SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951), SetPlayerInterior(playerid,4);
		case 31: AC_SetPlayerPos(playerid,22.778299,1404.959961,1084.449951), SetPlayerInterior(playerid,5);
		case 32: AC_SetPlayerPos(playerid,140.278000,1368.979980,1083.969971), SetPlayerInterior(playerid,5);
		case 33: AC_SetPlayerPos(playerid,234.045990,1064.879883,1084.309937), SetPlayerInterior(playerid,6);
		case 34: AC_SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907), SetPlayerInterior(playerid,6);
		case 35: AC_SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951), SetPlayerInterior(playerid,15);
		case 36: AC_SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951), SetPlayerInterior(playerid,8);
		case 37: AC_SetPlayerPos(playerid,83.345093,1324.439941,1083.889893), SetPlayerInterior(playerid,9);
		case 38: AC_SetPlayerPos(playerid,260.941986,1238.509888,1084.259888), SetPlayerInterior(playerid,9);
		case 39: AC_SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966), SetPlayerInterior(playerid,3);
		case 40: AC_SetPlayerPos(playerid,446.622986,509.318970,1001.419983), SetPlayerInterior(playerid,12);
		case 41: AC_SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927), SetPlayerInterior(playerid,15);
		case 42: AC_SetPlayerPos(playerid,833.818970,7.418000,1004.179993), SetPlayerInterior(playerid,3);
		case 43: AC_SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943), SetPlayerInterior(playerid,3);
		case 44: AC_SetPlayerPos(playerid,964.376953,2157.329834,1011.019958), SetPlayerInterior(playerid,1);
		case 45: AC_SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922), SetPlayerInterior(playerid,6);
		case 46: AC_SetPlayerPos(playerid,662.641601,-571.398803,16.343263), SetPlayerInterior(playerid,0);
		case 47: AC_SetPlayerPos(playerid,614.581420,-23.066856,1004.781250), SetPlayerInterior(playerid,1);
		case 48: AC_SetPlayerPos(playerid,612.508605,-129.236114,1001.992187), SetPlayerInterior(playerid,3);
		case 49: AC_SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250), SetPlayerInterior(playerid,0);
		case 50: AC_SetPlayerPos(playerid,-2048.605957,162.093444,28.835937), SetPlayerInterior(playerid,1);
		case 51: AC_SetPlayerPos(playerid,2170.284,1618.629,999.9766), SetPlayerInterior(playerid,1);
		case 52: AC_SetPlayerPos(playerid,1889.975,1018.055,31.88281), SetPlayerInterior(playerid,10);
		case 53: AC_SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995), SetPlayerInterior(playerid,1);
		case 54: AC_SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000), SetPlayerInterior(playerid,12);
		case 55: AC_SetPlayerPos(playerid,207.737991,-109.019997,1005.269958), SetPlayerInterior(playerid,15);
		case 56: AC_SetPlayerPos(playerid,204.332993,-166.694992,1000.578979), SetPlayerInterior(playerid,14);
		case 57: AC_SetPlayerPos(playerid,207.054993,-138.804993,1003.519958), SetPlayerInterior(playerid,3);
		case 58: AC_SetPlayerPos(playerid,203.778000,-48.492397,1001.799988), SetPlayerInterior(playerid,1);
		case 59: AC_SetPlayerPos(playerid,226.293991,-7.431530,1002.259949), SetPlayerInterior(playerid,5);
		case 60: AC_SetPlayerPos(playerid,161.391006,-93.159156,1001.804687), SetPlayerInterior(playerid,18);
		case 61: AC_SetPlayerPos(playerid,493.390991,-22.722799,1000.686951), SetPlayerInterior(playerid,17);
		case 62: AC_SetPlayerPos(playerid,501.980988,-69.150200,998.834961), SetPlayerInterior(playerid,11);
		case 63: AC_SetPlayerPos(playerid,-227.028000,1401.229980,27.769798), SetPlayerInterior(playerid,18);
		case 64: AC_SetPlayerPos(playerid,460.099976,-88.428497,999.621948), SetPlayerInterior(playerid,4);
		case 65: AC_SetPlayerPos(playerid,454.973950,-110.104996,999.717957), SetPlayerInterior(playerid,5);
		case 66: AC_SetPlayerPos(playerid,452.489990,-18.179699,1001.179993), SetPlayerInterior(playerid,1);
		case 67: AC_SetPlayerPos(playerid,681.474976,-451.150970,-25.616798), SetPlayerInterior(playerid,1);
		case 68: AC_SetPlayerPos(playerid,366.923980,-72.929359,1001.507812), SetPlayerInterior(playerid,10);
		case 69: AC_SetPlayerPos(playerid,365.672974,-10.713200,1001.869995), SetPlayerInterior(playerid,9);
		case 70: AC_SetPlayerPos(playerid,372.351990,-131.650986,1001.449951), SetPlayerInterior(playerid,5);
		case 71: AC_SetPlayerPos(playerid,377.098999,-192.439987,1000.643982), SetPlayerInterior(playerid,17);
		case 72: AC_SetPlayerPos(playerid,244.411987,305.032990,999.231995), SetPlayerInterior(playerid,1);
		case 73: AC_SetPlayerPos(playerid,271.884979,306.631989,999.325989), SetPlayerInterior(playerid,2);
		case 74: AC_SetPlayerPos(playerid,291.282990,310.031982,999.154968), SetPlayerInterior(playerid,3);
		case 75: AC_SetPlayerPos(playerid,302.181000,300.722992,999.231995), SetPlayerInterior(playerid,4);
		case 76: AC_SetPlayerPos(playerid,322.197998,302.497986,999.231995), SetPlayerInterior(playerid,5);
		case 77: AC_SetPlayerPos(playerid,346.870025,309.259033,999.155700), SetPlayerInterior(playerid,6);
		case 78: AC_SetPlayerPos(playerid,-959.873962,1952.000000,9.044310), SetPlayerInterior(playerid,17);
		case 79: AC_SetPlayerPos(playerid,388.871979,173.804993,1008.389954), SetPlayerInterior(playerid,3);
		case 80: AC_SetPlayerPos(playerid,220.4109,1862.277,13.147), SetPlayerInterior(playerid,0);
		case 81: AC_SetPlayerPos(playerid,772.112000,-3.898650,1000.687988), SetPlayerInterior(playerid,5);
		case 82: AC_SetPlayerPos(playerid,774.213989,-48.924297,1000.687988), SetPlayerInterior(playerid,6);
		case 83: AC_SetPlayerPos(playerid,773.579956,-77.096695,1000.687988), SetPlayerInterior(playerid,7);
		case 84: AC_SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958), SetPlayerInterior(playerid,3);
		case 85: AC_SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958), SetPlayerInterior(playerid,2);
		case 86: AC_SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000), SetPlayerInterior(playerid,3);
		case 87: AC_SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961), SetPlayerInterior(playerid,5);
		case 88: AC_SetPlayerPos(playerid,1291.725341,-788.319885,96.460937), SetPlayerInterior(playerid,0);
		case 89: AC_SetPlayerPos(playerid,516.650,-18.611898,1001.459961), SetPlayerInterior(playerid,3);
		case 90: AC_SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949), SetPlayerInterior(playerid,2);
		case 91: AC_SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000), SetPlayerInterior(playerid,1);
		case 92: AC_SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946), SetPlayerInterior(playerid,2);
		case 93: AC_SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966), SetPlayerInterior(playerid,3);
		case 94: AC_SetPlayerPos(playerid,744.542969,1437.669922,1102.739990), SetPlayerInterior(playerid,6);
		case 95: AC_SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 96: AC_SetPlayerPos(playerid,1204.809937,13.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 97: AC_SetPlayerPos(playerid,940.921997,-17.007000,1001.179993), SetPlayerInterior(playerid,3);
		case 98: AC_SetPlayerPos(playerid,964.106995,-53.205498,1001.179993), SetPlayerInterior(playerid,3);
		case 99: AC_SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969), SetPlayerInterior(playerid,3);
		case 100: AC_SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947), SetPlayerInterior(playerid,3);
		case 101: AC_SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270), SetPlayerInterior(playerid,1);
		case 102: AC_SetPlayerPos(playerid,-794.8064,491.6866,1376.195), SetPlayerInterior(playerid,1);
		case 103: AC_SetPlayerPos(playerid,-835.2504,500.9161,1358.305), SetPlayerInterior(playerid,1);
		case 104: AC_SetPlayerPos(playerid,-813.431518,533.231079,1390.782958), SetPlayerInterior(playerid,1);
		case 105: AC_SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000), SetPlayerInterior(playerid,5);
		case 106: AC_SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956), SetPlayerInterior(playerid,8);
		case 107: AC_SetPlayerPos(playerid,318.564972,1118.209961,1083.979980), SetPlayerInterior(playerid,5);
		case 108: AC_SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946), SetPlayerInterior(playerid,1);
		case 109: AC_SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946), SetPlayerInterior(playerid,18);
		case 110: AC_SetPlayerPos(playerid,2522.0,-1673.383911,14.8), SetPlayerInterior(playerid,0);
		case 111: AC_SetPlayerPos(playerid,-219.322601,1410.444824,27.773437), SetPlayerInterior(playerid,18);
		case 112: AC_SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971), SetPlayerInterior(playerid,12);
		case 113: AC_SetPlayerPos(playerid,-972.4957,1060.983,1358.914), SetPlayerInterior(playerid,10);
		case 114: AC_SetPlayerPos(playerid,411.625977,-21.433298,1001.799988), SetPlayerInterior(playerid,2);
		case 115: AC_SetPlayerPos(playerid,418.652985,-82.639793,1001.959961), SetPlayerInterior(playerid,3);
		case 116: AC_SetPlayerPos(playerid,412.021973,-52.649899,1001.959961), SetPlayerInterior(playerid,12);
		case 117: AC_SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988), SetPlayerInterior(playerid,16);
		case 118: AC_SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988), SetPlayerInterior(playerid,17);
		case 119: AC_SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988), SetPlayerInterior(playerid,3);
		case 120: AC_SetPlayerPos(playerid,246.783997,63.900200,1003.639954), SetPlayerInterior(playerid,6);
		case 121: AC_SetPlayerPos(playerid,246.375992,109.245995,1003.279968), SetPlayerInterior(playerid,10);
		case 122: AC_SetPlayerPos(playerid,288.745972,169.350998,1007.179993), SetPlayerInterior(playerid,3);
		case 123: AC_SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917), SetPlayerInterior(playerid,3);
		case 124: AC_SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922), SetPlayerInterior(playerid,3);
		case 125: AC_SetPlayerPos(playerid,420.484985,2535.589844,10.020289), SetPlayerInterior(playerid,10);
		case 126: AC_SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250), SetPlayerInterior(playerid,0);
		case 127: AC_SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801), SetPlayerInterior(playerid,7);
		case 128: AC_SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250), SetPlayerInterior(playerid,15);
		case 129: AC_SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848), SetPlayerInterior(playerid,4);
		case 130: AC_SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875), SetPlayerInterior(playerid,14);
		case 131: AC_SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000), SetPlayerInterior(playerid,1);
		case 132: AC_SetPlayerPos(playerid,1382.615600,2184.345703,11.023437), SetPlayerInterior(playerid,0);
		case 133: AC_SetPlayerPos(playerid,297.9414,-64.3876,1001.5156), SetPlayerInterior(playerid,4);
		case 134: AC_SetPlayerPos(playerid,302.1602,-164.7588,999.6105), SetPlayerInterior(playerid,6);
		case 135: AC_SetPlayerPos(playerid,614.31,-125.22,997.99), SetPlayerInterior(playerid,3);
		case 136: AC_SetPlayerPos(playerid,72.03800201,394.72299194,1041.23596191), SetPlayerInterior(playerid,5);
		case 137: AC_SetPlayerPos(playerid,258.6563,-42.7578,1001.0234), SetPlayerInterior(playerid,14);
		case 138: AC_SetPlayerPos(playerid,1887.25000000,508.48001099,1204.37194824), SetPlayerInterior(playerid,5);
		case 139: AC_SetPlayerPos(playerid,1583.48498535,534.78302002,1128.39794922), SetPlayerInterior(playerid,5);
		case 140: AC_SetPlayerPos(playerid,2527.09692383,464.17098999,2636.01293945), SetPlayerInterior(playerid,8);
	}
	return 1;
}


CMD:obj1(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	ShowPlayerDialog(playerid,6565,DIALOG_STYLE_LIST,"Редактор","[1] Создать объект\n[2] Редактировать объекты","Выбрать","Отмена");
	return 1;
}

CMD:en(playerid)
{
	stringer[0] = EOS;
	new VehicleID = GetPlayerVehicleID(playerid);
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new EngineStatus[50], DoorsStatus[50], LightsStatus[50], LimiterStatus[50];
		if(engine == 1) EngineStatus = "{33AA33}Включен";
		else EngineStatus = "{FF6347}Выключен";
		if(doors == 1) DoorsStatus = "{FF6347}Закрыты";
		else DoorsStatus = "{33AA33}Открыты";
		if(lights == 1) LightsStatus = "{33AA33}Включены";
		else LightsStatus = "{FF6347}Выключены";
		if(GetPVarInt(playerid, "slimit")) LimiterStatus = "{33AA33}Включен";
		else LimiterStatus = "{FF6347}Выключен";
		if(IsVehicleBikes(VehicleID)) return SendErr(playerid, "У вашего транспорта нет панели управления");
		else if(IsVehicleAir(VehicleID))
		{
			format(stringer, 256, ""ORG"1.{"#cWHITE"} Двигатель [%s{FFFFFF}]\n"ORG"2.{"#cWHITE"} Двери [%s{FFFFFF}]", EngineStatus, DoorsStatus);
			ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffff00}Управление транспортом", stringer, "Изменить", "Выйти");
		}
		else if(IsVehicleMoto(VehicleID))
		{
			format(stringer, 256, ""ORG"1.{"#cWHITE"} Двигатель [%s{FFFFFF}]\n"ORG"2.{"#cWHITE"} Фары [%s{FFFFFF}]", EngineStatus, LightsStatus);
			ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffff00}Управление транспортом", stringer, "Изменить", "Выйти");
		}
		else if(IsVehicleBoats(VehicleID)) return SendClientMessage(playerid, COLOR_GREY, "* У вашего транспорта нет панели управления");
		else
		{
			format(stringer, 256, ""ORG"1.{"#cWHITE"} Двигатель [%s{FFFFFF}]\n"ORG"2.{"#cWHITE"} Фары [%s{FFFFFF}]\n"ORG"3.{"#cWHITE"} Двери [%s{FFFFFF}]\n"ORG"4.{"#cWHITE"} Ограничитель [%s{FFFFFF}]", EngineStatus, LightsStatus, DoorsStatus, LimiterStatus);
			ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffff00}Управление транспортом", stringer, "Изменить", "Выйти");
		}
	}
	else SendErr(playerid, "Вы не находитесь в транспорте");
	return 1;
}

CMD:leave(playerid)
{
	if(GetPVarInt(playerid,"daiving"))
	{
		AC_SetPlayerPos(playerid,544.5546,-2346.6885,18.4500);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		DeletePVar(playerid,"daiving");
	}
	return 1;
}


CMD:givephone(playerid,params[])
{
	if(!ISAMAFIA(playerid)) return SendErr(playerid, "Вы не член мафии");
	else if(p_info[playerid][tRank] < 3)return SendErr(playerid, "Вам недоступна эта функция");
	else if(sscanf(params,"d",params[0]))return SendInf(playerid, "Используйте: /givephone [id]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	else if (!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Человек не рядом с вами");
	else if(params[0] == playerid) return SendErr(playerid, "Нельзя вернуть телефон самому себе");
	format(stringer, 128, "%s вернул вам телефон", NamePlayer[playerid]);
	SCM(params[0], 0x6ab1ffaa, stringer);
	DeletePVar(params[0],"takephone");
	format(stringer, 144, "%s вернул телефон %s 'y", NamePlayer[playerid] ,NamePlayer[params[0]]);
	SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	return 1;
}

CMD:takephone(playerid,params[])
{
	if(!ISAMAFIA(playerid)) return SendErr(playerid, "Вы не член мафии!");
	else if(p_info[playerid][tRank] < 3)return SendErr(playerid, "Вы должны быть 3 рангом");
	else if(sscanf(params,"d",params[0]))return SendInf(playerid, "Используйте: /takephone [id]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок оффлайн");
	else if(GetPVarInt(params[0],"takephone")) return SendErr(playerid, "У него нет телефона");
	else if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Человек не рядом с вами");
	else if(params[0] == playerid) return SendErr(playerid, "Нельзя забрать телефон у самого себя");
	format(stringer, 144, "%s забрал у Вас мобильный", NamePlayer[playerid]);
	SCM(params[0], 0x6ab1ffaa, stringer);
	SetPVarInt(params[0],"takephone", true);
	format(stringer, 144, "%s забрал мобильный у %s", NamePlayer[playerid] ,NamePlayer[params[0]]);
	SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	return 1;
}

CMD:pass(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "/pass [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,CWHITE,"Неверный ID игрока");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CRED, "Человек слишком далеко!");
	if(GetPVarInt(params[0],"sim_id_sell")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"minet")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"hi")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"pass")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	if(GetPVarInt(params[0],"sl")) return SendClientMessage(playerid,-1,"В данный момент действие невозможно");
	format(stringer, 144, "Вы предложили {"#cWHITE"}%s {"#cINFO"} показать паспорт",NamePlayer[params[0]]);
	SCM(playerid, 0x269BD8FF, stringer);
	format(stringer, 144, "%s {"#cINFO"}хочет показать Вам паспорт. Чтобы подтвердить нажмите {33AA33}Y{"#cINFO"}, иначе {"#cRED"}N",NamePlayer[playerid]);
	SCM(params[0], -1, stringer);
	SetPVarInt(params[0],"pass", playerid + 1);
	return 1;
}

CMD:showudost(playerid, params[])
{
	if(!IsACop(playerid)) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, " Используйте: /showudost [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SCM(playerid, CWHITE, "Вы слишком далеко!");
	new rank = p_info[playerid][tRank];
	new level = p_info[playerid][pLevel];
	format(stringer, 144, "Имя: %s\nТелефон: %d\nВозвраст: %d\nПодразделение: %s\nРанг: %d", NamePlayer[playerid],p_info[playerid][pPnumber],level,f_info[p_info[playerid][tMember]][f_name],rank);
	ShowPlayerDialog(params[0], 10036, DIALOG_STYLE_MSGBOX, "Удостоверение",stringer,"Закрыть","");
	format(stringer, 144, "%s показал своё удостоверение %s'у", NamePlayer[playerid], NamePlayer[params[0]]);
	SendStreamMessage(30.0, playerid, stringer, 0xE75480FF);
	format(stringer,144, "показал своё удостоверение %s'у",NamePlayer[params[0]]);
	SetPlayerChatBubble(playerid,stringer,0xE75480FF,30.0,10000);
	return 1;
}

CMD:openswat(playerid)
{
	if(!IsACop(playerid)) return SCM(playerid,CWHITE,"У вас нет пропуска!");
	if(PlayerToPoint(8.0,playerid,moved_info[25][movedPosX],moved_info[25][movedPosY],moved_info[25][movedPosZ])) MoveObjectBarrier(25);
	if(PlayerToPoint(8.0,playerid,moved_info[26][movedPosX],moved_info[26][movedPosY],moved_info[26][movedPosZ])) MoveObjectBarrier(26);
	SCM(playerid,0x6ab1ffaa,"Ворота закроются в течение 10 секунд!");
	return 1;
}

CMD:biz(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 8) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"d",params[0]))
	{
		SCM(playerid,COLOR_GREY, " Используйте: /biz [номер бизнеса]");
		return 1;
	}
	if(params[0] < 0 || params[0] >= CountBusiness) return 1;

	AC_SetPlayerPos(playerid,Business[params[0]][EnterX],Business[params[0]][EnterY],Business[params[0]][EnterZ]);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
	return 1;
}

CMD:setbizwar(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 6) return 1;
	if(sscanf(params,"d",params[0]))
	{
		SCM(playerid,COLOR_GREY, " Используйте: /setbizwar [номер]");
		SCM(playerid,COLOR_GREY, "1 - La Cosa Nostra | 2 - Yakuza | 3 - Русская Мафия");
		return 1;
	}
	if(params[0] < 1 || params[0] > 3) return 1;
	for(new b=0; b<CountBusiness; b++)
	{
		if(PlayerToPoint(4.0,playerid,Business[b][EnterX],Business[b][EnterY],Business[b][EnterZ]))
		{
			switch(params[0])
			{
				case 1:
				{
					Business[b][Mafia] = 5;
					format(stringer,128,"Администратор %s отдал бизнес %s La Cosa Nostra",NamePlayer[playerid],Business[b][BizName]);
					SendClientMessageToAll(COLOR_LIGHTRED,stringer);
					Update3DTextLabelBusiness(b);
					SaveBusiness(b);
				}
				case 2:
				{
					Business[b][Mafia] = 6;
					format(stringer,128,"Администратор %s отдал бизнес %s Yakuza",NamePlayer[playerid],Business[b][BizName]);
					SendClientMessageToAll(COLOR_LIGHTRED,stringer);
					Update3DTextLabelBusiness(b);
					SaveBusiness(b);
				}
				case 3:
				{
					Business[b][Mafia] = 14;
					format(stringer,128,"Администратор %s отдал бизнес %s Русской мафии",NamePlayer[playerid],Business[b][BizName]);
					SendClientMessageToAll(COLOR_LIGHTRED,stringer);
					Update3DTextLabelBusiness(b);
					SaveBusiness(b);
				}
			}
			break;
		}
	}
	return 1;
}

CMD:recorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "boomBox")) return SCM(playerid, -1, "У Вас нет магнитофона, купите его в 24/7");
	if(PlacedBB[playerid] != INVALID_OBJECT) return SCM(playerid, -1, "Вы уже установили магнитофон.");
	new Float:BBCoord[4];
	GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
	GetPlayerFacingAngle(playerid, BBCoord[3]);
	SetPVarFloat(playerid, "BBX", BBCoord[0]);
	SetPVarFloat(playerid, "BBY", BBCoord[1]);
	SetPVarFloat(playerid, "BBZ", BBCoord[2]);
	BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
	BBCoord[2] -= 1.0;
	foreach(i)
	{
		if(PlacedBB[i] == INVALID_OBJECT || !IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"))) continue;
		return SendClientMessage(playerid, CWHITE, "Магнитофон установлен на землю");
	}
	MeAction(playerid, "установил магнитофон");

	PlacedBB[playerid] = CreateDynamicObject(2226, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
	format(stringer, 128, "Установил: %s (%i)\n/setrecorder - Поставить песню\n/drecorder - Убрать", NamePlayer[playerid], playerid);
	BBLabel[playerid] = CreateDynamic3DTextLabel(stringer, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 8.0);
	SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 15.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
	FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	FIXES_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	//print ( "Itter_Add(boxPlayer, playerid);" ) ;
	//Itter_Add(boxPlayer, playerid);

	return 1;
}

CMD:setrecorder(playerid, params[])
{
	if(PlacedBB[playerid] == INVALID_OBJECT) return SendClientMessage(playerid, -1, "Магнитофон не установлен");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) return SendClientMessage(playerid, -1, "Вы не возле магнитофона");
	ShowPlayerDialog(playerid,17504,DIALOG_STYLE_INPUT,"{"#cWHITE"}Магнитофон","{"#cWHITE"}Используйте ссылку на поток / песню / радио которое вы хотите воспроизвести","Выбрать", "Закрыть");
	return 1;
}

CMD:drecorder(playerid, params[])
{
	if(PlacedBB[playerid] == INVALID_OBJECT) return SendClientMessage(playerid, -1, "Вы не ставили магнитофон");
	foreach(i)
	{
		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) StopStream(i);
	}
	//print ( "Itter_Remove(boxPlayer, playerid);" ) ;
	//Itter_Remove(boxPlayer, playerid);

	DeletePVar(playerid, "BBArea");
	DestroyDynamicObject(PlacedBB[playerid]);
	if ( T_IsValid3DTextLabel(BBLabel[playerid]) ) DestroyDynamic3DTextLabelEx(BBLabel[playerid]);
	DeletePVar(playerid, "PlacedBB");
	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBInt");
	DeletePVar(playerid, "BBVW");
	DeletePVar(playerid, "BBStation");
	SendClientMessage(playerid, -1, "Вы убрали магнитофон");
	DeletePVar(playerid,"boomBox");

	PlacedBB[playerid] = INVALID_OBJECT;
	return 1;
}

CMD:selfie(playerid,params[])
{
	if(!GetPVarInt(playerid,"takingselfie"))
	{
		new Float:PLAYER_POS[3];
		GetPlayerPos(playerid,PLAYER_POS[0],PLAYER_POS[1],PLAYER_POS[2]);
		SetPVarFloat(playerid,"lX",PLAYER_POS[0]);
		SetPVarFloat(playerid,"lY",PLAYER_POS[1]);
		SetPVarFloat(playerid,"lZ",PLAYER_POS[2]);

		if(GetPVarFloat(playerid,"Degree") >= 360) DeletePVar(playerid,"Degree");
		SetPVarFloat(playerid,"Degree", GetPVarFloat(playerid,"Degree") + Speed);
		PLAYER_POS[0] = GetPVarFloat(playerid,"lX") + Radius * floatcos(GetPVarFloat(playerid,"Degree"), degrees);
		PLAYER_POS[1] = GetPVarFloat(playerid,"lY") + Radius * floatsin(GetPVarFloat(playerid,"Degree"), degrees);
		SetPlayerCameraPos(playerid, PLAYER_POS[0], PLAYER_POS[1], GetPVarFloat(playerid,"lZ") + Height);
		SetPlayerCameraLookAt(playerid, GetPVarFloat(playerid,"lX"), GetPVarFloat(playerid,"lY"), GetPVarFloat(playerid,"lZ")+1);
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"Degree") - 90.0);
		SetPVarInt(playerid,"takingselfie",true);
		SendClientMessage(playerid,0xE75480FF,"Используйте {"#cWHITE"}NUM 4{E75480} или {"#cWHITE"}NUM 8{E75480} чтобы двигать камеру");
		SendClientMessage(playerid,0xE75480FF,"Также используйте {"#cWHITE"}/headmove{E75480} чтобы лицо смотрело прямо");
		SendClientMessage(playerid,-1,"F8{E75480} - чтобы сделать скриншот, для выхода Используйте {"#cWHITE"}/selfie");
		FIXES_ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
	}
	else
	{
		AC_TogglePlayerControllable(playerid,1);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid,"takingselfie");
		DeletePVar(playerid,"Degree");
		DeletePVar(playerid,"lX");
		DeletePVar(playerid,"lY");
		DeletePVar(playerid,"lZ");
		FIXES_ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
	}
	return 1;
}

CMD:crasher(playerid,params[])
{
	SendClientMessage(playerid,-1,"Вы были кикнуты по подозрению в читерстве. Причина: Крашер");
	KickEx(playerid);
	return 1;
}


CMD:gotogz(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params,"d",params[0])) return SCM(playerid,-1, " Используйте: /gotogz [терра]");
	if(params[0] < 0 || params[0] >= TotalGz) return SCM(playerid,-1,"INVALID_GZ_ID");

	new Float:tox,Float:toy;
	new Float:x = GZInfo[params[0]][gCoords][0];
	new Float:y = GZInfo[params[0]][gCoords][1];
	new Float:z = GZInfo[params[0]][gCoords][2];
	new Float:a = GZInfo[params[0]][gCoords][3];

	if(z>x) tox = z - ((z - x)/2);
	else tox = x - ((x - z)/2);
	if(y>a) toy = y - ((y - a)/2);
	else toy = a - ((a - y)/2);

	AC_SetPlayerPos(playerid,tox,toy,50.0);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	FreezePlayerForTime(playerid,3000);

	return true;
}

CMD:gzcolor(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 5) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params,"d",params[0])) return SCM(playerid,-1, " Используйте: /gzcolor [банда]");
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] != -1)
	{
		new i = IDGZ[playerid];
		VladGzone[GZInfo[i][gFrakVlad]]--;
		VladGzone[params[0]]++;
		UpdateStoreGang(params[0]);
		UpdateStoreGang(GZInfo[i][gFrakVlad]);

		format(stringer, 128, "Админ: %s покрасил терру номер %d. Бывшая фрака: %d. Новая: %d", NamePlayer[playerid],i,GZInfo[i][gFrakVlad],params[0]);
		WriteLog ( TYPE_GZ_COLOR, stringer , p_info[playerid][tMember] ) ;

		GZInfo[i][gFrakVlad] = params[0];
		GangZoneStopFlashForAll(GZInfo[i][gIDs]);
		GangZoneHideForAll(GZInfo[i][gIDs]);
		GangZoneShowForAll(GZInfo[i][gIDs],GetGangZoneColor(i));

		new raion[32];
		GetPlayer2DZone(playerid,raion,31);

		format(stringer,128,"Администратор %s отдал территорию банде %s в районе %s квадрата %i",NamePlayer[playerid],f_info[params[0]][f_name],raion,i);
		SendClientMessageToAll(COLOR_LIGHTRED,stringer);

		SaveGZ(i);
		UpdateInfoZones();
	}
	return 1;
}

/*CMD:ftazer(playerid,params[])
{
	if(p_info[playerid][tMember] != 2) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"i",params[0])) return SCM(playerid,-1," Используйте: /ftazer [1/2/3]");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	foreach(i)
	{
		if(!IsPlayerInRangeOfPoint(i,20.0,X,Y,Z) && i == playerid) continue;
		if(!IsAArm(i) || !IsACop(i) || !IsAMedic(i) && params[0] == 2) continue;
		if(p_info[i][tMember] ==0 || !IsAGang(i) || !ISAMAFIA(i) && params[0] == 3) continue;
		format(stringer, 144, " Агент ФБР %s оглушил %s", NamePlayer[playerid], (params[0]==1) ? ("всех"):(params[0]==2)?("всех рядомстоящих законников"):("рядомстоящих жителей"));
		SendClientMessage(i,0xE75480FF, stringer);
		SCM(i,-1,"Вы заморожены на 15 секунд");
		SetPVarInt(i,"PlayerCuffed", 1);
		SetPVarInt(i,"PlayerCuffedTime", 15);
	}
	return 1;
}*/

CMD:skipgunlic(playerid)
{
	if(p_info[playerid][tMember] != 11) return 1;
	if(gPDTurn[0] == INVALID_PLAYER_ID) return SendErr(playerid, "Игрок не найден");
	new actplayerid = gPDTurn[0];
	format(stringer,144,"Сотрудник %s выгнал Вас из очереди на получение лицензии",NamePlayer[playerid]);
	SendClientMessage(actplayerid,CINFO,stringer);
	format(stringer,1444,"Вы выгнали %s из очереди на тестирование",NamePlayer[actplayerid]);
	SendClientMessage(playerid,CINFO,stringer);
	DeletePVar(actplayerid,"pWaitingExam2");
	gPDTurn[0] = INVALID_PLAYER_ID;
	return 1;
}

CMD:examgunlic(playerid)
{
	if(p_info[playerid][tMember] != 11) return 1;
	if(GetPVarInt(playerid,"pExamCandidate2") > 0)
	{
		new actplayerid = GetPVarInt(playerid,"pExamCandidate2")-1;
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Тестируемый вышел. Тест завершен");
		format(stringer,200,"%s тест:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",NamePlayer[actplayerid]);
		ShowPlayerDialog(playerid,dExamResult2,2,"Экзамен",stringer,"OK","Отмена");
		return 1;
	}
	if(gPDTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Очередь пустая..");
	new actplayerid = gPDTurn[0];
	if(!IsPlayerConnected(actplayerid) || !GetPVarInt(actplayerid,"pWaitingExam2")) return SendClientMessage(playerid,COLOR_GREY,"Игрок вышел из очереди");
	if(!IsPlayerStream(3.0, playerid, actplayerid) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,COLOR_GREY,"Вы находитесь далеко от первого в очереди");

	format(stringer,144,"Сотрудник %s Вызвал Вас на прохождение тестерования, следуйте за ним",NamePlayer[playerid]);
	SendClientMessage(actplayerid,CINFO,stringer);

	format(stringer,144,"Вы Вызвали %s на прохождение тестирования",NamePlayer[actplayerid]);
	SendClientMessage(playerid,CINFO,stringer);

	DeletePVar(actplayerid,"pWaitingExam2");

	SetPVarInt(playerid,"pExamCandidate2", actplayerid + 1);
	gPDTurn[0] = INVALID_PLAYER_ID;
	return 1;
}

CMD:skiplic(playerid)
{
	if(p_info[playerid][tMember] != 7 && p_info[playerid][tMember] != 26) return 1;
	if(gAPTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Игрок не найден");
	new actplayerid = gAPTurn[0];
	format(stringer,144,"Секретарь %s выгнал Вас из очереди на получение лицензии",NamePlayer[playerid]);
	SendClientMessage(actplayerid,CINFO,stringer);
	format(stringer,1444,"Вы выгнали %s из очереди на тестирование",NamePlayer[actplayerid]);
	SendClientMessage(playerid,CINFO,stringer);
	DeletePVar(actplayerid,"pWaitingExam1");
	gAPTurn[0] = INVALID_PLAYER_ID;
	return 1;
}

CMD:examlic(playerid)
{
	if(p_info[playerid][tMember] != 7 && p_info[playerid][tMember] != 26) return 1;
	if(GetPVarInt(playerid,"pExamCandidate1") > 0)
	{
		new actplayerid = GetPVarInt(playerid,"pExamCandidate1")-1;
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Тестируемый вышел. Тест завершен");
		format(stringer,200,"%s тест:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",NamePlayer[actplayerid]);
		ShowPlayerDialog(playerid,dExamResult1,2,"Экзамен",stringer,"OK","Отмена");
		return 1;
	}
	if(gAPTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Очередь пустая..");
	new actplayerid = gAPTurn[0];
	if(!IsPlayerConnected(actplayerid) || !GetPVarInt(actplayerid,"pWaitingExam1")) return SendClientMessage(playerid,COLOR_GREY,"Игрок вышел из очереди");
	if(!IsPlayerStream(3.0, playerid, actplayerid) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,COLOR_GREY,"Вы находитесь далеко от первого в очереди");

	format(stringer,144,"Секретарь %s Вызвал Вас на прохождение тестерования, следуйте за ним",NamePlayer[playerid]);
	SendClientMessage(actplayerid,CINFO,stringer);

	format(stringer,144,"Вы Вызвали %s на прохождение тестирования",NamePlayer[actplayerid]);
	SendClientMessage(playerid,CINFO,stringer);

	DeletePVar(actplayerid,"pWaitingExam1");

	SetPVarInt(playerid,"pExamCandidate1", actplayerid + 1);
	gAPTurn[0] = INVALID_PLAYER_ID;
	return 1;
}

CMD:skipexam(playerid)
{
	if(p_info[playerid][tMember] != 11) return 1;
	if(gDSTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Игрок не найден");
	new actplayerid = gDSTurn[0];
	format(stringer,144,"Инструктор %s выгнал Вас из очереди на получение лицензии.",NamePlayer[playerid]);
	SendClientMessage(actplayerid,CINFO,stringer);
	format(stringer,1444,"Вы выгнали %s из очереди на экзамен",NamePlayer[actplayerid]);
	SendClientMessage(playerid,CINFO,stringer);
	DeletePVar(actplayerid,"pWaitingExam");
	gDSTurn[0] = INVALID_PLAYER_ID;
	return 1;
}

CMD:exam(playerid)
{
	if(p_info[playerid][tMember] != 11) return 1;
	if(GetPVarInt(playerid,"pExamCandidate") > 0)
	{
		new actplayerid = GetPVarInt(playerid,"pExamCandidate")-1;
		if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
		format(stringer,200,"%s экзамен:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",NamePlayer[actplayerid]);
		ShowPlayerDialog(playerid,dExamResult,2,"Экзамен",stringer,"OK","Отмена");
		return 1;
	}
	if(gDSTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Очередь пустая..");
	new actplayerid = gDSTurn[0];
	if(!IsPlayerConnected(actplayerid) || !GetPVarInt(actplayerid,"pWaitingExam")) return SendClientMessage(playerid,COLOR_GREY,"Игрок вышел из очереди");
	if(!IsPlayerStream(3.0, playerid, actplayerid) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,COLOR_GREY,"Вы находитесь далеко от первого в очереди.");

	format(stringer,144,"Инструктор %s Вызвал Вас на прохождение экзамена, следуйте за ним",NamePlayer[playerid]);
	SendClientMessage(actplayerid,CINFO,stringer);

	format(stringer,144,"Вы Вызвали %s на прохождение экзамена. [Наземный]",NamePlayer[actplayerid]);
	SendClientMessage(playerid,CINFO,stringer);

	DeletePVar(actplayerid,"pWaitingExam");

	SetPVarInt(playerid,"pExamCandidate", actplayerid + 1);
	gDSTurn[0] = INVALID_PLAYER_ID;
	return 1;
}

CMD:givelic(playerid,params[])
{
	if(p_info[playerid][tMember] != 11) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /givelic [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами!");
	ShowPlayerDialog(playerid,dGiveLic, DIALOG_STYLE_LIST,"{"#cBLUE"}Продажа лицензий",
		"{"#cWHITE"}Лицензия пилота\nЛицензия водного транспорта", "Выдать", "Закрыть");
	SetPVarInt(playerid,"givelic", params[0]);
	return 1;
}

CMD:take(playerid,params[])
{
	if(p_info[playerid][tMember] != 11) return SCM(playerid, CWHITE, "Вы не можете использовать данную команду, только Инструкторы!");
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(GetPVarInt(playerid,"PlayerTied"))  return SCM(playerid, CWHITE, "Вы связаны!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /take [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if ( p_info [ playerid ] [ tRank ] < 4 ) return SendClientMessage(playerid, COLOR_GREY, "Доступно 4 3 ранга");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами!");
	ShowPlayerDialog(playerid,dTakeLic, DIALOG_STYLE_LIST,"Забрать лицензию", "{"#cWHITE"}Водительские права\nЛицензия пилота\nЛицензия водного транспорта\nЛицензия на оружие\nНаркотики\nМеталл\nПатроны", "Выдать", "Закрыть");
	SetPVarInt(playerid,"takelic", params[0]);
	return 1;
}

CMD:bk(playerid)
{
	stringer[0] = EOS;
	new strings[30];
	GetPlayer2DZone(playerid, strings, 30);
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(GetPVarInt(playerid, "BKONFORPLAYER") == 1) return SendErr(playerid, "Вы уже вызвали поддержку, отмените текущюю /unbk");
	format(stringer, 256, "[R] Диспетчер: [%s] %s | %s запрашивает поддержку. (Район: %s)", f_info[p_info[playerid][tMember]][f_name], GetRank(p_info[playerid][tMember],p_info[playerid][tRank]), NamePlayer[playerid], strings);
	if(IsACop(playerid) || p_info[playerid][tMember] == 2)
	{
		foreach(i)
		{
			if(IsACop(i) || p_info[i][tMember] == 2)
			{
				if(start_work[playerid])
				{
					SetPlayerMarkerForPlayer(i, playerid, 0xF62222AA);
					SendClientMessage(i, 0x93FF4CFF, stringer);
				}
			}
		}
		SendInf(playerid, "Используйте /unbk чтобы отменить ваш запрос на поддержку");
	}
	SetPVarInt(playerid, "BKONFORPLAYER", 1);
	return 1;
}

CMD:unbk(playerid)
{
	if(GetPVarInt(playerid, "BKONFORPLAYER") == 1)
	{
		BackupClear(playerid, 0);
		SetPVarInt(playerid, "BKONFORPLAYER", 0);
	}
	return 1;
}


stock IntToStr(value)
{
	new tmp[20];
	valstr(tmp, value);
	return tmp;
}



CMD:tazer(playerid)
{
	if ( TempTazerObject[playerid] != -1 ) DestroyPlayerObject ( playerid , TempTazerObject[playerid] ) ;

	if(p_info[playerid][tMember] == 1 ||
	p_info[playerid][tMember] == 10 ||
	p_info[playerid][tMember] == 21 ||
	p_info[playerid][tMember] == 2 ||
	p_info[playerid][tMember] == 25 ||
	p_info[playerid][tMember] == 7 ||
	p_info[playerid][tMember] == 26)
	{
		if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
		else if(GetPVarInt(playerid,"PlayerTied"))  return SendErr(playerid, "Вы связаны!");
		else if ( GetPVarInt ( playerid , "tazershoottime" ) > unix )
		{
			format ( stringer, 128 , "[ ! ] {"#cWHITE"}Дождитесь перезарядки тазера {AFAFAF}( %d секунд )" , GetPVarInt ( playerid , "tazershoottime" ) - unix );
			SendClientMessage ( playerid , -1, stringer ) ;

			return 1;
		}
		else if ( GetPVarInt ( playerid, "tazershoot" ) > 0 ) return SendClientMessage ( playerid , COLOR_GREY , "Вы уже зарядили оружие" );

		stringer[0] = EOS;

		for(new i; i <= 11; i++)
		{
			new gunid, ammo, storeslot = -1;
			GetPlayerWeaponData(playerid,i,gunid,ammo);

			switch (gunid){

				case 23 : storeslot = 1;
				case 24 : storeslot = 1;
				case 30 : storeslot = 1;
				case 31 : storeslot = 1;
			}

			if(!gunid || !ammo || storeslot == -1) continue;

			new gunname[32];
			GetWeaponName(gunid,gunname,32);
			format(stringer,512,"%s\n%s [{"#cGREEN"}%d{"#cWHITE"}]",stringer,gunname,ammo);
		}
		if(!strlen(stringer))
		{
			SendClientMessage(playerid,COLOR_GREY,"У Вас нет оружия");
			return 1;
		}
		//SetPVarInt(playerid,"tazergun",storeslot);
		ShowPlayerDialog(playerid,dGoTazer,2,"Оружие",stringer,"Зарядить","Отмена");
	}
	return 1;
}



CMD:fixable(playerid,params[])
{
	if(fixable_timer[playerid][1] != INVALID_PLAYER_ID && IsACop(playerid))
	{
		format(stringer, 150, "Игрок: {"#cYELLOW"}%s {"#cGREEN"}| Таймер выхода: {"#cYELLOW"}[%s]>%d",NamePlayer[fixable_timer[playerid][1]],date("%ii:%ss",fixable_timer[fixable_timer[playerid][1]][0]-unix));
		return SendClientMessage(playerid,CGREEN,stringer);
	}
	if(!IsACop(playerid)) return SendErr(playerid, "Вы не состоите в полиции!");
	else if(GetPVarInt(playerid,"PlayerTied")) return SendErr(playerid, "Вы связаны!");
	new fix_id, minuts;
	if(sscanf(params,"ii",fix_id,minuts)) return SendInf(playerid,"Используйте: /fixable [playerid] [количество минут]");
	else if(!IsPlayerConnected(fix_id)) return SendErr(playerid, "Игрок не в сети");
	else if(IsACop(fix_id)) return SendErr(playerid, "Вы не можете поставить таймер на законника.");
	else if(fixable_timer[fix_id][1] > unix) return SCM(playerid, CWHITE, "На этого человека уже поставлен таймер");
	else if(!p_info[fix_id][pWanted]) return  SendErr(playerid,"Игрок не в розыске");
	else if(!IsPlayerStream(2.0, playerid, fix_id)) return SendErr(playerid,"Игрок не рядом с Вами");
	else if(minuts < 1 || minuts > 5) return SendErr(playerid,"от 1 до 5 минут");
	fixable_timer[fix_id][0] = unix + (minuts * 60);
	fixable_timer[fix_id][1] = playerid;
	fixable_timer[playerid][1] = fix_id;
	format(stringer, 150, "Вы поставили таймер проверки на {"#cYELLOW"}%d {"#cGREEN"}минут игроку {"#cYELLOW"}%s [%d]", minuts, NamePlayer[fix_id], fix_id);
	SendClientMessage(playerid,CGREEN,stringer);
	SendClientMessage(playerid,CYELLOW,"- Если у игрока закончится таймер, вам придет оповещение в чат.");
	SendClientMessage(playerid,CYELLOW,"- Если игрок уйдет от вас на расстояние больше 500м, таймер отключится.");
	SendClientMessage(playerid,CYELLOW,"Для просмотра времени таймера игрока, введите команду еще раз.");
	format(stringer, 150, "ВНИМАНИЕ: Вам установил таймер выхода сотрудник {"#cWHITE"}%s[%d] {"#cBADINFO"}на {"#cWHITE"}%d {"#cBADINFO"}минут", NamePlayer[fix_id], fix_id, minuts);
	SendClientMessage(fix_id,CBADINFO,stringer);
	SendClientMessage(fix_id,CLIGHTRED,"- Если вы покинете игру, тогда вы будете посажены в тюрьму.");
	return 1;
}



CMD:cuff(playerid,params[])
{
	if ( TempTazerObject[playerid] != -1 ) DestroyPlayerObject ( playerid , TempTazerObject[playerid] ) ;

	if(!IsACop(playerid)) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return SendInf(playerid,"Используйте: /cuff [id]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в сети");
	if(GetPVarInt(playerid,"PlayerTied"))  return SendErr(playerid, "Вы связаны!");
	if(IsACop(params[0])) return    SendErr(playerid, "Вы не можете надеть наручники на законника");
	else if(GetPVarInt(params[0],"PlayerCuffed")) return    SCM(playerid, CWHITE, "На этого человека уже одеты наручники");
	//if(!p_info[params[0]][pWanted]) return  SendErr(playerid,"Вы не можете надеть наручники на этого человека (он не в розыске)");
	else if(!IsPlayerStream(2.0, playerid, params[0])) return SendErr(playerid,"Игрок не рядом с Вами");

	format(stringer, 144, "%s %s надел на %s наручники", GetRank(p_info[playerid][tMember], p_info[playerid][tRank]), NamePlayer[playerid], NamePlayer[params[0]]);
	SendStreamMessage(5.0, playerid, stringer, 0xE75480FF);

	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
	SetPVarInt(params[0],"PlayerCuffed", 2);

	SendClientMessage ( playerid , -1, "Чтобы вести игрока за собой используйте {AFAFAF}/gotome [ playerid ]" ) ;


	return 1;
}

CMD:uncuff(playerid,params[])
{
	if(!IsACop(playerid)) return 1;
	if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, " Используйте: /uncuff [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок оффлайн!");
	if(GetPVarInt(playerid,"PlayerTied"))  return SCM(playerid, CWHITE, "Вы связаны!");
	if (!IsPlayerStream(5.0, playerid, params[0])) return SCM(playerid, CWHITE, "Рядом с вами никого нет !");
	if(params[0] == playerid) { SCM(playerid, CWHITE, "Вы не можете снять наручники с самого себя!"); return 1; }
	if(GetPVarInt(params[0],"PlayerCuffed"))
	{
		format(stringer, 144, "%s %s снял с %s наручники", GetRank(p_info[playerid][tMember], p_info[playerid][tRank]), NamePlayer[playerid], NamePlayer[params[0]]);
		SendStreamMessage(5.0, playerid, stringer, 0xE75480FF);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE); RemovePlayerAttachedObject(params[0],0); AC_TogglePlayerControllable(params[0], true); DeletePVar(params[0],"PlayerCuffed");
	}
	else
	{
		SCM(playerid, CWHITE, "Этот игрок не в наручниках !");
		return 1;
	}
	return 1;
}

CMD:find(playerid,params[])
{
	if(GetPVarInt(playerid,"id_find"))
	{
		SendClientMessage(playerid,-1,"Вы отключили метку");
		DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid,"id_find");
		return 1;
	}
	else if(!IsACop(playerid) && p_info[playerid][tMember] != 23) return 1;
	else if(StartWork(playerid) && !start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
	else if(sscanf(params,"d",params[0])) return SCM(playerid, CWHITE, "Используйте: /find [id]");
	else if(!IsPlayerConnected(params[0])) return SCM(playerid, CWHITE, "Игрок не в сети");
	else if(GetPlayerInterior(params[0]) > 0) SCM(playerid,CWHITE,"Человек возможно находиться в интерьере.");

	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(params[0], X,Y,Z);

	SetPVarInt(playerid,"id_find",(params[0]+1));
	SetPlayerCheckpoint(playerid, X,Y,Z, 3);

	SendClientMessage(playerid,-1,"Вы поставили метку на игрока, метка будет обновляться каждые 3 секунды");
	SendClientMessage(playerid,CBLUE,"Чтобы отключить метку Используйте еще раз {"#cWHITE"}/find");
	return 1;
}

CMD:changebizz(playerid,params[])
{
	if(p_info[playerid][pPbiskey] == 0) return SCM(playerid,CWHITE,"У вас нет бизнеса.");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /changebizz [playerid] [цена продажи]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,CWHITE,"Игрок оффлайн.");
	if(params[1] < 90000 || params[1] > 10000000) return SCM(playerid,CWHITE,"Цена не может быть меньше 90.000$ и больше 10.000.000$");
	if(!IsPlayerStream(5.0, playerid, params[0])) return SCM(playerid,CWHITE,"Игрок не рядом с вами.");
	if(p_info[params[0]][pPbiskey] != 0) return SCM(playerid,COLOR_GREY,"У игрока есть бизнес");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Вы не можете продать бизнес самому себе.");

	SetPVarInt(params[0],"bizzProdaet",playerid + 1);
	SetPVarInt(playerid,"bizzPokupaet",params[0] + 1);
	SetPVarInt(params[0],"bizzCena",params[1]);

	format(stringer,128,"%s [%i] {ffff00}предлагает вам купить бизнес за {"#cWHITE"}%i$",NamePlayer[playerid],playerid,params[1]);
	SendClientMessage(params[0],-1,stringer);
	SendClientMessage(params[0],CYELLOW,"Нажмите {"#cWHITE"}'Y' {ffff00}для приобретения, иначе {"#cWHITE"}'N'");

	format(stringer,128,"Вы предложили купить бизнес игроку {"#cWHITE"}%s [%d] {ffff00}за {"#cWHITE"}%i$",NamePlayer[params[0]],params[0],params[1]);
	SendClientMessage(playerid,CYELLOW,stringer);

	return 1;
}

CMD:changehouse(playerid,params[])
{
	if(p_info[playerid][pHouse] == 0) return SCM(playerid,CWHITE,"У вас нет дома.");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /changehouse [playerid] [цена продажи]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid,CWHITE,"Игрок оффлайн.");
	if(params[1] < 90000 || params[1] > 250000000) return SCM(playerid,CWHITE,"Цена не может быть меньше 90.000$ и больше 250.000.000$");
	if(!IsPlayerStream(5.0, playerid, params[0])) return SCM(playerid,CWHITE,"Игрок не рядом с вами.");
	if(p_info[params[0]][pHouse] > 0) return SCM(playerid,COLOR_GREY,"У игрока есть дом / Или он арендует дом");
	if(params[0] == playerid) return SCM(playerid, CWHITE, "Вы не можете продать дом самому себе.");

	SetPVarInt(params[0],"houseProdaet",playerid + 1);
	SetPVarInt(playerid,"housePokupaet",params[0] + 1);
	SetPVarInt(params[0],"houseCena",params[1]);

	format(stringer,128,"%s [%i] {ffff00}предлагает вам купить дом за {"#cWHITE"}%i$",NamePlayer[playerid],playerid,params[1]);
	SendClientMessage(params[0],-1,stringer);
	SendClientMessage(params[0],CYELLOW,"Нажмите {"#cWHITE"}'Y' {ffff00}для приобретения, иначе {"#cWHITE"}'N'");

	format(stringer,128,"Вы предложили купить дом игроку {"#cWHITE"}%s [%d] {ffff00}за {"#cWHITE"}%i$",NamePlayer[params[0]],params[0],params[1]);
	SendClientMessage(playerid,CYELLOW,stringer);

	return 1;
}

CMD:changecar(playerid,params[])
{
	if(p_info[playerid][pHouse] == 0 && p_info[playerid][pTempKey] == 0) return SCM(playerid,COLOR_GREY,"У вас нет дома"),1;
	if(sscanf(params,"iii",params[0],params[1],params[2])) return SCM(playerid, COLOR_GREY, " Используйте: /changecar [1/2] [playerid] [цена]"),1;
	if(!IsPlayerConnected(params[1])) return SCM(playerid, COLOR_GREY, "Игрок не найден!"),1;
	if(p_info[params[1]][pHouse] == 0 && p_info[params[1]][pTempKey] == 0) return SCM(playerid,COLOR_GREY,"У игрока нет дома / Или игрок не арендует дом"),1;
	if(params[0] < 1 || params[0] > 2) return 1;
	if(IsSellsCar(playerid, params[0]) != -1) return SendClientMessage(playerid,COLOR_GREY,"Недоступно. Данный автомобиль продается");
	new caren = params[0]-1;
	new model=GetVehicleModel(caridhouse[playerid][caren]);
	if(!caridhouse[playerid][caren] || model == 462) return SCM(playerid, COLOR_GREY, "У Вас мопед");
	if ( !model ) return SCM(playerid, COLOR_GREY, "Ошибка, у вашей машины не загружена модель.");
	if(params[2] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше $1"),1;
	if(!IsPlayerStream(8.0, playerid, params[1])) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!"),1;
	if(params[1] == playerid) return  SCM(playerid, COLOR_GREY, "Вы не можете продать самому себе машину!"),1;

	format(stringer,128,"%s [%i] {ffff00}предлагает вам купить а/м %s за {"#cWHITE"}%i$",NamePlayer[playerid],playerid,VehicleNames[model-400],params[2]);
	SendClientMessage(params[1],-1,stringer);
	SendClientMessage(params[1],CYELLOW,"Нажмите {"#cWHITE"}'Y' {ffff00}для приобретения, иначе {"#cWHITE"}'N'");

	format(stringer,128,"Вы предложили купить машину игроку {"#cWHITE"}%s [%d] {ffff00}за {"#cWHITE"}%i$",NamePlayer[params[1]],params[1],params[2]);
	SendClientMessage(playerid,CYELLOW,stringer);

	SetPVarInt(params[1],"carProdaet",playerid + 1);
	SetPVarInt(playerid,"carPokupaet",params[1] + 1);
	SetPVarInt(params[1],"carCena",params[2]);
	SetPVarInt(playerid,"numbercar",params[0]);
	return 1;
}

CMD:changekey(playerid, params[])
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", NamePlayer[playerid]);
	mysql_pquery(connects, mysql_query_string, "changekey", "ds",playerid,NamePlayer[playerid]);
	return 1;
}

CMD:close(playerid,params[])
{
	if(!p_info[playerid][tMember]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в фракции.");
	if(p_info[playerid][tRank] < FractionRank[p_info[playerid][tMember]-1]-1) return SendClientMessage(playerid,COLOR_GREY,"Доступно только заместителям");

	gSkladStatus [p_info[playerid][tMember]] = (gSkladStatus [p_info[playerid][tMember]]) ? (false) : (true);

	format(stringer, 128, "[F] {"#cWHITE"}%s{0080C0} %s склад",NamePlayer[playerid],(!gSkladStatus[p_info[playerid][tMember]]) ? ("закрыл(а)") : ("открыл(а)"));
	SendFamilyMessage(p_info[playerid][tMember], 0x0080C0AA, stringer);

	return 1;
}



CMD:bizwar(playerid)
{
	if(!ISAMAFIA(playerid) || p_info[playerid][tMember] == F_T_ANGEL) return SendErr(playerid, "Вам не доступна данная команда!");
	if ( p_info[playerid][tRank] < FractionRank [ p_info[playerid][tMember] - 1 ] - 2  ) return SendErr ( playerid, "Вам не доступна данная команда!" ) ;
	if(BizWarTime > 0) return SendErr(playerid, "Война за бизнес уже идет!");
	if ( BizHourTime > 0 ) return SendErr(playerid, "Стрелы за бизнес проходят раз в 1 час!");

	for(new h = 1; h <= CountBusiness; h++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid,3,Business[h][PickupEnterX], Business[h][PickupEnterY], Business[h][PickupEnterZ])) continue;
		SendClientMessage ( playerid, CGREEN, "Выберите на карте место для стрелы!" ) ;
		SendClientMessage ( playerid, CGREEN, "Это должна быть территория в пригороде г.Лас-Вентурас!" ) ;
		SetPVarInt ( playerid, "biz_war_map", 1 ) ;
		return 1 ;
	}
	SendErr ( playerid, "Вы не у бизнеса!" ) ;
	return 1;
}

CMD:bizlist(playerid, params[])
{
	if(!ISAMAFIA(playerid) || p_info[playerid][tMember] == F_T_ANGEL) return SendErr(playerid, "Вы не мафиози");
	new count_business = 1;
	new fracid = -1;
	switch(p_info[playerid][tMember])
	{
		case 5:fracid = BANK_LCN;
		case 6:fracid = BANK_YAKUZA;
		case 14:fracid = BANK_RM;
	}
	stringer = "{"#cWHITE"}№. Название + Доход бизнеса за сегодня\n\n";
	for(new i=0; i<CountBusiness; i++)
	{
		if(Business[i][Mafia] != p_info[playerid][tMember]) continue;
		if(fracid != -1)
		{
			if(count_business > 50) break;
			format(stringer, 5000, "%s%i. %s + {77FF1B}$%d{ffffff}\n",stringer, count_business, Business[i][BizName],gBankMafia[fracid][i]);
			count_business++;
		}
	}
	if(count_business < 50)
		ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{"#cWHITE"}Бизнесы мафии", stringer, "Ок", "");
	else
		ShowPlayerDialog(playerid, dBizList, DIALOG_STYLE_MSGBOX, "{"#cWHITE"}Бизнесы мафии", stringer, "Далее", "Закрыть");
	return 1;
}

CMD:alogin(playerid, params[])
{
	if(gAdmin[playerid][8] == 1  && !IsMegaAdmin(playerid))
	{
		p_info[playerid][pAdmin] = 0;
		p_info[playerid][tLeader]=0;
		p_info[playerid][tMember]=0;
		p_info[playerid][tRank]=0;
		SendClientMessage(playerid,-1,"Ваши админ-действия заморожены");
		return 1;
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", NamePlayer[playerid]);
	mysql_pquery(connects, mysql_query_string, "alogin1", "ds",playerid,NamePlayer[playerid]);
	return 1;
}

CMD:point(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new x_job[30];
	if(sscanf(params,"ds[30]s[144]",params[0],x_job,params[1])) return SendInf(playerid, "Используйте: /point [id] [+/-] [причина]");

	if(p_info[params[0]][pAdmin] == 0) return 1;
	if(strcmp(x_job,"+",true) == 0)
	{
		format(stringer, 255, "[A] %s выдал +1 очко к повышению администратору %s Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		AdmMes(CGREEN, stringer,1);
		gAdmin[playerid][7]++;
	}

	if(strcmp(x_job,"-",true) == 0)
	{
		format(stringer, 255, "[A] %s отнял очко к повышению администратору %s Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		AdmMes(0xCC5715FF, stringer,1);
		gAdmin[playerid][7]--;
	}
	return 1;
}

CMD:hpoint(playerid, params[])
{
	if(SELECT_SERVER == 2) return 1;
	if(p_info[playerid][tHelper] < 8 && p_info[playerid][pAdmin] < 11) return 1;
	new x_job[30];
	if(sscanf(params,"ds[30]s[144]",params[0],x_job,params[1])) return SendInf(playerid, "Используйте: /hpoint [id] [+/-] [причина]");
	if(!p_info[params[0]][tHelper]) return 1;
	if(strcmp(x_job,"+",true) == 0)
	{
		format(stringer, 128, "[H] %s выдал +1 очко к повышению хелперу %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		AdmMes(CGREEN, stringer,1);
		p_info[params[0]][pPoint]++;
		UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
	}
	if(strcmp(x_job,"-",true) == 0)
	{
		format(stringer, 128, "[H] %s отнял очко к повышению хелперу %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		AdmMes(COLOR_LIGHTRED, stringer,1);
		p_info[params[0]][pPoint]--;
		UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
	}
	return 1;
}

CMD:lpoint(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 11) return SendErr(playerid, "Вы не уполномочены использовать эту команду");
	new x_job[30];
	if(sscanf(params,"ds[30]s[144]",params[0],x_job,params[1])) return SendInf(playerid, "Используйте: /lpoint [id] [+/-] [причина]");
	if(!p_info[params[0]][tLeader]) return 1;
	if(strcmp(x_job,"+",true) == 0)
	{
		format(stringer, 128, "[A] %s выдал +1 очко к повышению лидеру %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		AdmMes(CGREEN, stringer,1);
		p_info[params[0]][pPoint]++;
		UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
	}
	if(strcmp(x_job,"-",true) == 0)
	{
		format(stringer, 128, "[A] %s отнял очко к повышению лидеру %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		AdmMes(COLOR_LIGHTRED, stringer,1);
		p_info[params[0]][pPoint]--;
		UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
	}
	return 1;
}

CMD:setpatr(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return SendClientMessage(playerid,COLOR_GREY,"/setpatr [id fraction] [count]");
	if(params[1] < 1) return SendClientMessage(playerid,COLOR_GREY,"/setpatr [id fraction] [count]");
	if(params[0] < 1 || params[0] > fraction_amount) return SendErr(playerid,"Неверный ID фракции");
	frac_patron[params[0]] = params[1];
	UpdateFractionStore(params[0]);
	UpdateStoreGang(params[0]);
	SendClientMessage(playerid,CBLUE,"Вы успешно пополнили склад.");
	return 1;
}

CMD:setmats(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return SendClientMessage(playerid,COLOR_GREY,"/setmats [id fraction] [count]");
	if(params[1] < 1) return SendClientMessage(playerid,COLOR_GREY,"/setmats [id fraction] [count]");
	if(params[0] < 1 || params[0] > fraction_amount) return SendErr(playerid,"Неверный ID фракции");
	frac_metall[params[0]] = params[1];
	UpdateFractionStore(params[0]);
	UpdateStoreGang(params[0]);
	SendClientMessage(playerid,CBLUE,"Вы успешно пополнили склад");
	return 1;
}

CMD:createost(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(GetPVarInt(playerid,"TotalOst_")) return 1;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	ostanovka[TotalOst][ostID] = CreateDynamicObject(1257,X,Y+0.5,Z,0.0,0.0,0.0,-1,-1,-1,200.0,200.0);

	ostanovka[TotalOst][ostX] = X;
	ostanovka[TotalOst][ostY] = Y+0.5;
	ostanovka[TotalOst][ostZ] = Z;

	Streamer_Update(playerid);

	format(stringer, 128, "Вы создали остановку {"#cGRAY"}(slot: %i)",TotalOst);
	SendClientMessage(playerid,-1,stringer);
	SendClientMessage(playerid,-1,"Для редактирования её месторасположения Используйте {"#cGRAY"}/editost");

	SetPVarInt(playerid,"TotalOst_", TotalOst+1);
	TotalOst++;
	return 1;
}

CMD:editost(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(!GetPVarInt(playerid,"TotalOst_")) return 1;

	new slot = GetPVarInt(playerid,"TotalOst_")-1;

	EditDynamicObject(playerid,ostanovka[slot][ostID]);

	SendClientMessage(playerid,-1,"После редактирования , для сохранения нажмите {"#cGRAY"}/finishost");
	return 1;
}



CMD:finishost(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(!GetPVarInt(playerid,"TotalOst_")) return 1;
	new slot = GetPVarInt(playerid,"TotalOst_")-1;

	new Float:X, Float:Y, Float:Z;
	new Float:rX, Float:rY, Float:rZ;

	GetDynamicObjectPos(ostanovka[slot][ostID],X,Y,Z);
	GetDynamicObjectRot(ostanovka[slot][ostID],rX,rY,rZ);

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "[debug] x: %.4f y: %.4f z: %.4f rx: %.4f ry: %.4f rz: %.4f",ostanovka[slot][ostX],ostanovka[slot][ostY],ostanovka[slot][ostZ],ostanovka[slot][ostrX],ostanovka[slot][ostrY],ostanovka[slot][ostrZ]);
	SendClientMessage(playerid,-1,mysql_query_string);

	DestroyDynamicObject(ostanovka[slot][ostID]);
	ostanovka[slot][ostID] = CreateDynamicObject(1257,ostanovka[slot][ostX],ostanovka[slot][ostY],ostanovka[slot][ostZ],
														 ostanovka[slot][ostrX],ostanovka[slot][ostrY],ostanovka[slot][ostrZ],-1,-1,-1,200.0,200.0);
	Streamer_Update(playerid);


	format(mysql_query_string,512,"INSERT INTO `ostanovka`(`X`, `Y`, `Z`, `rX`, `rY`, `rZ`) VALUES ('%f','%f','%f','%f','%f','%f')",ostanovka[slot][ostX],ostanovka[slot][ostY],ostanovka[slot][ostZ],ostanovka[slot][ostrX],ostanovka[slot][ostrY],ostanovka[slot][ostrZ]);
	mysql_pquery(connects,mysql_query_string);

	SendClientMessage(playerid,-1,"Остановка {"#cGRAY"}сохранена.");
	DeletePVar(playerid,"TotalOst_");
	return 1;
}


CMD:fcontract(playerid)
{
	if(p_info[playerid][pJob] != 2) return SendClientMessage(playerid,COLOR_GREY,"Вы не работаете механиком.");
	else if(GetPlayerState(playerid) != 2) return SendErr(playerid,"Вы должны быть в машине.");
	else if(gVehicles[GetPlayerVehicleID(playerid) - 1][vJob] != 2) return SendErr(playerid,"Вы должны быть в рабочей машине.");

	for(new i=0; i<CountBusiness; i++)
	{
		if(Business[i][bType] != 13) continue;
		if(!PlayerToPoint(10.0,playerid,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ])) continue;

		if(Business[i][EnterPrice] == 0) return SendClientMessage(playerid,COLOR_GREY,"Цена за 1 литр не назначена владельцем заправки.");

		format(stringer, 128, "{ffffff}Стоимость 1 литра: %d$\n\nИспользуйте количество бензина, которое хотите закупить\n(число должно быть кратным 2)",Business[i][EnterPrice]);
		ShowPlayerDialog(playerid,dFContract,DIALOG_STYLE_INPUT,"{"#cORANGE"}Закупка топлива",stringer,"Купить","Отмена");

		SetPVarInt(playerid,"f_biz",i);
		return 1;
	}
	SendClientMessage(playerid,COLOR_GREY,"Вы должны быть рядом с заправкой.");
	return 1;
}

CMD:refill(playerid,params[])
{
	if(p_info[playerid][pJob] != 2) return SendClientMessage(playerid,COLOR_GREY,"Вы не работаете механиком.");
	else if(sscanf(params,"iii",params[0],params[1],params[2])) return SendInf(playerid,"/refill [ид игрока] [бензин] [цена]");
	else if(params[2] < 80 || params[2] > 1500) return SendErr(playerid,"Цена не может быть больше 1500$ и меньше 80$");
	else if(GetPVarInt(playerid,"toplivo") < params[1]) return SendErr(playerid,"У вас нет столько топлива.");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок оффлайн");
	else if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid,"Игрок не рядом с вами!");
	else if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendErr(playerid,"Игрок должен быть в машине.");
	else if(GetPlayerState(playerid) != 2) return SendErr(playerid,"Вы должны быть в машине.");
	else if(gVehicles[GetPlayerVehicleID(playerid) - 1][vJob] != 2) return SendErr(playerid,"Вы должны быть в рабочей машине.");

	format(stringer, 200, "Вы предложили {"#cWHITE"}%s {"#cBLUE"}заправить автомобиль на {"#cWHITE"}%i{"#cBLUE"} литров за {"#cWHITE"}%i$", NamePlayer[params[0]],params[1],params[2]);
	SendClientMessage(playerid,CBLUE,stringer);

	format(stringer, 200, "{"#cBLUE"}Вам предлагает {"#cWHITE"}%s {"#cBLUE"}заправить Ваш автомобиль на {"#cWHITE"}%i{"#cBLUE"} литров за {"#cWHITE"}%i$\n\n{"#cWHITE"}Вы согласны?", NamePlayer[playerid],params[1],params[2]);
	ShowPlayerDialog(params[0],dRefill,DIALOG_STYLE_MSGBOX,"{"#cINFO"}Заправка",stringer,"Да","Нет");

	SetPVarInt(playerid,"id_refill",params[0] + 1);
	SetPVarInt(playerid,"price_refill", params[2]);
	SetPVarInt(playerid,"litres_refill", params[1]);
	SetPVarInt(params[0],"id_refill",playerid + 1);
	return 1;
}



CMD:repair(playerid,params[])
{
	if(p_info[playerid][pJob] != 2) return SendClientMessage(playerid,COLOR_GREY,"Вы не работаете механиком.");
	else if(sscanf(params,"ii",params[0],params[1])) return SendInf(playerid,"/repair [ид игрока] [цена]");
	else if(params[1] < 80 || params[1] > 1500) return SendErr(playerid,"Цена за починку не может быть больше 1500$ и меньше 80$");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid,"Игрок оффлайн");
	else if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid,"Игрок не рядом с вами!");
	else if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendErr(playerid,"Игрок должен быть в машине.");
	else if(GetPlayerState(playerid) != 2) return SendErr(playerid,"Вы должны быть в машине.");
	else if(gVehicles[GetPlayerVehicleID(playerid) - 1][vJob] != 2) return SendErr(playerid,"Вы должны быть в рабочей машине.");
	if ( params [ 0 ] == playerid ) return SendErr(playerid,"Вы не можете починить свою машину.");
	format(stringer, 128, "Вы предложили {"#cWHITE"}%s {"#cBLUE"}починить автомобиль за {"#cWHITE"}%i$", NamePlayer[params[0]],params[1]);
	SendClientMessage(playerid,CBLUE,stringer);

	format(stringer, 128, "{"#cBLUE"}Вам предлагает {"#cWHITE"}%s {"#cBLUE"}починить Ваш автомобиль за {"#cWHITE"}%i$\n\n{"#cWHITE"}Вы согласны?", NamePlayer[playerid],params[1]);
	ShowPlayerDialog(params[0],dRepair,DIALOG_STYLE_MSGBOX,"{"#cINFO"}Ремонт",stringer,"Да","Нет");

	SetPVarInt(playerid,"id_repair",params[0] + 1);
	SetPVarInt(playerid,"price_repair", params[1]);
	SetPVarInt(params[0],"id_repair",playerid + 1);
	return 1;
}



/*forward FZ_TDP_UPDATE(playerid);
public FZ_TDP_UPDATE(playerid)
{
	new color = PlayerTextDrawGetBoxColor(playerid, FZ_TDP[playerid]);
	PlayerTextDrawHide(playerid, FZ_TDP[playerid]);

	if ( color - 25 > 0 )
	{
		PlayerTextDrawBoxColor(playerid, FZ_TDP[playerid], color - 25);
		PlayerTextDrawShow(playerid, FZ_TDP[playerid]);
	}
	else
	{
		PlayerTextDrawDestroy(playerid, FZ_TDP[playerid]);
		FZ_TDP[playerid] = PlayerText:-1;
		KillTimer ( FZ_TDP_Timer[playerid] ) ;
		FZ_TDP_Timer[playerid] = -1;
	}
	return 1;
}*/

CMD:testsit(playerid)
{
	if(GetPVarInt(playerid,"TIME_IntroBox")) return 1;
	SetPVarInt(playerid,"TIME_IntroBox", true);

	if(IntroBox[playerid] == PlayerText:-1)
	{
		IntroBox[playerid] = CreatePlayerTextDraw(playerid, 641.531494, 1.500000, "usebox");
		PlayerTextDrawLetterSize(playerid, IntroBox[playerid], 0.000000, 49.396297);
		PlayerTextDrawTextSize(playerid, IntroBox[playerid], -2.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, IntroBox[playerid], 1);
		PlayerTextDrawColor(playerid, IntroBox[playerid], 0);
		PlayerTextDrawUseBox(playerid, IntroBox[playerid], true);
		PlayerTextDrawBoxColor(playerid, IntroBox[playerid], 250);
		PlayerTextDrawSetShadow(playerid, IntroBox[playerid], 0);
		PlayerTextDrawSetOutline(playerid, IntroBox[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, IntroBox[playerid], 0x00000000);
		PlayerTextDrawFont(playerid, IntroBox[playerid], 0);
		PlayerTextDrawSetProportional(playerid, IntroBox[playerid], 1);
		PlayerTextDrawShow(playerid, IntroBox[playerid]);
		SetPVarInt(playerid,"box_color",250);
		//
		for(new i = 0; i < 12; i++) TextDrawShowForPlayer(playerid,Background[i]);
		for(new i = 0; i < 6; i++) TextDrawShowForPlayer(playerid,Objects[i]);
		for(new i = 0; i < 5; i++) TextDrawShowForPlayer(playerid,Titles[i]);
		//
	}

	for(new i = 0; i < 10; i++) SendClientMessage(playerid,-1,"");
	SendClientMessage(playerid,COLOR_GREY,"Диспетчер: {ffffff}Через 5 минут вы прибудете в штат World");
	SendClientMessage(playerid,COLOR_GREY,"Диспетчер: {ffffff}Вам будет выдан минимальный прожиточный минимум {"#cGRAY"}(10.000.000$)");


	SetTimerEx("TIME_IntroBox",10,0,"i",playerid);

	SetPlayerInterior(playerid, 1);
	AC_SetPlayerPos(playerid,2.6910,29.6301,1199.6012);
	SetPlayerFacingAngle(playerid,184.3517);
	AC_TogglePlayerControllable(playerid, 0);
	FIXES_ApplyAnimation(playerid, "PED", "SEAT_IDLE", 4.1, 0, 1, 1, 1, 1, 1);

	SetPlayerCameraPos(playerid,2.6910+(15.0*floatsin(184.3517,degrees)),29.6301+(5.5*floatcos(184.3517,degrees)),1199.6012);
	SetPlayerCameraLookAt(playerid,2.6910,29.6301,1199.6012);
	InterpolateCameraPos(playerid,2.6910+(15.0*floatsin(184.3517,degrees)),29.6301+(5.5*floatcos(184.3517,degrees)),1199.6012,
								  2.6910+(11.0*floatsin(184.3517,degrees)),29.6301+(3.0*floatcos(184.3517,degrees)),1199.6012,15000,CAMERA_MOVE);
	SetTimerEx("UpdateCameraSitPos",9000,0,"i",playerid);
	return 1;
}



forward TIME_IntroBox(playerid);
public TIME_IntroBox(playerid)
{
	new color = GetPVarInt(playerid,"box_color");
	PlayerTextDrawHide(playerid, IntroBox[playerid]);
	PlayerTextDrawBoxColor(playerid, IntroBox[playerid], color-1);
	SetPVarInt(playerid,"box_color",color-1);
	if(color <= 0)
	{
		PlayerTextDrawDestroy(playerid,IntroBox[playerid]);
		IntroBox[playerid]=PlayerText:-1;
		DeletePVar(playerid,"box_color");
		return 1;
	}
	else PlayerTextDrawShow(playerid, IntroBox[playerid]);
	SetTimerEx("TIME_IntroBox",50,0,"i",playerid);
	return 1;
}



forward UpdateCameraSitPos(playerid);
public UpdateCameraSitPos(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;

	if(GetPVarInt(playerid,"ytm"))
	{
		SpawnPlayer(playerid);
		DeletePVar(playerid,"ytm");
		return 1;
	}

	for(new i = 0; i < 12; i++) TextDrawHideForPlayer(playerid,Background[i]);
	for(new i = 0; i < 6; i++) TextDrawHideForPlayer(playerid,Objects[i]);
	for(new i = 0; i < 5; i++) TextDrawHideForPlayer(playerid,Titles[i]);

	SetTimerEx("UpdateCameraSitPos",5000,0,"i",playerid);
	SetPVarInt(playerid,"ytm",true);
	DeletePVar(playerid,"TIME_IntroBox");
	return 1;
}


/*CMD:dhouse(playerid,params[])
{
	if(SELECT_SERVER != 2) return 1;
	if(p_info[playerid][bAdmin] < 3) return 1;

	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid,-1,"/dhouse [id дома]");
	if(!IsValidDynamicMapIcon(gHouses[params[0]][hMIcon])) return SendClientMessage(playerid,-1,"error #111");

	stringer[0] = EOS;
	format(stringer,500,"DELETE FROM `housetest` WHERE `hID` = '%d'", params[0]);
	mysql_pquery(connects,stringer,"","");

	DestroyDynamicArea(gHouses[params[0]][hArea]);
	DestroyDynamicPickup(gHouses[params[0]][hPickup]);
	DestroyDynamicMapIcon(gHouses[params[0]][hMIcon]);

	format(stringer, 128, "Дом "ORG"%i {"#cWHITE"}успешно удалён.",params[0]);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}*/


CMD:fpoint(playerid, params[])
{
	if(!p_info[playerid][tLeader]) return 1;
	new x_job[30];
	if(sscanf(params,"ds[30]s[144]",params[0],x_job,params[1])) return SCM(playerid, CWHITE, "Используйте: /fpoint [id] [+/-] [причина]");
	if(p_info[params[0]][tMember] != p_info[playerid][tMember]) return 1;
	if(strcmp(x_job,"+",true) == 0)
	{
		foreach(i)
		{
			if(p_info[i][tMember] == p_info[playerid][tMember])
			{
				format(stringer, 128, "[F] %s выдал(a) +1 очко к повышению игроку %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
				SendClientMessage(i,CGREEN,stringer);
			}
		}
		p_info[params[0]][pPoint]++;
		UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
	}
	if(strcmp(x_job,"-",true) == 0)
	{
		foreach(i)
		{
			if(p_info[i][tMember] == p_info[playerid][tMember])
			{
				format(stringer, 128, "[F] %s отнял(a) очко к повышению игроку %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
				SendClientMessage(i,COLOR_LIGHTRED,stringer);
			}
		}
		p_info[params[0]][pPoint]--;
		UpdatePlayerData(params[0],"pPoint",p_info[params[0]][pPoint]);
	}
	return 1;
}


CMD:wcount_bots(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new cc_bots = 0;
	foreach(i)
	{
		if (!IsBotServer(i)) continue;
		cc_bots++;
	}
	format(stringer, 128, "Всего: %d ботов", cc_bots);
	SCM(playerid, COLOR_GREY, stringer);
	return true;
}

CMD:wwkick_bots(playerid)
{
    if(!p_info[playerid][pAdmin]) return 1;
	if(timer_connect_bots == -1)
	{
						timer_connect_bots = SetTimer("ConnectionBot", interval_connection_bots, 1);
						current_slot = 4;
	}

	return 1;
}

CMD:wwadd_bots(playerid)
{
	if(!p_info[playerid][pAdmin]) return 1;
	if(timer_connect_bots == -1)
	{
						timer_connect_bots = SetTimer("ConnectionBot", interval_connection_bots, 1);
						current_slot = 0;
	}

	return 1;
}


CMD:avig(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(sscanf(params, "ds[100]",params[0],params[1])) return SendInf(playerid, "Используйте: /avig [id] [причина]");
	if(p_info[params[0]][pAdmin]==0) return SendErr(playerid,"Игрок не администратор");
	gAdmin[params[0]][6] ++;

	if(IsAFullDostup(params[0]) && !IsAFullDostup(playerid))
	{
		SCM(playerid, -1, "Вы были сняты с админки за попытку бана основателя");
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}

	if(gAdmin[params[0]][6] >= 3)
	{
		p_info[params[0]][pAdmin] = 0;
		DelAdmin(params[0], NamePlayer[params[0]]);
		format(stringer, 128, "[A] Администратор %s снял администратора %s (3/3). Причина: %s", NamePlayer[playerid], NamePlayer[params[0]], params[1]);
		AdmMes(CBADINFO,stringer,1);
		format(stringer, 128, "Администратор %s снял администратора %s (3/3). Причина: %s", NamePlayer[playerid], NamePlayer[params[0]], params[1]);
		WriteLog(TYPE_ADM_AVIG, stringer);
		KickEx(params[0]);
		return 1;
	}

	format(stringer, 128, "[A] Администратор %s выдал выговор администратору %s. Причина: %s", NamePlayer[playerid], NamePlayer[params[0]], params[1]);
	AdmMes(CBADINFO,stringer,1);

	format(stringer, 128, "Администратор %s выдал выговор администратору %s (%d / 3). Причина: %s", NamePlayer[playerid], NamePlayer[params[0]], gAdmin[params[0]][6], params[1]);
	WriteLog(TYPE_ADM_AVIG, stringer);

	return 1;
}

CMD:unavig(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	if(p_info[playerid][pAdmin] < 12) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SendInf(playerid, "Используйте: /unavig [id] [причина]");
	if(gAdmin[params[0]][6] == 0) return SCM(playerid, CWHITE, "У него нет выговоров");
	if(!IsPlayerConnected(params[0])) return 1;
	gAdmin[params[0]][6]--;
	format(stringer, 128, "[A] Администратор %s снял выговор администратору %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
	AdmMes(CGREEN,stringer,1);
	format(stringer, 128, "Администратор %s снял выговор администратору %s (%d / 3). Причина: %s", NamePlayer[playerid], NamePlayer[params[0]], gAdmin[params[0]][6], params[1]);
	WriteLog(TYPE_ADM_AVIG, stringer);
	return 1;
}

CMD:avigl(playerid, params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(p_info[playerid][pAdmin] < 11) return SendErr(playerid,"Вы не уполномочены использовать эту команду");
	if(!uAdmin[playerid][14]) return SendErr(playerid,"Данная функция отключена основателем.");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /avigl [id] [причина]");
	if(!p_info[params[0]][tLeader] || p_info[params[0]][pAdmin]) return 1;
	p_info[params[0]][pAvig] ++;

	if(p_info[params[0]][pAvig]>=3)
	{
		ChangePlayerFraction(params[0], 0);
		p_info[params[0]][tLeader] = 0;
		UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
		p_info[params[0]][tRank] = 0;
		UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
		p_info[params[0]][pAvig] = 0;
		UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);

		format(stringer, 128, "Администратор %s снял лидера %s (3/3). Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
		SendClientMessageToAll(COLOR_LIGHTRED,stringer);

		SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
		SetPlayerSkin(params[0], p_info[params[0]][pChar]);

		// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
		return 1;
	}

	format(stringer, 128, "Администратор %s выдал выговор лидеру %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer);

	UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
	return 1;
}

CMD:unvigl(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 11) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /unvigl [id] [причина]");
	if(0 == p_info[params[0]][pAvig]) return SCM(playerid, CWHITE, "У него нет выговоров");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!p_info[params[0]][tLeader] || p_info[params[0]][pAdmin]) return 1;
	p_info[params[0]][pAvig] --;
	UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
	format(stringer, 128, "Администратор %s снял выговор лидеру %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer);
	return 1;
}

CMD:unsubvig(playerid,params[])
{
	if(p_info[playerid][tMember] != 26) return 1;
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /unsubvig [id] [причина]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!p_info[params[0]][pAvig]) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет выговоров");

	if ( p_info [ params[0] ] [ pAdmin ] == 0 )
	{
		if(p_info[playerid][tRank] == 10 || p_info[playerid][tRank] == 12)
		{
			if(p_info[params[0]][tLeader] == 1 || p_info[params[0]][tLeader] == 10 || p_info[params[0]][tLeader] == 21 || p_info[params[0]][tMember] == 2 || p_info[params[0]][tMember] == 25)
			{
				p_info[params[0]][pAvig] --;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				format(stringer, 128, "%s %s снял выговор Комиссару %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
				SendTeamMessage(CORANGE, stringer);
			}
			if(p_info[params[0]][tMember] == 1 || p_info[params[0]][tMember] == 10 || p_info[params[0]][tMember] == 21 || p_info[params[0]][tMember] == 2 || p_info[params[0]][tMember] == 25)
			{
				p_info[params[0]][pAvig] --;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				format(stringer, 128, "%s %s снял выговор сотруднику %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
				SendTeamMessage(CORANGE, stringer);
			}
		}
		if(p_info[playerid][tRank] == 9 || p_info[playerid][tRank] == 12)
		{
			if(p_info[params[0]][tLeader] == 3 || p_info[params[0]][tLeader] == 19)
			{
				p_info[params[0]][pAvig] --;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				format(stringer, 128, "%s %s снял выговор Генералу %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
				SendTeamMessage(CORANGE, stringer);
			}
			if(p_info[params[0]][tMember] == 3 || p_info[params[0]][tMember] == 19)
			{
				p_info[params[0]][pAvig] --;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				format(stringer, 128, "%s %s снял выговор сотруднику %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
				SendTeamMessage(CORANGE, stringer);
			}
		}
		if(p_info[playerid][tRank] == 8 || p_info[playerid][tRank] == 12)
		{
			if(p_info[params[0]][tLeader] == 4)
			{
				p_info[params[0]][pAvig] --;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				format(stringer, 128, "%s %s снял выговор Глав.врачу %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
				SendTeamMessage(CORANGE, stringer);
			}
			if(p_info[params[0]][tMember] == 4)
			{
				p_info[params[0]][pAvig] --;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				format(stringer, 128, "%s %s снял выговор сотруднику %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
				SendTeamMessage(CORANGE, stringer);
			}
		}
	}
	return 1;
}

CMD:subvig(playerid,params[])
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(p_info[playerid][tMember] != 26) return 1;
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /subvig [id] [причина]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(p_info[params[0]][pAdmin]) return 1;

	if(p_info[playerid][tRank] == 10 || p_info[playerid][tRank] == 12)
	{
		if(p_info[params[0]][tLeader] == 1 || p_info[params[0]][tLeader] == 10 || p_info[params[0]][tLeader] == 21 || p_info[params[0]][tMember] == 2 || p_info[params[0]][tMember] == 25)
		{
			p_info[params[0]][pAvig] ++;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			format(stringer, 128, "%s %s выдал выговор Комиссару %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendTeamMessage(CALLDEPT, stringer);
			if(p_info[params[0]][pAvig]>=3)
			{
				ChangePlayerFraction(params[0], 0);
				p_info[params[0]][pAvig] = 0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][tLeader] = 0;
				UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
				p_info[params[0]][tRank] = 0;
				UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);

				SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
				SetPlayerSkin(params[0], p_info[params[0]][pChar]);

				// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			}
			return 1;
		}
		if(p_info[params[0]][tMember] == 1 || p_info[params[0]][tMember] == 10 || p_info[params[0]][tMember] == 21 || p_info[params[0]][tMember] == 2 || p_info[params[0]][tMember] == 25)
		{
			p_info[params[0]][pAvig] ++;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			format(stringer, 128, "%s %s выдал выговор сотруднику %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendTeamMessage(CORANGE, stringer);
			if(p_info[params[0]][pAvig]>=3)
			{
				ChangePlayerFraction(params[0], 0);
				p_info[params[0]][pAvig] = 0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][tLeader] = 0;
				UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
				p_info[params[0]][tRank] = 0;
				UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);

				SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
				SetPlayerSkin(params[0], p_info[params[0]][pChar]);

				// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			}
			return 1;
		}
	}
	if(p_info[playerid][tRank] == 9 || p_info[playerid][tRank] == 12)
	{
		if(p_info[params[0]][tLeader] == 3 || p_info[params[0]][tLeader] == 19)
		{
			p_info[params[0]][pAvig] ++;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			format(stringer, 128, "%s %s выдал выговор Генералу %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendTeamMessage(CORANGE, stringer);
			if(p_info[params[0]][pAvig]>=3)
			{
				ChangePlayerFraction(params[0], 0);
				p_info[params[0]][pAvig] = 0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][tLeader] = 0;
				UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
				p_info[params[0]][tRank] = 0;
				UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);

				SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
				SetPlayerSkin(params[0], p_info[params[0]][pChar]);

				// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			}
			return 1;
		}
		if(p_info[params[0]][tMember] == 3 || p_info[params[0]][tMember] == 19)
		{
			p_info[params[0]][pAvig] ++;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			format(stringer, 128, "%s %s выдал выговор сотруднику %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendTeamMessage(CORANGE, stringer);
			if(p_info[params[0]][pAvig]>=3)
			{
				ChangePlayerFraction(params[0], 0);
				p_info[params[0]][pAvig] = 0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][tLeader] = 0;
				UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
				p_info[params[0]][tRank] = 0;
				UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);

				SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
				SetPlayerSkin(params[0], p_info[params[0]][pChar]);

				// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			}
			return 1;
		}
	}
	if(p_info[playerid][tRank] == 8 || p_info[playerid][tRank] == 12)
	{
		if(p_info[params[0]][tLeader] == 4)
		{
			p_info[params[0]][pAvig] ++;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			format(stringer, 128, "%s %s выдал выговор Глав.врачу %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendTeamMessage(CORANGE, stringer);
			if(p_info[params[0]][pAvig]>=3)
			{
				ChangePlayerFraction(params[0], 0);
				p_info[params[0]][pAvig] = 0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][tLeader] = 0;
				UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
				p_info[params[0]][tRank] = 0;
				UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);

				SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
				SetPlayerSkin(params[0], p_info[params[0]][pChar]);

				// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			}
			return 1;
		}
		if(p_info[params[0]][tMember] == 4)
		{
			p_info[params[0]][pAvig] ++;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			format(stringer, 128, "%s %s выдал выговор сотруднику %s (%i/3). Причина: %s",GetRank(p_info[playerid][tMember],p_info[playerid][tRank]),NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendTeamMessage(CORANGE, stringer);
			if(p_info[params[0]][pAvig]>=3)
			{
				ChangePlayerFraction(params[0], 0);
				p_info[params[0]][pAvig] = 0;
				UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
				p_info[params[0]][tLeader] = 0;
				UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
				p_info[params[0]][tRank] = 0;
				UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);

				SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
				SetPlayerSkin(params[0], p_info[params[0]][pChar]);

				// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
			}
			return 1;
		}
	}

	return 1;
}

CMD:fvig(playerid, params[])
{
	if(!p_info[playerid][tMember]) return 1;
	if(p_info[playerid][tRank] < FractionRank[p_info[playerid][tMember]-1]-1) return SCM(playerid, CWHITE, "Вам недоступна эта команда.");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /fvig [id] [причина]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(p_info[params[0]][tMember] != p_info[playerid][tMember] || p_info[params[0]][pAdmin] > 0 || p_info[params[0]][tRank] >= FractionRank[p_info[playerid][tMember]-1]-1) return SendClientMessage(playerid,COLOR_GREY,"Игрок не в вашей фракции / администратор / лидер / зам");
	p_info[params[0]][pAvig] ++;
	UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);

	if(p_info[params[0]][pAvig]>=3)
	{
		if(StartWork(params[0]))
		{
			SCM(params[0],CBLUE,"Рабочий день окончен");
			start_work[ params[0] ] = 0;
			UpdatePlayerData(params[0], "start_work", start_work[params[0]]);
		}

		if ( p_info [ params[0] ] [ pAdmin ] == 0 )
		{
			ChangePlayerFraction(params[0], 0);
			p_info[params[0]][pAvig] = 0;
			UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
			p_info[params[0]][tRank] = 0;
			UpdatePlayerData(params[0],"tRank",p_info[params[0]][tRank]);
			p_info[params[0]][tLeader] = 0;
			UpdatePlayerData(params[0],"tLeader",p_info[params[0]][tLeader]);
			p_info[params[0]][pJob] = 0;
			p_info[params[0]][pSubLeader] = 0;
			UpdatePlayerData(params[0],"pSubLeader",p_info[params[0]][pSubLeader]);
			SetPlayerColorAc(params[0],p_info[params[0]][tMember]);
			SetPlayerSkin(params[0], p_info[params[0]][pChar]);

			// SetSpawnInfoEx(params[0], p_info[params[0]][pChar], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 2 ], f_info [ p_info[params[0]][tMember] ] [ f_spawn ] [ 3 ] );
		}
	}

	if(p_info[params[0]][tMember] == 1 || p_info[params[0]][tMember] == 21 || p_info[params[0]][tMember] == 10)
	{
		format(stringer, 128, "[F] %s выдал выговор сотруднику %s (%i/3). Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
		SendTeamMessage(COLOR_LIGHTRED, stringer);
		return 1;
	}

	if(p_info[params[0]][tMember] == 3 || p_info[params[0]][tMember] == 19)
	{
		format(stringer, 128, "[F] %s выдал выговор сотруднику %s (%i/3). Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
		SendTeamMessage(COLOR_LIGHTRED, stringer);
		return 1;
	}

	if(p_info[params[0]][tMember] == 7 || p_info[params[0]][tMember] == 26)
	{
		format(stringer, 128, "[F] %s выдал выговор сотруднику %s (%i/3). Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
		SendTeamMessage(COLOR_LIGHTRED, stringer);
		return 1;
	}

	foreach(i)
	{
		if(p_info[i][tMember] == p_info[playerid][tMember])
		{
			format(stringer, 128, "[F] %s выдал выговор игроку %s (%i/3). Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendClientMessage(i,COLOR_LIGHTRED,stringer);
		}
	}
	return 1;
}

CMD:funvig(playerid, params[])
{
	if(!p_info[playerid][tMember]) return 1;
	if(p_info[playerid][tRank] < FractionRank[p_info[playerid][tMember]-1]-1) return SCM(playerid, CWHITE, "Вам недоступна эта команда.");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "Используйте: /funvig [id] [причина]");
	if(!p_info[params[0]][pAvig]) return SCM(playerid, CWHITE, "У него нет выговоров");
	if(p_info[params[0]][tMember] != p_info[playerid][tMember] || p_info[params[0]][pAdmin] > 0 || p_info[params[0]][tRank] >= FractionRank[p_info[playerid][tMember]-1]) return SendClientMessage(playerid,COLOR_GREY,"Игрок не в вашей фракции / администратор / лидер / зам");

	if ( p_info [ params[0] ] [ pAdmin ] == 0 )
	{
		p_info[params[0]][pAvig] --;
		UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
		foreach(i)
		{
			if(p_info[i][tMember] == p_info[playerid][tMember])
			{
				format(stringer, 128, "[F] %s снял выговор игроку %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
				SendClientMessage(i,COLOR_LIGHTRED,stringer);
			}
		}
	}
	return 1;
}

CMD:getvig(playerid, params[])
{
	if(!p_info[playerid][tLeader]) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid, CWHITE, "Используйте: /getvig [id]");

	format(stringer,128,"К-во выговоров: {"#cWHITE"}%d",p_info[params[0]][pAvig]);
	SendClientMessage(playerid,CYELLOW,stringer);
	return 1;
}

CMD:getpoint(playerid, params[])
{
	if(!p_info[playerid][tLeader]) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid, CWHITE, "Используйте: /getpoint [id]");

	format(stringer,128,"Положительных очков: {"#cWHITE"}%d",p_info[params[0]][pPoint]);
	SendClientMessage(playerid,CYELLOW,stringer);
	return 1;
}

CMD:hvig(playerid, params[])
{
	if(SELECT_SERVER == 2) return 1;
	if(p_info[playerid][tHelper] < 7) return 1;
	if(sscanf(params, "ds[100]",params[0],params[1])) return SendInf(playerid, "Используйте: /hvig [id] [причина]");
	if(!p_info[params[0]][tHelper] || p_info[params[0]][pAdmin]) return SendErr(playerid, "Этому игроку вы не можете выдать выговор");
	p_info[params[0]][pAvig] ++;
	if(p_info[params[0]][pAvig]>=3)
	{
		p_info[params[0]][pAvig] = 0;
		p_info[params[0]][tHelper] = 0;
		UpdatePlayerData(params[0],"tHelper",p_info[params[0]][tHelper]);

	}
	UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
	foreach(i)
	{
		if(p_info[i][tHelper])
		{
			format(stringer, 128, "[H] %s выдал выговор хелперу %s (%i/3). Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],p_info[params[0]][pAvig],params[1]);
			SendClientMessage(i,COLOR_LIGHTRED,stringer);
		}
	}
	return 1;
}

CMD:hunvig(playerid, params[])
{
	if(SELECT_SERVER == 2) return 1;
	if(p_info[playerid][tHelper] < 7) return 1;
	if(sscanf(params, "ds[100]",params[0],params[1])) return SendInf(playerid, "Используйте: /hunvig [id] [причина]");
	if(!p_info[params[0]][pAvig]) return SendErr(playerid, "У игрока нет выговоров");
	if(!p_info[params[0]][tHelper] || p_info[params[0]][pAdmin]) return SendErr(playerid, "Этому игроку вы не можете снять выговор");

	if ( p_info [ params[0] ] [ pAdmin ] == 0 )
	{
		p_info[params[0]][pAvig] --;
		UpdatePlayerData(params[0],"pAvig",p_info[params[0]][pAvig]);
		foreach(i)
		{
			if(p_info[i][tMember] == p_info[playerid][tMember])
			{
				format(stringer, 128, "[H] %s снял выговор хелперу %s. Причина: %s",NamePlayer[playerid],NamePlayer[params[0]],params[1]);
				SendClientMessage(i,COLOR_LIGHTRED,stringer);
			}
		}
	}
	return 1;
}

CMD:hstats(playerid,params[])
{
	if(SELECT_SERVER == 2) return 1;
	else if(p_info[playerid][tHelper] < 8) return 1;
	else if(!IsAGaHelper(playerid) && !IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	else if(sscanf(params, "d",params[0])) return SendInf(playerid, "Используйте: /hstats [id]");
	else if(!IsPlayerConnected(params[0]) || params[0] > MAX_PLAYERS ) return SendClientMessage(playerid,-1,"Игрок не в сети");

	format(stringer,450,"{"#cORANGE"}Вопросов принято: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Отвечено: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}PayDay отыграно: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Сменил скин: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n",
	HelperStat[params[0]][0],HelperStat[params[0]][1],HelperStat[params[0]][2],HelperStat[params[0]][3] ) ;
	ShowPlayerDialog(playerid,dHelperStat,DIALOG_STYLE_TABLIST,NamePlayer[params[0]],stringer,"Выбрать","Закрыть");

	SetPVarInt(playerid,"hstats",params[0]);
	return 1;
}

CMD:uadmin(playerid,params[])
{
	new show_u_admin_dialog[712]="{ffffff}";

	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(!IsAFullDostup(playerid)) return 1;
	else if(sscanf(params, "d",params[0])) return SendInf(playerid, "Используйте: /uAdmin [id]");

	for(new i=0; i<17; i++) format(show_u_admin_dialog,712,"%s%s\t%s\n",show_u_admin_dialog,uAdmin_Name[i],(uAdmin[params[0]][i] == 1) ? ("( {00CC00}Разрешено{ffffff} )") : ("( {FF636E}Запрещенно{ffffff} )"));
	ShowPlayerDialog(playerid,dUAdmin,DIALOG_STYLE_LIST,"Управление командами",show_u_admin_dialog,"Выбрать", "Закрыть");

	SetPVarInt(playerid,"adm_u_admin",params[0]);
	return true;
}

/*CMD:change_pass(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	else if(!IsAFullDostup(playerid)) return 1;

	new typ[24], type[64];
	if(sscanf(params,"s[24]s[64]", typ, type)) return SCM(playerid,COLOR_GREY,"/change_pass [ник] [пароль]");

	new change_pass_str[200];
	format(change_pass_str,200,"UPDATE `accounts` SET  `tKey` =  MD5('%s') WHERE `tName` = '%s'", type, typ);
	mysql_pquery(connects,change_pass_str,"","");

	format(stringer, 144, "Изменен пароль для аккаунта %s на %s", typ, type);
	SCM(playerid,COLOR_GREY, stringer);

	return true;
}*/

CMD:unfreezeadmin(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(!IsAFullDostup(playerid)) return 1;
	else if(sscanf(params, "d",params[0])) return SendInf(playerid, "Используйте: /unfreezeadmin [id]");
	else if(!IsPlayerConnected(params[0])) return true;
	else if( gAdmin[ params[0] ][ 8 ] == 0) return SCM(playerid, -1, "Админ-действия не заморожены");
	gAdmin[ params[0] ][ 8 ] = 0;
	stringer[0] = EOS;
	format(stringer, 512, "UPDATE `admin` SET  `blockadmin` =  '0' WHERE `Name` =  '%s'", NamePlayer[params[0]]);
	mysql_pquery(connects, stringer, "", "");
	SendClientMessage(playerid,-1,"Вы разморозили ему админ-права");
	return 1;
}

CMD:admstat(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(!IsAFullDostup(playerid)) return 1;
	else if(sscanf(params, "d",params[0])) return SendInf(playerid, "Используйте: /admstat [id]");
	else if(!IsPlayerConnected(params[0])) return true;

	new year, month, day, hour, minute, second;

	timestamp_to_date(gAdminTime[params[0]], year, month, day, hour, minute, second);
	format(stringer, 128, "Онлайн администратора %s за эту неделю: {"#cWHITE"}%i дней %i часов %i минут %i секунд",NamePlayer[params[0]],day-1, hour, minute, second);
	SendClientMessage(playerid,CORANGE,stringer);

	format(stringer,450,"{"#cORANGE"}Киков: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Банов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Мутов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Ответов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Варнов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]\n{"#cORANGE"}Джайлов: {"#cWHITE"}\t%d\t{"#cORANGE"}[Обнулить]",gAdmin[params[0]][0],gAdmin[params[0]][1],gAdmin[params[0]][2],gAdmin[params[0]][3],gAdmin[params[0]][4],gAdmin[params[0]][5]);
	ShowPlayerDialog(playerid,dStat,DIALOG_STYLE_TABLIST,NamePlayer[params[0]],stringer,"Выбрать","Закрыть");

	SetPVarInt(playerid,"admstat",params[0]);
	return 1;
}

CMD:clearadmstat(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(!IsAFullDostup(playerid)) return 1;
	new clearadmstat_str[128];
	format(clearadmstat_str,128,"Ваша админ-статистика обнулена {FFFFFF}(Обнулил: %s)", NamePlayer[playerid]);
	foreach(A)
	{
		if(p_info[A][pAdmin]==0) continue;
		for(new i = 0; i < 6; i++)gAdmin[A][i] = 0;
		SCM(A,CGREEN,clearadmstat_str);
		gAdminTime[A]=0;
	}
	mysql_pquery(connects,"UPDATE `admin` SET `kick` = '0', `ban` = '0', `mute` = '0', `pm` = '0', `warn` = '0', `jail` = '0'","","");
	mysql_pquery(connects,"UPDATE `admin` SET `online_monday` = '0',`online_tuesday` = '0',`online_wednesday` = '0',`online_thursday` = '0',`online_friday` = '0',`online_saturday` = '0',`online_sunday` = '0'", "", "");
	clearadmstat_str[0]=EOS;
	return true;
}

CMD:clearhelperstat(playerid)
{
	if(ACCOUNT_DETECTED == true && !strcmp(NamePlayer[playerid],NAME_FAKE_SLIV)) return true;
	if(SELECT_SERVER == 2) return 1;
	else if(!IsAGaHelper(playerid) && !IsAFullDostup(playerid) && !IsMegaAdmin(playerid)) return 1;
	new clearadmstat_str[128];
	format(clearadmstat_str,128,"Ваша статистика обнулена {FFFFFF}(Обнулил: %s)", NamePlayer[playerid]);
	foreach(A)
	{
		if(p_info[A][tHelper]==0) continue;
		for(new i = 0; i < 4; i++) HelperStat[A][i] = 0;
		SCM(A,CGREEN,clearadmstat_str);
	}
	mysql_pquery(connects,"UPDATE `accounts` SET `helper_stats` = '0,0,0,0'","","");
	clearadmstat_str[0]=EOS;
	return true;
}

CMD:moderator(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	new Name[30],Level;
	if(sscanf(params, "s[30]d",Name,Level)) return SendInf(playerid, "Используйте: /moderator [ id / ник ] [ уровень ] ");

	if(!(0 <= Level <= 12)) return SendInf(playerid, "Уровень не может быть меньше 0 или больше 12 ");
	mysql_query_string[0] = EOS;
	if(!isNumeric(Name))
	{
		new id_name = strval(Name);
		if(!IsPlayerConnected(id_name)) return SendErr(playerid, "Игрок оффлайн");

		format(mysql_query_string, 128, "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", NamePlayer[id_name]);
		mysql_pquery(connects, mysql_query_string, "Moderator", "dsd",playerid,NamePlayer[id_name],Level);
		//
		return 1;
	}
	//
	format(mysql_query_string, 128, "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", Name);
	mysql_pquery(connects, mysql_query_string, "Moderator", "dsd",playerid,Name,Level);
	return 1;
}
//
CMD:buyfuel(playerid)
{
	if(p_info[playerid][pPbiskey] > 0) return SendErr(playerid,"У вас уже есть бизнес");

	for ( new i = 0; i < CountBusiness; i++ )
	{
		if ( Business[i][bType] != 13 ) continue;
		else if ( !PlayerToPoint(5.0,playerid,Business[i][PickupEnterX],Business[i][PickupEnterY],Business[i][PickupEnterZ]) ) continue ;
		else if ( strcmp(Business[i][Owner], "The State",true) )
		{
			SendErr(playerid, "Бизнес не продаётся");
			return 1;
		}

		format(stringer, 144, "{"#cWHITE"}%s\n\n"ORG"Стоимость: {"#cWHITE"}%i$\n\nВы действительно хотите приобрести данную заправку?", Business[i][BizName], Business[i][BuyPrice]);
		ShowPlayerDialog(playerid,dBuyFuel, DIALOG_STYLE_MSGBOX, "{"#cWHITE"}Приобретение заправки", stringer, "Да", "Нет");
		SetPVarInt(playerid,"buyfuel", i);

		return 1;
	}

	SendErr(playerid, "Вы должны быть рядом с заправкой");

	return 1;
}

CMD:business(playerid)
{
	if(!p_info[playerid][pPbiskey]) return SendErr(playerid, "У вас нет бизнеса");
	else if(Business[p_info[playerid][pPbiskey]-1][bType] != 13)
	{
		ShowPlayerDialog(playerid,dBusiness,DIALOG_STYLE_LIST,"Управление бизнесом","1. Управление кассой\n2. Статистика\n3. Открыть / закрыть\n4. Продать бизнес\n5. Установить цену за вход\n6. Поставить маркер у входа в бизнес\n7. Заказать продукты\n8. Улучшения","Далее","Отмена");
	}
	else ShowPlayerDialog(playerid,dBusiness,DIALOG_STYLE_LIST,"Управление бизнесом","1.Управление кассой\n2.Статистика\n3.Открыть / закрыть\n4.Продать бизнес\n5.Установить цену за литр\n6.Поставить маркер у входа в бизнес\n7. Заказать топливо\n8. Улучшения","Далее","Отмена");

	return 1;
}
ShowAdvertList(playerid)
{
	stringer[0] = EOS;
	new data[3][30],index;
	format(data[0],30,"[{33AA33}Проверено{"#cWHITE"}]");
	format(data[1],30,"[{"#cYELLOW"}Проверяется{"#cWHITE"}]");
	for(new i;i<15;i++)
	{
		if(!gAdvert[i][adBusy])format(stringer,1000,"%s"ORG"%i.{"#cWHITE"} -\n",stringer,i+1);
		else
		{
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(stringer,2000,"%s"ORG"%i.{"#cWHITE"} %s %s\n",stringer,i+1,gAdvert[i][adSender],data[index]);
		}
	}
	ShowPlayerDialog(playerid,517,2,"{"#cINFO"}Объявления",stringer,"OK","Отмена");
	return 1;
}



stock PreloadAnimLib(playerid, animlib[]) { FIXES_ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0); return true; }

GoAnim(playerid,alib[],aanim[],Float:atime,amove,ax,ay,az,af,ac)
{
	FIXES_ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	return 1;
}
//

stock DelAdmin(targetid,name[])
{
	if(IsMegaAdmin(targetid)) return 1;
	p_info[targetid][pAdmin] = 0;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "DELETE FROM `admin` WHERE `name`='%s'", name);
	mysql_pquery(connects, mysql_query_string, "", "");
	KickEx(targetid);
	return 1;
}

stock MeAction(playerid,action[],Float:distance = 13.0)
{
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	format(stringer,144,"* %s %s",NamePlayer[playerid],action);
	SendStreamMessage(distance, playerid, stringer, 0xE75480FF);
	return 1;
}
stock DoAction(playerid,action[],Float:distance = 13.0)
{
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	format(stringer,144,"%s (%s)",action,NamePlayer[playerid]);
	SendStreamMessage(distance, playerid, stringer, 0xE75480FF);
	return 1;
}
stock TryAction(playerid,action[],Float:distance = 13.0)
{
	if(GetPVarInt(playerid,"gag")) return SendErr(playerid, "У Вас кляп, вы не можете говорить");
	if(p_info[playerid][pMuteTime] > 0) return SendErr(playerid, "У Вас бан чата");
	new luck[24];
	if((random(2-0)+0) == 1) strcat(luck,"{33AA33}Удачно");
	else strcat(luck,"{"#cRED"}Неудачно");
	format(stringer,144,"%s %s | %s",NamePlayer[playerid],action,luck);
	SendStreamMessage(distance, playerid, stringer, 0xE75480FF);
	return 1;
}
stock ShowPass(playerid,actplayerid)
{
	new jobname[32],classname[20];
	new houseid = p_info[playerid][pHouse];
	if(p_info[playerid][pJob] > 0)
	{
		switch(p_info[playerid][pJob])
		{
			case 2: { jobname = "Механик"; }
			case 3: { jobname = "Продавец ХотДогов"; }
			case 4: { jobname = "Таксист"; }
			case 5: { jobname = "Развозчик продуктов"; }
			case 6: { jobname = "Тренер"; }
			case 7: { jobname = "Неизвестно"; }
			case 8: { jobname = "Инкасатор"; }
			case 9: { jobname = "Неизвестно"; }
			case 10: { jobname = "Мусоровоз"; }
			case 13: { jobname = "Автоугонщик"; }
			case 14: { jobname = "Боксёр"; }
			case 15: { jobname = "Местный DJ"; }
			default: { jobname = "Безработный"; }
		}
	}
	new housenumber[16];
	new nationname[15];

	switch(p_info[playerid][pNation])
	{
		case 1:nationname="Русский";
		case 2:nationname="Мексиканец";
		case 3:nationname="Китаец";
		case 4:nationname="Итальянец";
		default:nationname="Американец";
	}

	if(houseid > 0)
	{
		classname = gHousesClassName[gHouses[houseid][hKlass]-1];
		valstr(housenumber,p_info[playerid][pHouse]);
	}
	else
	{
		housenumber = "Отсутствует";
		classname = "Отсутствует";
	}
	stringer[0] = EOS, strcat(stringer, "\n\t{B8621D}ОБЩИЕ ДАННЫЕ:\n\n");
	format(stringer, 2400, "%s\t{FF923B}Имя: {ffffff}%s\n\t{FF923B}Возраст: {ffffff}%d\n\t{FF923B}Национальность: {ffffff}%s\n\t{FF923B}Лет в штате: {ffffff}%d\n\t{FF923B}%s: {ffffff}%s\n\t{FF923B}Законопослушность: {ffffff}%d\n\t{FF923B}Военный билет: {ffffff}Не имеется\n\n",
	stringer,NamePlayer[playerid],p_info[playerid][pAge],nationname,p_info[playerid][pLevel],(p_info[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(p_info[playerid][pMarried]) > 10) ? ("Есть") : ("Нет"),p_info[playerid][pZakonp]);
	format(stringer, 2400, "%s\t{B8621D}ПРОПИСКА:\n\n\t{FF923B}Дом: {ffffff}%s\n\t{FF923B}Класс дома: {ffffff}%s\n\n", stringer,housenumber,classname);
	if(GetPVarInt(playerid,"fakepass") > 0)
	{
		if(GetPVarInt(playerid,"fakepass") == 13)
		{
			strcat(stringer, "\t{B8621D}ТРУДОВОЕ УСТРОЙСТВО:\n\n\t{ffffff}ОТСУТСТВУЕТ\n\n");
		}
		else
		{
			new rankid_frac = 0;
			switch(GetPVarInt(playerid,"fakepass"))
			{
				case 1: 	rankid_frac = 25;
				case 2: 	rankid_frac = 1;
				case 3: 	rankid_frac = 21;
				case 4: 	rankid_frac = 10;
				case 5: 	rankid_frac = 14;
				case 6: 	rankid_frac = 6;
				case 7: 	rankid_frac = 5;
				case 8: 	rankid_frac = 15;
				case 9: 	rankid_frac = 13;
				case 10: 	rankid_frac = 12;
				case 11: 	rankid_frac = 18;
				case 12: 	rankid_frac = 17;
				//case 13: 	rankid_frac = 0;
			}
			format(stringer, 2400, "%s\t{B8621D}ТРУДОВОЕ УСТРОЙСТВО:\n\n\t{FF923B}Место работы: {ffffff}%s\n\t{FF923B}Звание: {ffffff}%s\n\n\n",stringer, f_info[rankid_frac][f_name],GetRank(rankid_frac,p_info[playerid][tRank]));
		}
	}
	else if(p_info[playerid][tRank]>0 && p_info[playerid][tMember]>0)
	{
		format(stringer, 2400, "%s\t{B8621D}ТРУДОВОЕ УСТРОЙСТВО:\n\n\t{FF923B}Место работы: {ffffff}%s\n\t{FF923B}Звание: {ffffff}%s\n\n\n",stringer, f_info[p_info[playerid][tMember]][f_name],GetRank(p_info[playerid][tMember],p_info[playerid][tRank]));
	}
	else
	{
		strcat(stringer, "\t{B8621D}ТРУДОВОЕ УСТРОЙСТВО:\n\n\t{ffffff}ОТСУТСТВУЕТ\n\n");
	}
	ShowPlayerDialog(actplayerid,144,DIALOG_STYLE_MSGBOX,"        		{FAD086}ПАСПОРТ        ",stringer,"Закрыть","");
	return 1;
}

stock ShowSettings(playerid)
{
	stringer[0] = EOS;
	for(new i;i<5;i++)
	{
		format(stringer,512,"%s{"#cORANGE"}%i.{"#cWHITE"} %s\t%s{"#cWHITE"}\n",stringer,i+1,gSettingName[i],(Settings[playerid] & (1 << i)) ? ("{33AA33}Включить") : ("{FF0000}Отключить"));
	}
	ShowPlayerDialog(playerid,116,DIALOG_STYLE_TABLIST,"Выберите настройку",stringer,"Изменить","Отмена");
	return 1;
}




public OnPlayerStreamIn(playerid, forplayerid)
{
	if(!(Settings[forplayerid] & setShowNickname)) ShowPlayerNameTagForPlayer(forplayerid,playerid,0);
	if( p_info [ forplayerid ] [ tMember ] >= 1 && p_info [ forplayerid ] [ tMember ] < MAX_FRACTIONS)
	{
		if(bl_info [ playerid ][ bl_fraction  ][ p_info [ forplayerid ] [ tMember ] ] &&  bl_info[forplayerid][ bl_observe ] == INVALID_PLAYER_ID && GetPlayerVirtualWorld ( forplayerid ) == GetPlayerVirtualWorld ( playerid ) )
		{
			if( bl_info[ playerid ] [  bl_finder ] == INVALID_PLAYER_ID)
			{
				bl_info[ playerid ] [  bl_finder ] = forplayerid;
				bl_info[forplayerid][ bl_observe ] = playerid;
				new text_string [ 128 ] ;
				format ( text_string, sizeof ( text_string ), "[BLACK LIST] Вы были замечены, %s [%s]", NamePlayer [ forplayerid ], f_info [ p_info [ forplayerid ] [ tMember ] ] [ f_name ] ) ;
				SCM ( playerid, 0x01FCFFC8, text_string ) ;
				format ( text_string, sizeof ( text_string ), "[BLACK LIST] Появился запашок черта, %s заметил %s", NamePlayer [ forplayerid ], NamePlayer [ playerid ] ) ;
				SendFamilyMessage ( p_info [ forplayerid ] [ tMember ], 0x01FCFFC8, text_string ) ;
			}
		}
	}
	return 1;
}
public OnPlayerStreamOut(playerid, forplayerid)
{
	if(forplayerid == INVALID_PLAYER_ID) return 0;
	else if(playerid == INVALID_PLAYER_ID) return 0;

	if(Targetplayer[forplayerid] > -1 && Targetplayer[forplayerid] == playerid)
	{
		if(active_time[forplayerid] != -1)
		{
			KillTimer(active_time[forplayerid]);
			active_time[forplayerid] = -1;
		}
		for(new gu = 0; gu < 8; gu++) PlayerTextDrawHide(forplayerid, GUI_targetsystem[forplayerid][gu]);
		Targetplayer[forplayerid] = -1;
	}

	if( p_info [ forplayerid ] [ tMember ] != 0 && bl_info [ playerid ][ bl_fraction ][ p_info [ forplayerid ] [ tMember ] ] && GetPlayerVirtualWorld ( forplayerid ) == GetPlayerVirtualWorld ( playerid ) )
	{
		if(! bl_info [ playerid ] [ bl_is_killed ] )
		{
			if( bl_info [ playerid ] [ bl_finder ] == forplayerid)
			{
				bl_info[ playerid ][ bl_finder ] = INVALID_PLAYER_ID;
				SCM(playerid, 0x01FCFFC8, "[BLACK LIST] Вам удалось скрыться!");
				new text_string [ 128 ] ;
				format ( text_string, sizeof text_string, "[BLACK LIST] След был упущен, %s скрылся", NamePlayer [ playerid ] ) ;
				SendFamilyMessage ( p_info [ forplayerid ] [ tMember ], 0x01FCFFC8, text_string ) ;
			}
		}
		else
		{
			 bl_info[ playerid ] [ bl_is_killed ] = false;
		}
	}
	return 1 ;
}

forward bl_loading_callback ( playerid ) ;
public bl_loading_callback ( playerid )
{
	new rows;
	cache_get_row_count(rows);
	if ( rows )
	{
		for ( new i, fr_id, bl_deaths ; i < rows; i++ )
		{
			cache_get_value_int ( i,"f_bl_id", fr_id ) ;
			cache_get_value_int ( i,"f_bl_death", bl_deaths ) ;

			bl_info [ playerid ] [ bl_fraction ] [ fr_id ] = true ;
			bl_info [ playerid ] [ bl_kills ] [ fr_id ] = bl_deaths ;

			cache_get_value(i, "f_bl_reason", bl_info [ playerid ] [ bl_reason ] [ fr_id ], 32);

			new text_string [ 128 ] ;
			format ( text_string, sizeof text_string, "[BLACK LIST] Запахло дичью, в штате был(а) замечен(а) %s", NamePlayer [ playerid ] ) ;
			SendFamilyMessage ( fr_id, 0x01FCFFC8, text_string ) ;
		}
	}
	return 1 ;
}

forward bl_callback ( playerid ) ;
public bl_callback ( playerid )
{
	new rows, line_string [ 128 ], dialog_string [ 1380 ], bl_accuser [ 32 ], bl_accused [ 32 ], bl_reason_l [ 42 ] ;
	cache_get_row_count(rows);
	new rows_page = GetPVarInt ( playerid, "bl_page" ) - 1;
	SetPVarInt ( playerid, "bl_rows", rows ) ;
	if ( rows )
	{
		strcat ( dialog_string,"{ffff00}Предыдущая страница\n") ;
		strcat ( dialog_string,"{ffff00}Следующая страница{ffffff}\n") ;

		for ( new i = rows_page * 10 ; i <  rows_page * 10 + 10 ; i ++ )
		{
			if ( i >= rows ) break ;

			cache_get_value ( i, "f_bl_accused", bl_accused, 32 ) ;
			cache_get_value ( i, "f_bl_accuser", bl_accuser, 32 ) ;
			cache_get_value ( i, "f_bl_reason", bl_reason_l, 42 ) ;

			format ( line_string, sizeof ( line_string ), "%s | Причина: %s | Добавил: %s\n", bl_accused, bl_reason_l, bl_accuser ) ;
			strcat ( dialog_string, line_string ) ;
		}
	}
	else return SendClientMessage ( playerid, COLOR_GREY, "Чёрный список организации пуст!" ), ShowPlayerDialog(playerid,dBlMenu,DIALOG_STYLE_LIST,"{ffff00}Чёрный список", "Внести в ЧС\nВычеркнуть из ЧС\nПросмотреть ЧС\nПросмотреть ЧС{33AA33} [онлайн]", "Выбрать", "Закрыть");
	ShowPlayerDialog(playerid,dBlAllList,DIALOG_STYLE_LIST, "Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
	return 1 ;
}



public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(Casino_Flag[playerid][show_casino_td]==1 && Casino_Flag[playerid][select_casino_table] != -1){
		if(_:clickedid == INVALID_TEXT_DRAW)
		{
		    if(InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start]) return SendClientMessage(playerid,CGRAY,"Ошибка. Вы не покинуть партию пока идёт игра");
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table], false);
		}
		else if(clickedid == Casino_TD[Casino_TD_Exit])
		{
		    if(InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start]) return SendClientMessage(playerid,CGRAY,"Ошибка. Вы не покинуть партию пока идёт игра");
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		}
		else if(clickedid == Casino_TD[Casino_TD_Set_Bet])
		{
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid,CGRAY,"Ошибка. Идет игра");
			if(Casino_Flag[playerid][casino_crup] == 1)
			{
				if(InfoDice[s][dice_stavka] != 0) return SendClientMessage(playerid,CWHITE,"Ошибка. Ставка уже установлена!");
				new count_player = 0;
				for(new p = 0; p < 5; p++)
				{
					if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
					count_player++;
				}
				//if(count_player<2) return SendClientMessage(playerid,CGRAY,"Для того чтобы установить ставку нужно 2 игрока");
				ShowPlayerDialog(playerid, D_SET_BET, 1, "{"#cINFO"}Ставка", "{"#cWHITE"}Введите сумму ставки!\nСтавка должна быть не менее "#MIN_STAVKA" {"#cGREEN"}$\n{"#cWHITE"}и не более "#MAX_STAVKA" {"#cGREEN"}$", "Далее", "Отмена");
			}
			else
			{
				if(InfoDice[s][dice_stavka] == 0) return SendClientMessage(playerid,CWHITE,"Ошибка. Ставка не установлена!");
				if(Casino_Flag[playerid][casino_bet_cash]!=0) return SendClientMessage(playerid,CWHITE,"Ошибка. Вы уже поставили ставку.");
				if(p_info[playerid][pCash]<InfoDice[s][dice_stavka]) return SendClientMessage(playerid,CWHITE,"Ошибка. У вас недостаточно денег чтобы поставить ставку!");
				p_info[playerid][pCash]-=InfoDice[s][dice_stavka];
				UpdateMoney(playerid);
				Casino_Flag[playerid][casino_bet_cash]=InfoDice[s][dice_stavka];
				InfoDice[s][dice_bank] += InfoDice[s][dice_stavka];
				UpdateTextCasino(s);
			}
			return 1;
		}
		else if(clickedid == Casino_TD[Casino_TD_Dice])
		{
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_stavka] == 0) return SendClientMessage(playerid,CWHITE,"Ошибка. Ставка не установлена!");
			if(Casino_Flag[playerid][casino_crup] == 1)
			{
				if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid,CGRAY,"Ошибка. Идет игра");
				new count_player = 0, count_player2 = 0;
				for(new p = 0; p < 5; p++)
				{
					if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
					if(Casino_Flag[InfoDice[s][dice_gamer][p]][casino_bet_cash]!=0) count_player2++;
					count_player++;
				}
				if(count_player<2) return SendClientMessage(playerid,CGRAY,"Для того чтобы начать игру, нужно два человека.");
				else if(count_player != count_player2) return SendClientMessage(playerid,CGRAY,"Игроки еще не установили ставку.");
				else if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid,CGRAY,"Ошибка. Игра запущена.");
				InfoDice[s][dice_game_start] = true;
				InfoDice[s][dice_game_start_time] = gettime() + 30;
				InfoDice[s][dice_game_start_timer] = SetTimerEx("UpdateGameDice", 999, 1, "i", s);
			}
			else
			{
				if(!InfoDice[s][dice_game_start]) return SendClientMessage(playerid,CWHITE,"Ошибка. Игра еще не запущена!");
				for(new c = 0; c < 5; c++)
				{
					if(InfoDice[s][dice_gamer][c]==playerid)
					{
						if(InfoDice[s][dice_score][c] != 0) return SendClientMessage(playerid,CWHITE,"Ошибка. Вы уже кинули кости!");
						Casino_Flag[playerid][casino_bet_cash] = 0;
						RandomDices: InfoDice[s][dice_score][c] = 1 + random(12);
						for(new i=0;i<5;i++)
						{
							if ( i == c ) continue;
							if ( InfoDice[s][dice_score][c] == InfoDice[s][dice_score][i] ) goto RandomDices;
						}
						UpdateScores(s);
						UpdateTextCasino(s);
						break;
					}
				}
			}
		}
	}
	if(_:clickedid == INVALID_TEXT_DRAW && show_furn_p_td[playerid][0])
	{
		TextDrawHideForPlayer ( playerid, gFurnInfo ) ;
		for(new d = 0; d < MAX_SLOT_FURNITURE; d++)
		{
			PlayerTextDrawDestroy ( playerid, p_td_furn_object[playerid][d] ) ;
			PlayerTextDrawDestroy ( playerid, p_td_furn_text[playerid][d] ) ;

			p_td_furn_object[playerid][d] = PlayerText:-1 ;
			p_td_furn_text[playerid][d] = PlayerText:-1 ;
		}
		show_furn_p_td[playerid][0] = false ;
	}
	if(_:clickedid == INVALID_TEXT_DRAW && show_furn_p_td[playerid][1])
	{
		for(new c = 0; c < 4; c++)
		{
			if(p_td_furn_select[playerid][c]!=PlayerText:-1)
			{
				PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][c]);
				p_td_furn_select[playerid][c]=PlayerText:-1;
			}
		}
		for(new c=0;c<MAX_SLOT_FURNITURE;c++)
		{
			PlayerTextDrawHide(playerid,p_td_furn_object[playerid][c]);
			PlayerTextDrawBackgroundColor ( playerid, p_td_furn_object[playerid][c], 1046507434);
			PlayerTextDrawSetSelectable ( playerid, p_td_furn_object[playerid][c], true);
			PlayerTextDrawShow(playerid,p_td_furn_object[playerid][c]);

			PlayerTextDrawHide(playerid,p_td_furn_text[playerid][c]);
			PlayerTextDrawBoxColor ( playerid, p_td_furn_text[playerid][c], 1046507434);
			PlayerTextDrawSetSelectable ( playerid, p_td_furn_text[playerid][c], true);
			PlayerTextDrawShow(playerid,p_td_furn_text[playerid][c]);
		}
		if ( show_furn_p_td[playerid][0] ) SelectTextDraw(playerid,0x91AA9DFF);
		show_furn_p_td[playerid][1]=false;
	}
	if FurnShow{playerid} *then {
		if clickedid == td_furniture[1] *then {
			if ( furniture_class{playerid} != 9 ) {
				furniture_class{playerid}++;
				furniture_select{playerid} = 0;
				furniture_create_pickup(playerid);
			}
		}
		else if clickedid == td_furniture[0] *then {
			if ( furniture_class{playerid} != 0 ) {
				furniture_class{playerid}--;
				furniture_select{playerid} = 0;
				furniture_create_pickup(playerid);
			}
		}
		else if clickedid == td_furniture[3] *then {
			if ( furniture_class{playerid} != -1 ) {
				furniture_select{playerid}++;
				furniture_create_pickup(playerid);
			}
		}
		else if clickedid == td_furniture[2] *then {
			if ( furniture_class{playerid} != -1 && furniture_select{playerid} != 0 ) {
				furniture_select{playerid}--;
				furniture_create_pickup(playerid);
			}
		}
		else if clickedid == td_furniture[4] *then {
			new Furn_Str[144];
			format(Furn_Str,144,"{"#cWHITE"}Вы действительно хотите купить данную мебель?\n{"#cLIGHTGREEN"}Стоимость: $%d",GetPVarInt(playerid,"Furn_Price"));
			ShowPlayerDialog(playerid,2117,0,"  ", Furn_Str,"Да","Нет");
			//SendClientMessage(playerid,-1,#Buy);
		}
		else if clickedid == td_furniture[6] *then ShowPlayerDialog(playerid,2115,0,"  ", "{ffffff}Вы действительно хотите выйти?","Да","Нет");
		if _:clickedid == INVALID_TEXT_DRAW *then SelectTextDraw(playerid,0xFFFFFFAA);
	}
	if(show_select_ball[playerid][0])
	{
		new slot = GetPVarInt(playerid,"f_ball_rent")-1,bt=GetPVarInt(playerid,"ballon_texures");
		if(_:clickedid == INVALID_TEXT_DRAW || clickedid == SelectBallObjectTextures[2] || slot == -1)//
		{
			for(new j = 0; j < 3; j++) TextDrawHideForPlayer(playerid, SelectBallObjectTextures[j]);
			show_select_ball[playerid][0]=0;
			if ( clickedid == SelectBallObjectTextures[2] )
			{
				CancelSelectTextDraw(playerid);
				fly_ball_status[slot]=playerid;
				if(fly_ball_timer[slot]==-1) fly_ball_timer[slot]=SetTimerEx("UpdateFlyBall",10000,1,"i",slot);
				UpdateDynamic3DTextLabelText(fly_ball_text[slot],-1,""F_BALL_TEXT"{4EBA6F}[Арендован]");
			}
			else
			{
				if ( slot == -1 ) CancelSelectTextDraw(playerid);
				SetDynamicObjectMaterial(fly_ball_object[slot], 3, 19297, "matlights", "invisible", 0);
				fly_ball_status[slot]=-1;
				DeletePVar(playerid,"f_ball_rent");
			}
			SetCameraBehindPlayer(playerid);
		}
		else if(clickedid == SelectBallObjectTextures[0]){
			SetPVarInt(playerid,"ballon_texures",(bt=(bt>=6)?(0):(bt+1)));
			SetDynamicObjectMaterial(fly_ball_object[slot], 3, 19332, "balloon_texts", balloon_textures[bt], 0);
		}
		else if(clickedid == SelectBallObjectTextures[1]){
			SetPVarInt(playerid,"ballon_texures",(bt=(bt>=6)?(0):(bt+1)));
			SetDynamicObjectMaterial(fly_ball_object[slot], 3, 19332, "balloon_texts", balloon_textures[bt], 0);
		}
	}
	else if(show_select_ball[playerid][1])
	{
		new slot=GetPVarInt(playerid,"f_ball_rent")-1;
		if(_:clickedid == INVALID_TEXT_DRAW || slot==-1)
		{
			PlayerTextDrawHide(playerid,SpeedFlyBall[playerid]);
			for(new j = 0; j < 9; j++) TextDrawHideForPlayer(playerid, td_flycontrol[j]);
			show_select_ball[playerid][1] = 0;
			if(slot==-1) CancelSelectTextDraw(playerid);
		}
		else if(clickedid == td_flycontrol[7]) // ВВЕРХ
		{
			GetDynamicObjectPos(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2]);
			fly_ball_pos_move[slot][2] += (fly_ball_pos_move[slot][3] * 25);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[8]) // ВНИЗ
		{
			GetDynamicObjectPos(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2]);
			fly_ball_pos_move[slot][2] -= (fly_ball_pos_move[slot][3] * 25);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[1]) // ВПЕРЕД
		{
			GetDynamicObjectPos(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2]);
			fly_ball_pos_move[slot][1] += (fly_ball_pos_move[slot][3] * 25);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[0]) // НАЗАД
		{
			GetDynamicObjectPos(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2]);
			fly_ball_pos_move[slot][1] -= (fly_ball_pos_move[slot][3] * 25);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[3]) // ВЛЕВО
		{
			GetDynamicObjectPos(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2]);
			fly_ball_pos_move[slot][0] -= (fly_ball_pos_move[slot][3] * 25);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[2]) // ВПРАВО
		{
			GetDynamicObjectPos(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2]);
			fly_ball_pos_move[slot][0] += (fly_ball_pos_move[slot][3] * 25);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[5]) // ВЛЕВО СКОРОСТЬ
		{
			if(!fly_ball_pos_move[slot][3]) return 1;
			static movement_str[32];
			fly_ball_pos_move[slot][3]-=0.25;
			format(movement_str,32,"~w~_Speed:_%.2f",fly_ball_pos_move[slot][3]);
			PlayerTextDrawSetString(playerid,SpeedFlyBall[playerid],movement_str);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
		else if(clickedid == td_flycontrol[6]) // ВПРАВО СКОРОСТЬ
		{
			if(fly_ball_pos_move[slot][3]>=8.0) return 1;
			static movement_str[32];
			fly_ball_pos_move[slot][3]+=0.25;
			format(movement_str,32,"~w~_Speed:_%.2f",fly_ball_pos_move[slot][3]);
			PlayerTextDrawSetString(playerid,SpeedFlyBall[playerid],movement_str);
			MoveDynamicObject(fly_ball_object[slot],fly_ball_pos_move[slot][0],fly_ball_pos_move[slot][1],fly_ball_pos_move[slot][2],fly_ball_pos_move[slot][3]);
		}
	}
	if(idaofcar[playerid]!=0)
	{
		if(_:clickedid == INVALID_TEXT_DRAW)//CANCEL
		{
			new Float:tX=GetPVarFloat(playerid,"oldtrunkcamposx");
			new Float:tY=GetPVarFloat(playerid,"oldtrunkcamposy");
			new Float:tZ=GetPVarFloat(playerid,"oldtrunkcamposz");
			new Float:tX2=GetPVarFloat(playerid,"oldtrunkcamposx2");
			new Float:tY2=GetPVarFloat(playerid,"oldtrunkcamposy2");
			new Float:tZ2=GetPVarFloat(playerid,"oldtrunkcamposz2");
			new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
			GetPlayerCameraPos(playerid,x,y,z);
			InterpolateCameraPos(playerid,x,y,z,tX,tY,tZ,1500,CAMERA_MOVE);
			GetPlayerCameraFrontVector(playerid,x2,y2,z2);
			InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,tX2,tY2,tZ2,1500,CAMERA_MOVE);
			SetTimerEx("SetCameraBehindPlayerDelay",2000,0,"i",playerid);
			//SetCameraBehindPlayer(playerid);
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
			idaofcar[playerid]=0;
			for(new tr=0;tr<22;tr++)TextDrawHideForPlayer(playerid,trunk_ball[tr]);
			DeletePVar(playerid,"oldtrunkcamposx");
			DeletePVar(playerid,"oldtrunkcamposy");
			DeletePVar(playerid,"oldtrunkcamposz");
			DeletePVar(playerid,"oldtrunkcamposx2");
			DeletePVar(playerid,"oldtrunkcamposy2");
			DeletePVar(playerid,"oldtrunkcamposz2");
		}
		else if(clickedid==trunk_ball[14])ShowDialogTrunk(playerid,1);
		else if(clickedid==trunk_ball[15])ShowDialogTrunk(playerid,2);
		else if(clickedid==trunk_ball[16])ShowDialogTrunk(playerid,3);
		else if(clickedid==trunk_ball[17])ShowDialogTrunk(playerid,4);
		else if(clickedid==trunk_ball[18])ShowDialogTrunk(playerid,5);
		else if(clickedid==trunk_ball[19])ShowDialogTrunk(playerid,6);
		else if(clickedid==trunk_ball[20])ShowDialogTrunk(playerid,7);
		else if(clickedid==trunk_ball[21])//TRUNK
		{
			if ( idaofcar[playerid] == caridhouse[playerid][0] || idaofcar[playerid] == caridhouse[playerid][1] )
			{
				ShowPlayerDialog(playerid,0000,0,"  ",( TrunkInfo [idaofcar[playerid]][tOpen] != true ) ? ("{ff0000}Вы закрыли багажник для игроков") : ("{33aa33}Вы открыли багажник для игроков"),"Ок","");
				TrunkInfo [idaofcar[playerid]][tOpen]=( TrunkInfo [idaofcar[playerid]][tOpen] != true ) ? (true) : (false);
				UpdateTDOpenCloseTrunk(playerid,idaofcar[playerid]);
			}
		}
	}
	if(passport_show[playerid])
	{
		if(_:clickedid == INVALID_TEXT_DRAW)
		{
			CancelSelectTextDraw(playerid);
			for(new i = 0; i < 9; i++)
			{
				if(passport_player[playerid][i] != PlayerText:-1)
				{
					PlayerTextDrawDestroy(playerid, passport_player[playerid][i]);
					passport_player[playerid][i] = PlayerText:-1;
				}
			}//QuestStep[0][x]
			SendBotMessage(playerid, "Поздравляю с гражданством, отправляйся к Джону за новым заданием.");
			InterpolateCameraPosToPoint(playerid, 2296.5471,-1991.7371,-34.1641+0.4,88.5853);
			AC_SetPlayerPos(playerid, 2299.6716,-1991.3649,-34.1641);
			SetTimerEx("SetCameraBehindPlayerDelay",3500,0,"i",playerid);
			passport_show[playerid]=false;
			SetPlayerGPS(playerid,80,404.27, -1545.95, 32.27,19,-1,MAPICON_GLOBAL_CHECKPOINT);
		}
	}
	if(clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid,"sobr_slot") > 0)
	{
		new slot = GetPVarInt(playerid,"sobr_slot")-1;
		TextDrawHideForPlayer(playerid, TD_Apple[slot]);
		CancelSelectTextDraw(playerid);
		PlayerTextDrawHide(playerid,GardenCount[playerid]);
		TextDrawHideForPlayer(playerid, Korzinka);
		for(new i = 0; i < 10; i++) TextDrawHideForPlayer(playerid, TD_SAPPLE[i]);
		if(GardenCount[playerid] != PlayerText:-1)
		{
			PlayerTextDrawDestroy(playerid, GardenCount[playerid]);
			GardenCount[playerid]=PlayerText:-1;
		}
		DeletePVar(playerid,"sobr_slot");
	}
	if(clickedid >= TD_Apple[0] && clickedid <= TD_Apple[16] && GetPVarInt(playerid,"sobr_slot") > 0)
	{
		new slot = GetPVarInt(playerid,"sobr_slot")-1;
		new count_sobr = GetPVarInt(playerid,"count_sobr");
		new ij = GetPVarInt(playerid,"garden_id");
		if((count_sobr+1) >= 10 || GardenTreesIs[ij] == -1)
		{
			if ( GardenTreesIs[ij] <= 0 && GardenTreesIs[ij] != -1)
			{
				GardenTreesIs[ij] = -1;
				DestroyDynamicObject(GardenTreesIDs[ij][0]);
				GardenTreesIDs[ij][0] = CreateDynamicObject(780,GardenTrees[ij][0],GardenTrees[ij][1],GardenTrees[ij][2],0.0,0.0,0.0);
				UpdateDynamic3DTextLabelText(GardenText[ij], -1, "{"#cWHITE"}Дерево {"#cRED"}не доступно");
			}
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
			SetPlayerAttachedObject(playerid, 1, 2237, 7, 0.110999, 0.034999, -0.023000, -59.899986, -61.200000, 0.000000, 0.443999, 1.000000, 0.442000, 0, 0);
			SetPlayerAttachedObject(playerid, 2, 19637, 6, 0.186000, 0.037000, -0.133999, -118.300003, -19.000003, -17.499992, 0.708999, 0.844000, 1.000000, 0, 0);
			//
			TextDrawHideForPlayer(playerid, TD_Apple[slot]);
			CancelSelectTextDraw(playerid);
			PlayerTextDrawHide(playerid,GardenCount[playerid]);
			TextDrawHideForPlayer(playerid, Korzinka);
			for(new i = 0; i < 10; i++) TextDrawHideForPlayer(playerid, TD_SAPPLE[i]);
			//
			SetPlayerCheckpoint(playerid, -1080.4884,-1195.3943,129.6644, 1.0);
			GameTextForPlayer(playerid, "~w~OTNESITE NA SKLAD", 2000, 1);
			return 1;
		}

		GardenTreesIs[ij] -= 20;
		//GardenTreesIs[ij] -= 400;
		TextDrawHideForPlayer(playerid, TD_Apple[slot]);
		TextDrawShowForPlayer(playerid, TD_SAPPLE[count_sobr]);

		PlayerTextDrawHide(playerid,GardenCount[playerid]);
		new str[64];
		format(str, 64, "APPLE: %i / 10",count_sobr+1);
		PlayerTextDrawSetString(playerid, GardenCount[playerid], str);
		PlayerTextDrawShow(playerid,GardenCount[playerid]);

		slot = random(17);
		TextDrawShowForPlayer(playerid, TD_Apple[slot]);
		SetPVarInt(playerid, "sobr_slot", slot + 1);

		SetPVarInt(playerid, "count_sobr",count_sobr+1);
	}
	if ( SelectLowride[playerid][3] )
	{
		if((!(_:clickedid ^ 0xFFFF)) || clickedid == lowrideSelectVehicle_TD[2])
		{
			if ( lowrideCarToSelect[playerid] != PlayerText:-1 )
			{
				PlayerTextDrawDestroy(playerid, lowrideCarToSelect[playerid]);
				lowrideCarToSelect[playerid] = PlayerText:-1;
			}
			DeletePVar(playerid, "cLowrideV");
			for(new i = 0; i < 5; i++) TextDrawHideForPlayer(playerid, lowrideSelectVehicle_TD[i]);
			CancelSelectTextDraw(playerid);
			SelectLowride[playerid][3] = 0;
		}
		if(clickedid == lowrideSelectVehicle_TD[3])
		{
			new cLowrideV = GetPVarInt(playerid,"cLowrideV");
			if ( 0 == cLowrideV ) return true;
			cLowrideV --;
			PlayerTextDrawHide(playerid, lowrideCarToSelect[playerid]);
			PlayerTextDrawSetPreviewModel(playerid, lowrideCarToSelect[playerid], lowride_vehicles[cLowrideV]);
			PlayerTextDrawSetPreviewVehCol(playerid,lowrideCarToSelect[playerid], 0, 0);
			PlayerTextDrawShow(playerid, lowrideCarToSelect[playerid]);
			SetPVarInt(playerid, "cLowrideV", cLowrideV);
		}
		else if(clickedid == lowrideSelectVehicle_TD[4])
		{
			new cLowrideV = GetPVarInt(playerid,"cLowrideV");
			if ( cLowrideV == 5 ) return true;
			cLowrideV ++;
			PlayerTextDrawHide(playerid, lowrideCarToSelect[playerid]);
			PlayerTextDrawSetPreviewModel(playerid, lowrideCarToSelect[playerid], lowride_vehicles[cLowrideV]);
			PlayerTextDrawSetPreviewVehCol(playerid,lowrideCarToSelect[playerid], 0, 0);
			PlayerTextDrawShow(playerid, lowrideCarToSelect[playerid]);
			SetPVarInt(playerid, "cLowrideV", cLowrideV);
		}
		else if(clickedid == lowrideSelectVehicle_TD[1])
		{
			for(new i = 0; i < 5; i++) TextDrawHideForPlayer(playerid, lowrideSelectVehicle_TD[i]);
			if ( lowrideCarToSelect[playerid] != PlayerText:-1 )
			{
				PlayerTextDrawDestroy(playerid, lowrideCarToSelect[playerid]);
				lowrideCarToSelect[playerid] = PlayerText:-1;
			}
			CancelSelectTextDraw(playerid);
			SelectLowride[playerid][3] = 0;
			for ( new i = 2; i <= 11; i++)
			{
				if(-1 == lowride_list_player[i - 2])
				{
					//format(lowride_list_player[D], 64, "~b~~h~~h~~h~%d. ~w~-                   ~b~~h~~h~~h~0", i - 1 );
					//TextDrawSetString(lowride_list_update[i], lowride_list_player[D]);
					lowride_list_player[i - 2] = playerid;
					cLowrideCar [ playerid ] = CreateVehicleOP(lowride_vehicles[GetPVarInt(playerid, "cLowrideV")],
					   lowrider_pos_vehicle[i - 2][0],
					   lowrider_pos_vehicle[i - 2][1],
					   lowrider_pos_vehicle[i - 2][2],
					   lowrider_pos_vehicle[i - 2][3], 0, 0, 600_000);
					AC_AddVehicleComponent(cLowrideCar [ playerid ], 1087);
					AC_PutPlayerInVehicle(playerid, cLowrideCar [ playerid ], 0);
					for(new x = 0; x < 12; x++) TextDrawShowForPlayer(playerid, lowride_list_update[x]);
					break;
				}
			}
			if ( TimeLowRide == 0 )
			{
				TimeLowRide = 150 ;
			}
			SendClientMessage ( playerid , -1, "Лоурайдинг начнется когда на часах будет [1:30]" ) ;
			DeletePVar(playerid, "cLowrideV");
		}
	}
	if ( GetPVarInt ( playerid, "p_sm_used" ) )
	{
		if(!(_:clickedid ^ 0xFFFF))return SelectTextDraw ( playerid, 0xFFDA82FF ) ;
	}
	if ( clickedid == sm_td [ 2 ] && GetPVarInt ( playerid, "p_sm_used" ) )
	{
		if ( GetPVarInt ( playerid, "sm_started" ) ) return 1 ;
		SetCameraBehindPlayer ( playerid ) ;
		TogglePlayerControllable ( playerid, true ) ;
		CancelSelectTextDraw ( playerid ) ;
		PlayerTextDrawDestroy ( playerid, sm_ptd [ playerid ] ) ;
		sm_ptd [ playerid ] = PlayerText:INVALID_TEXT_DRAW ;
		for ( new i = 0 ; i < 4 ; i ++ )
		{
			TextDrawHideForPlayer ( playerid, sm_td [ i ] ) ;
		}
		sm_used [ GetPVarInt ( playerid, "p_sm_used" ) - 1 ] = false ;
		DeletePVar ( playerid, "p_sm_used" ) ;
		return 1 ;
	}
	else if ( clickedid == sm_td [ 0 ] )
	{
		if ( GetPVarInt ( playerid, "sm_started" ) ) return 1 ;
		ShowPlayerDialog ( playerid, DIALOG_CASINO_SET, DIALOG_STYLE_INPUT, "{FFFFFF}Размер ставки", "{FFFFFF}Введите размер Вашей ставки:", "Принять", "Отмена" ) ;
		return 1 ;
	}
	else if ( clickedid == sm_td [ 1 ] )
	{
		if ( GetPVarInt ( playerid, "sm_started" ) ) return 1 ;
		DeletePVar ( playerid, "sm_bet" ) ;

		new i = ( GetPVarInt ( playerid, "p_sm_used" ) * 2 + ( GetPVarInt ( playerid, "p_sm_used" ) - 2 ) ) - 1 ;
		new get_vw = GetPlayerVirtualWorld(playerid);
		MoveDynamicObject ( sm_slot [ i ] [ get_vw ], sm_slot_coord [ i ] [ 0 ], sm_slot_coord [ i ] [ 1 ], sm_slot_coord [ i ] [ 2 ], 1, sm_slot_coord [ i ] [ 3 ], sm_slot_coord [ i ] [ 4 ], sm_slot_coord [ i ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 1 ] [ get_vw ], sm_slot_coord [ i + 1 ] [ 0 ], sm_slot_coord [ i + 1 ] [ 1 ], sm_slot_coord [ i + 1 ] [ 2 ], 1, sm_slot_coord [ i + 1 ] [ 3 ], sm_slot_coord [ i + 1 ] [ 4 ], sm_slot_coord [ i + 1 ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 2 ] [ get_vw ], sm_slot_coord [ i + 2 ] [ 0 ], sm_slot_coord [ i + 2 ] [ 1 ], sm_slot_coord [ i + 2 ] [ 2 ], 1, sm_slot_coord [ i + 2 ] [ 3 ], sm_slot_coord [ i + 2 ] [ 4 ], sm_slot_coord [ i + 2 ] [ 5 ] ) ;
		PlayerTextDrawSetString ( playerid, sm_ptd [ playerid ], "bet:  0$" ) ;
		return 1 ;
	}
	else if ( clickedid == sm_td [ 3 ] )
	{
		if ( GetPVarInt ( playerid, "sm_started" ) ) return 1 ;
		if ( GetPVarInt ( playerid, "sm_bet" ) == 0 ) return SendClientMessage ( playerid, -1, "* Вы не сделали ставку!" ) ;
		if ( p_info[playerid][pCash] < GetPVarInt ( playerid, "sm_bet" ) ) return SendClientMessage ( playerid, -1, "* У вас нет такого количества денег, которое указано в ставке!" ) ;
		SetPVarInt ( playerid, "sm_started", 1 ) ;
		new i = GetPVarInt ( playerid, "p_sm_used" ) - 1 ;
		new get_vw = GetPlayerVirtualWorld(playerid);
		if ( i & 1 == 0 ) MoveDynamicObject ( sm_hand [ i ] [ get_vw ], sm_hand_coord [ i ] [ 0 ], sm_hand_coord [ i ] [ 1 ], sm_hand_coord [ i ] [ 2 ] - 0.30, 1, sm_hand_coord [ i ] [ 3 ] + 20, sm_hand_coord [ i ] [ 4 ], sm_hand_coord [ i ] [ 5 ] ) ;
		else MoveDynamicObject ( sm_hand [ i ] [ get_vw ], sm_hand_coord [ i ] [ 0 ], sm_hand_coord [ i ] [ 1 ], sm_hand_coord [ i ] [ 2 ] - 0.30, 1, sm_hand_coord [ i ] [ 3 ] + 20, sm_hand_coord [ i ] [ 4 ], sm_hand_coord [ i ] [ 5 ] ) ;
		SetTimerEx ( "sm_hand_back", 1000, false, "idd", playerid, sm_hand [ i ] [ get_vw ], i  ) ;
	}
	if ( GetPVarInt(playerid,"id_sit_acc_area") )
	{
		new acc_string [ 64 ] ;

		if ( clickedid == Text:INVALID_TEXT_DRAW || clickedid == acc_info_box[4])
		{
			if ( clickedid == acc_info_box[4] ) CancelSelectTextDraw(playerid);

			for ( new i = 0 ; i < 22 ; i++) TextDrawHideForPlayer(playerid,acc_box[i]);
			for ( new i = 0 ; i < 5; i++ ) TextDrawHideForPlayer(playerid,acc_info_box[i]);

			if ( step_show_acc_box[playerid] != -1 ) TextDrawHideForPlayer(playerid,acc_box[step_show_acc_box[playerid] + 22]);

			ClearAnimations(playerid,true);
			SetCameraBehindPlayer(playerid);

			RemovePlayerAttachedObject(playerid,0);
		}
		if ( clickedid >= acc_box[0] && clickedid <= acc_box[10] )
		{
			for ( new i = 0; i <= 10; i++ )
			{
				if ( clickedid == acc_box[i] )
				{
					new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;

					GetPlayerCameraPos(playerid,x,y,z);
					GetPlayerCameraFrontVector(playerid,x2,y2,z2);

					new t = GetPVarInt(playerid,"id_sit_acc_area") - 1;

					if ( i != 10 && i != 9 )
					{
						InterpolateCameraPos(playerid,x,y,z,floatadd(pos_sit_acc[t][0],floatmul(1.0,floatsin(floatsub(-pos_sit_acc[t][3],20.0), degrees))),floatadd(pos_sit_acc[t][1],floatmul(1.0,floatcos(floatsub(-pos_sit_acc[t][3],20.0), degrees))),floatadd(pos_sit_acc[t][2], 0.3), 2500, CAMERA_MOVE);
						InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,floatadd(pos_sit_acc[t][0],floatmul(1.0,floatsin(floatsub(-pos_sit_acc[t][3],200.0), degrees))),floatadd(pos_sit_acc[t][1],floatmul(1.0,floatcos(floatsub(-pos_sit_acc[t][3],200.0), degrees))),floatadd(pos_sit_acc[t][2], 0.3), 2500, CAMERA_MOVE);
					}
					else if ( i == 10 )
					{
						InterpolateCameraPos(playerid,x,y,z,floatadd(pos_sit_acc[t][0],floatmul(-2.0,floatsin(-pos_sit_acc[t][3] - 20.0, degrees))),floatadd(pos_sit_acc[t][1],floatmul(-2.0,floatcos(-pos_sit_acc[t][3] - 20.0, degrees))),floatadd(pos_sit_acc[t][2], 0.5), 2500, CAMERA_MOVE);
						InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,floatadd(pos_sit_acc[t][0],floatmul(1.0,floatsin(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][1],floatmul(1.0,floatcos(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][2], 0.1), 2500, CAMERA_MOVE);
					}
					else if ( i == 9 )
					{
						ClearAnimations(playerid,true);

						InterpolateCameraPos(playerid,x,y,z,floatadd(pos_sit_acc[t][0],floatmul(-0.8,floatsin(-pos_sit_acc[t][3] - 120.0, degrees))),floatadd(pos_sit_acc[t][1],floatmul(-0.8,floatcos(-pos_sit_acc[t][3] - 120.0, degrees))),floatsub(pos_sit_acc[t][2], 0.2), 2500, CAMERA_MOVE);
						InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,floatadd(pos_sit_acc[t][0],floatmul(-0.5,floatsin(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][1],floatmul(-0.5,floatcos(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][2], 0.1), 2500, CAMERA_MOVE);
					}

					if ( step_show_acc_box[playerid] == 9  && i != 9)
					{
						AC_SetPlayerPos(playerid,pos_sit_acc[t][0],pos_sit_acc[t][1],pos_sit_acc[t][2]);
						SetPlayerFacingAngle(playerid,pos_sit_acc[t][3]);


						FIXES_ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 1);
					}

					if(step_show_acc_box[playerid] != -1)
					{
						TextDrawHideForPlayer(playerid,acc_box[step_show_acc_box[playerid] + 22]);
					}
					TextDrawShowForPlayer(playerid,acc_box[i + 22]);
					step_show_acc_box[playerid] = i;
					InitAttachedAccesories(playerid, i);

					break ;
				}
			}
		}
		else if ( clickedid == acc_info_box[0] ) // <----
		{
			if(step_show_acc_box[playerid] == -1) return 0;
			else if(count_acc_show[playerid] <= 0) return 0;
			else count_acc_show[playerid]--;

			new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
			GetOffsetAttachedAccesories(id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);

			if ( step_show_acc_box[playerid] == 9 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
			else if ( step_show_acc_box[playerid] == 10 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
			else SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

			TextDrawHideForPlayer(playerid, acc_info_box[2]);
			format(acc_string,64,"%d$",price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]);
			TextDrawSetString(acc_info_box[2],acc_string);
			TextDrawShowForPlayer(playerid, acc_info_box[2]);

		}
		else if ( clickedid == acc_info_box[1] ) // ---->
		{
			if(step_show_acc_box[playerid] == -1) return 0;
			else if(count_acc_show[playerid] >= max_id_acc[step_show_acc_box[playerid]] - 1) return 0;
			else count_acc_show[playerid]++;

			new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
			GetOffsetAttachedAccesories(id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);

			if ( step_show_acc_box[playerid] == 9 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
			else if ( step_show_acc_box[playerid] == 10 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
			else SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

			TextDrawHideForPlayer(playerid, acc_info_box[2]);
			format(acc_string,64,"%d$",price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]);
			TextDrawSetString(acc_info_box[2],acc_string);
			TextDrawShowForPlayer(playerid, acc_info_box[2]);
		}
		else if ( clickedid == acc_info_box[3] )
		{
			EditAttachedObject(playerid, 0);
		}
	}
	if ( clickedid == Text:INVALID_TEXT_DRAW && m_members_timer [ playerid ] != 0 )
	{
		if ( GetPVarInt(playerid,"id_sit_acc_area") )
		{
			new acc_string [ 64 ] ;

			if ( clickedid == Text:INVALID_TEXT_DRAW || clickedid == acc_info_box[4])
			{
				if ( clickedid == acc_info_box[4] ) CancelSelectTextDraw(playerid);

				for ( new i = 0 ; i < 22 ; i++) TextDrawHideForPlayer(playerid,acc_box[i]);
				for ( new i = 0 ; i < 5; i++ ) TextDrawHideForPlayer(playerid,acc_info_box[i]);

				if ( step_show_acc_box[playerid] != -1 ) TextDrawHideForPlayer(playerid,acc_box[step_show_acc_box[playerid] + 22]);

				ClearAnimations(playerid,true);
				SetCameraBehindPlayer(playerid);

				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
			}
			if ( clickedid >= acc_box[0] && clickedid <= acc_box[10] )
			{
				for ( new i = 0; i <= 10; i++ )
				{
					if ( clickedid == acc_box[i] )
					{
						new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;

						GetPlayerCameraPos(playerid,x,y,z);
						GetPlayerCameraFrontVector(playerid,x2,y2,z2);

						new t = GetPVarInt(playerid,"id_sit_acc_area") - 1;

						if ( i != 10 && i != 9 )
						{
							InterpolateCameraPos(playerid,x,y,z,floatadd(pos_sit_acc[t][0],floatmul(1.0,floatsin(floatsub(-pos_sit_acc[t][3],20.0), degrees))),floatadd(pos_sit_acc[t][1],floatmul(1.0,floatcos(floatsub(-pos_sit_acc[t][3],20.0), degrees))),floatadd(pos_sit_acc[t][2], 0.3), 2500, CAMERA_MOVE);
							InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,floatadd(pos_sit_acc[t][0],floatmul(1.0,floatsin(floatsub(-pos_sit_acc[t][3],200.0), degrees))),floatadd(pos_sit_acc[t][1],floatmul(1.0,floatcos(floatsub(-pos_sit_acc[t][3],200.0), degrees))),floatadd(pos_sit_acc[t][2], 0.3), 2500, CAMERA_MOVE);
						}
						else if ( i == 10 )
						{
							InterpolateCameraPos(playerid,x,y,z,floatadd(pos_sit_acc[t][0],floatmul(-2.0,floatsin(-pos_sit_acc[t][3] - 20.0, degrees))),floatadd(pos_sit_acc[t][1],floatmul(-2.0,floatcos(-pos_sit_acc[t][3] - 20.0, degrees))),floatadd(pos_sit_acc[t][2], 0.5), 2500, CAMERA_MOVE);
							InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,floatadd(pos_sit_acc[t][0],floatmul(1.0,floatsin(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][1],floatmul(1.0,floatcos(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][2], 0.1), 2500, CAMERA_MOVE);
						}
						else if ( i == 9 )
						{
							ClearAnimations(playerid,true);

							InterpolateCameraPos(playerid,x,y,z,floatadd(pos_sit_acc[t][0],floatmul(-0.8,floatsin(-pos_sit_acc[t][3] - 120.0, degrees))),floatadd(pos_sit_acc[t][1],floatmul(-0.8,floatcos(-pos_sit_acc[t][3] - 120.0, degrees))),floatsub(pos_sit_acc[t][2], 0.2), 2500, CAMERA_MOVE);
							InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,floatadd(pos_sit_acc[t][0],floatmul(-0.5,floatsin(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][1],floatmul(-0.5,floatcos(-pos_sit_acc[t][3], degrees))),floatadd(pos_sit_acc[t][2], 0.1), 2500, CAMERA_MOVE);
						}

						if ( step_show_acc_box[playerid] == 9  && i != 9)
						{
							AC_SetPlayerPos(playerid,pos_sit_acc[t][0],pos_sit_acc[t][1],pos_sit_acc[t][2]);
							SetPlayerFacingAngle(playerid,pos_sit_acc[t][3]);


							FIXES_ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 1);
						}

						if(step_show_acc_box[playerid] != -1)
						{
							TextDrawHideForPlayer(playerid,acc_box[step_show_acc_box[playerid] + 22]);
						}
						TextDrawShowForPlayer(playerid,acc_box[i + 22]);
						step_show_acc_box[playerid] = i;
						InitAttachedAccesories(playerid, i);

						break ;
					}
				}
			}
			else if ( clickedid == acc_info_box[0] ) // <----
			{
				if(step_show_acc_box[playerid] == -1) return 0;
				else if(count_acc_show[playerid] <= 0) return 0;
				else count_acc_show[playerid]--;

				new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
				GetOffsetAttachedAccesories(id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);

				if ( step_show_acc_box[playerid] == 9 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
				else if ( step_show_acc_box[playerid] == 10 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
				else SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

				TextDrawHideForPlayer(playerid, acc_info_box[2]);
				format(acc_string,64,"%d$",price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]);
				TextDrawSetString(acc_info_box[2],acc_string);
				TextDrawShowForPlayer(playerid, acc_info_box[2]);

			}
			else if ( clickedid == acc_info_box[1] ) // ---->
			{
				if(step_show_acc_box[playerid] == -1) return 0;
				else if(count_acc_show[playerid] >= max_id_acc[step_show_acc_box[playerid]] - 1) return 0;
				else count_acc_show[playerid]++;

				new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
				GetOffsetAttachedAccesories(id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);

				if ( step_show_acc_box[playerid] == 9 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
				else if ( step_show_acc_box[playerid] == 10 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
				else SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

				TextDrawHideForPlayer(playerid, acc_info_box[2]);
				format(acc_string,64,"%d$",price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]);
				TextDrawSetString(acc_info_box[2],acc_string);
				TextDrawShowForPlayer(playerid, acc_info_box[2]);
			}
			else if ( clickedid == acc_info_box[3] && step_show_acc_box[playerid] != -1)
			{
				EditAttachedObject(playerid, 0);
			}
		}
		for ( new j = 0 ; j <= m_members_count [ playerid ] ; j ++ )
		{
			PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
			PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
			PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
			PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
			members_pos_td [ playerid ] [ 0 ] [ j ] = PlayerText: -1 ;
			members_pos_td [ playerid ] [ 1 ] [ j ] = PlayerText: -1 ;
		}
		KillTimer ( m_members_timer [ playerid ] ) ;
		TextDrawHideForPlayer ( playerid, members_map_td ) ;
		CancelSelectTextDraw ( playerid ) ;

		m_members_timer [ playerid ] = 0;
		return 1 ;
	}

	if ((clickedid >= TD_BRAKE[1] && clickedid <= TD_BRAKE[5]) && !(br_player[playerid][br_flag] & (1 << 0)))
	{
		new slot = -1;
		for ( new i = 1; i <= 5; i++)
		{
			if( clickedid == TD_BRAKE [ i ] )
			{
				slot = i ;
			}
		}
		if ( slot == -1 ) return 1;

		for(new i = 0; i <= 11; i++) TextDrawHideForPlayer ( playerid , TD_BRAKE[i] ) ;
		br_player[playerid][br_flag]	|= 1 << 0;

		if ( slot != 5 )
		{
			if(br_player[playerid][br_objects][0] != INVALID_OBJECT && br_player[playerid][br_objects][1] != INVALID_OBJECT)
			{
				CancelSelectTextDraw(playerid);
				ShowPlayerDialog(playerid, D_INPUT_TABLE_DELL_LINE, DIALOG_STYLE_MSGBOX, "{29A300}Потверждение", "{FFFFFF}Вы действительно хотите удалить линию ?", "Да", "Нет");
			}
			else if(br_player[playerid][br_objects][0] != INVALID_OBJECT)
			{
				CancelSelectTextDraw(playerid);
				ShowPlayerDialog(playerid, D_INPUT_TABLE_DELL_NO_LINE, DIALOG_STYLE_MSGBOX, "{29A300}Потверждение", "{FFFFFF}Вы действительно хотите удалить ограждение ?", "Да", "Нет");
			}
			else
			{
				SetPVarInt (playerid, "cs_slot", slot ) ;
				br_player[playerid][br_flag] ^= 1 << 1;
				for(new i = 0; i <= 3; i++) TextDrawShowForPlayer ( playerid , Succes_BTD[i] ) ;
			}
		}
		else
		{
			if(br_player[playerid][br_object_text][0] != INVALID_OBJECT || br_player[playerid][br_object_text][1] != INVALID_OBJECT)
			{
				CancelSelectTextDraw(playerid);
				ShowPlayerDialog(playerid, D_INPUT_TABLE_DELL, DIALOG_STYLE_MSGBOX, "{29A300}Потверждение", "{FFFFFF}Вы действительно хотите удалить информационную панель ?", "Да", "Нет");
			}
			else
			{
				CancelSelectTextDraw(playerid);
				SetPVarInt (playerid, "cs_slot", slot ) ;
				ShowPlayerDialog(playerid, D_INPUT_TABLE, DIALOG_STYLE_INPUT, "{29A300}Установка информационной панели", "{FFFFFF}Введите текст\n{CC3300}- Максимальное количество символов 30\n{CC3300}- Если вы используете пробел, то он заменяется на перенос строки\n{CC3300}- Больше двух слов использовать нельзя\n", "Потвердить", "Отмена");
			}
		}
	}
	else if ((clickedid >= Succes_BTD[2] && clickedid <= Succes_BTD[3]) && !(br_player[playerid][br_flag] & (1 << 1)))
	{
		for(new i = 0; i <= 3; i++) TextDrawHideForPlayer ( playerid , Succes_BTD[i] ) ;
		CancelSelectTextDraw(playerid);

		if(clickedid == Succes_BTD[2]) // da
		{
			ShowPlayerDialog ( playerid , 0000 , DIALOG_STYLE_MSGBOX , "{29A300}Информация" , "{FFFFFF}Вы выбрали установку ограждений линиями\nДля того чтобы начать построение линни станьте в точку {33CC00}\"A\"\n{FFFFFF}Затем нажмите кнопку {33CC00}\"N\"", "Приступить", "");
			br_player[playerid][br_flag] ^= 1 << 2;
		}
		else if(clickedid == Succes_BTD[3])//net
		{
			new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle (playerid, A);

			if(br_player[playerid][br_objects][0] != INVALID_OBJECT)
			{
				DestroyDynamicObject(br_player[playerid][br_objects][0]);
			}

			br_player[playerid][br_objects][0] = CreateDynamicObject(object_select_td_brake[ GetPVarInt(playerid, "cs_slot") - 1 ],X + 1.5 * floatsin(-A, degrees),Y + 1.5 * floatcos(-A, degrees),Z,0.0,0.0,GetPVarInt(playerid, "cs_slot") == 3 ? A : A + 90.0);
			EditDynamicObject(playerid, br_player[playerid][br_objects][0]);


			if(blocktext[playerid] == Text3D:-1)
			{
				format(stringer, 128, "{"#cWHITE"}Ограждение установил: "newgrey"%s [%d]", NamePlayer[playerid], playerid);
				blocktext[playerid] = Create3DTextLabel(stringer, -1, X, Y, Z, 3.0, GetPlayerVirtualWorld(playerid));
			}

			Streamer_Update(playerid);

			DeletePVar ( playerid,"cs_slot" );
		}

		br_player[playerid][br_flag]	|= 1 << 1;
	}
	else if (!(br_player[playerid][br_flag] & (1 << 0)) && (clickedid == TD_BRAKE[11] || clickedid == Text:INVALID_TEXT_DRAW))
	{
		for(new i = 0; i <= 11; i++) TextDrawHideForPlayer ( playerid , TD_BRAKE[i] ) ;
		CancelSelectTextDraw(playerid);

		br_player[playerid][br_flag]	|= 1 << 0;
	}

	if((clickedid == Text:INVALID_TEXT_DRAW || clickedid == SupportButton[1]) && (ShowTuneList[playerid][0] || ShowTuneList[playerid][1]))
	{
		CancelSelectTextDraw(playerid);
		TextDrawHideForPlayer(playerid,BackTune[0]);
		TextDrawHideForPlayer(playerid,BackTune[1]);
		TextDrawHideForPlayer(playerid,BackTune[2]);
		TextDrawHideForPlayer(playerid,SupportButton[0]);
		TextDrawHideForPlayer(playerid,SupportButton[1]);
		for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawHideForPlayer(playerid,TuneList[i]);
		for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid,TuneSelect[i]);
		ShowTuneList[playerid][0] = false;
		ShowTuneList[playerid][1] = false;
		IsUpdateCamera[playerid]  = false;

		if(PlayerToPoint(4.0, playerid, -82.5608,183.2757,1003.7993) && ShowTuneList[playerid][0] == false && ShowTuneList[playerid][1] == false)
		{
			AC_SetPlayerPos(playerid, OldTuningPos[playerid][0], OldTuningPos[playerid][1], OldTuningPos[playerid][2]);
			SetPlayerFacingAngle(playerid, OldTuningPos[playerid][3]);
			SetPlayerVirtualWorld(playerid, OldTuningVI[playerid][0]);
			SetPlayerInterior(playerid, OldTuningVI[playerid][1]);
			SetCameraBehindPlayer(playerid);
			SetTimerEx ( "ActorDelay", 1000, 0, "i", playerid);

			if ( SelectCarToTune [ playerid ] == -1 )
			{
				SendClientMessage ( playerid , COLOR_GREY , "Ошибка. \" SelectCarToTune \" = -1." ) ;
			}
			else
			{
				new count_zakaz = 1;
				stringer[0] = EOS;
				for(new i = 0; i < 12; i++)
				{
					if(TempTuningPlayer [ playerid ] [ SelectCarToTune [ playerid ] ] [ i ] == -1) continue;
					format(stringer, 1500, "%s{ffffff}%d.\t%d$\t%s\t{33aa33}Оплатить\n", stringer, count_zakaz, TuneListPrice [ i ] , TuneListLabel [ i ] ) ;
					count_zakaz++;
				}
				ShowPlayerDialog ( playerid , dTuningSucces3, DIALOG_STYLE_TABLIST, "{"#cORANGE"}Оплата услуг", stringer, "Выбрать", "Отмена");
				SendClientMessage(playerid, 0xAFAFAFAA, "Ваша машина ждет вас на выходе.");
				AC_SetVehicleVirtualWorld ( caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ], 0 ) ;
				AC_LinkVehicleToInterior ( caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ] , 0 ) ;
				switch ( random ( 5 ) )
				{
					case 0:
					{
						AC_SetVehiclePos(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ],944.4500,-1738.8000,13.2600);
						AC_SetVehicleZAngle(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ], 288.0000);
					}
					case 1:
					{
						AC_SetVehiclePos(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ],944.4500,-1732.8000,13.2600);
						AC_SetVehicleZAngle(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ], 288.0000);
					}
					case 2:
					{
						AC_SetVehiclePos(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ],944.4500,-1727.8000,13.2600);
						AC_SetVehicleZAngle(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ], 288.0000);
					}
					case 3:
					{
						AC_SetVehiclePos(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ],945.4500,-1721.8000,13.2600);
						AC_SetVehicleZAngle(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ], 288.0000);
					}
					case 4:
					{
						AC_SetVehiclePos(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ],945.4500,-1715.8000,13.2600);
						AC_SetVehicleZAngle(caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ], 288.0000);
					}
				}
			}

			//SetVehicleToRespawn ( caridhouse [ playerid ] [ SelectCarToTune [ playerid ] ] ) ;

			/*new vehicleid = GetPlayerVehicleID(playerid);
			AC_SetVehiclePos(vehicleid,944.7640,-1738.8625,13.2605);
			AC_SetVehicleZAngle(vehicleid,90.2679);
			AC_SetVehicleVirtualWorld(vehicleid, 0);
			SetCameraBehindPlayer(playerid);*/
		}
	}
	if(ShowTuneList[playerid][0])
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetVehicleModel(vehicleid);

		if(clickedid == SupportButton[0])
		{
			stringer[0] = EOS;
			strcat(stringer, "{ffffff}Обозначения в тюнинг меню:\n\n{B8B8BF}\" PAINT JOBGS \"{ffffff} - покрасочные работы\n{B8B8BF}\" COLORS \"{ffffff} - изменить цвет вашего автомобиля\n{B8B8BF}\" HOODS \"{ffffff} - капот\n{B8B8BF}\" LIGHTS \"{ffffff} - фары\n{B8B8BF}\" FRONT BUMPERS \"{ffffff} - передний бампер\n{B8B8BF}\" REAR BUMPERS \"{ffffff} - задний бампер\n{B8B8BF}\" ROOFS \"{ffffff} - крыша\n");
			strcat(stringer, "{B8B8BF}\" SPOILERS \"{ffffff} - спойлер\n{B8B8BF}\" SIDE SKIRTS \"{ffffff} - боковые юбки\n{B8B8BF}\" WHEELS \"{ffffff} - колёса\n{B8B8BF}\" NITRO \"{ffffff} - нитро\n{B8B8BF}\" HYDRAULICS \"{ffffff} - гидравлика\n");
			strcat(stringer, "Для того чтобы начать {B8B8BF}тюнинг{ffffff} нажмите на любой пункт в {B8B8BF}меню{ffffff} слева\nДалее нажимайте на стрелки {B8B8BF}<{ffffff} и {B8B8BF}>{ffffff}\n\nЕсли хотите вернутся назад нажмите {B8B8BF}'BACK'\n{ffffff}Для успешного сохранения тюнинга нажмите {B8B8BF}'SAVE'\n");
			ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{383840}	Помощь по тюнингу", stringer, "Закрыть", "");
		}
		else if(clickedid >= TuneList[0] && clickedid <= TuneList[sizeof(TuneListLabel)-1])
		{
			for(new i = 0; i < sizeof(TuneListLabel); i++)
			{
				if(clickedid != TuneList[i]) continue;
				SelectTuneSlot[playerid] = i;
				break;
			}
			switch(SelectTuneSlot[playerid])
			{
				case 0:// paint jobs
				{
					for(new C = 0; C < sizeof(GetValidVehiclePaintJob); C++)
					{
						if ( model  == GetValidVehiclePaintJob[C][0])
						{
							SelectSlotJ[playerid] = C;
							break;
						}
						else if(C == sizeof(GetValidVehiclePaintJob) - 1) return SendClientMessage(playerid, -1, "Ваша машина не поддерживает покрасочные работы");
					}
					TuneInfo[playerid][0] = 0;
					ChangeVehiclePaintjob(vehicleid, 0);
				}
				case 1:// colors
				{
					TuneInfo[playerid][0] = 1;
					ChangeVehicleColor(vehicleid, 1, 0);
				}
				case 2..9:
				{
					LastTuneSlot[playerid][0] = 0;
					new type = GetTypeTuning(SelectTuneSlot[playerid]);
					for(new B = 0; B < sizeof(components_tune); B++)
					{
						if(components_tune[B][1] != type) continue;
						if(!IsComponentidCompatible(model,components_tune[B][0]) || islegalcarmod(vehicleid,model))continue;
						AC_AddVehicleComponent(vehicleid,components_tune[B][0]);
						LastTuneSlot[playerid][0] = B;
						LastTuneSlot[playerid][1] = components_tune[B][0];
						LastTuneSlot[playerid][2] = LastTuneSlot[playerid][0];
						break;
					}
					if(!LastTuneSlot[playerid][0]) return SendClientMessage(playerid, -1, "Ваша машина не поддерживает данную деталь");
				}
				case 10:
				{
					for(new i = 0; i < sizeof(NitroTextListLabel); i++) TextDrawShowForPlayer(playerid,SelectNitro[i]);
					TextDrawShowForPlayer(playerid, TuneBack);
				}
				case 11:
				{
					TempTuningPlayer[playerid][SelectCarToTune[playerid]][11] = 1087;
					AC_AddVehicleComponent(vehicleid, 1087);

					return 1;
				}
			}
			ShowTuneList[playerid][0] = false;
			ShowTuneList[playerid][1] = true;
			for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawHideForPlayer(playerid,TuneList[i]);

			if(SelectTuneSlot[playerid] < 10)
			{
				TextDrawHideForPlayer(playerid,SupportButton[0]);
				TextDrawHideForPlayer(playerid,SupportButton[1]);
				for(new i = 0; i < 4; i++) TextDrawShowForPlayer(playerid,TuneSelect[i]);
				TextDrawHideForPlayer(playerid,BackTune[0]);
				TextDrawShowForPlayer(playerid,BackTune[1]);
				TextDrawShowForPlayer(playerid,BackTune[2]);

				if(SelectTuneSlot[playerid] == 0 || SelectTuneSlot[playerid] == 1)
				{
					if(!IsUpdateCamera[playerid])
					{
						IsUpdateCamera[playerid]=true;
						UpdateVehicleCamera(playerid);
					}
				}
				else if(SelectTuneSlot[playerid] >= 2 && SelectTuneSlot[playerid] <= 9)
				{
					new Float:pos[4], Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
					GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
					GetVehicleZAngle(vehicleid, pos[3]);
					GetPlayerCameraPos(playerid,x,y,z);
					//
					x2 = floatadd(floatmul(camera_pos[SelectTuneSlot[playerid]-2][0],floatsin(floatadd(pos[3],camera_pos[SelectTuneSlot[playerid]-2][1]),degrees)),pos[0]);
					y2 = floatadd(floatmul(-camera_pos[SelectTuneSlot[playerid]-2][0],floatcos(floatadd(pos[3],camera_pos[SelectTuneSlot[playerid]-2][1]),degrees)),pos[1]);
					z2 = floatadd(pos[2],0.4);
					//
					InterpolateCameraPos(playerid,x,y,z,x2,y2,z2 + camera_pos[SelectTuneSlot[playerid]-2][2],700,CAMERA_MOVE);
					GetPlayerCameraFrontVector(playerid,x2,y2,z2);
					InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,pos[0],pos[1],pos[2],700,CAMERA_MOVE);
				}
			}
			return 1;
		}
	}
	else if(clickedid == TuneBack)
	{
		for(new i = 0; i < sizeof(NitroTextListLabel); i++) TextDrawHideForPlayer(playerid,SelectNitro[i]);
		TextDrawHideForPlayer(playerid, TuneBack);

		for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawShowForPlayer(playerid,TuneList[i]);
		TextDrawShowForPlayer(playerid,SupportButton[0]);
		TextDrawShowForPlayer(playerid,SupportButton[1]);
		ShowTuneList[playerid][0] = true;
		ShowTuneList[playerid][1] = false;
	}
	else if(clickedid >= TuneSelect[0] && clickedid <= TuneSelect[1])
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new model = GetVehicleModel(vehicleid);
		switch(SelectTuneSlot[playerid])
		{
			case 0:
			{
				if(SelectSlotJ[playerid] == -1) return 0;
				if(clickedid == TuneSelect[0])
				{
					if(TuneInfo[playerid][0] >= GetValidVehiclePaintJob[SelectSlotJ[playerid]][1]) return 1;
					else TuneInfo[playerid][0] ++;
				}
				else if(clickedid == TuneSelect[1])// лево
				{
					if(TuneInfo[playerid][0] == 0) return 1;
					else TuneInfo[playerid][0]--;
				}

				ChangeVehiclePaintjob(vehicleid, TuneInfo[playerid][0]);
			}
			case 1:
			{
				if(clickedid == TuneSelect[0])
				{
					if(TuneInfo[playerid][1] >= 255) return 1;
					else TuneInfo[playerid][1] ++;
				}
				else if(clickedid == TuneSelect[1])// лево
				{
					if(TuneInfo[playerid][1] == 0) return 1;
					else TuneInfo[playerid][1]--;
				}

				ChangeVehicleColor(vehicleid, TuneInfo[playerid][1], 0);
			}
			case 2..9:
			{
				new type = GetTypeTuning(SelectTuneSlot[playerid]);
				new componentid = GetComponentID(playerid,clickedid, model, type);
				if(componentid != -1)
				{
					LastTuneSlot[playerid][1] = componentid;
					AC_AddVehicleComponent(vehicleid, componentid);
				}
			}
		}
	}
	else if(ShowTuneList[playerid][1] && clickedid >= TuneSelect[2] && clickedid <= TuneSelect[3])
	{
		if(clickedid == TuneSelect[3])
		{
			SetCameraBehindPlayer(playerid);
			TextDrawShowForPlayer(playerid,SupportButton[0]);
			TextDrawShowForPlayer(playerid,SupportButton[1]);
			for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawShowForPlayer(playerid,TuneList[i]);
			for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid,TuneSelect[i]);
			TextDrawShowForPlayer(playerid,BackTune[0]);
			TextDrawHideForPlayer(playerid,BackTune[1]);
			TextDrawHideForPlayer(playerid,BackTune[2]);

			CancelComponent(playerid);
		}
		else if(clickedid == TuneSelect[2])
		{

			TextDrawShowForPlayer(playerid,SupportButton[0]);
			TextDrawShowForPlayer(playerid,SupportButton[1]);
			for(new i = 0; i < sizeof(TuneListLabel); i++) TextDrawShowForPlayer(playerid,TuneList[i]);
			for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid,TuneSelect[i]);
			TextDrawShowForPlayer(playerid,BackTune[0]);
			TextDrawHideForPlayer(playerid,BackTune[1]);
			TextDrawHideForPlayer(playerid,BackTune[2]);

			if(SelectTuneSlot[playerid]==0)
			{
				TempTuningPlayer[playerid][SelectCarToTune[playerid]][0] = TuneInfo[playerid][0];
			}
			else if(SelectTuneSlot[playerid]==1)
			{
				TempTuningPlayer[playerid][SelectCarToTune[playerid]][1] = TuneInfo[playerid][1];
			}
			else if(SelectTuneSlot[playerid]>=2 && SelectTuneSlot[playerid]<=9)
			{
				TempTuningPlayer[playerid][SelectCarToTune[playerid]][SelectTuneSlot[playerid]] = LastTuneSlot[playerid][1];
			}
			UpdateTuning(playerid,SelectCarToTune[playerid] + 1);
			LastTuneSlot[playerid][1] = 0;
			ShowTuneList[playerid][0] = true;
			ShowTuneList[playerid][1] = false;
			IsUpdateCamera[playerid] = false;
			UpdateVehicleCamera(playerid);
		}
	}
	else if(clickedid >= SelectNitro[0] && clickedid <= SelectNitro[2])
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(clickedid == SelectNitro[0])
		{
			TempTuningPlayer[playerid][SelectCarToTune[playerid]][10] = 1008;
			AC_AddVehicleComponent(vehicleid, 1008);
		}
		else if(clickedid == SelectNitro[1])
		{
			TempTuningPlayer[playerid][SelectCarToTune[playerid]][10] = 1010;
			AC_AddVehicleComponent(vehicleid, 1010);
		}
		else if(clickedid == SelectNitro[2])
		{
			TempTuningPlayer[playerid][SelectCarToTune[playerid]][10] = 1009;
			AC_AddVehicleComponent(vehicleid, 1009);
		}
		UpdateTuning(playerid,SelectCarToTune[playerid] + 1);
		return 1;
	}
	if(IsTDCNNShow[playerid])
	{
		new slot = -1;

		if(clickedid == Text:INVALID_TEXT_DRAW)
		{
			for(new i = 0; i < 5; i++)
			{
				TextDrawHideForPlayer(playerid,TD_Floor_CNN[i]);
			}
			IsTDCNNShow[playerid]=false;
			return 1;
		}

		if(clickedid == TD_Floor_CNN[0]) slot = 0;
		else if(clickedid == TD_Floor_CNN[1]) slot = 1;
		else if(clickedid == TD_Floor_CNN[2]) slot = 2;

		if(slot != -1)
		{
			if(!ElevatorStatus)
			{
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid,X,Y,Z);

				if(PlayerToPoint(2.0,playerid,X,Y,GetDoorsZCoordForFloor(slot)))
				{
					SendErr(playerid, "Вы сейчас находитесь на этом этаже");
				}
				else
				{
					for(new lfloor = 0; lfloor < 3; lfloor++)
					{
						if(!PlayerToPoint(2.0,playerid,X,Y,GetDoorsZCoordForFloor(lfloor))) continue;

						SetPlayerFacingAngle(playerid, 0.0);
						SetCameraBehindPlayer(playerid);

						Streamer_AppendArrayData(STREAMER_TYPE_PICKUP,gPickIDD[57+lfloor], E_STREAMER_WORLD_ID, 1);

						CloseElevator(lfloor);
						CloseElevator(slot);

						ElevatorStatus = true;

						SetTimerEx("CNN_UpElevator",5000,0,"i",playerid);

						SetPVarInt(playerid,"new_floor", slot);
						SetPVarInt(playerid,"last_floor", lfloor);

						break;
					}
				}
			}
			else SendErr(playerid, "Лифт занят ожидайте");
			CancelSelectTextDraw(playerid);
			for(new i = 0; i < 5; i++)
			{
				TextDrawHideForPlayer(playerid,TD_Floor_CNN[i]);
			}

			IsTDCNNShow[playerid]=false;
		}

		return 1;
	}
	if(GetPVarInt(playerid,"fuel_show"))
	{
		if(clickedid == TD_Fuel[7] || clickedid == Text:INVALID_TEXT_DRAW)
		{
			DeletePVar(playerid,"td_step");
			TD_EndFuel(playerid);
		}
		if(clickedid == TD_Fuel[3])
		{
			new step = GetPVarInt(playerid,"td_step");
			new Float:size_td = GetPVarFloat(playerid,"td_fuel");
			if(size_td >= 422.0) return 1;

			PlayerTextDrawHide(playerid,PTD_Fuel[playerid][0]);
			PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], size_td+10.5, 0.0);
			PlayerTextDrawShow(playerid,PTD_Fuel[playerid][0]);

			SetPVarFloat(playerid,"td_fuel",size_td+10.5);
			SetPVarInt(playerid,"td_step", step+1);

			format(stringer, 128, "%.1f FUEL", (step+1) * 5.0);
			PlayerTextDrawSetString(playerid,PTD_Fuel[playerid][1],stringer);
		}
		if(clickedid == TD_Fuel[2])
		{
			new step = GetPVarInt(playerid,"td_step");
			new Float:size_td = GetPVarFloat(playerid,"td_fuel");
			if(size_td <= 212.0) return 1;
			if(step <= GetPVarInt(playerid,"start_step")) return 1;

			PlayerTextDrawHide(playerid,PTD_Fuel[playerid][0]);
			PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], size_td-10.5, 0.0);
			PlayerTextDrawShow(playerid,PTD_Fuel[playerid][0]);

			SetPVarFloat(playerid,"td_fuel",size_td-10.5);
			SetPVarInt(playerid,"td_step", step-1);

			format(stringer, 128, "%.1f FUEL", (step-1) * 5.0);
			PlayerTextDrawSetString(playerid,PTD_Fuel[playerid][1],stringer);
		}
		if(clickedid == TD_Fuel[6])
		{
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new step = GetPVarInt(playerid,"td_step")+1;
			new Float:cfuel = GetPVarFloat(playerid,"start_fuel");
			format(stringer, 128, " \n  \n \t {ffffff}Вы действительно хотите заправиться на {FF9968}%d{ffffff} литров?\n\t Стоимость: {"#cGREEN"}%d{ffffff} $ \n  \n ",
			((step * 5)-floatround(cfuel)),((step * 5)-floatround(cfuel)) * Business[fuel][EnterPrice]);
			//printf("price: %d", Business[fuel][EnterPrice]);
			ShowPlayerDialog(playerid,dTDFuel,DIALOG_STYLE_MSGBOX,"{"#cBLUE"}Заправка",stringer,"Да", "Нет");
		}
	}
	if(clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid,"showphone"))
	{
		for(new i=0; i<8; i++)
		{
			TextDrawHideForPlayer(playerid,TD_Phones[i]);
		}
		CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"showphone");
	}
	if(clickedid == TD_Phones[7] && GetPVarInt(playerid,"showphone"))
	{
		if(GetPVarInt(playerid,"selected_slot")==0) return 1;
		new slot = GetPVarInt(playerid,"selected_slot")-1;

		format(stringer, 128,"{"#cWHITE"}Стоимость данного телефона %i.000 {"#cGREEN"}$\n\n{"#cWHITE"}Вы действительно хотите купить эту модель?",((slot+1)*5));
		ShowPlayerDialog(playerid,dModelPhone,DIALOG_STYLE_MSGBOX,""ORG"Покупка телефона", stringer, "Купить", "Отмена");
		return 1;
	}
	else if(clickedid >= TD_Phones[0] && clickedid <= TD_Phones[5] && GetPVarInt(playerid,"showphone"))
	{
		for(new slot=0; slot<=5; slot++)
		{
			if(clickedid == TD_Phones[slot])
			{
				if((GetPVarInt(playerid,"selected_slot")-1) != slot && GetPVarInt(playerid,"selected_slot") != 0)
				{
					new last_slot = GetPVarInt(playerid,"selected_slot")-1;
					TextDrawHideForPlayer(playerid,TD_Phones[last_slot]);
					TextDrawBackgroundColor(TD_Phones[last_slot], -644666369);
					click_phones[last_slot]=false;
					TextDrawShowForPlayer(playerid,TD_Phones[last_slot]);
				}
				TextDrawHideForPlayer(playerid,TD_Phones[slot]);
				TextDrawBackgroundColor(TD_Phones[slot], (!click_phones[slot]) ? (-1334502145) : (-644666369));
				click_phones[slot]=(click_phones[slot])?(false):(true);
				TextDrawShowForPlayer(playerid,TD_Phones[slot]);
				SetPVarInt(playerid,"selected_slot", (click_phones[slot])?(slot+1):(0));
				break;
			}
		}
	}
	if(GetPVarInt(playerid,"PlayerInClothes"))
	{
		if(clickedid == gSkinShopDraw[0])
		{
			new MAX_SKIN = (p_info[playerid][pSex] == 1) ? (113) : (37);
			new MIN_SKIN = (p_info[playerid][pSex] == 1) ? (38) : (0);
			if(GetPVarInt(playerid,"PlayerSkinSlot")>=MAX_SKIN)
			{
				SetPVarInt(playerid,"PlayerSkinSlot",MIN_SKIN);
			}
			else SetPVarInt(playerid,"PlayerSkinSlot", GetPVarInt(playerid,"PlayerSkinSlot")+1);
			for(new slot = MIN_SKIN; slot <= MAX_SKIN; slot++)
			{
				if(GetPVarInt(playerid,"PlayerSkinSlot") == slot)
				{
					SetPlayerSkin(playerid,gSkins[slot][skinID]);
					format(stringer,15,"%i$",gSkins[slot][skinPrice]);
					PlayerTextDrawSetString(playerid,gSkinShopPriceDraw[playerid],stringer);
					break;
				}
			}
			return 1;
		}
		else if(clickedid == gSkinShopDraw[1])
		{
			new MAX_SKIN = p_info[playerid][pSex] == 1 ? 113 : 37;
			new MIN_SKIN = p_info[playerid][pSex] == 1 ? 38 : 0;
			if(GetPVarInt(playerid,"PlayerSkinSlot")<=MIN_SKIN)
				SetPVarInt(playerid,"PlayerSkinSlot",MAX_SKIN);
			else SetPVarInt(playerid,"PlayerSkinSlot", GetPVarInt(playerid,"PlayerSkinSlot")-1);
			for(new slot = MIN_SKIN; slot <= MAX_SKIN; slot++)
			{
				if(GetPVarInt(playerid,"PlayerSkinSlot") == slot)
				{
					SetPlayerSkin(playerid,gSkins[slot][skinID]);
					format(stringer,15,"%i$",gSkins[slot][skinPrice]);
					PlayerTextDrawSetString(playerid,gSkinShopPriceDraw[playerid],stringer);
					break;
				}
			}
			return 1;
		}
		else if(clickedid == gSkinShopDraw[3])
		{
			if(p_info[playerid][pCash] < gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice])
			{
				SendErr(playerid, "У вас не достаточно денег для покупки этого скина");
				return 1;
			}
			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			new slot = GetPVarInt(playerid,"PlayerSkinSlot");

			UpdateOtherBusiness(bizid);
			if ( QuestStep[2][playerid] == 1 )
			{
				ShowPlayerDialog(playerid,0000,0," ", "{AFAFAF}Вы успешно выполнили это задание, теперь отправляйтесь к Джону за наградой\n", "Ок", "");
				SendClientMessage(playerid, -1, "Вы успешно выполнили это задание, следить за квестами можно через команду {"#cRED"}( /quest )");
				QuestStep[2][playerid] = 2;
				UpdatePlayerQuestStep(playerid);
			}
			if(p_info[playerid][pHouse] > 0 && gHouses[p_info[playerid][pHouse]][houseImprove][1])
			{
					format(stringer, 128,"{"#cWHITE"}Вы хотите купить эту одежду за {"#cRED"}$%i{"#cWHITE"}?",gSkins[slot][skinPrice]);
					ShowPlayerDialog(playerid,dBuySkin,0,"Покупка одежды",stringer,"Да","Нет");
			}
			else
			{
				TelePos[playerid][0] = 0.0;
				TelePos[playerid][1] = 0.0;
				GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
			    p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
				TransferMoney(playerid,p_info[playerid][pCash]-gSkins[slot][skinPrice],gSkins[slot][skinPrice],"купил одежду в магазине одежды");
				p_info[playerid][pCash] -= gSkins[slot][skinPrice];
				UpdateMoney(playerid);

				Business[bizid][Bank] += gSkins[slot][skinPrice];
				AddMafiaBank(bizid, gSkins[slot][skinPrice]);
				SetPVarInt(playerid,"CloserInClothes", true);
				p_info[playerid][pChar] = gSkins[slot][skinID];
				UpdatePlayerData(playerid, "pChar",p_info[playerid][pChar]);
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"OldWorld"));
				SetPlayerSkin(playerid,gSkins[slot][skinID]);
				DeletePVar(playerid,"PlayerSkinSlot");
				DeletePVar(playerid,"PlayerInClothes");
				DeletePVar(playerid,"OldWorld");
				DeletePVar(playerid,"OldSkin");
				SetCameraBehindPlayer(playerid);
				CancelSelectTextDraw(playerid);
				for(new i=0; i<5; i++)
				{
					if(gSkinShopDraw[i]==Text:-1) continue;
					TextDrawHideForPlayer(playerid,Text:gSkinShopDraw[i]);
				}
				if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
				{
					PlayerTextDrawHide(playerid,gSkinShopPriceDraw[playerid]);
				}
			}
			return 1;
		}
		else if(clickedid == gSkinShopDraw[4] || Text:INVALID_TEXT_DRAW)
		{
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
			GetPlayerPos(playerid,p_info[playerid][pX],p_info[playerid][pY],p_info[playerid][pZ]);
		    p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
			CancelSelectTextDraw(playerid);
			for(new i=0; i<5; i++)
			{
				if(gSkinShopDraw[i]==Text:-1) continue;
				TextDrawHideForPlayer(playerid,Text:gSkinShopDraw[i]);
			}
			if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
			{
				PlayerTextDrawHide(playerid,gSkinShopPriceDraw[playerid]);
			}
			SetPVarInt(playerid,"CloserInClothes", true);
			DeletePVar(playerid,"PlayerInClothes");
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"OldWorld"));
			SetPlayerSkin(playerid, GetPVarInt(playerid,"OldSkin"));
			DeletePVar(playerid,"PlayerSkinSlot");
			DeletePVar(playerid,"OldWorld");
			DeletePVar(playerid,"OldSkin");
			SetCameraBehindPlayer(playerid);
			return 1;
		}
	}

	if(GetPVarInt(playerid, "SelectAvto") != -1)
	{
		if(clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid,"AutoShop"))
			return ShowPlayerDialog(playerid,2426,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
		else if(clickedid == AutoShopText[1]) return BackCar(playerid);
		else if(clickedid == AutoShopText[2]) return NextCar(playerid);
		else if(clickedid == AutoShopText[3]) return NextColor(playerid,0);
		else if(clickedid == AutoShopText[4]) return BackColor(playerid,0);
		else if(clickedid == AutoShopText[5]) return NextColor(playerid,1);
		else if(clickedid == AutoShopText[6]) return BackColor(playerid,1);
		//else if(clickedid == AutoShopText[6]) return ShowPlayerDialog(playerid,2324,0,"Предупреждение","Вы собираетесь купить автомобиль.Если у вас уже\nимеется какое либо транспортное средство,\n то оно будет заменено","Купить","Вернуться");
		else if(clickedid == AutoShopText[7])
		{
			ShowPlayerDialog(playerid,2324,0,"{ffff00}Подтверждение покупки транспорта","Вы собираетесь купить транспорт. Если у вас уже\nимеется какое либо транспортное средство,\nто оно будет заменено","Купить","Вернуться");
		}
		else if(clickedid == AutoShopText[8]) return ShowPlayerDialog(playerid,2425,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
	}
	return 1;
}

stock SendGangerMessage(color, string[])
{
	foreach(i)
	{
		if(IsAGang(i))
		{
			SCM(i, color, string);
		}
	}
	return 1;
}

stock SendBand(color,str[])
{
	foreach(x)
	{
		if(IsAGang(x))
			SCM(x,color,str);
	}
	return 1;
}

stock TimeConverter(seconds)
{
	new str[6];
	new minutes = floatround(seconds/60);
	seconds -= minutes*60;
	format(str, 6, "%02d:%02d", minutes, seconds);
	return str;
}



stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i != 365; i++ )
	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
			return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
	}
	return 0;
}

forward GzCheck(i,napad,vlad);
public GzCheck(i,napad,vlad)
{
	if(GZInfo[i][TypeBattle] == 2)
	{
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
	}
	foreach(m)
	{
		if(GZInfo[i][TypeBattle] == 2)
		{
			IDGZ[m] = GetIDGZ(m);
			if(IDGZ[m] == GZInfo[i][gIDs])
			{
				if(p_info[m][tMember] == napad) CountOnZone[napad]++;
				else if(p_info[m][tMember] == vlad) CountOnZone[vlad]++;
			}
		}
		if(IsAGang(m))
		{
			if(!GetPVarInt(m,"ppkz"))
			{
				GangZoneFlashForPlayer(m,GZInfo[i][gIDs],GetGangColor(napad));
				TextDrawShowForPlayer(m, Capture[0]);
				TextDrawShowForPlayer(m, Capture[1]);
				TextDrawShowForPlayer(m, Capture[2]);
				TextDrawSetString(Capture[2],TimeConverter(GZInfo[i][gTime]));
				TextDrawSetString(Capture[3],GFrac(vlad));
				TextDrawSetString(Capture[4],GFrac(napad));
				TextDrawSetString(Capture[8],IntToStr(GZInfo[i][TypeBattle]));
				TextDrawShowForPlayer(m, Capture[3]);
				TextDrawShowForPlayer(m, Capture[4]);
				TextDrawShowForPlayer(m, Capture[5]);
				TextDrawShowForPlayer(m, Capture[6]);
				TextDrawShowForPlayer(m, Capture[7]);
				TextDrawShowForPlayer(m, Capture[8]);
				SetPVarInt(m,"ppkz",true);
			}
			else
			{
				TextDrawSetString(Capture[2],TimeConverter(GZInfo[i][gTime]));
				format(stringer,8,"%d",CountOnZone[vlad]);
				TextDrawSetString(Capture[5],stringer);
				format(stringer,8,"%d",CountOnZone[napad]);
				TextDrawSetString(Capture[6],stringer);
			}
		}
	}
	if(GZInfo[i][gTime] >= 1)
	{
		GZInfo[i][gTime] --;
	}
	else if(GZInfo[i][gTime] < 1)
	{
		new strlolka[112];
		if(CountOnZone[vlad] == CountOnZone[napad] || CountOnZone[vlad] > CountOnZone[napad])
		{
			format(strlolka,112,"%s захватили территорию у банды %s в районе %s",GFrac(vlad),GFrac(napad),GZInfo[i][PlaceName]);
		}
		else
		{
			format(strlolka,112,"%s захватили территорию у банды %s в районе %s",GFrac(napad),GFrac(vlad),GZInfo[i][PlaceName]);
			VladGzone[GZInfo[i][gFrakVlad]]--;
			VladGzone[GZInfo[i][gNapad]]++;
			UpdateStoreGang(GZInfo[i][gFrakVlad]);
			UpdateStoreGang(GZInfo[i][gNapad]);
			GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
		}
		SendBand(CORANGE,strlolka);
		new id_killed = -1;
		new max_killed = -1;
		foreach(x)
		{
			if(IsAGang(x) && GetPVarInt(x,"ppkz"))
				EndCapt(x);
			if(GetPVarInt(x,"killed_shot"))
			{
				if(GetPVarInt(x,"killed_shot")>max_killed)
				{
					max_killed = GetPVarInt(x,"killed_shot");
					id_killed = x;
				}
				DeletePVar(x,"killed_shot");
			}
		}
		if(id_killed != -1 && max_killed != -1)
		{
			format(stringer,128,"Уничтожил больше всего противников {"#cWHITE"}%s {E6251E}Убийств: {"#cWHITE"}%i", NamePlayer[id_killed],max_killed);
			SendBand(CORANGE,stringer);
		}
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
		GZInfo [ i ] [ gTime ] = 0 ;

		TextDrawSetString(Capture[5],"0");
		TextDrawSetString(Capture[6],"0");
		GZInfo[i][ZoneOnBattle] = 0;
		GangZoneStopFlashForAll(GZInfo[i][gIDs]);
		GangZoneHideForAll(GZInfo[i][gIDs]);
		GangZoneShowForAll(GZInfo[i][gIDs],GetGangZoneColor(i));
		SaveGZ(i);
		CaptureTime = unix + (15 * 60);
		zahvat = false;
		KillTimer(GZInfo[i][gzTimer]);
		UpdateInfoZones();
		GZInfo [ i ] [ gzTimer ] = 0 ;
	}
	return 1;
}
EndCapt(m)
{
	TextDrawHideForPlayer(m, Capture[0]);
	TextDrawHideForPlayer(m, Capture[1]);
	TextDrawHideForPlayer(m, Capture[2]);
	TextDrawHideForPlayer(m, Capture[3]);
	TextDrawHideForPlayer(m, Capture[4]);
	TextDrawHideForPlayer(m, Capture[5]);
	TextDrawHideForPlayer(m, Capture[6]);
	TextDrawHideForPlayer(m, Capture[7]);
	TextDrawHideForPlayer(m, Capture[8]);
	for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
	DeletePVar(m,"ppkz");
}
EndBizwar(m)
{
	TextDrawHideForPlayer(m,Bizwar[0]);
	TextDrawHideForPlayer(m,Bizwar[1]);
	TextDrawHideForPlayer(m,Bizwar[2]);
	TextDrawHideForPlayer(m,Bizwar[3]);
	DeletePVar(m,"ppkz2");
	for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
}
stock GetGangColor(g)
{
	new zx;
	switch(g)
	{
		case 15: zx = 0x009900AA;
		case 12: zx = 0xCC00FFAA;
		case 18: zx = 0x6666FFAA;
		case 17: zx = 0x00CCFFAA;
		case 13: zx = 0xffff00AA;
		default: zx = 0xC0C0C0AA;
	}
	return zx;
}

stock SendDead(ids,whoids,killerid,playerid,reason)
{
	foreach(m)
	{
		if(p_info[m][tMember] == ids || p_info[m][tMember] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}

stock MinuteTimer()
{
	//if(CaptureTime) CaptureTime--;
	for(new gang = 0; gang < 8; gang ++)
	{
		if(fracmoroz[gang])
		{
			if(fracmoroz[gang] <= unix)
			{
				format(stringer,128,"Заморозка с %s %s снята",(gang<5) ? ("банды"):(""),fracmorozName[gang]);
				SendClientMessageToAll(COLOR_LIGHTRED,stringer);
				fracmoroz[gang]=0;
				UpdateMorozed();
			}
		}
	}
	foreach(i)
	{
		if(p_info[i][pMuteTime] > 0)
		{
			UpdatePlayerData(i,"pMuteTime",p_info[i][pMuteTime]);
		}
		if(p_info[i][pJailTime] > 0)
		{
			UpdatePlayerData(i,"pJailTime",p_info[i][pJailTime]);
		}
		if(IsPlayerAuthorized(i) == PLAYER_OFFLINE) continue;
		SetPlayerScore(i, p_info[i][pLevel]);
		SetPVarInt(i,"r_shot_10",GetPVarInt(i,"r_shot"));
		SetPVarInt(i,"r_shot_hit_10",GetPVarInt(i,"r_shot_hit"));

		if(GetPVarInt(i,"start_job_army") && PlayerToPoint(80.0,i,2150.9392,-81.4108,2.8804))
		{
			//p_info[i][pCash] += 50;
			//UpdateMoney(i);
			GameTextForPlayer(i, "~g~~h~+ 50$", 2000, 1);
		}
		if(GetPVarInt(i,"start_job_police") && PlayerToPoint(100.0,i,2446.4897,-1817.5411,1224.4199))
		{
			//p_info[i][pCash] += 50;
			//UpdateMoney(i);
			GameTextForPlayer(i, "~g~~h~+ 50$", 2000, 1);
		}
		if(ServerHP[i] > 50)
		{
			if(p_info[i][Disease][0] == 1) AC_SetPlayerHealth(i, ServerHP[i]-1);
			if(p_info[i][Disease][0] == 2) AC_SetPlayerHealth(i, ServerHP[i]-3);
			if(p_info[i][Disease][0] == 3) AC_SetPlayerHealth(i, ServerHP[i]-5);
		}
		if(ServerHP[i] > 25)
		{
			if(p_info[i][Disease][1] == 1) AC_SetPlayerHealth(i, ServerHP[i]-2);
			if(p_info[i][Disease][1] == 2) AC_SetPlayerHealth(i, ServerHP[i]-4);
			if(p_info[i][Disease][1] == 3) AC_SetPlayerHealth(i, ServerHP[i]-6);
		}
	}
	return 1;
}

forward AGetStats(playerid, name[]);
public AGetStats(playerid, name[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendErr(playerid, "Аккаунт не найден");

	new level,awarn,money,id;
	new leader,member,rank,Helperlevel,sbiz;
	new biz,regip[16],onlin[16];
	new ip[16];
	//
	cache_get_value_int(0,"ID",id);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"tHelper",Helperlevel);
	cache_get_value_int(0,"pWarns",awarn);
	cache_get_value_int(0,"pCash",money);
	cache_get_value_int(0,"tLeader",leader);
	cache_get_value_int(0,"tMember",member);
	cache_get_value_int(0,"tRank",rank);
	cache_get_value_int(0,"pPbiskey",biz);
	cache_get_value(0,"pIpReg",regip,16);
	cache_get_value(0,"pGetonIP",ip,64);
	cache_get_value(0,"pGetonDate",onlin,16);
	stringer[0] = EOS;
	format(stringer,1500,"%sНомер аккаунта:      \t%i\n",stringer,id);
	format(stringer,1500,"%sName:      \t\t%s\n\n",stringer,name);
	format(stringer,1500,"%sLevel:      \t\t%d\n",stringer,level);
	format(stringer,1500,"%sHelper:      \t\t%d\n",stringer,Helperlevel);
	format(stringer,1500,"%sWarns:      \t\t%d\n",stringer,awarn);
	format(stringer,1500,"%sMoney:      \t\t%d\n",stringer,money);
	format(stringer,1500,"%sLeader:      \t\t%d\n",stringer,leader);
	format(stringer,1500,"%sMember:      \t\t%d\n",stringer,member);
	format(stringer,1500,"%sRank:      \t\t%d\n",stringer,rank);
	format(stringer,1500,"%sBiz:          \t\t%d\n",stringer,biz);
	format(stringer,1500,"%sSBiz:          \t\t%d\n",stringer,sbiz);
	format(stringer,1500,"%sR-IP:      \t\t%s\n",stringer,regip);
	format(stringer,1500,"%sL-IP:      \t\t%s\n",stringer,ip);
	format(stringer,1500,"%sOnline:\t\t\t%s\n\n",stringer,onlin);
	format(stringer,1500,"%s{FF6347}* Если R-IP и L-IP не равны,\nтребуется проверить аккаунт на взлом.\n",stringer);
	ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"Оффлайн Статистика персонажа",stringer,"Готово","");
	return 1;
}

forward AGetIp(i, akk[]);
public AGetIp(i, akk[])
{
	new preg[16], pip[16];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendErr(i, "Аккаунт не найден");
	cache_get_value(0, "pIpReg", preg, 16);
	cache_get_value(0, "pGetonIP", pip, 64);
	format(stringer, 144, "Nik [%s] R-IP [%s] L-IP [%s] IP [%s]", akk, preg, pip, pip);
	SCM(i, 0x6495EDFF, stringer);
	return 1;
}



forward OnPlayerSelectPassword(playerid, password[]);
public OnPlayerSelectPassword(playerid, password[])
{
	new rows;
	cache_get_row_count(rows);
	if(rows) ShowPlayerDialog(playerid,156,DIALOG_STYLE_PASSWORD,"Смена пароля","|                                       Используйте новый пароль                                          |", "Принять", "Отмена");
	else
	{
		ShowPlayerDialog(playerid,155,DIALOG_STYLE_PASSWORD,"Смена пароля","|                                      Используйте свой старый пароль                                        |", "Готово", "Отмена");
		SCM(playerid, COLOR_LIGHTRED,"Пароль неверный");
	}
	return 1;
}


stock Converts(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	}
	else
	{
		format(string, 30, "%d:%02d", mins, secs);
	}
	return string;
}

stock IsTextInvalid(text[])
{
	if(strfind(text, "none", true) != -1) return 1; if(strfind(text, "None", true) != -1) return 1; if(strfind(text, "NONE", true) != -1) return 1; if(strfind(text, "'", true) != -1) return 1; if(strfind(text, "/", true) != -1) return 1; if(strfind(text, "%", true) != -1) return 1; if(strfind(text, ".", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "@", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	return 0;
}

/*enum last_damage_data
{
	Float:last_damage_amount,
	last_damage_tick,
	last_damage_weaponid
}
new lda[MAX_PLAYERS][last_damage_data];
new tick_gun[51]={350,350,350,500,450,550,550,550,450,550,620,450,550,550,615,650,0,0,0,0,0,0,140,250,620,800,100,220,50,50,120,120,40,800,700,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
*/
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid)
{
	if(playerid != INVALID_PLAYER_ID && (weaponid >= 0 && weaponid <= 49)) AmountDamageUron[playerid][weaponid] = amount;
	return 1;
}

forward CallChangeName(playerid);
public CallChangeName(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		SendErr(playerid, "Данный никнейм занят");
		DeletePVar(playerid,"WantNickChange");
		return 1;
	}

	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);

	format(stringer,512,"[A] %s[%d] подал завку на смену ника. Желаемый ник: %s",NamePlayer[playerid],playerid,playerName);
	AdmMes(CADMIN_HELP_INFO,stringer,5);
	AdmMes(CADMIN_HELP_INFO,"Чтобы сменить ему ник Используйте /setname",5);
	SendSucc(playerid, "Заявка на смену ника отправлена администрации");
	return 1;
}


forward GrandChangeName(playerid);
public GrandChangeName(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		SetPVarInt(playerid,"grand_fix",true);
		ChangeName ( playerid );
	}
	else SendErr(playerid, "Данный никнейм занят");
	return 1;
}

stock ChangeName(playerid)
{
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);

	mysql_query_string[0] = EOS;
	format(mysql_query_string,350, "UPDATE `accounts` SET `tName` = '%s' WHERE `tName` = '%s' LIMIT 1",playerName,NamePlayer[playerid]);
	mysql_pquery(connects, mysql_query_string, "", "");

	if(p_info[playerid][pAdmin] != 0)
	{
		format(mysql_query_string,350, "UPDATE `admin` SET `Name` = '%s' WHERE `Name` = '%s'",playerName,NamePlayer[playerid]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}
	if ( p_info[playerid][pFamily] > 0 )
	{
		if ( !strcmp(_family[p_info[playerid][pFamily]-1][family_owner_create_name],NamePlayer[playerid])){
			strmid(_family[p_info[playerid][pFamily]-1][family_owner_create_name],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			mysql_query_string[0] = EOS;
			format(mysql_query_string,350, "UPDATE `family` SET `gFamilyCreateName` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,_family[p_info[playerid][pFamily]-1][family_mysql_id]);
			mysql_pquery(connects, mysql_query_string, "", "");
		}
	}
	for(new namestore = 0; namestore < 10; namestore++)
	{
		if(strcmp(pNiksHistory[playerid][namestore],"None"))
		{
			strmid(pNiksHistory[playerid][namestore],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),24);
			SavePlayerHistory(playerid);

			break;
		}
		else if(namestore == 9)
		{
			strmid(pNiksHistory[playerid][namestore],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),24);
			SavePlayerHistory(playerid);
		}
	}
	if (p_info[playerid][pHouse] > 0)
	{
		strmid(gHouses[p_info[playerid][pHouse]][houseOwner], playerName, 0, strlen(playerName), 31);
		UpdateHome(p_info[playerid][pHouse]);
		SaveHome(p_info[playerid][pHouse]);
	}
	format(stringer,512, "%s изменил(а) имя на %s",NamePlayer[playerid],playerName);
	SendClientMessageToAll(CLIGHTYELLOW, stringer);
	SetPVarInt(playerid,"changename_fix",true);
	printf ("%d %s", playerid , playerName ) ;
	SetPlayerName(playerid, playerName);
	strmid(NamePlayer[playerid], playerName, 0, strlen(playerName), 31);
	SendSucc(playerid, "Пропишите новый ник в окне SA-MP");
	if(GetPVarInt(playerid,"grand_fix"))
	{
		p_info[playerid][pRouble] -= 20;
		UpdatePlayerData(playerid,"pRouble",p_info[playerid][pRouble]);
		DeletePVar(playerid,"grand_fix");
	}

	DeletePVar(playerid,"WantNickChange");
	return 1;
}

stock UpdateStoreGang(fracid)
{
	if(	fracid != F_LCN && fracid != F_YAKYZA && fracid != F_RM &&
		fracid != F_BALLAS && fracid != F_VAGOS && fracid != F_GROVE && fracid != F_AZTECAS && fracid != F_RIFA && fracid != F_T_ANGEL) return 1;

	if(IsValidDynamic3DTextLabel(frac_text[fracid]))
	{
		stringer[0] = EOS;
		
		switch(fracid)
		{
		    case F_LCN, F_YAKYZA, F_RM:
		    {
		        new mafia_biz_count;
				for(new i; i < sizeof(Business); i++)
				{
				    if(Business[i][Mafia] == fracid) mafia_biz_count++;
				}
		        format(stringer,500,""nwhite"Бизнесов захвачено: "newgreen"%d\n\n\n\n{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d $",
				mafia_biz_count, fraction_color[fracid] >>> 8, f_info[fracid][f_name],frac_drugs[fracid],frac_patron[fracid],frac_metall[fracid],frac_money[fracid]);
		    }
		    case F_BALLAS, F_VAGOS, F_GROVE, F_AZTECAS, F_RIFA:
		    {
		        format(stringer,500,""nwhite"Территорий под контролем: "newgreen"%d\n\n\n\n{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d $",
				VladGzone[fracid], fraction_color[fracid] >>> 8, f_info[fracid][f_name],frac_drugs[fracid],frac_patron[fracid],frac_metall[fracid],frac_money[fracid]);
		    }
			default:
			{
			    format(stringer,500,"{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d $",
				fraction_color[fracid] >>> 8, f_info[fracid][f_name],frac_drugs[fracid],frac_patron[fracid],frac_metall[fracid],frac_money[fracid]);
			}
		}
		UpdateDynamic3DTextLabelText(frac_text[fracid], -1, stringer);
	}

	return 1;
}

stock GangMenu(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	else if(!gSkladStatus[p_info[playerid][tMember]]) return SendInf(playerid, "Склад закрыт");
	ShowPlayerDialog(playerid,7171,DIALOG_STYLE_LIST,GANG_TEXT,"Далее","Закрыть");
	return 1;
}

stock StartWork(playerid)
{
	if(	p_info[playerid][tMember] == 1 || p_info[playerid][tMember] == 2 || p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 4 ||
		p_info[playerid][tMember] == 7 || p_info[playerid][tMember] == 8 || p_info[playerid][tMember] == 9 || p_info[playerid][tMember] == 10 ||
		p_info[playerid][tMember] == 11 || p_info[playerid][tMember] == 16 || p_info[playerid][tMember] == 19 || p_info[playerid][tMember] == 21 ||
		p_info[playerid][tMember] == 25 || p_info[playerid][tMember] == 26) return 1;
	return 0;
}

Load3DTexts()
{
	CreateDynamic3DTextLabel("Банковские услуги",CYELLOW,1458.8053,-989.2756,26.8469+0.8,1.0);
	CreateDynamic3DTextLabel("Банковские услуги",CYELLOW,1464.1646,-989.1686,26.8469+0.8,1.0);
	CreateDynamic3DTextLabel("Банковские услуги",CYELLOW,1469.1760,-989.1324,26.8469+0.8,1.0);
	CreateDynamic3DTextLabel("Банковские услуги",CYELLOW,1470.7837,-992.9596,26.8469+0.8,1.0);
	CreateDynamic3DTextLabel("Банковские услуги",CYELLOW,1470.6204,-998.3475,26.8469+0.8,1.0);
	CreateDynamic3DTextLabel("Банковские услуги",CYELLOW,1470.7555,-1004.9711,26.8469+0.8,1.0);
	//
	CreateDynamic3DTextLabel("Мэрия\nг.Лас-Вентурас",CYELLOW,2388.9980,2466.0649,12.3721,9.0);
	CreateDynamic3DTextLabel("Мэрия\nг.Сан-Фиерро",CYELLOW,-2765.9304,375.5050,7.6803,9.0);
	CreateDynamic3DTextLabel("Мэрия\nг.Лос-Сантос",CYELLOW,1480.9784,-1772.2068,18.7958+0.8,10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("Помощь",CBLUE,1482.8124,-2302.6489,13.6459+0.8,10.0);
	CreateDynamic3DTextLabel("ЗАПИСЬ НА ПЕЙНТБОЛ", CORANGE, 2693.9631,-1708.9209,11.8478, 25.0);
	CreateDynamic3DTextLabel("'Закупка наркотиков'",CBLUE,324.0889,1123.0233,1083.8828,10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("ЗАПИСЬ НА ПЕЙНТБОЛ", CORANGE, 2693.9631,-1708.9209,11.8478, 25.0);
	CreateDynamic3DTextLabel("Костюмы",CBLUE,-1988.5321,1112.6732,54.4794,10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	///CreateDynamic3DTextLabel("CAR SHOP\nclass: Nope", 0xFF0000FF,556.5716,-1292.6392,17.2482+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	///CreateDynamic3DTextLabel("CAR SHOP\nclass: C&D", 0xFF0000FF,-1951.2544,293.6375,35.4688+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	//CreateDynamic3DTextLabel("CAR SHOP\nclass: A&B", 0xFF0000FF,-1657.7015,1210.2267,7.2500+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	///CreateDynamic3DTextLabel("CAR SHOP\nclass: A&B", 0xFF0000FF,2200.8857,1394.2892,11.0625+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);



	CreateDynamic3DTextLabel("Чтобы воспользоваться лифтом, посигнальте",0xFF6600FF,-2440.8933,528.3586,29.9144,20.0);//fbi
	CreateDynamic3DTextLabel("Чтобы воспользоваться лифтом, посигнальте",0xFF6600FF,-2535.2244,504.4874,-10.8553,20.0);//fbi
	CreateDynamic3DTextLabel("~~~~~~~~~~~~~~~~~\nПриём на\nработу\n~~~~~~~~~~~~~~~~~",CYELLOW,359.8466,184.7337,1008.3828,10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("~~~~~~~~~~~~~~~\nРазгрузочная\nзона\n~~~~~~~~~~~~~~~",CGREEN,334.9307,1962.9658,17.6406,10.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel( "Взлома сейфа\n{FF0000}/robbank", CYELLOW, 2147.2971,1637.2709,993.5759, 16.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,3);
	CreateDynamic3DTextLabel( "Электропитание\n{FF0000}/light", CYELLOW, 2143.0061,1620.307,1000.969, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,3);
	CreateDynamic3DTextLabel( "Взлома двери\n{FF0000}/bankdoor", CYELLOW, 2144.178,1627.082,994.2620, 13.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,3);

	CreateDynamic3DTextLabel( "Чтобы выйти через черный выход\n{FF0000}нажмите ALT", CYELLOW,2129.9822,1626.2155,993.6882,18.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,3);

	CreateDynamic3DTextLabel("Экипировка",0xFFA500FF,1648.8259,-1626.5962,1583.8660 + 0.8,3.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID);

	frac_text[7] = CreateDynamic3DTextLabel("{"#cWHITE"}Казна штата: {ffff00}176608243$\n{"#cWHITE"}Налог государства: {ffff00}2500$", -1, 2319.3420,-2010.0050,-37.7740+0.8, 3.0);
	//
	new act_str[5+10+5]="\n";
	for new at=MAX_NPC_BOT;at;at-- do
	{
	    if(at==20) continue;
		format(act_str,5+10+5,"\n\n%s (%i)",bot_message[at][0],at);
		bot_text[at]=CreateDynamic3DTextLabel(act_str,-1,bot_pos[at][0],bot_pos[at][1],bot_pos[at][2]+1.2,5.8);
		bot_id[at]=CreateActor(bot_data_[at][0],bot_pos[at][0],bot_pos[at][1],bot_pos[at][2]+0.5,bot_pos[at][3]);
		SetActorVirtualWorld(bot_id[at],bot_data_[at][1]);
		bot_area[at]=CreateDynamicSphere(bot_pos[at][0],bot_pos[at][1],bot_pos[at][2], 1.5,bot_data_[at][1]);
	}
}
stock FreezePlayerForTime(playerid,time){
	AC_TogglePlayerControllable(playerid,0);
	return SetTimerEx( "FreezeUnfreezeTimer", time, 0, "i", playerid );
}


forward FreezeUnfreezeTimer(playerid);
public FreezeUnfreezeTimer(playerid) {
	return AC_TogglePlayerControllable(playerid, 1);
}




forward ClearAnim(playerid);
public ClearAnim(playerid)
{
	FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
	return 1;
}


forward Check_Ban_List(playerid,Name_Player[],Number_Ban);
public Check_Ban_List(playerid,Name_Player[],Number_Ban)
{
	new ADMIN_ISSUING_BAN[24], NAME_PLAYER[24], BAN_DATA[32], UNBAN_DATA, REASON_FOR_THE_BAN[50];
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		print ("cache_get_field_content_int [ Check_Ban_List ]");
		cache_get_value(0, "Name_Admin",ADMIN_ISSUING_BAN,24);
		cache_get_value(0, "Name_Player",NAME_PLAYER,24);
		cache_get_value(0, "Ban_Data",BAN_DATA,32);
		cache_get_value(0, "Ban_Reason",REASON_FOR_THE_BAN,50);
		cache_get_value_int(0, "Unban_Data",UNBAN_DATA);
		if(UNBAN_DATA > unix)
		{
			format(stringer,144,"Аккаунт: {"#cWHITE"}%s",Name_Player);
			SendClientMessage(playerid,0xFF6347FF,stringer);
			format(stringer,144,"Дата блокировки: {"#cWHITE"}%s",BAN_DATA);
			SendClientMessage(playerid,0xFF6347FF,stringer);
			format(stringer,144,"Администратор: {"#cWHITE"}%s",ADMIN_ISSUING_BAN);
			SendClientMessage(playerid,0xFF6347FF,stringer);
			format(stringer,144,"Причина: {"#cWHITE"}%s",REASON_FOR_THE_BAN);
			SendClientMessage(playerid,0xFF6347FF,stringer);
			new days, date_ban[6];
			timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);
			format(stringer, 144, "Дата разблокировки: {"#cWHITE"}%02d/%02d/%02d %02d:%02d:%02d (%d дней)",date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5],days);
			SendClientMessage(playerid,0xFF6347FF,stringer);
			if(Number_Ban == 2)
			{
				KickEx(playerid);
			}
			return 1;
		}
		else
		{
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "DELETE FROM `table_ban` WHERE `Name_Player` = '%s'",Name_Player);
			mysql_pquery(connects, mysql_query_string, "","");
			SetPVarInt(playerid,"table_ban",1);
			//OnPlayerLoginned(playerid);
			return 1;
		}
	}
	else
	{
		if(Number_Ban == 1) return SendErr(playerid, "Игрок не был заблокирован");
		SetPVarInt(playerid,"table_ban",1);
		//OnPlayerLoginned(playerid);
	}
	return 1;
}

IsPlayerInRangeOfPlayer(Float:f_Radius, playerid, targetid)
{
	new	Float: f_playerPos[3];
	GetPlayerPos(targetid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);
	if(IsPlayerInRangeOfPoint(playerid, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}



stock NextCar(playerid)
{
	if(p_info[playerid][SalonInfo][1] > unix) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto") +1);
	switch(GetPVarInt(playerid,"AutoShop"))
	{
		case 1:if(GetPVarInt(playerid, "SelectAvto") >= sizeof(class_economy)) SetPVarInt(playerid, "SelectAvto", 0);
		case 2:if(GetPVarInt(playerid, "SelectAvto") >= sizeof(class_standart)) SetPVarInt(playerid, "SelectAvto", 0);
		case 3:if(GetPVarInt(playerid, "SelectAvto") >= sizeof(class_sport)) SetPVarInt(playerid, "SelectAvto", 0);
		case 4:if(GetPVarInt(playerid, "SelectAvto") >= sizeof(class_moto)) SetPVarInt(playerid, "SelectAvto", 0);
	}
	///format(stringer, 128, "GetPVarInt(playerid, \"SelectAvto\"): %d", GetPVarInt(playerid, "SelectAvto"));
	///SendClientMessage(playerid,-1,stringer);
	return ShowingCar(playerid);
}

stock BackCar(playerid)
{
	if(p_info[playerid][SalonInfo][1] > unix) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto")-1);
	if(GetPVarInt(playerid, "SelectAvto") <= 0)
	{
		switch(GetPVarInt(playerid,"AutoShop"))
		{
			case 1: SetPVarInt(playerid, "SelectAvto", sizeof(class_economy)-1);
			case 2: SetPVarInt(playerid, "SelectAvto", sizeof(class_standart)-1);
			case 3: SetPVarInt(playerid, "SelectAvto", sizeof(class_sport)-1);
			case 4: SetPVarInt(playerid, "SelectAvto", sizeof(class_moto)-1);
		}
		//format(stringer, 128, "GetPVarInt(playerid, \"SelectAvto\"): %d", GetPVarInt(playerid, "SelectAvto"));
		///SendClientMessage(playerid,-1,stringer);
	}
	return ShowingCar(playerid);
}

forward ShowingCar(playerid);
public ShowingCar(playerid)
{
	if(p_info[playerid][SalonInfo][0] != INVALID_VEHICLE_ID) DestroyVehicleOP(p_info[playerid][SalonInfo][0]);
	if(GetPVarInt(playerid, "SelectAvto") < 0) DeletePVar(playerid, "SelectAvto");
	new model = -1;
	switch(GetPVarInt(playerid,"AutoShop"))
	{
		case 1: model = class_economy[GetPVarInt(playerid, "SelectAvto")];
		case 2: model = class_standart[GetPVarInt(playerid, "SelectAvto")];
		case 3: model = class_sport[GetPVarInt(playerid, "SelectAvto")];
		case 4: model = class_moto[GetPVarInt(playerid, "SelectAvto")];
	}
	//format(stringer, 128, "model: %d", model);
	//SendClientMessage(playerid,-1,stringer);
	if ( model == -1 ) return SendClientMessage(playerid,CGRAY,"Ошибка #111");
	p_info[playerid][SalonInfo][0] = CreateVehicleOP(gTransport[model][trModel],-1483.3947,1570.7538,1052.3287,339.4657,1,1,600_000);
	AC_LinkVehicleToInterior(p_info[playerid][SalonInfo][0],GetPlayerInterior(playerid));
	AC_SetVehicleVirtualWorld(p_info[playerid][SalonInfo][0],GetPlayerVirtualWorld(playerid));
	AC_PutPlayerInVehicle(playerid, p_info[playerid][SalonInfo][0], 0);
	SetPlayerCameraPos(playerid,-1478.676025, 1576.264038, 1055.342529);
	SetPlayerCameraLookAt(playerid,-1482.619384, 1573.748657, 1053.575439);
	SetPVarInt(playerid,"BuyColor",-1);
	SetPVarInt(playerid,"BuyColor1",-1);
	new classname[12];
	switch(gTransport[model][trClass])
	{
		case 0: strcat(classname,"economy");
		case 1: strcat(classname,"standart");
		case 2: strcat(classname,"sport");
		case 3: strcat(classname,"moto");
	}
	format(stringer,120,"~b~%s~n~~g~CLASS:_~w~%s~n~~g~PRICE:_~w~$%d~n~~g~TANK:~w~_%dL~n~~g~CONS.:_~w~%dL/1000KM",gTransport[model][trName],classname,gTransport[model][trPrice],gTransport[model][trTank],gTransport[model][trConsumption]);
	PlayerTextDrawSetString(playerid,ShopText[playerid],stringer);
	p_info[playerid][SalonInfo][1] = unix + 1;
	return 1;
}



stock NextColor(playerid,whocolor)
{
	if(whocolor == 0)SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")+1);
	else SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")+1);
	if(GetPVarInt(playerid,"BuyColor") >= 126) DeletePVar(playerid, "BuyColor");
	if(GetPVarInt(playerid,"BuyColor1") >= 126) DeletePVar(playerid, "BuyColor1");
	ChangeVehicleColor(p_info[playerid][SalonInfo][0],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	return 1;
}

stock BackColor(playerid,whocolor)
{
	if(whocolor == 0)SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")-1);
	else SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")-1);
	if(GetPVarInt(playerid,"BuyColor") <= 0) SetPVarInt(playerid,"BuyColor",126);
	if(GetPVarInt(playerid,"BuyColor1") <= 0) SetPVarInt(playerid,"BuyColor1",126);
	ChangeVehicleColor(p_info[playerid][SalonInfo][0], GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	return 1;
}



stock ShowBuyCar(playerid)
{
	SetPVarInt(playerid, "SelectAvto", 0);
	SetPlayerVirtualWorld(playerid,playerid + 1);
	SetPlayerInterior(playerid,14);

	AC_SetPlayerPos(playerid, -1484.0374,1559.3668,1052.5313);
	SetPlayerFacingAngle(playerid, 121.9969);

	AC_TogglePlayerControllable(playerid,0);

	InterpolateCameraPos(playerid, -1468.189086, 1575.638183, 1056.487304, -1478.676025, 1576.264038, 1055.342529, 3000);
	InterpolateCameraLookAt(playerid, -1470.962890, 1571.708984, 1055.120849, -1482.619384, 1573.748657, 1053.575439, 3000);

	SetTimerEx("ShowBuyCar2", 3000 + GetPlayerPing(playerid), 0, "i", playerid);
	return 1;
}

forward ShowBuyCar2(playerid);
public ShowBuyCar2(playerid)
{
	PlayerTextDrawShow(playerid, ShopText[playerid]);
	for(new x = 0; x < 9; x++) TextDrawShowForPlayer(playerid, AutoShopText[x]);
	SelectTextDraw(playerid, 0x0080FFFF);
	SetTimerEx("ShowingCar", 50 + GetPlayerPing(playerid), 0, "i", playerid);
	return 1;
}

stock ExitCar(playerid)
{
	for(new x; x < 9; x++) TextDrawHideForPlayer(playerid, AutoShopText[x]);
	PlayerTextDrawHide(playerid, ShopText[playerid]);
	if(p_info[playerid][SalonInfo][0] != INVALID_VEHICLE_ID) DestroyVehicleOP(p_info[playerid][SalonInfo][0]);
	p_info[playerid][SalonInfo][0] = INVALID_VEHICLE_ID;
	CancelSelectTextDraw(playerid);
	AC_TogglePlayerControllable(playerid,1);
	switch(GetPVarInt(playerid,"AutoShop"))
	{
		case 1: AC_SetPlayerPos(playerid,555.1915,-1293.4724,17.2482);
		case 2: AC_SetPlayerPos(playerid,-1955.4077,296.6946,35.4688);
		case 3: AC_SetPlayerPos(playerid,1658.9636,2198.3733,10.8203);
		case 4: AC_SetPlayerPos(playerid,2131.2488,-1149.5587,24.2475);
	}
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerFacingAngle(playerid,0);
	SetCameraBehindPlayer(playerid);
	DeletePVar(playerid, "AutoShop");
	SetPVarInt(playerid, "SelectAvto",-1);
	SetPVarInt(playerid, "FiveSecound", 5);
	return 1;
}

stock GetWeaponSlotEx(weaponid)
{
	new id;
	switch(weaponid)
	{
		case 0..1: id = 0;
		case 2..9: id = 1;
		case 22..24: id = 2;
		case 25..27: id = 3;
		case 28, 29, 32: id = 4;
		case 30, 31: id = 5;
		case 33, 34: id = 6;
		case 35..38: id = 7;
		case 16..18, 39: id = 8;
		case 41..43: id = 9;
		case 10..15: id = 10;
		case 44..46: id = 11;
		case 40: id = 12;
		default: id = -1;
	}
	return id;
}

stock ToDevelopSkills(Slashes,Points)
{
	new strign[149];
	new Slash[2] = "|";
	new Point[2] = ".";
	for(new i = 0; i < Slashes; i++) strcat(strign, Slash);
	for(new i = 0; i < Points; i++) strcat(strign, Point);
	return strign;
}

stock GetMN(fraca)
{
	new mafianame[24];
	switch(fraca)
	{
			case 6: mafianame = "Yakuza";
			case 14: mafianame = "Russian Mafia";
			case 5: mafianame = "LCN";
			case 24: mafianame = "Demon's MC";
	}
	return mafianame;
}

stock GetColor(fraca)
{
	switch(fraca)
	{
			case 6: return 0xFF000040;
			case 14: return 0x26262640;
			case 5: return 0xDDA70140;
	}
	return 1;
}



public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	if(GetPVarInt(playerid,"orcp") > 0)
	{
		new i = GetPVarInt(playerid,"orcp") - 1;
		if(checkpointid == orcp[i])
		{
			if(StepPlayer[playerid][0] != -1)
			{
				SendClientMessage(playerid,COLOR_GREY,"Сеанс стрельбы окончен. Приходите еще.");
				AC_ResetPlayerWeapons(playerid);
			}
			iait[i][GetPlayerVirtualWorld(playerid)] = false;
			UpdateShootPlace(i,GetPlayerVirtualWorld(playerid) - 1);
			drop_or(playerid);
			DeletePVar(playerid,"orcp");
		}
	}
	return 1;
}

CMD:debug_damage(playerid)
{
	ShowDebugTakeDamage[playerid] = (ShowDebugTakeDamage[playerid]==1)?(0):(1);
	SCM(playerid,-1,(ShowDebugTakeDamage[playerid]==1)?("Включен дебаг: OnPlayerTakeDamage"):("Отключен дебаг: OnPlayerTakeDamage"));
	return true;
}


forward UpdatePingBots(playerid);
public UpdatePingBots(playerid)
{
	//SetPlayerFakePing ( playerid, 20 + random ( 80 ) );
	return true;
}



stock SetPlayerDataToDefault(playerid)
{
	p_info[playerid][pFeFinder] = 0;
	p_info[playerid][pNewYear] = 0;
	if(IsValidDynamicObject(p_info[playerid][pC4])) DestroyDynamicObject(p_info[playerid][pC4]);
    p_info[playerid][pC4] = INVALID_OBJECT;
	online_player[playerid][0] = 0;
	online_player[playerid][1] = 0;
	online_player[playerid][2] = 0;
 	online_player_afk[playerid][0] = 0;
	online_player_afk[playerid][1] = 0;
	online_player_afk[playerid][2] = 0;
    engine_nulled[playerid] = 0;
	for(new a = 0; a < MAX_BANK_ACCOUNTS; a++)
	{
		gBankInfo[playerid][b_acc_number][a] = -1;
		gBankInfo[playerid][b_acc_money][a] = 0;
	}
	for(new a = 0; a < MAX_CONTRIBUTIONS; a++)
	{
		gBankInfo[playerid][cb_id][a] = -1;
		gBankInfo[playerid][cb_money][a] = 0;
		gBankInfo[playerid][cb_days][a] = 0;
		gBankInfo[playerid][cb_unixtime][a] = 0;
		gBankInfo[playerid][cb_percent][a] = 0.0;
	}
	p_info[playerid][pEat] = 0;
	Casino_Flag[playerid][select_casino_table] = -1;
	Casino_Flag[playerid][casino_crup] = 0;
	Casino_Flag[playerid][casino_bet_cash] = 0;
	// SetPlayerAuthorized(playerid, PLAYER_OFFLINE);
	fixable_timer[playerid][0] = unix;
	fixable_timer[playerid][1] = INVALID_PLAYER_ID;
	p_info[playerid][pHeadValue] = 0;
	p_info[playerid][pContractDetail] = 0;
	p_info[playerid][pContractBy] = 0;
	p_info[playerid][pCHits] = 0;
	p_info[playerid][pFHits] = 0;
	GotHit[playerid]=0;
	GoChase[playerid]= INVALID_PLAYER_ID;
	GetChased[playerid]= INVALID_PLAYER_ID;
	HitOffer[playerid]= INVALID_PLAYER_ID;
	HitToGet[playerid]= INVALID_PLAYER_ID;
	for(new b = 0; b < MAX_BUSINESS; b++) player_enter_price[playerid][b]=false;
	for(new j = 0; j < MAX_CREATE_OBJECT_PLAYER; j++) objects_player_create[playerid][j] = -1;
	advert_count[playerid] = 0;
	RuletTip[playerid] 	=	0;
	RuletSum[playerid] 	=	0;
	chose_player[playerid]=false;
	///gBankMysqlID[playerid]                          = -1;
	passport_show[playerid]                         = false;
	QuestStep[0][playerid]                          = 0;
	QuestStep[1][playerid]                          = 0;
	QuestStep[2][playerid]                          = 0;
	QuestStep[3][playerid]                          = 0;
	QuestStep[4][playerid]                          = 0;
	QuestStep[5][playerid]                          = 0;
	LoadBookID[playerid][0]                         = 0;
	LoadBookID[playerid][1]                         = 0;
	LoadBookID[playerid][2]                         = 0;
	LoadBookID[playerid][3]                         = 0;
	LoadBookID[playerid][4]                         = 0;
	p_info[playerid][pSpining] 						= 0;
	p_info[playerid][pWorms] 						= 0;
	Fishing[playerid] 							= false;
	for(new i;i < 5;i ++) PlayerFish[playerid][i] 				= 0;
	SelectLowride[playerid][0] = -1;
	SelectLowride[playerid][1] = 0;
	SelectLowride[playerid][2] = 0;
	SelectLowride[playerid][3] = 0;
	SelectLowride[playerid][4] = 0;
	lowrideArrow[playerid][0] = PlayerText:-1;
	lowrideArrow[playerid][1] = PlayerText:-1;
	lowrideArrow[playerid][2] = PlayerText:-1;
	lowrideCarToSelect[playerid] = PlayerText:-1;


	p_info[playerid][pCalling]    = -1;
	SelectCarToTune [ playerid ] = -1;
	step_cppd[playerid] = 0;
	p_info[playerid][pLastTick_A] = 0;
	//PlayerEx[playerid][pSpawnEx] = false;
	p_info[playerid][pAbletoTP2] = false;
	//p_info[playerid][pAFK] = 0;
	//p_info[playerid][pDarkAFK] = 0;
	//p_info[playerid][pIsAFK] = false;
	p_info[playerid][pX] = 0.0;
	p_info[playerid][pY] = 0.0;
	p_info[playerid][pZ] = 0.0;
	p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
	show_info_band[playerid] = false;
	show_info_mafia[playerid] = false;
	GangInfo_P_TD[playerid][0] = PlayerText:-1;
	GangInfo_P_TD[playerid][1] = PlayerText:-1;
	//Count_Slot_Player_Object[playerid] = 0;
	//for(new i = 0; i < 120; i++) gPlayerObject[playerid][i] = 0;
	IDGZ[playerid] = -1;
	FZ_TDP[playerid] = PlayerText:-1;
	FZ_TDP_Timer[playerid] = -1;
	IsAUseDonate[playerid][0] = false;
	IsAUseDonate[playerid][1] = false;
	//PlayerCounter[playerid] = 0;
	PlayerTimerBolk[playerid] = 0;
	MyBed[playerid] = 255;
	//g_bot_timer[playerid] = -1;
	//Player_BA[playerid] = -1;
	p_info [ playerid ] [ p_car_fuel ][ 0 ] = 0.0;
	p_info [ playerid ] [ p_car_fuel ][ 1 ] = 0.0;
	Errors_AU[playerid] = 0;
	////for(new i=0; i<19; i++) prn_player_data[playerid][i]=0;
	veh_pos_load__Step[playerid] = 0;
	Reason__[playerid][0] = EOS;
	Reason__Count[playerid] = 0;
	TimeWithDeath[playerid] = 0;
	ShowDebugTakeDamage[playerid] = 0;
	for(new s=0;s<10;s++) GunTickGet[playerid][s]=0;
	damage_text[playerid]=Text3D:-1;
	gDeathDataIntVW[playerid][0]=0;
	gDeathDataIntVW[playerid][1]=0;
	for(new i = 0; i < MAX_DAMAGES_STRING; i++)
	{
		if(gDamagesData[playerid][i][gdBody]==-1) continue;
		gDamagesData[playerid][i][gdBody] = -1;
		gDamagesData[playerid][i][gdTime] = 0;
		gDamagesData[playerid][i][gdGun] = 0;
		gDamagesData[playerid][i][gdDamage] = 0.0;
		gDamagesData[playerid][i][gdNameDamages][0] = EOS;
		gDamagesData[playerid][i][gdNameID] = 0;
	}
	gKilledWithAntiDeath[playerid]=0;
	AntiSlivTime[playerid]=0;
	AntiSlivCount[playerid]=0;
	Select_Football_Team[playerid]=-1;
	Select_Football_Position[playerid]=-1;
	gAdmin[playerid][8] = 0;
	gAdmin[playerid][9] = 0;
	gAdmin[playerid][10] = 0;
	gAdmin[playerid][11] = 0;
	SurfPlayerUse[playerid] = -1;
	listen_surf[playerid][0] = 0;
	listen_surf[playerid][1] = 0;
	SurfPlayerUseSlot[playerid]=-1;
	OffTime[playerid]=false;
	for(new i=0;i<6;i++)LastSurfPos[playerid][i]=0.0;
	SurfPlayerUse[playerid] = -1;
	DrugPrice[playerid] = 0;
	DrugGram[playerid] = 0;
	DrugOffer[playerid] = -1;
	playerText_ame_Action[playerid][0] = Text3D:-1;
	playerText_ame_Action[playerid][1] = Text3D:-1;
	if(active_time[playerid] != -1)
	{
		KillTimer(active_time[playerid]);
		active_time[playerid] = -1;
	}
	Targetplayer[playerid] = -1;
	for(new ac = 0; ac < 5; ac++)
	{
		acc_player[playerid][acc_object_id][ac] = -1;
		acc_player[playerid][acc_object_x][ac] 	= 0.0;
		acc_player[playerid][acc_object_y][ac] 	= 0.0;
		acc_player[playerid][acc_object_z][ac] 	= 0.0;
	}
	step_show_acc_box[playerid]=-1;
	count_acc_show[playerid]=0;

	//lda[playerid][last_damage_amount] 			= 0.0;
	//lda[playerid][last_damage_tick] 			= -1;
	//lda[playerid][last_damage_weaponid] 		= -1;

	OldTuningPos[playerid][0] 					= 0.0;
	OldTuningPos[playerid][1] 					= 0.0;
	OldTuningPos[playerid][2] 					= 0.0;
	OldTuningPos[playerid][3] 					= 0.0;
	OldTuningVI[playerid][0]                    = 0;
	OldTuningVI[playerid][1]                    = 0;

	LastTransmisSlot[playerid]                  = -1;
	speedTrans[playerid][0]                     = PlayerText:-1;
	speedTrans[playerid][1]                     = PlayerText:-1;
	speedTrans[playerid][2]                     = PlayerText:-1;
	speedTrans[playerid][3]                     = PlayerText:-1;
	speedTrans[playerid][4]                     = PlayerText:-1;
	speedTrans[playerid][5]                     = PlayerText:-1;
	speedTrans[playerid][6]                     = PlayerText:-1;
	speedMileage[playerid]                      = PlayerText:-1;
	speedHealth[playerid]                       = PlayerText:-1;
	speedFuel[playerid]                         = PlayerText:-1;
	speedDoors[playerid]                        = PlayerText:-1;
	speedEngine[playerid]                       = PlayerText:-1;
	speedSignalLeft[playerid]                   = PlayerText:-1;
	speedSignalRight[playerid]                  = PlayerText:-1;
	speedSignalLights[playerid]                 = PlayerText:-1;
	speedName[playerid]                         = PlayerText:-1;
	speedStick[playerid]                        = PlayerText:-1;
	speedInf[playerid]                          = PlayerText:-1;
	RenameTime[playerid]                        = -1;
	LastSpeed[playerid]                         = 0.0;
	ShowSpeed[playerid]                         = false;

	radar_object [ playerid ] [ 0 ] = INVALID_OBJECT ;
	radar_object [ playerid ] [ 1 ] = INVALID_OBJECT ;
	radar_object [ playerid ] [ 2 ] = INVALID_OBJECT ;
	radar_area [ playerid ] = -1 ;
	toogle_radar [ playerid ] = 0;

	TempTazerObject[playerid] = -1;
	pgunobject[playerid]=INVALID_OBJECT;
	ObjectShip[playerid] = INVALID_OBJECT;
	PlacedBB[playerid]=INVALID_OBJECT;

	AC_PlayerToggle[playerid]=1;
	AC_PlayerToggleTime[playerid]=0;
	AC_PlayerToggleUpdate[playerid]=0;

	SuperTick[playerid]=0;

	AC_VehicleTeleportToMe[playerid]=0;
	//AC_SpeedChange[playerid]=0;
	//AC_SpeedChangetime[playerid]=0;
	//AC_SPEEDGORKA[playerid]=0;

	ServerHP[playerid] = 100.0;

	Timer_OnShootingRangeMoved[playerid] = -1;

	StepPlayer[playerid][0] = -1;
	StepPlayer[playerid][1] = -1;

	for(new U=0; U!=5; U++)
	{
		for(new T=0; T!=6;T++)
		{
			object_range[playerid][U][T]=-1;
		}
	}

	blocktext[playerid] = Text3D:-1;

	br_player[playerid][br_flag]	|= 1 << 0;
	br_player[playerid][br_flag]	|= 1 << 1;
	br_player[playerid][br_flag]	|= 1 << 2;
	br_player[playerid][br_flag]	|= 1 << 3;

	br_player[playerid][br_object_text][0] = INVALID_OBJECT;
	br_player[playerid][br_object_text][1] = INVALID_OBJECT;

	for(new bs=0;bs<25;bs++) br_player[playerid][br_objects][bs]=INVALID_OBJECT;

	br_player[playerid][br_temp_pickup] = INVALID_OBJECT;

	m_members_timer [ playerid ] = 0;
	m_members_count [ playerid ] = 0;

	CameraFlag[playerid][0] 		|= 1 << 0;
	CameraFlag[playerid][0] 		|= 1 << 1;
	CameraFlag[playerid][0] 		|= 1 << 2;
	CameraFlag[playerid][0] 		|= 1 << 3;
	CameraFlag[playerid][0] 		|= 1 << 4;
	CameraFlag[playerid][1] 		= -1;
	CameraFlag[playerid][2] 		= 0;
	CameraFlag[playerid][3] 		= 0;

	CameraList[playerid][0] 		= PlayerText:-1;
	CameraList[playerid][1] 		= PlayerText:-1;
	CameraList[playerid][2] 		= PlayerText:-1;
	CameraList[playerid][3] 		= PlayerText:-1;
	CameraList[playerid][4] 		= PlayerText:-1;
	CameraList[playerid][5] 		= PlayerText:-1;

	OldCPPD[playerid][0]			= 0.0;
	OldCPPD[playerid][1] 			= 0.0;
	OldCPPD[playerid][2] 			= 0.0;

	gPlayerProdText[playerid][0]	= Text3D:-1;
	gPlayerProdText[playerid][1]	= Text3D:-1;
	gPlayerProdCP[playerid]			= -1;
	start_work[playerid]            = 0;

	for ( new i = 0; i <= 25; i ++ )
	{
		bl_info [ playerid ][ bl_fraction ] [ i ] = false;
	}


	SetPVarInt(playerid, "FiveSecound", 0);

	UsingShield[playerid] = false;
	p_info[playerid][pOnline]=false;
	walk_goto_me[playerid]=0;
	pStoreGun[playerid]=0;
	pSelectStoreGun[playerid]=false;
	gAdminTime[playerid]=0;
	p_info[playerid][pTimeAFK] = 0;
	/*for(new i=0; i<5; i++)
	{
		gBankCheck[playerid][i]=false;
	}*/
	for(new weaponid = 0; weaponid < 47; weaponid++)
	{
		PlayerWeapon[playerid][weaponid] = 0;
	}
	/*for(new slot = 0; slot < MAX_PLAYER_ATTACHED_OBJECTS; slot++)
	{
			GP_AO[playerid][slot][g_modelid] 	= 0;
			GP_AO[playerid][slot][g_boneid] 	= 0;
			GP_AO[playerid][slot][g_fOffsetX] 	= 0.0;
			GP_AO[playerid][slot][g_fOffsetY] 	= 0.0;
			GP_AO[playerid][slot][g_fOffsetZ] 	= 0.0;
			GP_AO[playerid][slot][g_fRotX] 		= 0.0;
			GP_AO[playerid][slot][g_fRotY] 		= 0.0;
			GP_AO[playerid][slot][g_fRotZ] 		= 0.0;
			GP_AO[playerid][slot][g_fScaleX] 	= 0.0;
			GP_AO[playerid][slot][g_fScaleY] 	= 0.0;
			GP_AO[playerid][slot][g_fScaleZ] 	= 0.0;
	}*/
	strmid(Email[playerid],"",0,strlen(Email[playerid]),64+1);
	//
	strmid(pNiksHistory[playerid][0],"",0,strlen(pNiksHistory[playerid][0]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][1],"",0,strlen(pNiksHistory[playerid][1]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][2],"",0,strlen(pNiksHistory[playerid][2]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][3],"",0,strlen(pNiksHistory[playerid][3]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][4],"",0,strlen(pNiksHistory[playerid][4]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][5],"",0,strlen(pNiksHistory[playerid][5]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][6],"",0,strlen(pNiksHistory[playerid][6]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][7],"",0,strlen(pNiksHistory[playerid][7]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][8],"",0,strlen(pNiksHistory[playerid][8]),MAX_PLAYER_NAME);
	strmid(pNiksHistory[playerid][9],"",0,strlen(pNiksHistory[playerid][9]),MAX_PLAYER_NAME);
	//
	p_info[ playerid ] [ p_f_mute ] = 0 ;

	p_info[playerid][pID] = 0;
	p_info[playerid][pCheckKey] = 0;
	p_info[playerid][pMed] = 0;
	p_info[playerid][pFamily] = 0;
	p_info[playerid][pSpawn] = 0;
	p_info[playerid][pRouble] = 0;
	p_info[playerid][pTempKey] = 0;
	p_info[playerid][pReg] = 0;
	p_info[playerid][pPoint] = 0;
	p_info[playerid][pLevel] = 0;
	p_info[playerid][pAdmin] = 0;
	gAdmin[playerid][6]=0;
	gAdmin[playerid][7]=0;
	p_info[playerid][pAvig] = 0;
	p_info[playerid][pProz] = 0;
	p_info[playerid][pProz2] = 0;
	p_info[playerid][pDonateRank] = 0;
	p_info[playerid][tDonatemoney2] = 0;
	p_info[playerid][pMats] = 0;
	p_info[playerid][pPatron] = 0;
	p_info[playerid][pSex] = 0;
	p_info[playerid][pExp] = 0;
	p_info[playerid][pCash] = 0;
	p_info[playerid][pKills] = 0;
	p_info[playerid][pJailTime] = 0;
	p_info[playerid][pDrugs] = 0;
	p_info[playerid][tLeader] = 0;
	p_info[playerid][pSubLeader] = 0;
	p_info[playerid][tMember] = 0;
	p_info[playerid][tRank] = 0;
	p_info[playerid][pChar] = 0;
	p_info[playerid][pJob] = 0;
	p_info[playerid][pModel] = 0;
	p_info[playerid][pPnumber] = 0;
	p_info[playerid][tHelper] = 0;
	p_info[playerid][pHouse] = 0;
	p_info[playerid][pPbiskey] = 0;
	p_info[playerid][pZakonp] = 0;
	p_info[playerid][pGunSkill][0] = 0;
	p_info[playerid][pGunSkill][1] = 0;
	p_info[playerid][pGunSkill][2] = 0;
	p_info[playerid][pGunSkill][3] = 0;
	p_info[playerid][pGunSkill][4] = 0;
	p_info[playerid][pGunSkill][5] = 0;
	p_info[playerid][pPayDayHad] = 0;
	p_info[playerid][pWarns] = 0;
	p_info[playerid][punWarnstime] = 0;

	p_info[playerid][pMuteTime] = 0;
	//p_info[playerid][pBank] = 0;
	p_info[playerid][pMobile] = 0;
	p_info[playerid][pWanted] = 0;
	p_info[playerid][pVerevka] = 0;
	p_info[playerid][pOtmbI4ka] = 0;
	p_info[playerid][pTime] = 0;
	p_info[playerid][pAFK] = unix;
	p_info[playerid][pVipCar] = 0;
	p_info[playerid][pRoom] = 0;
	p_info[playerid][pFloor] = 0;
	p_info[playerid][pMestoJail] = 0;
	p_info[playerid][pModelPhone] = 0;
	p_info[playerid][pNation] = 0;
	p_info[playerid][pAge] = 0;
	p_info[playerid][pSalary] = 0;
	p_info[playerid][Disease][0] = 0;
	p_info[playerid][Disease][1] = 0;
	p_info[playerid][Disease][2] = 0;
	p_info[playerid][pStats][1] = 0;
	p_info[playerid][pStats][2] = 0;
	p_info[playerid][P_Style][0] = 0;
	p_info[playerid][P_Style][1] = 0;
	p_info[playerid][P_Style][2] = 0;
	p_info[playerid][p_veh_number][0] = -1;
	p_info[playerid][p_veh_number][1] = -1;
	p_info[playerid][SalonInfo][0] = INVALID_VEHICLE_ID;
	p_info[playerid][SalonInfo][1] = unix;
	p_info[playerid][pSetWalk] = 0;
	p_info[playerid][pSetAnim] = 0;
	//
	for(new i = 0; i < 4; i++) HelperStat[playerid][i] = 0;
	for(new i = 0; i < 4; i++) Lic[playerid][i] = 0;
	for(new car = 0; car < MAX_PLAYER_CAR; car++)
	{
		PlayerCar[playerid][car] = 462;
	}

	for(new D = 0; D != 2; D++)
	{
		gPlayerTuning[playerid][D][0]  = 1;
		gPlayerTuning[playerid][D][1]  = 255;
		gPlayerTuning[playerid][D][2]  = -1;
		gPlayerTuning[playerid][D][3]  = -1;
		gPlayerTuning[playerid][D][4]  = -1;
		gPlayerTuning[playerid][D][5]  = -1;
		gPlayerTuning[playerid][D][6]  = -1;
		gPlayerTuning[playerid][D][7]  = -1;
		gPlayerTuning[playerid][D][8]  = -1;
		gPlayerTuning[playerid][D][9]  = -1;
		gPlayerTuning[playerid][D][10] = -1;
		gPlayerTuning[playerid][D][11] = -1;
		//-------------------------------
		TempTuningPlayer[playerid][D][0]  = -1;
		TempTuningPlayer[playerid][D][1]  = -1;
		TempTuningPlayer[playerid][D][2]  = -1;
		TempTuningPlayer[playerid][D][3]  = -1;
		TempTuningPlayer[playerid][D][4]  = -1;
		TempTuningPlayer[playerid][D][5]  = -1;
		TempTuningPlayer[playerid][D][6]  = -1;
		TempTuningPlayer[playerid][D][7]  = -1;
		TempTuningPlayer[playerid][D][8]  = -1;
		TempTuningPlayer[playerid][D][9]  = -1;
		TempTuningPlayer[playerid][D][10] = -1;
		TempTuningPlayer[playerid][D][11] = -1;
	}

	AC_Healthtime[playerid]=12;
	AC_Armourtime[playerid]=12;
	VehicleEnters[playerid]=INVALID_VEHICLE_ID;
	caridhouse[playerid][0] = 0;
	caridhouse[playerid][1] = 0;
	//
	//gBankSum[playerid][0] = 0;
	//gBankSum[playerid][1] = 0;
	//gBankSum[playerid][2] = 0;
	//
	DrugEffect[playerid]=0;
	Settings[playerid]=65535;
	PEfir[playerid] = INVALID_PLAYER_ID;
	Pefir[playerid] = 0;
	p_info[playerid][pSpawn] = 1;

	p_info[playerid][pLevel] = 1;
	SetPlayerScore(playerid, 1);
	if ( p_info[playerid][pSex] == 1 )
		p_info[playerid][pChar] = gRegSkins[0][0][0];
	else
		p_info[playerid][pChar] = gRegSkins[1][0][0];
	p_info[playerid][pExp] = 1;
	p_info[playerid][pModel] = 78;
	p_info[playerid][pModelPhone]=18867;
	for(new i=0;i<12;i++)
	{
		GunPlayer[playerid][i][0]=0;
		GunPlayer[playerid][i][1]=0;
	}
	AC_plsp[playerid] 		= false;
	IsTDCNNShow[playerid] 	= false;
	ServerHP[playerid]	= 100.0;
	SetPlayerColor(playerid,0xEEEEEEFF);
}




forward RemovePlayerAttachedObjectDelay(playerid,slot);
public RemovePlayerAttachedObjectDelay(playerid,slot)
{
	RemovePlayerAttachedObject(playerid,slot);
}


stock Update3DTextLabelBusiness(bint)
{
	new label[512];
	if(Business[bint][bType] != 13)
	{
		if(!strcmp(Business[bint][Owner], "The State", true))
		{
			format(label, 128, "%s\nБизнес продаётся!", Business[bint][BizName]);
			UpdateDynamic3DTextLabelText(Business[bint][Label], CLIGHTGREEN, label);
		}
		else if(Business[bint][Lock]) UpdateDynamic3DTextLabelText(Business[bint][Label], CLIGHTGREEN, "Бизнес закрыт");
		else
		{
			format(label, 512, BIZ_TEXT,Business[bint][BizName],Business[bint][Owner],(Business[bint][bLicenses]) ? ("{33AA33}Бизнес работает легально") : ("{AA3333}Бизнес не имеет лицензию"), (Business[bint][Mafia] == 5) ? ("La Cosa Nostra") : (Business[bint][Mafia] == 6) ? ("Yakuza") : (Business[bint][Mafia] == 14) ? ("Русская мафия") : ("Государство"),GetPriceEnter(bint));
			UpdateDynamic3DTextLabelText(Business[bint][Label], -1, label);
		}
	}
	else
	{
		if(!strcmp(Business[bint][Owner], "The State"))
		{
			format(label, 116, "%s продаётся\nдля приобретения Используйте команду /buyfuel", Business[bint][BizName]);
			UpdateDynamic3DTextLabelText(Business[bint][Label], CLIGHTGREEN, label);
		}
		else
		{
			format(label, 232, "%s\nВладелец: %s\nСтоимость: %i$\nТоплива: %d литров.\nЦена за 1 литр: %i$\n\n{ffffff}Заправиться {ffff00}'NUM 2' {ffffff}или {ffff00}/fill", Business[bint][BizName], Business[bint][Owner],Business[bint][BuyPrice],Business[bint][bProd],Business[bint][EnterPrice]);
			UpdateDynamic3DTextLabelText(Business[bint][Label], CLIGHTGREEN, label);
		}
	}

	SaveBusiness(bint);
	return 1;
}

BuyBusiness(playerid, bizid)
{
	if(p_info[playerid][pPbiskey] != 0) return SendErr(playerid, "У вас уже есть бизнес");
	if(p_info[playerid][pCash] < Business[bizid][BuyPrice]) return SendErr(playerid,"У вас не достаточно денег наличными");
	TransferMoney(playerid,p_info[playerid][pCash]-Business[bizid][BuyPrice],Business[bizid][BuyPrice],"купил бизнес");
	p_info[playerid][pCash] -= Business[bizid][BuyPrice];
	UpdateMoney(playerid);
	p_info[playerid][pPbiskey] = bizid + 1;
	UpdatePlayerData(playerid,"pPbiskey",p_info[playerid][pPbiskey]);
	Business[bizid][bCheckPower] += (bPowerTax * 5);
	UpdateOtherBusiness(bizid);
	format(stringer, 144, "Поздравляем! Вы приобрели бизнес: %s.", Business[bizid][BizName]);
	SendClientMessage(playerid,CGREEN, stringer);
	SendClientMessage(playerid, CLIGHTGREEN, "Бизнес автоматически оплачен на 5 часов. Примечание: Заплатить за электричество бизнеса можно в банкомате");
	SendClientMessage(playerid, CLIGHTGREEN, "Управление бизнесом: "ORG"/business");
	strmid(Business[bizid][Owner], NamePlayer[playerid], 0, strlen(NamePlayer[playerid]), 31);
	SaveBusiness(bizid);
	Update3DTextLabelBusiness(bizid);
	SetPlayerPosBusiness(playerid, bizid);
	return 1;
}

stock ShowBusinessInformation(playerid, bizid)
{
	new status_bizz_work[19 + 1] = "{AA3333}Не работает";
	new status_bizz_legacy[32 + 1] = "{AA3333}Бизнес не имеет лицензию";

	if(!Business[bizid][Lock]) status_bizz_work = "{33AA33}Работает";
	if(Business[bizid][bLicenses]) status_bizz_legacy = "{33AA33}Бизнес работает легально";

	stringer[0] = EOS;
	format(stringer,2000,"{fcfcfc}Посетителей сегодня: %d\n\nПродуктов: %d из %d\nПродуктов заказано: %d\n\nСостояние: %s{fcfcfc}\nЛицензия: %s{fcfcfc}\nПод контролем: %s\nБаланс счёта для оплаты электроэнергии: $%d\nНалог за электроэнергию: $%d в час\n\nЧасов закрыт: %d из 12\nЧасов без продуктов: %d из 24",
	Business[bizid][bVisitors],Business[bizid][bProd],Business[bizid][bProdMax],Business[bizid][bProdOrder],status_bizz_work,status_bizz_legacy,
	(Business[bizid][Mafia] == 5) ? ("La Cosa Nostra") : (Business[bizid][Mafia] == 6) ? ("Yakuza") : (Business[bizid][Mafia] == 14) ? ("Русская мафия") : ("Государство"),Business[bizid][bCheckPower],bPowerTax,Business[bizid][bHourClose],Business[bizid][bHourProd]);
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Бизнес",stringer,"Закрыть","");

	return 1;
}



stock CheckHour()
{
	new hour, minute, second;
	r_gettime(hour, minute, second);
	
	if(hour == 04 && minute == 55 && second == 00)
	{
		mysql_pquery(connects,"ANALYZE TABLE `accounts`,`cppd`,`admin`,`bank_system`,`business`,`BusRouteName`,`BusRoutePos`,`employment_history`,`family`,`fractions`,`fractions_store`,`fraction_ranks`,`fraction_settings`,`fr_vehicles`,`gangzonestest`,`hitmans_setting`,`hotels`,`housetest`,`loadmeria`,`log_transfer`,`mafia_war`,`news`,`new_ban`,`ostanovka`,`table_ban`,`gdonate_payments`,`unit_settings`,`vote`,`wrp_log`","","");
		mysql_pquery(connects,"OPTIMIZE TABLE `accounts`,`cppd`,`admin`,`bank_system`,`business`,`BusRouteName`,`BusRoutePos`,`employment_history`,`family`,`fractions`,`fractions_store`,`fraction_ranks`,`fraction_settings`,`fr_vehicles`,`gangzonestest`,`hitmans_setting`,`hotels`,`housetest`,`loadmeria`,`log_transfer`,`mafia_war`,`news`,`new_ban`,`ostanovka`,`table_ban`,`gdonate_payments`,`unit_settings`,`vote`,`wrp_log`","","");
		print((mysql_errno() == 0) ? ("Auto Restart - Loading... Optimize and Analyze database was successful") : ("Auto Restart - Loading... Optimize and Analyze database was not successful"));
	}
	if(hour == 05 && minute == 00 && second == 00)
	{
		DestroyAllDynamicObjects();
		DestroyAllDynamic3DTextLabels();
		DestroyAllDynamicCPs();
		DestroyAllDynamicMapIcons();
		DestroyAllDynamicRaceCPs();
		DestroyAllDynamicAreas();
		SendClientMessageToAll(CREDD,"< "PROJECT_NAME" > Перезагрузка игрового режима"),
		SendRconCommand("gmx");
		printf("Auto Restart - Reloading...");

		return 1;
	}
	if(minute == 10 && second == 00 || minute == 30 && second == 00 || minute == 50 && second == 00)
	{
		switch(random(5))
		{
			case 0:SendClientMessageToAll(CNLIGHTGREEN,"Чтобы прослушать радио нашего сервера, Используйте: "neworange"/fm > World FM");
			case 1:SendClientMessageToAll(CNLIGHTGREEN,"Сайт нашего сервера: "neworange""PROJECT_WEBSITE);
			case 2:SendClientMessageToAll(CNLIGHTGREEN,"Пополнение донат счетчика и покупка админ прав / прав хелпера на сайте "neworange""PROJECT_WEBSITE""newlightgreen" в разделе "neworange"Магазин");
			case 3:SendClientMessageToAll(CNLIGHTGREEN,"Вступай в группу нашего сервера: "neworange""PROJECT_VK);
			case 4:SendClientMessageToAll(CNLIGHTGREEN,"Общайся с игроками нашего проекта в свободной группе: "neworange""PROJECT_VK_FREE);
		}
	}
	if(hour == 00 && minute == 00 && second == 00)
	{
		for(new g = 0; g < 24; g++)
		{
			if(gCarSells[g][SellsTime]>0 && strcmp(gCarSells[g][SellsOwner],"The State"))
			{
				gCarSells[g][SellsTime]--;
				if(gCarSells[g][SellsTime]==0)
				{
					gCarSells[g][SellsModel] = 0;
					gCarSells[g][SellsTime] = 0;
					gCarSells[g][SellsPrice] = 0;
					format(gCarSells[g][SellsOwner],24,"The State");
					gCarSells[g][SellsTuning][0] = 1;
					gCarSells[g][SellsTuning][1] = 255;
					for(new i=2;i<12;i++) gCarSells[g][SellsTuning][i] = -1;
					DestroyVehicleOP(gCarSells[g][SellsVID]);
					new update_car_sells[512];
					format(update_car_sells,512,"UPDATE `gCarSells` SET `SellsModel` = '%d', `SellsTime` = '%d', `SellsPrice` = '%d', `SellsOwner` = '%s', `SellsTuning` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `SellsMysqlID` = '%d'",
					gCarSells[g][SellsModel],gCarSells[g][SellsTime],gCarSells[g][SellsPrice],gCarSells[g][SellsOwner],gCarSells[g][SellsTuning][0],gCarSells[g][SellsTuning][1],gCarSells[g][SellsTuning][2],gCarSells[g][SellsTuning][3],gCarSells[g][SellsTuning][4],gCarSells[g][SellsTuning][5],gCarSells[g][SellsTuning][6],gCarSells[g][SellsTuning][7],gCarSells[g][SellsTuning][8],gCarSells[g][SellsTuning][9],gCarSells[g][SellsTuning][10],gCarSells[g][SellsTuning][11],gCarSells[g][SellsMysqlID]);
					mysql_pquery(connects, update_car_sells);
					print(update_car_sells);
					LoadCarSells(g);
				}
			}
		}
		mysql_query_string[0] = EOS;
		for(new h = 1; h < TotalHouse; h++)
		{
			if(!strcmp(gHouses[h][houseOwner],"The State")) continue;
			//if(gHouses[h][account_id] == -1) continue;

			if(gHouses[h][hDays] > 1)
			{
				gHouses[h][hDays] --;
			}
			else
			{
				new x = GetPlayerID( gHouses[h][houseOwner] );
				if( x != INVALID_PLAYER_ID )
				{
					p_info[ x ][ pHouse ] = 0;
					UpdatePlayerData( x ,"pPhousekey",p_info[ x ][ pHouse ]);
					SCM( x , COLOR_LIGHTRED, "Ваш дом был продан за неуплату государтсву");
				}
				else if( x == INVALID_PLAYER_ID )
				{
					format(mysql_query_string, 320, "UPDATE `accounts` SET `pPhousekey` = '0', `pHouseCash` = '%d' WHERE `tName` = '%s' LIMIT 1",gHouses[h][hValue]/2,gHouses[h][houseOwner]);
					mysql_pquery(connects, mysql_query_string,"", "");
				}

				gHouses[h][hHel] = 0;
				gHouses[h][hLock] = 1;
				strmid(gHouses[h][houseOwner], "The State", 0, strlen("The State"), 31);

				if(strcmp(gHouses[h][houseOwner],"The State"))
				{
					DestroyDynamicMapIcon(gHouses[h][hMIcon]);
					DestroyDynamicPickup(gHouses[h][hPickup]);
					gHouses[h][hPickup] = CreateDynamicPickup(1273, 1, gHouses[h][houseX], gHouses[h][houseY], gHouses[h][houseZ]);
					gHouses[h][hMIcon] = CreateDynamicMapIcon(gHouses[h][houseX], gHouses[h][houseY], gHouses[h][houseZ], 31, -1);
				}
				else
				{
					DestroyDynamicMapIcon(gHouses[h][hMIcon]);
					DestroyDynamicPickup(gHouses[h][hPickup]);
					gHouses[h][hPickup] = CreateDynamicPickup(1272, 1, gHouses[h][houseX], gHouses[h][houseY], gHouses[h][houseZ]);
					gHouses[h][hMIcon] = CreateDynamicMapIcon(gHouses[h][houseX], gHouses[h][houseY], gHouses[h][houseZ], 32, -1);
				}
			}

			SaveHome(h);
		}
	}
	if(tmphour == 11 && tmpminute == 22 && tmpsecond == 00 || tmphour == 13 && tmpminute == 22 && tmpsecond == 00 || tmphour == 14 && tmpminute == 22 && tmpsecond == 00 || tmphour == 15 && tmpminute == 22 && tmpsecond == 00 || tmphour == 17 && tmpminute == 22 && tmpsecond == 00 || tmphour == 18 && tmpminute == 22 && tmpsecond == 00
	|| tmphour == 19 && tmpminute == 22 && tmpsecond == 00 || tmphour == 21 && tmpminute == 22 && tmpsecond == 00)
	{
		//CallFire();
		foreach(A)
		{
			if(random(20) == 5 && p_info[A][Disease][0] != 3)
			{
				p_info[A][Disease][0]++;
				UpdatePlayerData(A, "Disease0", p_info[A][Disease][0]);
				format(stringer, 256, "У вас появилось новое заболевание - ОРВИ %d степени", p_info[A][Disease][0]);
				SendClientMessage(A, CWHITE, stringer);
			}
		}
	}


	return 1;
}

stock VipTimer()
{
	foreach(vip)
	{
		if(gVip[vip][adTime]) gVip[vip][adTime]--;
		if(gVip[vip][adTime] == 1)
		{
			if(IsPlayerConnected(gVip[vip][adID]))
			{
				if(p_info[gVip[vip][adID]][pMuteTime] <= 0)
				{
					format(stringer, 256,"« VIP Radio » %s. Отправитель: %s[%d]. Телефон: %d", gVip[vip][adText], gVip[vip][adSender], gVip[vip][adID], gVip[vip][adNumber]);
					SendClientMessageToAll(0xFFA500FF, stringer);
				}
			}
			gVip[vip][adTime] = 0;
			gVip[vip][adID] = 0;
			gVip[vip][adNumber] = 0;
			strdel(gVip[vip][adText], 0, 100);
			strdel(gVip[vip][adSender], 0, 24);
		}
	}
	return 1;
}

stock AdvertTimer()
{
	for(new d; d < 15; d++)
	{
		if(gAdvert[d][adTime]) gAdvert[d][adTime]--;
		if(gAdvert[d][adCheked] && !gAdvert[d][adTime])
		{
			if(IsPlayerConnected(gAdvert[d][adID]) && strlen(gAdvert[d][adText]))
			{
				format(stringer,128,"%s. {00CC33}Отправил: %s [%d] (тел. %d)",gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
				SendClientMessageToAll(0x33D65CAA,stringer);
				if(p_info[gAdvert[d][adCheckID]][tMember] == 16)
				{
					format(stringer,128,"  Объявление проверил(а) %s: %s (%i)",GetRank(p_info[gAdvert[d][adCheckID]][tMember], p_info[gAdvert[d][adCheckID]][tRank]),gAdvert[d][adCheker],gAdvert[d][adCheckID]);
					SendClientMessageToAll(0x00A329AA,stringer);
					advert_count[gAdvert[d][adID]]++;
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 300, "UPDATE `accounts` SET `advert_count` = '%d' WHERE `ID` = '%d'", advert_count[gAdvert[d][adID]], p_info[gAdvert[d][adID]][pID]);
					mysql_pquery(connects,mysql_query_string);
				}
				for(new i = 0; i < 15; i++)
				{
					if(advert_count[gAdvert[d][adID]] >= top_advert_count[i])
					{
						strmid(top_advert_name[i], NamePlayer[gAdvert[d][adID]],0,strlen(NamePlayer[gAdvert[d][adID]]), MAX_PLAYER_NAME);
						top_advert_count[i] = advert_count[gAdvert[d][adID]];
						break;
					}
				}

				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adCheckID] = -1;
				gAdvert[d][adID] = -1;
				gAdvert[d][adBusy] = false;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
			}
			else
			{
				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adBusy] = false;
				gAdvert[d][adCheckID] = -1;
				gAdvert[d][adID] = -1;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
			}
		}
	}
	if(gAdvertCount > 0) gAdvertCount--;
	return 1;
}

BizWarTimer()
{
	if(BizWarTime > 0)
	{
		BizWarTime--;
		new kv1,kv2;
  		foreach(playerid)
		{
			if(GetPVarInt(playerid,"ppkz2") && !ISAMAFIA(playerid)) EndBizwar(playerid);
			if(MZInfo[bFrakVlad]!=p_info[playerid][tMember] && MZInfo[bNapad]!=p_info[playerid][tMember]) continue;
			if ( PlayerToKvadrat ( playerid, MZInfo [ bWarPos ] [ 0 ], MZInfo [ bWarPos ] [ 1 ], MZInfo [ bWarPos ] [ 2 ], MZInfo [ bWarPos ] [ 3 ] ) )
			{
				if(MZInfo[bFrakVlad]==p_info[playerid][tMember])
					kv1++;
				else
					kv2++;
			}
		}
		foreach(m)
		{
			stringer[0] = EOS;
			if(GetPVarInt(m,"ppkz2") && !ISAMAFIA(m)) EndBizwar(m);
			if(MZInfo[bFrakVlad]!=p_info[m][tMember] && MZInfo[bNapad]!=p_info[m][tMember]) continue;
			if(!GetPVarInt(m,"ppkz2"))
			{
				GangZoneFlashForPlayer ( m, biz_war_gangzone, GetColor ( MZInfo[bNapad] ) ) ;
				TextDrawShowForPlayer(m, Bizwar[0]);
				TextDrawShowForPlayer(m, Bizwar[3]);
				format(stringer,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime));
				TextDrawSetString(Bizwar[0],stringer);
				format(stringer,50,"~w~%s ~g~0 ~w~Kill: ~g~0",GetMN(MZInfo[bFrakVlad]));
				TextDrawSetString(Bizwar[1],stringer);
				TextDrawShowForPlayer(m, Bizwar[1]);
				format(stringer,50,"~w~%s ~g~0 ~w~Kill: ~g~0",GetMN(MZInfo[bNapad]));
				TextDrawSetString(Bizwar[2],stringer);
				TextDrawShowForPlayer(m, Bizwar[2]);
				SetPVarInt(m,"ppkz2",true);
			}
			else
			{
				format(stringer,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime));
				TextDrawSetString(Bizwar[0],stringer);
				format(stringer,50,"~w~%s ~g~%d ~w~Kill: ~g~%d",GetMN(MZInfo[bFrakVlad]),kv1,MZInfo[bCountDead][MZInfo[bFrakVlad]]);
				TextDrawSetString(Bizwar[1],stringer);
				format(stringer,50,"~w~%s ~g~%d ~w~Kill: ~g~%d",GetMN(MZInfo[bNapad]),kv2,MZInfo[bCountDead][MZInfo[bNapad]]);
				TextDrawSetString(Bizwar[2],stringer);
			}
		}
		if(BizWarTime == 1)
		{
			new mafianame[24];
			switch(MZInfo[bNapad])
			{
			case 6: mafianame = "Mexico Mafia";
			case 14: mafianame = "Russian Mafia";
			case 5: mafianame = "Columbian Mafia";
			}
			new mafianamev[24];
			switch(MZInfo[bFrakVlad])
			{
			case 6: mafianamev = "Mexico Mafia";
			case 14: mafianamev = "Russian Mafia";
			case 5: mafianamev = "Columbian Mafia";
			}
			if(MZInfo[bCountDead][MZInfo[bFrakVlad]] > MZInfo[bCountDead][MZInfo[bNapad]])
			{
				format(stringer,255, "%s не удалось отобрать у вас контроль над бизнесом %s. Бизнес отбит",GetMN(MZInfo[bNapad]),Business[MZInfo[bBiz]][BizName]);
				SendFamilyMessage(MZInfo[bFrakVlad], COLOR_LIGHTRED, stringer);
				format(stringer,255, "Вам не удалось отобрать у мафии %s котроль над бизнесом %s. Бизнес оставлен",GetMN(MZInfo[bFrakVlad]),Business[MZInfo[bBiz]][BizName]);
				SendFamilyMessage(MZInfo[bNapad], COLOR_LIGHTRED, stringer);
			}
			else if(MZInfo[bCountDead][MZInfo[bFrakVlad]] == MZInfo[bCountDead][MZInfo[bNapad]])
			{
				format(stringer,255, "Стрела за бизнес %s закончилась ничьей. Бизнес потерян",Business[MZInfo[bBiz]][BizName]);
				SendFamilyMessage(MZInfo[bFrakVlad], COLOR_LIGHTRED, stringer);
				format(stringer,255, "Стрела за бизнес %s закончилась ничьей. Бизнес оставлен",Business[MZInfo[bBiz]][BizName]);
				SendFamilyMessage(MZInfo[bNapad], COLOR_LIGHTRED, stringer);
				Business[MZInfo[bBiz]][Mafia] = 0;

				SaveBusiness(MZInfo[bBiz]);
				Update3DTextLabelBusiness(MZInfo[bBiz]);
			}
			else
			{
				format(stringer,255, "%s забрала у вас контроль над бизнесом %s. Бизнес потерян",GetMN(MZInfo[bNapad]),Business[MZInfo[bBiz]][BizName]);
				SendFamilyMessage(MZInfo[bFrakVlad], COLOR_LIGHTRED, stringer);
				format(stringer,255, "Вы отобрали контроль над бизнесом %s у мафии %s. Бизнес захвачен",Business[MZInfo[bBiz]][BizName],GetMN(MZInfo[bFrakVlad]));
				SendFamilyMessage(MZInfo[bNapad], COLOR_LIGHTRED, stringer);
				Business[MZInfo[bBiz]][Mafia] = MZInfo[bNapad];

				SaveBusiness(MZInfo[bBiz]);
				Update3DTextLabelBusiness(MZInfo[bBiz]);
			}

			new id_killed = -1;
			new max_killed = -1;
			foreach(i)
			{
				if(GetPVarInt(i,"killed_shot"))
				{
					if(GetPVarInt(i,"killed_shot")>max_killed)
					{
						max_killed = GetPVarInt(i,"killed_shot");
						id_killed = i;
					}
					DeletePVar(i,"killed_shot");
				}
			}

			foreach(m)
			{
				if(MZInfo[bFrakVlad]!=p_info[m][tMember] && MZInfo[bNapad]!=p_info[m][tMember]) continue;
				if(id_killed != -1 && max_killed != -1)
				{
					format(stringer,128,"Уничтожил больше всего противников {"#cWHITE"}%s {E6251E}Убийств: {"#cWHITE"}%i", NamePlayer[id_killed],max_killed);
					SCM(m,0xE8FF1CFF,stringer);
				}
				EndBizwar(m);
			}
			MZInfo[bFrakVlad] = 0;
			MZInfo[bNapad] = 0;
			MZInfo[bBiz] = 255;

			GangZoneStopFlashForAll ( biz_war_gangzone ) ;
			GangZoneHideForAll ( biz_war_gangzone ) ;
			GangZoneDestroy ( biz_war_gangzone ) ;
			biz_war_gangzone = - 1 ;

			BizWarTime = 0;
			BizHourTime = 1;
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
		}
	}
}



public OnPlayerLeaveDynamicArea(playerid,areaid)
{
	if(Casino_Flag[playerid][select_casino_table] != -1){
		ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		Casino_Flag[playerid][select_casino_table] = -1;
	}
	for ( new c = 0; c < 3; c++ )
	{
		if(areaid == rullet_[c][rullet_area])
		{
			if(RuletkaStol[playerid] > 0)return Kazvihod(playerid);
		}
	}
	for(new locat = 0; locat < 10; locat++)
	{
		if(areaid == gWorkCP[locat]) gGunWorkTableStat[locat] = false;
	}
	/*for(new B = 0; B != MAX_BA_PLACES; B++)
	{
		if(areaid == BA_Ball[B][BA_Ball_Area])
		{
			SCM(playerid, 0x7FB151FF, ">>> {FFFFFF}Вы покинули баскетбольное поле");
			if(BA_Ball[B][BA_Ball_Player] == playerid)
			{
				if ( BA_Ball[B][BA_Ball_State] == 0 ) {
					BA_Ball[B][BA_Ball_Player] = -1;
					BA_Ball[B][BA_Ball_Attach] = false;
				}
			}

			Player_BA[playerid] = -1;
			break;
		}
	}*/
	if(areaid >= GardenCheckpoints[0] && areaid <= GardenCheckpoints[75] && GetPVarInt(playerid,"sobr_slot") > 0)
	{
		for(new j = 0; j < 76; j++)
		{
			if(areaid==GardenCheckpoints[j])
			{
				new slot = GetPVarInt(playerid,"sobr_slot")-1;
				TextDrawHideForPlayer(playerid, TD_Apple[slot]);
				CancelSelectTextDraw(playerid);
				PlayerTextDrawHide(playerid,GardenCount[playerid]);
				TextDrawHideForPlayer(playerid, Korzinka);
				for(new i = 0; i < 10; i++) TextDrawHideForPlayer(playerid, TD_SAPPLE[i]);
				if(GardenCount[playerid] != PlayerText:-1)
				{
					PlayerTextDrawDestroy(playerid, GardenCount[playerid]);
					GardenCount[playerid]=PlayerText:-1;
				}
				DeletePVar(playerid,"sobr_slot");
			}
		}
	}
	/*for(new i = TOTALFIRE[0]; i <= TOTALFIRE[1]; i++)
	{
		if(!FireSystem[i][fStatus]) continue;
		if(areaid == FireSystem[i][fZone]) {
			if(GetPVarInt(playerid,"FireTimerr")) {
				KillTimer(GetPVarInt(playerid,"FireTimerr"));
				DeletePVar(playerid,"FireTimerr");
			}
			if(GetPlayerSkin(playerid) == 277 || GetPlayerSkin(playerid) == 278 || GetPlayerSkin(playerid) == 279)
			{
				SetPVarInt(playerid, "FireBar", 0);
				HidePlayerProgressBar(playerid, universalbar[playerid]);
				DestroyPlayerProgressBar(playerid, universalbar[playerid]);
			}
			break;
		}
	}*/
	if(areaid == frac_areaid[3])
	{
		UpdatePlayerData(playerid,"pMats",p_info[playerid][pMats]);
		UpdatePlayerData(playerid,"pPatron",p_info[playerid][pPatron]);
	}
	else if(areaid == door_fbi_area)
	{
		MoveDynamicObject(door_fbi[0],582.632,1270.599,1079.325,0.5,0.0000,0.0000,0.0000);
		MoveDynamicObject(door_fbi[1],584.113,1270.589,1079.325,0.5,0.0000,0.0000,0.0000);
	}
	else if(areaid>=bot_area[MAX_NPC_BOT] && areaid <= bot_area[1] || areaid>=area_hit[0] && areaid <= area_hit[1])
	{
		TextDrawHideForPlayer(playerid,Info_TD[0]);
		TextDrawHideForPlayer(playerid,Info_TD[1]);
	}
	else if(areaid == siren_area)
	{
		for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid,InfoDraw[i]);
	}
	else
	{
		foreach(i)
		{
			if(areaid == GetPVarInt(i, "BBArea"))
			{
				StopStream(playerid);
				SendInf(playerid, "Вы покинули зону магнитофона");
				break;
			}
		}
	}
	return 1;
}

stock set_pos ( playerid, Float:x, Float:y, Float:z, Float:angle, interior, world )
{
	if ( interior != -1 ) SetPlayerInterior ( playerid, interior ) ;
	if ( world != -1 ) SetPlayerVirtualWorld ( playerid, world ) ;
	AC_SetPlayerPos ( playerid, x, y, z ) ;
	SetPlayerFacingAngle ( playerid, angle ) ;
	return 1;
}

new bool:ShowDebugArea[MAX_PLAYERS]={false,...};

CMD:showdebugarea(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;

	ShowDebugArea[playerid] = (ShowDebugArea[playerid] == false) ;
	SendClientMessage ( playerid , -1 , ShowDebugArea[playerid] ? ("Отладка входов включена") : ("Отладка входов отключена") ) ;

	return 1;
}

stock GetCarClassName(classid,classname[],size=sizeof(classname))
{
	switch(classid)
	{
		case 0: format(classname,size,"Эконом");
		case 1: format(classname,size,"Средний");
		case 2: format(classname,size,"Спорт");
		case 3: format(classname,size,"Мото");
		case 4: format(classname,size,"Воздушный");
	}
}


CMD:stopregzombie(playerid)
{
	if ( ZombieTime <= 120 )
	{
		if ( ZombieTime < 0 )
		{
			foreach(t)
			{
				if(GetPVarInt(t, "set_zombie"))
				{
					DeletePVar(t,"set_zombie");
				}
			}
		}
		ZombieTime = 121;
		format(stringer,128,"[Люди-vs-Зомби] {"#cWHITE"}%s {"#cLIGHTBLUE"}остановил мероприятие {"#cWHITE"}\"Люди против зомби\"", NamePlayer[playerid]);
		return SendClientMessageToAll(CLIGHTBLUE, stringer);
	}
	SendClientMessage(playerid,CGRAY, "Мероприятие не запущено");
	return 1;
}
CMD:zombie_exit(playerid)
{
	EndZombie(playerid,false);
	return 1;
}
CMD:startregzombie(playerid)
{
	if ( p_info[playerid][pAdmin] == 0 ) return 1;
	if ( ZombieTime <= 120 ) return SendClientMessage(playerid,CGRAY,"Мероприятие уже запущено. Остановить: /stopregzombie.");
	ZombieTime = 120;
	format(stringer,128,"[Люди-vs-Зомби] {"#cWHITE"}%s {"#cLIGHTBLUE"}запустил мероприятие {"#cWHITE"}\"Люди против зомби\"", NamePlayer[playerid]);
	SendClientMessageToAll(CLIGHTBLUE, stringer);
	SendClientMessageToAll(CLIGHTBLUE, "Мероприятие проходит на развлекательном острове");
	SendClientMessageToAll(CLIGHTBLUE, "- Время на регистрацию: {"#cGREEN"}2 минуты");
	return 1;
}



stock EndZombie(playerid,bool:is_disconnected=false)
{
	if ( !GetPVarInt(playerid, "set_zombie") ) return 1;
	if ( GetPVarInt(playerid, "set_zombie") == 2 )
	{
		ZombieCountHumans--;
		if ( ZombieCountHumans == 0 && ZombieTime < 0)
		{
			foreach(t)
			{
				if(GetPVarInt(t, "set_zombie"))
				{
					SendClientMessage ( t, -1, "[Люди-vs-Зомби] {"#cLIGHTBLUE"}Мероприятие окончено. Причина: Недостаточное количество людей");
					DeletePVar(t,"set_zombie");

					AC_SetPlayerPos(t,247.0762,-2176.2798,4.6540);
					AC_ResetPlayerWeapons(t);

					if(p_info[t][tMember]) SetPlayerSkin(t,(StartWork(t) && !start_work[t]) ? (p_info[t][pChar]) : (p_info[t][pModel]));
					else if(p_info[t][tMember] <= 0) SetPlayerSkin(t, p_info[t][pChar]);
					SetPlayerColorAc(t,p_info[t][tMember]);
				}
			}
			ZombieTime = 121;
		}
	}
	else if ( GetPVarInt(playerid, "set_zombie") == 1 )
	{
		ZombieCountZombie--;
		if ( ZombieCountZombie == 0 && ZombieTime < 0)
		{
			foreach(t)
			{
				if(GetPVarInt(t, "set_zombie"))
				{
					SendClientMessage ( t, -1, "[Люди-vs-Зомби] {"#cLIGHTBLUE"}Мероприятие окончено. Причина: Недостаточное количество зомби");
					DeletePVar(t,"set_zombie");
					AC_SetPlayerPos(t,247.0762,-2176.2798,4.6540);
					AC_ResetPlayerWeapons(t);
					if(p_info[t][tMember]) SetPlayerSkin(t,(StartWork(t) && !start_work[t]) ? (p_info[t][pChar]) : (p_info[t][pModel]));
					else if(p_info[t][tMember] <= 0) SetPlayerSkin(t, p_info[t][pChar]);
					SetPlayerColorAc(t,p_info[t][tMember]);
				}
			}
			ZombieTime = 121;
			ZombieCountHumans = 0;
		}
	}
	DeletePVar(playerid,"set_zombie");
	if ( !is_disconnected )
	{
		AC_SetPlayerPos(playerid,247.0762,-2176.2798,4.6540);
		if(p_info[playerid][tMember]) SetPlayerSkin(playerid,(StartWork(playerid) && !start_work[playerid]) ? (p_info[playerid][pChar]) : (p_info[playerid][pModel]));
		else if(p_info[playerid][tMember] <= 0) SetPlayerSkin(playerid, p_info[playerid][pChar]);
		SetPlayerColorAc(playerid,p_info[playerid][tMember]);
		AC_ResetPlayerWeapons(playerid);
	}
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(GetPVarInt(playerid,"StartRecon")) return 1;
	for(new c = 0; c < MAX_TABLES_DICE; c++)
	{
		if(areaid==InfoDice[c][dice_area]) GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~PRESS ENTER",3000,3);
	}
	/*for(new B = 0; B != MAX_BA_PLACES; B++)
	{
		if(areaid == BA_Ball[B][BA_Ball_Area])
		{
			SCM(playerid, 0x7FB151FF, ">>> {FFFFFF}Добро пожаловать на баскетбольное поле");
			SCM(playerid, 0x7FB151FF, ">>> {FFFFFF}Управление мячом: {7FB151}ЛКМ {FFFFFF}- набивать, {7FB151}ALT {AFAFAF}(удерживать) {FFFFFF}- удар");
			Player_BA[playerid] = B;
			break;
		}
	}*/
	if ( areaid == ZombieRegArea )
	{
		if ( ZombieTime == 121 || ZombieTime <= 0 ) return SendClientMessage(playerid,CGRAY,"В данный момент регистрация невозможна");
		format(stringer,64,"{ffffff}Зомби\nЛюди {%s}[ %d из 5 ]",(ZombieCountHumans>=5)?("ff0000"):("33aa33"),ZombieCountHumans);
		ShowPlayerDialog(playerid,dZombieReg,DIALOG_STYLE_LIST,"  ", stringer, "Выбрать", "Закрыто");
	}
	if ( areaid == ZombieFlagPickup && ZombieTime <= 0)
	{
		if ( GetPVarInt(playerid,"set_zombie") == 1)
		{
			foreach(t)
			{
				if(GetPVarInt(t, "set_zombie"))
				{
					DeletePVar(t,"set_zombie");
					AC_SetPlayerPos(t,247.0762,-2176.2798,4.6540);
					AC_ResetPlayerWeapons(t);
					if(p_info[t][tMember]) SetPlayerSkin(t,(StartWork(t) && !start_work[t]) ? (p_info[t][pChar]) : (p_info[t][pModel]));
					else if(p_info[t][tMember] <= 0) SetPlayerSkin(t, p_info[t][pChar]);
					SetPlayerColorAc(t,p_info[t][tMember]);
				}
			}

			SendClientMessageToAll (-1, "[Люди-vs-Зомби] {"#cLIGHTBLUE"}Мероприятие окончено. Победили зомби!");
			ZombieTime = 121;
		}
	}
	if(areaid >= gWorkCP[0] && areaid <= gWorkCP[9])
	{
		for(new locat = 0; locat < 10; locat++)
		{
			if(areaid == gWorkCP[locat])
			{
				if(!GetPVarInt(playerid,"pgunmodel")) return SendInf(playerid,"У вас нет заготовки");
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
				if(gGunWorkTableStat[locat]) return SendClientMessage(playerid,CGRAY,"Стол занят. Подойдите к другому");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				if(pgunobject[playerid]==INVALID_OBJECT)
				{
					pgunobject[playerid]=CreateDynamicObject(GetPVarInt(playerid,"pgunmodel"),gGunWorkTables[locat][0],gGunWorkTables[locat][1],gGunWorkTables[locat][2],90.0,0.0,0.0);
				}
				SetPVarInt(playerid,"pgunlocat",locat+1);
				gGunWorkTableStat[locat] = true;
				ClearAnimations(playerid);
				FIXES_ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.0,1,1,1,0,4000,0);
				SetPlayerAttachedObject(playerid,0,18644,5,0.078999,0.042999,-0.012999,-3.299995,0.000000,0.000000);
				SetPlayerAttachedObject(playerid,1,18635,6);
				new conclusion = random(3);
				GameTextForPlayer(playerid, (conclusion==0) ? ("~n~~n~~n~~n~~w~PRESS ~g~~h~Y") : (conclusion==1) ? ("~n~~n~~n~~n~~w~PRESS ~g~~h~N") : ("~n~~n~~n~~n~~w~PRESS ~b~~h~H"), 6000, 4);
				SetPVarInt(playerid,"gun_key", (conclusion==0) ? (KEY_YES) : (conclusion==1) ? (KEY_NO) : (KEY_CTRL_BACK));
				AC_TogglePlayerControllable(playerid, 0);

				return 1;
			}
		}
	}
	if(GetPVarInt(playerid,"carrygun"))
	{
		for(new i = 1; i < fraction_amount; i++)
		{
			if ( areaid == frac_place_put_areaid[ i ] )
			{
				frac_patron[i] += 500;
				frac_metall[i] += 500;
				DeletePVar(playerid, "carrygun");
				RemovePlayerAttachedObject(playerid, 0);
				FIXES_ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				if(i == 12 || i == 13 || i == 14 || i == 15 || i == 17 || i == 18 || i == 5 || i == 6)
				{
					if(frac_patron[i]>25000)frac_patron[i]=25000;
					if(frac_metall[i]>30000)frac_metall[i]=30000;
					UpdateStoreGang(i);
				}
				UpdateFractionStore(i);
				break;
			}
		}
	}
	if(GetTickCount()-GetPVarInt(playerid,"aretick") < 2000) return 1;
	SetPVarInt(playerid, "aretick", GetTickCount());
	//


	for(new idx = 0; idx <= CountBusiness; idx++)
	{
		if(Business[idx][bType]==13) continue;
		if(areaid == Business[idx][AreaE])
		{
			SetPVarInt(playerid, "BUSINESS_ID", idx);
			break;
		}
		else if(areaid == Business[idx][AreaX])
		{
			AC_SetPlayerPos(playerid, Business[idx][PickupEnterX], Business[idx][PickupEnterY], Business[idx][PickupEnterZ]);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, Business[idx][EnterR]);
			SetPVarInt(playerid, "ChooseStyle", 0);
			SetPVarInt(playerid, "StartTraining", 0);
			if(p_info[playerid][P_Style][0] != 0) DP_SetPlayerFightingStyle(playerid);
			if(p_info[playerid][P_Style][1] != 0) DP_SetPlayerFightingStyle(playerid);
			else SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			DeletePVar(playerid,"BUSINESS_ID");
			break;
		}
		else if(areaid == Business[idx][AreaB])
		{
			stringer[0] = EOS;
			switch(Business[idx][bType])
			{
				case 0,3:Show247(playerid);
				case 1,9:
				{
					stringer = "Блюдо\tСтоимость\n";
					for(new x; x < 6; x++)
						format(stringer, 600, "%s{"#cWHITE"}%s \t{00FF00}$%d\n", stringer, SHOP_PIZZA[x], SHOP_PIZZA_PRICE[x]);
					ShowPlayerDialog(playerid, dBuyFood, DIALOG_STYLE_TABLIST_HEADERS, "Меню", stringer, "Выбрать","Закрыть");
				}
				case 2,4,5,7:
				{
					stringer = "Напиток\tСтоимость\n";
					for(new x; x < 6; x++)
						format(stringer, 600, "%s{"#cWHITE"}%s \t{00FF00}$%d\n", stringer, SHOP_CLUB[x], SHOP_CLUB_PRICE[x]);
					ShowPlayerDialog(playerid, dDrink, DIALOG_STYLE_TABLIST_HEADERS, "Меню", stringer, "Выбрать","Закрыть");
				}
				case 6,8:
				{
					stringer = "Блюдо\tСтоимость\n";
					for(new x; x < 6; x++)
						format(stringer, 600, "%s{"#cWHITE"}%s \t{00FF00}$%d\n", stringer, SHOP_BURGER[x], SHOP_BURGER_PRICE[x]);
					ShowPlayerDialog(playerid, dBuyBurger, DIALOG_STYLE_TABLIST_HEADERS, "Меню", stringer, "Выбрать","Закрыть");
				}
				case 10:
				{
					if(p_info[playerid][pPayDayHad] < 2)
					{
						SendClientMessage(playerid,COLOR_GREY,"Вам нужно проиграть два часа");
						return 1;
					}
					if(!Lic[playerid][3])
					{
						SendClientMessage(playerid,COLOR_GREY,"У вас нет лицензии на оружие.");
						return 1;
					}
					new gun_name[32 + 1];
					stringer = "Оружие\tСтоимость за один патрон\n";
					for(new i = 0; i < 8; i++)
					{
						GetWeaponName(gSellGun[i],gun_name,32);
						format(stringer, 1500, "%s"ORG"%i.{"#cWHITE"} %s\t{"#cLIGHTGREEN"}%i$\n",stringer,i + 1, gun_name, gSellGunPrice[i]);
					}
					ShowPlayerDialog(playerid, dAmmo, DIALOG_STYLE_TABLIST_HEADERS, "{"#cINFO"}Меню аммо", stringer, "Далее", "Отмена");
				}
				case 11:
				{
					if(GetPVarInt(playerid,"CloserInClothes"))
					{
						DeletePVar(playerid,"CloserInClothes");
					}
					else
					{
						if(!GetPVarInt(playerid,"PlayerInClothes"))
						{
							for(new i=0; i<5; i++)
							{
								if(gSkinShopDraw[i]==Text:-1) continue;
								TextDrawShowForPlayer(playerid,Text:gSkinShopDraw[i]);
							}
							if(gSkinShopPriceDraw[playerid] != PlayerText:-1)
							{
								PlayerTextDrawShow(playerid,gSkinShopPriceDraw[playerid]);
							}

							SetPVarInt(playerid,"PlayerSkinSlot",(p_info[playerid][pSex] == 1) ? (39) : (0));

							SetPVarInt(playerid,"OldWorld", GetPlayerVirtualWorld(playerid));
							SetPVarInt(playerid,"OldSkin", GetPlayerSkin(playerid));

							AC_SetPlayerPos(playerid, 209.5334, -8.1026, 1005.2109);
							SetPlayerFacingAngle(playerid, 269.6063);
							SetPlayerCameraPos(playerid, 209.5334 + (1.5 * floatsin(-269.6063, degrees)), -8.1026 + (1.5 * floatcos(-269.6063, degrees)), 1005.2109+0.3);
							SetPlayerCameraLookAt(playerid, 209.5334, -8.1026, 1005.2109+0.3);
							SetPlayerVirtualWorld(playerid, playerid + 1);

							SetPlayerSkin(playerid,gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinID]);
							format(stringer,15,"%i$",gSkins[GetPVarInt(playerid,"PlayerSkinSlot")][skinPrice]);
							PlayerTextDrawSetString(playerid,gSkinShopPriceDraw[playerid],stringer);

							SetPVarInt(playerid,"PlayerInClothes", true);
							SelectTextDraw(playerid, 0xAFAFAFAA);
						}
					}
				}
				case 12:
				{
					SendBotMessage(playerid, "Подойди к любому креслу, и используйте мышку для выбора аксессуаров\n");
					InterpolateCameraPosToPoint(playerid, 2082.9666,-1793.6278,121.0539+0.2,128.5019);
					ShowPlayerDialog(playerid,dQuestShow,0," ", "{AFAFAF}Подойди к любому креслу, и используйте мышку для выбора аксессуаров\n", "Ок", "");
				}
				case 16:
				{
					ShowPlayerDialog(playerid,1500,DIALOG_STYLE_LIST, "{ffff00}Тренировка", "- Бокс ({00FF00}1000${ffffff})\n- Кунг-Фу ({00FF00}1000${ffffff})\n- Тренировка ({00FF00}5000${ffffff})", "Выбрать", "Отмена");
				}
				case 17:
				{
					if(GetPVarInt(playerid,"Crup") == 88)
					{
						format(stringer, 90, "%s приступил(а) к работе",NamePlayer[playerid]);
						ProxDetectorNew(playerid,10.0,CPURPLE,stringer, true);
						SetPVarInt(playerid,"Crup",1);
						Casino_Flag[playerid][casino_crup] = 1;
					}
					else
					{
						Casino_Flag[playerid][casino_crup]=0;
						format(stringer, 90, "%s завершил(а) рабочий день",NamePlayer[playerid]);
						ProxDetectorNew(playerid,10.0,CPURPLE,stringer, true);
						SetPVarInt(playerid,"Crup",88);
					}
				}
			}
			SetPVarInt(playerid, "BUSINESS_ID", idx);
			break;
		}
	}

	if ( areaid == furniture_area )
	{
		if ( !p_info[playerid][pHouse] ) return SendClientMessage(playerid,CGRAY,"Вы не владелец жилого дома");
		SetPVarInt(playerid,"old_furn_vw",GetPlayerVirtualWorld(playerid));
		ShowPlayerDialog(playerid,2116,0," ", "{ffffff}Вы хотите приступить к выбору мебели?", "Да", "Нет");
	}
	if ( areaid >= arSellCar[0] && areaid <= arSellCar[3] )
	{
		if ( 0 == p_info[playerid][pHouse] && 0 == p_info[playerid][pTempKey] && 0 == p_info[playerid][pRoom] ) return SendErr(playerid,"У вас нет дома или вы его не арендуете / номера в отеле.");
		else if ( Lic[playerid][0] == 0 ) return SendErr(playerid,"У вас нет водительских прав");
		new carclass=-1;
		for(new i; i <= 3;i++)
		{
			if(areaid == arSellCar[i])
			{
				carclass = i;
				break;
			}
		}
		if(carclass==-1) return 1;
		new carclassn[12];
		GetCarClassName(carclass,carclassn);
		format(stringer,128,"Вы хотите войти в автосалон класса: %s",carclassn);
		ShowPlayerDialog(playerid,dBuyCarSalon,0,"Автосалон",stringer,"Да","Нет");
		SetPVarInt(playerid, "AutoShop", carclass + 1);
		return 1;
	}
	//
	for ( new c = 0; c < 3; c++ )
	{
		if(areaid == rullet_[c][rullet_area])
		{
			format(stringer,100,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~PRESS ENTER~n~BET: %d $ - %d $",rullet_[c][rullet_min_bet],rullet_[c][rullet_max_bet]);
			GameTextForPlayer(playerid,stringer,3000,3);
			break;
		}
	}

	for(new f = 0; f < MAX_FARMS; f++)
	{
		if(areaid == _farm[f][farm_pickup_info])
		{
			stringer[0] = EOS;
			strcat(stringer,"                                                                             \t \n");
			strcat(stringer,INFO_FARM_1);
			strcat(stringer,INFO_FARM_2);
			strcat(stringer,INFO_FARM_3);
			strcat(stringer,"                                                                             \t \n");
			strcat(stringer,"{FF6347}[ Информация о ферме ] {FFFFFF}\n\n");
			if(!strcmp(_farm[f][farm_owner], "The State"))
				strcat(stringer,"{2DB043}1. {F0F0F0}В данный момент ферма продается!\nЧтобы её купить введите: {BE2D2D}/buyfarm\n");
			else
				format(stringer, 2500, "%s{2DB043}1. {F0F0F0}Владелец фермы: {BE2D2D}%s\n",stringer, _farm[f][farm_owner]);
			format(stringer, 2500, "%s{2DB043}2. {F0F0F0}На складе фермы: {BE2D2D}%d {F0F0F0}кг.\n",stringer, _farm[f][farm_owner]);
			format(stringer, 2500, "%s{2DB043}3. {F0F0F0}Цена за 1 куст: {BE2D2D}%d {33AA33}$",stringer, _farm[f][farm_cost_flow]);
			strcat(stringer,"\n\n{C8C4BA}Надеюсь данная информация была тебе полезна. Удачной работы{FFFFFF}\n");
			ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "      ",stringer,"Закрыть", "");
		}
		else if(areaid == _farm[f][farm_pickup_dress])
		{
			ShowPlayerDialog(playerid,18996,DIALOG_STYLE_LIST, "   ", "{73B461}-{FFFFFF} Переодеться и начать/закончить работу", "Принять","Отмена");
			SetPVarInt(playerid, "who_is_farm", f);
			break;
		}
		for(new f2 = 0; f2 < 3; f2++)
		{
			if(areaid == _farm[f][farm_area_first][f2])
			{
				if ( GetPVarInt(playerid, "bomber_farm_sell" ) )
				{
					SetPVarInt ( playerid, "salary_farm", GetPVarInt(playerid, "salary_farm") + _farm[f][farm_cost_flow]);
					new farm_string[128];
					format(farm_string, sizeof(farm_string), "~w~3APABOTANO: + ~w~%i ~g~$~n~~w~BCEGO: ~w~%i ~g~$",_farm[f][farm_cost_flow],GetPVarInt(playerid, "salary_farm"));
					GameTextForPlayer(playerid, farm_string, 1000, 1);
					FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
					DeletePVar ( playerid, "bomber_farm_sell" ) ;
					//
					//if ( IsValidDynamicObject ( farm_object_flows[f][f2][_farm[f][farm_count_flows][f2]] ) ) DestroyDynamicObject ( farm_object_flows[f][f2][_farm[f][farm_count_flows][f2]] ) ;
					//farm_object_flows[f][f2][_farm[f][farm_count_flows][f2]] = CreateDynamicObject ( 2901 , 20.0 , 20.0 , 20.0 , 0 , 0 , 0 );
					//AttachDynamicObjectToVehicle ( farm_object_flows[f][f2][_farm[f][farm_count_flows][f2]], _farm[f][farm_vehicles_first][f2], attach_pos_farm[_farm[f][farm_count_flows][f2]][0], attach_pos_farm[_farm[f][farm_count_flows][f2]][1], attach_pos_farmf[_farm[f][farm_count_flows][f2]][2], 0.0,0.0,0.0);
					_farm[f][farm_count_flows][f2]++;
					if ( _farm[f][farm_count_flows][f2] < 50 )
					{
						new _farm_string[128];
						format(_farm_string, 128, TEXT_MACHINE_WALTON_FARM_P, _farm[f][farm_count_flows][f2]);
						UpdateDynamic3DTextLabelText(_farm[f][farm_vehicles_first_text][f2],0xFFFFFFDD,_farm_string);
					}
					else UpdateDynamic3DTextLabelText(_farm[f][farm_vehicles_first_text][f2],0xFFFFFFDD,TEXT_MACHINE_WALTON_FARM_F);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				}
				if ( _farm[f][farm_count_flows][f2] < 50 ) TogglePlayerDynamicCP(playerid, farm_cp[f][f2][random(6)], true);
				break;
			}
		}
	}

	if(areaid == ShahtaPick[0])
	{
		if(!GetPVarInt(playerid, "Miner")) ShowPlayerDialog(playerid, 150, 0, "Шахта", "Здравствуйте, вы желаете заключить контракт о добыче руды из подземной шахты?\n\
		Заработная плата составляет 5$ за один добытый киллограм руды.", "Да", "Нет");
		else ShowPlayerDialog(playerid, 151, 0, "Шахта", "Вы желаете закончить работу и получить свои деньги?", "Да", "Нет");
		return 1;
	}
	if(areaid == ShahtaPick[1])
	{
		if(!GetPVarInt(playerid, "OldMinerSkin"))
		{
			if(!GetPVarInt(playerid, "Miner")) return 1;
			SetPVarInt(playerid, "OldMinerSkin",GetPlayerSkin(playerid));
			SetPlayerSkin(playerid, 27);
			SetPlayerChatBubble(playerid,"Переоделся(ась)", 0x8fcb00AA, 20.0, 5000);
			SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000 );
			SetPlayerAttachedObject(playerid,0,18641,2,0.156000,0.078999,0.005999,85.900009,-0.399999,23.900003,1.000000,1.000000,0.483999);
		}
		else
		{
			SetPlayerSkin(playerid, GetPVarInt(playerid, "OldMinerSkin"));
			SetPlayerChatBubble(playerid,"Переоделся(ась)", 0x8fcb00AA, 20.0, 5000);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			DeletePVar(playerid, "OldMinerSkin");
		}
		return 1;
	}

	if(areaid >= GardenCheckpoints[0] && areaid <= GardenCheckpoints[75])
	{
		if(GetPVarInt(playerid, "Collector"))
		{
			for(new j = 0; j < 76; j++)
			{
				if(areaid==GardenCheckpoints[j])
				{
					if(GardenTreesIs[j]==-1)
					{
						SendErr(playerid,"С данного дерева нельзя собирать яблоки, оно еще не выросло");
						break;
					}
					new slot = random(17);
					CreateGardenCount(playerid);
					TextDrawShowForPlayer(playerid, TD_Apple[slot]);
					TextDrawShowForPlayer(playerid, Korzinka);
					PlayerTextDrawShow(playerid,GardenCount[playerid]);
					SelectTextDraw(playerid, CGREEN);
					SetPVarInt(playerid, "sobr_slot", slot + 1);
					SetPVarInt(playerid, "garden_id", j);
					GameTextForPlayer(playerid, "~w~KLIKAITE PO YABLOKAM", 2000, 1);
					return 1;
				}
			}
		}
	}
	if(areaid == GardenPick)
	{
		if(GetPVarInt(playerid, "Collector") == 0) ShowPlayerDialog(playerid, 1532, 0, "{"#cWHITE"}Сад", "{"#cWHITE"}Здравствуйте, желатете ли вы заключить контракт о сборе фруктов?\n\
		Заработная плата составляет 350$ за 1 киллограм (30 яблок).", "Да", "Нет");
		else ShowPlayerDialog(playerid, 1531, 0, "{"#cWHITE"}Сад", "{"#cWHITE"}Вы желаете закончить работу и получить свои деньги?", "Да", "Нет");
		return 1;
	}
	if(areaid >= lowrider_area[0] && areaid <= lowrider_area[sizeof(lowrider_area)-1])
	{
		if (SelectLowride[playerid][3]==0)
		{
			for(new i = 0; i < sizeof(lowrider_area); i++)
			{
				if(areaid == lowrider_area[i])
				{
					if ( TimeLowRide <= 100 && TimeLowRide != 0) return SendClientMessage(playerid,0xAFAFAFFF, "Регистрация на Low Co окончена. Ожидайте 2 минуты");
					ShowPlayerDialog(playerid, dLowStavka, DIALOG_STYLE_INPUT, "{ffffff}Ставка", "{ffffff}Введите сумму ставки", "Далее", "Отмена");
					SetPVarInt(playerid, "lowrider_area", i);
					break;
				}
			}

			return 1;
		}
	}

	/*if(areaid == door_spawn_ls_area[0])
	{
		if(door_spawn_ls_state == 0)
		{
			CreateDoorTD(playerid);
			MoveObject(door_spawn_ls[0],1735.003 + 0.5,-1856.647,12.649,SPEED_DOOR_SPAWN_LS,0.000,0.000,-13.0000);
			MoveObject(door_spawn_ls[1],1733.149 + 0.5,-1858.999,12.649,SPEED_DOOR_SPAWN_LS,0.000,0.000,-69.0000);
			door_spawn_ls_state = 1;
		}
		else if(door_spawn_ls_state == 2) SetToPosDoor(playerid);
	}
	else if(areaid == door_spawn_ls_area[1])
	{
		if(door_spawn_ls_state == 0)
		{
			CreateDoorTD(playerid);
			MoveObject(door_spawn_ls[0],1735.003 + 0.5,-1856.647,12.649,SPEED_DOOR_SPAWN_LS,0.000,0.000,98.0000);
			MoveObject(door_spawn_ls[1],1733.149 + 0.5,-1858.999,12.649,SPEED_DOOR_SPAWN_LS,0.000,0.000,-176.0000);
			door_spawn_ls_state = 1;
		}
		else if(door_spawn_ls_state == 2) SetToPosDoor(playerid);
	}*/

	if(areaid == surf_area_buy[0] || areaid == surf_area_buy[1])
	{
		new type_for_send = -1;
		if(areaid == surf_area_buy[0])
		{
			type_for_send = 0;
			listen_surf[playerid][0]=0;
			listen_surf[playerid][1]=1;
		}
		else  if(areaid == surf_area_buy[1])
		{
			type_for_send = 1;
			listen_surf[playerid][0]=25;
			listen_surf[playerid][1]=2;
		}
		if(SendBotSurfMessage(type_for_send,"- Добро пожаловать в мой магазин серфбордов.\nУ меня богатый ассортимент на любой вкус.\nПользуйтесь аккуратно и получайте удовольствие!"))
		{
			SendClientMessage(playerid, -1, "Начните выбор серфборда, нажимайте {DFCFCF}< NUM 4 и NUM 6 >");
			SendClientMessage(playerid, -1, "Для потверждения нажмите {DFCFCF}ПРОБЕЛ{FFFFFF} для отмены {DC4747}ENTER");
		}
	}

	/*for(new i = TOTALFIRE[0]; i <= TOTALFIRE[1]; i++)
	{
		if(!FireSystem[i][fStatus]) continue;
		if(!IsValidDynamicArea(FireSystem[i][fZone])) continue;
		if(areaid == FireSystem[i][fZone]) {
			new s = GetPlayerSkin(playerid);
			if(s == 277 || s == 278 || s == 279)
			{
				if(GetPVarInt(playerid, "FireBar") >= 1)
				{
					SetPlayerProgressBarValue(playerid, universalbar[playerid], FireSystem[i][fHealth]);
				}
				else {
					SetPVarInt(playerid, "FireBar", 1);
					universalbar[playerid] = CreatePlayerProgressBar(playerid, 600.333, 202.014, 13.666, 192.059, 0xFFFFFFFF, 5);
					ShowPlayerProgressBar(playerid, universalbar[playerid]);
					SetPlayerProgressBarMaxValue(playerid, universalbar[playerid], 600);
					SetPlayerProgressBarValue(playerid, universalbar[playerid], FireSystem[i][fHealth]);
				}
			}
			break;
		}
	}*/

	if(areaid >= pos_sit_acc_area[0] && areaid <= pos_sit_acc_area[8])
	{
		for(new i=0;i<9;i++)
		{
			if(areaid == pos_sit_acc_area[i])
			{
				for ( new s = 0 ; s < 22 ; s++) TextDrawShowForPlayer(playerid,acc_box[s]);
				for ( new s = 0 ; s < 5; s++ ) TextDrawShowForPlayer(playerid,acc_info_box[s]);

				SelectTextDraw(playerid, 0xFFFFFF90);

				AC_SetPlayerPos(playerid,pos_sit_acc[i][0],pos_sit_acc[i][1],pos_sit_acc[i][2]);
				SetPlayerFacingAngle(playerid,pos_sit_acc[i][3]);

				SetPVarInt(playerid,"id_sit_acc_area",i + 1);

				FIXES_ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 1);
			}
		}
	}

	if ( GetPlayerState ( playerid ) == 2 )
	{
		foreach(i)
		{
			if(areaid == radar_area [ i ] )
			{
				new PlayerSpeed = GetSpeed( playerid );

				if ( radar_object [ i ] [ 1 ] != INVALID_OBJECT )
				{
					new str_radar [ 150 ] ;
					format ( str_radar , 150 , "Радар №{"#cORANGE"}%d{ffffff}\nМаксимальная скорость: {"#cORANGE"}%d {ffffff}км/ч\n%s- == %s [ %d км/ч ] ==-" ,
					GetPVarInt ( i , "total_radars" ) , GetPVarInt ( i , "max_speed" ) , ( PlayerSpeed > GetPVarInt ( i , "max_speed" ) ) ? ( "{ff0000}" ) : ( "{33aa33}" ) , NamePlayer [playerid], PlayerSpeed ) ;
					SetDynamicObjectMaterialText(radar_object [ i ] [ 1 ], 0, str_radar, 120, "Segoe Keycaps", 35, 1, -1, 0, 1);

					toogle_radar [ i ] = 5;
				}

				break;
			}
		}
	}

	for(new h = 1; h < TotalHouse; h++)
	{
		if(areaid != gHouses[h][hArea]) continue;

		new subsidia = floatround(gHouses[h][hValue] * 0.005);
		if(gHouses[h][houseImprove][3]) subsidia = subsidia / 2;
		new raion[30];
		GetPlayer2DZone(playerid,raion,30);

		if(strcmp(gHouses[h][houseOwner], "The State"))
		{
			if ( gHouses[h][hFamily] && p_info[playerid][pFamily] != gHouses[h][hFamily])
			{
				format(stringer, 250, "{f0f0f0}Внимание!\nЭтот дом принадлежит семье ' %s '.\n\nУ вас есть возможность вступить в эту семью, для этого нужно ввести секретный код в поле ниже.\nЕсли не желаете просто нажмите 'Отмена'", _family[gHouses[h][hFamily]-1][family_create_name]);
				ShowPlayerDialog(playerid,dEnterFamilyHouse,DIALOG_STYLE_INPUT,"{F0F0F0}Информация",stringer,"Ввод","Отмена");
			}
			else
			{
				new status_online[32] = "{AA3333}Оффлайн", id;
				sscanf(gHouses[h][houseOwner], "u", id);
				if(id != INVALID_PLAYER_ID) status_online = "{33AA33}Онлайн";
				stringer[0] = EOS;
				format(stringer, 1024, "{f0f0f0}Владелец: %s %s\n{f0f0f0}Класс: %s\nКвартплата: %d$ за 1 день\nНомер дома: %d (%d)\nОплачено дней: %d\nГосударственная цена: %d\nРайон: %s\n",gHouses[h][houseOwner],status_online,gHousesClassName[gHouses[h][hKlass]-1],subsidia,gHouses[h][hID],h,gHouses[h][hDays],gHouses[h][hValue],raion);
				strcat(stringer,"\nУстановки:\n\n");
				strcat(stringer,(gHouses[h][houseImprove][0]) ? ("Сейф для хранения наркотиков и денег: Есть\n") : ("Сейф для хранения наркотиков и денег: Нет\n"));
				strcat(stringer,(gHouses[h][houseImprove][1]) ? ("Шкаф для одежды и оружия: Есть\n") : ("Шкаф для одежды и оружия: Нет\n"));
				strcat(stringer,(gHouses[h][houseImprove][2]) ? ("Холодильник: Есть\n") : ("Холодильник: Нет\n"));
				strcat(stringer,(gHouses[h][houseImprove][3]) ? ("Субсидии для снижения кварт. платы: Есть\n") : ("Субсидии для снижения кварт. платы: Нет\n"));
				if(gHouses[h][gRentStatus])
				{
					strcat(stringer,"\nАренда: Включена {e7e7e7}(/renthome)\n");
				}
				ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX,"Дом занят",stringer,"Войти","Отмена");
			}
		}
		else
		{
			stringer[0] = EOS;
			format(stringer, 1024, "{f0f0f0}Номер дома: %d (%d)\nЦена: %d$\nКласс: %s\nКвартплата: %d$ за 1 день\nРайон: %s\n\nНа следующем шаге вы сможете купить этот дом или посмотреть его интерьер",gHouses[h][hID],h,gHouses[h][hValue],gHousesClassName[gHouses[h][hKlass]-1],subsidia,raion);
			ShowPlayerDialog(playerid,10026,DIALOG_STYLE_MSGBOX,"Дом продается",stringer,"Далее","Отмена");
		}

		SetPVarInt(playerid,"HOUSE_ID", h ) ;

		break;
	}
	new PWorld = GetPlayerVirtualWorld(playerid);
	if ( areaid >= gWashRoomAreaid[0] && areaid <= gWashRoomAreaid[3] && p_info[playerid][pHouse] == PWorld && p_info[playerid][pHouse] > 0 )
	{
		ShowPlayerDialog(playerid,dWashRoom,DIALOG_STYLE_MSGBOX,"{"#cBLUE"}Душ", "{"#cWHITE"}Вы действительно хотите принять душ?", "Да", "Нет");
	}
	else if(areaid == prodArea)
	{
		if(GetPVarInt(playerid,"prod_vehicle_id") == GetPlayerVehicleID(playerid)
		&& !GetPVarInt(playerid,"prod_id")
		&& GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new veh = GetPlayerVehicleID(playerid);
			if(gVehicles[veh-1][vJob]==1)
			{
				ShowPlayerDialog(playerid,dProdGet,DIALOG_STYLE_INPUT,""neworange"Продукты",""nwhite"Используйте количество продуктов которое вы хотите закупить "newgray"(от 100 до 1000)","Ввод","Отмена");
			}
			else if(gVehicles[veh-1][vJob]==3)
			{
				ShowPlayerDialog(playerid,dProdGet,DIALOG_STYLE_INPUT,""neworange"Топливо",""nwhite"Используйте количество топлива которое вы хотите закупить "newgray"(от 100 до 1000 литров)","Ввод","Отмена");
			}
			ToggleEngine(veh);
			//TogglePlayerDynamicCP(playerid, prodCP, false);
			DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
	}
	else if((areaid >= load_mats_ar[0] && areaid <= load_mats_ar[2]) && IsAArm(playerid))
	{
		FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		SetPlayerAttachedObject(playerid, 1, 2358, 1,0.11,0.36,0.0,0.0,90.0);
		FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		SetPVarInt(playerid,"usemats", true);
	}
	else if(areaid >= gExitHome[0] && areaid <= gExitHome[3] && (PWorld > 0 && PWorld < TotalHouse))
	{
		if ( p_info[playerid][pHouse] == PWorld)
		{
			ShowPlayerDialog(playerid,70,DIALOG_STYLE_MSGBOX,"Выход из дома","{"#cWHITE"}Выберите место, куда вы хотите выйти:", "Улица", "Гараж");
		}
		else if(p_info[playerid][pTempKey] == PWorld)
		{
			ShowPlayerDialog(playerid,dRentGarage,DIALOG_STYLE_MSGBOX,"Выход из дома","{"#cWHITE"}Выберите место, куда вы хотите выйти:", "Улица", "Гараж");
		}
		else
		{
			AC_SetPlayerPos(playerid,gHouses[PWorld][houseX],gHouses[PWorld][houseY],gHouses[PWorld][houseZ]);
			SetPlayerFacingAngle(playerid,gHouses[PWorld][houseA]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}
	}
	else if(areaid == pickuptook && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ShowPlayerDialog(playerid,136,DIALOG_STYLE_MSGBOX,"{FFFFFF}Прокат лыж","{FFFFFF}Здравствуйте:\n\nВы хотите взять в прокат {ffff00}лыжи\n{FFFFFF}Стоимость проката: {ffff00}50.000$\n\n{FFFFFF}Вы согласны?","Да","Нет");
	}
	else if((areaid >= gTeleportPick[0][0] && areaid <= gTeleportPick[TP_COUNT-1][0] ||
			areaid >= gTeleportPick[0][1] && areaid <= gTeleportPick[TP_COUNT-1][1]) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new tp = floatround((areaid-1)/2);
		new Float:HP;
		if(areaid==gTeleportPick[tp][0])
		{
			if( tp == 29 && GetPVarInt(playerid,"pHospital"))
			{
				GetPlayerHealth(playerid,HP);
				if(HP < 80.0)
				{
					SendErr(playerid, "Мы не можем вас выпустить в таком состоянии");
					return 1;
				}
			}
			if(tp == 27 && GetPVarInt(playerid,"pHospital"))
			{
				GetPlayerHealth(playerid,HP);
				if(HP < 80.0)
				{
					SendErr(playerid, "Мы не можем вас выпустить в таком состоянии");
					return 1;
				}
			}
			//if(tp == 37 && (p_info[playerid][tMember] != 25 && p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 26)) return SendErr(playerid, "У вас нет ключа от этой двери"), 1;
			if(tp == 20 && !IsAMedic(playerid)) return SendErr(playerid, "У вас нет ключа от этой двери"), 1;
			if(tp == 30 && !IsAMedic(playerid)) return SendErr(playerid, "У вас нет ключа от этой двери"), 1;
			if(tp == 28 && !IsAMedic(playerid)) return SendErr(playerid, "У вас нет ключа от этой двери"), 1;
			if(tp == 19 && GetPVarInt(playerid,"pHospital"))
			{
				GetPlayerHealth(playerid,HP);
				if ( HP < 80.0 )
				{
					SendErr(playerid, "Мы не можем вас выпустить в таком состоянии");
					return 1;
				}
			}
			if(tp == 6 && !IsACop(playerid) || tp==9 && !IsACop(playerid) || tp == 8 && !IsACop(playerid) || tp == 12 && !IsACop(playerid)) return SendClientMessage(playerid,-1,"У вас нет ключа от этой двери");

			if(PlayerToPoint(3.0,playerid,gTeleportsToD[tp][0][0],gTeleportsToD[tp][0][1],gTeleportsToD[tp][0][2]))
			{
				AC_SetPlayerPos(playerid,gTeleportsToD[tp][1][0]+(1.5 * floatsin(-gTeleportsToD[tp][1][3], degrees)),
										 gTeleportsToD[tp][1][1]+(1.5 * floatcos(-gTeleportsToD[tp][1][3], degrees)),gTeleportsToD[tp][1][2]);
				SetPlayerFacingAngle(playerid,gTeleportsToD[tp][1][3]);
				SetPlayerVirtualWorld(playerid,gTeleportDataToD[tp][1][1] == -1 ? GetPlayerVirtualWorld(playerid) : gTeleportDataToD[tp][1][1]);
				SetPlayerInterior(playerid,gTeleportDataToD[tp][1][0] == -1 ? GetPlayerInterior(playerid) : gTeleportDataToD[tp][1][0]);

			   /*SetTimerEx("CameraSetPlayerPos", 50, 0, "ifff", playerid, gTeleportsToD[tp][1][0]+(1.0 * floatsin(-gTeleportsToD[tp][1][3], degrees)),
																			gTeleportsToD[tp][1][1]+(1.0 * floatcos(-gTeleportsToD[tp][1][3], degrees)),
																			gTeleportsToD[tp][1][2], gTeleportsToD[tp][1][3]);*/

				//printf ( "gTeleportsToD[%d][0]", tp);
				//FreezePlayerForTime(playerid, 1500);
				SetCameraBehindPlayer(playerid);
			}
		}
		else if(areaid==gTeleportPick[tp][1])
		{
			//if(tp == 37 && (p_info[playerid][tMember] != 25 && p_info[playerid][tMember] != 2 && p_info[playerid][tMember] != 26)) return SendErr(playerid, "У вас нет ключа от этой двери"), 1;
			if(tp == 4 && p_info[playerid][tMember] != 18) return SendErr(playerid, "Вы не состоите в The Rifa Gang"), 1;
			if(tp == 21 && p_info[playerid][tMember] != 15) return SendErr(playerid, "Вы не состоите в Grove Street"), 1;
			if(tp == 22 && p_info[playerid][tMember] != 12) return SendErr(playerid, "Вы не состоите в The Ballas"), 1;
			if(tp == 23 && p_info[playerid][tMember] != 13) return SendErr(playerid, "Вы не состоите в The Vagos"), 1;
			if(tp == 24 && p_info[playerid][tMember] != 17) return SendErr(playerid, "Вы не состоите в The Aztecas"), 1;
			if(tp==9 && !IsACop(playerid) || tp == 8 && !IsACop(playerid) || tp == 12 && !IsACop(playerid)) return SendErr(playerid, "У вас нет ключа от этой двери"), 1;
			if(PlayerToPoint(3.0,playerid,gTeleportsToD[tp][1][0],gTeleportsToD[tp][1][1],gTeleportsToD[tp][1][2]))
			{
				AC_SetPlayerPos(playerid,gTeleportsToD[tp][0][0]+(1.5 * floatsin(-gTeleportsToD[tp][0][3], degrees)),
										 gTeleportsToD[tp][0][1]+(1.5 * floatcos(-gTeleportsToD[tp][0][3], degrees)),gTeleportsToD[tp][0][2]);
				SetPlayerFacingAngle(playerid,gTeleportsToD[tp][0][3]);
				SetPlayerVirtualWorld(playerid,gTeleportDataToD[tp][0][1] == -1 ? GetPlayerVirtualWorld(playerid) : gTeleportDataToD[tp][0][1]);
				SetPlayerInterior(playerid,gTeleportDataToD[tp][0][0] == -1 ? GetPlayerInterior(playerid) : gTeleportDataToD[tp][0][0]);
				/*SetTimerEx("CameraSetPlayerPos", 50, 0, "ifff", playerid, gTeleportsToD[tp][0][0]+(1.0 * floatsin(-gTeleportsToD[tp][0][3], degrees)),
															gTeleportsToD[tp][0][1]+(1.0 * floatcos(-gTeleportsToD[tp][0][3], degrees)),
															gTeleportsToD[tp][0][2], gTeleportsToD[tp][0][3]);*/
				//printf ( "gTeleportsToD[%d][1]", tp);
				//FreezePlayerForTime(playerid, 1500);
				SetCameraBehindPlayer(playerid);
			}
		}
		return 1;
	}
	else if(areaid >= gPickID[0] && areaid <= gPickID[PICKUPS_COUNT-1])
	{
		new pick = (areaid-1)-(TP_COUNT*2);
		if(areaid == gPickID[pick])
		{
			if(PlayerToPoint(3.0,playerid,gPickup[pick][0],gPickup[pick][1],gPickup[pick][2]))
			{
				switch(pick)
				{
					case 0:
					{
						if(GetPVarInt(playerid,"AutoExam")) return 1;
						ShowPlayerDialog(playerid,dAutoExam1,0,"Автошкола","{"#cINFO"}\t\t\t\t\t\tШкола вождения\n\n{"#cWHITE"}Добро пожаловать в автошколу. Чтобы сдать на права Вам нужно выполнить следующие действия\n1. Прочитайте и запомните ПДД\n2. Сдайте тест на знание ПДД\n3. Сдайте практический экзамен иструктору","Далее","Выход");
						SetPVarInt(playerid,"AutoExam", true);
					}
					//case 1:ShowPlayerDialog(playerid,1775,DIALOG_STYLE_MSGBOX,"Работа автоугонщика","Вы уверены, что хотите устроиться на работу автоугонщика?","Да","Нет");
					case 2:
					{
						if(!IsACop(playerid)) return 1;
						stringer[0] = EOS;
						format(stringer,1500,"{"#cWHITE"}Фонарик\t%s\nЗначек полицейского\t%s\nКепка\t%s\nЩит\t%s\n",
						GetPVarInt(playerid, "ODEL_0") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"),GetPVarInt(playerid, "ODEL_1") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"),
						GetPVarInt(playerid, "ODEL_2") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"),GetPVarInt(playerid, "ODEL_3") ? ("{"#cRED"}снять{"#cWHITE"}") : ("{"#cGREEN"}одеть{"#cWHITE"}"));
						ShowPlayerDialog(playerid, dPolice, DIALOG_STYLE_TABLIST, "{"#cINFO"}Экипировка",stringer, "Одеть", "Отмена");
					}
					case 3:AC_SetPlayerHealth(playerid, 100);
					case 4:ShowPlayerDialog(playerid,888,DIALOG_STYLE_LIST,"Помощь по игре","[1] > Информация о проекте "PROJECT_NAME_SHORT"\n[2] > Статистика и навыки персонажа\n[3] > Огранизации\n[4] > Безопасность","Выбрать","Отмена");
					case 5:
					{
						if(p_info[playerid][tMember] != F_DEPJUST) return SendErr(playerid,"Вы не cостоите в Министерстве"),1;
						if(!start_work[playerid]) return SendErr(playerid,"Вам необходимо начать рабочий день на базе организаций");
						//stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nSilenced Pistol\t50\nMP5\t150\nБронежилет";
						//ShowPlayerDialog(playerid,dGunAP,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
						ShowGetGun(playerid);
					}
					case 6:
					{
						if(p_info[playerid][tMember] != F_CHSF) return SendErr(playerid, "Вы не cостоите в Мэрии"),1;
						AC_GivePlayerWeapon(playerid, 24, 35);
					}
					case 7:ShowPlayerDialog(playerid,2423,DIALOG_STYLE_TABLIST,"Cвадебная форма","Форма свещеника\nКостюм свидетеля\t(3.000)\nКостюм свидетельницы\t(3.000)\nКостюм Жениха\t(5.000)\nКостюм невесты\t(5.000)","Выбор","Отмена");
					case 8,9:
					{
						if(!IsAGang(playerid) && !ISAMAFIA(playerid)) return 1;
						if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
						{
							if(frac_metall[3] < 250) return SendErr(playerid, "Склад армии SF пуст");
							frac_metall[3] -= 250;
							UpdateFractionStore(3);
						}
						if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938))
						{
							if(frac_metall[19] < 250) return SendErr(playerid, "Склад армии LV пуст");
							frac_metall[19] -= 250;
							UpdateFractionStore(19);
						}
						if(GetPVarInt(playerid,"TempMats") != 0) return SendClientMessage(playerid,CRED,"Вы уже взяли ящик.");
						SCM(playerid, 0x6495EDFF, "Вы взяли 250 металла со склада армии");
						SCM(playerid, CGREEN, "Несите ящик в грузовик");
						SetPVarInt(playerid,"TempMats", 250);
						FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
						SetPlayerAttachedObject(playerid, 1, 2358, 1,0.11,0.36,0.0,0.0,90.0);
						FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
						SetPVarInt(playerid,"usemats", true);
					}
					case 10:
					{
						if(!IsAGang(playerid) && !ISAMAFIA(playerid)) return SendErr(playerid, "Вы не состоите в банде/мафии");
						if(GZInfo[64][gFrakVlad] == p_info[playerid][tMember]) ShowPlayerDialog(playerid, 9699, DIALOG_STYLE_INPUT, "{ffff00}Покупка наркотиков", "{FFFFFF}Стоимость наркотиков: {7FB151}25$/грамм\n{FFFFFF}Используйте нужное количество:", "Принять", "Выйти");
						else ShowPlayerDialog(playerid, 9699, DIALOG_STYLE_INPUT, "{ffff00}Покупка наркотиков", "{FFFFFF}Стоимость наркотиков: {7FB151}50$/грамм\n{FFFFFF}Используйте нужное количество:", "Принять", "Выйти");
					}
					/*case 11:
					{
						if(!IsAGang(playerid)) return SCM(playerid, CWHITE, "Вы не бандит");
						ShowPlayerDialog(playerid,9670,DIALOG_STYLE_INPUT,"Закупка наркотиков", "Укажите, сколько таблеток адреналина хотите закупить. Стоимость: 1 таблетки - 30$", "Готово", "Отмена");
					}*/
					case 12:
					{
						if(p_info[playerid][tMember] != F_FBI) return SendErr(playerid,"Вы не агент FBI"),1;
						if(!start_work[playerid]) return SendErr(playerid,"Вам необходимо начать рабочий день на базе организаций");
						//stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nDesert Eagle\t50\nShotgun\t50\nMP5\t150\nM4\t150\nSniper Rifle\t30\nБронежилет";
						//ShowPlayerDialog(playerid,dGunFBI,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
						ShowGetGun(playerid);
					}
					case 13:
					{
						if(p_info[playerid][tMember] != F_JTTF) return SendErr(playerid,"Вы не cостоите в H.R.T!"),1;
						//AC_ResetPlayerWeapons(playerid);
						if(!start_work[playerid]) return SCM(playerid,CWHITE,"Вам необходимо начать рабочий день на базе организаций");
						//stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nDesert Eagle\t50\nShotgun\t50\nMP5\t150\nM4\t150\nSniper Rifle\t30\nБронежилет";
						//ShowPlayerDialog(playerid,dGunFBI,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
						ShowGetGun(playerid);
					}
					/*case 14..17:
					{
						if ( 0 == p_info[playerid][pHouse] && 0 == p_info[playerid][pTempKey] && 0 == p_info[playerid][pRoom] ) return SendErr(playerid,"У вас нет дома или вы его не арендуете / номера в отеле.");
						else if ( Lic[playerid][0] == 0 ) return SendErr(playerid,"У вас нет водительских прав");
						else if(pick == 14)
						{
							ShowBuyCar(playerid);
						}
						else ShowPlayerDialog(playerid,2323,0," ","Выберите класс машин",(pick == 15) ? ("C") : ("A"),(pick == 15) ? ("D") : ("B"));
						SetPVarInt(playerid,"AutoShop",pick - 13);
					}*/
					case 18: AC_GivePlayerWeapon(playerid, 46, 1);
					case 19: return ShowBankMainMenuForPlayer(playerid);
					case 20:
					{
						if(!IsAArm(playerid)) return SendErr(playerid,"Вы не военный");
						ShowPlayerDialog(playerid,dStartJobArmy,DIALOG_STYLE_MSGBOX,"{"#cGREEN"}Склад оружия", "\n\n\n{"#cWHITE"}Вы действительно хотите начать охрану базы?\n\nОплата: {"#cGREEN"}50${"#cWHITE"} за 1 минуту", "Начать", "Закончить");
					}
					case 21: if(!IsAArm(playerid)) return SendErr(playerid,"Вы не военный");
					case 22: ShowPlayerDialog(playerid, 154, 0, "{"#cINFO"}Лесопилка", (!GetPVarInt(playerid, "lesopilka")) ? ("{"#cWHITE"}Вы хотите начать работу на лесопилке?") : ("{"#cWHITE"}Вы хотите завершить работу на лесопилке?"), "Да", "Нет");
					case 23:
					{
						stringer[0] = EOS;
						strcat(stringer, "{"#cWHITE"}Добро пожаловать на лесопилку.\n\nЗдесь Вы сможете заработать немного денег, вы пилите лес и приносите\nего на склад. За каждый принесенный кг вы получаете {"#cGREEN"}2${"#cWHITE"}\nс одного дерева может быть от {"#cYELLOW"}30{"#cWHITE"} до {"#cYELLOW"}80{"#cWHITE"} кг.\n\n", 1500);
						strcat(stringer, "Чтобы начать работу встаньте на пикап одежды, далее у Вас на мини карте\nотобразится дерево которое нужно спилить, следуете к нему, далее\nвстаньте на чекпоинт и начинаете нажимать {"#cYELLOW"}пилить{"#cWHITE"} дерево.\n", 1500);
						ShowPlayerDialog(playerid, 0, 0, "{"#cINFO"}Лесопилка", stringer, "Закрыть", "");
					}
					case 24: ShowPlayerDialog(playerid,dGunWork,0,"{"#cWHITE"}Завод", (!GetPVarInt(playerid,"GunWork")) ? ("{"#cWHITE"}Желаете переодеться и начать работу в цехе?") : ("{"#cWHITE"}Желаете закончить работу и получить выручку?"),"Да","Нет");
					case 25..27: AC_SetPlayerHealth(playerid, 100);
					case 28:
					{
						new houseid_world = GetPlayerVirtualWorld(playerid);
						if(houseid_world > 0 && houseid_world < TotalHouse)
						{
							SetPlayerVirtualWorld(playerid,houseid_world);
							SetExitHousePos(playerid,houseid_world);
						}
					}
     				case 29..40:
					{
						new vw = GetPlayerVirtualWorld(playerid);

						if(pick == 29 && p_info[playerid][tMember] != F_SAPD) return SendErr(playerid,"Вы не состоите в Полиции Лос Сантос");
						if(pick == 30 && p_info[playerid][tMember] != F_FBI) return SendErr(playerid,"Вы не состоите в ФБР");
						if(pick == 31 && p_info[playerid][tMember] != F_NAVY) return SendErr(playerid,"Вы не состоите в ВМФ");
						if(pick == 32 && vw == 0 && p_info[playerid][tMember] != F_MCLS) return SendErr(playerid,"Вы не состоите в Больнице Лос Сантос");
						if(pick == 32 && vw == 1 && p_info[playerid][tMember] != 20) return SendErr(playerid,"Вы не состоите в Больнице Сан Фиерро");
						if(pick == 32 && vw == 2 && p_info[playerid][tMember] != 20) return SendErr(playerid,"Вы не состоите в Больнице Лас Вентурас");
						if(pick == 33 && p_info[playerid][tMember] != F_PMC) return SendErr(playerid,"Вы не состоите в A.R.G.U.S.");
						if(pick == 34 && p_info[playerid][tMember] != F_AUTOS) return SendErr(playerid,"Вы не состоите в Инструкторах");
						if(pick == 35 && p_info[playerid][tMember] != F_SANN) return SendErr(playerid,"Вы не состоите в Радио Лос Сантос");
						if(pick == 36 && p_info[playerid][tMember] != F_NATGUARD) return SendErr(playerid,"Вы не состоите в Зоне 51");
						if(pick == 37 && p_info[playerid][tMember] != F_SWAT) return SendErr(playerid,"Вы не состоите в Полиции Лас Вентурас");
						if(pick == 38 && p_info[playerid][tMember] != F_JTTF) return SendErr(playerid,"Вы не состоите в S.W.A.T");
						if(pick == 39 && p_info[playerid][tMember] != F_WHOUSE) return SendErr(playerid,"Вы не состоите в Правительстве");
						if(pick == 40 && vw == 700 && p_info[playerid][tMember] != F_DEPJUST) return SendErr(playerid,"Вы не состоите в Мэрии Лос Сантос");
						if(pick == 40 && vw == 800 && p_info[playerid][tMember] != F_CHSF) return SendErr(playerid,"Вы не состоите в Мэрии Лас Вентурас");
						if(pick == 40 && vw == 900 && p_info[playerid][tMember] != F_CHLV) return SendErr(playerid,"Вы не состоите в Мэрии Сан Фиерро");

						format(stringer,128,"{"#cWHITE"}Вы хотите %s{"#cWHITE"} рабочий день?",(!start_work[playerid]) ? ("{53FF19}начать") : ("{FF0303}закончить"));
						ShowPlayerDialog(playerid,1642,DIALOG_STYLE_MSGBOX, "{30C3F0}Раздевалка:",stringer,"Да","Нет");
					}
					case 41:
					{
						if(!IsAMayor(playerid)) return SendErr(playerid, "У вас нет доступа к служебному инвентарю");
						ShowGetGun(playerid);
						//ShowPlayerDialog(playerid, dDutyGun, DIALOG_STYLE_LIST, "Снаряжение", "{"#cWHITE"}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
					}
					case 42, 72:
					{
						if(p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 19)
						{
							if(frac_metall[p_info[playerid][tMember]] < 100) return SendErr(playerid, "На складе нет оружия");
							if(!start_work[playerid]) return SendErr(playerid, "Вам необходимо начать рабочий день на базе организаций");
							ShowGetGun(playerid);
							//AC_GivePlayerWeapon(playerid, 24, 21);
							//AC_GivePlayerWeapon(playerid, 31, 150);
							//AC_SetPlayerArmour(playerid, 100);
							//AC_SetPlayerHealth(playerid,100);
							//frac_metall[p_info[playerid][tMember]] -= 100;
							//UpdateFractionStore(p_info[playerid][tMember]);
							//SCM(playerid, CGREEN,"Выдано:   Броня, Desert Eagle (3 Обоймы), M4A1 (3 Обоймы)");
						}
					}
					case 43,44:
					{
						stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
						for(new floor = 0; floor != MAX_FLOORS; ++floor)
						{
							format(stringer, 1500, "%sЭтаж %i\n",stringer,floor+1);
						}
						ShowPlayerDialog(playerid, dFloor, DIALOG_STYLE_LIST, ""ORG"Лифт", stringer, "Выбрать", "Отмена");
					}
					case 45:
					{
						SetPlayerVirtualWorld(playerid,0);
						AC_SetPlayerPos(playerid, 1400.3339,549.7355,1005.7609);
						SetPlayerFacingAngle(playerid,299.7460);
					}
					case 46:
					{
						new floor = GetPlayerVirtualWorld(playerid)-1;
						new room = GetPlayerInterior(playerid)-1;
						if(room<=-1) room = 0;
						AC_SetPlayerPos(playerid,gRoomPos[room][0],gRoomPos[room][1],gRoomPos[room][2]);
						SetPlayerFacingAngle(playerid,gRoomPos[room][3]);
						SetPlayerVirtualWorld(playerid, floor);
						SetPlayerInterior(playerid,1);
					}
					case 47:
					{
						if(p_info[playerid][tMember] != 7 && p_info[playerid][tMember] != 26 || p_info[playerid][tRank] < 12)
							ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги","Выбрать","Закрыть");
						else
							ShowPlayerDialog(playerid,dKazna,DIALOG_STYLE_LIST,"{"#cWHITE"}Казна штата","Пожертвовать деньги\nВзять деньги из казны\nНазначить налог\nУправление зарплатой","Выбрать","Закрыть");
					}
					case 48:
					{
						ShowPlayerDialog(playerid,10098,DIALOG_STYLE_TABLIST,"{"#cWHITE"}Работа","{"#cORANGE"}1.{"#cWHITE"} Водитель автобуса \t{"#cORANGE"}(2 лвл)\n\
							{"#cORANGE"}2.{"#cWHITE"} Таксист \t{"#cORANGE"}(2 лвл)\n\
							{"#cORANGE"}3.{"#cWHITE"} Механик \t{"#cORANGE"}(3 лвл)\n\
							{"#cORANGE"}4.{"#cWHITE"} Развозчик продуктов \t{"#cORANGE"}(2 лвл)\n\
							{"#cORANGE"}5.{"#cWHITE"} Развозчик топлива \t{"#cORANGE"}(2 лвл)","ОК","Отмена");
					}
					case 49:
					{
						new count_homes = 0;
						stringer = "{"#cWHITE"}";
						for(new house = 1; house < TotalHouse; house++)
						{
							if(!strcmp(gHouses[house][houseOwner],"The State"))
							{
								count_homes++;
								format(stringer, 2450, "%s%s%i",stringer,(count_homes == 1) ? ("") : ("\t"),house);
								if(count_homes >= 21)
								{
									count_homes=0;
									strcat(stringer, "\n");
								}
							}
						}
						ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX, "{"#cYELLOW"}Номера свободных домов", stringer, "Закрыть", "");
					}
					case 50:
					{
						if(p_info[playerid][tMember] != 23) return 1;
						stringer = "{"#cWHITE"}";
						for (new i = 0; i < fraction_amount; i ++)	format(stringer, 1500, "%s%s\n", stringer, f_info[i][f_name]);
						ShowPlayerDialog(playerid, dSpy, DIALOG_STYLE_LIST, "Выберите фракцию", stringer, "Выбрать", "Закрыть");
					}
					case 51:
					{
						if(p_info[playerid][tMember] != 23) return 1;
						ShowGetGun(playerid);
						/*stringer[0] = EOS;
						for(new complect = 1; complect<=7; complect++)
						{
							format(stringer, 1500, "%s{"#cWHITE"}Комплект оружия %i {"#cGREEN"}%i0.000$\n",stringer,complect,complect);
						}
						ShowPlayerDialog(playerid,7765,DIALOG_STYLE_LIST, ""newblue"Покупка комплекта", stringer, "Купить", "Закрыть");*/
					}
					case 52..56:return ShowBankMainMenuForPlayer(playerid);
					case 57..59:
					{
						for(new i = 0; i < 5; i++)
						{
							TextDrawShowForPlayer(playerid,TD_Floor_CNN[i]);
							SelectTextDraw(playerid, COLOR_GREY);
							IsTDCNNShow[playerid]=true;
						}
					}
					case 60: ShowPlayerDialog(playerid, 989, DIALOG_STYLE_LIST, "{ffff00}Регистрация транспорта", "{FFFFFF}Автомобильный номер (Авто 1): {7FB151}10.000$\n{FFFFFF}Автомобильный номер (Авто 2): {7FB151}10.000$", "Выбрать", "Отмена");
					case 61:
					{
						SendClientMessage(playerid,COLOR_GREY,"Закрыто из-за сильной нагрузки в игре SA:MP");
					/*	if(Select_Football_Team[playerid] == -1 || Select_Football_Position[playerid] == -1)
							ShowPlayerDialog(playerid,d_select_football_team,DIALOG_STYLE_MSGBOX,"Выберите команду","            \n",Name_Football_Command[1], Name_Football_Command[0]);
						else SendClientMessage(playerid,COLOR_GREY,"Вы уже выбрали команду!"); */
					}
					case 62:
					{
						/*if(Select_Football_Team[playerid] != -1 && Select_Football_Position[playerid] != -1)
						{
							TextDrawHideForPlayer(playerid,TD_Time_Football);
							TextDrawShowForPlayer(playerid,Datum);
							Position_Football_Active[Select_Football_Team[playerid]][Select_Football_Position[playerid]]=false;
							Select_Football_Team[playerid] = -1;
							Select_Football_Position[playerid] = -1;
						}
						AC_SetPlayerPos(playerid, -2113.1208, -445.3672, 38.4775);
						SetPlayerFacingAngle(playerid, 89.5531);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid,0);*/
						//SetPVarInt(playerid, "EnterFootball", 0);
					}
					case 63: ShowPlayerDialog(playerid, 990, DIALOG_STYLE_LIST, "{ffff00}Авиакомпания г.Лос-Сантос", "Покупка Авиа Транспорта\nДоставить Авиа Транспорт в аэропорт: {7FB151}10.000$\n{FFFFFF}Продать самолёт Авиа-Компании", "Выбрать", "Отмена");
					case 64: ShowPlayerDialog(playerid, 991, DIALOG_STYLE_LIST, "{ffff00}Яхт-клуб г.Лос-Сантос", "Покупка лодки\nДоставить мою лодку к яхт-клубу: {7FB151}10.000$\nПродать лодку", "Выбрать", "Отмена");
					case 65:
					{
						//new bizid = p_info[playerid][pPbiskey];
						if(p_info[playerid][pPbiskey] == 0) return SendErr(playerid, "У вас нет бизнеса");
						else
						{
							if(gAPTurn[19] != INVALID_PLAYER_ID)
							{
								SendErr(playerid, "К сожалению все места в очереди заняты");
								return 1;
							}
							for(new i=19;i>=0;i--)
							{
								if(gAPTurn[i] == playerid)
								{
									SendErr(playerid, "Вы уже стоите в очереди");
									return 1;
								}
								if(i && gAPTurn[i] == INVALID_PLAYER_ID) continue;
								gAPTurn[i+1] = playerid;
								break;
							}
							SetPVarInt(playerid,"WaitExam1", true);
							SetPVarInt(playerid,"pWaitingExam1", true);
							return 1;
						}
					}
					case 66:
					{
						if(!IsACop(playerid)) return SendErr(playerid,"Вы не полицейский");
						ShowPlayerDialog(playerid,dStartJobPolice,DIALOG_STYLE_MSGBOX,"{"#cGREEN"}Больница", "\n\n\n{"#cWHITE"}Вы действительно хотите начать охрану больницы?\n\nОплата: {"#cGREEN"}50${"#cWHITE"} за 1 минуту", "Начать", "Закончить");
					}
					case 67:
					{
						if(Lic[playerid][3] == 1) return SendErr(playerid, "У вас уже есть лицензия");
						if(gPDTurn[19] != INVALID_PLAYER_ID)
						{
							SendErr(playerid, "К сожалению все места в очереди заняты");
							return 1;
						}
						for(new i=19;i>=0;i--)
						{
							if(gPDTurn[i] == playerid)
							{
								SendErr(playerid, "Вы уже стоите в очереди");
								return 1;
							}
							if(i && gPDTurn[i] == INVALID_PLAYER_ID) continue;
							gPDTurn[i+1] = playerid;
							break;
						}
						SetPVarInt(playerid,"WaitExam2", true);
						SetPVarInt(playerid,"pWaitingExam2", true);
					}
					case 68:
					{
						format(stringer,128,"{"#cWHITE"}Вы действительно хотите %s работу крупье?", (GetPVarInt(playerid,"krup")) ? ("закончить") : ("начать"));
						ShowPlayerDialog(playerid,dKrup,DIALOG_STYLE_MSGBOX, "{"#cWHITE"}Казино",stringer,"Да","Нет");
					}
					case 69: ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX, "{"#cBLUE"}Информация","В тире вы можете увеличить свои навыки стрельбы.\nСтоимость одного сеанса - 10.000$\nОдин сеанс длится 5 минут.\n\nДля начала сеанса встаньте на пикап\nСтреляйте по мишеням\nПосле 5 удачных попаданий ваш навык стрельбы улучшается","Закрыть","");
					case 70:
					{
						ShowPlayerDialog(playerid,dTuningMenu,DIALOG_STYLE_LIST, "{"#cORANGE"}Меню", "{AFAFAF}-- {ffffff}Заказ тюнинга\n{AFAFAF}-- {ffffff}Оформить заказ\n{AFAFAF}-- {ffffff}Просмотр заказанных услуг\n{AFAFAF}-- {ffffff}Информация", "Выбрать", "Закрыть");
					}
					case 71:
					{
						if(p_info[playerid][tMember]!=10)return true;
						//new gun_rim_string[700];
						//strcat(gun_rim_string,"{ffffff}");
						//for(new i=0;i<5;i++)format(gun_rim_string,700,"%s-%s\n",gun_rim_string,gun_name_rim[i]);
						//ShowPlayerDialog(playerid,dGunRIM,DIALOG_STYLE_LIST,"Оружие",gun_rim_string,"Выбрать","Отмена");
						ShowGetGun(playerid);
					}
					case 73:
					{
						if(PaintBallTime > (10 * 60)) return SendErr(playerid, "Ожидайте регистрации");
						if(GetPVarInt(playerid,"pteam")) return 1;
						ShowPlayerDialog(playerid,dPaintBall,DIALOG_STYLE_MSGBOX,"             ", "{"#cWHITE"}Вы действительно зарегистрироваться на PaintBall?\n\nСтоимость: {"#cGREEN"}2000$", "{"#cWHITE"}Да","{"#cWHITE"}Нет");
					}
					case 74:
					{
						if(unix-GetPVarInt(playerid,"RaceFlood") < 15) return 1;
						DeletePVar(playerid,"RaceFlood");
						if(GetPVarInt(playerid,"InRaces")) return 1;
						if(TimeRace > (10 * 60)) return SendClientMessage(playerid,COLOR_GREY,"Ожидайте регистрации");
						ShowPlayerDialog(playerid,D_RACE,DIALOG_STYLE_LIST,"{"#cWHITE"}Выберите машину для гонки","{E89410}Hotring Racer\n{E89420}Super GT\n{E89430}Bullet\n{E89440}Phoenix\n{E89450}Infernus\n{E89460}Turismo","Выбрать","Отмена");
						SetPVarInt(playerid,"RaceFlood",unix);
					}
				}
			}
		}
	}
	else if(areaid == frac_areaid[3])
	{
		StealMats(playerid);
	}
	else if(areaid >= gHouseImproveArea[0][0] && areaid <= gHouseImproveArea[3][2] && p_info[playerid][pHouse] == PWorld && p_info[playerid][pHouse] > 0)
	{
		new houseid = p_info[playerid][pHouse];
		new klass = gHouses[houseid][hKlass] - 1;

		if(areaid == gHouseImproveArea[klass][0])
		{
			if(gHouses[houseid][houseImprove][0]) ShowPlayerDialog(playerid,9899,DIALOG_STYLE_INPUT,"Сейф","{"#cWHITE"}Используйте код от сейфа:","ОК","Отмена");
			else SendClientMessage(playerid, COLOR_GREY, "У вас не установлен сейф!");
		}
		else if(areaid == gHouseImproveArea[klass][1])
		{
			if(gHouses[houseid][houseImprove][1]) ShowPlayerDialog(playerid,dStore,DIALOG_STYLE_LIST,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
			else SendClientMessage(playerid, COLOR_GREY, "У вас не установлен шкаф!");
		}
		else if(areaid == gHouseImproveArea[klass][2])
		{
			if(gHouses[houseid][houseImprove][2]) ShowPlayerDialog(playerid,9090,DIALOG_STYLE_LIST,"Холодильник","Хот-дог ({"#cRED"}-200$. {"#cGREEN"}+20 ХП{"#cWHITE"})\nБургер ({"#cRED"}-400$. {"#cGREEN"}+30 ХП{"#cWHITE"})\nПицца ({"#cRED"}-600$. {"#cGREEN"}+60 ХП{"#cWHITE"})","Съесть","Отмена");
			else SendClientMessage(playerid, COLOR_GREY, "У вас не установлен холодильник!");
		}
	}
	/*else if(areaid == quest_area)
	{
		ShowPlayerDialog(playerid,5455,DIALOG_STYLE_MSGBOX,"Новогодние развлечения", "Вы действительно хотите отправиться на горнолыжный курорт?", "Да", "Нет");
		//SendClientMessage(playerid,-1,"бухой тест");
	}*/
	else if(areaid == swat_door_area[0] || areaid == swat_door_area[1])
	{
		GameTextForPlayer(playerid, "~w~PRESS ~g~\"F\"", 1000, 5);
	}
	else if(areaid == door_fbi_area)
	{
		MoveDynamicObject(door_fbi[0],581.1919,1270.5989,1079.3249,0.5,0.0000,0.0000,0.0000);
		MoveDynamicObject(door_fbi[1],585.5532,1270.6490,1079.3249,0.5,0.0000,0.0000,0.0000);
	}
	else if(areaid == mobile_area && !GetPVarInt(playerid,"showphone"))
	{
		for(new i=0; i<8; i++)
		{
			TextDrawShowForPlayer(playerid,TD_Phones[i]);
		}
		SelectTextDraw(playerid,-1334502145);
		SetPVarInt(playerid,"showphone", true);
	}
	else if(areaid >= Urna[0] && areaid <= Urna[3])
	{
		if(areaid >= Urna[0] && areaid <= Urna[2])
		{
			if(p_info[playerid][pLevel] < 3) return SCM(playerid,COLOR_GREY,"Голосование с 3 уровня");
			if(GetPVarInt(playerid,"pGolos")) return SCM(playerid,COLOR_GREY,"Вы уже голосовали");
			if(!GetPVarInt(playerid,"vote")) return SCM(playerid,COLOR_GREY,"Возьмите бюллетень у палатки");

			stringer = "{"#cWHITE"}";
			for(new i = 0; i < MAX_VOTES; i++)
			{
				if(strlen(vote_name[i]))
				{
					format(stringer,2400, "%s%i. %s (Голосов: %i)\n", stringer, i+1, vote_name[i],vote_count[i]);
				}
				else format(stringer,2400,"%s%i. -\n",stringer, i+1);
			}
			ShowPlayerDialog(playerid,9271 + 2,DIALOG_STYLE_LIST,"Список кандитатов",stringer,"Выбрать","Закрыть");
			return 1;
		}
		else
		{
			stringer = "{"#cWHITE"}Вы находитесь в избирательном участке, чтобы\nпроголосовать за одного из кандидатов возьмите\nизбирательный бюллетень и поместите его в одну из урн.\n\nСписок кандидатов:\n\n";
			for(new i = 0; i < MAX_VOTES; i++)
			{
				if(strlen(vote_name[i]))
				{
					format(stringer,2400, "%s%i. %s (Голосов: %i)\n", stringer, i+1, vote_name[i],vote_count[i]);
				}
				else format(stringer,2400,"%s%i. -\n",stringer, i+1);
			}
			ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{"#cWHITE"}Информация",stringer,"Закрыть","");
			return 1;
		}
	}
	else if(areaid == gSkladWorkPick && GetPVarInt(playerid,"gunamount"))
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		FIXES_ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
		new money_salary = GUN_ZP_1+random(GUN_ZP_2);
		gSkladCount += money_salary / 2;
		SetPVarInt(playerid, "WorkSalary", GetPVarInt(playerid, "WorkSalary") + money_salary);
		format(stringer, 128, "Оружие сдано на склад.{"#cYELLOW"} +%i${"#cWHITE"} к вашей зарплате. Заработано:{"#cRED"} %d$",money_salary,GetPVarInt(playerid,"WorkSalary"));
		SCM(playerid,-1,stringer);
		RemovePlayerAttachedObject(playerid,0);
		DeletePVar(playerid,"gunamount");
		DisablePlayerCheckpoint(playerid);
		format(stringer, 128, "{"#cYELLOW"}Оружие на складе:\n%i шт.", gSkladCount);
		UpdateDynamic3DTextLabelText(gSkladText, CYELLOW, stringer);
	}
	else if(areaid == gReceptionArea)
	{
		stringer[0] = EOS;
		strcat(stringer, "{"#cWHITE"}Добро пожаловать в отель {"#cPINK"}'MARIGOLD'\n{"#cWHITE"}У нас вы можете купить комнату в роскошных апартаментах\n\nДля того чтобы приобрести эту комнату пройдите к лифту\n");
		strcat(stringer, "Далее выберите любой этаж от 1 до 50\nПосле подойдите к двери и купите комнату.\n\nЕсли вы хотите воспользоваться моими услугами нажмите {"#cRADIO"}'Далее'{"#cWHITE"} иначе {"#cRADIO"}'Закрыть'");
		ShowPlayerDialog(playerid, dFlatUi, DIALOG_STYLE_MSGBOX, ""ORG"Отель", stringer, "Далее", "Закрыть");
	}
	else if(PWorld >= 0 && PWorld <= 49 && areaid >= gRoomArea[0][0] && areaid <= gRoomArea[49][MAX_ROOMS-1])
	{
		if(areaid >= gRoomArea[PWorld][0] && areaid <= gRoomArea[PWorld][MAX_ROOMS-1])
		{
			for(new room = 0; room != MAX_ROOMS; ++room)
			{
				if(areaid == gRoomArea[PWorld][room])
				{
					if(!strcmp(gRoomOwner[PWorld][room],"The State"))
					{
						format(stringer, 300, "{"#cRADIO"}Номер комнаты: {"#cWHITE"}%i\n{"#cRADIO"}Этаж: {"#cWHITE"}%i\n\n{"#cRADIO"}Оплата в час: {"#cWHITE"}50$\n{"#cRADIO"}Стоимость номера: {"#cWHITE"}8.000$",room+1,PWorld+1);
						ShowPlayerDialog(playerid, dBuyRoom, DIALOG_STYLE_MSGBOX, ""ORG"Комната", stringer, "Купить", "Отмена");
					}
					else
					{
						format(stringer, 300, "{"#cRADIO"}Номер комнаты: {"#cWHITE"}%i\n{"#cRADIO"}Этаж: {"#cWHITE"}%i\n\n{"#cRADIO"}Владелец: {"#cWHITE"}%s",room+1,PWorld+1,gRoomOwner[PWorld][room]);
						ShowPlayerDialog(playerid, dEnterRoom, DIALOG_STYLE_MSGBOX, ""ORG"Комната", stringer, "Войти", "Отмена");
					}
					SetPVarInt(playerid, "id_room", room);
					SetPVarInt(playerid, "id_floor", PWorld);
					return 1;
				}
			}
		}
	}
	else if(areaid>=area_hit[0] && areaid <= area_hit[1] && p_info[playerid][tMember] == 23)
	{
		TextDrawShowForPlayer(playerid,Info_TD[0]);
		TextDrawSetString(Info_TD[1], "~w~PRESS ~r~F ~w~FOR OPEN");
		TextDrawShowForPlayer(playerid,Info_TD[1]);
	}
	else if(areaid>=bot_area[MAX_NPC_BOT] && areaid <= bot_area[1])
	{
		TextDrawShowForPlayer(playerid,Info_TD[0]);
		TextDrawSetString(Info_TD[1], "~w~PRESS ~r~N ~w~FOR TALK");
		TextDrawShowForPlayer(playerid,Info_TD[1]);
	}
	else if(areaid >= gMetallArea[0] && areaid <= gMetallArea[5] && GetPVarInt(playerid,"GunWork") && !GetPVarInt(playerid,"gunamount"))
	{
		SetPVarInt(playerid,"pgunmodel",gGunWorkWeapon[RandomEx(0,6)]);
		SendClientMessage(playerid, CGREEN, "Вы взяли заготовку, отнесите ее на стол");
		SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	}
	else if(areaid == siren_area)
	{
		for(new i = 0; i < 2; i++) TextDrawShowForPlayer(playerid,InfoDraw[i]);
	}
	else if((IsAGang(playerid) || ISAMAFIA(playerid)) && areaid == frac_areaid[p_info[playerid][tMember]])
	{
		GangMenu(playerid);
	}
	else if(p_info[playerid][tMember] == 3 || p_info[playerid][tMember] == 19 || p_info[playerid][tMember] == 27 || p_info[playerid][tMember] == 7 || IsAGang(playerid) || ISAMAFIA(playerid))
	{
		for ( new vehicleid = 1; vehicleid < MAX_VEHICLES; vehicleid++)
		{
			if(areaid == gVehicleGun[vehicleid][vGunArea])
			{
				if(gVehicleGun[vehicleid][vGunLoading] == true && GetPVarInt(playerid,"usemats"))
				{
					DeletePVar(playerid, "TempMats");
					DeletePVar(playerid,"usemats");
					RemovePlayerAttachedObject(playerid,1);
					FIXES_ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(gVehicleGun[vehicleid][vGunAmount] + 1 > 40) return SendClientMessage(playerid,COLOR_GREY,"В т.с. не достаточно места");
					gVehicleGun[vehicleid][vGunAmount]++;
					format(stringer,128,"{f0f0f0}Загрузка: \n{"#cBLUE"}%d{f0f0f0} из {"#cBLUE"} 40{f0f0f0} ящиков",gVehicleGun[vehicleid][vGunAmount]);
					UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText],0xFFFFFF20,stringer);
				}
				else if(gVehicleGun[vehicleid][vGunUnloading] == true && !GetPVarInt(playerid,"carrygun"))
				{
					if(gVehicleGun[vehicleid][vGunAmount] < 1) return SendClientMessage(playerid,COLOR_GREY,"В т.с. не достаточно боеприпасов");
					if(gVehicleGun[vehicleid][vGunAmount] >= 1)
					{
						gVehicleGun[vehicleid][vGunAmount]--;
						SetPVarInt(playerid,"carrygun",500);
					}
					format(stringer,128,"{f0f0f0}Разгрузка: \n{"#cBLUE"}%d{f0f0f0} из {"#cBLUE"} 40{f0f0f0} ящиков",gVehicleGun[vehicleid][vGunAmount]);
					UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText],0xFFFFFF20,stringer);
					FIXES_ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
					SetTimerEx("CarryDelay",1000,false,"i",playerid);
					SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				}
				return 1;
			}
		}
	}
	else
	{
		new state_ship = GetPlayerState(playerid);
		new state_vehicle = GetPlayerVehicleID(playerid);
		foreach(x)
		{
			if(areaid == GetPVarInt(x,"Ships") && state_ship == PLAYER_STATE_DRIVER)
			{
				new panels, tires, doors, lights;
				GetVehicleDamageStatus(state_vehicle, panels, doors, lights, tires);
				UpdateVehicleDamageStatus(state_vehicle, panels, doors, lights, 15);
				GameTextForPlayer(playerid, "~r~stalling", 1000, 6);
				break;
			}
		}
		new get_station[128];
		foreach(i)
		{
			if(areaid == GetPVarInt(i, "BBArea"))
			{
				GetPVarString(i, "BBStation", get_station, 128);
				if(!isnull(get_station))
				{
					PlayStream(playerid, get_station, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
					SendClientMessage(playerid, -1, "Вы попали в игровую зону магнитофона");
				}
				return 1;
			}
		}
	}
	return 1;
}




stock CreateBizzType(playerid, type)
{
	new i = CountBusiness;
	GetPlayerPos(playerid, Business[CountBusiness][PickupEnterX], Business[CountBusiness][PickupEnterY], Business[CountBusiness][PickupEnterZ]);
	new strings[30];//1
	GetPlayer2DZone(playerid, strings, 30);//1
	format(stringer, 128,"%s %s",bizz_type[type][bz_name], strings);//1
	strmid(Business[CountBusiness][BizName], stringer,0,64,31);//1
	format(stringer, 144, "Вы создали бизнес №%i (Тип: %s (%d))",CountBusiness,bizz_type[type][bz_name],type);//1
	SCM(playerid, -1, stringer);
	strmid(Business[CountBusiness][Owner], "The State", 0, strlen("The State"),10);
	Business[CountBusiness][bType] = type;
	Business[CountBusiness][BuyPrice] = GetPVarInt(playerid,"bizz_buy_price");
	Business[CountBusiness][Bank] = 0;
	Business[CountBusiness][EnterPrice] = 0;
	Business[CountBusiness][Lock] = 0;
	Business[CountBusiness][Mafia] = 0;
	if(Business[i][EnterPrice] > 500) Business[i][EnterPrice]=20;
	if ( Business[i][bProd] >= Business[i][bProdMax] ) Business[i][bProd] = Business[i][bProdMax] - 10000;
	switch(Business[i][bType])
	{
		case 0,3:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 52, CWHITE, 0, -1, -1, 200.0);
		case 1:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 14, CWHITE, 0, -1, -1, 200.0);
		case 2,5,7:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 48, CWHITE, 0, -1, -1, 200.0);
		case 4:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 49, CWHITE, 0, -1, -1, 200.0);
		case 6:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 10, CWHITE, 0, -1, -1, 200.0);
		case 8:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 50, CWHITE, 0, -1, -1, 200.0);
		case 9:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 29, CWHITE, 0, -1, -1, 200.0);
		case 10:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 6, CWHITE, 0, -1, -1, 200.0);
		case 11:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 45, CWHITE, 0, -1, -1, 200.0);
		case 12:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 7, CWHITE, 0, -1, -1, 200.0);
		case 13:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 47, CWHITE, 0, -1, -1, 200.0);
		case 14:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 34, CWHITE, 0, -1, -1, 200.0);
		case 15:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 42, CWHITE, 0, -1, -1, 200.0);
		case 16:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 54, CWHITE, 0, -1, -1, 200.0);
		case 17:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 44, CWHITE, 0, -1, -1, 200.0);
		case 18:Business[i][bMapIcon] = CreateDynamicMapIcon(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 51, CWHITE, 0, -1, -1, 200.0);
	}
	new model_pickup = 1239;
	switch(Business[i][bType])
	{
		case 0:model_pickup=1239;
		case 1:model_pickup=1582;
		case 2:model_pickup=1484;
		case 3:model_pickup=1239;
		case 4:model_pickup=1484;
		case 5:model_pickup=1484;
		case 6:model_pickup=2768;
		case 7:model_pickup=1484;
		case 8:model_pickup=1239;
		case 9:model_pickup=1239;
		case 10:model_pickup=2035;
		case 11:model_pickup=1275;
		case 12:model_pickup=1275;
		case 17:model_pickup=1275;
	}
	if(Business[i][bType] != 13)//
	{
		if(Business[i][bType] == 15)
		{
			new bactorid = CreateActor(69,1007.3037,-904.3650,1086.3500+0.8,185.8417);
			SetActorVirtualWorld(bactorid,i + 1);
		}
		if(Business[i][bType] == 17)
		{
		/*	Ручки автоматов */

			for ( new x = 0 ; x < sm_count; x ++ )
			{
				sm_hand [ x ] [ i + 1 ] = CreateDynamicObject ( 1832, sm_hand_coord [ x ] [ 0 ], sm_hand_coord [ x ] [ 1 ], sm_hand_coord [ x ] [ 2 ], sm_hand_coord [ x ] [ 3 ], sm_hand_coord [ x ] [ 4 ], sm_hand_coord [ x ] [ 5 ], i + 1 ) ;
				SetDynamicObjectMaterial ( sm_hand [ x ] [ i + 1 ], 0, -1, "none", "none", 255 ) ;
				SetDynamicObjectMaterial ( sm_hand [ x ] [ i + 1 ], 2, -1, "none", "none", 255 ) ;
			}

		/*	Слот-механизмы автоматов */

			for ( new x = 0 ; x < sm_count * 3; x ++ )
			{
				sm_slot [ x ] [ i + 1 ] = CreateDynamicObject ( 2349, sm_slot_coord [ x ] [ 0 ], sm_slot_coord [ x ] [ 1 ], sm_slot_coord [ x ] [ 2 ], sm_slot_coord [ x ] [ 3 ], sm_slot_coord [ x ] [ 4 ], sm_slot_coord [ x ] [ 5 ], i + 1 ) ;
			}
		}
		if(!strcmp(Business[i][Owner], "The State"))
		{
			format(stringer, 84, "%s\nБизнес продаётся!", Business[i][BizName]);
			Business[i][Label] = CreateDynamic3DTextLabel(stringer, CLIGHTGREEN, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		}
		else
		{
			stringer[0] = EOS;
			format(stringer, 1000, BIZ_TEXT,Business[i][BizName],Business[i][Owner],(Business[i][bLicenses]) ? ("{33AA33}Бизнес работает легально") : ("{AA3333}Бизнес не имеет лицензию"), (Business[i][Mafia] == 5) ? ("La Cosa Nostra") : (Business[i][Mafia] == 6) ? ("Yakuza") : (Business[i][Mafia] == 14) ? ("Русская мафия") : ("Государство"),GetPriceEnter(i));
			Business[i][Label] = CreateDynamic3DTextLabel(stringer, -1, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		}
		CreateDynamicCP(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], 1.0, -1, -1, -1, DISTANCE_LABEL_BUSINESS);
		CreatePickup(1318, 1, bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 0 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 1 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 2 ], i + 1);
		CreatePickup(model_pickup, 1, bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 0 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 1 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 2 ], i + 1);
	}
	else
	{
		if(!strcmp(Business[i][Owner], "The State"))
		{
			format(stringer, 116, "%s продаётся\nдля приобретения Используйте команду /buyfuel", Business[i][BizName]);
			Business[i][Label] = CreateDynamic3DTextLabel(stringer, CLIGHTGREEN, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ]+0.5, DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		}
		else
		{
			format(stringer, 232, "%s\nВладелец: %s\nСтоимость: %i$\nТоплива: %i литров.\nЦена за 1 литр: %i$\n\n{ffffff}Заправиться {ffff00}'NUM 2' {ffffff}или {ffff00}/fill", Business[i][BizName], Business[i][Owner],Business[i][BuyPrice],Business[i][bProd],Business[i][EnterPrice]);
			Business[i][Label] = CreateDynamic3DTextLabel(stringer, CLIGHTGREEN, Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ]+0.5, DISTANCE_LABEL_BUSINESS, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		}
	}
	Business[i][AreaE] = CreateDynamicSphere(Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ],1.0,0,0);
	Business[i][AreaX] = CreateDynamicSphere(bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 0 ],bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 1 ],bizz_type [ Business [ i ] [ bType ] ] [ bz_pickup_pos ] [ 2 ],1.0,i + 1, bizz_type [ Business [ i ] [ bType ] ] [ bz_interior ]);
	Business[i][AreaB] = CreateDynamicSphere(bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 0 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 1 ], bizz_type [ Business [ i ] [ bType ] ] [ bz_bar_pos ] [ 2 ], 1.0, i + 1, bizz_type [ Business [ i ] [ bType ] ] [ bz_interior ]);

	new string_query[800];
	format(string_query,800,"INSERT INTO `business`(`Name`, `bType`, `PickupEnterX`, `PickupEnterY`, `PickupEnterZ`, `BuyPrice`) VALUES ('%s', '%d', '%.4f', '%.4f', '%.4f', '%d')", Business[i][BizName],Business[i][bType],Business[i][PickupEnterX], Business[i][PickupEnterY], Business[i][PickupEnterZ], Business[i][BuyPrice]);
	print(string_query);
	new Cache:result = mysql_query(connects, string_query);
	Business[i][bMysqlID] = cache_insert_id();
	cache_delete(result);
	SaveBusiness(i);
	CountBusiness ++;
	DeletePVar(playerid,"bizz_buy_price");
	return 1;
}



stock isNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 1;
	}
	return 0;
}

stock Show247(playerid)
{
	stringer[0] = EOS, strcat(stringer, "{"#cWHITE"}");
	for(new i = 0; i < 15; i++)
	{
		format(stringer, 600, "%s%s - ({00FF00}%d${ffffff})\n",stringer,shop_name_sell[i],shop_price_sell[i]);
	}
	ShowPlayerDialog(playerid, dShop, DIALOG_STYLE_LIST, "Касса магазина 24/7",stringer,"Купить","Выйти");
	return 1;
}

stock CheatKick(playerid,code)
{
	if(p_info[playerid][pAdmin] != 0) return 1;
	if(GetPVarInt(playerid,"CheatKick") == 5) return 1;
	if(GetPVarInt(playerid,"AutoShop") != 0) return 1;

	format(stringer,128,"Вы были кикнуты по подозрению в читерстве, код: %i",code);
	SendClientMessage(playerid, CBADINFO, stringer);
	SendClientMessage(playerid, CBADINFO, "Произошла ошибка? Сообщите об этом администрации, не забудьте указать код, который написан выше");

	SetPVarInt(playerid,"CheatKick",5);
	AC_ResetPlayerWeapons(playerid);
	KickEx(playerid);
	return 1;
}

stock ToggleLock(vehicleid, bool:door_status = false)
{
	gVehicles[vehicleid-1][vLock] = door_status;
	foreach(i) SetVehicleParamsForPlayer(vehicleid,i,0,(door_status) ? (false) : (true));
	return 0;
}

stock CreateVehicleOP(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay = 600_000)
{
	new vehicle = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay + 600_000);
	if(vehicle == 65535) return 0;
	gVehicles[vehicle-1][vFuel] = (modelid == 462) ? (100.0) : (5.0);
	gVehicles[vehicle-1][vLock] = true;
	gVehicles[vehicle-1][vOccupied] = -1;
	////gVehicles[vehicle-1][vEngine] = false;
	gVehicles[vehicle-1][vLamp] = false;
	gVehicles[vehicle-1][vHealth] = 1000.0;
	gVehicles[vehicle-1][vDrived] = 0.0;
	gVehicles[vehicle-1][vCol1] = color1;
	gVehicles[vehicle-1][vCol2] = color2;

	gVehicles[vehicle-1][veSpawnX] = x;
	gVehicles[vehicle-1][veSpawnY] = y;
	gVehicles[vehicle-1][veSpawnZ] = z;

	VehPos[vehicle][0]=x;
	VehPos[vehicle][1]=y;
	VehPos[vehicle][2]=z;
	VehPos[vehicle][3]=angle;
	VehHealth[vehicle]=1000.0;
	VehTime[vehicle]=5;

	gVehicles [ vehicle - 1 ] [ vFraction ] = -1 ;
	gVehicles [ vehicle - 1 ] [ vFractionRank ] = 0 ;

	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicle, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicle, false, lights, alarm, doors, bonnet, boot, objective);
	gVehicles[vehicle-1][veX] = x;
	gVehicles[vehicle-1][veY] = y;
	gVehicles[vehicle-1][veZ] = z;
	gVehicles[vehicle-1][veA] = angle;
	gVehicles[vehicle-1][skiing] = false;
	gVehicles[vehicle-1][uDamage] = false;
	gVehicles[vehicle-1][vAdminCreate] = false;
	gVehicles[vehicle-1][vFamily] = -1;
	gVehicles[vehicle-1][vJob] = -1;
	gVehicles[vehicle-1][vRentPlayer] = -1;

	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicle] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicle] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicle] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicle] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[vehicle] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicle] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicle] = VEHICLE_STATE_CAR;
	}

	//if(SELECT_SERVER != 2)
	//{
		//if(vehicle > 500)
			//printf("[CreateVehicleOP]: %d, %d, %f, %f, %f, %f, %d, %d, %d ", vehicle, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay);
	//}
	return vehicle;
}



stock AddStaticVehicleExOP(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay = 600_000)
{
	new vehicle = AddStaticVehicleEx(modelid, x, y, z, angle, color1, color2, respawn_delay + 600_000);
	if(vehicle == 65535) return 0;
	gVehicles[vehicle - 1][vFuel] = (modelid == 462) ? (100.0) : (5.0);
	gVehicles[vehicle-1][vLock] = true;
	///gVehicles[vehicle-1][vEngine] = false;
	gVehicles[vehicle-1][vLamp] = false;
	gVehicles[vehicle-1][vOccupied] = -1;
	gVehicles[vehicle-1][vHealth] = 1000.0;
	gVehicles[vehicle-1][vDrived] = 0.0;
	gVehicles[vehicle-1][vCol1] = color1;
	gVehicles[vehicle-1][vCol2] = color2;
	gVehicles [ vehicle - 1 ] [ vFraction ] = -1 ;
	gVehicles [ vehicle - 1 ] [ vFractionRank ] = 0 ;

	VehPos[vehicle][0]=x;
	VehPos[vehicle][1]=y;
	VehPos[vehicle][2]=z;
	VehPos[vehicle][3]=angle;
	VehHealth[vehicle]=1000.0;
	VehTime[vehicle]=5;

	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicle, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicle, false, lights, alarm, doors, bonnet, boot, objective);
	gVehicles[vehicle-1][veX] = x;
	gVehicles[vehicle-1][veY] = y;
	gVehicles[vehicle-1][veZ] = z;
	gVehicles[vehicle-1][veA] = angle;
	gVehicles[vehicle-1][skiing] = false;
	gVehicles[vehicle-1][uDamage] = false;
	gVehicles[vehicle-1][vAdminCreate] = false;
	gVehicles[vehicle-1][vFamily] = -1;
	gVehicles[vehicle-1][vJob] = -1;
	gVehicles[vehicle-1][vRentPlayer] = -1;

	gVehicles[vehicle-1][veSpawnX] = x;
	gVehicles[vehicle-1][veSpawnY] = y;
	gVehicles[vehicle-1][veSpawnZ] = z;

	new Random1[2], string[128];

	Random1[0] = random(99);
	Random1[1] = random(99);

	format(string,128, "%d-GOS-%d", Random1[0], Random1[1]);
	SetVehicleNumberPlate(vehicle-1, string);

	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicle] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicle] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicle] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicle] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[vehicle] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicle] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicle] = VEHICLE_STATE_CAR;
	}

	//if(vehicle>500) printf("[AddStaticVehicleExOP]: %d, %d, %f, %f, %f, %f, %d, %d, %d ", vehicle, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay);

	return vehicle;
}

stock AddTeamVehicle(fractionid, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay = 600_000)
{
	new vehicleid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay + 600_000);
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	gVehicles[vehicleid - 1][vFuel] = (modelid == 462) ? (100.0) : (5.0);
	gVehicles[vehicleid-1][vLock] = true;
	gVehicles[vehicleid-1][vOccupied] = -1;
	///gVehicles[vehicleid-1][vEngine] = false;
	gVehicles[vehicleid-1][vLamp] = false;
	gVehicles[vehicleid-1][vHealth] = 1000.0;
	gVehicles[vehicleid-1][vDrived] = 0.0;
	gVehicles[vehicleid-1][vCol1] = color1;
	gVehicles[vehicleid-1][vCol2] = color2;

	VehPos[vehicleid][0]=x;
	VehPos[vehicleid][1]=y;
	VehPos[vehicleid][2]=z;
	VehPos[vehicleid][3]=angle;
	VehHealth[vehicleid]=1000.0;
	VehTime[vehicleid]=5;

	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
	gVehicles[vehicleid-1][veX] = x;
	gVehicles[vehicleid-1][veY] = y;
	gVehicles[vehicleid-1][veZ] = z;
	gVehicles[vehicleid-1][veA] = angle;
	gVehicles[vehicleid-1][skiing] = false;
	gVehicles[vehicleid-1][uDamage] = false;
	gVehicles[vehicleid-1][vAdminCreate] = false;
	gVehicles[vehicleid-1][vFamily] = -1;
	gVehicles[vehicleid-1][vJob] = -1;
	gVehicles[vehicleid-1][vRentPlayer] = -1;
	gVehicles[vehicleid-1][vFraction] = fractionid;
	//gVehicles[vehicleid-1][vFractionRank] = 0;
	gVehicles[vehicleid-1][veSpawnX] = x;
	gVehicles[vehicleid-1][veSpawnY] = y;
	gVehicles[vehicleid-1][veSpawnZ] = z;
	if(fractionid == 12 || fractionid == 13 || fractionid == 15 || fractionid == 17 || fractionid == 18 || fractionid == 5 || fractionid == 6 || fractionid == 14 || fractionid == 23)
	{
		SetVehicleNumberPlate(vehicleid-1, "[ БЕЗ НОМЕРА ]");
	}

	if(fractionid == 0 || fractionid == 1 || fractionid == 2 || fractionid == 3 || fractionid == 4 || fractionid == 7 || fractionid == 8 || fractionid == 9 || fractionid == 10
	|| fractionid == 11 || fractionid == 16 || fractionid == 19 || fractionid == 20 || fractionid == 21 || fractionid == 22 || fractionid == 25 || fractionid == 26)
	{
		new Random1[2], string[128];

		Random1[0] = random(99);
		Random1[1] = random(99);

		format(string,128, "%d-GOS-%d", Random1[0], Random1[1]);
		SetVehicleNumberPlate(vehicleid-1, string);
	}

	////if(vehicleid>500) printf("[AddTeamVehicle]: %d, %d, %f, %f, %f, %f, %d, %d, %d ", vehicleid, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay);

	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[vehicleid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicleid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
	}

	return vehicleid;
}
stock AddJobVehicle(workid, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay = 600_000)
{
	new vehicleid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay + 600_000);
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	gVehicles[vehicleid - 1][vFuel] = (modelid == 462) ? (100.0) : (5.0);
	gVehicles[vehicleid-1][vLock] = true;
	gVehicles[vehicleid-1][vOccupied] = -1;
	///gVehicles[vehicleid-1][vEngine] = false;
	gVehicles[vehicleid-1][vLamp] = false;
	gVehicles[vehicleid-1][vHealth] = 1000.0;
	gVehicles[vehicleid-1][vDrived] = 0.0;
	gVehicles[vehicleid-1][vCol1] = color1;
	gVehicles[vehicleid-1][vCol2] = color2;

	VehPos[vehicleid][0]=x;
	VehPos[vehicleid][1]=y;
	VehPos[vehicleid][2]=z;
	VehPos[vehicleid][3]=angle;
	VehHealth[vehicleid]=1000.0;
	VehTime[vehicleid]=5;

	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
	gVehicles[vehicleid-1][veX] = x;
	gVehicles[vehicleid-1][veY] = y;
	gVehicles[vehicleid-1][veZ] = z;
	gVehicles[vehicleid-1][veA] = angle;
	gVehicles[vehicleid-1][skiing] = false;
	gVehicles[vehicleid-1][uDamage] = false;
	gVehicles[vehicleid-1][vAdminCreate] = false;
	gVehicles[vehicleid-1][vFamily] = -1;
	gVehicles[vehicleid-1][vFraction] = -1;
	gVehicles[vehicleid-1][vRentPlayer] = -1;
	gVehicles[vehicleid-1][vJob] = workid;
	//gVehicles[vehicleid-1][vFractionRank] = 0;
	gVehicles[vehicleid-1][veSpawnX] = x;
	gVehicles[vehicleid-1][veSpawnY] = y;
	gVehicles[vehicleid-1][veSpawnZ] = z;
	////if(vehicleid>500) printf("[AddJobVehicle]: %d, %d, %f, %f, %f, %f, %d, %d, %d ", vehicleid, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay);
	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[vehicleid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicleid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
	}
	return vehicleid;
}

stock AddStaticVehicleOP(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2)
{
	new vehicle = AddStaticVehicle(modelid, x, y, z, angle, color1, color2);
	if(vehicle == 65535) return 0;

	gVehicles[vehicle - 1][vFuel] = (modelid == 462) ? (100.0) : (5.0);
	gVehicles[vehicle-1][vLock] = true;
	gVehicles[vehicle-1][vOccupied] = -1;
	///gVehicles[vehicle-1][vEngine] = false;
	gVehicles[vehicle-1][vLamp] = false;
	gVehicles[vehicle-1][vHealth] = 1000.0;
	gVehicles[vehicle-1][vDrived] = 0.0;
	gVehicles[vehicle-1][vCol1] = color1;
	gVehicles[vehicle-1][vCol2] = color2;
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicle, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicle, false, lights, alarm, doors, bonnet, boot, objective);
	gVehicles[vehicle-1][skiing] = false;
	gVehicles[vehicle-1][veX] = x;
	gVehicles[vehicle-1][veY] = y;
	gVehicles[vehicle-1][veZ] = z;
	gVehicles[vehicle-1][veA] = angle;
	gVehicles[vehicle-1][uDamage] = false;
	gVehicles[vehicle-1][vAdminCreate] = false;
	gVehicles[vehicle-1][vFamily] = -1;
	gVehicles[vehicle-1][vJob] = -1;
	gVehicles[vehicle-1][vRentPlayer] = -1;
	VehPos[vehicle][0]=x;
	VehPos[vehicle][1]=y;
	VehPos[vehicle][2]=z;
	VehPos[vehicle][3]=angle;
	VehHealth[vehicle]=1000.0;
	VehTime[vehicle]=5;

	new Random1[2], string[128];

	Random1[0] = random(99);
	Random1[1] = random(99);

	format(string,128, "%d-GOS-%d", Random1[0], Random1[1]);
	SetVehicleNumberPlate(vehicle-1, string);

	////if(vehicle>500) printf("[AddStaticVehicleOP]: %d, %d, %f, %f, %f, %f, %d, %d, %d ", vehicle, modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2);
	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicle] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicle] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicle] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicle] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[vehicle] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicle] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicle] = VEHICLE_STATE_CAR;
	}
	return vehicle;
}

stock DestroyVehicleOP(vehicleid, null_fraction=true, null_job=true)
{
	if(!IsValidVehicle(vehicleid)) return 0;
	for(new i = 0; i < 11; i++)
	{
		if(gAttachedObjectToVehicle[vehicleid - 1][i] != INVALID_OBJECT)
		{
			printf ( "delete gAttachedObjectToVehicle 3 %d", gAttachedObjectToVehicle[vehicleid - 1][i] ) ;
			DestroyDynamicObject(gAttachedObjectToVehicle[vehicleid-1][i]);
		}

		gAttachedObjectToVehicle[vehicleid - 1][i]=INVALID_OBJECT;
	}
	if(null_fraction)
	{
		gVehicles [ vehicleid - 1 ] [ vFraction ] = -1 ;
		gVehicles [vehicleid - 1][vFractionRank] = 0;
	}
	if(null_job)
	{
		gVehicles[vehicleid-1][vJob] = -1;
	}
	gVehicles[vehicleid-1][skiing]=false;
	gVehicles[vehicleid-1][uDamage] = false;
	gVehicles[vehicleid-1][vAdminCreate] = false;
	gVehicles[vehicleid-1][vFamily] = -1;
	gVehicles[vehicleid-1][vRentPlayer] = -1;
	if(gVehicles[vehicleid-1][vRentPlayerText] != Text3D:-1)
	{
		DestroyDynamic3DTextLabel(gVehicles[vehicleid-1][vRentPlayerText]);
		gVehicles[vehicleid-1][vRentPlayerText] = Text3D:-1;
	}
	if(gVehicles[vehicleid-1][vOwnerVehicleText] != Text3D:-1)
	{
		DestroyDynamic3DTextLabel(gVehicles[vehicleid-1][vOwnerVehicleText]);
		gVehicles[vehicleid-1][vOwnerVehicleText] = Text3D:-1;
	}
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1)
	{
		if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
		if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
		LightsObject[vehicleid][0] = -1;
		LightsObject[vehicleid][1] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	return (DestroyVehicle(vehicleid));
}

forward UnTazer(playerid);
public UnTazer(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	ClearAnimations(playerid);
	FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	AC_TogglePlayerControllable(playerid,true);
	DeletePVar(playerid,"crack_tazer");
	return 1;
}

new WeaponTime[MAX_PLAYERS];
new RapidFire[MAX_PLAYERS];

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(unix - p_info[playerid][pAFK]>1) return 1;
	if( weaponid == 9 )
	{
		SetPlayerArmedWeapon(playerid, 0);
		FIXES_ApplyAnimation(playerid,"PED","handscower",4.1,1,0,0,0,1000);
		SetTimerEx("ClearAnimText",1000,0,"i",playerid);
		return 0;
	}
	if( weaponid == 38 ) return 0 ;
	if(hittype < 0 || hittype > 4) return 0;
	new slot = GetGunSlot(weaponid);
	if(AC_GunCheattime[playerid] <= unix && slot != -1)
	{
		if(GunPlayer[playerid][slot][0] != weaponid)
		{
			CheatKick(playerid,16);
			return 0;
		}
	}

	if(weaponid > 47 && hittype == 0 && fX == 0.0000 && hitid == 0 && fY == 0.0000 && fZ == 0.0000 && !IsBotServer(playerid))
	{
		Kick(playerid);
		return 0;
	}

	if((hittype == BULLET_HIT_TYPE_NONE) && GetPlayerDistanceFromPoint(playerid, fX, fY, fZ) > 300.0 && (fX != 0.0 && fY != 0.0 && fZ != 0.0)) return 0;
	if((hittype == BULLET_HIT_TYPE_PLAYER && ! IsPlayerConnected(hitid)) || (hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_OBJECT && !IsValidObject(hitid)) || (hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))) return 0;

	if(!IsACop(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || !IsACop(playerid) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 0;

	SetPVarInt(playerid,"r_shot",GetPVarInt(playerid,"r_shot")+1);
	if(hittype == BULLET_HIT_TYPE_PLAYER && hitid != INVALID_PLAYER_ID)
		SetPVarInt(playerid,"r_shot_hit",GetPVarInt(playerid,"r_shot_hit")+1);

	if(GetTickCount()-WeaponTime[playerid]<120 && weaponid!=17 && weaponid<=27 || GetTickCount()-WeaponTime[playerid]<30 &&  weaponid>27 && weaponid<=34)
	{
		RapidFire[playerid]++;
		if(RapidFire[playerid]>3)
		{
			CheatKick(playerid,17);
			return 0;
		}
	}
	else RapidFire[playerid]=0;

	new Float:kLibPos[3];
	GetPlayerPos(playerid,kLibPos[0],kLibPos[1],kLibPos[2]);
	if(kLibPos[2]>50000 || kLibPos[2]<-50000)
	{
		CheatKick(playerid,18);
		return 0;
	}
	if(gKilledWithAntiDeath[playerid] != 0 && gKilledWithAntiDeath[playerid] != 5)
	{
		if(gKilledWithAntiDeath[playerid]==1) Animation_Death(playerid);
		else if(gKilledWithAntiDeath[playerid]==2) Animation_Death_2(playerid);
		SetPlayerArmedWeapon(playerid, 0);
		return 0;
	}
	if(hittype == BULLET_HIT_TYPE_PLAYER_OBJECT)
	{
		if(StepPlayer[playerid][0] != -1 && StepPlayer[playerid][1] != -1)
		{
			for(new H = 0; H < 6; H++)
			{
				for(new X = 0; X < 2; X++)
				{
					if(object_range[playerid][StepPlayer[playerid][X]][H] != -1)
					{
						if(hitid == object_range[playerid][StepPlayer[playerid][X]][H])
						{
							if(GetPVarInt(playerid,"Shot") >= 5)
							{
								switch(weaponid)
								{
									case 23:
									{
										if(p_info[playerid][pGunSkill][0] < 100) p_info[playerid][pGunSkill][0]++;
										format(stringer, 128, "Ваш уровень стрельбы повысился до %d %%", p_info[playerid][pGunSkill][0]);
										SendClientMessage(playerid,-1,stringer);
										UpdatePlayerData(playerid,"pSDPistol",p_info[playerid][pGunSkill][0]);
									}
									case 24:
									{
										if(p_info[playerid][pGunSkill][1] < 100) p_info[playerid][pGunSkill][1]++;
										format(stringer, 128, "Ваш уровень стрельбы повысился до %d %%", p_info[playerid][pGunSkill][1]);
										SendClientMessage(playerid,-1,stringer);
										UpdatePlayerData(playerid,"pDesertEagle",p_info[playerid][pGunSkill][1]);
									}
									case 25:
									{
										if(p_info[playerid][pGunSkill][2] < 100) p_info[playerid][pGunSkill][2]++;
										format(stringer, 128, "Ваш уровень стрельбы повысился до %d %%", p_info[playerid][pGunSkill][2]);
										SendClientMessage(playerid,-1,stringer);
										UpdatePlayerData(playerid,"pShotGun",p_info[playerid][pGunSkill][2]);
									}
									case 29:
									{
										if(p_info[playerid][pGunSkill][3] < 100) p_info[playerid][pGunSkill][3]++;
										format(stringer, 128, "Ваш уровень стрельбы повысился до %d %%", p_info[playerid][pGunSkill][3]);
										SendClientMessage(playerid,-1,stringer);
										UpdatePlayerData(playerid,"pMP5",p_info[playerid][pGunSkill][3]);
									}
									case 30:
									{
										if(p_info[playerid][pGunSkill][4] < 100) p_info[playerid][pGunSkill][4]++;
										format(stringer, 128, "Ваш уровень стрельбы повысился до %d %%", p_info[playerid][pGunSkill][4]);
										SendClientMessage(playerid,-1,stringer);
										UpdatePlayerData(playerid,"pAK47",p_info[playerid][pGunSkill][4]);
									}
									case 31:
									{
										if(p_info[playerid][pGunSkill][5] < 100) p_info[playerid][pGunSkill][5]++;
										format(stringer, 128, "Ваш уровень стрельбы повысился до %d %%", p_info[playerid][pGunSkill][5]);
										SendClientMessage(playerid,-1,stringer);
										UpdatePlayerData(playerid,"pM4",p_info[playerid][pGunSkill][5]);
									}
								}
								DeletePVar(playerid, "Shot");
							}
							else SetPVarInt(playerid,"Shot", GetPVarInt(playerid,"Shot")+1);

							DestroyPlayerObject(playerid, object_range[playerid][StepPlayer[playerid][X]][H]);
							object_range[playerid][StepPlayer[playerid][X]][H] = -1;

							break;
						}
					}
				}
			}
		}
	}

	WeaponTime[playerid]=GetTickCount();

	if(hittype==BULLET_HIT_TYPE_VEHICLE)
	{
		if(IsValidVehicle(hitid))
		{
			if ( gVehicles [ hitid - 1 ] [ uDamage ] ) return 0 ;
			if(vProtect[hitid] != 0.0)
			{
				switch(weaponid)
				{
					case 22: vProtect[hitid] -= floatadd(4.0,10.0);
					case 23: vProtect[hitid] -= floatadd(14.0,10.0);
					case 24: vProtect[hitid] -= floatadd(24.0,10.0);
					case 25: vProtect[hitid] -= floatadd(30.0,10.0);
					case 28: vProtect[hitid] -= floatadd(6.0,10.0);
					case 29: vProtect[hitid] -= floatadd(8.0,10.0);
					case 30: vProtect[hitid] -= floatadd(10.0,10.0);
					case 31: vProtect[hitid] -= floatadd(10.0,10.0);
					case 33: vProtect[hitid] -= floatadd(25.0,10.0);
					case 34: vProtect[hitid] -= floatadd(41.0,10.0);
					case 38: vProtect[hitid] -= floatadd(47.0,10.0);
					default: vProtect[hitid] -= floatadd(10.0,10.0);
				}
				if(vProtect[hitid] <= 0.0)
				{
					vProtect[hitid]=0.0;
					GameTextForPlayer(playerid, " ", 999, 4);
				}
				else
				{
					new v_protect_string[80];
					format(v_protect_string,80,"~r~~h~VEHICLE PROTECTED ~n~( %.2f )",vProtect[hitid]);
					GameTextForPlayer(playerid, v_protect_string, 999, 4);
					return 0;
				}
			}
		}
	}

	if (hittype != BULLET_HIT_TYPE_PLAYER) return 1;
	if(GetPVarInt(playerid,"pteam") == GetPVarInt(hitid,"pteam") && GetPVarInt(playerid,"pteam")>0) return 0;
	if(GetPVarInt(playerid,"set_zombie") == GetPVarInt(hitid,"set_zombie") && GetPVarInt(playerid,"set_zombie")>0) return 0;
	if(unix - p_info[hitid][pAFK] > 1) return 0;
	if ( hittype == BULLET_HIT_TYPE_PLAYER )
	{
		if ( weaponid == 31 )
		{
			if ( TickPlayerHit[hitid] <= GetTickCount())
			{
				new Float:fHitPosX, Float:fHitPosY, Float:fHitPosZ;
				GetPlayerLastShotVectors(playerid, fHitPosX, fHitPosY, fHitPosZ, fHitPosX, fHitPosY, fHitPosZ);
				for(new h = 0 ; h < MAX_PLAYERS ; h++ )
				{
					if ( IsPlayerInRangeOfPoint(h, 5.5, fHitPosX, fHitPosY, fHitPosZ) && GetPVarInt(h,"set_zombie")==1)
					{
						new Float:x, Float:y, Float:z, Float:a;
						GetPlayerVelocity(h,x,y,z);
						GetPlayerFacingAngle(playerid,a);
						SetPlayerVelocity(h,x-(0.45 * floatsin(-a + 180.0,degrees)),y-(0.45 * floatcos(-a + 180.0,degrees)),z+0.15);
						TickPlayerHit[h]=GetTickCount()+300;
					}
				}
			}
		}
	}
	if(UsingShield[hitid])
	{
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(hitid, X, Y, Z);
		new angle = GetPlayerAngleToPoint(playerid, X, Y);
		if( (angle >= 40 && angle <= 100) || (angle >= -310 && angle <= -250))
		{
			if(	weaponid != 9 && weaponid != 53 && weaponid != 64 &&
				weaponid >= 35 && weaponid <= 40 &&
				weaponid >= 16 && weaponid <= 18 &&
				weaponid >= 49 && weaponid <= 51)
			{
				new Float:Damage = 3.0;
				if(p_info[playerid][pShield] >= Damage)
				{
					p_info[playerid][pShield] -= Damage;
				}
				else
				{
					UsingShield[playerid] = false;
					RemovePlayerAttachedObjectEx(playerid, 6);
					p_info[playerid][pShield] = 0.0;
					ClearAnims(playerid);

				}
				UpdatePlayerShield(playerid, p_info[playerid][pShield]);
				return 0;
			}
		}
	}
	if(IsPlayerStreamedIn(hitid, playerid) && IsPlayerStreamedIn(playerid, hitid))
	{
		if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && p_info[playerid][tMember] != 11 && p_info[playerid][tMember] != 26)
		{
			for(new green = 0; green < MAX_GREEN_ZONES; green++)
			{
				if(IsPlayerInDynamicArea(hitid,gAreaGreenZone[green]))
				{
					//FIXES_ApplyAnimation(playerid,"PED","handscower",4.1,1,0,0,0,1000);
					SetPlayerArmedWeapon(playerid, 0);
					return 0;
				}
			}
		}
		//if ( Player_BA[hitid] != -1 ) return 0;

		GetPlayerHealth(hitid, ServerHP[hitid]);
		if ( ServerHP[hitid] - AmountDamageUron[playerid][weaponid] < 1.0)
		{
			//SendClientMessageToAll(-1, "AttackHit"
			AttackHit(hitid, playerid, weaponid);
			return 0;
		}
	}
	return 1;
}

stock AC_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
{
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;

	foreach(playerid)
	{
		if(GetPlayerVehicleID(playerid)!=vehicleid && GetPlayerSurfingVehicleID(playerid)!=vehicleid) continue;
		p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
		p_info[playerid][pX] = x;
		p_info[playerid][pY] = y;
		p_info[playerid][pZ] = z;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	gVehicles[vehicleid - 1][veX] = x;
	gVehicles[vehicleid - 1][veY] = y;
	gVehicles[vehicleid - 1][veZ] = z;
	VehPos[vehicleid][0]=x;
	VehPos[vehicleid][1]=y;
	VehPos[vehicleid][2]=z;
	SetVehiclePos(vehicleid,x,y,z);
	return 1;
}

stock AC_SetVehicleZAngle(vehicleid, Float:A)
{
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
	gVehicles[vehicleid - 1][veA] = A;
	VehPos[vehicleid][3]=A;
	SetVehicleZAngle(vehicleid, A);
	return 1;
}

stock AC_GivePlayerWeapon(playerid, weaponid, ammo)
{
	new slot = GetGunSlot(weaponid);
	if(slot == -1) return 0;
	GunPlayer[playerid][slot][0] = weaponid;
	if(ammo > 0) GunPlayer[playerid][slot][1] += ammo;
	else GunPlayer[playerid][slot][1] -= ammo;
	GivePlayerWeapon(playerid, weaponid, ammo);
	AC_GunCheattime[playerid]= unix + 3;
	return true;
}

AC_ResetPlayerWeapons(playerid)
{
	for(new i = 0; i < 12; i++)
	{
		GunPlayer[playerid][i][0]=0;
		GunPlayer[playerid][i][1]=0;
	}
	ResetPlayerWeapons(playerid);
	AC_GunCheattime[playerid]= unix + 3;
	return true;
}

stock GetGunSlot(weaponid)
{
	switch(weaponid)
	{
		case 0,1:return 0;
		case 2..9:return 1;
		case 22..24:return 2;
		case 25..27:return 3;
		case 28,29,32:return 4;
		case 30,31:return 5;
		case 33,34:return 6;
		case 35..38:return 7;
		case 16..18,39:return 8;
		case 41..43:return 9;
		case 10..15:return 10;
		case 44..46:return 11;
		case 40:return 12;
	}
	return -1;
}

stock AC_SetPlayerPos(playerid,Float:x,Float:y,Float:z)
{
	/*if(unix - GetPVarInt(playerid,"Dell_Active_Football") > 3)
	{
			if(Select_Football_Team[playerid] != -1 && Select_Football_Position[playerid] != -1)
			{
				TextDrawHideForPlayer(playerid,TD_Time_Football);
				TextDrawShowForPlayer(playerid,Datum);
				Position_Football_Active[Select_Football_Team[playerid]][Select_Football_Position[playerid]]=false;
				Select_Football_Team[playerid] = -1;
				Select_Football_Position[playerid] = -1;
				SendClientMessage(playerid,-1,"Вы покинули футбольную площадку");
			}
			DeletePVar(playerid, "Dell_Active_Football");
	}*/
	/*if(IsPointInDynamicArea(foot_area, x, y, z) && Count_Slot_Player_Object [ playerid ] == 0)
	{
		LoadPlaceForPlayer ( playerid ) ;
	}*/
	Streamer_UpdateEx(playerid, x,y,z,-1,-1, STREAMER_TYPE_OBJECT, 800);
 	TelePos[playerid][0] = 0.0;
	TelePos[playerid][1] = 0.0;
	p_info[playerid][pAbletoTP] = unix + (3 + floatround(GetPlayerPing(playerid)/100));
	p_info[playerid][pAbletoTP2] = true;
	GetPlayerPos(playerid, ANTIFALSEX[playerid], ANTIFALSEY[playerid], ANTIFALSEZ[playerid]);
	p_info[playerid][pX] = x;
	p_info[playerid][pY] = y;
	p_info[playerid][pZ] = z;
	SetPVarInt(playerid, "aretick", GetTickCount());
	SetPlayerPos(playerid,x,y,z);
	return 1;
}

stock AC_GetPlayerSpeed(playerid)
{
	new Float:Coord[4];
	GetPlayerVelocity(playerid, Coord[0], Coord[1], Coord[2]);
	Coord[3] = floatsqroot(floatpower(floatabs(Coord[0]), 2.0) + floatpower(floatabs(Coord[1]), 2.0) + floatpower(floatabs(Coord[2]), 2.0)) * 213.3;
	return floatround(Coord[3]);
}

stock KickEx(playerid)
{
	if(IsBotServer(playerid)) return 0;
	if(GetPVarInt(playerid, "is_plane") - 1 != 0)
	{
		DestroyVehicleOP(GetPVarInt(playerid, "is_plane") - 1);
		DeletePVar(playerid, "is_plane");
	}
	if(GetPVarInt(playerid, "is_boat") - 1 != 0)
	{
		DestroyVehicleOP(GetPVarInt(playerid, "is_boat") - 1);
		DeletePVar(playerid, "is_boat");
	}
	SetTimerEx("PlayerKick",250,0,"i", playerid);
	return 1;
}

forward PlayerKick(playerid);
public PlayerKick(playerid)
{
	if(IsBotServer(playerid)) return 1;
	Kick(playerid);
	return 1;
}

stock SendReklama(playerid,string[])
{
	if(p_info[playerid][pMuteTime] > 0) return 1;
	p_info[playerid][pMuteTime] = 60;
	Insert_Reason_Mute(p_info[playerid][pID], "Сервер", "Анти-реклама");
	UpdatePlayerData(playerid,"pMuteTime",p_info[playerid][pMuteTime]);
	format(stringer, 200, "<Анти Реклама> %s[%d] подозревается в рекламе [IP: %s]",NamePlayer[playerid],playerid,PlayerIp[playerid]);
	AdmMes(CYELLOW,stringer,1);
	format(stringer, 200, "<Анти Реклама> Текст: %s",string);
	AdmMes(CYELLOW,stringer,1);
	SCM(playerid, COLOR_LIGHTRED, "<Анти Реклама> Вы получили затычку за подозрение в рекламе посторонних проектов");
	return 1;
}

CMD:createmp(playerid,params[])
{
	new NameMP[30],Kvo;
	if(p_info[playerid][pAdmin] == 0 && !GetPVarInt(playerid,"DJ")) return 1;

	if(p_info[playerid][pAdmin] < 6 && !GetPVarInt(playerid,"DJ")) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");

	if(unix-IntervalMP<1800)
	{
		SendClientMessage(playerid,COLOR_GREY,"Интервал между мероприятиями 30 минут");
		format(stringer,128,"Осталось ждать примерно %i минут", (1800-(unix-IntervalMP)) / 60);
		SendClientMessage(playerid,COLOR_GREY,stringer);
		return 1;
	}
	if(MP[0]!=0.0 || MP[1] != 0.0 || MP[2] != 0.0) return SendClientMessage(playerid,COLOR_GREY,"Мероприятие запущенно!");

	if(sscanf(params, "is[30]",Kvo,NameMP)) return SendClientMessage(playerid, CWHITE, "/createmp [к-во участников] [название]");
	GetPlayerPos(playerid,MP[0],MP[1],MP[2]);

	MpData[0]=GetPlayerVirtualWorld(playerid);
	MpData[1]=GetPlayerInterior(playerid);

	format(stringer,144,"Администратор %s(%d) запустил мероприятие %s. К-во участников: %d",NamePlayer[playerid],playerid,NameMP,Kvo);
	SendClientMessageToAll(0xFFCD00ff,stringer);
	SendClientMessageToAll(0xFFCD00ff,"Для принятия участия в мероприятии, Используйте команду {"#cWHITE"}/gomp");
	COUNTMP[0]=Kvo;
	COUNTMP[1]=0;
	SetTimer("OffMP",(60 * 1000) * 2, 0);

	IntervalMP = unix;
	return true;
}

CMD:testsleep(playerid)
{
	FIXES_ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
	return 1;
}

CMD:test_washroom(playerid)
{

	return 1;
}

forward EndWashRoom(playerid);
public EndWashRoom(playerid)
{
	SendClientMessage(playerid,CGREEN,"Вы закончили принимать душ, теперь вы абсолютно чисты");
	if ( 0 == p_info[playerid][pHouse] )
	{
		AC_TogglePlayerControllable(playerid,1);
		SpawnPlayer(playerid);

		return 1;
	}

	new klass = gHouses[ p_info[playerid][pHouse] ][hKlass] - 1;
	AC_SetPlayerPos(playerid,gWashRoomPos[klass][0],gWashRoomPos[klass][1],gWashRoomPos[klass][2]);
	SetPlayerFacingAngle(playerid,gWashRoomPos[klass][3]);

	return 1;
}

CMD:sethouseklass(playerid, params[])
{
	if(!IsAFullDostup(playerid)) return 1;
	if(sscanf(params,"iii",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_GREY, "Используйте: /sethouseangle [id дома] [номер класса] [цена]");
		SendClientMessage(playerid,COLOR_GREY,"Номера классов:");
		SendClientMessage(playerid,COLOR_GREY,"1 - Эконом класс");
		SendClientMessage(playerid,COLOR_GREY,"2 - Комфорт класс");
		SendClientMessage(playerid,COLOR_GREY,"3 - Премиум класс");
		SendClientMessage(playerid,COLOR_GREY,"4 - Элит класс");
		return 1;
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string,350,"UPDATE `housetest` SET `hDiscript` = '%d', `hPrice` = '%d' WHERE `hID` = '%d' LIMIT 1",params[1],params[2], gHouses[params[0]][hID]);
	mysql_pquery(connects, mysql_query_string, "", "");

	format(stringer, 144, "Дом: "ORG"%d {"#cWHITE"}| Класс: "ORG"%d {"#cWHITE"}| Цена: "ORG"%d",params[0],params[1],params[2]);

	gHouses[params[0]][hValue] = params[2];
	gHouses[params[0]][hKlass] = params[1];
	return 1;
}


CMD:gomp(playerid,params[])
{
	if(MP[0]==0.0 || MP[1] == 0.0 || MP[2] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"В данный момент не приходит мероприятие");
	if(COUNTMP[1]>COUNTMP[0]) return SendClientMessage(playerid,COLOR_GREY,"На мероприятии уже максимальное к-во человек");

	SendClientMessage(playerid,CGREEN,"Вы были телепортированы на мероприятие {"#cWHITE"}"PROJECT_NAME);
	AC_SetPlayerPos(playerid,MP[0],MP[1],MP[2]);
	SetPlayerVirtualWorld(playerid,MpData[0]);
	SetPlayerInterior(playerid,MpData[1]);
	COUNTMP[1]++;

	return true;
}

stock IsSellsCar(playerid, slot)
{
	if(slot!=1 && slot != 2) return -1;
	for(new g = 0; g<24; g++)
	{
		if(!strcmp(gCarSells[g][SellsOwner],NamePlayer[playerid]) && gCarSells[g][SellsModel] == PlayerCar[playerid][slot - 1])
		{
			if(gCarSells[g][SellsTime]<=0) return -1;
			else return g;
		}
	}
	return -1;
}

stock SetVehicleToHouse(playerid, car, bool:spawn = false)
{
	if(car < 1 || car > MAX_PLAYER_CAR) return 1;
	if ( 0 == p_info[playerid][pHouse] ) return 1;
	if(caridhouse[playerid][car-1] != 0)
	{
		GetVehiclePos(caridhouse[playerid][car-1],p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1]);
		GetVehicleZAngle(caridhouse[playerid][car-1],p_info[playerid][p_car_pos_a][car-1]);
		p_info[playerid][p_car_fuel][car-1] = gVehicles[caridhouse[playerid][car-1] - 1][vFuel];
		DestroyVehicleOP(caridhouse[playerid][car-1]);
		caridhouse[playerid][car-1] = 0;
	}
	if ( spawn )
	{
		if ( car == 1 ) sscanf("889.6341,579.8998,998.0804,328.4542", "p<,>ffff", p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1],p_info[playerid][p_car_pos_a][car-1]);
		else if ( car == 2 ) sscanf("883.4248,579.5446,998.0805,329.1790", "p<,>ffff", p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1],p_info[playerid][p_car_pos_a][car-1]);
	}
	if ( PlayerCar[playerid][car - 1] == 0 ) PlayerCar[playerid][car - 1] = 462;
	new g_sells = IsSellsCar(playerid, car);
	if(g_sells != -1) return 1;
	/*{
		p_info[playerid][p_car_pos_x][car - 1] = gCarSells[g_sells][SellsPos][0];
		p_info[playerid][p_car_pos_y][car - 1] = gCarSells[g_sells][SellsPos][1];
		p_info[playerid][p_car_pos_z][car - 1] = gCarSells[g_sells][SellsPos][2];
		p_info[playerid][p_car_pos_a][car - 1] = gCarSells[g_sells][SellsPos][3];
		p_info[playerid][p_car_vw][car - 1] = 0;
		p_info[playerid][p_car_int][car - 1] = 0;
	}*/
	if(!GetPVarInt(playerid,"parkcar"))
	{
		switch(car-1)
		{
			case 0:
			{
				if ( p_info[playerid][p_car_pos_x][car-1] == 0.0 )  sscanf("889.6341,579.8998,998.0804,328.4542", "p<,>ffff", p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1],p_info[playerid][p_car_pos_a][car-1]);
				caridhouse[playerid][car-1] = CreateVehicleOP(PlayerCar[playerid][0],p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1], p_info[playerid][p_car_pos_a][car-1], gPlayerTuning[playerid][car-1][1], 0, 600_000);
			}
			case 1:
			{
				if(p_info[playerid][pVipCar])
				{
					caridhouse[playerid][car-1] = CreateVehicleOP(560,884.2949,581.2394,998.0747,329.6631, gPlayerTuning[playerid][1][1], 0,600_000);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][0] == INVALID_OBJECT) gAttachedObjectToVehicle[caridhouse[playerid][1]-1][0] = CreateDynamicObject(3790, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[playerid][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][1] == INVALID_OBJECT) gAttachedObjectToVehicle[caridhouse[playerid][1]-1][1] = CreateDynamicObject(3790, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[playerid][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][2] == INVALID_OBJECT) gAttachedObjectToVehicle[caridhouse[playerid][1]-1][2] = CreateDynamicObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[playerid][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][3] == INVALID_OBJECT) gAttachedObjectToVehicle[caridhouse[playerid][1]-1][3] = CreateDynamicObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[playerid][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][4] == INVALID_OBJECT) gAttachedObjectToVehicle[caridhouse[playerid][1]-1][4] = CreateDynamicObject(19477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, p_info[playerid][pHouse], -1, -1, 300.0, 300.0);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][4] != INVALID_OBJECT) SetDynamicObjectMaterialText(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][4], 0, NamePlayer[playerid], OBJECT_MATERIAL_SIZE_512x512, "BankGothic Md BT", 60, 1, 0xFF0000FF, 0, 1);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][0] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[caridhouse[playerid][1] - 1][0], caridhouse[playerid][1], -1.049999,-1.700000,0.150000,0.000000,0.000000,-89.099983);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][1] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[caridhouse[playerid][1] - 1][1], caridhouse[playerid][1], 1.049999,-1.775000,0.150000,0.000000,0.000000,-89.099983);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][2] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[caridhouse[playerid][1] - 1][2], caridhouse[playerid][1], -1.049999,-3.125000,-1.500000,0.000000,0.000000,0.000000);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][3] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[caridhouse[playerid][1] - 1][3], caridhouse[playerid][1], 1.049999,-3.100001,-1.425000,0.000000,0.000000,0.000000);
					if(gAttachedObjectToVehicle[caridhouse[playerid][1]-1][4] != INVALID_OBJECT) AttachDynamicObjectToVehicle(gAttachedObjectToVehicle[caridhouse[playerid][1] - 1][4], caridhouse[playerid][1], 1.153, -1.2, 0.46,0.0,0.0,0.0);
				}
				else
				{
					if ( p_info[playerid][p_car_pos_x][car-1] == 0.0 )  sscanf("883.4248,579.5446,998.0805,329.1790", "p<,>ffff", p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1],p_info[playerid][p_car_pos_a][car-1]);
					caridhouse[playerid][car-1] = CreateVehicleOP(PlayerCar[playerid][1],p_info[playerid][p_car_pos_x][car-1],p_info[playerid][p_car_pos_y][car-1],p_info[playerid][p_car_pos_z][car-1], p_info[playerid][p_car_pos_a][car-1], gPlayerTuning[playerid][1][1], 0, 600_000);
				}
			}
		}
		if(g_sells == -1)
		{
			if(gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText] != Text3D:-1)
			{
				DestroyDynamic3DTextLabel(gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText]);
				gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText] = Text3D:-1;
			}
			format(stringer, 128, "Владелец: %s\nСтатус замка: Закрыт", NamePlayer[playerid]);
			gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText] = CreateDynamic3DTextLabel(stringer, CORANGE, 20.0, 20.0, 20.0, 5.0, INVALID_PLAYER_ID, caridhouse[playerid][car-1]);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText],E_STREAMER_ATTACH_OFFSET_X, 0.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText],E_STREAMER_ATTACH_OFFSET_Y, 0.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gVehicles[caridhouse[playerid][car-1]-1][vOwnerVehicleText],E_STREAMER_ATTACH_OFFSET_Z, 0.0);
		}
		if( gHouses[ p_info[playerid][pHouse] ][hKlass] == 0 ) gHouses[ p_info[playerid][pHouse] ][hKlass] = 1;
		if ( p_info[playerid][p_car_pos_x][car-1]==883.4248 || p_info[playerid][p_car_pos_x][car-1]==889.6341 )
		{
			AC_LinkVehicleToInterior(caridhouse[playerid][car-1], gHouseExitInterior[gHouses[p_info[playerid][pHouse]][hKlass]-1]);
			AC_SetVehicleVirtualWorld(caridhouse[playerid][car-1], p_info[playerid][pHouse]);
		}
		else
		{
			AC_SetVehicleVirtualWorld(caridhouse[playerid][car-1],p_info[playerid][p_car_vw][car-1]);
			AC_LinkVehicleToInterior(caridhouse[playerid][car-1],p_info[playerid][p_car_int][car-1]);
		}
		if(car==1)
		{
			for(new j = 0; j < 9; j++){
				TrunkInfo[caridhouse[playerid][car-1]][tGun][j] = p_info[playerid][pTrunkGun1][j];
				TrunkInfo[caridhouse[playerid][car-1]][tAmmo][j] = p_info[playerid][pTrunkAmmo1][j];
			}
		}
		else if(car==2)
		{
			for(new j = 0; j < 9; j++){
				TrunkInfo[caridhouse[playerid][car-1]][tGun][j] = p_info[playerid][pTrunkGun2][j];
				TrunkInfo[caridhouse[playerid][car-1]][tAmmo][j] = p_info[playerid][pTrunkAmmo2][j];
			}
		}
		TrunkInfo[caridhouse[playerid][car-1]][tMoney] = p_info[playerid][pTrunkMoney][car-1];
		TrunkInfo[caridhouse[playerid][car-1]][tDrugs] = p_info[playerid][pTrunkDrugs][car-1];
		TrunkInfo[caridhouse[playerid][car-1]][tMats] = p_info[playerid][pTrunkMats][car-1];
		TrunkInfo[caridhouse[playerid][car-1]][tArmours] = p_info[playerid][pTrunkArmours][car-1];
		TrunkInfo[caridhouse[playerid][car-1]][tKanistra] = p_info[playerid][pTrunkKanistra][car-1];
		TrunkInfo[caridhouse[playerid][car-1]][tDee] = p_info[playerid][pTrunkDee][car-1];
		TrunkInfo[caridhouse[playerid][car-1]][tOpen]=true;

		///AC_LinkVehicleToInterior(caridhouse[playerid][car - 1], gHouseExitInterior[ gHouses[ p_info[playerid][pHouse] ][hKlass] - 1]);
		///SetVehicleVirtualWorld(caridhouse[playerid][car - 1], p_info[playerid][pHouse]);
		gVehicles[caridhouse[playerid][car - 1] - 1][vLock] = false;
		gVehicles[caridhouse[playerid][car-1]-1][vFuel] = p_info [ playerid ] [ p_car_fuel ][ car - 1 ];

		if(g_sells != -1) ToggleLock(caridhouse[playerid][car-1], (gVehicles[caridhouse[playerid][car-1]-1][vLock]) ? (false) : (true));

		switch(p_info[playerid][p_veh_number][0])
		{
			case 0..9: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][0]);
			case 10..99: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][0]);
			case 100..999: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][0]);
			case 1000..9999: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][0]);
			default: format(stringer, 128, " ");
		}
		SetVehicleNumberPlate(caridhouse[playerid][0], stringer);

		switch(p_info[playerid][p_veh_number][1])
		{
			case 0..9: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][1]);
			case 10..99: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][1]);
			case 100..999: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][1]);
			case 1000..9999: format(stringer, 128, "LS-%d-S", p_info[playerid][p_veh_number][1]);
			default: format(stringer, 128, " ");
		}
		SetVehicleNumberPlate(caridhouse[playerid][1], stringer);
	}
	else
	{
		new house=p_info[playerid][pHouse] ;
		caridhouse[playerid][car-1] = CreateVehicleOP(PlayerCar[playerid][car-1],gHouses[house][houseParkX],gHouses[house][houseParkY],gHouses[house][houseParkZ],gHouses[house][houseParkR], gPlayerTuning[playerid][car-1][1], 0, 600_000);
		if(!IsValidVehicle(caridhouse[playerid][car-1])) return 0;
		//LinkVehicleToInterior(caridhouse[playerid][car-1], 0);
		//SetVehicleVirtualWorld(caridhouse[playerid][car-1], 0);
		gVehicles[caridhouse[playerid][car-1]-1][vLock] = false;
		gVehicles[caridhouse[playerid][car-1]-1][vFuel] = p_info [ playerid ] [ p_car_fuel ][ car - 1 ];
	}
	if(gPlayerTuning[playerid][car-1][0] != 255) ChangeVehiclePaintjob(caridhouse[playerid][car-1], gPlayerTuning[playerid][car-1][0]);
	for(new F = 2; F <= 11; F++) if(gPlayerTuning[playerid][car-1][F] != -1) AC_AddVehicleComponent(caridhouse[playerid][car-1], gPlayerTuning[playerid][car-1][F]);
	//print("create car (SetVehicleToHouse)");
	return 1;
}



forward OffMP();
public OffMP()
{
	MP[0]=0.0;
	MP[1]=0.0;
	MP[2]=0.0;
	MpData[0]=0;
	MpData[1]=0;
	SendClientMessageToAll(0xFFCD00ff,"Телепортирование на мероприятие окончено");
	return 1;
}




stock GetSpeed(playerid)
{
	new Float:STt[4];
	if (IsPlayerInAnyVehicle(playerid))
	{
		GetVehicleVelocity(GetPlayerVehicleID(playerid),STt[0],STt[1],STt[2]);
	}
	else
	{
		GetPlayerVelocity(playerid,STt[0],STt[1],STt[2]);
	}
	STt[3] = floatsqroot(floatpower(floatabs(STt[0]), 2.0) + floatpower(floatabs(STt[1]), 2.0) + floatpower(floatabs(STt[2]), 2.0)) * 100.3;
	return floatround(STt[3]);
}


stock onPlayerBadSpeed(playerid,reason,speed)
{
	if(p_info[playerid][pAdmin]) return 0;
	if(GetPVarInt(playerid,"wait_cheat")>unix) return 0;
	switch(reason)
	{
		case FLY_HACK :
		{
			format(stringer, 128, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}Fly.{FF6347} Его скорость: {"#cWHITE"}%d", NamePlayer[playerid], playerid,speed);
			AdmMes(0xFF6347FF, stringer, 1);
		}
		case SPEED_HACK :
		{
			format(stringer, 128, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}Speed Hack.{FF6347} Его скорость: {"#cWHITE"}%d", NamePlayer[playerid], playerid,speed);
			AdmMes(0xFF6347FF, stringer, 1);
		}
	}
	SetPVarInt(playerid,"wait_cheat", unix+5);
	return 1;
}

stock SendAdminCheat(playerid, reason[], distance)
{
	if(p_info[playerid][pAdmin] || p_info[playerid][pMestoJail] == 6 || p_info[playerid][pMestoJail] == 5) return 0;
	if(GetPVarInt(playerid,"wait_cheat")>unix) return 0;

	format(stringer, 180, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}[ %s ] {FF6347} Дистанция: {"#cWHITE"}%d", NamePlayer[playerid], playerid, reason, distance);
	AdmMes(0xFF6347FF, stringer, 1);

	SetPVarInt(playerid,"wait_cheat", unix+5);
	return 1;
}

stock onPlayerTeleport(playerid, reason,distance)
{
	if(p_info[playerid][pAdmin]) return 0;
	if(GetPVarInt(playerid,"wait_cheat")>unix) return 0;
	switch(reason)
	{
		case AIRBREAK:
		{
			format(stringer, 180, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}AirBreak.{FF6347} Дистанция: {"#cWHITE"}%d", NamePlayer[playerid], playerid, distance);
			AdmMes(0xFF6347FF, stringer, 1);
		}
		case TELEPORT:
		{
			format(stringer, 180, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}On Foot Teleport.{FF6347} Дистанция: {"#cWHITE"}%d", NamePlayer[playerid], playerid, distance);
			AdmMes(0xFF6347FF, stringer, 1);
		}
		case CAR_AIRBREAK:
		{
			format(stringer, 180, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}Car AirBreak.{FF6347} Дистанция: {"#cWHITE"}%d", NamePlayer[playerid], playerid, distance);
			AdmMes(0xFF6347FF, stringer, 1);
		}
		case CARSHOT:
		{
			format(stringer, 180, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}CarShot.{FF6347} Дистанция: {"#cWHITE"}%d", NamePlayer[playerid], playerid, distance);
			AdmMes(0xFF6347FF, stringer, 1);
		}
		case ANTI_FREEZE:
		{
			format(stringer, 180, "[A] {"#cWHITE"}%s(%i){FF6347} возможно использует {"#cWHITE"}AntiFreeze.{FF6347} Дистанция: {"#cWHITE"}%d", NamePlayer[playerid], playerid, distance);
			AdmMes(0xFF6347FF, stringer, 1);
		}
	}
	SetPVarInt(playerid,"wait_cheat", unix+5);
	return 0;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid>=cp_rent_bike[0] && checkpointid <= cp_rent_bike[1])
	{
		//if(p_info[playerid][pLevel]>=3) return SendClientMessage(playerid,CBADINFO,"Доступно до третьего уровня.");
		ShowPlayerDialog(playerid,dRentBike,0,"{"#cLIGHTBLUE"}Аренда велосипедов","{"#cWHITE"}Вы действительно хотите арендовать велосипед?", "Да", "Нет");
	}
	if(!Fishing[playerid])
	{
		for(new i;i < sizeof(FishZone);i ++)
		{
			if(checkpointid == Fish_CP[i]) return
				ShowPlayerDialog(playerid,212,0,"Место для рыбалки","{FFFFFF}Вы действительно хотите порыбачить?\nДля рыболовли вам необходима удочка, которую можно приобрести в любом 24/7\nи наживка для рыбалки, ее так же можно там купить.\nРыбу можно продать в магазин.","Да","Нет");
		}
	}
	for(new f = 0; f < MAX_FARMS; f++)
	{
		if ( checkpointid == _farm[f][farm_sklad_cp] )
		{
			for ( new f2 = 0; f2 < 3; f2++)
			{
				if(f2 < 2)  {
					if(VehicleEnters[playerid]==_farm[f][farm_vehicles_finish][f2]){
						if ( _farm[f][farm_sklad_count] == 0 )
						{
							SendClientMessage(playerid, 0xAFAFAFFF, "На складе нет зерна");
							TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
							return 1;
						}
						new sel = random(2);
						_farm[f][farm_count_zerna][f2] += _farm[f][farm_sklad_count];
						format(stringer, 128, TEXT_MACHINE_SELL_FARM_P,_farm[f][farm_sklad_count]);
						UpdateDynamic3DTextLabelText(_farm[f][farm_vehicles_finish_text][f2],0xFFFFFFDD,stringer);
						_farm[f][farm_sklad_count] = 0;
						SendClientMessage(playerid, -1, "Отвези зерно на завод");
						SetPlayerRaceCheckpoint(playerid, 1, pos_sell_zerno[sel][0],pos_sell_zerno[sel][1],pos_sell_zerno[sel][2],pos_sell_zerno[sel][0],pos_sell_zerno[sel][1],pos_sell_zerno[sel][2], 5.5);
						SetPVarInt(playerid, "sel_zerno", sel);
						format(stringer, 200, FARM_SKLAD_TEXT,_farm[f][farm_sklad_count] );
						UpdateDynamic3DTextLabelText(_farm[f][farm_sklad_text],0xFFFFFFDD,stringer);
						break;
					}
				}
				if(VehicleEnters[playerid]==_farm[f][farm_vehicles_first][f2]){
					_farm[f][farm_sklad_count] += _farm[f][farm_count_flows][f2];
					_farm[f][farm_count_flows][f2] = 0;
					format(stringer, 200, FARM_SKLAD_TEXT,_farm[f][farm_sklad_count] );
					UpdateDynamic3DTextLabelText(_farm[f][farm_sklad_text],0xFFFFFFDD,stringer);
					new use_farm_vehicle = GetPVarInt(playerid,"use_farm_vehicle");
					switch(use_farm_vehicle)
					{
						case 1: SetPlayerRaceCheckpoint(playerid, 1, _farm[f][farm_v_cp_f][0],_farm[f][farm_v_cp_f][1],_farm[f][farm_v_cp_f][2], 0.0,0.0,0.0, 5.5);
						case 2: SetPlayerRaceCheckpoint(playerid, 1, _farm[f][farm_v_cp_s][0],_farm[f][farm_v_cp_s][1],_farm[f][farm_v_cp_s][2], 0.0,0.0,0.0, 5.5);
						case 3: SetPlayerRaceCheckpoint(playerid, 1, _farm[f][farm_v_cp_t][0],_farm[f][farm_v_cp_t][1],_farm[f][farm_v_cp_t][2], 0.0,0.0,0.0, 5.5);
					}
					UpdateDynamic3DTextLabelText(_farm[f][farm_vehicles_first_text][use_farm_vehicle-1],0xFFFFFFDD,TEXT_MACHINE_WALTON_FARM_S);
					//for ( new f3 = 0; f3 < 30; f3++) if(IsValidDynamicObject(farm_object_flows[f][f2][f3])) DestroyDynamicObject(farm_object_flows[f][f2][f3]);
					break;
				}
			}
			TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
			break;
		}
	}

	if ( GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_CARRY )
	{
		for(new f = 0; f < MAX_FARMS; f++)
		{
			for ( new f2 = 0; f2 < 3; f2++)
			{
				for ( new f3 = 0; f3 < 6; f3++)
				{
					if(checkpointid == farm_cp[f][f2][f3])
					{
						TogglePlayerControllable(playerid, 0);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
						SetPlayerAttachedObject(playerid, 3, 2247, 6, -0.003353, 0.093383, 0.176903, 0.000000, 0.000000, 0.000000, 0.788097, 1.000000, 0.991011);
						FIXES_ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
						SetPVarInt(playerid, "unix_bomber_farm", unix + 2);
						SetPVarInt(playerid, "f", f);
						SetPVarInt(playerid, "f2", f2);
						SetPVarInt(playerid, "f3", f3);
						break;
					}
				}
			}
		}
	}
	if(checkpointid == pomosh_bol)
	{
		showInfoDialog( playerid );
	}
	if(checkpointid == GardenSellCP && GetPVarInt(playerid,"count_sobr") >= 0)
	{
		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_CARRY) return 1;
		DisablePlayerCheckpoint(playerid);

		new random_zp = SAD_ZP_1+random(SAD_ZP_2);
		SetPVarInt(playerid,"pJobAmount.4",GetPVarInt(playerid,"pJobAmount.4") + random_zp);

		if(QuestStep[1][playerid]==3)
		{
			quest_amount_garden[playerid]++;
			if(quest_amount_garden[playerid]>=MAX_QUEST_GARDEN)
			{
				SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
				QuestStep[1][playerid] = 4;
				UpdatePlayerQuestStep(playerid);
			}
			UpdatePlayerQuestAmount(playerid);
		}

		format(stringer, 128, "~w~3APABOTANO: + ~w~%i ~g~$~n~~w~BCEGO: ~w~%i ~g~$",random_zp,GetPVarInt(playerid,"pJobAmount.4"));
		GameTextForPlayer(playerid, stringer, 2000, 1);

		SetPlayerSpecialAction(playerid,0);
		FIXES_ApplyAnimation(playerid,"CARRY","putdwn",2.05,1,0,0,0,900);
		RemovePlayerAttachedObject(playerid,2);
		SetPlayerAttachedObject(playerid, 1, 2237, 6, 0.000000, 0.087999, 0.000000, -175.400024, -4.799998, -28.500000, 0.623000, 0.799999, 0.693999, 0, 0);
		DeletePVar(playerid,"count_sobr");
	}
	/*else if(checkpointid >= pomosh_bol[0] && checkpointid <= pomosh_bol[22])
	{
		for (new j = 0; j != 23; j++)
		{
			if (MyBed [playerid] != 255) continue;
			if (!IsPlayerInRangeOfPoint (playerid, 3.0, BedInfo [j][b_X],BedInfo [j][b_Y],BedInfo[j][b_Z])) continue;
			if (BedInfo [j][Busy] == true)
			{
				SendClientMessage( playerid, -1, "* Койка уже кем то занята." );
				break;
			}
			MyBed[ playerid ] = j;
			format (stringer, 200, "{FFFFFF}Вы действительно хотите арендовать данную койку за {00CC00}$%d", BedPrice);
			ShowPlayerDialog (playerid, BED_DIALOG, DIALOG_STYLE_MSGBOX, "{00CC00}Койка", stringer, "Да", "Нет" );
			break;
		}
	}*/
	if(checkpointid >= terminal_cp[0] && checkpointid <= terminal_cp[10] && p_info[playerid][tMember] == 27)
	{
		if(GetPVarInt(playerid,"carrygun"))
		{
			DeletePVar(playerid,"carrygun");
			RemovePlayerAttachedObject(playerid,0);
			FIXES_ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		}
		else
		{
			new town = -1, town_name[32];
			for(new i = 0; i < 11; i++)
			{
				if(checkpointid==terminal_cp[i])
				{
					if(i<5) town = 1, town_name = "Los Santos";
					else if(i>=5 && i<9) town = 2, town_name = "San Fierro";
					else if(i>=9) town = 3, town_name = "Las Venturas";

					if(!GetPVarInt(playerid,"__no_show_message"))
					{
						format(stringer, 128, "Вы загружаетесь в порту города {33AA33}%s (%d)", town_name, town);
						SendClientMessage(playerid,-1,stringer);
						SendClientMessage(playerid,0xAFAFAFFF,"Относите ящики к самолёту");
						SetPVarInt(playerid, "__no_show_message", true);
					}

					FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
					SetPlayerAttachedObject(playerid, 1, 2358, 1,0.11,0.36,0.0,0.0,90.0);
					FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
					SetPVarInt(playerid,"usemats", true);
					return true;
				}
			}
		}
	}
	if(checkpointid >= orcp[0] && checkpointid <= orcp[7])
	{
		for(new i = 0; i < 8; i++)
		{
			if(checkpointid == orcp[i])
			{
				if(iait[i][GetPlayerVirtualWorld(playerid)]) return 1;
				ShowPlayerDialog(playerid,dOr, DIALOG_STYLE_MSGBOX, "Потверждение", "Вы хотите начать сеанс стрельбы?", "Да", "Нет");
				SetPVarInt(playerid, "orcp", i + 1);
				iait[i][GetPlayerVirtualWorld(playerid)] = true;
				UpdateShootPlace(i,GetPlayerVirtualWorld(playerid) - 1);
				break;
			}
		}
	}///
	if(checkpointid == gPlayerProdCP[playerid] && GetPVarInt(playerid,"prod_id") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new bizid = GetPVarInt(playerid,"prod_id")-1;
		new prod = GetPVarInt(playerid,"count_prod");
		new veh = GetPlayerVehicleID(playerid);
		if(gVehicles[veh-1][vJob]==1)
		{
			SCM(playerid,CBLUE,"Продукты в бизнес доставлены:");
			format(stringer, 128, "Доставлено: %d продуктов. Заработано: %d$",prod,floatround((Business[bizid][bProdOrderPrice] * prod) / 2 ));
			SCM(playerid,CLIGHTBLUE,stringer);
			SendClientMessage(playerid,CLIGHTBLUE,"Чтобы доставить продукты к еще одному бизнесу следуйте за маркером на мини-карте");
		}
		else
		{
			SCM(playerid,CBLUE,"Топливо в бизнес доставлено:");
			format(stringer, 128, "Доставлено: %d литров. Заработано: %d$",prod,floatround((Business[bizid][bProdOrderPrice] * prod) / 2 ));
			SCM(playerid,CLIGHTBLUE,stringer);
			SendClientMessage(playerid,CLIGHTBLUE,"Чтобы доставить топливо к еще одной заправке следуйте за маркером на мини-карте");
		}
		if(QuestStep[3][playerid] == 6)
		{
			quest_amount_prod[playerid]++;
			if ( quest_amount_prod[playerid] >= MAX_QUEST_PROD )
			{
				QuestStep[3][playerid] = 7;
				UpdatePlayerQuestStep(playerid);
				SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
			}
			UpdatePlayerQuestAmount(playerid);
		}//
		SetPlayerRaceCheckpoint(playerid, 1, -116.87, -320.27, 1.42, 0.0,0.0,0.0, 5.0);
		//
		format(stringer, 144, "{f0f0f0}[%s: 0/1000]\n{5DD174}Бизнес: Не выбран",(gVehicles[veh-1][vJob]==3) ? ("Топлива") : ("Продуктов"));
		UpdateDynamic3DTextLabelText(gPlayerProdText[playerid][0],0xFFFFFF20,stringer);
		DestroyDynamic3DTextLabel(gPlayerProdText[playerid][1]);
		DestroyDynamicCP(gPlayerProdCP[playerid]);

		TransferMoney(playerid,p_info[playerid][pCash]+floatround((Business[bizid][bProdOrderPrice] * prod) / 2 ),floatround((Business[bizid][bProdOrderPrice] * prod) / 2 ),"доставил продукты");

		p_info[playerid][pCash] += floatround((Business[bizid][bProdOrderPrice] * prod) / 2 );
		UpdateMoney(playerid);

		Business[bizid][bProdOrder] -= prod;
		Business[bizid][bProd] += prod;
		UpdateOtherBusiness(bizid);
		Update3DTextLabelBusiness(bizid);

		DeletePVar(playerid,"prod_id");
		DeletePVar(playerid,"count_prod");
		return 1;
	}
	if(checkpointid == gRieltor)
	{
		ShowPlayerDialog(playerid,dRieltor1,DIALOG_STYLE_INPUT,""ORG"Информация о дома", "{"#cWHITE"}Используйте номер дома о котором хотите получить информацию", "Далее", "Отмена");
		return 1;
	}

	if(checkpointid == GunPD)
	{
		if(!IsACop(playerid)) return SendErr(playerid, "Вы не состоите в ПД");
		ShowGetGun(playerid);
		//stringer = "Название\tПатроны\n{"#cWHITE"}Дубинка\t1\nDesert Eagle\t50\nShotgun\t50\nMP5\t150\nM4\t150\nБронежилет\nЩит";
		//ShowPlayerDialog(playerid,dGunPD,DIALOG_STYLE_TABLIST_HEADERS,"{"#cWHITE"}Оружие", stringer, "Выбрать", "Закрыть");
		return 1;
	}
	if(checkpointid == sellpatrcp[0])
	{
		if(IsAGang(playerid) || p_info[playerid][pExp] < 2) return SendErr(playerid, "Вы состоите в банде / Играете меньше 2 часов");
		ShowPlayerDialog(playerid,dSellPatr,DIALOG_STYLE_INPUT,"{ffff00}Покупка патронов","{"#cWHITE"}Используйте к-во патронов для покупки\nЦена одного патрона {ffff00}50$","Ввод","Закрыть");
		return 1;
	}
	if(checkpointid == sellpatrcp[1])
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(IsAArm(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
				ShowPlayerDialog(playerid,dSelectPatr,DIALOG_STYLE_MSGBOX,"{ffff00}Загрузка","{"#cWHITE"}Выберите что вы хотите загрузить","{"#cWHITE"}Металл","{"#cWHITE"}Патрон");
		}
		else
		{
			SendErr(playerid, "Вы должны находится в матовозе");
		}
		return 1;
	}
	if(checkpointid == gBarAcessories)
	{
		pc_cmd_attachments1(playerid);
		return 1;
	}
	return 1;
}

CreateSIObjects()
{
	new TempObjectNumber;
	CreateDynamicObject(19672,331.9166,3396.5845,85.9599,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,77.5000,3570.0000,4.3077,0.0000,0.0000,0.0000);
	CreateDynamicObject(19542,335.0000,3570.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,335.0000,3757.5000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,7.5000,3500.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19535,77.5000,3422.5000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,7.5000,3640.0000,4.3077,0.0000,0.0000,90.0000);
	CreateDynamicObject(19532,-62.5000,3570.0000,4.3077,0.0000,0.0000,0.0000);
	CreateDynamicObject(19539,335.0000,3663.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19533,77.5000,3678.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19533,77.5000,3461.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,7.5000,3835.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19533,-62.5000,3678.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19531,-132.5000,3570.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19538,-132.5000,3678.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,-132.5000,3500.0000,4.3077,0.0000,0.0000,90.0000);
	CreateDynamicObject(19534,-62.5000,3500.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19534,-62.5000,3640.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-62.4998,3835.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,84.9997,3827.5000,4.3078,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19538,-132.5000,3461.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,-132.5000,3640.0000,4.3077,0.0000,0.0000,90.0000);
	CreateDynamicObject(19533,-62.5000,3461.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,7.5000,3422.5000,4.3077,0.0000,0.0000,90.0000);
	CreateDynamicObject(19532,-132.5000,3422.5000,4.3077,0.0000,0.0000,90.0000);
	CreateDynamicObject(19538,-132.5000,3383.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,-55.0000,3227.5000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19545,-62.5000,3383.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-202.5000,3383.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19533,-202.5000,3461.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,15.0001,3352.5000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,77.5000,3835.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-62.5000,3165.0000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,-132.5000,3165.0000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-202.5000,3165.0000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,-210.0000,3383.7500,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-210.0000,3422.5000,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,-210.0000,3461.2500,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-210.0000,3499.9998,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,-202.5000,3570.0000,4.3077,0.0000,0.0000,0.0000);
	CreateDynamicObject(19533,-202.5000,3678.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,-210.0000,3570.0000,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-210.0000,3640.0000,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,-210.0000,3678.7500,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19541,-202.4998,3710.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,335.0000,3257.5000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19546,85.0000,3352.5000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19547,-132.5000,3290.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19546,-54.9999,3352.5000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-62.5000,3321.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-62.5000,3258.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19536,-132.5000,3196.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-62.5000,3196.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,-55.0000,3165.0000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,-210.0000,3290.0000,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-202.5000,3321.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-202.5000,3258.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,-202.5000,3196.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,-210.0000,3196.2500,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19546,84.9999,3757.5000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,77.5000,3772.5000,4.3077,0.0000,0.0000,0.0000);
	CreateDynamicObject(19539,178.7500,3757.5000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,85.0000,3835.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,-69.9998,3835.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19546,-69.9998,3710.0000,4.3080,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19532,-62.4999,3772.5000,4.3077,0.0000,0.0000,0.0000);
	CreateDynamicObject(19539,-163.7498,3710.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,-69.9998,3803.7500,4.3077,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,335.0000,3726.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19529,7.5000,3570.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,241.2500,3757.5000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,303.7500,3757.5000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,241.2500,3257.5000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19539,303.7500,3257.5000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19535,-62.5000,3422.5000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19535,-202.5000,3422.5000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19535,-202.5000,3500.0000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19535,-202.5000,3640.0000,4.3077,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19535,77.5000,3640.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,149.4099,3422.5000,-40.2988,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,300.0856,3261.5845,83.4814,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19642,124.1813,3422.5000,8.8521,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19647,134.1813,3422.5000,8.8520,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19650,96.9146,3422.5000,6.1717,0.0000,-10.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19643,114.1813,3422.5000,8.8521,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19659,-15.6602,3682.0776,29.3538,0.0000,0.0000,0.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19665,311.1857,3531.0288,86.7789,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19667,305.6357,3426.5845,95.3124,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19664,70.0058,3666.1621,31.6038,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19663,331.9166,3381.5845,81.2314,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,326.6671,3417.2505,83.4814,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19662,337.7673,3671.4116,87.1412,0.0000,0.0000,90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19651,284.1701,3276.5845,73.4814,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,266.0011,3406.5845,53.4814,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19660,316.0011,3245.9185,83.4814,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,188.5509,3422.5000,25.7300,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,203.5318,3422.5000,26.3325,0.0000,20.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19674,200.6326,3498.2903,17.2481,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19676,140.8339,3498.2903,12.0060,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19673,231.6195,3422.5000,36.5668,0.0000,15.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19675,144.5353,3422.5000,9.2890,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19678,120.0057,3697.9932,51.5540,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19675,154.9452,3422.5000,10.6383,0.0000,5.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19675,165.1978,3422.5000,12.8897,0.0000,10.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19675,175.2152,3422.5000,16.0262,0.0000,15.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,255.9339,3422.5000,-7.4172,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19673,241.1739,3422.5000,39.5792,0.0000,10.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19673,250.9545,3422.5000,41.7474,0.0000,5.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19673,260.8867,3422.5000,43.0549,0.0000,0.0000,180.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19652,266.0011,3406.5845,73.4814,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19649,291.0011,3422.5000,83.4814,0.0000,-0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,291.0011,3422.5000,33.4567,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19684,314.6369,3697.9932,126.3243,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19682,213.1957,3717.7407,29.3538,0.0000,0.0000,-135.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19681,157.1870,3668.5852,29.3538,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19686,260.6396,3739.9441,70.3298,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19685,181.5493,3697.9929,58.8229,0.0000,-30.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19663,331.9166,3331.5845,81.2314,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,331.9167,3356.5845,33.4567,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19663,331.9166,3281.5845,81.2314,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,300.0856,3271.5845,83.4814,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,331.9166,3306.5845,33.4567,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,300.0856,3301.5845,63.4814,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,300.0856,3351.5845,63.4814,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,300.0856,3401.5845,63.4814,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,300.0855,3356.5845,13.4567,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,300.0856,3306.5845,13.4567,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,311.1857,3451.5845,63.4814,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,311.1857,3501.5845,63.4814,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,311.1857,3466.5845,13.4567,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,311.1858,3516.5845,13.4567,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,311.1857,3575.2466,87.1413,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19663,311.1858,3625.2466,84.8912,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,311.1857,3560.2466,37.1166,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,316.4353,3660.9126,87.1412,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,311.1857,3625.2466,32.6165,0.0000,0.0000,90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19652,358.9323,3682.0776,97.1412,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,358.9323,3682.0776,117.1413,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19667,95.0057,3729.8225,46.0054,-90.0000,0.0000,0.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19662,337.7672,3692.7434,127.1412,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19684,290.5576,3697.9929,119.8723,0.0000,15.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,257.7041,3697.9929,101.8476,0.0000,-30.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,214.4028,3697.9929,76.8476,0.0000,-30.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19685,157.4701,3697.9929,52.3709,0.0000,-15.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,149.8595,3697.9929,1.6564,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,343.0168,3682.0776,37.1165,0.0000,0.0000,90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19667,95.0057,3729.8225,34.9053,-90.0000,0.0000,0.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19668,124.6504,3397.5898,84.0644,0.0000,15.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19666,159.4614,3413.4658,108.9914,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19680,70.0058,3697.9932,29.3538,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,25.0058,3697.9932,-20.6709,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,20.0058,3697.9932,29.3539,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19659,-15.6602,3682.0776,34.8538,180.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,20.0058,3666.1621,29.3538,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,120.0058,3666.1621,29.3538,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,25.0058,3666.1621,-20.6709,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19664,241.2924,3679.2480,31.6038,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,185.1914,3693.1628,29.3538,0.0000,0.0000,-135.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,236.0429,3714.9141,29.3538,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,125.0058,3666.1621,-20.6709,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19648,241.2924,3599.2480,29.3538,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19644,110.4799,3498.2903,11.5691,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,241.2924,3679.2480,-16.1709,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19647,241.2924,3569.2480,29.3539,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19664,241.2924,3489.2480,31.6038,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,241.2924,3489.2480,-16.1709,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19663,241.2924,3419.2480,27.1038,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,241.2924,3459.2480,29.3538,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,241.2924,3449.2480,29.3538,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19664,241.2924,3369.2480,31.6038,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,241.2924,3369.2480,-16.1709,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19663,241.2924,3319.2480,27.1038,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,236.0429,3283.5820,29.3538,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,235.9641,3283.5449,34.8538,-180.0000,0.0000,179.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,200.3770,3278.3325,29.3538,0.0000,-0.0000,-0.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19652,175.3770,3294.2480,39.3538,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,175.3770,3294.2480,59.3538,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,175.3769,3294.2480,79.3538,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,175.3770,3294.2480,44.8538,180.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,175.3769,3294.2480,99.3538,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19670,185.3770,3278.3325,-20.6709,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,164.7110,3283.5820,109.3538,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,159.4614,3319.2480,109.3538,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,159.4614,3369.2480,109.3538,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,159.4614,3364.2480,59.3291,0.0000,0.0000,90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19666,159.4614,3487.1279,85.3316,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19666,159.4614,3560.7900,61.6717,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19670,119.1004,3385.7981,-1.9767,0.0000,0.0000,90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19649,159.4614,3442.9102,85.6940,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19684,159.4614,3667.4851,81.6925,0.0000,-30.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,159.4614,3634.6316,63.6678,0.0000,30.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19684,159.4614,3691.5645,88.1445,0.0000,-15.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,164.7109,3734.6946,88.9614,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,159.4614,3714.0286,38.9367,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,283.7699,3734.6946,69.5128,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19684,187.8412,3739.9441,88.1445,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,224.2404,3739.9441,79.2371,0.0000,-15.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,273.1040,3739.9441,19.4881,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,289.0194,3719.0288,69.5128,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,283.7699,3734.6946,75.0128,180.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19682,286.5965,3701.8474,69.5128,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19681,237.4409,3645.8386,69.5129,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,262.0187,3673.8430,69.5129,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,235.0180,3608.6575,69.5129,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,235.0180,3558.6575,69.5129,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19682,232.5950,3521.4763,69.5129,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,130.2005,3429.9766,59.7885,0.0000,-15.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19682,208.2971,3497.1785,69.5129,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,171.1159,3494.7554,69.5129,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,222.1594,3507.6140,69.5129,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19662,135.4500,3489.5059,69.5129,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19684,130.2004,3466.3757,68.6959,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,258.4832,3670.3076,19.4881,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19686,108.0004,3345.2810,37.9402,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19649,119.1004,3381.6802,46.8476,0.0000,-15.0000,90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19668,113.5504,3349.2935,71.1235,0.0000,15.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "BlueDirt1", 0);

	CreateDynamicObject(19663,108.0004,3257.8167,34.8733,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,130.2004,3473.6985,19.3535,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,108.0003,3332.8167,-12.9014,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,216.7155,3422.5000,35.9592,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,275.3560,3419.4604,50.1579,0.0000,0.0000,-36.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,281.1376,3401.6663,54.0688,0.0000,0.0000,72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,266.0011,3390.6689,58.0268,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,250.8645,3401.6663,61.8254,0.0000,0.0000,-72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,256.6462,3419.4604,65.9731,0.0000,0.0000,-144.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,256.6462,3419.4604,85.7634,0.0000,0.0000,-144.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,275.3560,3419.4604,69.9482,0.0000,0.0000,-36.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,281.1376,3401.6663,73.8591,0.0000,0.0000,72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,266.0011,3390.6689,77.8171,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,250.8645,3401.6663,81.6157,0.0000,0.0000,-72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,276.0011,3422.5000,88.0673,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,305.9753,3422.5000,88.0673,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,327.3069,3417.8904,87.9516,0.0000,0.0000,-45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19550,7.5000,3710.0000,4.3077,0.0000,0.0000,-180.0000);
	CreateDynamicObject(19672,331.9166,3366.5771,85.9599,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,331.9166,3316.5845,85.9599,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,331.9166,3346.5918,85.9599,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,331.9166,3266.5923,85.9599,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,331.9166,3296.5999,85.9599,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,327.3070,3245.2786,88.2336,0.0000,0.0000,-135.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,304.6953,3245.2788,88.1757,0.0000,0.0000,135.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,297.0461,3285.9395,86.1250,0.0000,0.0000,126.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,279.2520,3291.7209,82.0771,0.0000,0.0000,16.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,268.2546,3276.5845,78.2285,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,279.2520,3261.4480,73.9912,0.0000,0.0000,-20.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,297.0460,3267.2297,70.2106,0.0000,0.0000,54.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,300.0856,3286.5845,68.0976,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,300.0856,3316.5479,68.0976,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,300.0001,3336.5508,68.3325,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,300.0001,3366.5588,68.3325,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,300.0001,3386.5305,68.3325,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,300.0001,3416.5354,68.3325,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3436.5845,68.1464,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3466.5889,68.1464,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3486.5654,68.1464,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3516.5720,68.1464,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3531.8862,91.8754,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3560.2422,91.8754,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1857,3590.2336,91.8754,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1858,3610.2466,89.8444,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.1858,3640.2439,89.8444,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,315.7955,3661.5525,91.7584,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,85.0000,3257.5000,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,-210.0000,3165.0000,4.3077,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19540,-210.0000,3710.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,338.4071,3670.7717,91.8683,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,346.0564,3691.4324,93.9506,0.0000,0.0000,54.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,363.8504,3697.2141,97.8625,0.0000,0.0000,-18.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,374.8478,3682.0776,101.8288,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,363.8505,3666.9409,105.8737,0.0000,0.0000,18.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,346.0564,3672.7227,109.8370,0.0000,0.0000,-54.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,346.0564,3672.7227,129.7860,0.0000,0.0000,-54.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,363.8505,3666.9409,125.8226,0.0000,0.0000,18.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,374.8478,3682.0776,121.7777,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,363.8504,3697.2141,117.8115,0.0000,0.0000,-18.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,346.0564,3691.4324,113.8996,0.0000,0.0000,54.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,338.4071,3693.3833,131.7450,0.0000,0.0000,-45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,311.7588,3697.9929,130.6222,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,287.1232,3697.9929,123.3002,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,269.3201,3697.9929,113.6222,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,243.3627,3697.9929,98.6212,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,226.0258,3697.9929,88.6012,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,200.0598,3697.9929,73.6839,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,178.2511,3697.9929,62.4286,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,154.6358,3697.9929,56.6647,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,35.0058,3697.9932,34.0287,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,5.0128,3697.9932,34.0287,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,5.0128,3666.1621,34.0287,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,35.0058,3666.1621,34.0287,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,55.0236,3666.1621,36.0365,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,85.0416,3666.1621,36.0365,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,105.0083,3666.1621,34.0287,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,134.9800,3666.1621,34.0287,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4567,3669.6313,34.0726,0.0000,0.0000,27.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,174.5848,3682.5562,34.1170,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,195.7980,3703.7695,34.1170,0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,215.5406,3718.6057,33.9744,0.0000,0.0000,18.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,234.7318,3717.1240,34.0809,0.0000,0.0000,-36.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3694.2480,36.0042,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3664.2678,36.0042,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3504.2703,36.0042,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3474.2324,36.0042,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3434.2769,32.0711,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3404.2515,32.0711,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3384.2493,36.0140,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3354.2383,36.0140,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3334.2317,32.0321,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3304.2390,31.9984,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,215.3770,3278.3325,33.8870,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,185.3680,3278.3325,33.8870,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19652,175.3770,3294.2480,64.8538,180.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	TempObjectNumber = CreateDynamicObject(19652,175.3769,3294.2480,84.8538,180.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "GreenDirt1", 0);

	CreateDynamicObject(19672,159.4614,3304.2480,114.0335,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,164.0711,3282.9424,113.9617,0.0000,0.0000,-45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,184.7318,3281.3721,112.0262,0.0000,0.0000,36.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,190.5135,3299.1663,107.8524,0.0000,0.0000,-72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,175.3769,3310.1636,103.8580,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,160.2404,3299.1663,100.0933,0.0000,0.0000,72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,166.0220,3281.3721,95.9705,0.0000,0.0000,-36.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3334.2378,114.0335,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3354.2266,114.0335,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3384.2668,114.0335,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3412.5928,114.0335,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3486.2449,90.4535,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3559.9297,66.7921,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4614,3579.7673,44.2265,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4615,3427.9221,90.4296,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4615,3457.8840,90.4296,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4613,3620.2524,60.4987,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4613,3646.2703,75.5153,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4613,3668.8413,87.1338,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4613,3693.7808,93.1308,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,190.6684,3739.9441,92.3369,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,210.4541,3739.9441,87.6401,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,239.4345,3739.9441,79.8874,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,263.4093,3739.9441,74.7607,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,285.5501,3699.5776,74.1313,-0.0000,0.0000,63.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,272.6253,3684.4497,74.1723,-0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,251.4121,3663.2366,74.1261,-0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,236.5759,3643.4939,74.1149,-0.0000,0.0000,72.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,235.0180,3623.6575,74.2145,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,235.0180,3593.5452,74.2145,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,235.0180,3573.5925,74.2145,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,235.0180,3543.6985,74.2145,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,231.5486,3519.2065,74.1295,-0.0000,0.0000,63.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,205.9522,3496.3135,74.1754,-0.0000,0.0000,18.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,186.1409,3494.8167,74.1754,-0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,156.0972,3494.8167,74.1754,-0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,134.8101,3490.1458,74.2067,-0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,130.2005,3463.4688,72.9750,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,130.2005,3443.7839,68.1349,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,130.2005,3414.7671,60.4308,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,129.9005,3396.0225,56.9608,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,119.1004,3395.4226,55.3437,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,119.1004,3366.4854,47.5958,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,118.8004,3347.7910,44.0340,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,108.0004,3342.5022,42.2326,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,108.0004,3272.8323,39.8413,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,108.0004,3242.8140,39.7832,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,241.2924,3629.2480,29.3538,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,241.2925,3539.2480,29.3539,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19642,241.2924,3589.2480,29.3539,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19642,241.2924,3579.2480,29.3539,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,241.7848,3542.6001,-22.0166,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,241.2924,3624.2480,-20.6709,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3524.2693,34.0474,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3554.2651,34.0474,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3614.2158,34.0474,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,241.2924,3644.2666,34.0474,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);

	TempObjectNumber = CreateDynamicObject(19649,159.4614,3516.5723,62.0340,0.0000,-0.0000,-90.0000,-1,-1,-1,999.0);
	SetDynamicObjectMaterial(TempObjectNumber, 0, 19659, "MatTubes", "YellowDirt1", 0);

	CreateDynamicObject(19672,159.4615,3501.5842,66.7697,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,159.4615,3531.5461,66.7697,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19685,159.4614,3577.6987,39.1911,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19685,159.4614,3601.7781,45.6431,0.0000,15.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,159.4614,3709.0286,88.9614,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,159.4614,3719.0286,88.9614,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,235.0180,3533.6575,19.4881,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,235.0180,3613.6575,19.4881,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,159.4614,3447.9102,35.6692,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,159.4614,3521.5723,12.0093,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,159.4614,3570.0881,-11.5234,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,164.7110,3734.6946,94.4614,-180.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,316.0011,3240.6689,33.4567,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19550,272.4998,3570.0000,4.3080,0.0000,0.0000,0.0000);
	CreateDynamicObject(19550,147.4997,3570.0000,4.3080,0.0000,0.0000,-180.0000);
	CreateDynamicObject(19550,272.4998,3445.0000,4.3080,0.0000,0.0000,180.0000);
	CreateDynamicObject(19550,272.4998,3320.0000,4.3080,0.0000,0.0000,0.0000);
	CreateDynamicObject(19549,85.0002,3273.7500,4.3077,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,334.9997,3445.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,334.9997,3320.0000,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19550,147.4997,3445.0000,4.3080,0.0000,0.0000,-0.0000);
	CreateDynamicObject(19550,147.4997,3320.0000,4.3080,0.0000,0.0000,-180.0000);
	CreateDynamicObject(762,159.2296,3364.1545,8.0631,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,172.3828,3530.9956,4.1185,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,210.9594,3632.0981,4.1185,0.0000,0.0000,-81.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,216.5798,3372.2180,4.1185,0.0000,0.0000,-55.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,169.0373,3244.0442,4.1185,0.0000,0.0000,21.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,348.5469,3253.4072,4.1185,0.0000,0.0000,71.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,159.7794,3569.8127,8.0631,0.0000,0.0000,40.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,311.5156,3624.8386,8.0631,0.0000,0.0000,78.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,298.8590,3306.5583,8.0631,0.0000,0.0000,126.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,24.2674,3664.7112,8.0631,0.0000,0.0000,169.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,159.5200,3713.7891,8.0631,0.0000,0.0000,-140.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,290.4150,3422.7559,8.0631,0.0000,0.0000,-175.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,240.0694,3678.5208,8.0631,0.0000,0.0000,122.0000,-1,-1,-1,999.0);
	CreateDynamicObject(762,107.5217,3293.8779,9.0631,0.0000,0.0000,50.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,60.2490,3681.9932,4.1185,0.0000,0.0000,36.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,313.2220,3679.3630,4.1185,0.0000,0.0000,82.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,267.0584,3501.8621,4.1185,0.0000,0.0000,27.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,263.6267,3280.8892,4.1185,0.0000,0.0000,-52.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,318.7102,3387.3503,4.1185,0.0000,0.0000,42.0000,-1,-1,-1,999.0);
	CreateDynamicObject(621,131.9952,3640.5090,4.1185,0.0000,0.0000,121.0000,-1,-1,-1,999.0);
	CreateDynamicObject(3509,87.8005,3438.1350,4.1266,0.0000,0.0000,-45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(3509,87.8005,3407.0583,4.1266,0.0000,0.0000,62.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,108.0004,3307.8167,37.1233,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19684,139.8314,3245.2810,36.3063,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,139.8315,3281.6802,27.3989,0.0000,-15.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19686,139.8315,3318.0793,18.4916,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19661,145.0810,3451.2097,17.6746,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,139.8315,3355.5437,17.6746,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,139.8315,3405.5437,17.6746,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,139.8315,3435.5437,17.6746,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,180.7469,3456.4592,17.6746,0.0000,0.0000,180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19662,216.4129,3461.7087,17.6746,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19662,216.4129,3493.0408,17.6746,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19646,221.6624,3477.3748,17.6746,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19649,170.8531,3498.2903,14.6323,0.0000,-5.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19648,130.4799,3498.2903,11.5691,0.0000,0.0000,-180.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19642,120.4800,3498.2903,11.5691,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19650,93.7424,3498.2903,6.9995,0.0000,-19.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19534,77.5000,3500.0000,4.3077,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(3509,87.8005,3513.5872,4.1266,0.0000,0.0000,-45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(3509,87.8005,3482.5103,4.1266,0.0000,0.0000,62.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,108.0004,3322.8167,41.8230,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,108.0004,3292.8167,41.8230,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,112.6100,3221.5107,41.8151,0.0000,0.0000,135.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,135.2216,3221.5107,41.8151,0.0000,0.0000,-135.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3244.9832,40.9682,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3267.9055,35.9077,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3296.8618,28.1914,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3317.8293,23.2563,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3340.5437,22.4207,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3370.5759,22.4207,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3390.5437,22.4207,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,139.8314,3420.5437,22.4207,-0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,144.4411,3451.8496,22.4207,-0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,165.7469,3456.4592,22.4207,-0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,195.7418,3456.4592,22.4207,-0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,217.0527,3461.0688,22.4207,-0.0000,0.0000,45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,217.0528,3493.6804,22.4207,-0.0000,0.0000,-45.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,185.5585,3498.2903,20.4852,-0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19672,155.6512,3498.2903,17.9867,-0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,108.0004,3257.8167,-17.4014,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,139.8314,3232.8167,-12.9015,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,139.8315,3330.5437,-32.3501,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,139.8315,3410.5437,-32.3501,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,185.7469,3456.4592,-32.3501,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19670,175.5944,3498.2903,-34.9671,0.0000,0.0000,-0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19659,123.9158,3222.1506,37.1233,0.0000,0.0000,90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19542,147.4997,3257.5000,4.3080,0.0000,0.0000,-90.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19543,77.5002,3383.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19536,7.5000,3461.2500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19536,7.5000,3803.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19550,147.4997,3695.0000,4.3080,0.0000,0.0000,-0.0000);
	CreateDynamicObject(19550,272.4998,3695.0000,4.3080,0.0000,0.0000,-180.0000);
	CreateDynamicObject(621,236.0952,3742.8730,4.1185,0.0000,0.0000,125.0000,-1,-1,-1,999.0);
	CreateDynamicObject(19536,7.5000,3383.7500,4.3077,0.0000,0.0000,0.0000,-1,-1,-1,999.0);

	return 1;
}
StartLab()
{
	SendClientMessageToAll(0xFFDD00AA, "* Внимание ! Сейчас начало гонки 'Stunt Island'");
	SendClientMessageToAll(0xFFDD00AA, "** Для участия Используйте команду: {"#cWHITE"}/si");

	LapTime = (60 * 20);
}
UpdateRecon(playerid,i)
{
	if( ! IsPlayerConnected (i) )
	{
		GameTextForPlayer(playerid,"~w~RECON ~r~OFF~n~~r~PLAYER DISCONNECT",3000,4);
		TogglePlayerSpectating(playerid,0);
		return 1;
	}
	new PlayerState=GetPlayerState(i),vehicleid=GetPlayerVehicleID(i),Float:vehicleHealth;
	new speedlimit;
	if(PlayerState == 2 || PlayerState == 3)
	{
		new modelid = GetVehicleModel(vehicleid);
		if(modelid>=400)
		{
			speedlimit=SpeedLimit[modelid-400] + 80;
		}
		else speedlimit=28;
	}
	else speedlimit=28;
	if(vehicleid)
	{
		GetVehicleHealth(vehicleid,vehicleHealth);
	}
	format(stringer,200,"%d : %d / %d~n~%d~n~%d~n~%d~n~%d~n~%d / %d~n~%d~n~%d : %d ~n~%d / %d : %d%%~n~%d / %d : %d%%~n~%d~n~%.2f %",
	p_info[i][pLevel],p_info[i][pExp],(p_info[i][pLevel]+1)*4,p_info[i][pWarns],floatround(PlayerAP[i]),floatround(ServerHP[i]),
	PlayerState!=2 && PlayerState != 3 && vehicleid != INVALID_PLAYER_ID ? -1 : floatround(vehicleHealth),// хп машины
	AC_UpdateSpeedPlayer[i],// скорость
	(speedlimit >= 0) ? (speedlimit) : (28),// максимальная скорость
	GetPlayerPing(i),// пинг
	GetPlayerAmmo(i),(GetGunSlot(GetPlayerWeapon(i)) != -1) ? (PlayerWeaponData[i][GetGunSlot(GetPlayerWeapon(i))][PLAYER_AMMO]) : (-1),// патроны
	GetPVarInt(i,"r_shot"),GetPVarInt(i,"r_shot_hit"),
	GetPVarInt(i,"r_shot_hit") > 1 && GetPVarInt(i,"r_shot") > 1 ? ((GetPVarInt(i,"r_shot_hit")+1)/(GetPVarInt(i,"r_shot")+1)*100) : (0),
	GetPVarInt(i,"r_shot_10"),GetPVarInt(i,"r_shot_hit_10"),
	GetPVarInt(i,"r_shot_hit") > 1 && GetPVarInt(i,"r_shot") > 1 ? ((GetPVarInt(i,"r_shot_hit_10")+1)/(GetPVarInt(i,"r_shot_10")+1)*100) : (0),
	(unix - p_info[i][pAFK] >= 3)?(unix - p_info[i][pAFK]):(0), NetStats_PacketLossPercent(i));
	PlayerTextDrawSetString(playerid,ReconPlayerText[playerid][0],stringer);
	return 1;
}//

stock AC_SetPlayerArmour(playerid,Float:armour)
{
	PlayerAP[playerid]=armour;
	ServerArmour[playerid] = armour;
	SetPlayerArmour(playerid,armour);
	AC_Armourtime[playerid]=4;
	return 1;
}
//
stock AC_SetPlayerHealth(playerid,Float:health)
{
	if(health<0.0)
	{
		health=0.0;
	}
	if(health>200.0)
	{
		health = 200.0;
	}
	ServerHP[playerid] = health;
	SetPlayerHealth(playerid,health);
	AC_Healthtime[playerid]=4;
	UpdateHealthBand(playerid);
	return 1;
}



SetHotelCar(playerid)
{
	if(caridhouse[playerid][0])
	{
		DestroyVehicleOP(caridhouse[playerid][0]);
		caridhouse[playerid][0] = 0;
	}
	if(!PlayerCar[playerid][0])
	{
		PlayerCar[playerid][0] = 462;
		UpdatePlayerData(playerid,"pCar",PlayerCar[playerid][0]);

		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка. Модель вашего автомобиля: 0 (Вам выдан скутер)");
		SendClientMessage(playerid, COLOR_GREY, "Обратитесь к техническому программисту. Контакты ниже");
		SendClientMessage(playerid, COLOR_GREY, "Страница VK: vk.com/world.rpgame");
		SendClientMessage(playerid, COLOR_GREY, "E-MAIL: dj.marvels@gmail.com");
		SendClientMessage(playerid, COLOR_GREY, "После того как свяжитесь, ожидайте помощи в течении 12 часов");
	}
	new room = p_info[playerid][pRoom]-1;
	caridhouse[playerid][0] = CreateVehicleOP(PlayerCar[playerid][0],gCarHotelTextPos[room][0],gCarHotelTextPos[room][1],gCarHotelTextPos[room][2],gCarHotelTextPos[room][3], gPlayerTuning[playerid][0][1], 0, 600_000);

	if(gPlayerTuning[playerid][0][0] != 255)
	{
		ChangeVehiclePaintjob(caridhouse[playerid][0], gPlayerTuning[playerid][0][0]);
	}
	for(new F = 2; F <= 11; F++)
	{
		if(gPlayerTuning[playerid][0][F] != -1)
		{
			AC_AddVehicleComponent(caridhouse[playerid][0], gPlayerTuning[playerid][0][F]);
		}
	}
	print("create car (SetHotelCar)");
	gVehicles[caridhouse[playerid][0]-1][vLock] = false;
	return 1;
}

UpdateTempVehicle(playerid,typecar)
{
	if(typecar < 1 || typecar > MAX_PLAYER_CAR) return 1;
	DestroyVehicleOP(caridhouse[playerid][typecar-1]);
	caridhouse[playerid][typecar-1]=0;

	if(!PlayerCar[playerid][typecar-1])
	{
		PlayerCar[playerid][typecar-1] = 462;
		UpdatePlayerData(playerid,"pCar",PlayerCar[playerid][0]);
		UpdatePlayerData(playerid,"pCar2",PlayerCar[playerid][1]);

		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка. Модель вашего автомобиля: 0 (Вам выдан скутер)");
		SendClientMessage(playerid, COLOR_GREY, "Обратитесь к техническому программисту. Контакты ниже");
		SendClientMessage(playerid, COLOR_GREY, "Страница VK: vk.com/world.rpgame");
		SendClientMessage(playerid, COLOR_GREY, "E-MAIL: dj.marvels@gmail.com");
		SendClientMessage(playerid, COLOR_GREY, "После того как свяжитесь, ожидайте помощи в течении 12 часов");
	}

	new tempkey = p_info[playerid][pTempKey];
	if(!strcmp(gHouseArendator[tempkey][0],NamePlayer[playerid]))
	{
		if(typecar == 1)
			caridhouse[playerid][0] = CreateVehicleOP(PlayerCar[playerid][0],877.7375,579.8083,998.0358,324.3780, gPlayerTuning[playerid][0][1], 0, 600_000);
		else if(typecar == 2)
			caridhouse[playerid][1] = CreateVehicleOP(PlayerCar[playerid][1],871.8360,580.0966,998.0535,327.2452, gPlayerTuning[playerid][1][1], 0, 600_000);
	}
	else if(!strcmp(gHouseArendator[tempkey][1],NamePlayer[playerid]))
	{
		if(typecar == 1)
			caridhouse[playerid][0] = CreateVehicleOP(PlayerCar[playerid][0],865.5618,580.0657,998.0527,326.4491, gPlayerTuning[playerid][0][1], 0, 600_000);
		else if(typecar == 2)
			caridhouse[playerid][1] = CreateVehicleOP(PlayerCar[playerid][1],860.9431,585.8917,998.0538,270.1149, gPlayerTuning[playerid][1][1], 0, 600_000);
	}
	else if(!strcmp(gHouseArendator[tempkey][2],NamePlayer[playerid]))
	{
		if(typecar == 1)
			caridhouse[playerid][0] = CreateVehicleOP(PlayerCar[playerid][0],860.8804,590.5051,998.0536,271.1745, gPlayerTuning[playerid][0][1], 0, 600_000);
		else if(typecar == 2)
			caridhouse[playerid][1] = CreateVehicleOP(PlayerCar[playerid][1],860.8683,595.0145,998.0543,271.0775, gPlayerTuning[playerid][1][1], 0, 600_000);
	}
	else if(!strcmp(gHouseArendator[tempkey][3],NamePlayer[playerid]))
	{
		if(typecar == 1)
			caridhouse[playerid][0] = CreateVehicleOP(PlayerCar[playerid][0],860.2510,599.6335,998.0538,269.8602, gPlayerTuning[playerid][0][1], 0, 600_000);
		else if(typecar == 2)
			caridhouse[playerid][1] = CreateVehicleOP(PlayerCar[playerid][1],871.0065,600.9493,998.0529,212.6415, gPlayerTuning[playerid][1][1], 0, 600_000);
	}
	else if(!strcmp(gHouseArendator[tempkey][4],NamePlayer[playerid]))
	{
		if(typecar == 1)
			caridhouse[playerid][0] = CreateVehicleOP(PlayerCar[playerid][0],900.9602,590.6341,998.0308,93.0393, gPlayerTuning[playerid][0][1], 0, 600_000);
		else if(typecar == 2)
			caridhouse[playerid][1] = CreateVehicleOP(PlayerCar[playerid][1],900.8442,586.5677,998.0309,90.7676, gPlayerTuning[playerid][1][1], 0, 600_000);
	}
	print("create car for rent");

	if(caridhouse[playerid][typecar-1] > 0)
	{
		if(gPlayerTuning[playerid][typecar-1][0] != 255)
		{
			ChangeVehiclePaintjob(caridhouse[playerid][typecar-1], gPlayerTuning[playerid][typecar-1][0]);
		}
		for(new F = 2; F <= 11; F++)
		{
			if(gPlayerTuning[playerid][typecar-1][F] != -1)
			{
				AC_AddVehicleComponent(caridhouse[playerid][typecar-1], gPlayerTuning[playerid][typecar-1][F]);
			}
		}
		gVehicles[caridhouse[playerid][typecar-1]-1][vLock] = false;
		AC_LinkVehicleToInterior(caridhouse[playerid][typecar-1], gHouseExitInterior[gHouses[tempkey][hKlass]-1]);
		AC_SetVehicleVirtualWorld(caridhouse[playerid][typecar-1], tempkey);
	}
	return 1;
}

CheckArendatorPlata()
{
	mysql_query_string[0] = EOS;
	for(new h = 1; h < TotalHouse; h++)
	{
		if(!gHouses[h][gRentStatus]) continue;
		for(new i = 0; i < 5; i++)
		{
			if(gHouses[h][RentStatus][i]) continue;
			if((gHouses[h][RentPlata][i]-gHouses[h][RentAllPlata])<=0)
			{
				if(strcmp(gHouseArendator[h][i],"The State"))
				{
					new bool:check_online = false;
					foreach(x)
					{
						if(!strcmp(gHouseArendator[h][i],NamePlayer[x]))
						{
							SendClientMessage(x,COLOR_GREY,"Вы были выселены с арендуемого дома за неуплату.");
							UpdatePlayerData(x,"pTempKey",0);
							if(caridhouse[x][0])DestroyVehicleOP(caridhouse[x][0]),caridhouse[x][0]=0;
							if(caridhouse[x][1])DestroyVehicleOP(caridhouse[x][1]),caridhouse[x][1]=0;
							p_info[x][pTempKey] = 0;
							check_online = true;
							break;
						}
					}
					if(!check_online)
					{
						format(mysql_query_string,128,"UPDATE `accounts` SET `pTempKey` = '0' WHERE `tName` = '%s' LIMIT 1",gHouseArendator[h][i]);
						mysql_pquery(connects, mysql_query_string, "", "");
					}
					strmid(gHouseArendator[h][i],"The State",0,strlen("The State"),31);
				}
				SaveHome(h);
			}
			else if(strcmp(gHouseArendator[h][i],"The State"))
			{
				gHouses[h][RentPlata][i] -= gHouses[h][RentAllPlata];
			}
		}
	}
}

CMD:gangfreeze(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return SendErr(playerid,"Вы не уполномочены использовать эту команду!");

	if(sscanf(params,"ii",params[0],params[1]))
	{
		SendClientMessage(playerid,COLOR_GREY,"/gangfreeze [id банды] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,COLOR_GREY,"4 - The Rifa | 5 - The Aztecas");
		return 1;
	}
	if(params[0] < 1 || params[0] > 5)
	{
		SendClientMessage(playerid,COLOR_GREY,"/gangfreeze [id банды] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,COLOR_GREY,"4 - The Rifa | 5 - The Aztecas");
		return 1;
	}
	if(params[1] < 0) return SendClientMessage(playerid,COLOR_GREY,"Ошибка sscanf <ii> params[1] #2");
	if(params[1] == 0)
	{
		format(stringer,128,"Администратор %s разморозил банду %s.",NamePlayer[playerid],fracmorozName[params[0]-1]);
		SendClientMessageToAll(COLOR_LIGHTRED,stringer);
		fracmoroz[params[0]-1] = 0;
		UpdateMorozed();
		return 1;
	}
	fracmoroz[params[0]-1] = unix+(3600*params[1]);
	UpdateMorozed();
	format(stringer,128,"Администратор %s заморозил банду %s на %d час(ов)",NamePlayer[playerid],fracmorozName[params[0]-1],params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer);
	return 1;
}

CMD:mafiafreeze(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return SendErr(playerid,"Вы не уполномочены использовать эту команду");

	if(sscanf(params,"ii",params[0],params[1]))
	{
		SendInf(playerid, "/mafiafreeze [id мафии] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - La Cosa Nostra | 2 - Yakuza | 3 - Русская мафия");
		return 1;
	}
	if(params[0] < 1 || params[0] > 3)
	{
		SendInf(playerid, "/mafiafreeze [id мафии] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - La Cosa Nostra | 2 - Yakuza | 3 - Русская мафия");
		return 1;
	}
	if(params[1] < 0) return SendClientMessage(playerid,COLOR_GREY,"Ошибка sscanf <ii> params[1] #2");
	if(params[1] == 0)
	{
		format(stringer,128,"Администратор %s разморозил мафию %s",NamePlayer[playerid],fracmorozName[params[0]+4]);
		SendClientMessageToAll(COLOR_LIGHTRED,stringer);
		fracmoroz[params[0]+4] = 0;
		UpdateMorozed();
		return 1;
	}
	fracmoroz[params[0]+4] = unix+(3600*params[1]);
	UpdateMorozed();
	format(stringer,128,"Администратор %s заморозил мафию %s на %d час(ов)",NamePlayer[playerid],fracmorozName[params[0]+4],params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,stringer);
	return 1;
}

iswheelmodel(modelid) {

	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for (new I = 0; I != 17; ++I)  {

		if (modelid == wheelmodels[I])
			return true;

	}

	return false;
}

IllegalCarNitroIde(carmodel) {

	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for (new I = 0; I != 29; ++I)  {

		if (carmodel == illegalvehs[I])
			return true;

	}
	return false;
}


stock islegalcarmod(vehicleide, componentid) {

	new modok = false;

	// stereo, hydraulics & nos (1x 2x 3x) are special.
	if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {

		new nosblocker = IllegalCarNitroIde(vehicleide);

		if (!nosblocker)
			modok = true;

	} else {

		for (new I = 0; I != 48; ++I)   {

			if (legalmods[I][0] == vehicleide) { // first is car IDE

				for(new J = 1; J < 22; J++) { // start with 1
					if (legalmods[I][J] == componentid)
						modok = true;
				}

			}

		}

	}
	return modok;
}

stock AC_AddVehicleComponent(vehicleid, componentid)
{
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = islegalcarmod(vehicleide, componentid);
	if (!modok) return 0;
	AddVehicleComponent(vehicleid, componentid);
	return 1;
}
public StartMovingTimer()
{
	MoveObject(gMainShipObjectId,
	gShipRoutePoints[gShipCurrentPoint][0],gShipRoutePoints[gShipCurrentPoint][1],gShipRoutePoints[gShipCurrentPoint][2],
	SHIP_MOVE_SPEED / 4.0, gShipRoutePoints[gShipCurrentPoint][3],gShipRoutePoints[gShipCurrentPoint][4],gShipRoutePoints[gShipCurrentPoint][5]);
}
public OnPlayerGiveDamageActor(playerid, damaged_actorid, Float:amount, weaponid, bodypart)
{
	new act_str [21+10+100];
	for new at=damaged_actorid >= bot_id[46] && damaged_actorid <= bot_id[1]?MAX_NPC_BOT:0;at;at-- do
	{
	   	if(at==20) continue;
		if(bot_id[at]!=damaged_actorid || IsAUseBot[at]) continue;
		switch(bodypart)
		{
			case 3, 4: format(act_str,21+10+100,"{6ab1ff}Не дерись, больно ! Прям в живот\n\n{"#cWHITE"}%s (%i)",bot_message[at][0],at);
			case 5, 6, 7, 8: format(act_str,21+10+100,"{6ab1ff}Не дерись, больно ! Ох мои руки, мои ноги\n\n{"#cWHITE"}%s (%i)",bot_message[at][0],at);
			case 9: format(act_str,21+10+100,"{6ab1ff}Не дерись, больно ! Ох моя головушка !\n\n{"#cWHITE"}%s (%i)",bot_message[at][0],at);
			default: format(act_str,21+10+100,"\n\n%s (%i)",bot_message[at][0],at);
		}
		UpdateDynamic3DTextLabelText(bot_text[at],-1,act_str);
		ApplyActorAnimation(damaged_actorid, "PED", "FIGHTA_BLOCK", 4.1, 1, 0, 0, 0, 450);
		break;
	}
	return 1;
}

forward UpdateBotText();
public UpdateBotText()
{
	if(unix-CheckTimeTimer<2) return 1;
	new act_str [21+10+100];
	for new bid=MAX_NPC_BOT;bid;bid-- do
	{
 		if(bid==20) continue;
		if !cd_bot[bid] *then
		{
			format(act_str,21+10+100,"\n\n{"#cWHITE"}%s (%i)",bot_message[bid][0],bid);
			UpdateDynamic3DTextLabelText(bot_text[bid],-1,act_str);
			continue;
		}

		IsAUseBot[bid]=cd_bot[bid]==8?false:true;
		format(act_str,21+10+100,"{6ab1ff}%s%s{"#cWHITE"}%s (%i)",cd_bot[bid]==8?(""):bot_message[bid][cd_bot[bid]],cd_bot[bid]==8?("\n"):("\n\n"),bot_message[bid][0],bid);
		UpdateDynamic3DTextLabelText(bot_text[bid],-1,act_str);
		if strlen(bot_message[bid][cd_bot[bid]!=8?cd_bot[bid]:0]) && cd_bot[bid]!=8 *then
		{
			ApplyActorAnimation(bot_id[bid], "ped", "IDLE_CHAT", 4.1, 1, 0, 0, 0, 4000);
		}
		cd_bot[bid]=cd_bot[bid]==8?0:cd_bot[bid]+1;
	}
	CheckTimeTimer=unix;
	return 1;
}

StopStream(playerid)
{
	DeletePVar(playerid, "pAudioStream");
	StopAudioStreamForPlayer(playerid);
}

PlayStream(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
{
	if(GetPVarType(playerid, #pAudioStream)) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, #pAudioStream, 1);
	PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}


PaintBallCheck()
{
	PaintBallTime--;

	if(PaintBallTime>(30*60) && PaintBallStatus)
	{
		format(stringer,64,"TEAM BLUE: ~w~%i",PaintBallKills [PTEAM_BLUE]);
		TextDrawSetString(PaintText[PTEAM_BLUE],stringer);

		format(stringer,64,"TEAM RED: ~w~%i",PaintBallKills [PTEAM_RED]);
		TextDrawSetString(PaintText[PTEAM_RED],stringer);

		format(stringer,64,"TIME: ~w~%02i:%02i",((PaintBallTime-(30 * 60))/60),(PaintBallTime-(30 * 60)) - (60 * (floatround((PaintBallTime-(30 * 60)))/60)));
		TextDrawSetString(PaintText[2],stringer);
	}

	if(PaintBallTime == (30 * 60) && PaintBallStatus)
	{
		format(stringer,128,"PaintBall окончен. Победила команда: {"#cWHITE"}%s {07f6b3}Убийств: {"#cWHITE"}%i",(PaintBallKills [PTEAM_BLUE] < PaintBallKills [PTEAM_RED]) ? ("Красных") : ("Синих"),(PaintBallKills [PTEAM_BLUE] < PaintBallKills [PTEAM_RED]) ? (PaintBallKills [PTEAM_RED]) : (PaintBallKills [PTEAM_BLUE]));
		SendClientMessageToAll(0x07f6b3FF,stringer);

		foreach(i)
		{
			if(GetPVarInt(i,"pteam"))
			{
				if(PaintBallKills [PTEAM_BLUE] < PaintBallKills [PTEAM_RED] && GetPVarInt(i,"pteam")==PTEAM_RED+1)
				{
							SendClientMessage(i,CGREEN,"Вы получили приз: {"#cWHITE"}15.000$");
							TransferMoney(i,p_info[i][pCash]+15000,15000,"доставил продукты");
							p_info[i][pCash] += 15000;
							UpdateMoney(i);
				}
				else if(PaintBallKills [PTEAM_RED] < PaintBallKills [PTEAM_BLUE] && GetPVarInt(i,"pteam")==PTEAM_BLUE+1)
				{
							SendClientMessage(i,CGREEN,"Вы получили приз: {"#cWHITE"}15.000$");
							TransferMoney(i,p_info[i][pCash]+15000,15000,"доставил продукты");
							p_info[i][pCash] += 15000;
							UpdateMoney(i);
				}
				PlayerWeapon[i][31] = 0;
				PlayerWeapon[i][24] = 0;
				AC_SetPlayerPos(i,2693.9631,-1708.9209,11.8478);
				SetPlayerInterior(i,0);
				SetPlayerColorAc(i,p_info[i][tMember]);
				for(new num; num < 10; num++) SendDeathMessageToPlayer(i,6000,5005, 255);
				TextDrawHideForPlayer(i,PaintText[0]);
				TextDrawHideForPlayer(i,PaintText[1]);
				TextDrawHideForPlayer(i,PaintText[2]);
				SetPlayerSkin(i, p_info[i][tMember] ? p_info[i][pModel] : p_info[i][pChar]);
				PlayerWeaponTime[i]=10;
				AC_ResetPlayerWeapons(i);
				DeletePVar(i,"pteam");
			}
		}
		TotalPaintBall=0;
		PaintBallKills[PTEAM_RED]=0;
		PaintBallKills[PTEAM_BLUE]=0;
		TextDrawSetString(PaintText[PTEAM_RED],"TEAM RED: ~w~0");
		TextDrawSetString(PaintText[PTEAM_BLUE],"TEAM BLUE: ~w~0");
		TextDrawSetString(PaintText[2],"TIME: ~w~10:00");
		PaintBallStatus = false;
		return 1;
	}
	if(PaintBallTime == (10 * 60) && !PaintBallStatus)
	{
		SendClientMessageToAll(0x07f6b3FF,"Начало PaintBall через 10 минут. Место регистрации: {"#cWHITE"}/gps > Развлечения {07f6b3}Приз: {"#cWHITE"}15.000$");
		return 1;
	}
	else if(PaintBallTime == (5 * 60) && !PaintBallStatus)
	{
		SendClientMessageToAll(0x07f6b3FF,"Начало PaintBall через 5 минут. Место регистрации: {"#cWHITE"}/gps > Развлечения {07f6b3}Приз: {"#cWHITE"}15.000$");
		return 1;
	}
	else if(PaintBallTime == (2 * 60) && !PaintBallStatus)
	{
		SendClientMessageToAll(0x07f6b3FF,"Начало PaintBall через 2 минуты. Место регистрации: {"#cWHITE"}/gps > Развлечения {07f6b3}Приз: {"#cWHITE"}15.000$");
		return 1;
	}
	else if(PaintBallTime <= 0 && !PaintBallStatus)
	{
		TotalPaintBall=0;
		
		foreach(i)
		{
			if(PlayerToPoint(80.0,i,2693.9631,-1708.9209,11.8478) && GetPVarInt(i,"pteam")) TotalPaintBall++;
		}
		if(TotalPaintBall < 2)
		{
			PaintBallTime = (40 * 60);
			SendClientMessageToAll(0x07f6b3FF,"PaintBall не начат. Причина: {"#cWHITE"}Недостаточное количество участников");
			return 1;
		}
		TotalPaintBall=0;
		foreach(i)
		{
			if(PlayerToPoint(80.0,i,2693.9631,-1708.9209,11.8478))
			{
			    if(GetPVarInt(i,"pteam"))
			    {
			        TotalPaintBall++;

			        if((TotalPaintBall % 2)<=0 && TotalPaintBall)
					{
						SetPVarInt(i,"pteam",1);
					}
					else
					{
						SetPVarInt(i,"pteam",2);
					}
					new prandomspawn = random(4);
					AC_SetPlayerPos(i,SpawnPaintBall [GetPVarInt(i,"pteam")-1] [prandomspawn][0],SpawnPaintBall [GetPVarInt(i,"pteam")-1] [prandomspawn][1],SpawnPaintBall [GetPVarInt(i,"pteam")-1] [prandomspawn][2]);
					SetPlayerFacingAngle(i,SpawnPaintBall [GetPVarInt(i,"pteam")-1] [prandomspawn][3]);
					SetPlayerInterior(i,0);
					SetPlayerVirtualWorld(i,10);
					AC_ResetPlayerWeapons(i);
					AC_SetPlayerHealth(i, 100.0);
					AC_GivePlayerWeapon(i,31,500);
					AC_GivePlayerWeapon(i,24,500);
					SetPlayerColor(i,(GetPVarInt(i,"pteam") == 2)?(0x882200FF):(0x6666EEFF));
					TextDrawShowForPlayer(i,PaintText[0]);
					TextDrawShowForPlayer(i,PaintText[1]);
					TextDrawShowForPlayer(i,PaintText[2]);
					SetPlayerSkin(i,(GetPVarInt(i,"pteam") == 2)?(179):(285));

				}
			}
			else if(GetPVarInt(i,"pteam") && !PlayerToPoint(80.0,i,2693.9631,-1708.9209,11.8478))
			{
				TotalPaintBall--;
				DeletePVar(i,"pteam");
			}
		}

		format(stringer,128,"PaintBall начат. Участников: {"#cWHITE"}%i {07f6b3}Приз: {"#cWHITE"}15.000$",TotalPaintBall);
		SendClientMessageToAll(0x07f6b3FF,stringer);

		PaintBallTime = (40 * 60);
		PaintBallStatus = true;
	}
	return 1;
}



UpdateRace()
{
	TimeRace --;
	if(TimeRace > (45 * 60) && TimeRace <= (50 * 60) && RaceStatus)
	{
		new update_race_player[100];
		foreach(i)
		{
			if(!GetPVarInt(i, "InRaces")) continue;

			format(update_race_player,100,"~y~   TIME: ~w~%02i:%02i~n~~n~~n~~n~~n~~n~~n~~y~  POINT: ~w~%d / %d~n~~y~LOOP: ~w~%d / %d",
			((TimeRace-(45 * 60))/60),(TimeRace-(45 * 60)) - (60 * (floatround((TimeRace-(45 * 60)))/60)), GetPVarInt(i,"RaceCount"), COUNT_RACE_POINT, GetPVarInt(i,"RaceLoop"), RaceLoop[TypeRace]);
			PlayerTextDrawSetString(i,race_text[i][0],update_race_player);

			format(update_race_player, 32, "%d", GetPVarInt(i,"max_race_count"));
			PlayerTextDrawSetString(i,race_text[i][1],update_race_player);
		}
	}
	if(TimeRace == (45 * 60) && RaceStatus)
	{
		number_player = -1;
		number_world = 5;
		foreach(i)
		{
			if(GetPVarInt(i,"RaceCar"))
			{
				new mesto = 1;
				for(new x = 0; x < FTotalRace; x++)
				{
					if(strlen(RaceWinners[x])<5)
					{
						strmid(RaceWinners[x],NamePlayer[i],0,strlen(NamePlayer[i]),23);
						break;
					}
					mesto++;
				}
				format(stringer,128,"Вы прибыли %i из %i",mesto,FTotalRace);
				SendClientMessage(i,-1,stringer);
				EndRace(i, true);

				AC_SetPlayerPos ( i , GetPVarFloat ( i , "JoinRace_X" ) , GetPVarFloat ( i , "JoinRace_Y" ) , GetPVarFloat ( i , "JoinRace_Z" ) ) ;
				SetPlayerInterior ( i , GetPVarInt ( i, "JoinRace_Interior" ) ) ;
				SetPlayerVirtualWorld ( i , GetPVarInt ( i, "JoinRace_Virtual" ) ) ;

				FreezePlayerForTime ( i, 1000 ) ;

				DeletePVar ( i, "JoinRace_X" ) ;
				DeletePVar ( i, "JoinRace_Y" ) ;
				DeletePVar ( i, "JoinRace_Z" ) ;
				DeletePVar ( i, "JoinRace_Interior" ) ;
				DeletePVar ( i, "JoinRace_Virtual" ) ;
			}
		}
		TotalRacePlayer = 0;
		TextDrawSetString(race_back_text[3], "0");
		SendClientMessageToAll(0x07f6b3FF,"Гонка окончена. Для просмотра победителей используйте: {"#cWHITE"}/racelist");
		RaceStatus = false;
		FTotalRace = 0;
	}

	if(TimeRace == (10 * 60) && !RaceStatus && TotalRaces > 0)
	{
		COUNT_RACE_POINT = 0;
		TextDrawSetString(race_back_text[3], "0");
		administrator_tp_race=false;
		number_player = -1;
		number_world = 5;
		for(new C = 0; C < 25; C++) RaceWinners[C][0] = EOS;
		TypeRace = random(TotalRaces);
		format(stringer,128,"Начало гонок через через 10 минут. Место регистрации: {"#cWHITE"}/gps > Развлечения {07f6b3}Трасса: {"#cWHITE"}%s",RaceName[TypeRace]);
		SendClientMessageToAll(0x07f6b3FF,stringer);
		return 1;
	}
	else if(TimeRace == (5 * 60) && !RaceStatus)
	{
		format(stringer,128,"Начало гонок через через 5 минут. Место регистрации: {"#cWHITE"}/gps > Развлечения {07f6b3}Трасса: {"#cWHITE"}%s",RaceName[TypeRace]);
		SendClientMessageToAll(0x07f6b3FF,stringer);
		return 1;
	}
	else if(TimeRace == (2 * 60) && !RaceStatus)
	{
		format(stringer,128,"Начало гонок через через 2 минуты. Место регистрации: {"#cWHITE"}/gps > Развлечения {07f6b3}Трасса: {"#cWHITE"}%s",RaceName[TypeRace]);
		SendClientMessageToAll(0x07f6b3FF,stringer);

		return 1;
	}
	else if(TimeRace <= 0 && !RaceStatus)
	{
		if(TotalRacePlayer == 0)
		{
			TimeRace = (50 * 60);
			SendClientMessageToAll(0x07f6b3FF,"Гонка не начата. Причина: {"#cWHITE"}Недостаточное к-во участников");
			return 1;
		}

		for(new i = 0 ; i < MAX_POINTS_RACE ; i++)
		{
			if(RaceCheckPointData[TypeRace][i][0] != 0.0 || RaceCheckPointData[TypeRace][i][1] != 0.0 || RaceCheckPointData[TypeRace][i][2] != 0.0)
			{
				COUNT_RACE_POINT++;
			}
		}

		printf  ( "COUNT_RACE_POINT : %d",COUNT_RACE_POINT ) ;

		foreach(i)
		{
			if(!GetPVarInt(i, "InRaces")) continue;

			ToggleEngine(GetPVarInt(i,"RaceCar"));

			SetPlayerRaceCheckpoint(i,0,RaceCheckPointData[TypeRace][0][0],RaceCheckPointData[TypeRace][0][1],RaceCheckPointData[TypeRace][0][2],
			 RaceCheckPointData[TypeRace][1][0],RaceCheckPointData[TypeRace][1][1],RaceCheckPointData[TypeRace][1][2],20.0);

			DisableRemoteVehicleCollisions(i, true);
			AC_SetVehicleVirtualWorld(GetPVarInt(i,"RaceCar"), 4);
			SetPlayerVirtualWorld( i , 4 );

			GameTextForPlayer(i, "~g~ GO GO GO !", 990, 0);

			SetPVarInt(i,"RaceCount",1);
		}

		RaceStatus = true;
		TimeRace = (50 * 60);
		format(stringer,128,"Гонка начата. Участников: {"#cWHITE"}%i {07f6b3}Трасса: {"#cWHITE"}%s",TotalRacePlayer, RaceName[TypeRace]);
		SendClientMessageToAll(0x07f6b3FF,stringer);
		FTotalRace = TotalRacePlayer;

		administrator_tp_race=false;
		number_player = -1;
		number_world = 5;
	}

	if(TimeRace <= (10 * 60) && !RaceStatus)
	{
		new time_race_string[32];
		format(time_race_string,32,( TimeRace <= 3) ? ("~w~%d") : ("%d SEC"), TimeRace);

		foreach(i)
		{
			if(!GetPVarInt(i, "InRaces")) continue;
			GameTextForPlayer(i, time_race_string, 990, ( TimeRace <= 3) ? 6 : 4);
		}
	}

	return 1;
}

stock EndRace(playerid, bool:spawn)
{
	if(spawn == true)
	{
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,0);
		AC_SetPlayerPos(playerid,-2168.7732,643.2266,1052.3750);
		SetPlayerFacingAngle(playerid,264.9587);
	}
	if(GetPVarInt(playerid,"RaceCar"))
	{
		DestroyVehicleOP(GetPVarInt(playerid,"RaceCar"));
		DeletePVar(playerid,"RaceCar");
	}
	//print ( "Itter_Remove(PlayerRace, playerid);" ) ;

	PlayerTextDrawHide(playerid,race_text[playerid][0]);
	PlayerTextDrawHide(playerid,race_text[playerid][1]);

	PlayerTextDrawDestroy(playerid,race_text[playerid][0]);
	PlayerTextDrawDestroy(playerid,race_text[playerid][1]);
	for ( new i = 0; i < 5; i++)
	{
		TextDrawHideForPlayer(playerid,race_back_text[i]);
	}
	DeletePVar(playerid,"InRaces");
	DeletePVar(playerid,"RaceLoop");
	return 1;
}


CreateRaceText(playerid)
{
	race_text[playerid][0] = CreatePlayerTextDraw(playerid, 549.575744, 144.083358, "~y~   TIME: ~w~02:40~n~~n~~n~~n~~n~~n~~n~~y~  POINT: ~w~0 / 48~n~~y~LOOP: ~w~0 / 1");
	PlayerTextDrawLetterSize(playerid, race_text[playerid][0], 0.355827, 1.110000);
	PlayerTextDrawAlignment(playerid, race_text[playerid][0], 2);
	PlayerTextDrawColor(playerid, race_text[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, race_text[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, race_text[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, race_text[playerid][0], 255);
	PlayerTextDrawFont(playerid, race_text[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, race_text[playerid][0], 1);
	//PlayerTextDrawSetSelectable(playerid, race_text[playerid][0], true);

	race_text[playerid][1] = CreatePlayerTextDraw(playerid, 549.575561, 166.833358, "15");
	PlayerTextDrawLetterSize(playerid, race_text[playerid][1], 0.762972, 3.991667);
	PlayerTextDrawAlignment(playerid, race_text[playerid][1], 2);
	PlayerTextDrawColor(playerid, race_text[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, race_text[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, race_text[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, race_text[playerid][1], 255);
	PlayerTextDrawFont(playerid, race_text[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, race_text[playerid][1], 1);
}

GetPatron(playerid,type)
{
	if(GetPVarInt(playerid,"mes_patron")) return 1;
	if(GetPVarInt(playerid,"get_patron")>=10000)
	{
		SendClientMessage(playerid,CINFO,"Ваш грузовик полон");
		switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
		{
			case 548:
			{
				SendInf(playerid,"Отправляйтесь на Зону 51. Для разгрузки материалов");
				SendInf(playerid,"По прибытию туда, вам будет указано что делать для разгрузки");
				SetPVarInt(playerid,"mes_patron", true);
			}
			case 433:SendInf(playerid,"Чтобы разгрузиться выберите место, используя клавишу 'Y'");
		}
	}
	else
	{
		SetPVarInt(playerid,"get_patron",GetPVarInt(playerid,"get_patron")+1000);
		GameTextForPlayer(playerid, "~y~~h~LOADING...", 2900, 6);
		if(PatronText[playerid]==Text3D:-1)
		{
			format(stringer,64,"Загружено %i/100%",(GetPVarInt(playerid,"get_patron")/100));
			PatronText[playerid]=CreateDynamic3DTextLabel(stringer,-1,0,0,0,20.0,INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			if(type==1)
				SendInf(playerid,"Загрузка патронов начата, если Вы покинете матовоз - Вы потеряете весь груз");
			else
				SendInf(playerid,"Загрузка металла начата, если Вы покинете матовоз - Вы потеряете весь груз");
		}
		else
		{
			format(stringer,64,"Загружено %i/100%",(GetPVarInt(playerid,"get_patron")/100));
			UpdateDynamic3DTextLabelText(PatronText[playerid], -1, stringer);
		}
	}

	return 1;
}


PutPatron(playerid,type)
{
	new put = GetPVarInt(playerid,"get_patron");
	if(!put)
	{
		SendErr(playerid, "Ваш грузовик пуст");
	}
	else
	{
		for(new place = 0; place < fraction_amount; place++)
		{
			if(PlayerToPoint(5.0,playerid,frac_place_put[place][0],frac_place_put[place][1],frac_place_put[place][2]))
			{
				if(type==1)
					frac_patron[place] += put;
				else
					frac_metall[place] += put;
				if(frac_patron[place]>25000)frac_patron[place]=25000;
				if(frac_metall[place]>30000)frac_metall[place]=30000;
				UpdateFractionStore(place);
				break;
			}
		}
		GameTextForPlayer(playerid, "~y~~h~PUT PATRON", 5000, 6);
		SendClientMessage(playerid,CINFO,"Вы разгрузили матовоз");
		DropPatron(playerid);
	}
}

DropPatron(playerid)
{
	DestroyDynamic3DTextLabel(PatronText[playerid]);
	PatronText[playerid] = Text3D:-1;

	DeletePVar(playerid,"get_patron");
	DeletePVar(playerid,"get_type");
}

StealMats(playerid)
{
	new String[200], f = random(5)+1, a = random(5)+1;
	if(500 < a + p_info[playerid][pPatron] && 500 < f + p_info[playerid][pMats]) return SendErr(playerid, "Не достаточно места в инвентаре");

	if(p_info[playerid][pMats] + f > 500) f = 500 - p_info[playerid][pMats];
	if(p_info[playerid][pPatron] + a > 500) a = 500 - p_info[playerid][pPatron];

	if(frac_metall[19] < f) return SendErr(playerid, "На складе не достаточно металла");
	if(frac_patron[19] < a) return SendErr(playerid, "На складе не достаточно патронов");

	format(String, 100, "~y~~h~METALL: +%d~n~~b~~h~PATRONS: +%d", f, a);
	GameTextForPlayer(playerid, String, 2500, 6);

	p_info[playerid][pMats] += f;
	p_info[playerid][pPatron] += a;


	frac_metall[19] -= f;
	frac_patron[19] -= a;

	UpdateFractionStore(19);

	format(String,100,"Металл: {"#cGREEN"}%d\n{"#cWHITE"}Патронов: {"#cGREEN"}%d",frac_metall[19],frac_patron[19]);
	UpdateDynamic3DTextLabelText(frac_text[19],CWHITE,String);
	return 1;
}

stock GetAccFreeSlot(playerid){

	for(new i = 0; i < 5; i++)
	{
		if(acc_player[playerid][acc_object_id][i] == -1) return i;
	}
	return -1;

}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(response && GetPVarInt ( playerid , "dSelectAccesories_index" ) > 0 && GetPVarInt ( playerid , "dSelectAccesories_g" ) > 0 && index >= 5 )
	{
		acc_player[playerid][acc_object_x][index - 5] = fOffsetX;
		acc_player[playerid][acc_object_y][index - 5] = fOffsetY;
		acc_player[playerid][acc_object_z][index - 5] = fOffsetZ;

		UpdateAccesories ( playerid ) ;

		SendClientMessage(playerid,-1,"Вы {33aa33}успешно{ffffff} изменили положение аксессуара своего {33aa33}персонажа{ffffff}");

		DeletePVar(playerid, "dSelectAccesories_index");
		DeletePVar(playerid, "dSelectAccesories_g");
	}
	if(response && GetPlayerInterior(playerid) == 1 && GetPVarInt(playerid, "BUSINESS_ID"))
	{
		new ac = GetAccFreeSlot(playerid);
		if ( ac != -1 && step_show_acc_box[playerid] != -1)
		{
			if ( QuestStep[2][playerid] == 3 )
			{
				ShowPlayerDialog(playerid,0000,0," ", "{AFAFAF}Вы успешно выполнили это задание, теперь отправляйтесь к Джону за наградой\n", "Ок", "");
				SendClientMessage(playerid, -1, "Вы успешно выполнили это задание, следить за квестами можно через команду {"#cRED"}( /quest )");
				QuestStep[2][playerid] = 4;
				UpdatePlayerQuestStep(playerid);
			}

			acc_player[playerid][acc_object_id][ac] = modelid;
			acc_player[playerid][acc_object_x][ac] 	= fOffsetX;
			acc_player[playerid][acc_object_y][ac] 	= fOffsetY;
			acc_player[playerid][acc_object_z][ac] 	= fOffsetZ;

			UpdateAccesories ( playerid ) ;

			new bizid = GetPVarInt(playerid, "BUSINESS_ID");
			Business[bizid][Bank] += price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]];
			AddMafiaBank(bizid, price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]);
			UpdateOtherBusiness(bizid);

			TransferMoney(playerid,p_info[playerid][pCash]-price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],"покупка аксессуаров");

			p_info[playerid][pCash] -= price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]];
			UpdateMoney(playerid);

			SetPlayerAttachedObject(playerid, ac + 5 , modelid , boneid , fOffsetX , fOffsetY , fOffsetZ , fRotX , fRotY , fRotZ ) ;
		}
		else SendClientMessage(playerid,COLOR_GREY,"Максимум можно иметь 6 аксессуаров");
	}

	return 1;
}

/*SaveAccessories(i,slot)
{
	stringer[0] = EOS;
	format(stringer,700,"UPDATE `accounts` SET `AccessoriesSlot%i` = '%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f' WHERE `tName`='%s' LIMIT 1",slot,
	GP_AO[i][slot-1][g_modelid],GP_AO[i][slot-1][g_boneid],
	GP_AO[i][slot-1][g_fOffsetX],GP_AO[i][slot-1][g_fOffsetY],GP_AO[i][slot-1][g_fOffsetZ],
	GP_AO[i][slot-1][g_fRotX],GP_AO[i][slot-1][g_fRotY],GP_AO[i][slot-1][g_fRotZ],
	GP_AO[i][slot-1][g_fScaleX],GP_AO[i][slot-1][g_fScaleY],GP_AO[i][slot-1][g_fScaleZ],NamePlayer[i]);
	mysql_pquery(connects, stringer, "","");
}*/

stock PlaySoundForPlayersInRange(soundid, Float:range, Float:x, Float:y, Float:z)
{
	foreach(i)
	{
		if(IsPlayerInRangeOfPoint(i,range,x,y,z))
		{
			PlayerPlaySound(i, soundid, x, y, z);
		}
	}
}

stock SetWBook(playerid, uninvite = false)
{
	new day,month,year,hour,minuite,second;
	r_getdate(year, month, day);
	r_gettime(hour,minuite,second);
	//FixHour(hour);
	//hour = shifthour;
	new data2[32];
	format(data2, 32, "%02d.%02d.%d в %02d:%d",day,month,year,hour,minuite);

	mysql_query_string[0] = EOS;
	if(uninvite)
	{
		format(mysql_query_string,512,"UPDATE `employment_history` SET `data_un_invite` = '%s' WHERE `name_player` = '%s' AND `rang` = '%i' AND `data_un_invite` = 'No-ne' LIMIT 1",data2,NamePlayer[playerid],p_info[playerid][tRank]);
		mysql_pquery(connects,mysql_query_string);
	}
	else
	{
		format(mysql_query_string,512,"INSERT INTO `employment_history`(`name_player`, `rang`, `organization`, `organization_position`,`data_invite`) VALUES ('%s','%i','%s','%s','%s')",NamePlayer[playerid],p_info[playerid][tRank],f_info[p_info[playerid][tMember]][f_name],	fRankName [p_info[playerid][tMember]-1][p_info[playerid][tRank]-1],data2);
		mysql_pquery(connects,mysql_query_string);
	}

	return 1;
}



stock ShiftCords(&Float:x, &Float:y,Float:a, Float:distance)
{
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}

stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
	{
		FIXES_ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z))
	{
		FIXES_ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
		return 2;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z))
	{
		FIXES_ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
		return 3;
	}
	FIXES_ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return 4;
}

/*CMD:letim(playerid,params[])
{
	if(p_info[playerid][pAdmin] >= 6)
	{
		MoveDynamicObject(Letim[0], 1341.8000488,-1590.3000488,579.0999756, 40);
		MoveDynamicObject(Letim[1], 1342.8000488,-1591.6999512,579.0000000, 40);
		SendClientMessage(playerid, 0xDEEE20FF, "Взлетаем");
	}
	return 1;
}

CMD:letimobratno(playerid,params[])
{
	if(p_info[playerid][pAdmin] >= 6)
	{
		MoveDynamicObject(Letim[0], 2058.0996094,-2588.7998047,25.5000000, 50.0);
		MoveDynamicObject(Letim[1], 2059.2998047,-2592.0996094,25.2999992, 50.0);
		SendClientMessage(playerid, 0xDEEE20FF, "Летим обратно");
	}
	return 1;
}
*/
ALT:createfamily:cfamily;
CMD:createfamily(playerid,params[])
{
	if(p_info[playerid][pFamily] > 0) return SendErr(playerid,"Вы состоите в семье");
	else if(p_info[playerid][pRouble] < 150) return SendErr(playerid,"Создание семьи стоит 150 рублей.");
	else if(TotalFamily >= MAX_FAMILY) return SendErr(playerid,"Превышен лимит семей");
	new FamilyName[31+1];

	if(sscanf(params,"s[31]",FamilyName)) return SendInf(playerid, "Используйте: /createfamily [имя семьи]");

	string_replace(FamilyName, ''', ' ') ;
	string_replace(FamilyName, '`', ' ') ;

	strmid(_family[TotalFamily][family_create_name],FamilyName,0,strlen(FamilyName),31);
	format(stringer,250,"Вы создали семью {"#cINFO"}%s{"#cWHITE"} Управление: {"#cINFO"}/family",_family[TotalFamily][family_create_name]);
	SendSucc(playerid,stringer);
	p_info[playerid][pFamily] = TotalFamily + 1;
	UpdatePlayerData(playerid,"family",p_info[playerid][pFamily]);
	strmid(_family[TotalFamily][family_owner_create_name],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),MAX_PLAYER_NAME);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "INSERT INTO `family`(`gFamilyCreateName`, `gFamilyCreateData`, `gCreateFamilyName`) VALUES ('%s',NOW(),'%s')",_family[TotalFamily][family_owner_create_name],_family[TotalFamily][family_create_name]);
	mysql_pquery(connects, mysql_query_string, "create_family", "i", TotalFamily);
	TotalFamily++;
	p_info[playerid][pRouble] -= 150;
	UpdatePlayerData(playerid, "pRouble", p_info[playerid][pRouble]);
	return 1;
}

ALT:amakefamily:makefamily;
CMD:amakefamily(playerid,params[])
{
	if(TotalFamily >= MAX_FAMILY)
		return SendErr(playerid,"Превышен лимит семей");

	if(!IsMegaAdmin(playerid))
		return SendClientMessage(playerid,COLOR_GREY,"Нет доступа!");

	new FamilyName[31+1],
		family_leader_id;

	if(sscanf(params,"us[31]", family_leader_id, FamilyName))
		return SendInf(playerid, "Используйте: /makefamily [ID лидера] [имя семьи]");

	if(family_leader_id == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, COLOR_GREY, "Игрока с указанным ID нет в сети");

	new Cache:result;

	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT family FROM accounts WHERE tName = '%s'", NamePlayer[family_leader_id]);
	result = mysql_query(connects, mysql_query_string);
	if(cache_num_rows())
	{
		new _family_id;
		cache_get_value_name_int(0, "family", _family_id);
		if(_family_id)
		{
			SendClientMessage(playerid, COLOR_GREY, "Указанный игрок уже является членом одной из семей!");
			cache_delete(result);
			return 1;
		}
	}
	cache_delete(result);



	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM family WHERE gCreateFamilyName = '%s'", FamilyName);
	result = mysql_query(connects, mysql_query_string);
	if(cache_num_rows())
	{
		SendClientMessage(playerid, COLOR_GREY, "Семья с подобным именем уже существует!");
		cache_delete(result);
		return 1;
	}
	cache_delete(result);

	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM family WHERE gFamilyCreateName = '%s'", NamePlayer[family_leader_id]);
	result = mysql_query(connects, mysql_query_string);
	if(cache_num_rows())
	{
	    new find_family = 0;
	    for(new f = 0; f < TotalFamily; f++)
		{
			if(!strcmp(_family[f][family_owner_create_name], NamePlayer[family_leader_id]))
			{
			    format(_family[f][family_owner_create_name], MAX_PLAYER_NAME, "%s", NamePlayer[family_leader_id]);
			    find_family = 1;
			    break;
			}
		}
	    if(!find_family) return SendClientMessage(playerid, COLOR_GREY, "Error: Лидерство не возвращено (Код ошибки: 1)");
	
	    new family_name_buff[50];
	    cache_get_value_name(0, "gCreateFamilyName", family_name_buff, 50);
	
		format(stringer, sizeof(stringer), "Указанный игрок уже является лидером семьи {"#cINFO"}%s{"#cWHITE"}", family_name_buff);
		SendSucc(playerid,stringer);
		SendClientMessage(playerid, COLOR_GREY, "Лидерство возвращено!");
		format(stringer, sizeof(stringer), "Администратор %s назначил Вас лидером семьи %s", NamePlayer[playerid], family_name_buff);
		SendClientMessage(family_leader_id, -1, stringer);
		
		cache_get_value_name_int(0, "ID", p_info[family_leader_id][pFamily]);
		UpdatePlayerData(playerid,"family",p_info[family_leader_id][pFamily]);
		cache_delete(result);
		return 1;
	}
	cache_delete(result);

	string_replace(FamilyName, ''', ' ') ;
	string_replace(FamilyName, '`', ' ') ;

	strmid(_family[TotalFamily][family_create_name], FamilyName, 0, strlen(FamilyName), 31);

	format(stringer, sizeof(stringer), "Вы создали семью {"#cINFO"}%s{"#cWHITE"}. Лидер: %s", _family[TotalFamily][family_create_name], NamePlayer[family_leader_id]);
	SendSucc(playerid,stringer);
	format(stringer, sizeof(stringer), "Администратор %s назначил Вас лидером семьи %s", NamePlayer[playerid], _family[TotalFamily][family_create_name]);
	SendClientMessage(family_leader_id, -1, stringer);

	p_info[family_leader_id][pFamily] = TotalFamily + 1;
	UpdatePlayerData(playerid,"family",p_info[family_leader_id][pFamily]);

	strmid(_family[TotalFamily][family_owner_create_name], NamePlayer[family_leader_id], 0, strlen(NamePlayer[family_leader_id]), MAX_PLAYER_NAME);

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "INSERT INTO `family`(`gFamilyCreateName`, `gFamilyCreateData`, `gCreateFamilyName`) VALUES ('%s',NOW(),'%s')",_family[TotalFamily][family_owner_create_name],_family[TotalFamily][family_create_name]);
	mysql_pquery(connects, mysql_query_string, "create_family", "i", TotalFamily);

	TotalFamily++;
	return 1;
}


forward create_family(familyid);
public create_family(familyid)
{
	_family[familyid][family_mysql_id]=cache_insert_id();
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "SELECT `gFamilyCreateData` FROM `family` WHERE `ID` = '%d'", _family[familyid][family_mysql_id]);
	mysql_pquery(connects, mysql_query_string, "get_date_family", "i", familyid);
	return 1;
}

forward get_date_family(familyid);
public get_date_family(familyid)
{
	cache_get_value(0,"gFamilyCreateData",_family[familyid][family_create_data],22);
	return 1;
}

CMD:finvite(playerid,params[])
{
	if(!p_info[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в семье");
	if(strcmp(_family[p_info[playerid][pFamily]-1][family_owner_create_name],NamePlayer[playerid],true)) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
	if(sscanf(params,"i",params[0])) return SCM(playerid, CWHITE, "Используйте: /finvite [id]");
	if(p_info[params[0]][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Игрок состоит в семье");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");

	format(stringer,128,"%s {"#cWHITE"}предложил вам вступить в семью",NamePlayer[playerid]);
	SendClientMessage(params[0],CYELLOW,stringer);
	SendClientMessage(params[0],-1,"Нажмите {33AA33}'Y'{FFFFFF} чтобы принять, или {FF0000}'N'{FFFFFF} для отказа");

	format(stringer,128,"Вы предложили {ffff00}%s{"#cWHITE"} вступить в вашу семью",NamePlayer[params[0]]);
	SendClientMessage(playerid,-1,stringer);

	SetPVarInt(playerid,"family_invite",params[0] + 1);
	SetPVarInt(params[0],"family_invite",playerid + 1);
	return 1;
}

CMD:funinvite(playerid,params[])
{
	if(!p_info[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в семье");
	if(strcmp(_family[p_info[playerid][pFamily]-1][family_owner_create_name],NamePlayer[playerid],true)) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец семьи");
	if(sscanf(params,"i",params[0])) return SCM(playerid, CWHITE, "Используйте: /funinvite [id]");
	if(p_info[params[0]][pFamily] != p_info[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Игрок не состоит в вашей семье");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SCM(playerid, CWHITE, "Игрок не рядом с вами!");

	format(stringer,128,"Вы исключили {ffff00}%s{"#cWHITE"} из вашей семьи", NamePlayer[params[0]]);
	SendClientMessage(playerid,-1,stringer);

	format(stringer,128,"%s{"#cWHITE"} исключил вас из семьи", NamePlayer[playerid]);
	SendClientMessage(params[0],CYELLOW,stringer);

	p_info[params[0]][pFamily] = 0;
	UpdatePlayerData(params[0],"family",p_info[params[0]][pFamily]);
	return 1;
}

CMD:fleave(playerid,params[])
{
	if(!p_info[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в семье");
	if(!strcmp(_family[p_info[playerid][pFamily]-1][family_owner_create_name],NamePlayer[playerid])) return
		SendClientMessage(playerid,COLOR_GREY,"Вы владелец семьи");
	new PlayerFamily = p_info[playerid][pFamily]-1;
	foreach(i)
	{
		if(p_info[i][pFamily] == p_info[playerid][pFamily])
		{
			format(stringer,128,"{%s}[%s]{%s} %s покинул семью по собственному желанию.", FamilyChatGlobalColor[_family[PlayerFamily][family_chat_color]],_family[PlayerFamily][family_create_name],FamilyChatColor[_family[PlayerFamily][family_chat_color]],NamePlayer[playerid]);
			SCM(i,FamilyColor[_family[p_info[i][pFamily]-1][family_chat_color]],stringer);
		}
	}

	p_info[playerid][pFamily] = 0;
	UpdatePlayerData(playerid,"family",p_info[playerid][pFamily]);
	return 1;
}

CMD:k(playerid,params[])
{
	if(p_info[playerid][pMuteTime]) return SendErr(playerid, "У вас бан чата");
	if(!p_info[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в семье");
	if(isnull(params) || strlen(params) > 100) return SCM(playerid, CWHITE, "Используйте: /k [текст]");

	new PlayerFamily = p_info[playerid][pFamily] - 1;

	foreach(i)
	{
		if(p_info[i][pFamily] == p_info[playerid][pFamily])
		{
			format(stringer,128,"{%s}[%s]{%s} %s [%i]: %s",
				FamilyChatGlobalColor[_family[PlayerFamily][family_chat_color]],_family[PlayerFamily][family_create_name],FamilyChatColor[_family[PlayerFamily][family_chat_color]], NamePlayer[playerid],playerid,params);
			SCM(i,FamilyColor[_family[PlayerFamily][family_chat_color]],stringer);
		}
	}
	return 1;
}



CMD:vfamilyfinish(playerid)
{
	new vfl = GetPVarInt(playerid, "v_family_listitem_") - 1;
	if(vfl == -1) return SCM(playerid,COLOR_GREY,"В данный момент не доступно");
	new f = p_info[playerid][pFamily]-1;
	//if(GetPlayerVehicleID(playerid) != _family[f][family_vehicle_temp_id][vfl]) return SCM(playerid,COLOR_GREY,"Вы должны быть в машине");
	new vehicleid = GetPlayerVehicleID(playerid);

	if(vehicleid == _family[f][family_vehicle_temp_id][vfl])
	{
	//	vehicleid = _family[f][family_vehicle_temp_id][vfl];
		format(stringer, 128, "Машина для вашей семьи создана. Слот: %d", vfl+1);
		SCM(playerid, COLOR_GREY, stringer);
	}
	else if(vehicleid == _family[f][family_vehicle_id][vfl])
	{
	//	vehicleid = _family[f][family_vehicle_id][vfl];
		format(stringer, 128, "Вы успешно изменили координаты для машины. Слот: %d", vfl+1);
		SCM(playerid, COLOR_GREY, stringer);
	}
	else vehicleid = -1;

	if(vehicleid == -1) return SCM(playerid,COLOR_GREY,"В этой машине не доступно");

	GetVehiclePos(vehicleid,
		_family[f][family_vehicle_pos_x][vfl],
		_family[f][family_vehicle_pos_y][vfl],
		_family[f][family_vehicle_pos_z][vfl]);
	GetVehicleZAngle(vehicleid,_family[f][family_vehicle_pos_a][vfl]);
	if(vehicleid == _family[f][family_vehicle_temp_id][vfl])
	{
		DestroyVehicleOP(vehicleid);
		_family[f][family_vehicle_temp_id][vfl] = -1;
	}
	else
	{
		DestroyVehicleOP(vehicleid);
	}
	printf ("%d", _family[f][family_vehicle_id][vfl]);
	_family[f][family_vehicle_id][vfl] =
		CreateVehicleOP(_family[f][family_vehicle_model][vfl],
						_family[f][family_vehicle_pos_x][vfl],
						_family[f][family_vehicle_pos_y][vfl],
						_family[f][family_vehicle_pos_z][vfl],
						_family[f][family_vehicle_pos_a][vfl],
						_family[f][family_vehicle_v1][vfl],
						_family[f][family_vehicle_v2][vfl],600_000);
	printf ("%d", _family[f][family_vehicle_id][vfl]);
	if ( _family[f][family_vehicle_id][vfl] != 0 ) gVehicles[_family[f][family_vehicle_id][vfl]-1][vFamily] = f;
	SaveFamily(f);
	DeletePVar(playerid, "v_family_listitem_");
	print("create car family /vfinish");
	return 1;
}
//"v_family_listitem_"
CMD:family(playerid)
{
	ShowFamilyData(playerid);
	return 1;
}

ShowFamilyData(playerid)
{
	if(!p_info[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в семье");
	new PlayerFamily = p_info[playerid][pFamily]-1;
	//
	stringer[0] = EOS;
	format(stringer,2400,"{%s}Семья:\t\t\t\t{"#cWHITE"}%s\n",FamilyChatColor[_family[PlayerFamily][family_chat_color]],_family[PlayerFamily][family_create_name]);
	format(stringer,2400,"%s{%s}Национальность:\t\t{"#cWHITE"}%s\n\n",stringer,FamilyChatColor[_family[PlayerFamily][family_chat_color]],FamilyNation[_family[PlayerFamily][family_national]]);
	strcat(stringer,"{24BF13}Члены семьи онлайн:{"#cWHITE"}\n\n");
	new count_family = 0;
	foreach(i)
	{
		if(p_info[i][pFamily] == p_info[playerid][pFamily])
		{
			format(stringer,2400,"%s{"#cINFO"}%i. {"#cWHITE"}%s\n",stringer,count_family+1,NamePlayer[i]);
			count_family++;
		}
	}
	format(stringer,2400,"%s\n\nВсего {"#cINFO"}%i{"#cWHITE"} человек",stringer,count_family);
	format(stringer,2400,"%s\n\n{"#cWHITE"}Создатель семьи:\t\t{"#cINFO"}%s",stringer,_family[PlayerFamily][family_owner_create_name]);
	format(stringer,2400,"%s\n\n{"#cWHITE"}Дата создания семьи:\t\t{"#cINFO"}%s",stringer,_family[PlayerFamily][family_create_data]);
	ShowPlayerDialog(playerid,dEditFamily,DIALOG_STYLE_MSGBOX, "{ff0000}Информация о семье", stringer, "Изменить", "Закрыть");
	return 1;
}


SavePlayerHistory(playerid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"UPDATE `accounts` SET `nick_history` = '%s,%s,%s,%s,%s,%s,%s,%s,%s,%s' WHERE `ID` = '%d' LIMIT 1",pNiksHistory[playerid][0],pNiksHistory[playerid][1],pNiksHistory[playerid][2],pNiksHistory[playerid][3],pNiksHistory[playerid][4],pNiksHistory[playerid][5],pNiksHistory[playerid][6],pNiksHistory[playerid][7],pNiksHistory[playerid][8],pNiksHistory[playerid][9],p_info[playerid][pID]);
	mysql_pquery(connects,mysql_query_string);
}

/*SaveFrac(playerid)
{
	new mysql_query_string[512];
	format(mysql_query_string,512,"UPDATE `fraction_settings` SET `FractionRank%i` = '%i,%i,%i'",p_info[playerid][tMember],gFractionRank[p_info[playerid][tMember]-1][0],gFractionRank[p_info[playerid][tMember]-1][1],gFractionRank[p_info[playerid][tMember]-1][2]);
	mysql_pquery(connects,mysql_query_string);
}*/
stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
		case 0:
		{
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
		case 1:
		{
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2:
		{
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 3:
		{
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}

SendSpyMessage(fraca, color, mes[])
{
	foreach(i)
	{
		if(GetPVarInt(i,"tipster_listen") == fraca && GetPVarInt(i,"tipster_listen") > 0)
		{
			format(stringer, 144, "[TIPSTER] %s", mes);
			SCM(i, color, stringer);
		}
	}
	return 1;
}

stock SaveUnit(member, subid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,600,"UPDATE `unit_settings` SET `unit_name` = '%s', `unit_leader` = '%s' WHERE `id` = '%d'",unit_name[member][subid],unit_leader[member][subid],unit_inc[member][subid]);
	mysql_pquery(connects,mysql_query_string);
	//print(mysql_query_string);
}

ClearAnims(playerid)
	return FIXES_ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);

ShowTestQuestion(playerid,begin,end,dialogid,q=-1)
{
	if(q == -1) q = RandomEx(begin,end);
	SetPVarInt(playerid,"pTestQNumber", q+1);
	stringer[0] = EOS;
	format(stringer,300,"%s\n1.%s\n2.%s\n3.%s\n4.%s",gExamQuestions[q],gExamAnswers[q][0],gExamAnswers[q][1],gExamAnswers[q][2],gExamAnswers[q][3]);
	ShowPlayerDialog(playerid,dialogid,2,"Школа вождения",stringer,"Далее","Отмена");
	return 1;
}

CMD:testerror(playerid)
{
	SendErr(playerid,"Вы не состоите в Police Department");
	return 1;
}


stock EndTaxi(playerid)
{
	if( T_IsValid3DTextLabel ( TaxiText[playerid] ) ) DestroyDynamic3DTextLabelEx(TaxiText[playerid]);

	SendClientMessage(playerid, 0xFFFF00AA, "Рабочий день завершен");
	format(stringer, 128, "Заработано {9ACD32}%i$", GetPVarInt(playerid,"taximoney"));
	SendClientMessage(playerid, -1, stringer);
	format(stringer, 128, "Количество пассажиров: {9ACD32}%i", GetPVarInt(playerid,"taxiplayers"));
	SendClientMessage(playerid, -1, stringer);
	if(GetPVarInt(playerid,"taximoney"))
	{
		TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt(playerid,"taximoney"),GetPVarInt(playerid,"taximoney"),"получил деньги с такси зарплата");
		p_info[playerid][pCash] += GetPVarInt(playerid,"taximoney");
		UpdateMoney(playerid);
		format(stringer, 64, "~g~~h~+%i$",GetPVarInt(playerid,"taximoney"));
		GameTextForPlayer(playerid, stringer, 500, 1);
	}
	SetVehicleToRespawn(GetPVarInt(playerid,"taxijob"));
	DeletePVar(playerid,"taxijob");
	if(GetPVarInt(playerid,"timetaxi"))
	{
		DeletePVar(playerid,"timetaxi");
	}
	DeletePVar(playerid,"taxicp");
	DeletePVar(playerid,"taximoney");
	DeletePVar(playerid,"taxiplayers");
	return 1;
}

AC_RemovePlayerFromVehicle(playerid)
{
	RemovePlayerFromVehicle(playerid);
	SetPVarInt(playerid,"removetimer", 15);
	RemovePlayerFromVehicle(playerid);

	return 1;
}



BolnicaOptimized()
{
	CreateDynamicObject(643,-2474.8000000,2313.6001000,4.5000000,0.0000000,0.0000000,0.0000000); //object(kb_chr_tbl_test) (1)
	CreateDynamicObject(1338,-2475.8000000,2309.3000000,4.7000000,0.0000000,0.0000000,260.0000000); //object(binnt08_la) (1)
	CreateDynamicObject(995,-2476.3000000,2318.8999000,4.7000000,90.0000000,0.0000000,270.0000000); //object(bar_barrier16) (1)
	CreateDynamicObject(995,-2482.0000000,2321.0000000,4.7000000,90.0000000,0.0000000,0.0000000); //object(bar_barrier16) (2)
	CreateDynamicObject(1413,-2479.3994000,2290.0000000,5.3000000,0.0000000,0.0000000,90.0000000); //object(dyn_mesh_3) (2)
	CreateDynamicObject(1412,-2499.8999000,2288.3000500,5.3000000,0.0000000,0.0000000,90.0000000); //object(dyn_mesh_2) (1)
	CreateDynamicObject(1413,-2482.0996100,2292.7002000,5.3000000,0.0000000,0.0000000,180.0000000); //object(dyn_mesh_3) (3)
	CreateDynamicObject(1412,-2523.8000000,2283.8999000,5.3000000,0.0000000,0.0000000,336.0000000); //object(dyn_mesh_2) (2)
	CreateDynamicObject(1412,-2533.3999000,2288.2000000,5.3000000,0.0000000,0.0000000,335.9950000); //object(dyn_mesh_2) (3)
	CreateDynamicObject(1412,-2528.5996000,2286.1006000,5.3000000,0.0000000,0.0000000,335.9950000); //object(dyn_mesh_2) (4)
	CreateDynamicObject(1413,-2542.3000000,2294.0000000,5.3000000,0.0000000,0.0000000,322.0000000); //object(dyn_mesh_3) (4)
	CreateDynamicObject(1358,-2481.1001000,2290.3999000,5.2000000,0.0000000,0.0000000,90.0000000); //object(cj_skip_rubbish) (1)
	CreateDynamicObject(1299,-2484.0000000,2288.1001000,4.4000000,0.0000000,0.0000000,0.0000000); //object(smashboxpile) (1)
	CreateDynamicObject(2676,-2474.6001000,2311.0000000,4.1000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (1)
	CreateDynamicObject(2671,-2478.0000000,2318.3000000,4.0000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (1)
	CreateDynamicObject(1331,-2488.3999000,2322.0000000,4.8000000,0.0000000,0.0000000,0.0000000); //object(binnt01_la) (1)
	CreateDynamicObject(1438,-2524.3000000,2294.6001000,4.0000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_2) (1)
	CreateDynamicObject(1441,-2483.5000000,2295.2000000,4.6000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_4) (1)
	CreateDynamicObject(1462,-2522.0000000,2286.8000000,4.0000000,0.0000000,0.0000000,274.0000000); //object(dyn_woodpile) (1)
	CreateDynamicObject(850,-2499.8999000,2293.5000000,4.1000000,0.0000000,0.0000000,0.0000000); //object(cj_urb_rub_1) (1)
	CreateDynamicObject(849,-2483.6001000,2290.2000000,4.3000000,0.0000000,0.0000000,0.0000000); //object(cj_urb_rub_3) (1)
	CreateDynamicObject(1431,-2502.8000000,2283.6001000,4.5000000,0.0000000,0.0000000,270.0000000); //object(dyn_box_pile) (1)
	CreateDynamicObject(1439,-2499.1001000,2289.0000000,4.0000000,0.0000000,0.0000000,90.0000000); //object(dyn_dumpster_1) (1)
	CreateDynamicObject(12957,-2524.5000000,2288.3000000,4.7000000,0.0000000,0.0000000,292.0000000); //object(sw_pickupwreck01) (1)
	CreateDynamicObject(939,-2475.1001000,2298.3999000,6.4000000,0.0000000,0.0000000,90.0000000); //object(cj_df_unit) (1)
	CreateDynamicObject(2674,-2483.8000000,2322.7000000,4.0000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (1)
	CreateDynamicObject(2673,-2488.3999000,2323.5000000,4.1000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5) (1)
}

CMD:topadvert(playerid)
{
	stringer = " \t\t\t\t"ORG"Имя игрока\t\t\t"ORG"Обработано сообщений{"#cWHITE"}\n\n";
	for(new i = 0; i < 15; i++)
	{
		if(strlen(top_advert_name[i]))
		{
			format(stringer,2000,"%s \t\t%i.\t\t%s\t\t\t%i\n",stringer,i+1,top_advert_name[i],top_advert_count[i]);
		}
		else
		{
			format(stringer,2000,"%s \t\t%i.\t\t\t-\t\t\t0\n",stringer,i+1);
		}
	}
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,""ORG"Лучшие сотрудники за этот час:",stringer,"Ок", "");
	return 1;
}

stock SetNextBusCP(playerid, stop = false)
{
	if(GetPVarInt(playerid, "busstop")) return 1;
	new route = GetPVarInt(playerid,"route")-1;
	new id_cp = GetPVarInt(playerid,"id_cp");
	//if(id_cp == 0) id_cp = 1;

	// format(stringer, 144, "ID_CP: %d, OSTANOVKA: %.2f", id_cp, gRoutePos[route][id_cp][0]);
	// SendClientMessage(playerid,-1,stringer);
	if ( route == -1 ) route = 0;
	if ( id_cp == -1 ) id_cp = 0;
	if(gRoutePos[route][id_cp][1] == 0.0 || gRoutePos[route][id_cp][2] == 0.0)
	{
		if(QuestStep[3][playerid] == 4)
		{
			quest_amount_bus[playerid]++;
			if ( quest_amount_bus[playerid] >= MAX_QUEST_BUS )
			{
				QuestStep[3][playerid] = 5;
				UpdatePlayerQuestStep(playerid);
				SendClientMessage(playerid, -1, "Вы успешно выполнили задание по квесту {"#cRED"}( /quest )");
			}
			UpdatePlayerQuestAmount(playerid);
		}
		id_cp = 0;
	}
	if ( id_cp > 0 )
	{
		if(gRoutePos[route][id_cp - 1][0] == 1.0 && !stop)
		{
			SetPVarInt(playerid, "busstop", true);
			format(stringer,200,"Автобус по маршруту %s отправляется через 10 секунд",gRouteName[route]);
			SendStreamMessage(30.0, playerid, stringer,0x44b2ffff);
			SetTimerEx("BusStop",(10 * 1000),0,"i",playerid);
			return 1;
		}
	}
	//else if ( id_cp > 0 )
	//if ( stop ) id_cp++;

	DisablePlayerRaceCheckpoint(playerid);

	SetPVarInt(playerid,"bus_salary", GetPVarInt(playerid,"bus_salary") + BUS_PRICE_CHECKPOINT);
	SetPlayerRaceCheckpoint(playerid,
		(gRoutePos[route][id_cp][0] != 1.0) ? (0) : (1),
		gRoutePos[route][id_cp][1],
		gRoutePos[route][id_cp][2],
		gRoutePos[route][id_cp][3],

		gRoutePos[route][id_cp + 1][1],
		gRoutePos[route][id_cp + 1][2],
		gRoutePos[route][id_cp + 1][3], 8.0);

	SetPVarInt(playerid,"id_cp", id_cp + 1);


	return 1;
}

forward BusStop(playerid);
public BusStop(playerid)
{
	DeletePVar(playerid, "busstop");
	SetNextBusCP(playerid, true);
	return 1;
}

stock ToggleLamp(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, (lights) ? (false) : (true), alarm, doors, bonnet, boot, objective);
	return 1;
}



stock ToggleEngine(vehicleid)
{
	if (!IsValidVehicle(vehicleid)) return 1;
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if(engine <= 0)
	{
		engine = 1;
	}
	else if (engine > 0 && gTransport[GetVehicleModel(vehicleid) - 400][trFuelable] == 1) engine = 0;

	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
	if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
	LightsObject[vehicleid][0] = -1;
	LightsObject[vehicleid][1] = -1;
	SignalTick[vehicleid][0] = 0;
	SignalTick[vehicleid][1] = -1;
	Signal[vehicleid] = 0;

	return 1;
}

stock UpdateTuning(playerid, type)
{
	mysql_query_string[0] = EOS;
	if(type == 1)
	{
		format(mysql_query_string, 512, "UPDATE `accounts` SET `cVehcom` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `ID` = '%d'",
		gPlayerTuning[playerid][0][0],gPlayerTuning[playerid][0][1],
		gPlayerTuning[playerid][0][2],
		gPlayerTuning[playerid][0][3],
		gPlayerTuning[playerid][0][4],
		gPlayerTuning[playerid][0][5],
		gPlayerTuning[playerid][0][6],
		gPlayerTuning[playerid][0][7],
		gPlayerTuning[playerid][0][8],
		gPlayerTuning[playerid][0][9],
		gPlayerTuning[playerid][0][10],
		gPlayerTuning[playerid][0][11], p_info[playerid][pID]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}
	else if(type == 2)
	{
		format(mysql_query_string, 512, "UPDATE `accounts` SET `cVehcom2` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `ID` = '%d'",
		gPlayerTuning[playerid][1][0],gPlayerTuning[playerid][1][1],
		gPlayerTuning[playerid][1][2],
		gPlayerTuning[playerid][1][3],
		gPlayerTuning[playerid][1][4],
		gPlayerTuning[playerid][1][5],
		gPlayerTuning[playerid][1][6],
		gPlayerTuning[playerid][1][7],
		gPlayerTuning[playerid][1][8],
		gPlayerTuning[playerid][1][9],
		gPlayerTuning[playerid][1][10],
		gPlayerTuning[playerid][1][11], p_info[playerid][pID]);
		mysql_pquery(connects, mysql_query_string, "", "");
	}
	return 1;
}

stock UpdateMoney(playerid)
{
	p_info[playerid][pCash] = (p_info[playerid][pCash] > MONEY_LIMIT - 1) ? (MONEY_LIMIT - 1) : (p_info[playerid][pCash] < 0) ? (0) : (p_info[playerid][pCash]);

	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,p_info[playerid][pCash]);

	UpdatePlayerData(playerid,"pCash",p_info[playerid][pCash]);
	return 1;
}

forward CheckSim(playerid);
public CheckSim(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		ShowPlayerDialog(playerid, dSim, DIALOG_STYLE_INPUT, "{"#cGREEN"}Покупка номера", "{"#cWHITE"}Используйте номер ниже\n\n{"#CLIGHTRED"}Примечание:\n\n{"#cWHITE"}- Номер должен быть 6-значным,\nнапример: 123456\n- Номер не должен начинаться с 0", "Ввод", "Отмена");
		SendClientMessage(playerid, CRED, "Данный номер занят");
		DeletePVar(playerid, "sim_number");
		return 1;
	}
	p_info[playerid][pPnumber] = GetPVarInt(playerid, "sim_number");
	format(stringer, 128, "Поздравляем! {"#cWHITE"}Вы приобрели SIM-карту с номером "ORG"%i",p_info[playerid][pPnumber]);
	SCM(playerid, CORANGE, stringer);
	UpdatePlayerData(playerid,"pPnumber",p_info[playerid][pPnumber]);
	DeletePVar(playerid, "sim_number");
	return 1;
}

UpdateHotel(floor,room)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 255, "UPDATE `hotels` SET `gRoomOwner` = '%s', `gRoomScore` = '%i' WHERE `id` = '%d'", gRoomOwner[floor][room],gRoomScore[floor][room],gRoomInc[floor][room]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}

stock GetJailWorldID(playerid)
{
	switch(p_info[playerid][tMember])
	{
		case 1: return 1;
		case 10: return 2;
		case 21: return 3;
	}
	return 1;
}

/*stock UpdateGolod(playerid)
{
	stringer[0] = EOS;
	format(stringer,300,"UPDATE `accounts` SET `pGolod` = '%.4f' WHERE `tName` = '%s' LIMIT 1",pGolod[playerid], NamePlayer[playerid]);
	mysql_pquery(connects,stringer,"","");


	PlayerTextDrawHide(playerid,golod_bar[playerid]);
	PlayerTextDrawTextSize(playerid,golod_bar[playerid], 546.0 + (58.0 / 100 * floatround(pGolod[playerid])) , 0);
	PlayerTextDrawShow(playerid,golod_bar[playerid]);

	return 1;
}*/

/*stock LoadKoleso()
{
	new Float:X[3],Float:X1[3],Float:RX[3];
	tmpobjid = CreateDynamicObject(16088,1188.729,-2011.010,148.529,0.000,0.000,0.000,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 18036, "range_main", "gun_galss1", 0);
	tmpobjid = CreateDynamicObject(16088,1188.829,-2004.569,148.529,0.000,0.000,0.000,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 18036, "range_main", "gun_galss1", 0);
	tmpobjid = CreateDynamicObject(3498,1188.750,-2007.520,156.179,0.000,90.000,90.000,0,0,-1,600.000,600.000);
	tmpobjid = CreateDynamicObject(1395,1188.689,-2017.780,100.190,0.000,0.000,0.000,-1,-1,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 6064, "law_beach1", "musk1", 0);
	tmpobjid = CreateDynamicObject(1395,1188.689,-1997.859,100.190,0.000,0.000,0.000,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 6064, "law_beach1", "musk1", 0);
	tmpobjid = CreateDynamicObject(1395,1171.020,-2017.739,89.669,0.000,20.000,0.000,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	tmpobjid = CreateDynamicObject(1395,1206.339,-2017.670,89.669,0.000,20.000,180.000,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	tmpobjid = CreateDynamicObject(1395,1206.369,-1997.839,89.669,0.000,20.000,180.000,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11252, "railbridge_sfse", "ws_goldengate5bnoalpha", 0);
	tmpobjid = CreateDynamicObject(11420,1187.459,-2007.439,67.760,0.000,0.000,-209.940,0,0,-1,600.000,600.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6064, "law_beach1", "musk1", 0);
	objectswheel[0] = CreateObject(18877,1188.719,-2007.319,156,0.000,0.000,0.0000,600.000); //Объект 0
	objectswheel[1] = CreateObject(11439,1168.420,-2007.939,71.099,20.000,0.000,90.0000,600.000);
	SetObjectMaterial(objectswheel[1], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[2] = CreateObject(11439,1208.599,-2006.930,71.040,20.000,0.000,-90.0000,600.000);
	SetObjectMaterial(objectswheel[2], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[3] = CreateObject(11439,1198.780,-2006.839,242.039,0.000,180.000,90.0000,600.000);
	SetObjectMaterial(objectswheel[3], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[4] = CreateObject(11439,1268.410,-2007.869,121.279,-60.000,0.000,90.0000,600.000);
	SetObjectMaterial(objectswheel[4], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[5] = CreateObject(11439,1271.949,-2007.880,180.720,-100.000,0.000,90.0000,600.000);
	SetObjectMaterial(objectswheel[5], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[6] = CreateObject(11439,1236.390,-2007.839,228.369,-140.000,0.000,90.0000,600.000);
	SetObjectMaterial(objectswheel[6], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[7] = CreateObject(11439,1140.800,-2006.859,228.369,-140.000,0.000,-90.0000,600.000);
	SetObjectMaterial(objectswheel[7], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[8] = CreateObject(11439,1105.280,-2006.849,180.720,-100.000,0.000,-90.0000,600.000);
	SetObjectMaterial(objectswheel[8], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[9] = CreateObject(11439,1108.670,-2006.829,121.279,-60.000,0.000,-90.0000,600.000);
	SetObjectMaterial(objectswheel[9], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[10] = CreateObject(16328,1188.550,-2007.180,82.300,0.000,0.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[10], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[11] = CreateObject(16328,1140.910,-2007.180,99.610,0.000,40.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[11], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[12] = CreateObject(16328,1116.510,-2007.180,143.070,0.000,80.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[12], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[13] = CreateObject(16328,1124.810,-2007.180,192.119,0.000,120.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[13], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[14] = CreateObject(16328,1163.189,-2007.180,224.649,0.000,160.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[14], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[15] = CreateObject(16328,1213.979,-2007.180,224.669,0.000,200.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[15], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[16] = CreateObject(16328,1252.260,-2007.180,192.440,0.000,240.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[16], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[17] = CreateObject(16328,1260.920,-2007.180,142.369,0.000,280.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[17], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[18] = CreateObject(16328,1236.069,-2007.180,99.610,0.000,320.000,0.0000,600.000);
	SetObjectMaterial(objectswheel[18], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[19] = CreateObject(5837,1188.719,-2007.430,70.7355,0.000,0.000,90.0000,600.000);//готова )))))
	objectswheel[20] = CreateObject(5837,1135.430,-2007.339,90.6250,0.000,0.000,90.0000,600.000);
	objectswheel[21] = CreateObject(5837,1106.9310, -2007.4564, 139.4740,0.000,0.000,90.0000,600.000);  //готова типо)))))
	objectswheel[22] = CreateObject(5837,1116.699,-2007.400,199.9152,0.000,0.000,90.0000,600.000); //готова ))
	objectswheel[23] = CreateObject(5837,1160.170,-2007.410,235.7991,0.000,0.000,90.0000,600.000); //готова))
	objectswheel[24] = CreateObject(5837,1216.910,-2007.339,235.7847,0.000,0.000,90.0000,600.000);//готова))
	objectswheel[25] = CreateObject(5837,1260.510,-2007.329,199.0595,0.000,0.000,90.0000,600.000); //готова TIPO))
	objectswheel[26] = CreateObject(5837,1270.8339, -2007.4019, 139.3951,0.000,0.000,90.0000,1000.000); //готова
	objectswheel[27] = CreateObject(5837,1241.930,-2007.349,89.97,0.000,0.000,90.0000,1000.000); //готова
	for(new s = 19; s < 28; s++)
	{
		SetObjectMaterial(objectswheel[s], 0, 7511, "vgntrainstat", "awning4256", 0);
		SetObjectMaterial(objectswheel[s], 1, 10023, "bigwhitesfe", "sfe_arch6", 0);
	}
	objectswheel[28] = CreateObject(3498,1188.750,-2007.520,156.179,0.000,90.000,90.0000,1000.000);
	objectswheel[29] = CreateObject(19377,1141.229,-2007.369,99.419,0.000,-50.000,0.0000,1000.000);
	SetObjectMaterial(objectswheel[29], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[30] = CreateObject(19377,1116.560,-2007.300,142.979,0.000,-10.000,0.0000,1000.000);
	SetObjectMaterial(objectswheel[30], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[31] = CreateObject(19377,1125.130,-2007.329,192.289,0.000,30.000,0.0000,1000.000);
	SetObjectMaterial(objectswheel[31], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[32] = CreateObject(19377,1163.530,-2007.300,224.559,0.000,70.000,0.0000,1000.000);
	SetObjectMaterial(objectswheel[32], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[33] = CreateObject(19377,1213.729,-2007.319,224.559,0.000,70.000,180.0000,1000.000);
	SetObjectMaterial(objectswheel[33], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[34] = CreateObject(19377,1252.140,-2007.329,192.289,0.000,30.000,180.0000,1000.000);
	SetObjectMaterial(objectswheel[34], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[35] = CreateObject(19377,1260.819,-2007.359,142.979,0.000,-10.000,180.0000,1000.000);
	SetObjectMaterial(objectswheel[35], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[36] = CreateObject(19377,1235.729,-2007.329,99.559,0.000,-50.000,180.0000,1000.000);
	SetObjectMaterial(objectswheel[36], 0, 18036, "range_main", "gun_galss1", 0);
	objectswheel[37] = CreateObject(19377,1188.479,-2007.430,82.480,0.000,90.000,180.0000,1000.000);
	SetObjectMaterial(objectswheel[37], 0, 18036, "range_main", "gun_galss1", 0);
	for(new i = 1; i < 19; i++) //38 объектов
	{
		GetObjectPos(objectswheel[0],X[0],X[1],X[2]);
		GetObjectPos(objectswheel[i],X1[0],X1[1],X1[2]);
		GetObjectRot(objectswheel[i],RX[0],RX[1],RX[2]);
		AttachObjectToObject(objectswheel[i], objectswheel[0], X1[0]-X[0], X1[1]-X[1], X1[2]-X[2], RX[0],RX[1],RX[2], 1);
	}
	for(new s = 19; s < 28; s++)
	{
		GetObjectPos(objectswheel[0],X[0],X[1],X[2]);
		GetObjectPos(objectswheel[s],X1[0],X1[1],X1[2]);
		AttachObjectToObject(objectswheel[s], objectswheel[0], X1[0]-X[0], X1[1]-X[1], X1[2]-X[2],0.0,0.0,90.0, 0);
	}
	for(new i = 28; i < 38; i++)
	{
		GetObjectPos(objectswheel[0],X[0],X[1],X[2]);
		GetObjectPos(objectswheel[i],X1[0],X1[1],X1[2]);
		GetObjectRot(objectswheel[i],RX[0],RX[1],RX[2]);
		AttachObjectToObject(objectswheel[i], objectswheel[0], X1[0]-X[0], X1[1]-X[1], X1[2]-X[2], RX[0],RX[1],RX[2], 1);
	}
	FerrisAngle += 1.0;
	if(FerrisAngle>=360.0) FerrisAngle=0.0;
	if(FerrisAlternate)FerrisAlternate=0;
	else FerrisAlternate = 1;
	new Float:FerrisWheelModZPos=0.0;
	if(FerrisAlternate)FerrisWheelModZPos=0.05;
	MoveObject(objectswheel[0],1188.719,-2007.319,156.0+FerrisWheelModZPos,FERRIS_KOLESO_SPEED,0,FerrisAngle,0);

	//------------------------------------------------------------------------------HRT
	ObjectHRT[0] = CreateObject(18981,2733.1699,2754.235,9.312,0.000,89.999,0.000,600.000); SetObjectMaterial(ObjectHRT[0], 0, 4830, "airport2", "sjmpostbar3", -1);
	ObjectHRT[1] = CreateObject(18981,2733.1699,2779.231,9.312,0.000,89.999,0.000,600.000);SetObjectMaterial(ObjectHRT[1], 0, 4830, "airport2", "sjmpostbar3", -1);
	ObjectHRT[2] = CreateObject(18981,2733.1699,2804.231,9.312,0.000,89.999,0.000,600.000);SetObjectMaterial(ObjectHRT[2], 0, 4830, "airport2", "sjmpostbar3", -1);
	ObjectHRT[3] = CreateObject(18981,2733.1699,2829.213,9.312,0.000,89.999,0.000,600.000);SetObjectMaterial(ObjectHRT[3], 0, 4830, "airport2", "sjmpostbar3", -1);
	for(new b = 1; b < 4; b++)
	{
		GetObjectPos(ObjectHRT[0],X[0],X[1],X[2]);
		GetObjectPos(ObjectHRT[b],X1[0],X1[1],X1[2]);
		AttachObjectToObject(ObjectHRT[b], ObjectHRT[0], X1[0]-X[0], X1[1]-X[1], X1[2]-X[2],0.0,89.999,00.0, 0);
	}
	return 1;
}*/

/*stock UpdateBankCheck(playerid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,500,"UPDATE `accounts` SET `gBankCheck` = '%i,%i,%i' WHERE `tName` = '%s' LIMIT 1",gBankCheck[playerid][0],gBankCheck[playerid][1],gBankCheck[playerid][2],NamePlayer[playerid]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}*/





stock SetPlayerGPS(playerid, iconid, Float:x, Float:y, Float:z, markertype, color, style)
{
	SendClientMessage(playerid,-1,"Чтобы снять метку Используйте "ORG"/unmark");
	SetPVarFloat(playerid, "GPS_X", x);
	SetPVarFloat(playerid, "GPS_Y", y);
	SetPVarFloat(playerid, "GPS_Z", z);
	CreateGPSText(playerid);
	PlayerTextDrawShow(playerid,TD_GPS[playerid]);
	SetPlayerMapIcon(playerid,iconid,x,y,z,markertype,color,style);
	return 1;
}

stock CreateGPSText(playerid)
{
	if(TD_GPS[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid,TD_GPS[playerid]);
		TD_GPS[playerid]=PlayerText:-1;
	}
	TD_GPS[playerid] = CreatePlayerTextDraw(playerid,86.208007, 319.083435, "0.0 m.");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid], 0.357700, 1.349166);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid], -626.881469, 106.166656);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid], 2);
	PlayerTextDrawColor(playerid,TD_GPS[playerid], 0xFF9900FF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid], true);
	PlayerTextDrawBoxColor(playerid,TD_GPS[playerid], 102);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid], 0x00000000);
	PlayerTextDrawFont(playerid,TD_GPS[playerid], 1);
	return 1;
}

stock TransferMoney(playerid,remain,money,action[])
{
	/*SendClientMessage(playerid,(p_info[playerid][pCash] > remain) ? (CRED) : (CGREEN),
		(p_info[playerid][pCash] > remain) ? ("-") : ("+"));*/
	r_getdate(datatime[0], datatime[1], datatime[2]);
	r_gettime(datatime[3], datatime[4], datatime[5]);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 1000, "INSERT INTO `log_transfer`(`Name`, `Cash`, `Remain`, `Money`, `Action`, `Date`) VALUES ('%s','%d','%d','%d','%s','%02d/%02d/%d в %02d:%02d:%02d')",NamePlayer[playerid],p_info[playerid][pCash],remain,money,action,datatime[0],datatime[1],datatime[2],datatime[3],datatime[4],datatime[5]);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}

stock LoadWelcomeTD()
{
	Background[0] = TextDrawCreate(320, 148.800003, "back_white_vertical");
	TextDrawAlignment(Background[0], 2);
	TextDrawLetterSize(Background[0], 0, 17.649999);
	TextDrawUseBox(Background[0], 1);
	TextDrawBoxColor(Background[0], 0xFFFFFFFF);
	TextDrawTextSize(Background[0], 0, 259);

	Background[1] = TextDrawCreate(320, 164, "back_white_gorizaontal");
	TextDrawAlignment(Background[1], 2);
	TextDrawLetterSize(Background[1], 0, 14.300001);
	TextDrawUseBox(Background[1], 1);
	TextDrawBoxColor(Background[1], 0xFFFFFFFF);
	TextDrawTextSize(Background[1], 0, 291);

	Background[2] = TextDrawCreate(164.500000, 140.500000, "ld_beat:chit");
	TextDrawFont(Background[2], 4);
	TextDrawColor(Background[2], 0xFFFFFFFF);
	TextDrawUseBox(Background[2], 1);
	TextDrawTextSize(Background[2], 48, 43);

	Background[3] = TextDrawCreate(427, 140.500000, "ld_beat:chit");
	TextDrawFont(Background[3], 4);
	TextDrawColor(Background[3], 0xFFFFFFFF);
	TextDrawUseBox(Background[3], 1);
	TextDrawTextSize(Background[3], 48, 43);

	Background[4] = TextDrawCreate(164.500000, 273.500000, "ld_beat:chit");
	TextDrawFont(Background[4], 4);
	TextDrawColor(Background[4], 0xFFFFFFFF);
	TextDrawUseBox(Background[4], 1);
	TextDrawTextSize(Background[4], 48, 43);

	Background[5] = TextDrawCreate(427, 273.500000, "ld_beat:chit");
	TextDrawFont(Background[5], 4);
	TextDrawColor(Background[5], 0xFFFFFFFF);
	TextDrawUseBox(Background[5], 1);
	TextDrawTextSize(Background[5], 48, 43);

	Background[6] = TextDrawCreate(320, 151.800003, "back_blue_vertical");
	TextDrawAlignment(Background[6], 2);
	TextDrawLetterSize(Background[6], 0, 17.049997);
	TextDrawUseBox(Background[6], 1);
	TextDrawBoxColor(Background[6], 0x7FC7FFFF);
	TextDrawTextSize(Background[6], 0, 259);

	Background[7] = TextDrawCreate(320, 164, "back_blue_gorizontal");
	TextDrawAlignment(Background[7], 2);
	TextDrawLetterSize(Background[7], 0, 14.300001);
	TextDrawUseBox(Background[7], 1);
	TextDrawBoxColor(Background[7], 0x7FC7FFFF);
	TextDrawTextSize(Background[7], 0, 286);

	Background[8] = TextDrawCreate(167, 143, "ld_beat:chit");
	TextDrawFont(Background[8], 4);
	TextDrawColor(Background[8], 0x7FC7FFFF);
	TextDrawUseBox(Background[8], 1);
	TextDrawTextSize(Background[8], 47, 42);

	Background[9] = TextDrawCreate(167, 272, "ld_beat:chit");
	TextDrawFont(Background[9], 4);
	TextDrawColor(Background[9], 0x7FC7FFFF);
	TextDrawUseBox(Background[9], 1);
	TextDrawTextSize(Background[9], 47, 42);

	Background[10] = TextDrawCreate(426, 272, "ld_beat:chit");
	TextDrawFont(Background[10], 4);
	TextDrawColor(Background[10], 0x7FC7FFFF);
	TextDrawUseBox(Background[10], 1);
	TextDrawTextSize(Background[10], 47, 42);

	Background[11] = TextDrawCreate(426, 143, "ld_beat:chit");
	TextDrawFont(Background[11], 4);
	TextDrawColor(Background[11], 0x7FC7FFFF);
	TextDrawUseBox(Background[11], 1);
	TextDrawTextSize(Background[11], 47, 42);

	Objects[0] = TextDrawCreate(170, 88, "PLANE");
	TextDrawBackgroundColor(Objects[0], 0);
	TextDrawFont(Objects[0], 5);
	TextDrawUseBox(Objects[0], 1);
	TextDrawBoxColor(Objects[0], 0);
	TextDrawTextSize(Objects[0], 115, 96);
	TextDrawSetPreviewModel(Objects[0], 1683);
	TextDrawSetPreviewRot(Objects[0], -5, 0, 110, 0.699999);

	Objects[1] = TextDrawCreate(330, 84, "PALM1");
	TextDrawBackgroundColor(Objects[1], 0);
	TextDrawFont(Objects[1], 5);
	TextDrawUseBox(Objects[1], 1);
	TextDrawBoxColor(Objects[1], 0);
	TextDrawTextSize(Objects[1], 215, 216);
	TextDrawSetPreviewModel(Objects[1], 620);
	TextDrawSetPreviewRot(Objects[1], 0, 0, 0, 1);

	Objects[2] = TextDrawCreate(330, 84, "PALM1");
	TextDrawBackgroundColor(Objects[2], 0);
	TextDrawFont(Objects[2], 5);
	TextDrawUseBox(Objects[2], 1);
	TextDrawBoxColor(Objects[2], 0);
	TextDrawTextSize(Objects[2], 215, 216);
	TextDrawSetPreviewModel(Objects[2], 620);
	TextDrawSetPreviewRot(Objects[2], 0, 0, 0, 1);

	Objects[3] = TextDrawCreate(395, 100, "PALM2");
	TextDrawBackgroundColor(Objects[3], 0);
	TextDrawFont(Objects[3], 5);
	TextDrawUseBox(Objects[3], 1);
	TextDrawBoxColor(Objects[3], 0);
	TextDrawTextSize(Objects[3], 190, 216);
	TextDrawSetPreviewModel(Objects[3], 619);
	TextDrawSetPreviewRot(Objects[3], 0, 0, 0, 1);

	Objects[4] = TextDrawCreate(395, 100, "PALM2");
	TextDrawBackgroundColor(Objects[4], 0);
	TextDrawFont(Objects[4], 5);
	TextDrawUseBox(Objects[4], 1);
	TextDrawBoxColor(Objects[4], 0);
	TextDrawTextSize(Objects[4], 190, 216);
	TextDrawSetPreviewModel(Objects[4], 619);
	TextDrawSetPreviewRot(Objects[4], 0, 0, 0, 1);

	Objects[5] = TextDrawCreate(360, 225, "ROCK");
	TextDrawBackgroundColor(Objects[5], 0);
	TextDrawFont(Objects[5], 5);
	TextDrawUseBox(Objects[5], 1);
	TextDrawBoxColor(Objects[5], 0);
	TextDrawTextSize(Objects[5], 133, 126);
	TextDrawSetPreviewModel(Objects[5], 16113);
	TextDrawSetPreviewRot(Objects[5], 0, 0, 45, 1);


	Titles[0] = TextDrawCreate(285, 228, "ld_tatt:9rasta");
	TextDrawBackgroundColor(Titles[0], 255);
	TextDrawFont(Titles[0], 4);
	TextDrawLetterSize(Titles[0], 0, 0);
	TextDrawColor(Titles[0], 2143813631);
	TextDrawSetOutline(Titles[0], 0);
	TextDrawSetProportional(Titles[0], 1);
	TextDrawSetShadow(Titles[0], 1);
	TextDrawUseBox(Titles[0], 1);
	TextDrawBoxColor(Titles[0], 0);
	TextDrawTextSize(Titles[0], 68, 61);

	Titles[1] = TextDrawCreate(320, 277, "SOME STATE");
	TextDrawAlignment(Titles[1], 2);
	TextDrawBackgroundColor(Titles[1], 255);
	TextDrawFont(Titles[1], 1);
	TextDrawLetterSize(Titles[1], 0.299999, 1.100000);
	TextDrawColor(Titles[1], 255);
	TextDrawSetOutline(Titles[1], 0);
	TextDrawSetProportional(Titles[1], 1);
	TextDrawSetShadow(Titles[1], 0);

	Titles[2] = TextDrawCreate(320, 169, "WELCOME");
	TextDrawAlignment(Titles[2], 2);
	TextDrawBackgroundColor(Titles[2], 255);
	TextDrawFont(Titles[2], 3);
	TextDrawLetterSize(Titles[2], 1.500000, 4);
	TextDrawColor(Titles[2], -1);
	TextDrawSetOutline(Titles[2], 0);
	TextDrawSetProportional(Titles[2], 1);
	TextDrawSetShadow(Titles[2], 0);

	Titles[3] = TextDrawCreate(320, 169, "WELCOME");
	TextDrawAlignment(Titles[3], 2);
	TextDrawBackgroundColor(Titles[3], 255);
	TextDrawFont(Titles[3], 3);
	TextDrawLetterSize(Titles[3], 1.500000, 4);
	TextDrawColor(Titles[3], 0);
	TextDrawSetOutline(Titles[3], 0);
	TextDrawSetProportional(Titles[3], 1);
	TextDrawSetShadow(Titles[3], 0);

	Titles[4] = TextDrawCreate(320, 203, "TO "PROJECT_NAME_SHORT);
	TextDrawAlignment(Titles[4], 2);
	TextDrawBackgroundColor(Titles[4], 255);
	TextDrawFont(Titles[4], 1);
	TextDrawLetterSize(Titles[4], 0.659999, 1.999999);
	TextDrawColor(Titles[4], -1);
	TextDrawSetOutline(Titles[4], 0);
	TextDrawSetProportional(Titles[4], 1);
	TextDrawSetShadow(Titles[4], 0);
	TextDrawUseBox(Titles[4], 1);
	TextDrawBoxColor(Titles[4], 2143813631);
	TextDrawTextSize(Titles[4], 0, 230);
	return 1;
}

stock CreatePlayerFuelDraw(playerid)
{
	PTD_Fuel[playerid][0] = CreatePlayerTextDraw(playerid,215.302551, 186.666748, "usebox");
	PlayerTextDrawLetterSize(playerid,PTD_Fuel[playerid][0], 0.000468, 0.830738);
	PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], 403.739807, -43.166656);
	PlayerTextDrawAlignment(playerid,PTD_Fuel[playerid][0], 1);
	PlayerTextDrawColor(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawUseBox(playerid,PTD_Fuel[playerid][0], true);
	PlayerTextDrawBoxColor(playerid,PTD_Fuel[playerid][0], -1167110661);
	PlayerTextDrawSetShadow(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,PTD_Fuel[playerid][0], 0x00000000);
	PlayerTextDrawFont(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Fuel[playerid][0], 1);
	//TextDrawSetSelectable(TD_Fuel[7], true);

	PTD_Fuel[playerid][1] = CreatePlayerTextDraw(playerid,320.937194, 184.333312, "76.0 FUEL");
	PlayerTextDrawLetterSize(playerid,PTD_Fuel[playerid][1], 0.339897, 1.191666);
	PlayerTextDrawAlignment(playerid,PTD_Fuel[playerid][1], 2);
	PlayerTextDrawColor(playerid,PTD_Fuel[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid,PTD_Fuel[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,PTD_Fuel[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid,PTD_Fuel[playerid][1], 0x00000000);
	PlayerTextDrawFont(playerid,PTD_Fuel[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,PTD_Fuel[playerid][1], 1);
	return 1;
}

stock GetFloatAroundFive(Float:value)
{
	switch(floatround(value))
	{
		case 0..4: return 5;
		case 6..9: return 10;
		case 11..14: return 15;
		case 16..19: return 20;
		case 21..24: return 25;
		case 26..29: return 30;
		case 31..34: return 35;
		case 36..39: return 40;
		case 41..44: return 45;
		case 46..49: return 50;
		case 51..54: return 55;
		case 56..59: return 60;
		case 61..64: return 65;
		case 66..69: return 70;
		case 71..74: return 75;
		case 76..79: return 80;
		case 81..84: return 85;
		case 86..89: return 90;
		case 91..94: return 95;
		case 96..99: return 100;
	}
	return 0;
}

stock TD_EndFuel(playerid)
{
	for(new i = 0; i < 8; i++)
	{
		TextDrawHideForPlayer(playerid,TD_Fuel[i]);
	}
	PlayerTextDrawHide(playerid,PTD_Fuel[playerid][0]);
	PlayerTextDrawHide(playerid,PTD_Fuel[playerid][1]);

	PlayerTextDrawDestroy(playerid,PTD_Fuel[playerid][0]);
	PlayerTextDrawDestroy(playerid,PTD_Fuel[playerid][1]);

	CancelSelectTextDraw(playerid);

	DeletePVar(playerid,"fuel_show");
	DeletePVar(playerid,"td_fuel");
	DeletePVar(playerid,"start_step");

	return 1;
}
forward FuelCar(playerid);
public FuelCar(playerid)
{
	new step = GetPVarInt(playerid,"td_step");

	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return 0;
	if(gVehicles[vehicleid - 1][vFuel] >= (step * 5.0))
	{
		DeletePVar(playerid,"td_step");
		ToggleEngine(vehicleid);
		return 1;
	}

	gVehicles[vehicleid - 1][vFuel] += 2.0;
	SetTimerEx("FuelCar",500,0,"i",playerid);

	return 1;
}



ALT:ans:hpm;
CMD:ans(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1 && p_info[playerid][tHelper] < 1) return 1;
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, CWHITE, "/ans [ID] [Текст]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(IsIpFound(params[1]))
	{
		SendReklama(playerid,params[1]);
		return 1;
	}
	if ( ! GetPVarInt ( params[0], "is_question" ) && p_info[playerid][pAdmin] == 0 )return SendErr ( playerid, "Игрок не задавал вопрос, либо ему уже ответили!" ) ;


	PlayerPlaySound(params[0], 4203, p_info[params[0]][pX],p_info[params[0]][pY],p_info[params[0]][pZ]);

	new color = (p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? (0x998affFF) : (0x73db84FF);

	format(stringer, 128,"Ответ от %s %s: {ffffff}%s",(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("хелпера") : ("администратора"),NamePlayer[playerid],params[1]);
	SendClientMessage(params[0],color,stringer);

	foreach(i)
	{
		if(p_info[i][pAdmin] < 1 && p_info[i][tHelper] < 1) continue;
		format(stringer, 128, "%s %s[%d] ответил %s[%d]: {"#cWHITE"}%s", (p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0) ? ("[SM]") : ("[PM]"),NamePlayer[playerid], playerid, NamePlayer[params[0]], params[0], params[1]);
		SendClientMessage(i,color,stringer);
	}
	if(p_info[playerid][tHelper] > 0 && p_info[playerid][pAdmin] == 0)
	{
		HelperStat[playerid][1] += 1;
	}
	else gAdmin[playerid][ADMIN_PM] ++;

	string_replace(params[1], ''', ' ');

	new sql_string [ 286 ] ;
	format ( sql_string, sizeof ( sql_string ), "INSERT INTO `ans_log`(`ans_name`, `ans_player_name`, `ans_text`, `ans_time`) VALUES ('%s','%s','%s',NOW())",NamePlayer [ playerid ], NamePlayer [ params [ 0 ] ], params [ 1 ] ) ;
	mysql_pquery ( connects, sql_string, "", "");
	
	DeletePVar(params[0], "pReportTime");
	return 1;
}


/*stock AddReportList(playerid,report[])
{
	for(new rep = 0; rep < MAX_REPORTS; rep++)
	{
		if(!strlen(gReport[rep][repText]))
		{
			strmid(gReport[rep][repName],NamePlayer[playerid],0,strlen(NamePlayer[playerid]),MAX_PLAYER_NAME);
			gReport[rep][repID]=playerid;
			strmid(gReport[rep][repText],report,0,strlen(report),51);

			break;
		}
	}
	return 1;
}

stock DestroyReportList(slot)
{
	new length = strlen(gReport[slot][repText]);
	if(!length) return 1;
	strdel(gReport[slot][repText],0,51);
	strdel(gReport[slot][repName],0,MAX_PLAYER_NAME);
	return 1;
}

*/

stock WriteLog(type, text[], fractionid = 0)
{
	string_replace(text, ''', ' ') ;
	new put_log_wrp [800];
	mysql_format(connects,put_log_wrp,800,"INSERT INTO `wrp_log`(`type`, `Text`, `fraction`, `date`, `time`) VALUES ('%d','%s','%d', NOW(), NOW())",type,text,fractionid);
	mysql_pquery(connects,put_log_wrp,"","");
	return 1;
}
forward OffUninviteFamily(playerid,name[]);
public OffUninviteFamily(playerid,name[])
{
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,COLOR_GREY,"Игрок не состоит в вашей семье");
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"UPDATE `accounts` SET `family` = '0' WHERE `tName` = '%s' LIMIT 1",name);
	mysql_pquery(connects,mysql_query_string);
	format(mysql_query_string,128,"Вы успешно исключили игрока {"#cINFO"}%s",name);
	SendClientMessage(playerid,-1,mysql_query_string);
	return 1;
}
forward CarryDelay(playerid);
public CarryDelay(playerid)
{
	FIXES_ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
}
stock UpdateFractionStore(fracid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "UPDATE `fractions_store` SET `frac_patron` = '%d', `frac_metall` = '%d', `frac_money` = '%d', `frac_drugs` = '%d' WHERE `id` = '%d'", frac_patron[fracid],frac_metall[fracid],frac_money[fracid],frac_drugs[fracid],fracid);
	mysql_pquery(connects,mysql_query_string);
	return 1;
}
public OnPlayerInteriorChange(playerid,newinteriorid,oldinteriorid)
{
	if(newinteriorid > 0 && oldinteriorid == 0) SetPlayerWeather(playerid, 1);
	else if(newinteriorid == 0 && oldinteriorid > 0)SetPlayerWeather(playerid,CurrentWeazer);
	/*if(PlayingPool[playerid])
	{
		PlayingPool[playerid] = 0;
		new
			count = GetPoolPlayersCount();
		if(count <= 0)
		{
			PoolStarted = 0;
			RespawnPoolBalls();
		}
	}*/
	return 1;
}

stock SetExitHousePos(playerid,houseid,spawn=false)
{
	if(houseid < 1 || houseid > MAX_HOUSES) return 0;
	new klass=gHouses[houseid][hKlass]-1;
	SetPlayerInterior(playerid,gHouseExitInterior[klass]);
	if(!spawn)
	{
		AC_SetPlayerPos(playerid,	gHouseExitInteriorPos[klass][0]+(1.5 * floatsin(-gHouseExitInteriorPos[klass][3], degrees)),
									gHouseExitInteriorPos[klass][1]+(1.5 * floatcos(-gHouseExitInteriorPos[klass][3], degrees)),gHouseExitInteriorPos[klass][2]);
		SetPlayerFacingAngle(playerid,gHouseExitInteriorPos[klass][3]);
	}
	else
	{
		AC_SetPlayerPos(playerid,gHouseSpawnInteriorPos[klass][0],gHouseSpawnInteriorPos[klass][1],gHouseSpawnInteriorPos[klass][2]);
		SetPlayerFacingAngle(playerid,gHouseSpawnInteriorPos[klass][3]);
	}
	return 1;
}

CMD:getvw(playerid)
{
	format(stringer,144,"%d",GetPlayerVirtualWorld(playerid));
	SCM(playerid,-1,stringer);
	return 1;
}
CMD:get_server_stats(playerid)
{
	format(stringer, 144, "Статических объектов: %d",TotalObject);
	SendClientMessage(playerid,-1,stringer);
	format(stringer, 144, "Видимых объектов (стример): %d",Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
	SendClientMessage(playerid,-1,stringer);
	return 1;
}
CMD:hbjectedit(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 8) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CWHITE, "Используйте: /hbedit [object slot]");
	if(IsPlayerAttachedObjectSlotUsed(playerid, params[0])) EditAttachedObject(playerid, params[0]);
	return 1;
}
ALT:hbjectedit:hbedit;
CMD:hbject(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 8) return 1;
	new giveplayerids = -1, slot = -1, objectid = -1, bone = -1, Float:oX, Float:oY, Float:oZ, Float:rX, Float:rY, Float:rZ, Float:sX, Float:sY, Float:sZ;
	if(sscanf(params, "udddfffffffff", giveplayerids, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ)) return SendClientMessage(playerid, CWHITE, "Используйте: /hbject [playerid] [слот 0-9] [id объект] [1-18]  [x][y][z]  [rx][ry][rz] [sx][sy][sz]");
	if(IsPlayerAttachedObjectSlotUsed(giveplayerids, slot)) return RemovePlayerAttachedObject(giveplayerids, slot), SendClientMessage(playerid, CWHITE, "Слот удален");
	SetPlayerAttachedObject(giveplayerids, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ);
	return 1;
}

forward ShowGunList(playerid);
public ShowGunList(playerid)
{
	stringer[0] = EOS;
	for(new i;i<=11;i++)
	{
		new gunid, ammo, storeslot;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		storeslot = GetStoreGunSlot(gunid);
		if(!gunid || !ammo || storeslot == -1) continue;

		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		format(stringer,512,"%s\n%s [{"#cGREEN"}%d{"#cWHITE"}]",stringer,gunname,ammo);
	}
	if(!strlen(stringer))
	{
		SendClientMessage(playerid,COLOR_GREY,"У Вас нет оружия");
		ShowPlayerDialog(playerid,dStore,DIALOG_STYLE_LIST,"Шкаф","Взять оружие\nПоложить оружие\nВыбрать одежду\nУдалить одежду","Далее","Отмена");
		return 1;
	}
	ShowPlayerDialog(playerid,dStorePut,2,"Шкаф",stringer,"Положить","Отмена");
	return 1;
}

stock UpdateHouseGun(houseid)
{
	new klass = gHouses[houseid][hKlass]-1;
	for(new i;i<9;i++)
	{
		if(gHouses[houseid][houseGun][i] && gHouseGunObject[houseid][i] == -1)
		{
			gHouseGunObject[houseid][i]=CreateDynamicObject(gHintGunID[i],gHouseStoreItemPos_Gun[klass][i][0],gHouseStoreItemPos_Gun[klass][i][1],gHouseStoreItemPos_Gun[klass][i][2],gHouseStoreItemPos_Gun[klass][i][3],gHouseStoreItemPos_Gun[klass][i][4],gHouseStoreItemPos_Gun[klass][i][5],houseid, -1, -1, 300.0, 300.0);
		}
		else if(!gHouses[houseid][houseGun][i] && gHouseGunObject[houseid][i] != -1)
		{
			DestroyDynamicObject(gHouseGunObject[houseid][i]);
			gHouseGunObject[houseid][i]=-1;
		}
	}
}

stock GetStoreGunSlot(gunid)
{
	switch(gunid)
	{
		case 34: return 0;
		case 33: return 1;
		case 31: return 2;
		case 30: return 3;
		case 29: return 4;
		case 25: return 5;
		case 24: return 6;
		case 23: return 7;
		case 5:  return 8;
	}
	return -1;
}

stock GetStoreGunID(slot)
{
	switch(slot)
	{
		case 0: return 34;
		case 1: return 33;
		case 2: return 31;
		case 3: return 30;
		case 4: return 29;
		case 5: return 25;
		case 6: return 24;
		case 7: return 23;
		case 8: return 5;
	}
	return -1;
}

forward SelectStoreGun(playerid);
public SelectStoreGun(playerid)
{
	pSelectStoreGun[playerid]=true;
	return 1;
}
forward SetCameraBehindPlayerDelay(playerid);
public SetCameraBehindPlayerDelay(playerid)
{
	SetCameraBehindPlayer(playerid);
}
stock UpdateHouseDress(houseid)
{
	new klass = gHouses[houseid][hKlass]-1;
	for(new cnt;cnt<3;cnt++)
	{
		if(gHouses[houseid][houseSkin][cnt] && gHouseDressObject[houseid][cnt] == INVALID_OBJECT)
		{
			gHouseDressObject[houseid][cnt]=CreateDynamicObject(gHintDressID[cnt],gHouseStoreItemPos_Dress[klass][cnt][0],gHouseStoreItemPos_Dress[klass][cnt][1],gHouseStoreItemPos_Dress[klass][cnt][2],gHouseStoreItemPos_Dress[klass][cnt][3],gHouseStoreItemPos_Dress[klass][cnt][4],gHouseStoreItemPos_Dress[klass][cnt][5],houseid+1, -1, -1, 300.0, 300.0);
		}
		else if(!gHouses[houseid][houseSkin][cnt] && gHouseDressObject[houseid][cnt] != INVALID_OBJECT)
		{
			DestroyDynamicObject(gHouseDressObject[houseid][cnt]);
			gHouseDressObject[houseid][cnt] = INVALID_OBJECT;
		}
	}
	return 1;
}
stock SaveImprove(houseid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"UPDATE `housetest` SET `improve` = '%d|%d|%d|%d' WHERE `hID` = '%d'",gHouses[houseid][houseImprove][0], gHouses[houseid][houseImprove][1], gHouses[houseid][houseImprove][2], gHouses[houseid][houseImprove][3], gHouses[houseid][hID] );
	mysql_pquery(connects,mysql_query_string);
	return 1;
}
stock SaveHouseSkin(houseid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"UPDATE `housetest` SET `skin` = '%d|%d|%d' WHERE `hID` = '%d'", gHouses[houseid][houseSkin][0], gHouses[houseid][houseSkin][1], gHouses[houseid][houseSkin][2], gHouses[houseid][hID] );
	mysql_pquery(connects,mysql_query_string);
	return 1;
}
stock SaveHouseGun(houseid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"UPDATE `housetest` SET `gun` = '%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `hID` = '%d'", gHouses[houseid][houseGun][0], gHouses[houseid][houseGun][1], gHouses[houseid][houseGun][2], gHouses[houseid][houseGun][3], gHouses[houseid][houseGun][4], gHouses[houseid][houseGun][5], gHouses[houseid][houseGun][6], gHouses[houseid][houseGun][7], gHouses[houseid][houseGun][8], gHouses[houseid][hID] );
	mysql_pquery(connects,mysql_query_string);
	return 1;
}
/*CMD:ogate(playerid, params[])
{
	if(p_info[playerid][tMember] != 25) return SCM(playerid,CBLUE,"Вам не доступна данная команда");
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, 2733.7998,2836.7629,4.6418) && GetPlayerVirtualWorld(playerid) != 0) SCM(playerid,CBLUE,"Вы далеко от панели управления");
	new Float:xone[3];
	if(IsObjectMoving(ObjectHRT[0])) return 1;
	GetObjectPos(ObjectHRT[0], xone[0],xone[1], xone[2]);
	if(xone[0] == 2733.1699) MoveObject(ObjectHRT[0], 2702.1292, 2754.2351, 9.3120, 0.9, 0.0000, 89.9990, 0.0000);
	else if(xone[0] == 2702.1292) MoveObject(ObjectHRT[0], 2733.1699,2754.2351,9.312, 0.9, 0.00, 89.999, 0.00);
	return 1;
}*/
CMD:vadtwo(playerid)
{
	new Float:xone[3];
	if(IsDynamicObjectMoving(spysk[1])) return SCM(playerid, CWHITE,"Вагончик канатки уже используется!");
	GetDynamicObjectPos(spysk[1], xone[0],xone[1], xone[2]);
	if(xone[2] == 487.04) MoveDynamicObject(spysk[1], -2532.30, -648.43, 149.72, 4.0, 0.00, 0.00, -168.00);
	else if(xone[2] == 149.7200) MoveDynamicObject(spysk[1], -2331.8899, -1554.7800, 487.0400, 4.0, 0.00, 0.00, -168.00);
	SCM(playerid, CWHITE,"Вагончик канатки поехал");
	return 1;
}
CMD:vadone(playerid)
{
	new Float:xone[3];
	if(IsDynamicObjectMoving(spysk[0])) return SCM(playerid, CWHITE,"Вагончик канатки уже используется!");
	GetDynamicObjectPos(spysk[0], xone[0],xone[1], xone[2]);
	if(xone[2] == 487.04) MoveDynamicObject(spysk[0], -2541.6201, -650.2800, 149.7200, 4.0, 0.00, 0.00, -168.00);
	else if(xone[2] == 149.7200) MoveDynamicObject(spysk[0], -2341.18, -1556.80, 487.04, 4.0, 0.00, 0.00, -168.00);
	SCM(playerid, CWHITE,"Вагончик канатки поехал");
	return 1;
}

stock Float: GetDistanceBetweenPoints(Float: p11, Float: p12, Float: p13, Float: p21, Float: p22, Float: p23)
{
	return floatsqroot(floatpower(floatabs(floatsub(p11, p21)), 2)
					+ floatpower(floatabs(floatsub(p12, p22)), 2)
					+ floatpower(floatabs(floatsub(p13, p23)), 2));
}


forward OnUpdateCheatPlayers();
public OnUpdateCheatPlayers()
{
	foreach(playerid)
	{
		if(unix - p_info[playerid][pAFK] >= 3) continue;
		if(!AC_plsp[playerid]) continue;
		if(p_info[playerid][pAdmin] > 0) continue;
		//SendClientMessage(playerid,-1,"> Доходим 0");
		//new Float:POSX,Float:POSY,Float:POSZ;
		//GetPlayerPos(playerid,POSX,POSY,POSZ);
		new PLAYERSTATE = GetPlayerState(playerid);
		new PlayerSpeed = GetSpeed(playerid);

		if(PLAYERSTATE==2)
		{
			if(PlayerSpeed-AC_UpdateSpeedPlayer[playerid]>45)
			{
				onPlayerBadSpeed(playerid,SPEED_HACK,PlayerSpeed);
			}
		}

		AC_UpdateSpeedPlayer[playerid]=PlayerSpeed;
		GetPlayerPos(playerid, TelePos[playerid][3], TelePos[playerid][4], TelePos[playerid][5]);
		if(TelePos[playerid][5] > 550.0) { TelePos[playerid][0] = 0.0; TelePos[playerid][1] = 0.0; }
		if(GetTickCount() - LagServer[playerid] > 2000) { TelePos[playerid][0] = 0.0; TelePos[playerid][1] = 0.0;}
		if(GetPlayerSurfingVehicleID(playerid) != INVALID_VEHICLE_ID) {
			TelePos[playerid][0] = 0.0;
			TelePos[playerid][1] = 0.0;
		}
		if(TelePos[playerid][0] != 0.0)
		{
			new Float:xdist = TelePos[playerid][3]-TelePos[playerid][0];
			new Float:ydist = TelePos[playerid][4]-TelePos[playerid][1];
			new Float:sqxdist = xdist*xdist;
			new Float:sqydist = ydist*ydist;
			new Float:distance = (sqxdist+sqydist)/31;
			if(p_info[playerid][pJailTime] == 0 && distance > 35 && p_info[playerid][pAbletoTP] <= unix && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
			{
				format(stringer, 144, "<Warning> %s[%d]: Возможно Airbreak (%.2f)", NamePlayer[playerid], playerid, distance);
				AdmMes(CREDD,stringer,1);
			}
		}
		if(TelePos[playerid][5] < 550.0 && TelePos[playerid][3] != 0.0)
		{
			TelePos[playerid][0] = TelePos[playerid][3];
			TelePos[playerid][1] = TelePos[playerid][4];
		}
		LagServer[playerid] = GetTickCount();

		if(AC_VehicleTeleportToMe[playerid]>=10 && PLAYERSTATE == PLAYER_STATE_ONFOOT)
		{
			//if(KickWithCheat[playerid] < 3)
			//	KickWithCheat[playerid]++;
			//else
			//{
			//format(stringer, 144, "<A> %s[%d]: Возможно телепортирует к себе машины, не факт, но проверьте! (телепортировал: ~%d раз)", NamePlayer[playerid], playerid, AC_VehicleTeleportToMe[playerid]);
			//AdmMes(CREDD,stringer,1);

			// CheatKick(playerid, 18546);

			//	KickWithCheat[playerid] = 0;
			//}
		}
		AC_VehicleTeleportToMe[playerid]=0;


		//new	INTRINDCAT=(PLAYERSTATE == 2 || PLAYERSTATE == 3) ? (200) : (120);
		//new	INSHESYAT=(PLAYERSTATE == 2 || PLAYERSTATE == 3) ? (50) : (60);
		//SendClientMessage(playerid,-1,"> Доходим 1");
		for (new i=0;i<11;i++)
		{
			if(AC_GunCheattime[playerid]>unix)
			{
				//SendClientMessage(playerid,-1,"AC_GunCheattime");
				break;
			}
			new weaponid,ammo;
			GetPlayerWeaponData(playerid,i,weaponid,ammo);

			if (GunPlayer[playerid][i][0] != weaponid && weaponid != 0 && weaponid != 2)
			{
				format(stringer, 128, "GunPlayer[%d][%d][0]: %d != %d && %d != 0", playerid,i,GunPlayer[playerid][i][0],weaponid,weaponid);
				SendClientMessage(playerid,-1,stringer);
				CheatKick(playerid,20);
				break;
			}
			if (GunPlayer[playerid][i][1] < ammo && GunPlayer[playerid][i][1] != 0)
			{
				format(stringer, 128, "GunPlayer[%d][%d][1]: %d < %d", playerid,i,GunPlayer[playerid][i][1],ammo);
				SendClientMessage(playerid,-1,stringer);
				CheatKick(playerid,21);
				break;
			}
			GunPlayer[playerid][i][1] = ammo;
			GunPlayer[playerid][i][0] = weaponid;
		}
		new Float:CurrHA[2];
		GetPlayerHealth(playerid, CurrHA[0]);
		GetPlayerArmour(playerid, CurrHA[1]);
		if (AC_Armourtime[playerid] > 0)
		{
			AC_Armourtime[playerid]--;
		}
		if(AC_Healthtime[playerid] > 0)
		{
			AC_Healthtime[playerid]--;
		}
		if(AC_Healthtime[playerid]==0 && (CurrHA[0] > ServerHP[playerid]))
		{
		   // format(stringer, 144, "HEALTH: %.2f %.2f", CurrHA[0], ServerHP[playerid]);
		   // SendClientMessage(playerid,-1,stringer);
		   // CheatKick(playerid,86216);
		   AC_SetPlayerHealth(playerid,ServerHP[playerid]);
		}
		else
		{
			ServerHP[playerid] = CurrHA[0];
			UpdateHealthBand(playerid);
		}
		if(AC_Armourtime[playerid]==0 && (CurrHA[1] > ServerArmour[playerid]))
		{
			AC_SetPlayerArmour(playerid,ServerArmour[playerid]);
			//CheatKick(playerid,86217);
		}
		else
		{
			ServerArmour[playerid] = CurrHA[1];
		}
		if(PLAYERSTATE==PLAYER_STATE_DRIVER)
		{
			new veh=GetPlayerVehicleID(playerid);
			if(VehicleEnters[playerid] != veh && GetPVarInt(playerid, "FiveSecound") <= 0) CheatKick(playerid,23);
			new Float:new_vhealth;
			GetVehicleHealth(veh,new_vhealth);

			VehHealth[veh] = new_vhealth;

			if ( VehHealth[veh] <= 250.0 && !gVehicles[veh - 1][uDamage] )
			{
				SCM(playerid,COLOR_GREY,"Машина сломана, двигатель заглушён.");
				//AC_SetVehicleHealth(veh,252.0);
				//RepairVehicle(veh);
				ToggleEngine(veh);
				gVehicles[veh - 1][uDamage] = true;
			}
		}
	}
	return 1;
}

CMD:open_elevator(playerid,params[])
{
	if(sscanf(params,"i", params[0])) return SendClientMessage(playerid,COLOR_GREY,"/openelevator [slot]");
	OpenElevator(params[0]);
	return 1;
}

CMD:close_elevator(playerid,params[])
{
	if(sscanf(params,"i", params[0])) return SendClientMessage(playerid,COLOR_GREY,"/openelevator [slot]");
	CloseElevator(params[0]);
	return 1;
}

stock OpenElevator(slot)
{
	MoveDynamicObject(ElevatorObject[slot][1], 1788.227685, -1303.171142, GetDoorsZCoordForFloor(slot), 2.5);
	MoveDynamicObject(ElevatorObject[slot][2], 1785.027685, -1303.171142, GetDoorsZCoordForFloor(slot), 2.5);
	return 1;
}

stock CloseElevator(slot)
{
	MoveDynamicObject(ElevatorObject[slot][1], 1786.627685, -1303.459472, GetDoorsZCoordForFloor(slot), 2.5);
	MoveDynamicObject(ElevatorObject[slot][2], 1786.627685, -1303.459472, GetDoorsZCoordForFloor(slot), 2.5);
	return 1;
}


public CNN_UpElevator(playerid)
{
	AC_TogglePlayerControllable(playerid,1);

	new new_floor = GetPVarInt(playerid,"new_floor");
	new last_floor = GetPVarInt(playerid,"last_floor");

	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid,X,Y,Z);

	foreach(i)
	{
		if(PlayerToPoint(3.0,i,X,Y,Z))
		{
			switch(new_floor)
			{
				case 0:AC_SetPlayerPos(i,X,Y,13.7710);
				case 1:AC_SetPlayerPos(i,X,Y,65.9313);
				case 2:AC_SetPlayerPos(i,X,Y,125.8983);
			}
			SetPlayerFacingAngle(i, 0.0);
		}
	}

	Streamer_AppendArrayData(STREAMER_TYPE_PICKUP,gPickIDD[57 + new_floor], E_STREAMER_WORLD_ID, 0);

	OpenElevator(new_floor);
	OpenElevator(last_floor);

	ElevatorStatus=false;

	DeletePVar(playerid,"new_floor");
	DeletePVar(playerid,"last_floor");
	return 1;
}

stock AddMafiaBank(bizid, sum)
{
	switch(Business[bizid][Mafia])
	{
		case 5: gBankMafia[0][bizid] += sum;
		case 6: gBankMafia[1][bizid] += sum;
		case 14: gBankMafia[2][bizid] += sum;
	}
	return 1;
}

stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
{
	return SetSpawnInfo(playerid, 255, skin, x, y, z - 0.2, a, 0, 0, 0, 0, 0, 0);
}

stock SaveBusiness(bint)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "UPDATE `business` SET `Owner`='%s', `Bank`='%d', `EnterPrice`='%d', `Lock`='%d', `Mafia`='%d' WHERE `ID` = '%d'",
	Business[bint][Owner],
	Business[bint][Bank],
	Business[bint][EnterPrice],
	Business[bint][Lock],
	Business[bint][Mafia],
	Business[bint][bMysqlID]);
	mysql_pquery(connects,mysql_query_string);
	//print(mysql_query_string);
	return 1;
}

stock UpdateOtherBusiness(bint)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 1500, "UPDATE `business` SET `bLicenses`='%d',`Bank`='%d',`bProd`='%d',`bProdOrder`='%d',`bProdOrderPrice`='%d',\
		`bAmountHour`='%d',`bCheckPower`='%d',`bHourClose`='%d',`bHourProd`='%d',`bAvtoProd`='%d',`bProdMax`='%d',`bHel`='%d' WHERE `ID` = '%d'",
	Business[bint][bLicenses],
	Business[bint][Bank],
	Business[bint][bProd],
	Business[bint][bProdOrder],
	Business[bint][bProdOrderPrice],
	Business[bint][bAmountHour],
	Business[bint][bCheckPower],
	Business[bint][bHourClose],
	Business[bint][bHourProd],
	Business[bint][bAvtoProd],
	Business[bint][bProdMax],
	Business[bint][bHel],Business[bint][bMysqlID]);
	mysql_pquery(connects,mysql_query_string);
	//print(stringer);
	return 1;
}

stock GivePlayerStats(playerid, stats, num)
{
	if(0 <= p_info[playerid][pStats][stats]+num <= 100) p_info[playerid][pStats][stats] += num;
	else return 1;
	switch(stats)
	{
		case 0:
		{
			if(num > 0)
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, CWHITE, "Вы потолстели. Ваш вес - очень маленький");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, CWHITE, "Вы потолстели. Ваш вес - маленький");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, CWHITE, "Вы потолстели. Ваш вес - нормальный");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, CWHITE, "Вы потолстели. Ваш вес - большой");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, CWHITE, "Вы потолстели. Ваш вес - очень большой");
			}
			else
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, CWHITE, "Вы похудели. Ваш вес - очень маленький");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, CWHITE, "Вы похудели. Ваш вес - маленький");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, CWHITE, "Вы похудели. Ваш вес - нормальный");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, CWHITE, "Вы похудели. Ваш вес - большой");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, CWHITE, "Вы похудели. Ваш вес - очень большой");
			}
			UpdatePlayerData(playerid, "pStats0", p_info[playerid][pStats][stats]);
		}
		case 1:
		{
			if(num > 0)
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, CWHITE, "Ваша выносливость улучшена. Ваша выносливость - очень плохая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, CWHITE, "Ваша выносливость улучшена. Ваша выносливость - плохая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, CWHITE, "Ваша выносливость улучшена. Ваша выносливость - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, CWHITE, "Ваша выносливость улучшена. Ваша выносливость - хорошая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, CWHITE, "Ваша выносливость улучшена. Ваша выносливость - очень хорошая");
			}
			else
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, CWHITE, "Ваша выносливость ухудшена. Ваша выносливость - очень плохая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, CWHITE, "Ваша выносливость ухудшена. Ваша выносливость - плохая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, CWHITE, "Ваша выносливость ухудшена. Ваша выносливость - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, CWHITE, "Ваша выносливость ухудшена. Ваша выносливость - хорошая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, CWHITE, "Ваша выносливость ухудшена. Ваша выносливость - очень хорошая");
			}
			UpdatePlayerData(playerid, "pStats1", p_info[playerid][pStats][stats]);
		}
		case 2:
		{
			if(num > 0)
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, CWHITE, "Ваша сила улучшена. Ваша сила - очень маленькая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, CWHITE, "Ваша сила улучшена. Ваша сила - маленькая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, CWHITE, "Ваша сила улучшена. Ваша сила - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, CWHITE, "Ваша сила улучшена. Ваша сила - большая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, CWHITE, "Ваша сила улучшена. Ваша сила - очень большая");
			}
			else
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, CWHITE, "Ваша сила ухудшена. Ваша сила - очень маленькая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, CWHITE, "Ваша сила ухудшена. Ваша сила - маленькая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, CWHITE, "Ваша сила ухудшена. Ваша сила - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, CWHITE, "Ваша сила ухудшена. Ваша сила - большая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, CWHITE, "Ваша сила ухудшена. Ваша сила - очень большая");
			}
			UpdatePlayerData(playerid, "pStats2", p_info[playerid][pStats][stats]);
		}
	}
	return 1;
}

stock DP_SetPlayerFightingStyle(playerid)
{
	new Style[10];
	switch(p_info[playerid][P_Style][0])
	{
		case 1000: for(new A; A != 7; A++) Style[A] = 1;
		case 800..999: for(new A; A != 6; A++) Style[A] = 1;
		case 640..799: for(new A; A != 5; A++) Style[A] = 1;
		case 480..639: for(new A; A != 4; A++) Style[A] = 1;
		case 320..479: for(new A; A != 3; A++) Style[A] = 1;
		case 160..319: for(new A; A != 2; A++) Style[A] = 1;
		case 1..159: Style[0] = 1;
	}
	switch(p_info[playerid][P_Style][1])
	{
		case 1000: for(new A = 7; A != 10; A++) Style[A] = 1;
		case 600..999: for(new A = 7; A != 9; A++) Style[A] = 1;
		case 300..599: for(new A = 7; A != 8; A++) Style[A] = 1;
		case 1..299: Style[7] = 1;
	}
	UpdatePlayerData(playerid, "P_Style0", p_info[playerid][P_Style][0]);
	UpdatePlayerData(playerid, "P_Style1", p_info[playerid][P_Style][1]);
	new ChooseStyle = random(10);
	for(new A; A != 7; A++) if(A == ChooseStyle && Style[A] == 1) return SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	for(new A = 7; A != 10; A++) if(A == ChooseStyle && Style[A] == 1) return SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	return 1;
}



public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if ( show_furn_p_td[playerid][0] )
	{
		static const str_edit[][]={"EDIT", "DELETE", "CLOSE", "SELL"};
		new
					Float:start_furn_text_x = 348.000000 - 40.000000,
					Float:start_furn_text_y = 275.000000 - 100.000000, h = p_info[playerid][pHouse];
		for(new d = 0; d < MAX_SLOT_FURNITURE; d++){
			if (playertextid == p_td_furn_object[playerid][d]){
				if ( gHouseFurniture[h][d][Furn_ObjectID] == -1 )
				{
					new Float:x, Float:y, Float:z, Float:a;
					GetPlayerPos(playerid,x,y,z);
					GetPlayerFacingAngle(playerid,a);
					x += 1.5 * floatsin(-a,degrees);
					y += 1.5 * floatcos(-a,degrees);
					if ( gHouseFurniture[h][d][Furn_Model] == 0 ) return SendClientMessage(playerid, CGRAY, "#0111") ;
					TextDrawHideForPlayer ( playerid, gFurnInfo ) ;
					for(new c = 0; c < MAX_SLOT_FURNITURE; c++)
					{
						PlayerTextDrawDestroy ( playerid, p_td_furn_object[playerid][c] ) ;
						PlayerTextDrawDestroy ( playerid, p_td_furn_text[playerid][c] ) ;

						p_td_furn_object[playerid][c] = PlayerText:-1 ;
						p_td_furn_text[playerid][c] = PlayerText:-1 ;
					}
					CancelSelectTextDraw(playerid);
					show_furn_p_td[playerid][0] = false ;
					gHouseFurniture[h][d][Furn_ObjectID]=CreateDynamicObject(gHouseFurniture[h][d][Furn_Model],x,y,z,0.0,0.0,a,h);
					EditDynamicObject(playerid,gHouseFurniture[h][d][Furn_ObjectID]);
					SetPVarInt(playerid,"j_h", d + 1);
					break;
				}
				for(new x = 0; x < 4; x++)
				{
					if(p_td_furn_select[playerid][x]!=PlayerText:-1) PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][x]);
					p_td_furn_select[playerid][x] = CreatePlayerTextDraw ( playerid, start_furn_text_x, start_furn_text_y + 1.00000, str_edit[x]);
					PlayerTextDrawLetterSize ( playerid, p_td_furn_select[playerid][x], 0.232605, 0.830000);
					PlayerTextDrawTextSize ( playerid, p_td_furn_select[playerid][x], start_furn_text_x + 45.00000, 5.00000);
					PlayerTextDrawAlignment ( playerid, p_td_furn_select[playerid][x], 1);
					PlayerTextDrawSetOutline ( playerid, p_td_furn_select[playerid][x], 1);
					PlayerTextDrawColor ( playerid, p_td_furn_select[playerid][x], -50334209);
					PlayerTextDrawUseBox ( playerid, p_td_furn_select[playerid][x], true);
					PlayerTextDrawBoxColor ( playerid, p_td_furn_select[playerid][x], 0x193441FF);
					PlayerTextDrawBackgroundColor ( playerid, p_td_furn_select[playerid][x], 0x00000000);
					PlayerTextDrawFont ( playerid, p_td_furn_select[playerid][x], 1);
					PlayerTextDrawSetSelectable ( playerid, p_td_furn_select[playerid][x], true);
					start_furn_text_y += 15.0;
					PlayerTextDrawShow(playerid,p_td_furn_select[playerid][x]);
				}
				for(new c=0;c<MAX_SLOT_FURNITURE;c++)
				{
					PlayerTextDrawHide(playerid,p_td_furn_object[playerid][c]);
					if(c!=d)PlayerTextDrawBackgroundColor ( playerid, p_td_furn_object[playerid][c], 0x91AA9DAA);
					PlayerTextDrawSetSelectable ( playerid, p_td_furn_object[playerid][c], false);
					PlayerTextDrawShow(playerid,p_td_furn_object[playerid][c]);

					PlayerTextDrawHide(playerid,p_td_furn_text[playerid][c]);
					if(c!=d)PlayerTextDrawBoxColor ( playerid, p_td_furn_text[playerid][c], 0x91AA9DAA);
					PlayerTextDrawSetSelectable ( playerid, p_td_furn_text[playerid][c], false);
					PlayerTextDrawShow(playerid,p_td_furn_text[playerid][c]);
				}
				show_furn_p_td[playerid][1]=true;
				SetPVarInt(playerid,"j_h", d + 1);
				break;
			}
			start_furn_text_x += 52.000000;
			if ( d == 5 - 1 || d == 10 - 1 || d == 15 - 1 || d == 20 - 1 ) start_furn_text_x = 348.000000 - 40.000000,start_furn_text_y += 55.000000;
		}
		for(new x = 0; x < 4; x++)
		{
			if (playertextid == p_td_furn_select[playerid][x]){
				if ( x == 0 ){
					new j = GetPVarInt(playerid, "j_h")-1;
					if(j == -1 ) return SendClientMessage(playerid, CGRAY, "#0111") ;
					if(gHouseFurniture[h][j][Furn_ObjectID] == -1 ) return SendClientMessage(playerid, CGRAY, "#0112") ;
					TextDrawHideForPlayer ( playerid, gFurnInfo ) ;
					for(new c = 0; c < MAX_SLOT_FURNITURE; c++)
					{
						PlayerTextDrawDestroy ( playerid, p_td_furn_object[playerid][c] ) ;
						PlayerTextDrawDestroy ( playerid, p_td_furn_text[playerid][c] ) ;

						p_td_furn_object[playerid][c] = PlayerText:-1 ;
						p_td_furn_text[playerid][c] = PlayerText:-1 ;
					}
					show_furn_p_td[playerid][0] = false ;
					show_furn_p_td[playerid][1] = false ;
					CancelSelectTextDraw(playerid);
					for(new c = 0; c < 4; c++)
					{
						if(p_td_furn_select[playerid][c]!=PlayerText:-1)
						{
							PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][c]);
							p_td_furn_select[playerid][c]=PlayerText:-1;
						}
					}
					EditDynamicObject(playerid,gHouseFurniture[h][j][Furn_ObjectID]);
				}
				else if ( x == 1 ){
					new j = GetPVarInt(playerid, "j_h")-1;
					if(j == -1 ) return SendClientMessage(playerid, CGRAY, "#0111") ;
					if(gHouseFurniture[h][j][Furn_ObjectID] == -1 ) return SendClientMessage(playerid, CGRAY, "#0112") ;
					DestroyDynamicObject(gHouseFurniture[h][j][Furn_ObjectID]);
					gHouseFurniture[h][j][Furn_ObjectID] = -1;
					TextDrawHideForPlayer ( playerid, gFurnInfo ) ;
					for(new c = 0; c < MAX_SLOT_FURNITURE; c++)
					{
						PlayerTextDrawDestroy ( playerid, p_td_furn_object[playerid][c] ) ;
						PlayerTextDrawDestroy ( playerid, p_td_furn_text[playerid][c] ) ;

						p_td_furn_object[playerid][c] = PlayerText:-1 ;
						p_td_furn_text[playerid][c] = PlayerText:-1 ;
					}
					show_furn_p_td[playerid][0] = false ;
					show_furn_p_td[playerid][1] = false ;
					CancelSelectTextDraw(playerid);
					for(new c = 0; c < 4; c++)
					{
						if(p_td_furn_select[playerid][c]!=PlayerText:-1)
						{
							PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][c]);
							p_td_furn_select[playerid][c]=PlayerText:-1;
						}
					}
				}
				else if ( x == 2 ){
					for(new c = 0; c < 4; c++)
					{
						if(p_td_furn_select[playerid][c]!=PlayerText:-1)
						{
							PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][c]);
							p_td_furn_select[playerid][c]=PlayerText:-1;
						}
					}
					for(new c=0;c<MAX_SLOT_FURNITURE;c++)
					{
						PlayerTextDrawHide(playerid,p_td_furn_object[playerid][c]);
						PlayerTextDrawBackgroundColor ( playerid, p_td_furn_object[playerid][c], 1046507434);
						PlayerTextDrawSetSelectable ( playerid, p_td_furn_object[playerid][c], true);
						PlayerTextDrawShow(playerid,p_td_furn_object[playerid][c]);

						PlayerTextDrawHide(playerid,p_td_furn_text[playerid][c]);
						PlayerTextDrawBoxColor ( playerid, p_td_furn_text[playerid][c], 1046507434);
						PlayerTextDrawSetSelectable ( playerid, p_td_furn_text[playerid][c], true);
						PlayerTextDrawShow(playerid,p_td_furn_text[playerid][c]);
					}
				}
				else if ( x == 3 ){
					new j = GetPVarInt(playerid, "j_h") - 1;
					if(j == -1 ) return SendClientMessage(playerid, CGRAY, "#0111") ;
					if(gHouseFurniture[h][j][Furn_ObjectID] == -1 ) return SendClientMessage(playerid, CGRAY, "#0112") ;
					p_info[playerid][pCash] += Furn_GetPrice(gHouseFurniture[h][j][Furn_Model]);
					UpdateMoney(playerid);
					format(stringer,128,"Успешно, {"#cGRAY"}вы продали мебель государству за {"#cGREEN"}%d$", Furn_GetPrice(gHouseFurniture[h][j][Furn_Model]));
					SCM(playerid,CORANGE,stringer);
					DestroyDynamicObject(gHouseFurniture[h][j][Furn_ObjectID]);
					gHouseFurniture[h][j][Furn_ObjectID] = -1;
					gHouseFurniture[h][j][Furn_Model] = 0;
					gHouseFurniture[h][j][Furn_X] = 0.0;
					gHouseFurniture[h][j][Furn_Y] = 0.0;
					gHouseFurniture[h][j][Furn_Z] = 0.0;
					gHouseFurniture[h][j][Furn_RX] = 0.0;
					gHouseFurniture[h][j][Furn_RY] = 0.0;
					gHouseFurniture[h][j][Furn_RZ] = 0.0;
					UpdateFurnitureHouse(h, j);
					TextDrawHideForPlayer ( playerid, gFurnInfo ) ;
					for(new c = 0; c < MAX_SLOT_FURNITURE; c++)
					{
						PlayerTextDrawDestroy ( playerid, p_td_furn_object[playerid][c] ) ;
						PlayerTextDrawDestroy ( playerid, p_td_furn_text[playerid][c] ) ;

						p_td_furn_object[playerid][c] = PlayerText:-1 ;
						p_td_furn_text[playerid][c] = PlayerText:-1 ;
					}
					show_furn_p_td[playerid][0] = false ;
					show_furn_p_td[playerid][1] = false ;
					CancelSelectTextDraw(playerid);
					for(new c = 0; c < 4; c++)
					{
						if(p_td_furn_select[playerid][c]!=PlayerText:-1)
						{
							PlayerTextDrawDestroy(playerid, p_td_furn_select[playerid][c]);
							p_td_furn_select[playerid][c]=PlayerText:-1;
						}
					}
				}
				break;
			}
		}
	}
	if ( playertextid == ReconPlayerText[playerid][2] && !GetPVarInt(playerid, "ReconPlayerText_2"))
	{
		for ( new s = 10; s <= 12; s++) PlayerTextDrawShow(playerid,ReconPlayerText[playerid][s]);
		SetPVarInt(playerid, "ReconPlayerText_2", true);
	}
	else if(GetPVarInt(playerid, "ReconPlayerText_2"))
	{
		for ( new s = 10; s <= 12; s++) PlayerTextDrawHide(playerid,ReconPlayerText[playerid][s]);
		DeletePVar(playerid,"ReconPlayerText_2");
	}
	else if ( playertextid == ReconPlayerText[playerid][3] && !GetPVarInt(playerid, "ReconPlayerText_3") )
	{
		for ( new s = 13; s <= 18; s++) PlayerTextDrawShow(playerid,ReconPlayerText[playerid][s]);
		SetPVarInt(playerid, "ReconPlayerText_3", true);
	}
	else if(GetPVarInt(playerid, "ReconPlayerText_3"))
	{
		for ( new s = 13; s <= 18; s++) PlayerTextDrawHide(playerid,ReconPlayerText[playerid][s]);
		DeletePVar(playerid,"ReconPlayerText_3");
	}
	else if ( playertextid == ReconPlayerText[playerid][4] && !GetPVarInt(playerid, "ReconPlayerText_4"))
	{
		for ( new s = 19; s <= 20; s++) PlayerTextDrawShow(playerid,ReconPlayerText[playerid][s]);
		SetPVarInt(playerid, "ReconPlayerText_4", true);
	}
	else if(GetPVarInt(playerid, "ReconPlayerText_4"))
	{
		for ( new s = 19; s <= 20; s++) PlayerTextDrawHide(playerid,ReconPlayerText[playerid][s]);
		DeletePVar(playerid,"ReconPlayerText_4");
	}
	else if ( playertextid == ReconPlayerText[playerid][6] && !GetPVarInt(playerid, "ReconPlayerText_6") )
	{
		for ( new s = 21; s <= 23; s++) PlayerTextDrawShow(playerid,ReconPlayerText[playerid][s]);
		SetPVarInt(playerid, "ReconPlayerText_6", true);
	}
	else if(GetPVarInt(playerid, "ReconPlayerText_6"))
	{
		for ( new s = 21; s <= 23; s++) PlayerTextDrawHide(playerid,ReconPlayerText[playerid][s]);
		DeletePVar(playerid,"ReconPlayerText_6");
	}
	else if ( playertextid == ReconPlayerText[playerid][7] && !GetPVarInt(playerid, "ReconPlayerText_7") )
	{
		for ( new s = 24; s <= 26; s++) PlayerTextDrawShow(playerid,ReconPlayerText[playerid][s]);
		SetPVarInt(playerid, "ReconPlayerText_7", true);
	}
	else if(GetPVarInt(playerid, "ReconPlayerText_7"))
	{
		for ( new s = 24; s <= 26; s++) PlayerTextDrawHide(playerid,ReconPlayerText[playerid][s]);
		DeletePVar(playerid,"ReconPlayerText_7");
	}

	///
	if ( playertextid == ReconPlayerText[playerid][1] )
	{
		///SendClientMessage(playerid,-1,"Change");
		ShowPlayerDialog(playerid,232,DIALOG_STYLE_INPUT,"Change","'	Используйте ид игрока	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][10] )
	{
		///SendClientMessage(playerid,-1,"Check GM");
		SendInf(playerid, "На сервере стоит автоматическая система дамага. Следите за показателями (HP) & (ARMOUR)");
	}
	else if ( playertextid == ReconPlayerText[playerid][11] )
	{
		///SendClientMessage(playerid,-1,"Check GM 2");
		SendInf(playerid, "На сервере стоит автоматическая система дамага. Следите за показателями (HP) & (ARMOUR)");
	}
	else if ( playertextid == ReconPlayerText[playerid][12] )
	{
		///SendClientMessage(playerid,-1,"Check GM Car");
		SendInf(playerid, "На сервере стоит автоматическая система дамага. Следите за показателями (HP) & (ARMOUR)");
	}
	else if ( playertextid == ReconPlayerText[playerid][13] )
	{
		///SendClientMessage(playerid,-1,"Reset_Shot");
		new rid=GetPVarInt(playerid,"r_specid");
		DeletePVar(rid,"r_shot_hit");
		DeletePVar(rid,"r_shot");
		DeletePVar(rid,"r_shot_10");
		DeletePVar(rid,"r_shot_hit_10");
		SendSucc(playerid, "Все выстрелы и попадания обнулены");
	}
	else if ( playertextid == ReconPlayerText[playerid][14] )
	{
		///SendClientMessage(playerid,-1,"Mute");
		ReturnRecon(playerid);
		if(p_info[GetPVarInt(playerid,"r_specid")][pMuteTime] > 0) return format(stringer,10,"%d",GetPVarInt(playerid,"r_specid")),pc_cmd_unmute(playerid,stringer);
		ShowPlayerDialog(playerid,240,DIALOG_STYLE_INPUT,"Mute","'	Используйте время и причину мута (через запятую)	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][15] )
	{
		///SendClientMessage(playerid,-1,"Slap");
		pc_cmd_slap(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
	}
	else if ( playertextid == ReconPlayerText[playerid][16] )
	{
		///SendClientMessage(playerid,-1,"Prison");
		ShowPlayerDialog(playerid,239,DIALOG_STYLE_INPUT,"Тюрьма","'	Используйте время и причину присона (через запятую)	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][17] )
	{
		///SendClientMessage(playerid,-1,"Freeze");
		pc_cmd_freeze(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
	}
	else if ( playertextid == ReconPlayerText[playerid][18] )
	{
		///SendClientMessage(playerid,-1,"UnFreeze");
		pc_cmd_unfreeze(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
	}
	else if ( playertextid == ReconPlayerText[playerid][19] )
	{
		///SendClientMessage(playerid,-1,"Kick");
		ShowPlayerDialog(playerid,234,DIALOG_STYLE_INPUT,"Kick","'	Используйте причину кика	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][20] )
	{
		///SendClientMessage(playerid,-1,"SKick");
		ShowPlayerDialog(playerid,234,DIALOG_STYLE_INPUT,"Kick","'	Используйте причину кика	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][5] )
	{
		///SendClientMessage(playerid,-1,"Warn");
		ShowPlayerDialog(playerid,233,DIALOG_STYLE_INPUT,"Warn","'	Используйте дни и причину (через запятую)	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][21] )
	{
		///SendClientMessage(playerid,-1,"Ban");
		ShowPlayerDialog(playerid,235,DIALOG_STYLE_INPUT,"Ban","'	Используйте дни и причину бана (через запятую)	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][22] )
	{
		///SendClientMessage(playerid,-1,"SBan");
		ShowPlayerDialog(playerid,236,DIALOG_STYLE_INPUT,"SBan","'	Используйте дни и причину бана (через запятую)	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][23] )
	{
		///SendClientMessage(playerid,-1,"IBan");
		ShowPlayerDialog(playerid,237,DIALOG_STYLE_INPUT,"IBan","'	Используйте причину бана	'","Далее","Отмена");
	}
	else if ( playertextid == ReconPlayerText[playerid][24] )
	{
		///SendClientMessage(playerid,-1,"Stats");
		pc_cmd_getstats(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
	}
	else if ( playertextid == ReconPlayerText[playerid][25] )
	{
		///SendClientMessage(playerid,-1,"IWep");
		pc_cmd_iwep(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
	}
	else if ( playertextid == ReconPlayerText[playerid][26] )
	{
		///SendClientMessage(playerid,-1,"GetIP");
		pc_cmd_getip(playerid,IntToStr(GetPVarInt(playerid,"r_specid")));
	}
	else if ( playertextid == ReconPlayerText[playerid][8] )
	{
		if(GetPlayerState(GetPVarInt(playerid,"r_specid"))==2 || GetPlayerState(GetPVarInt(playerid,"r_specid"))==3)
		{
			PlayerSpectateVehicle(playerid, GetPlayerVehicleID(GetPVarInt(playerid,"r_specid")), SPECTATE_MODE_NORMAL);
		}
		else
		{
			PlayerSpectatePlayer(playerid, GetPVarInt(playerid,"r_specid"), SPECTATE_MODE_NORMAL);
		}
		SetPlayerInterior(playerid,GetPlayerInterior(GetPVarInt(playerid,"r_specid")));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(GetPVarInt(playerid,"r_specid")));
		///SendClientMessage(playerid,-1,"Refresh");
	}
	else if ( playertextid == ReconPlayerText[playerid][9] )
	{
		///SendClientMessage(playerid,-1,"Exit");
		TogglePlayerSpectating(playerid,0);
		GameTextForPlayer(playerid,"~w~RECON ~r~OFF",3000,4);
	}
	if(passport_show[playerid])
	{
		if(playertextid==passport_player[playerid][7])
		{
			CancelSelectTextDraw(playerid);
			for(new i = 0; i < 9; i++)
			{
				if(passport_player[playerid][i] != PlayerText:-1)
				{
					PlayerTextDrawDestroy(playerid, passport_player[playerid][i]);
					passport_player[playerid][i] = PlayerText:-1;
				}
			}
			SendBotMessage(playerid, "Поздравляю с гражданством, отправляйся к Джону за новым заданием.");
			InterpolateCameraPosToPoint(playerid, 2296.5471,-1991.7371,-34.1641+0.4,88.5853);
			AC_SetPlayerPos(playerid, 2299.6716,-1991.3649,-34.1641);
			SetTimerEx("SetCameraBehindPlayerDelay",3500,0,"i",playerid);
			passport_show[playerid]=false;
			SetPlayerGPS(playerid,80,404.27, -1545.95, 32.27,19,-1,MAPICON_GLOBAL_CHECKPOINT);
			//QuestStep[0][playerid]=3;
			UpdatePlayerQuestStep(playerid);
		}
	}
	return 1;
}


CMD:deletemap(playerid)
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	if(!count_object_load) return 1;
	for(new i = 0; i < count_object_load; i++)
	{
		DestroyDynamicObject(load_map_id[i]);
	}
	count_object_load = 0;
	SendSucc(playerid, "Маппинг удалён");
	return 1;
}

CMD:loadmap(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(!IsAFullDostup(playerid)) return 1;
	if(count_object_load) return SendErr(playerid, "Маппинг уже загружен");
	if(isnull(params)) return SendInf(playerid, "/loadmap [название карты]");
	new load_mapp_str[64];
	format(load_mapp_str, 64, PROJECT_MAPLOAD_URL"/parser/%s.txt",params);
	HTTP(playerid, HTTP_POST, load_mapp_str, "", "LoadMap");
	return 1;
}

forward LoadMap(index, response_code, data[]);
public LoadMap(index, response_code, data[])
{
	if(response_code != 200) return 1;

	print ( " LoadMap " ) ;

	new size_map = strlen(data);
	for(new i = 0; i < size_map; i++)
	{
		if(data[i] == '|')
		{
			count_object_load++;
			if(count_object_load >= 200) return SendClientMessage(index,-1,"Объектов больше 200");
		}
	}
	new modelid, Float:pos[6];
	new pos1 = strfind(data, "|");
	count_object_load = 0;
	print ( "while pos1" ) ;
	while(pos1 != -1)
	{
		sscanf(data, "p<,>iffffff", modelid,pos[0],pos[1],pos[2],pos[3],pos[4],pos[5]);
		load_map_id[count_object_load] = CreateDynamicObject(modelid,pos[0],pos[1],pos[2],pos[3],pos[4],pos[5]);
		strdel(data, 0, pos1+1);
		pos1 = strfind(data, "|");
		count_object_load++;
	}
	SendSucc(index, "Маппинг успешно загружен");
	new Float:X, Float:Y, Float:Z;
	GetDynamicObjectPos(load_map_id[0], X, Y, Z);
	AC_SetPlayerPos(index, X, Y, Z);
	return 1;
}

/*forward FireTimer(playerid, i);
public FireTimer(playerid, i)
{
	if(GetPVarInt(playerid, "FireSystem") >= 1)
	{
		if(FireSystem[i][fHealth] <= 590)
		{
			FireSystem[i][fHealth] += 10;
			foreach(new j:Player)
			{
				if(IsPlayerInDynamicArea(j, FireSystem[i][fZone]))
				{
					if(GetPlayerSkin(j) == 277 || GetPlayerSkin(j) == 278 || GetPlayerSkin(j) == 279)
					{
						SetPlayerProgressBarValue(j, universalbar[j], FireSystem[i][fHealth]);
					}
				}
			}
		}
		else
		{
			foreach(new j:Player)
			{
				if(IsPlayerInDynamicArea(j, FireSystem[i][fZone]))
				{
					if(GetPlayerSkin(j) == 277 || GetPlayerSkin(j) == 278 || GetPlayerSkin(j) == 279)
					{
						if(GetPVarInt(j, "FireTimerr"))
						{
							KillTimer(GetPVarInt(j,"FireTimerr"));
							DeletePVar(j,"FireTimerr");
						}
						if(GetPVarInt(j, "FireBar") >= 1) {
							HidePlayerProgressBar(j, universalbar[j]);
							DestroyPlayerProgressBar(j, universalbar[j]);
							SetPVarInt(j, "FireBar", 0);
						}
					}
				}
			}
		}
	}
	else KillTimer(GetPVarInt(playerid,"FireTimerr"));
	return 1;
}*/

/*Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ, Float:ObjX, Float:ObjY, Float:ObjZ, Float:FrX, Float:FrY, Float:FrZ) {

	new Float:TGTDistance;

	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));

	new Float:tmpX, Float:tmpY, Float:tmpZ;

	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;

	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}*/

stock Float:GetPointAngleToPoint(Float:x2, Float:y2, Float:X, Float:Y) {

	new Float:DX, Float:DY;
	new Float:angle;

	DX = floatabs(floatsub(x2,X));
	DY = floatabs(floatsub(y2,Y));

	if (DY == 0.0 || DX == 0.0) {
		if(DY == 0 && DX > 0) angle = 0.0;
		else if(DY == 0 && DX < 0) angle = 180.0;
		else if(DY > 0 && DX == 0) angle = 90.0;
		else if(DY < 0 && DX == 0) angle = 270.0;
		else if(DY == 0 && DX == 0) angle = 0.0;
	}
	else {
		angle = atan(DX/DY);
		if(X > x2 && Y <= y2) angle += 90.0;
		else if(X <= x2 && Y < y2) angle = floatsub(90.0, angle);
		else if(X < x2 && Y >= y2) angle -= 90.0;
		else if(X >= x2 && Y > y2) angle = floatsub(270.0, angle);
	}
	return floatadd(angle, 90.0);
}

stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance) {
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}

stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius) {
	new Float:camera_x,Float:camera_y,Float:camera_z,Float:vector_x,Float:vector_y,Float:vector_z;
	GetPlayerCameraPos(playerid, camera_x, camera_y, camera_z);
	GetPlayerCameraFrontVector(playerid, vector_x, vector_y, vector_z);

	new Float:vertical, Float:horizontal;

	switch (GetPlayerWeapon(playerid))
	{
		case 34,35,36:
		{
			if (DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, vector_x, vector_y, vector_z) < radius) return true;
			return false;
		}
		case 30,31:
		{
			vertical = 4.0;
			horizontal = -1.6;
		}
		case 33:
		{
			vertical = 2.7;
			horizontal = -1.0;
		}
		default:
		{
			vertical = 6.0;
			horizontal = -2.2;
		}
	}

	new Float:angle = GetPointAngleToPoint(0, 0, floatsqroot(vector_x*vector_x+vector_y*vector_y), vector_z) - 270.0;
	new Float:resize_x, Float:resize_y, Float:resize_z = floatsin(angle+vertical, degrees);
	GetXYInFrontOfPoint(resize_x, resize_y, GetPointAngleToPoint(0, 0, vector_x, vector_y)+horizontal, floatcos(angle+vertical, degrees));

	if(DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, resize_x, resize_y, resize_z) < radius) return true;
	return false;
}

/*stock CallFire()
{
	switch(random(5))
	{
		case 0:
		{
			TOTALFIRE[0] = 0;
			TOTALFIRE[1] = 10;
		}
		case 1:
		{
			TOTALFIRE[0] = 10;
			TOTALFIRE[1] = 18;
		}
		case 2:
		{
			TOTALFIRE[0] = 18;
			TOTALFIRE[1] = 28;
		}
		case 3:
		{
			TOTALFIRE[0] = 28;
			TOTALFIRE[1] = 36;
		}
		case 4:
		{
			TOTALFIRE[0] = 36;
			TOTALFIRE[1] = 43;
		}
	}
	/.*for(new i = TOTALFIRE[0]; i <= TOTALFIRE[1]; i++)
	{
		FireSystem[i][fObject] = CreateDynamicObject(18691, FireSystem[i][fPos][0], FireSystem[i][fPos][1], FireSystem[i][fPos][2], FireSystem[i][fPos][3], FireSystem[i][fPos][4], FireSystem[i][fPos][5]);
		FireSystem[i][fZone] = CreateDynamicSphere(FireSystem[i][fPos][0], FireSystem[i][fPos][1], FireSystem[i][fPos][2], 3.0);
		FireSystem[i][fStatus] = true;
		FireSystem[i][fHealth] = 0;
	}*./

	new Float: p[3], rtext[32];
	foreach(i)
	{
		if(p_info[i][tMember] == 4)
		{
			GetPlayerPos(i, p[0], p[1], p[2]);
			if(p[0] > -1080 && p[1] < 490) rtext = "Лос Сантос";
			else if(p[0] > -1080 && p[1] > 490) rtext = "Лас Вентурас";
			else if(p[0] < -1080) rtext = "Сан Фиерро";

			format(stringer, 144,"[R] Диспетчер: Всем пожарным частям, вызов из %s, причина вызова: Пожар",rtext);
			SendClientMessage(i, 0x93FF4CFF, stringer);
			SetPlayerCheckpoint(i, FireSystem[TOTALFIRE[0]][fPos][0], FireSystem[TOTALFIRE[0]][fPos][1], FireSystem[TOTALFIRE[0]][fPos][2], 5.0);
		}
	}
	SetTimer("DeleteObjectTwo",1800000,false);
	return 1;
}*/

/*forward DeleteObjectTwo();
public DeleteObjectTwo()
{
	for(new i; i < 44; i++)
	{
		if(FireSystem[i][fObject] != INVALID_OBJECT)
		{
			DestroyDynamicObject(FireSystem[i][fObject]);
			FireSystem[i][fObject]=INVALID_OBJECT;
		}
		if(IsValidDynamicArea(FireSystem[i][fZone])) DestroyDynamicArea(FireSystem[i][fZone]);
		if(FireSystem[i][fStatus]) FireSystem[i][fStatus] = false;
	}
	print ( "delete fObject 2" ) ;
	return 1;
}*/

forward BackupClear(playerid, calledbytimer);
public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid) || p_info[playerid][tMember] == 2)
		{
			if(GetPVarInt(playerid, "BKONFORPLAYER") == 1)
			{
				foreach(i) if(p_info[i][tMember] == 1 || p_info[i][tMember] == 2) SetPlayerMarkerForPlayer(i, playerid, fraction_color[p_info [ playerid ] [ tMember ]]);
				if(calledbytimer != 1) SendSucc(playerid, "Ваш запрос о поддержке был отменён");
				else SendSucc(playerid, "Ваш запрос о поддержке автоматически отменён");
				SetPVarInt(playerid, "BKONFORPLAYER", 0);
			}
			else if(calledbytimer != 1) SendErr(playerid, "Вы не запрашивали поддержку");
		}
		else if(calledbytimer != 1) SendErr(playerid, "Вы не состоите в полиции");
	}
	return 1;
}



forward AnimationWalk(playerid);
public AnimationWalk(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if(p_info[playerid][pSetWalk] != 0)
	{
		if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
			KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
			FIXES_ApplyAnimation(playerid,"PED",Anims[p_info[playerid][pSetWalk] - 1],4.1,1,1,1,1,1);
			SetPVarInt(playerid,"playerWalkTimer",_:SetTimerEx("AnimationWalk",200,0,"d",playerid));
		}
		else
		{
			FIXES_ApplyAnimation(playerid,"PED",Anims[p_info[playerid][pSetWalk] - 1],4.0,0,0,0,0,1);
			KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
		}
	}
	return 1;
}

IsVehicleAir(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return true;
	}
	return false;
}

IsVehicleMoto(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return true;
	}
	return false;
}

IsVehicleBoats(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return true;
	}
	return false;
}

IsVehicleBikes(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return true;
	}
	return false;
}
forward family_members ( playerid ) ;
public family_members ( playerid )
{
	print ("cache_get_row [ family_members ]");
	new rows;
	cache_get_row_count(rows);
	if (!rows) return SendClientMessage(playerid,COLOR_GREY,"Ошибка. Попробуйте еще раз");
	stringer[0] = EOS;
	for(new i = 0; i < rows ; i ++ )
	{
		new name[MAX_PLAYER_NAME+1];
		cache_get_value_index(i,0,name,MAX_PLAYER_NAME+1);
		format(stringer,2499,"%s{"#cINFO"}%i. {"#cWHITE"}%s\n",stringer,i+1,name);
	}
	strcat(stringer,"\n{ffff00}Используйте ник игрока которого хотите исключить");
	ShowPlayerDialog(playerid,dOffUninviteFamily,DIALOG_STYLE_INPUT,"{ff0000}Управление составом",stringer,"Ввод","Закрыть");
	return 1 ;
}
forward showall_callback ( playerid ) ;
public showall_callback ( playerid )
{
	print ("cache_get_row [ showall_callback ]");
	new rows;
	cache_get_row_count(rows);
	if (!rows) return SendErr(playerid, "Используйте команду еще раз");
	stringer = "\tИмя\t\t\tРанг\n\n{"#cWHITE"}";
	for(new i = 0 ; i < rows ; i ++ )
	{
		new name[MAX_PLAYER_NAME+1];
		cache_get_value_index(i,0,name,MAX_PLAYER_NAME+1);
		new rang;
		cache_get_value_index_int(i,1,rang);
		format(stringer,2499,"%s\t%s\t\t\t%i\t  \n",stringer,name,rang);
	}

	if(rows >= 20)
	{
		SALLROWS[playerid]++;
		ShowPlayerDialog(playerid,dShowAll,DIALOG_STYLE_MSGBOX,"{ffff00}Члены организации оффлайн",stringer,"Закрыть",">>>");
	}
	else ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{ffff00}Члены организации оффлайн",stringer,"Закрыть","");
	return 1 ;
}

forward offmute_callback ( playerid, Nick [ ], Time, Reason [ ] ) ;
public offmute_callback ( playerid,  Nick [ ], Time, Reason [ ] )
{
	print ("cache_get_row [ offmute_callback ]");
	new rows;
	cache_get_row_count(rows);
	if (!rows) return SendErr(playerid, "Игрок не найден");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(IsIpFound(Reason))
	{
		SendReklama(playerid,Reason);
		return 1;
	}
	if(AntiReklama(Reason))
	{
		format(stringer,250,"[Анти-слив <<< в /ban]: %s(%i){ff0000} попытался отправить текст: %s",NamePlayer[playerid],playerid,Reason);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(Reason,Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],Reason,strlen(Reason),64);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 250, "UPDATE `accounts` SET `pMuteTime` = '%i' WHERE `tName` = '%s'  LIMIT 1", Time,Nick);
	mysql_pquery(connects,mysql_query_string);

	format(mysql_query_string,128,"Администратор %s выдал затычку в оффлайне игрока %s на %d минут. Причина: %s",NamePlayer[playerid],Nick,Time,Reason);
	SendClientMessageToAll(COLOR_LIGHTRED,mysql_query_string);
	new id;
	cache_get_value_int(0,"ID",id);
	Insert_Reason_Mute(id, NamePlayer[playerid], Reason);
	return 1 ;
}

forward offjail_callback ( playerid, Nick [ ], Time, Reason [ ] ) ;
public offjail_callback ( playerid,  Nick [ ], Time, Reason [ ] )
{
	print ("cache_get_row [ offjail_callback ]");
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendErr(playerid, "Игрок не найден");
	if(AntiSlivTime[playerid]==0)
	{
		AntiSlivTime[playerid] = INTERVAL_ADMIN_WARN;
	}
	else
	{
		AntiSlivCount[playerid]++;
		if(AntiSlivCount[playerid]>=2 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return false;
		}
	}
	if(IsIpFound(Reason))
	{
		SendReklama(playerid,Reason);
		return 1;
	}
	if(AntiReklama(Reason))
	{
		format(stringer,250,"[Анти-слив <<< в /ban]: %s(%i){ff0000} попытался отправить текст: %s",NamePlayer[playerid],playerid,Reason);
		AdmMes(CBADINFO,stringer,1);
		DelAdmin(playerid,NamePlayer[playerid]);
		return 1;
	}
	if(strfind(Reason,Reason__[playerid]) != -1)
	{
		Reason__Count[playerid] += 3;
		if(Reason__Count[playerid]>=12 && !IsMegaAdmin(playerid))
		{
			p_info[playerid][pAdmin] = 0;
			p_info[playerid][tLeader]=0;
			p_info[playerid][tMember]=0;
			p_info[playerid][tRank]=0;
			gAdmin[playerid][8] = 1;
			SendClientMessage(playerid,-1,"Ваши действия администратора заблокированы.");
			return true;
		}
	}
	strmid(Reason__[playerid],Reason,strlen(Reason),64);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 250, "UPDATE `accounts` SET `pJailTime` = '%i',`pMestoJail`='1' WHERE `tName` = '%s'  LIMIT 1", Time,Nick);
	mysql_pquery(connects,mysql_query_string);

	format(mysql_query_string,128,"Администратор %s посадил в оффлайне игрока %s на %d минут. Причина: %s",NamePlayer[playerid],Nick,Time,Reason);
	SendClientMessageToAll(COLOR_LIGHTRED,mysql_query_string);

	new id;
	cache_get_value_int(0,"ID",id);
	Insert_Reason_Jail(id, NamePlayer[playerid], Reason);

	return 1 ;
}

forward offuninvite_callback ( playerid, Nicks [ ] ) ;
public offuninvite_callback ( playerid,  Nicks [ ] )
{
	print ("cache_get_row [ offuninvite_callback ]");
	print ("cache_get_field_content_int [ offuninvite_callback ]");
	new rows,member;
	cache_get_row_count(rows);
	if (!rows) return SendErr(playerid, "Игрок не найден");
	cache_get_value_int(0,"tMember",member);
	if(member != p_info[playerid][tMember] )return SendErr(playerid, "Игрок не в вашей фракции");

	new sqlcmd[230];
	format(sqlcmd, 230, "UPDATE `accounts` SET `tMember` = '0',`tRank` = '0' WHERE `tName` = '%s'  LIMIT 1",Nicks);
	mysql_pquery(connects,sqlcmd,"","");

	format(sqlcmd,128,"%s {ffff00}уволен в оффлайн режиме",Nicks);
	SendClientMessage(playerid,-1,sqlcmd);
	return 1 ;
}





/*stock UpdateHeart(playerid)
{
	if(LoveGive[playerid]<1) return 0;
	const Float:power_heart_x = 0.05;
	const Float:power_heart_y = 0.05;
	const Float:power_heart_z = 0.04;

	SetPlayerAttachedObject(playerid, 0, 1240, 2, 0.6159, 0.0000, 0.0389, 0.0000, 88.0000, 0.0000,
		LoveGive[playerid] * power_heart_x,
		LoveGive[playerid] * power_heart_y,
		LoveGive[playerid] * power_heart_z, 0, 0);
	return 1;
}*/

stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}

forward GetPlayerAngleToPoint(playerid, Float:x, Float:y);
stock GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}

stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(GetPlayerAngleToPoint(playerid, x, y));
}

stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}

stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return true;
}

stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
	new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
	return true;
}

/*public GiveHeart(playerid, targetid)
{
	switch(heart_give[playerid])
	{
		case 1:
		{
			SetPlayerAttachedObject(playerid, 1, 11732, 5, 0.1119, 0.0230, 0.0289, -55.7000, -27.6999, 99.4000, 0.0919, 0.0900, 0.0000, 0, 0);
			SetTimerEx("GiveHeart", 3000, 0, "ii", playerid, targetid);
		}
		case 2:
		{
			RemovePlayerAttachedObject(playerid, 1);
			AC_TogglePlayerControllable(targetid,1);

			FIXES_ApplyAnimation(targetid,"KISSING","gift_get",4.1, 0, 1, 1, 0, 0, 1);
			SetTimerEx("GiveHeart", 500, 0, "ii", playerid, targetid);
		}
		case 3:
		{
			heart_give[playerid] = 0;
			AC_TogglePlayerControllable(playerid,1);
			///
			FIXES_ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
			return 1;
		}
	}
	heart_give[playerid]++;
	return 1;
}*/

stock UpdatePlayerShield(playerid,Float:amount)
{
	new Float:Shield = amount/1.74;
	if(Shield > 57.5) Shield = 57.5;
	else if(Shield < 0.0) Shield = 0.0;
	PlayerTextDrawHide(playerid, ShieldBar[playerid]);
	DestroyPlayerTD(playerid, ShieldBar[playerid]);
	ShieldBar[playerid] = CreatePlayerTextDraw(playerid,550.5+Shield,59.6,"_");
	PlayerTextDrawLetterSize(playerid, ShieldBar[playerid],0.0,0.135);
	PlayerTextDrawUseBox(playerid, ShieldBar[playerid],1);
	PlayerTextDrawBoxColor(playerid, ShieldBar[playerid],CSHBAR);
	PlayerTextDrawTextSize(playerid, ShieldBar[playerid],546.0,0.0);

	if(amount <= 0) HideSHBarForPlayer(playerid);
	return 1;
}

stock ShowSHBarForPlayer(playerid, Float:amount)
{
	if(amount > 0)
	{
		PlayerTextDrawShow(playerid, ShieldBar[playerid]);
		TextDrawShowForPlayer(playerid, ShieldBG[0]);
		TextDrawShowForPlayer(playerid, ShieldBG[1]);
		return 1;
	}
	return 0;
}

stock HideSHBarForPlayer(playerid)
{
	PlayerTextDrawHide(playerid, ShieldBar[playerid]);
	TextDrawHideForPlayer(playerid, ShieldBG[0]);
	TextDrawHideForPlayer(playerid, ShieldBG[1]);
	return 1;
}

stock SetPlayerAttachedObjectEx(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0)
{
	return SetPlayerAttachedObject(playerid, index, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
}

stock DestroyPlayerTD(playerid, &PlayerText:td)
{
	if(td != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, td);
		td = PlayerText:-1;
	}
	return 1;
}

stock RemovePlayerAttachedObjectEx(playerid, index)
{
	return RemovePlayerAttachedObject(playerid, index);
}


stock IsPlayerFacingPoint(playerid, Float:dOffset, Float:p_X, Float:p_Y, Float:p_Z)
{
	#pragma unused p_Z

	new
		Float:X,
		Float:Y,
		Float:Z,
		Float:pA,
		Float:ang;

	if(!IsPlayerConnected(playerid)) return 0;

	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, pA);

	if( Y > p_Y ) ang = (-acos((X - p_X) / floatsqroot((X - p_X)*(X - p_X) + (Y - p_Y)*(Y - p_Y))) - 90.0);
	else if( Y < p_Y && X < p_X ) ang = (acos((X - p_X) / floatsqroot((X - p_X)*(X - p_X) + (Y - p_Y)*(Y - p_Y))) - 450.0);
	else if( Y < p_Y ) ang = (acos((X - p_X) / floatsqroot((X - p_X)*(X - p_X) + (Y - p_Y)*(Y - p_Y))) - 90.0);

	if(AngleInRangeOfAngle(-ang, pA, dOffset)) return true;
	return false;
}

stock IsPlayerFacingPlayer(playerid, targetid, Float:dOffset)
{
	new
		Float:pX,
		Float:pY,
		Float:pZ,
		Float:pA,
		Float:X,
		Float:Y,
		Float:Z,
		Float:ang;

	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;

	GetPlayerPos(targetid, pX, pY, pZ);
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, pA);

	if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);

	if(AngleInRangeOfAngle(-ang, pA, dOffset)) return true;
	return false;

}

stock AngleInRangeOfAngle(Float:a1, Float:a2, Float:range)
{
	a1 -= a2;
	if((a1 < range) && (a1 > -range)) return true;
	return false;
}

stock fwriteex(const File: file, const str[])
{
	for( new i = 0; i <= strlen ( str ); i ++ )
	{
		switch(str[i])
		{
			case '\0': break;
			default: fputchar(file, str[i], false);
		}
	}
}

CMD:test_anim(playerid, params[])
{
	new anim[2][32];
	if(sscanf(params,"s[32]s[32]",anim[0],anim[1])) return SendClientMessage(playerid, -1, "/test_anim [library] [animation]");
	//FIXES_ApplyAnimation(playerid, anim[0], anim[1], 4, 0, 0, 0, 1, 5000);
	FIXES_ApplyAnimation( playerid, anim[0], anim[1], 4.1, 0, 0, 0, 1, 0, 1 );
	return 1;
}




CMD:getindex(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);//1189
	format(stringer, 64, "anim : %d", anim);
	SendClientMessage(playerid, -1, stringer);
	return 1;
}





stock CancelComponent(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(SelectTuneSlot[playerid] == 0 || SelectTuneSlot[playerid] == 1)
	{
		if(TempTuningPlayer[playerid][SelectCarToTune[playerid]][0] != 1)
		{
			ChangeVehicleColor(vehicleid, gPlayerTuning[playerid][SelectCarToTune[playerid]][0], 0);
		}
		ChangeVehiclePaintjob(vehicleid, gPlayerTuning[playerid][SelectCarToTune[playerid]][1]);
	}

	if(LastTuneSlot[playerid][1] != 0)
	{
		RemoveVehicleComponent(vehicleid,LastTuneSlot[playerid][1]);
	}

	LastTuneSlot[playerid][1] = 0;
	ShowTuneList[playerid][0] = true;
	ShowTuneList[playerid][1] = false;
	IsUpdateCamera[playerid] = false;
	UpdateVehicleCamera(playerid);
	return 1;
}

forward UpdateVehicleCamera(playerid);
public UpdateVehicleCamera(playerid)
{
	if(!IsUpdateCamera[playerid]) return 0;
	new step = GetPVarInt(playerid, "step_vehicle_pos");
	new Float:pos[4], vehicleid = GetPlayerVehicleID(playerid);
	GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
	GetVehicleZAngle(vehicleid, pos[3]);
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);

	x2 = floatadd(floatmul(6.0,floatsin(floatadd(-pos[3],floatadd(25.0,floatmul(50.0,step))),degrees)),pos[0]);
	y2 = floatadd(floatmul(-6.0,floatcos(floatadd(-pos[3],floatadd(25.0,floatmul(50.0,step))),degrees)),pos[1]);
	z2 = floatadd(pos[2],0.4);

	InterpolateCameraPos(playerid,x,y,z,x2,y2,z2 + 1.4,700,CAMERA_MOVE);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,pos[0],pos[1],pos[2],700,CAMERA_MOVE);

	SetPVarInt(playerid, "step_vehicle_pos", (step != 6) ? (step + 1) : (0));
	SetTimerEx("UpdateVehicleCamera", 5000, 0, "i", playerid);

	return 1;
}


stock GetComponentID(playerid, Text:clickedid, model, type)
{
	for(new B = 0; B < sizeof(components_tune); B++)
	{
		if(components_tune[B][1] != type) continue;
		if(!IsComponentidCompatible(model,components_tune[B][0])) continue;
		if(LastTuneSlot[playerid][1] == components_tune[B][0] && clickedid == TuneSelect[0]) continue;
		if((clickedid == TuneSelect[0] && B <= LastTuneSlot[playerid][0]) ||
		(clickedid == TuneSelect[1] && LastTuneSlot[playerid][0] == LastTuneSlot[playerid][2])) continue;


		LastTuneSlot[playerid][0] = B;
		LastTuneSlot[playerid][1] = components_tune[B][0];
		return components_tune[B][0];
	}

	return 0;
}



stock GetTypeTuning(slot)
{
	switch(slot)
	{
		case 2: return CARMODTYPE_HOOD;
		case 3: return CARMODTYPE_LAMPS;
		case 4: return CARMODTYPE_FRONT_BUMPER;
		case 5: return CARMODTYPE_REAR_BUMPER;
		case 6: return CARMODTYPE_ROOF;
		case 7: return CARMODTYPE_SPOILER;
		case 8: return CARMODTYPE_SIDESKIRT;
		case 9: return CARMODTYPE_WHEELS;
	}

	return -1;
}

stock IsComponentidCompatible( modelid, componentid ) {
	if( componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 || componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 || componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
		componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086 ) return componentid;
	switch( modelid ) {
		case 400: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 ) return componentid;
		case 401: if( componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 402: if( componentid == 1009 || componentid == 1009 || componentid == 1010 ) return componentid;
		case 404: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007) return componentid;
		case 405: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000) return componentid;
		case 409: if( componentid == 1009 ) return componentid;
		case 410: if( componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 411: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 412: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 415: if( componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 418: if( componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016) return componentid;
		case 419: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 420: if( componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003) return componentid;
		case 421: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000) return componentid;
		case 422: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007) return componentid;
		case 426: if( componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003) return componentid;
		case 429: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 436: if( componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 438: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 439: if( componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013) return componentid;
		case 442: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 445: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 451: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 458: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 466: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 467: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 474: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 475: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 477: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007) return componentid;
		case 478: if( componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 479: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 480: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 489: if( componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000) return componentid;
		case 491: if( componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 492: if( componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000) return componentid;
		case 496: if( componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020) return componentid;
		case 500: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 506: if( componentid == 1009) return componentid;
		case 507: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 516: if( componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007) return componentid;
		case 517: if( componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 518: if( componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 526: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 527: if( componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007) return componentid;
		case 529: if( componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 533: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 534: if( componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106) return componentid;
		case 535: if( componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119) return componentid;
		case 536: if( componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108) return componentid;
		case 540: if( componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
		case 541: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 542: if( componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015) return componentid;
		case 545: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 546: if( componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
		case 547: if( componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000) return componentid;
		case 549: if( componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 550: if( componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003) return componentid;
		case 551: if( componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003) return componentid;
		case 555: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 558: if( componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093) return componentid;
		case 559: if( componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009) return componentid;
		case 560: if( componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031) return componentid;
		case 561: if( componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057) return componentid;
		case 562: if( componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039) return componentid;
		case 565: if( componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048) return componentid;
		case 566: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 567: if( componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133) return componentid;
		case 575: if( componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042) return componentid;
		case 576: if( componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134) return componentid;
		case 579: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 580: if( componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
		case 585: if( componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
		case 587: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 589: if( componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007) return componentid;
		case 600: if( componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007) return componentid;
		case 602: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
		case 603: if( componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
	}
	return false;
}

stock string_replace ( string[], find, replace )
{
	for ( new i = 0 ; string [ i ] ; i ++ )
	{
		if ( string [ i ] == find ) string [ i ] = replace ;
	}
}

stock UpdateLicenses(playerid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "UPDATE `accounts` SET `licenses` = '%d,%d,%d,%d' WHERE `ID` = '%d'", Lic[playerid][0],Lic[playerid][1],Lic[playerid][2],Lic[playerid][3],p_info[playerid][pID]);
	mysql_pquery(connects, mysql_query_string, "", "");

	return 1;
}

forward DROP_CCPD(playerid);
public DROP_CCPD(playerid)
{
	SetCameraBehindPlayer(playerid);
	pc_cmd_camera(playerid);
	return 1;
}

forward ZoomCameraPlayer(playerid, newkeys, step_cppd_);
public ZoomCameraPlayer(playerid, newkeys, step_cppd_)
{
	if(CameraFlag[playerid][1] == -1) return 0;

	CPPD[step_cppd_][playerid][StepZoom][0] = ((newkeys & KEY_YES) && CPPD[step_cppd_][playerid][StepZoom][0] < 30.0) ? (CPPD[step_cppd_][playerid][StepZoom][0] + 0.5) : ((newkeys & KEY_NO) && CPPD[step_cppd_][playerid][StepZoom][0] > 1.0) ? (CPPD[step_cppd_][playerid][StepZoom][0] - 0.5) : (CPPD[step_cppd_][playerid][StepZoom][0]);

	InterpolateCameraPos(playerid,
	CPPD[step_cppd_][playerid][last_pos_camera][0] + (floatsub(CPPD[step_cppd_][playerid][StepZoom][1],0.5) * floatsin(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][last_pos_camera][1] + (floatsub(CPPD[step_cppd_][playerid][StepZoom][1],0.5) * floatcos(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][last_pos_camera][4],

	CPPD[step_cppd_][playerid][save_point_pos][0] + (floatsub(CPPD[step_cppd_][playerid][StepZoom][0],0.5) * floatsin(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][save_point_pos][1] + (floatsub(CPPD[step_cppd_][playerid][StepZoom][0],0.5) * floatcos(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][save_point_pos][4], 300);

	InterpolateCameraLookAt(playerid,
	CPPD[step_cppd_][playerid][last_pos_camera][0] + (floatmul(CPPD[step_cppd_][playerid][StepZoom][1],2.0) * floatsin(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][last_pos_camera][1] + (floatmul(CPPD[step_cppd_][playerid][StepZoom][1],2.0) * floatcos(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][last_pos_camera][2],

	CPPD[step_cppd_][playerid][save_point_pos][0] + (floatmul(CPPD[step_cppd_][playerid][StepZoom][0],2.0) * floatsin(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][save_point_pos][1] + (floatmul(CPPD[step_cppd_][playerid][StepZoom][0],2.0) * floatcos(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][save_point_pos][2], 300);

	CPPD[step_cppd_][playerid][last_pos_camera][0] = CPPD[step_cppd_][playerid][save_point_pos][0];
	CPPD[step_cppd_][playerid][last_pos_camera][1] = CPPD[step_cppd_][playerid][save_point_pos][1];

	CPPD[step_cppd_][playerid][StepZoom][1] = CPPD[step_cppd_][playerid][StepZoom][0];
	return 1;
}

stock CreateMovePos(playerid, step_cppd_)
{
	if(step_cppd_ == -1) return 1;

	SendClientMessage(playerid, 0x84CCC1FF, "< Помощь по управлению камерами >");
	SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажимайте {FFD285}ВНИЗ - ВВЕРХ - ВПРАВО - ВЛЕВО {FFFFFF}для управления.");
	SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажмите {FFD285}~k~~VEHICLE_ENTER_EXIT~ {FFFFFF}чтобы сохранить.");

	for(new i = 0; i <= CameraFlag[playerid][3] + 1; i++) PlayerTextDrawHide(playerid, CameraList[playerid][i]);
	for(new i = 0; i < 8; i++) TextDrawShowForPlayer(playerid, camera_pos_td[i]);

	GetPlayerPos(playerid, CPPD[step_cppd_][playerid][temp_camera_pos][0], CPPD[step_cppd_][playerid][temp_camera_pos][1], CPPD[step_cppd_][playerid][temp_camera_pos][2]);
	CPPD[step_cppd_][playerid][temp_camera_pos][2] += 0.8;
	CPPD[step_cppd_][playerid][temp_camera_pos][4] = CPPD[step_cppd_][playerid][temp_camera_pos][2];
	GetPlayerFacingAngle(playerid, CPPD[step_cppd_][playerid][temp_camera_pos][3]);

	CPPD[step_cppd_][playerid][temp_camera_pos][0] += (2.0 * floatsin(-CPPD[step_cppd_][playerid][temp_camera_pos][3], degrees));
	CPPD[step_cppd_][playerid][temp_camera_pos][1] += (2.0 * floatcos(-CPPD[step_cppd_][playerid][temp_camera_pos][3], degrees));

	GetPlayerPos(playerid, CPPD[step_cppd_][playerid][last_pos_camera][0], CPPD[step_cppd_][playerid][last_pos_camera][1], CPPD[step_cppd_][playerid][last_pos_camera][2]);
	AC_TogglePlayerControllable(playerid, false);

	InterpolateCameraPos(playerid, CPPD[step_cppd_][playerid][last_pos_camera][0], CPPD[step_cppd_][playerid][last_pos_camera][1], CPPD[step_cppd_][playerid][temp_camera_pos][4], CPPD[step_cppd_][playerid][temp_camera_pos][0], CPPD[step_cppd_][playerid][temp_camera_pos][1], CPPD[step_cppd_][playerid][temp_camera_pos][4], 1500, CAMERA_MOVE);
	InterpolateCameraLookAt(playerid,CPPD[step_cppd_][playerid][last_pos_camera][0] + (2.0 * floatsin(-CPPD[step_cppd_][playerid][last_pos_camera][3], degrees)),CPPD[step_cppd_][playerid][last_pos_camera][1] + (2.0 * floatcos(-CPPD[step_cppd_][playerid][last_pos_camera][3], degrees)),
	CPPD[step_cppd_][playerid][last_pos_camera][2],CPPD[step_cppd_][playerid][temp_camera_pos][0] + (2.0 * floatsin(-CPPD[step_cppd_][playerid][temp_camera_pos][3], degrees)),CPPD[step_cppd_][playerid][temp_camera_pos][1] + (2.0 * floatcos(-CPPD[step_cppd_][playerid][temp_camera_pos][3], degrees)),CPPD[step_cppd_][playerid][temp_camera_pos][2], 1500, CAMERA_MOVE);

	for(new Y = 0; Y < 5; Y ++) CPPD[step_cppd_][playerid][last_pos_camera][Y] = CPPD[step_cppd_][playerid][temp_camera_pos][Y];
	CameraFlag[playerid][0] ^= 1 << 0;
	PrintCameraFlag(playerid, 0, "create in public");
	return 1;
}

stock SavePositionCamera(playerid, step_cppd_)
{
	if(step_cppd_ == -1 || step_cppd_ == 5) return 0;

	for(new Y = 0; Y < 5; Y ++) CPPD[step_cppd_][playerid][save_point_pos][Y] = CPPD[step_cppd_][playerid][temp_camera_pos][Y];

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 512, "INSERT INTO `cppd`(`id`,`step`,`save_point_pos`) VALUES ('%d','%d','%f,%f,%f,%f,%f')", p_info[playerid][pID], step_cppd_, CPPD[step_cppd_][playerid][save_point_pos][0], CPPD[step_cppd_][playerid][save_point_pos][1], CPPD[step_cppd_][playerid][save_point_pos][2], CPPD[step_cppd_][playerid][save_point_pos][3], CPPD[step_cppd_][playerid][save_point_pos][4]);
	mysql_pquery(connects, mysql_query_string, "", "");

	AC_TogglePlayerControllable(playerid, true);
	SetCameraBehindPlayer(playerid);
	CameraFlag[playerid][0] |= 1 << 0;
	CameraFlag[playerid][0] |= 1 << 1;
	CameraFlag[playerid][0] |= 1 << 2;
	CameraFlag[playerid][0] |= 1 << 3;

	if(CameraFlag[playerid][3] != 4)
	{
		CameraFlag[playerid][3] ++;
	}
	else
	{
		CameraFlag[playerid][3] = 5;
		PlayerTextDrawSetString(playerid, CameraList[playerid][4], "5");
		step_cppd[playerid] = 0;
	}
	PrintCameraFlag(playerid, 0, "save");
	PrintCameraFlag(playerid, 3, "saveposition");

	pc_cmd_camera(playerid);
	for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
	return 1;
}



stock ShowPositionCamera(playerid, step_cppd_)
{
	if(step_cppd_ == -1) return 0;

	SendClientMessage(playerid, 0x84CCC1FF, "< Помощь по управлению камерами >");
	SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажмите {FFD285}~k~~CONVERSATION_YES~{FFFFFF} - чтобы приблизить.");
	SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажмите {FFD285}~k~~CONVERSATION_NO~{FFFFFF} - чтобы отдалить.");
	SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Для выхода в меню нажмите {FFD285}~k~~VEHICLE_ENTER_EXIT~.");

	AC_SetPlayerPos(playerid, CPPD[step_cppd_][playerid][save_point_pos][0], CPPD[step_cppd_][playerid][save_point_pos][1], CPPD[step_cppd_][playerid][save_point_pos][2] - 20.0);
	AC_TogglePlayerControllable(playerid,0);

	CameraFlag[playerid][0] ^= (1 << 1);
	CPPD[step_cppd_][playerid][StepZoom][0] = 0.5;
	CPPD[step_cppd_][playerid][StepZoom][1] = 0.25;
	SetPlayerCameraPos(playerid, CPPD[step_cppd_][playerid][save_point_pos][0], CPPD[step_cppd_][playerid][save_point_pos][1], CPPD[step_cppd_][playerid][save_point_pos][4]);
	SetPlayerCameraLookAt(playerid,CPPD[step_cppd_][playerid][save_point_pos][0] + (2.0 * floatsin(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),
	CPPD[step_cppd_][playerid][save_point_pos][1] + (2.0 * floatcos(-CPPD[step_cppd_][playerid][save_point_pos][3], degrees)),CPPD[step_cppd_][playerid][save_point_pos][2]);

	for(new Y = 0; Y < 5; Y ++) CPPD[step_cppd_][playerid][last_pos_camera][Y] = CPPD[step_cppd_][playerid][save_point_pos][Y];

	PrintCameraFlag(playerid, 0, "show in public");
	return 1;
}

forward LoadPointCamera(playerid);
public LoadPointCamera(playerid)
{
	print("cache_get_row_int [LoadPointCamera]");
	new rows;
	cache_get_row_count(rows);
	CameraFlag[playerid][3] = rows;
	PrintCameraFlag(playerid, 3, "loadpoint");

	if(CameraFlag[playerid][3] > 0)
	{
		new load_point[64];

		for(new i = 0; i < CameraFlag[playerid][3]; i++)
		{
			cache_get_value_index(i, 1, load_point, 64);
			new s;
			cache_get_value_index_int(i,0,s);
			sscanf(load_point,"p<,>a<f>[5]", CPPD[s][playerid][save_point_pos]);
		}
	}
	CameraFlag[playerid][0] ^= (1 << 3);
	pc_cmd_camera(playerid);
	return 1;
}

CMD:camera(playerid)
{
	if(!IsACop(playerid)) return 1;
	if((CameraFlag[playerid][0] & (1 << 3)) != 0)
	{
		if((CameraFlag[playerid][0] & (1 << 4)) != 0)
		{
			SendClientMessage(playerid, 0x84CCC1FF, "< Помощь по управлению камерами >");
			SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажимайте {FFD285}ВНИЗ - ВВЕРХ {FFFFFF}для управления в меню.");
			SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажмите {FFD285}~k~~PED_SPRINT~ {FFFFFF}- чтобы выбрать.");
			SendClientMessage(playerid, 0x84CCC1FF, "- {FFFFFF}Нажмите {FFD285}~k~~GROUP_CONTROL_BWD~{FFFFFF} - для удаления.");
			GetPlayerPos(playerid, OldCPPD[playerid][0], OldCPPD[playerid][1], OldCPPD[playerid][2]);
			CameraFlag[playerid][0] ^= (1 << 4);
		}
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 512, "SELECT `step`,`save_point_pos` FROM `cppd` WHERE `id` = '%d'", p_info[playerid][pID]);
		mysql_pquery(connects, mysql_query_string, "LoadPointCamera", "i", playerid);

		return 1;
	}
	for(new X = 0; X < 8; X++) TextDrawHideForPlayer(playerid, camera_pos_td[X]);
	new fix_show_tud = (CameraFlag[playerid][3] != 5) ? (CameraFlag[playerid][3] + 1) : (5);
	new v_str_str[64];
	for(new i = 0; i < 6; i++)
	{
		if(CameraList[playerid][i] != PlayerText:-1)
		{
			PlayerTextDrawDestroy(playerid, CameraList[playerid][i]);
			CameraList[playerid][i] = PlayerText:-1;
		}
	}
	for(new i = 0, Float:start_cl = 200.0; i <= fix_show_tud; i++, start_cl += 20.0)
	{
		valstr(v_str_str, i + 1);
		if(CameraFlag[playerid][3] == 0)
		{
			CameraList[playerid][i] = CreatePlayerTextDraw(playerid, 100.0, start_cl, (i != 0) ? ("EXIT") : ("CREATE POINT"));
		}
		else if(CameraFlag[playerid][3] < 5)
		{
			CameraList[playerid][i] = CreatePlayerTextDraw(playerid, 100.0, start_cl, (i == CameraFlag[playerid][3]) ? ("CREATE POINT") : (i == CameraFlag[playerid][3] + 1) ? ("EXIT") : (v_str_str));
		}
		else
		{
			CameraList[playerid][i] = CreatePlayerTextDraw(playerid, 100.0, start_cl, (i == CameraFlag[playerid][3]) ? ("EXIT") : v_str_str);
		}

		PlayerTextDrawLetterSize(playerid,CameraList[playerid][i], 0.25, 1.0);
		PlayerTextDrawTextSize(playerid,CameraList[playerid][i], 6.0, 70.0);
		PlayerTextDrawAlignment(playerid,CameraList[playerid][i], 2);
		PlayerTextDrawColor(playerid,CameraList[playerid][i], 0xFFBCD2FF);
		PlayerTextDrawUseBox(playerid,CameraList[playerid][i], true);
		PlayerTextDrawBoxColor(playerid,CameraList[playerid][i], 0x912324BB);
		PlayerTextDrawSetShadow(playerid,CameraList[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid,CameraList[playerid][i], 1);
		PlayerTextDrawBackgroundColor(playerid,CameraList[playerid][i], 0x00000000);
		PlayerTextDrawFont(playerid,CameraList[playerid][i], 1);
		PlayerTextDrawSetProportional(playerid,CameraList[playerid][i], 1);
	}
	CameraFlag[playerid][2] = 0;
	CameraFlag[playerid][0] ^= (1 << 2);
	PlayerTextDrawBoxColor(playerid,CameraList[playerid][CameraFlag[playerid][2]], 0x91191CBB);
	PlayerTextDrawBackgroundColor(playerid,CameraList[playerid][CameraFlag[playerid][2]], 0x422424FF);


	for(new i = 0; i <= fix_show_tud; i++)
	{
		PlayerTextDrawShow(playerid, CameraList[playerid][i]);
	}
	AC_TogglePlayerControllable(playerid, false);

	PrintCameraFlag(playerid, 2, "start");
	PrintCameraFlag(playerid, 0, "start");

	return 1;
}

stock return_player_pos(playerid)
{
	AC_TogglePlayerControllable(playerid, 1);
	AC_SetPlayerPos(playerid, OldCPPD[playerid][0], OldCPPD[playerid][1], OldCPPD[playerid][2]);

	return 1;
}

stock PrintCameraFlag(playerid, type, const data[])
{
	#if defined LOG_CAMERA_FLAG || defined LOG_C_ALL
		format(stringer, 144, "CameraFlag %d : %d [ %s ]", type, CameraFlag[playerid][type], data);
		SendClientMessage(playerid, -1, stringer);
	#else
		#pragma unused playerid
		#pragma unused data
		#pragma unused type
	#endif

	return 1;
}

forward CameraSetPlayerPos(playerid, Float:object_x, Float:object_y, Float:object_z, Float:Angle);
public CameraSetPlayerPos(playerid, Float:object_x, Float:object_y, Float:object_z, Float:Angle)
{
	InterpolateCameraPos(playerid, 	floatadd(object_x,floatmul(-3.5,floatsin(-Angle - 15.0, degrees))),
									floatadd(object_y,floatmul(-3.5,floatcos(-Angle - 15.0, degrees))),
									floatadd(object_z, 0.8),

									floatadd(object_x,floatmul(-1.0,floatsin(-Angle, degrees))),
									floatadd(object_y,floatmul(-1.0,floatcos(-Angle, degrees))),
									floatadd(object_z, 0.8), 2500, CAMERA_MOVE);

	InterpolateCameraLookAt(playerid,
									floatadd(object_x,floatmul(5.0,floatsin(-Angle, degrees))),
									floatadd(object_y,floatmul(5.0,floatcos(-Angle, degrees))),
									floatadd(object_z, 0.8),

									floatadd(object_x,floatmul(5.0,floatsin(-Angle, degrees))),
									floatadd(object_y,floatmul(5.0,floatcos(-Angle, degrees))),
									floatadd(object_z, 0.8), 2500, CAMERA_MOVE);

	SetTimerEx("Behind", 2500, 0, "i", playerid);

	return 1;
}

forward Behind(playerid);
public Behind(playerid)
{
	SetCameraBehindPlayer(playerid);
	return 1;
}



forward members_update ( playerid ) ;
public members_update ( playerid )
{
	new members_count = m_members_count [ playerid ] ;
	for ( new j = 0 ; j <= members_count ; j ++ )
	{
		PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
		PlayerTextDrawHide ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
		PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 0 ] [ j ] ) ;
		PlayerTextDrawDestroy ( playerid, members_pos_td [ playerid ] [ 1 ] [ j ] ) ;
	}
	members_count = 0 ;
	foreach(i)
	{
		if ( p_info[ i ] [ tMember ] != p_info[ playerid ] [ tMember ] || GetPlayerInterior ( i ) != 0 || GetPlayerVirtualWorld ( i ) != 0 ) continue ;
		if ( p_info [ i ] [ pY ] < -3000 || p_info [ i ] [ pY ] > 3000 || p_info [ i ] [ pX ] < -3000 || p_info [ i ] [ pX ] > 3000 ) continue ;

		new Float:td_pos_x, Float:td_pos_y;

		if ( p_info [ i ] [ pY ] < 0 ) td_pos_y = 253.6 + 146 * -p_info [ i ] [ pY ] / 3000 ;
		else if ( p_info [ i ] [ pY ] >= 0 ) td_pos_y = 253.6 - 151 * p_info [ i ] [ pY ] / 3000 ;
		if ( p_info [ i ] [ pX ] < 0 ) td_pos_x = 315.7 - 170 * -p_info [ i ] [ pX ] / 3000 ;
		else if ( p_info [ i ] [ pX ] >= 0 ) td_pos_x = 315.7 + 184 * p_info [ i ] [ pX ] / 3000 ;

		members_pos_td [ playerid ] [ 0 ] [ members_count ] = CreatePlayerTextDraw ( playerid, td_pos_x, td_pos_y, "hud:radar_light" ) ;
		PlayerTextDrawFont ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ], 4 ) ;
		PlayerTextDrawSetProportional ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ], 1 ) ;
		PlayerTextDrawTextSize ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ], 6.000000, 7.000000 ) ;

		new td_string [ MAX_PLAYER_NAME + 14 ] ;
		format ( td_string, sizeof ( td_string ), "~y~%s ~w~(%d)", NamePlayer [ i ], i ) ;

		members_pos_td [ playerid ] [ 1 ] [ members_count ] = CreatePlayerTextDraw ( playerid, td_pos_x + 5, td_pos_y - 5, td_string ) ;
		PlayerTextDrawFont ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 2 ) ;
		PlayerTextDrawAlignment( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 2);
		PlayerTextDrawSetProportional ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 1 ) ;
		PlayerTextDrawLetterSize ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 0.16, 0.6 ) ;
		PlayerTextDrawSetOutline ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ], 1);

		PlayerTextDrawShow ( playerid, members_pos_td [ playerid ] [ 0 ] [ members_count ] ) ;
		PlayerTextDrawShow ( playerid, members_pos_td [ playerid ] [ 1 ] [ members_count ] ) ;
		TextDrawShowForPlayer ( playerid, members_map_td ) ;

		members_count ++ ;
	}
	m_members_count [ playerid ] = members_count ;
	return 1 ;
}
public OnPlayerClickMap ( playerid, Float:fX, Float:fY, Float:fZ )
{
	if ( GetPVarInt ( playerid, "biz_war_map" ) == 1 )
	{
		if ( BizWarTime > 0 ) return SendErr ( playerid, "Война за бизнес уже идет!" ), DeletePVar ( playerid, "biz_war_map" ) ;

		if ( ! available_gz_pos ( fX, fY ) )
		{
			SendErr ( playerid, "Невозможно устроить стрелу на данной территории!" ) ;
			SendErr ( playerid, "Это должна быть территория в пригороде г.Лас-Вентурас!" ) ;
			return 1 ;
		}

		//new time; gettime(time);

		if ( tmphour < 12 || tmphour > 22 ) return SendErr ( playerid, "Использовать команду можно только с 12:00 до 22:00" ), DeletePVar ( playerid, "biz_war_map" ) ;

		new gang1 = -1;

		switch ( p_info[playerid][tMember] )
		{
			case 5: gang1 = MOROZ_LCN;
			case 6: gang1 = MOROZ_YAKUZA;
			case 14: gang1 = MOROZ_RM;
		}
		if(gang1 != -1)
		{
			if(fracmoroz[gang1] > unix)
			{
				SendErr(playerid, "Ваша мафия заморожена"), DeletePVar ( playerid, "biz_war_map" );
				return 1;
			}
		}
		for(new h = 1; h <= CountBusiness; h++)
		{
			if(!IsPlayerInRangeOfPoint(playerid,3,Business[h][PickupEnterX], Business[h][PickupEnterY], Business[h][PickupEnterZ])) continue;
			DeletePVar ( playerid, "biz_war_map" ) ;
			new gang = -1;

			switch(Business[h][Mafia])
			{
				case 5: gang = MOROZ_LCN;
				case 6: gang = MOROZ_YAKUZA;
				case 14: gang = MOROZ_RM;
			}

			if(gang != -1)
			{
				if(fracmoroz[gang] > unix)
				{
					SendErr(playerid, "Мафия которую вы хотите захватить невозможно");
					SendErr(playerid, "Она заморожена администратором, ожидайте сообщения в чате когда заморозка будет снята"), DeletePVar ( playerid, "biz_war_map" );
					return 1;
				}
			}
			if(Business[h][Mafia] == p_info[playerid][tMember])
			{
				SendErr(playerid, "Вы не можете захватить Ваш бизнес");
				return 1;
			}


			if(Business[h][Mafia] <= 0)
			{
				Business[h][Mafia] = p_info[playerid][tMember];
				SaveBusiness(h);
				Update3DTextLabelBusiness(h);
				SCM(playerid, COLOR_GREY, "Бизнес взят под контроль");
				return 1;
			}
			new zone_name [ 32 ] ;
			GetPlayer2DZone ( playerid, zone_name, 32 ) ;

			get_gz_pos ( fX, fY, 80.0, MZInfo [ bWarPos ] [ 0 ], MZInfo [ bWarPos ] [ 1 ], MZInfo [ bWarPos ] [ 2 ], MZInfo [ bWarPos ] [ 3 ] ) ;
			biz_war_gangzone = GangZoneCreate ( MZInfo [ bWarPos ] [ 0 ], MZInfo [ bWarPos ] [ 1 ], MZInfo [ bWarPos ] [ 2 ], MZInfo [ bWarPos ] [ 3 ] ) ;
			GangZoneShowForAll ( biz_war_gangzone, GetColor( MZInfo [ bFrakVlad ] ) ) ;

			BizWarTime = 600;
			MZInfo[bNapad] = p_info[playerid][tMember];
			MZInfo[bFrakVlad] = Business[h][Mafia];
			MZInfo[bBiz] = h;
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;

			GangZoneFlashForAll ( biz_war_gangzone, GetColor( MZInfo [ bNapad ] ) ) ;

			format(stringer,200, "%s начала захват бизнеса %s в месте %s", GetMN(p_info[playerid][tMember]),Business[h][BizName],zone_name);
			SendFamilyMessage(Business[h][Mafia],COLOR_LIGHTRED,stringer);
			format(stringer,128,"Начал захват бизнеса: %s",NamePlayer[playerid]);
			SendFamilyMessage(Business[h][Mafia],-1,stringer);

			format(stringer,200, "Ваша мафия начала захват бизнеса %s который принадлежит мафии %s в месте %s", Business[h][BizName],GetMN(Business[h][Mafia]),zone_name);
			SendFamilyMessage(p_info[playerid][tMember],COLOR_LIGHTRED,stringer);
			format(stringer,128,"Начал захват бизнеса: %s",NamePlayer[playerid]);
			SendFamilyMessage(p_info[playerid][tMember],-1,stringer);

			format(stringer, 200, "[A] Начался захват между мафии %s и %s | Бизнес: %s | Место: %s", GetMN(p_info[playerid][tMember]), GetMN(Business[h][Mafia]), Business[h][BizName], zone_name);
			AdmMes(CADMIN_HELP_INFO, stringer, 1);
			return 1;
		}
		return 	SendErr ( playerid, "Вы не у бизнеса!" ) ;
	}
	else if(p_info[playerid][pAdmin] >= 6 && GetPVarInt(playerid,"dostup"))
	{
		if(GetPlayerInterior(playerid) != 0) SetPlayerInterior(playerid, 0);
		if(GetPlayerVirtualWorld(playerid) != 0) SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosFindZ( playerid, fX, fY, 999.0 );
		format(stringer, 144, "Вы телепортировались по метке. Ваш ник: %s | Уровень админки: %d | x: %f | y: %f | z: %f", NamePlayer[playerid], p_info[playerid][pAdmin], fX, fY, fZ);
		SendClientMessage(playerid, 0x00bfffAA, stringer);
	}
	return true;
}

stock get_gz_pos ( Float:x, Float:y, Float:radius, &Float:minx, &Float:miny, &Float:maxx, &Float:maxy )
{
	minx = x - radius;
	miny = y - radius;
	maxx = x + radius;
	maxy = y + radius;
	return 1;
}


stock available_gz_pos ( Float:x, Float:y )
{
	if ( x < -2860 || x > 881 || y > 2860 || y < 746 || ( y < 2139 && x < -1852 ) || ( y < 1776 && x < -1712 ) || ( y < 1654 && x < -1240 ) || ( y < 1077 && x < -960 ) ) return 0 ;
	return 1 ;
}


forward clear_player_pvar ( playerid ) ;
public clear_player_pvar ( playerid )
{
	DeletePVar ( playerid, "is_question" ) ;
	return 1 ;
}




stock UpdateShootPlace(slot, bizid){
	if(bizid < 0 || bizid > MAX_BUSINESS - 1) return 1;
	new or_string[64];
	format(or_string,64,"Место: %d\nСтатус: %s",slot + 1, (iait[slot][bizid]) ? ("[Занято]") : ("Свободно"));
	UpdateDynamic3DTextLabelText(ortext[slot][bizid],0xFFFFFFFF,or_string);
	return 1;
}



forward OnShootingRangeMoved(playerid);
public OnShootingRangeMoved(playerid)
{
	for(new slot = 0; slot != 2; slot++)
	{
	    if(StepPlayer[playerid][slot]==-1) continue;
		for(new i = 0; i != 6; i++)
		{
			if(object_range[playerid][StepPlayer[playerid][slot]][i] != -1)
			{
				DestroyPlayerObject (playerid, object_range[playerid][StepPlayer[playerid][slot]][i]);
				object_range[playerid][StepPlayer[playerid][slot]][i] = -1;
			}
		}
		if(slot == 0)
			StepPlayer[playerid][slot] = ( StepPlayer[playerid][slot] != 1 ) ? ( StepPlayer[playerid][slot] + 1 ) : ( 0 ) ;
		else
			StepPlayer[playerid][slot] = ( StepPlayer[playerid][slot] != 4 ) ? ( StepPlayer[playerid][slot] + 1 ) : ( 2 ) ;

		reset_or( playerid , slot );
	}
	return 1;
}

stock drop_or(playerid)
{
	for(new U=0; U!=5; U++)
	{
		for(new T=0; T!=6;T++)
		{
			if(object_range[playerid][U][T] != -1)
			{
				DestroyPlayerObject(playerid, object_range[playerid][U][T]);
			}
			object_range[playerid][U][T] = -1;
		}
	}

	if(update_shoot[playerid] != PlayerText:-1)
	{
		PlayerTextDrawHide(playerid, update_shoot[playerid]);
		PlayerTextDrawDestroy(playerid, update_shoot[playerid]);

		update_shoot[playerid] = PlayerText:-1;
	}
	if(Timer_OnShootingRangeMoved[playerid] != -1) KillTimer(Timer_OnShootingRangeMoved[playerid]);

	StepPlayer[playerid][0] = -1;
	StepPlayer[playerid][1] = -1;
	return 1;
}

stock reset_or(playerid,slot, create = false)
{
	if(slot == 0 && create) StepPlayer[playerid][slot] = 0;
	else if(slot == 1 && create) StepPlayer[playerid][slot] = 2;

	new movetime;

	for(new i = 0; i != 6; i++) object_range[playerid][StepPlayer[playerid][slot]][i] = CreatePlayerObject(playerid,ms_or[i],orsp[StepPlayer[playerid][slot]][i][0],orsp[StepPlayer[playerid][slot]][i][1],orsp[StepPlayer[playerid][slot]][i][2],orsp[StepPlayer[playerid][slot]][i][3],orsp[StepPlayer[playerid][slot]][i][4],orsp[StepPlayer[playerid][slot]][i][5]);
	for(new i = 0; i != 6; i++)
	{
		movetime = MovePlayerObject(playerid,object_range[playerid][StepPlayer[playerid][slot]][i],orsp[StepPlayer[playerid][slot]][i][0],(StepPlayer[playerid][slot] < 2) ? (-122.26) : (-148.87),orsp[StepPlayer[playerid][slot]][i][2], 1.5);
	}

	if(create)
	{
		if(update_shoot[playerid] == PlayerText:-1)
		{
			update_shoot[playerid] = CreatePlayerTextDraw(playerid, 533.645812, 97.416664, "0:00");
			PlayerTextDrawLetterSize(playerid,update_shoot[playerid], 0.449999, 1.600000);
			PlayerTextDrawAlignment(playerid,update_shoot[playerid], 1);
			PlayerTextDrawColor(playerid,update_shoot[playerid], -1);
			PlayerTextDrawSetShadow(playerid,update_shoot[playerid], 0);
			PlayerTextDrawSetOutline(playerid,update_shoot[playerid], 1);
			PlayerTextDrawBackgroundColor(playerid,update_shoot[playerid], 255);
			PlayerTextDrawFont(playerid,update_shoot[playerid], 2);
			PlayerTextDrawSetProportional(playerid,update_shoot[playerid], 1);
		}
		PlayerTextDrawShow(playerid, update_shoot[playerid]);
		if(Timer_OnShootingRangeMoved[playerid] != -1) KillTimer(Timer_OnShootingRangeMoved[playerid]);
		Timer_OnShootingRangeMoved[playerid] = SetTimerEx("OnShootingRangeMoved", movetime + 500, 1, "i", playerid);
	}

	return 1;
}

stock UseCar(carid)
{
	foreach(i)
	{
		if(GetPlayerVehicleID(i) == carid) return true;
	}
	return false;
}
forward UpdateVehiclePos(vehicleid, type);
public UpdateVehiclePos(vehicleid, type)
{
	if(type == 1)
	{
		BanCar[vehicleid] = false;
	}
	GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
	GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
	return 1;
}
stock AC_TogglePlayerControllable(playerid,toggle)
{
	if(toggle>1)
		toggle=1;
	if(toggle<0)
		toggle=0;
	AC_PlayerToggle[playerid]=toggle;
	AC_PlayerToggleTime[playerid]=3+floatround(GetPlayerPing(playerid)/100);
	return TogglePlayerControllable(playerid,toggle);
}
stock AC_SetVehicleHealth(vehicleid,Float:health)
{
	VehHealth[vehicleid]=health;
	VehTime[vehicleid]=5;
	SetVehicleHealth(vehicleid,health);
	return 1;
}

CMD:dropstation(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	stringer[0] = EOS;
	for ( new i = 0 ; i < MAX_ROUTE ; i++ )
	{
		if ( gRouteMysqlID[i] != -1 )
		{
			format(stringer, 1500, "%s%i. %s\n",stringer,i+1,gRouteName[i]);
			//break;
		}
	}
	ShowPlayerDialog(playerid,dStationDelete,DIALOG_STYLE_LIST,""ORG"Выберите маршрут",stringer,"Выбрать", "Отмена");




	//gRouteMysqlID
	return 1;
}

CMD:createstation(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(GetPVarInt(playerid, "current_station")) return SendClientMessage ( playerid, -1, "Вы уже создаете маршрут" ) ;
	ShowPlayerDialog(playerid,dCreateStation,DIALOG_STYLE_INPUT,"Создание новой маршрута", "Укажите название нового маршрута", "Ввод", "Отмена");
	return 1;
}

CMD:createrace(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(is_create_race) return SendClientMessage ( playerid, -1, " В данный момент идёт создание трассы , ожидайте " ) ;
	ShowPlayerDialog(playerid,dCreateRace,DIALOG_STYLE_INPUT,"Создание новой трассы", "Укажите название новой трассы", "Ввод", "Отмена");
	return 1;
}


CMD:scp(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 12) return SendClientMessage ( playerid , -1, "Доступно с 12 уровня" );
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,-1,"/scp [0 - не остановка | 1 - остановка]");
	if(!GetPVarInt(playerid, "current_station")) return SendClientMessage ( playerid, -1, "Вы не создаете маршрут" ) ;
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,-1,"Вы не в машине");

	new slot = GetPVarInt(playerid, "current_station" ) - 1;
	new count_race = GetPVarInt(playerid, "count_station" );

	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");

	new Float:X, Float:Y, Float:Z, Float:A;
	GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
	GetVehicleZAngle(GetPlayerVehicleID(playerid), A);

	format(stringer, 144, "COUNT: %d", count_race ) ;
	SendClientMessage ( playerid, -1, stringer ) ;

	if ( count_race < 0 )
	{
		SendClientMessage ( playerid, -1, "Поставили на нуль" ) ;
		count_race = 0;
	}

	if(params[0] == 1){
		gRoutePos[slot][count_race][0] = 1.0;
		SendInf(playerid,"Чекпоинт помечен как остановка");
	}
	else {
		gRoutePos[slot][count_race][0] = 0.0;
	}
	gRoutePos[slot][count_race][1] = X;
	gRoutePos[slot][count_race][2] = Y;
	gRoutePos[slot][count_race][3] = Z;
	gRoutePos[slot][count_race][4] = A;

	new queryss[256];
	format(queryss,256,"UPDATE `Station` SET `pos%d`= '%02f|%02f|%02f|%02f|%02f' WHERE `id` = '%d'",count_race,
	gRoutePos[slot][count_race][0],
	gRoutePos[slot][count_race][1],
	gRoutePos[slot][count_race][2],
	gRoutePos[slot][count_race][3],
	gRoutePos[slot][count_race][4],gRouteMysqlID[slot]);
	mysql_pquery(connects, queryss, "", "");

	SetPVarInt(playerid, "count_station", count_race + 1 ) ;

	SetPlayerRaceCheckpoint(playerid,1,X,Y,Z,0.0,0.0,0.0,20.0);

	return 1;
}

CMD:cp(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;

	if(!is_create_race) return SendClientMessage(playerid,-1,"В данный момент не создаётся гонка");
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,-1,"Вы не в машине");

	new slot = GetPVarInt(playerid, "current_races" ) - 1;
	new count_race = GetPVarInt(playerid, "count_races" );

	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");

	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);

	RaceCheckPointData[slot][count_race][0] = X;
	RaceCheckPointData[slot][count_race][1] = Y;
	RaceCheckPointData[slot][count_race][2] = Z;

	new queryss[256];
	format(queryss,256,"UPDATE `Race` SET `pos%d`= '%02f|%02f|%02f' WHERE `name` = '%s'",count_race,X,Y,Z,RaceName[slot]);
	mysql_pquery(connects, queryss, "", "");

	SetPVarInt(playerid, "count_races", count_race + 1 ) ;

	SetPlayerRaceCheckpoint(playerid,1,X,Y,Z,0.0,0.0,0.0,20.0);

	return 1;
}

CMD:endstation(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	new slot = GetPVarInt(playerid, "current_station" ) - 1;

	if(!GetPVarInt(playerid, "current_station")) return SendClientMessage ( playerid, -1, "Вы не создаете маршрут" ) ;
	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");
	if(!GetPVarInt(playerid,"count_station")) return SendClientMessage(playerid,-1,"Вы не создали пока еще не одного чекпоинта");

	/*new queryss[256];
	format(queryss,256,"UPDATE `Race` SET `loop`= '%d' WHERE `name` = '%s'",params[0], RaceName[slot]);
	mysql_pquery(connects, queryss, "", "");*/

	SendClientMessage(playerid,-1, "Вы завершили создание маршрута");



	//is_create_station = false;

	//TotalStation++;

	DeletePVar(playerid, "current_station");
	DeletePVar(playerid, "count_station");
	return 1;
}

CMD:endrace(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	new slot = GetPVarInt(playerid, "current_races" ) - 1;

	if(!is_create_race) return SendClientMessage(playerid,-1,"В данный момент не создаётся гонка");
	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");
	if(!GetPVarInt(playerid,"count_races")) return SendClientMessage(playerid,-1,"Вы не создали пока еще не одного чекпоинта");

	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid,-1,"/endrace [количество кругов]");

	RaceLoop[slot]=params[0];

	new queryss[256];
	format(queryss,256,"UPDATE `Race` SET `loop`= '%d' WHERE `name` = '%s'",params[0], RaceName[slot]);
	mysql_pquery(connects, queryss, "", "");

	SendClientMessage(playerid,-1, "Вы завершили создание гонки");

	for ( new A = 0; A < 4; A++)
	{
		for ( new B = 0; B < 3; B++)
		{
			if ( SpawnCarRacePos[slot][A][B] == 0.0 ) return SendClientMessage(playerid,-1,"Установите позицию спавна машин ( /pos [ 1 - 4 ] ) ");
		}
	}


	is_create_race = false;

	TotalRaces++;

	DeletePVar(playerid, "current_races");
	DeletePVar(playerid, "count_races");
	return 1;
}

CMD:sback(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	new slot = GetPVarInt(playerid, "current_station" ) - 1;
	new count_race = GetPVarInt(playerid, "count_station" );

	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");
	else if(!count_race) return SendClientMessage(playerid,-1,"Создай чекпоинт");
	else if(!GetPVarInt(playerid, "current_station")) return SendClientMessage ( playerid, -1, "Вы не создаете маршрут" ) ;
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,-1,"Вы не в машине");

	count_race--;

	AC_SetVehiclePos(GetPlayerVehicleID(playerid),
		gRoutePos[slot][count_race][1],
		gRoutePos[slot][count_race][2],
		gRoutePos[slot][count_race][3]);
	AC_SetVehicleZAngle(GetPlayerVehicleID(playerid), gRoutePos[slot][count_race][4]);

	SetPVarInt(playerid, "count_station", count_race ) ;

	return 1;
}

CMD:back(playerid)
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	new slot = GetPVarInt(playerid, "current_races" ) - 1;
	new count_race = GetPVarInt(playerid, "count_races" );

	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");
	else if(!count_race) return SendClientMessage(playerid,-1,"Создай чекпоинт");
	else if(!is_create_race) return SendClientMessage(playerid,-1,"В данный момент не создаётся гонка");
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,-1,"Вы не в машине");

	count_race--;

	SetVehiclePos(GetPlayerVehicleID(playerid), RaceCheckPointData[slot][count_race][0], RaceCheckPointData[slot][count_race][1], RaceCheckPointData[slot][count_race][2]);

	SetPVarInt(playerid, "count_races", count_race ) ;

	return 1;
}

CMD:pos(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 12) return 1;
	if(!is_create_race) return SendClientMessage(playerid,-1,"В данный момент не создаётся гонка");

	new slot = GetPVarInt(playerid, "current_races" ) - 1;
	if(slot == -1) return SendClientMessage(playerid,-1,"Вы не создаёте гонку");
	new number_pos = 0;
	if(sscanf(params,"i",number_pos)) return SendClientMessage(playerid,-1,"/pos [1-4]");
	else if(number_pos < 1 || number_pos > 4) return SendClientMessage(playerid,-1,"/pos [1-4]");
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,-1,"Вы не в машине");

	new Float:X, Float:Y, Float:Z, Float:R;
	GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
	GetVehicleZAngle(GetPlayerVehicleID(playerid), R);

	SpawnCarRacePos[slot][number_pos-1][0] = X;
	SpawnCarRacePos[slot][number_pos-1][1] = Y;
	SpawnCarRacePos[slot][number_pos-1][2] = Z;
	SpawnCarRacePos[slot][number_pos-1][3] = R;

	format(stringer, 128, "Позиция для машины номер %d установлена (слот гонки : %d)",number_pos,slot);
	SendClientMessage(playerid,-1,stringer);


	new queryss[256];
	format(queryss,256,"UPDATE `Race` SET `poscar%d`= '%02f|%02f|%02f|%02f' WHERE `name` = '%s'",number_pos,X,Y,Z,R,RaceName[slot]);
	mysql_pquery(connects, queryss, "", "");

	return 1;
}

stock Float:fparam(const source[], substrIndex = 0, delimiter = ' ')
{
	new dest[40], cur, pre, i = -1;
	for(;;cur++)
	{
		if(source[cur] == 0)
		{
			if(++i == substrIndex)strmid(dest, source, pre, cur, 40);
			goto fparam_end;
		}
		if(source[cur] == delimiter)
		{
			if(++i == substrIndex)
			{
				strmid( dest, source, pre, cur, 40);
				goto fparam_end;
			}
			pre = cur + 1;
		}
	}
	fparam_end: return floatstr(dest);
}
stock IsARPName(Name[])
{
	new simb_, RP_Name[2][24];
	new playerid;
	for(new i = 0;i < strlen(Name);i ++)
	{
		if(Name[i] == '_') simb_ ++;
	}
	if(simb_ != 1) return false;
	sscanf(Name,"p<_>s[24]s[24]",RP_Name[0],RP_Name[1]);
	if( !IsAGoodName(RP_Name[0]) || !IsAGoodName(RP_Name[1]) ) return false;
	if( IsPlayerNPC(playerid)) return true;
	return true;
}
stock IsAGoodName(Name[])
{
	new playerid;
	new NameChars;
	if(IsPlayerNPC(playerid))return 1;
	if(strlen(Name) < 2) return false;
	if(Name[0] < 'A' || Name[0] > 'Z') return false;
	for(new i = 1;i < strlen(Name);i ++)
	{
		if(Name[i] < 'a' || Name[i] > 'z')
		{
			if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
			else return false;
		}
		if(NameChars > 1) return false;
	}
	return true;
}
stock IsVehicleDrivingBackwards(vehicleid) {// By Joker
	new Float:Float[3];
	if(GetVehicleVelocity(vehicleid, Float[1], Float[2], Float[0])) {
		GetVehicleZAngle(vehicleid, Float[0]);
		if(Float[0] < 90) {
			if(Float[1] > 0 && Float[2] < 0) return true;
		}
		else if(Float[0] < 180) {
			if(Float[1] > 0 && Float[2] > 0) return true;
		}
		else if(Float[0] < 270) {
			if(Float[1] < 0 && Float[2] > 0) return true;
		}
		else if(Float[1] < 0 && Float[2] < 0) return true;
	}
	return false;
}

stock WriteHouseLog(name[], text[])
{
	new name_form[64];
	//gettime(gtime[0], gtime[1], gtime[2]);

	format(name_form,64,"/house/%s_house.log", name);

	new File:handle = fopen(name_form, io_append);

	new put_log_house [ 1000 ] ;
	format(put_log_house, 1000, "[%02d:%02d:%02d] %s\n", tmphour, tmpminute, tmpsecond, text);
	fwriteex(handle, put_log_house);
	fclose(handle);
	return 1;
}

forward UpdateActorTextMast ( id , type ) ;
public UpdateActorTextMast ( id , type )
{

	new tick = 1000;
	switch( mast_actor_count [ id ] )
	{
		case 0:
		{
			UpdateDynamic3DTextLabelText(mast_actor_text [ id ], 0xAFAFAFFF, "- Я очень рад что вы зашли в моё СТО \"Los Santos\".");
			tick = 2800;
		}
		case 1:
		{
			UpdateDynamic3DTextLabelText(mast_actor_text [ id ], 0xAFAFAFFF, "- Я покажу вам свой спектр услуг:");
			tick = 2500;
		}
		case 2:
		{
			UpdateDynamic3DTextLabelText(mast_actor_text [ id ], 0xAFAFAFFF, "- Это спойлеры, нитро, колёса, выхлопные трубы и так далее.");
			tick = 3400;
		}
		case 3:
		{
			UpdateDynamic3DTextLabelText(mast_actor_text [ id ], 0xAFAFAFFF, "- Всё в очень хорошем состоянии. \nЯ думаю вам у меня понравится.");
			tick = 3350;
		}
		case 4:
		{
			UpdateDynamic3DTextLabelText(mast_actor_text [ id ], 0xAFAFAFFF, "- Приступайте к выбору деталей для вашего транспорта.");
			tick = 3000;
		}
		default:
		{
			if ( mast_actor_id [ id ] != -1)
			{
				SetCameraBehindPlayer( mast_actor_id [ id ] );
				ShowPlayerDialog ( mast_actor_id [ id ] , dTuningSucces, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}Информация", "{ffffff}Приступить к выбору деталей?", "Да", "Нет");

				mast_actor_id [ id ] = -1;
			}
			UpdateDynamic3DTextLabelText(mast_actor_text [ id ], 0xAFAFAFFF, "");
			ApplyActorAnimation ( mast_actor [ id ] , "INT_OFFICE", "OFF_Sit_Idle_Loop", 4.1, 1, 1, 1, 1, 1 ) ;
			mast_actor_count [ id ] = 0;
			UpdateActorTextMast_Timer [ 0 ] = -1;
			return 0;
		}
	}
	ApplyActorAnimation ( mast_actor [ id ] , "INT_OFFICE", "OFF_Sit_Read", 4.1, 1, 1, 1, 1, 1 ) ;
	mast_actor_count [ id ] ++;
	UpdateActorTextMast_Timer [ 0 ] = SetTimerEx ( "UpdateActorTextMast", tick, 0, "ii", id, type);
	return 1;
}




forward OnPlayerLoadTune(playerid);
public OnPlayerLoadTune(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		ShowPlayerDialog ( playerid , dTuningSucces4, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}Информация", "{ffffff}Вы не пользовались услугами мастерской", "Назад", "");
		return 1;
	}
	new detail[16],date_time[32],number,remain;
	stringer = "{ffffff}";
	for(new i = 0; i < rows; i++)
	{
		cache_get_value(i, "detail",detail,16);
		cache_get_value(i, "date",date_time,32);
		cache_get_value_int(i,"number",number);
		cache_get_value_int(i,"remain",remain);
		format(stringer, 1500, "%s%d\t{33aa33}%d {ffffff}$\t%s\t{AFAFAF}%s{FFFFFF}\n",stringer,number,remain,date_time,detail);
	}
	ShowPlayerDialog ( playerid , dTuningSucces4, DIALOG_STYLE_MSGBOX, "{"#cORANGE"}История", stringer, "Назад", "");
	return 1;
}


stock InitAttachedAccesories(playerid, accesories_id)
{
	new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
	count_acc_show[playerid] = 0;

	GetOffsetAttachedAccesories(id_acc[accesories_id][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);
	if ( accesories_id == 9 ) SetPlayerAttachedObject(playerid,0,id_acc[accesories_id][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
	else if ( accesories_id == 10 ) SetPlayerAttachedObject(playerid,0,id_acc[accesories_id][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
	else SetPlayerAttachedObject(playerid,0,id_acc[accesories_id][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

	return 1;
}

stock GetOffsetAttachedAccesories(modelid, &Float:fx, &Float:fy, &Float:fz, &Float:frx, &Float:fry, &Float:frz)
{
	switch(modelid)
	{
		case 3026:
		{
			fx = -0.15; fy = -0.10; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 371:
		{
			fx = 0.0; fy = -0.10; fz = 0.0; frx = 0.0; fry = 90.0; frz = 0.0;
		}
		case 19559:
		{
			fx = 0.0; fy = 0.0; fz = 0.0; frx = 0.0; fry = 90.0; frz = 0.0;
		}
		case 19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053:
		{
			fx = 0.00; fy = -0.02; fz = 0.03; frx = 0.0; fry = 90.0; frz = 180.0;
		}
		case 19553:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = -20.0; frz = -20.0;
		}
		case 18947,18948,19519:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19487:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 0.0;
		}
		case 18962,19095,19096,19097,19098,19099,19100,19528:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 180.0; frz = 180.0;
		}
		case 18971:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920:
		{
			fx = 0.05; fy = 0.02; fz = 0.00; frx = 90.0; fry = 180.0; frz = 90.0;
		}
		case 19006,19009,19010,19011,19013,19014,19015,19016,19017,19018,19020,19021,19022,19023,19024,19026,19027,19029,19030,19032,19033,19035:
		{
			fx = 0.1; fy = 0.04; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18891,18892,18893,18894,18895,18896,18897,18898,18899:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 90.0; fry = 180.0; frz = 90.0;
		}
		case 18922,18923,18924,18925:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19102,19103,19104,19105,19106,19107,19108,19109,19110:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 18955,18956,18957,18958,18959:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18939,18940,18941,18942,18943,18927,18928,18929,18930,18931,18933,18934,18935:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19111,19112,19113,19117,19118,19119:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 18967:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 19554:
		{
			fx = 0.18; fy = -0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19069:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18953,18954:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 18970,18969,18968,18973,18972:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18950,18949,18951,18946,18932,18926,18945:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19140,19139,19138,19133,19034,19031,19028,19025,19019,19012,19008,19007:
		{
			fx = 0.1; fy = 0.04; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 19421,19422,19423,19424:
		{
			fx = 0.06; fy = 0.02; fz = 0.0; frx = 90.0; fry = 180.0; frz = 90.0;
		}
	}
	return 1;
}

stock UpdateAccesories(playerid)
{
	new mysql_update_acc_string [ 600 ] ;
	format ( mysql_update_acc_string , 600 , "UPDATE `accounts` SET `acc_player_0` = '%d,%.4f,%.4f,%.4f',`acc_player_1` = '%d,%.4f,%.4f,%.4f',`acc_player_2` = '%d,%.4f,%.4f,%.4f',`acc_player_3` = '%d,%.4f,%.4f,%.4f',`acc_player_4` = '%d,%.4f,%.4f,%.4f' WHERE `ID` = '%d'",
	acc_player[playerid][acc_object_id][0],acc_player[playerid][acc_object_x][0],acc_player[playerid][acc_object_y][0],acc_player[playerid][acc_object_z][0],
	acc_player[playerid][acc_object_id][1],acc_player[playerid][acc_object_x][1],acc_player[playerid][acc_object_y][1],acc_player[playerid][acc_object_z][1],
	acc_player[playerid][acc_object_id][2],acc_player[playerid][acc_object_x][2],acc_player[playerid][acc_object_y][2],acc_player[playerid][acc_object_z][2],
	acc_player[playerid][acc_object_id][3],acc_player[playerid][acc_object_x][3],acc_player[playerid][acc_object_y][3],acc_player[playerid][acc_object_z][3],
	acc_player[playerid][acc_object_id][4],acc_player[playerid][acc_object_x][4],acc_player[playerid][acc_object_y][4],acc_player[playerid][acc_object_z][4], p_info[playerid][pID]);
	mysql_pquery(connects, mysql_update_acc_string, "", "");

	//printf ( "[ UpdateAccesories ] %s", mysql_update_acc_string ) ;

	return 1;
}

stock Insert_Reason_Jail(id_account_player, admin_name[], reason[])
{
	string_replace(reason, ''', ' ') ;
	new mysql_insert_mj [ 512 ] ;
	mysql_format ( connects, mysql_insert_mj, 512, "INSERT INTO `get_jail_or_mute`(`id_account`, `Admin_Jail`, `Reason_Jail`,  `time`) VALUES ('%d','%s','%s',NOW())", id_account_player, admin_name, reason);
	mysql_pquery(connects, mysql_insert_mj, "", "");
	return 1;
}

stock Insert_Reason_Mute(id_account_player, admin_name[], reason[])
{
	string_replace(reason, ''', ' ') ;
	new mysql_insert_mj [ 512 ] ;
	mysql_format ( connects, mysql_insert_mj, 512, "INSERT INTO `get_jail_or_mute`(`id_account`, `Admin_Mute`, `Reason_Mute`,  `time`) VALUES ('%d','%s','%s',NOW())", id_account_player, admin_name, reason);
	mysql_pquery(connects, mysql_insert_mj, "", "");

	return 1;
}

stock Insert_Reason_Warn(id_account_player, admin_name[], reason[])
{
	string_replace(reason, ''', ' ') ;
	new mysql_insert_mj [ 512 ] ;
	mysql_format ( connects, mysql_insert_mj, 512, "INSERT INTO `get_jail_or_mute`(`id_account`, `Admin_Warn`, `Reason_Warn`,  `time`) VALUES ('%d','%s','%s',NOW())", id_account_player, admin_name, reason);
	mysql_pquery(connects, mysql_insert_mj, "", "");

	return 1;
}

stock Elevator_OpenDoors22()
{//открывание дверей лифта
	new Float:x, Float:y, Float:z;
	GetObjectPos(Obj_ElevatorDoors22[0], x, y, z);
	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_L_OPENED22, -1609.0200, z, DOORS_SPEED22);
	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_R_OPENED22, -1609.6200, z, DOORS_SPEED22);

	return 1;
}



stock Floor_OpenDoors22(floorid)
{//открывание дверей этажа
	MoveDynamicObject(Obj_FloorDoors22[floorid][0], X_DOOR_L_OPENED22 - 0.05, -1609.3100, GetDoorsZCoordForFloor22(floorid), DOORS_SPEED22);
	MoveDynamicObject(Obj_FloorDoors22[floorid][1], X_DOOR_R_OPENED22 - 0.05, -1609.9100, GetDoorsZCoordForFloor22(floorid), DOORS_SPEED22);
	PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(floorid) + 5.0);

	return 1;
}

public Elevator_MoveToFloor22(floorid)
{//начало движения лифта
	ElevatorState22 = 2;
	ElevatorFloor22 = floorid;
	MoveObject(Obj_Elevator22, 287.9500, -1609.3200, GetElevatorZCoordForFloor22(floorid), 0.25);
	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), 0.25);
	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), 0.25);
	if ( Label_Elevator22 != Text3D:INVALID_3DTEXT_ID ) DestroyDynamic3DTextLabelEx(Label_Elevator22);
	ElevatorBoostTimer22 = SetTimerEx("Elevator_Boost22", 1000, 0, "i", floorid);//таймер перехода на увеличенную скорость

	return 1;
}



public Elevator_Boost22(floorid)
{//продолжение движения лифта с увеличенной скоростью
	StopObject(Obj_Elevator22);
	StopObject(Obj_ElevatorDoors22[0]);
	StopObject(Obj_ElevatorDoors22[1]);
	MoveObject(Obj_Elevator22, 287.9500, -1609.3200, GetElevatorZCoordForFloor22(floorid), ELEVATOR_SPEED22);
	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), ELEVATOR_SPEED22);
	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, GetDoorsZCoordForFloor22(floorid), ELEVATOR_SPEED22);

	return 1;
}



public Elevator_TurnToIdle22()
{//очередь обслуживания
	ElevatorState22 = 0;
	ReadNextFloorInQueue22();//закрывание дверей лифта и этажа перед началом движения

	return 1;
}



stock ReadNextFloorInQueue22()
{//закрывание дверей лифта и этажа перед началом движения
	if(ElevatorState22 != 0 || ElevatorQueue22[0] == -1){return 1;}//если очередь обслуживания пустая, то завершить функцию
	if(ElevatorState22 == 2){return 1;}//если лифт в движении, то завершить функцию
	ElevatorState22 = 1;//присвоить лифту статус "занят"
	new Float:x, Float:y, Float:z;
	GetObjectPos(Obj_ElevatorDoors22[0], x, y, z);
	MoveObject(Obj_ElevatorDoors22[0], X_DOOR_CLOSED22, -1609.3200, z, DOORS_SPEED22);
	MoveObject(Obj_ElevatorDoors22[1], X_DOOR_CLOSED22, -1609.3200, z, DOORS_SPEED22);
	MoveDynamicObject(Obj_FloorDoors22[ElevatorFloor22][0], X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22), DOORS_SPEED22);
	MoveDynamicObject(Obj_FloorDoors22[ElevatorFloor22][1], X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22), DOORS_SPEED22);
	PlaySoundForPlayersInRange(6401, 10.0, X_DOOR_CLOSED22, -1609.6100, GetDoorsZCoordForFloor22(ElevatorFloor22) + 5.0);
	new Float:dop22, string[128], dop;//вычисление задержки перед началом движения лифта
	dop22 = ( 1 / DOORS_SPEED22 ) * 2000;
	format(string, sizeof(string), "%f", dop22);
	dop = strval(string);
	SetTimerEx("Elevator_MoveToFloor22", dop, 0, "i", ElevatorQueue22[0]);//таймер задержки начала движения лифта

	return 1;
}

stock CallElevator22(playerid, floorid, elevator)
{//вызов, или начало движения лифта
	new dop = 0;
	for(new i; i < sizeof(ElevatorQueue22); i ++)
	{
		if(ElevatorQueue22[i] == floorid){dop = 1;}
	}

	if(FloorRequestedBy22[floorid] != 10000 || dop == 1)
	{
		if(elevator == 1){return 1;}
		SendClientMessage(playerid, 0x00CC00FF, "{00CC00}» {ffffff}Ваш вызов уже находится, в очереди обслуживания !");
		return 1;
	}
	if(elevator == 0){SendClientMessage(playerid, 0x00CC00FF, "{00CC00}» {ffffff}Вы вызвали лифт, ожидайте он скоро приедет !");}
	FloorRequestedBy22[floorid] = playerid;//занятие места игрока в очереди обслуживания
	new slot = -1;//запись вызова, или начала движения лифта в очередь обслуживания
	new i = 0;
	while(i < sizeof(ElevatorQueue22))
	{
		if(ElevatorQueue22[i] == -1)
		{
			slot = i;
			break;
		}
		i ++;
	}
	if(slot != -1)
	{
		ElevatorQueue22[slot] = floorid;
		if(ElevatorState22 == 0){ReadNextFloorInQueue22();}//если лифт свободен, то перейти к закрыванию дверей
	}

	return 1;
}



public Float:GetElevatorZCoordForFloor22(floorid) return (GROUND_Z_COORD22 + FloorZOffsets22[floorid] + ELEVATOR_OFFSET22); //вычисление координат лифта
public Float:GetDoorsZCoordForFloor22(floorid) return (GROUND_Z_COORD22 + FloorZOffsets22[floorid]); //вычисление координат дверей



CMD:test_color(playerid, params[])
{
	if(sscanf(params, "hs[144]", params[0], params[1])) return SendClientMessage(playerid, -1, " /test_color [color] [text]");

	format ( stringer , 144 , "%s", params[1] ) ;
	SendClientMessage(playerid, params[0], stringer);
	return 1;
}

stock DestroyDynamic3DTextLabelEx(&Text3D:text)
{
	DestroyDynamic3DTextLabel(text);
	text = Text3D:INVALID_3DTEXT_ID;
}

stock T_IsValid3DTextLabel(Text3D:textid)
{
	if(textid != Text3D:INVALID_3DTEXT_ID) return 1;
	else return 0;
}

/*stock DestroyDynamic3DTextLabel_log(&Text3D:text, floor__we = false)
{
	if ( floor__we ) return 0 ;
	if ( text == Label_Elevator22 )
	{
		print ( "Удалили 3dText _ Label_Elevator22" ) ;
	}
	else if ( text == foot_ball_info[DI_3DTextID] )
	{
		print ( "Удалили 3dText _ foot_ball_info[DI_3DTextID]" ) ;
	}
	else
	{
		print ( "Удалили 3dText") ;
	}
	DestroyDynamic3DTextLabel(text , true);
	return 1;
}*/
/*stock CountVehicles()
{
	new carid = AddStaticVehicleEx(400, -100, -100, -100, 0, 0, 0, 0);
	DestroyVehicle(carid);
	return carid;
}*/



forward Detect_Active ( playerid, aimedid ) ;
public Detect_Active ( playerid, aimedid )
{
	if(active_time[playerid] > -1)
	{
		if(Targetplayer[playerid] == aimedid)
		{
			if(aimedid != INVALID_PLAYER_ID)
			{
				UpdatePlayerHealh(playerid,aimedid);
				UpdatePlayerArmor(playerid,aimedid);
			}
			else
			{
				if(active_time[playerid] != -1)
				{
					KillTimer(active_time[playerid]);
					active_time[playerid] = -1;
				}
				Targetplayer[playerid] = -1;
				for(new gu = 0; gu < 8; gu++) PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][gu]);
			}
		}
		else
		{
			if(active_time[playerid] != -1)
			{
				KillTimer(active_time[playerid]);
				active_time[playerid] = -1;
			}
			Targetplayer[playerid] = -1;
			for(new gu = 0; gu < 8; gu++) PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][gu]);
		}
	}
	return 1;
}
stock target_player(playerid)
{
	new plr = GetPlayerTargetPlayer(playerid);
	if(plr != INVALID_PLAYER_ID)
	{
		//Auto_Shot[playerid]=GetTickCount();
		Targetplayer[playerid] = plr;

		new namesaa[30];
		format(namesaa,sizeof(namesaa),"%s - %i",NamePlayer[plr],plr);
		PlayerTextDrawSetString(playerid,GUI_targetsystem[playerid][1],namesaa);

		UpdatePlayerHealh(playerid,plr);
		UpdatePlayerArmor(playerid,plr);

		PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][0]);
		PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][1]);
		PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][4]);
		PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][5]);
		PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][6]);
		PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][7]);

		if(active_time[playerid] != -1)
		{
			KillTimer(active_time[playerid]);
			active_time[playerid] = -1;
		}
		active_time[playerid] = SetTimerEx("Detect_Active", 500, true, "ii", playerid, plr);

		return plr;
	}
	untarget(playerid);
	return INVALID_PLAYER_ID;
}
stock untarget(playerid)
{
	if(active_time[playerid] != -1)
	{
		KillTimer(active_time[playerid]);
		active_time[playerid] = -1;
	}
	Targetplayer[playerid] = -1;

	for(new gu = 0; gu < 8; gu++) PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][gu]);
	return 1;
}

stock untarget_onAFK(playerid)
{
	if(active_time[playerid] != -1)
	{
		KillTimer(active_time[playerid]);
		active_time[playerid] = -1;
	}
	Targetplayer[playerid] = -1;

	for(new gu = 0; gu < 8; gu++) PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][gu]);
	return 1;
}
stock UpdatePlayerHealh(playerid,aimplayer)
{
	new yankeys[5], Float:yan_health;
	GetPlayerHealth ( aimplayer , yan_health ) ;
	new Float:create_x = 274.666503 + yan_health;
	if(yan_health > 2.666565) create_x = 274.666503 + (yan_health-2.666565);
	PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][2]);
	PlayerTextDrawDestroy(playerid, GUI_targetsystem[playerid][2]);
	GUI_targetsystem[playerid][2] = CreatePlayerTextDraw(playerid, create_x, 25.729627, "_");// 274.666503
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][2], 0.000000, 0.134773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][2], 272.000061, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][2], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][2], -1205657476);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][2], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][2], 0);
	if(!(yan_health <= 0.0)) PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][2]);
	format(yankeys, 5, "%.0f",yan_health);
	PlayerTextDrawSetString(playerid,GUI_targetsystem[playerid][6],yankeys);
	return 1;
}



stock UpdatePlayerArmor(playerid,aimplayer)
{
	new yankeys[5], Float:yan_bronya ;
	GetPlayerArmour ( aimplayer , yan_bronya ) ;
	new Float:to__x = 274.666503 + yan_bronya;
	if(yan_bronya > 2.666565)
	{
		to__x = 274.666503 + (yan_bronya - 2.666565);
	}
	PlayerTextDrawHide(playerid, GUI_targetsystem[playerid][3]);
	PlayerTextDrawDestroy(playerid, GUI_targetsystem[playerid][3]);
	GUI_targetsystem[playerid][3] = CreatePlayerTextDraw(playerid, to__x, 31.707405, "_");
	PlayerTextDrawLetterSize(playerid, GUI_targetsystem[playerid][3], 0.000000, 0.134773);
	PlayerTextDrawTextSize(playerid, GUI_targetsystem[playerid][3], 272.000061, 0.000000);
	PlayerTextDrawAlignment(playerid, GUI_targetsystem[playerid][3], 1);
	PlayerTextDrawColor(playerid, GUI_targetsystem[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, GUI_targetsystem[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, GUI_targetsystem[playerid][3], 5603477);
	PlayerTextDrawSetShadow(playerid, GUI_targetsystem[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, GUI_targetsystem[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, GUI_targetsystem[playerid][3], -16776961);
	PlayerTextDrawFont(playerid, GUI_targetsystem[playerid][3], 0);
	PlayerTextDrawShow(playerid, GUI_targetsystem[playerid][3]);
	format(yankeys, sizeof(yankeys), "%.0f", yan_bronya);
	PlayerTextDrawSetString(playerid,GUI_targetsystem[playerid][7],yankeys);
	return 1;
}

forward Go_PVP_TIME(dd);
public Go_PVP_TIME(dd)
{
	new go_pvp_string[20];
	format(go_pvp_string,20,"%d",duel_[dd][duel_time]);
	GameTextForPlayer(duel_[dd][duel_id], go_pvp_string, 990, 6);
	GameTextForPlayer(duel_[dd][duel_to_id], go_pvp_string, 990, 6);

	duel_[dd][duel_time]--;
	if(duel_[dd][duel_time]<=-1)
	{
		GameTextForPlayer(duel_[dd][duel_id], "   ", 990, 6);
		GameTextForPlayer(duel_[dd][duel_to_id], "   ", 990, 6);

		SetPlayerVirtualWorld(duel_[dd][duel_id],duel_[dd][duel_to_id]+1);
		SetPlayerVirtualWorld(duel_[dd][duel_to_id],duel_[dd][duel_to_id]+1);

		AC_GivePlayerWeapon(duel_[dd][duel_id], duel_[dd][duel_gun], 700);
		AC_GivePlayerWeapon(duel_[dd][duel_to_id], duel_[dd][duel_gun], 700);

		duel_[dd][duel_time] = 0;
		KillTimer(duel_[dd][duel_timer]);
	}
	return 1;
}


stock DropGun(playerid,weaponid,ammo,edit=false,count_guns=0)
{
	if ( GPDIO [ weaponid ] == 0 ) return SendClientMessage( playerid, -1, " Это оружие нельзя выбросить ");
	for(new freeslot=0;freeslot<MAX_DROP_GUNS;freeslot++)
	{
		if(drop_gun[freeslot][dg_object] != -1) continue;
		new Float: pos [ 4 ] ;
		GetPlayerPos ( playerid, pos [ 0 ] , pos [ 1 ] , pos [ 2 ] );
		GetPlayerFacingAngle ( playerid, pos [ 3 ] ) ;
		pos [ 3 ] += floatmul(90.0,float(count_guns));

		if(count_guns > 4 && count_guns < 8)
		{
			pos [ 0 ] += 1.0 * floatsin ( -pos [ 3 ] , degrees );
			pos [ 1 ] += 1.0 * floatcos ( -pos [ 3 ] , degrees );
		}
		else if(count_guns >= 8)
		{
			pos [ 0 ] += 2.0 * floatsin ( -pos [ 3 ] , degrees );
			pos [ 1 ] += 2.0 * floatcos ( -pos [ 3 ] , degrees );
		}

		drop_gun[freeslot][dg_object] = CreateDynamicObject ( GPDIO [ weaponid ] , 	pos [ 0 ] + 1.0 * floatsin ( -pos [ 3 ] , degrees ), pos [ 1 ] + 1.0 * floatcos ( -pos [ 3 ] , degrees ), pos [ 2 ] - 0.8 , 96, 110 , pos [ 3 ] ) ;
		drop_gun[freeslot][dg_gun]  =  weaponid ;
		drop_gun[freeslot][dg_ammo] = ammo;
		Streamer_Update ( playerid ) ;
		if(edit)
		{
			EditDynamicObject ( playerid , drop_gun[freeslot][dg_object] ) ;
			SetPVarInt(playerid,"f_freeslot",freeslot+1);
		}
		else
		{
			drop_gun[freeslot][dg_time] = 60;
			drop_gun[freeslot][dg_timer] = SetTimerEx("UpdateDGTime",1000,true,"d", freeslot);
			//drop_gun[freeslot][dg_area] = CreateDynamicSphere ( pos [ 0 ] + 1.0 * floatsin ( -pos [ 3 ] , degrees ), pos [ 1 ] + 1.0 * floatcos ( -pos [ 3 ] , degrees ), pos [ 2 ] , 1.0 ) ;
			format(stringer,512,""STANDART_GUN_TEXT"", WeaponNames[drop_gun[freeslot][dg_gun]],drop_gun[freeslot][dg_ammo]);
			if(drop_gun[freeslot][dg_text] == Text3D:-1) drop_gun[freeslot][dg_text] = Create3DTextLabel(stringer,0xFFFFFFFF, pos [ 0 ] + 1.0 * floatsin ( -pos [ 3 ] , degrees ), pos [ 1 ] + 1.0 * floatcos ( -pos [ 3 ] , degrees ), pos [ 2 ] + 0.2, 10.5, GetPlayerVirtualWorld(playerid));
		}
		break;
	}
	return true;
}


forward UpdateDGTime(slot);
public UpdateDGTime(slot)
{
	drop_gun[slot][dg_time] --;
	if(drop_gun[slot][dg_time]<=0){
		//DestroyDynamicArea(drop_gun[slot][dg_area]);
		//drop_gun[slot][dg_area]=-1;
		DestroyDynamicObject(drop_gun[slot][dg_object]);
		drop_gun[slot][dg_object]=-1;
		if(drop_gun[slot][dg_text] != Text3D:-1)
		{
			Delete3DTextLabel(drop_gun[slot][dg_text]);
			drop_gun[slot][dg_text] = Text3D:-1;
		}
		KillTimer(drop_gun[slot][dg_timer]);
		drop_gun[slot][dg_timer] = -1;
		return 1;
	}
	format(stringer,512,""STANDART_GUN_TEXT"\nДо удаления: %d секунд", WeaponNames[drop_gun[slot][dg_gun]],drop_gun[slot][dg_ammo],drop_gun[slot][dg_time]);
	if(drop_gun[slot][dg_text] != Text3D:-1) Update3DTextLabelText(drop_gun[slot][dg_text],-1,stringer);
	return 1;
}

forward AdminColore(playerid);
public AdminColore(playerid)
{
	if(unix - p_info[playerid][pAFK] == 0)
	{
		new ttext[46];
		switch (p_info[playerid][pAdmin])
		{
			case 1: ttext = ".:: Практикант ::.";
			case 2: ttext = ".:: Ст.Практикант ::.";
			case 3: ttext = ".:: Мл.Модератор ::.";
			case 4: ttext = ".:: Модератор ::.";
			case 5: ttext = ".:: Ст.Модератор ::.";
			case 6: ttext = ".:: Гл.Модератор ::.";
			case 7: ttext = ".:: Мл.Администратор ::.";
			case 8: ttext = ".:: Администратор ::.";
			case 9: ttext = ".:: Ст.Администратор ::.";
			case 10: ttext = ".:: Зам. Гл.Администратора ::.";
			case 11: ttext = ".:: Главный Администратор ::.";
			case 12: ttext = ".:: Основатель ::.";
		}

		Update3DTextLabelText(TextHead[playerid], colorseee[colorheads[playerid]][colorname], ttext);
		SetPlayerColor(playerid,colorseee[colorheads[playerid]][colorname]);
		colorheads[playerid]++;
	}
	if(colorheads[playerid] == 49)
	{
		colorheads[playerid] = 1;
	}
	return 1;
}
stock StopSurfboard(sbid)
{
	if(!IsSurfboardCreated(sbid)) return false;
	surfboardData[sbid][sppeed] = 0.0;
	StopObject(surfboardData[sbid][surf_objectID]);
	return true;
}
stock IsPlayerAtSurfboard(playerid, sbid)
{
	new Float:pos[3];
	GetObjectPos(surfboardData[sbid][surf_objectID], pos[0], pos[1], pos[2]);
	if(IsPlayerInRangeOfPoint(playerid, 3.0, pos[0], pos[1], pos[2])) return true;
	return false;
}
stock IsPlayerAtAnySurfboard(playerid)
{
	new a = 0;
	for(a = 0; a < MAX_PLAYERS; a++)
	{
		if(IsPlayerAtSurfboard(playerid, a)) return a;
	}
	return -1;
}

stock IsSurfboardOccupied(sbid)
{
	if(!IsSurfboardCreated(sbid)) return INVALID_PLAYER_ID;
	foreach(u)
	{
		if(SurfPlayerUse[u] == sbid) return u;
	}
	return INVALID_PLAYER_ID;
}
stock CreateSurfboard(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz = 0.0)
{
	surfboardID++;
	if(surfboardID == MAX_PLAYERS)
	{
		surfboardID--;
		return -1;
	}
	new toSurfboardID = GetFreeSurfboardID();
	if(toSurfboardID == -1)
	{
		surfboardID--;
		return -1;
	}
	surfboardData[toSurfboardID][modelID] = modelid;
	surfboardData[toSurfboardID][position][0] = x;
	surfboardData[toSurfboardID][position][1] = y;
	surfboardData[toSurfboardID][position][2] = z;
	surfboardData[toSurfboardID][position][3] = rx;
	surfboardData[toSurfboardID][position][4] = ry;
	surfboardData[toSurfboardID][position][5] = rz;
	surfboardData[toSurfboardID][position][6] = rz;
	surfboardData[toSurfboardID][sppeed] = 0.0;
	surfboardData[toSurfboardID][surf_objectID] = CreateObject(modelid, x, y, z, rx, ry, rz);
	printf("modelid: %d toSurfboardID: %d %d",modelid,toSurfboardID,surfboardID);
	printf("surfboardData[toSurfboardID][surf_objectID]: %d", surfboardData[toSurfboardID][surf_objectID]);
	return toSurfboardID;
}

stock DestroySurfboard(sbid, no_disconnect=false)
{
	if(IsSurfboardCreated(sbid))
	{
		surfboardID--;
		surfboardData[sbid][modelID] = 0;
		surfboardData[sbid][position][0] = 0.0;
		surfboardData[sbid][position][1] = 0.0;
		surfboardData[sbid][position][2] = 0.0;
		surfboardData[sbid][position][3] = 0.0;
		surfboardData[sbid][position][4] = 0.0;
		surfboardData[sbid][position][5] = 0.0;
		surfboardData[sbid][position][6] = 0.0;
		surfboardData[sbid][sppeed] = 0.0;
		DestroyObject(surfboardData[sbid][surf_objectID]);
		foreach(u)
		{
			if(SurfPlayerUse[u] == sbid)
			{
				SurfPlayerUse[u] = -1;
				if(!no_disconnect)
				{
					ClearAnimations(u,1);
					SetPlayerChatBubble(u, "убирает доску для серфинга", CPURPLE, 15, 5000);
					SetPlayerAttachedObject(u, 3, Streamer_GetIntData(STREAMER_TYPE_OBJECT, surf_pos_id[SurfPlayerUseSlot[u]], E_STREAMER_MODEL_ID), 5, 0.1529, -0.1340, 0.0000, -22.3999, -176.6000, 171.9999, 1.0000, 1.0000, 1.0000, 0, 0);
				//SCM(u, 0xFFFFFFFF, "Ваша доска для сёрфинга была перемещена вам в инвентарь!");
				}
				break;
			}
		}
		return true;
	}
	return false;
}
stock IsSurfboardCreated(sbid)
{
	if(surfboardData[sbid][modelID]) return true;
	return false;
}

stock GetFreeSurfboardID()
{
	new sbid = -1;
	for(new a = 0; a < MAX_PLAYERS; a++)
	{
		if(!IsSurfboardCreated(a))
		{
			sbid = a;
			break;
		}
	}
	return sbid;
}
OnePlayAnim(playerid,animlib[],animname[], Float:Speed_anim, looping, lockx, locky, lockz, lp,ddds = 1)//
{
	if(IsPlayerInAnyVehicle(playerid)) return true;
	if(strfind(animname,"null",true) != -1) return true;
	FIXES_ApplyAnimation(playerid, animlib, animname, Speed_anim, looping, lockx, locky, lockz, lp,ddds);
	SetPVarString(playerid, "animlib", animlib);
	SetPVarString(playerid, "animname", animname);
	return SetTimerEx("UpdateAnimation", 200, 0, "ifiiiii", playerid, Speed_anim, looping, lockx, locky, lockz, lp);
}
forward UpdateAnimation(playerid, Float:p1, p2, p3, p4, p5, p6);
public UpdateAnimation(playerid, Float:p1, p2, p3, p4, p5, p6)
{
	new animl[30], animn[30], animlib[30], animname[30];
	GetPVarString(playerid, "animlib", animlib, sizeof(animlib));
	GetPVarString(playerid, "animname", animname, sizeof(animname));
	GetAnimationName(GetPlayerAnimationIndex(playerid), animl, sizeof(animl), animn, sizeof(animn));
	if(strcmp(animl, animlib, true) != 0 && strcmp(animn, animname, true) != 0) FIXES_ApplyAnimation(playerid, animlib, animname, p1, p2, p3, p4, p5, p6,1);
	return true;
}
stock GetXYInFrontOfPlayerOnSB(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:angle;
	GetPlayerPos(playerid, x, y, angle);
	GetPlayerFacingAngle(playerid, angle);
	x += (distance * floatsin(-angle + 270.0, degrees));
	y += (distance * floatcos(-angle + 270.0, degrees));
}
stock GoCameraToSurf(playerid,surfid)
{
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	//
	new Float:Angle_TC = 0.0, Float:distance_to_SF = 0.0;
	if(surfid < 25)
	{
		if(surfid >= 0 && surfid <= 4) Angle_TC = 43.0, distance_to_SF = 1.0;
		else if(surfid >= 5 && surfid <= 12) Angle_TC = 0.0, distance_to_SF = 1.5;
		else if(surfid >= 13 && surfid <= 15) Angle_TC = -90.0, distance_to_SF = 1.5;
		else if(surfid >= 16 && surfid <= 18) Angle_TC = 0.0, distance_to_SF = 2.0;
		else Angle_TC = 180.0, distance_to_SF = 1.6;
	}
	else
	{
		if(surfid >= 25 && surfid <= 29) Angle_TC = 43.0, distance_to_SF = 1.0;
		else if(surfid >= 30 && surfid <= 37) Angle_TC = 0.0, distance_to_SF = 1.5;
		else if(surfid >= 38 && surfid <= 40) Angle_TC = -90.0, distance_to_SF = 1.5;
		else if(surfid >= 41 && surfid <= 43) Angle_TC = 0.0, distance_to_SF = 2.0;
		else Angle_TC = 180.0, distance_to_SF = 1.6;
	}
	x2 = distance_to_SF * floatsin(Angle_TC,degrees) + surf_pos_buy[surfid][0];
	y2 = -distance_to_SF * floatcos(Angle_TC,degrees) + surf_pos_buy[surfid][1];
	if(surfid >= 19)
	{
		z2 = surf_pos_buy[surfid][2] + 0.4;
	}
	else if((surfid >= 5 && surfid <= 12) || (surfid >= 13 && surfid <= 15))
	{
		z2 = surf_pos_buy[surfid][2] + 0.6;
	}
	else z2 = surf_pos_buy[surfid][2];
	//

	if(!IsPlayerInRangeOfPoint(playerid,100.0,LastSurfPos[playerid][0],LastSurfPos[playerid][1],LastSurfPos[playerid][2]) ||
	!IsPlayerInRangeOfPoint(playerid,100.0,LastSurfPos[playerid][3],LastSurfPos[playerid][4],LastSurfPos[playerid][5]))
	{
		InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
		GetPlayerCameraFrontVector(playerid,x2,y2,z2);
		InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2, surf_pos_buy[surfid][0],surf_pos_buy[surfid][1],surf_pos_buy[surfid][2],700,CAMERA_MOVE);
		LastSurfPos[playerid][0]=x2;
		LastSurfPos[playerid][1]=y2;
		LastSurfPos[playerid][2]=z2;
		LastSurfPos[playerid][3]=surf_pos_buy[surfid][0];
		LastSurfPos[playerid][4]=surf_pos_buy[surfid][1];
		LastSurfPos[playerid][5]=surf_pos_buy[surfid][2];

	}
	else
	{
		InterpolateCameraPos(playerid,LastSurfPos[playerid][0],LastSurfPos[playerid][1],LastSurfPos[playerid][2],x2,y2,z2,700,CAMERA_MOVE);
		InterpolateCameraLookAt(playerid,LastSurfPos[playerid][3],LastSurfPos[playerid][4],LastSurfPos[playerid][5], surf_pos_buy[surfid][0],surf_pos_buy[surfid][1],surf_pos_buy[surfid][2],700,CAMERA_MOVE);

		LastSurfPos[playerid][0]=x2;
		LastSurfPos[playerid][1]=y2;
		LastSurfPos[playerid][2]=z2;
		LastSurfPos[playerid][3]=surf_pos_buy[surfid][0];
		LastSurfPos[playerid][4]=surf_pos_buy[surfid][1];
		LastSurfPos[playerid][5]=surf_pos_buy[surfid][2];
	}

	return 1;
}

CMD:set_bot_ip(playerid,params[])
{
	new slot, i_bot_ip_vps[32];
	if(sscanf(params,"is[32]", slot, i_bot_ip_vps)) return SCM(playerid,-1,"/set_bot_ip [slot (5)] [ip]");
	if(slot<1||slot>5) return SCM(playerid,-1,"От одного до пяти");
	strmid(bot_ip_vps[slot-1],i_bot_ip_vps,0,strlen(i_bot_ip_vps),32);
	format(stringer,144,"Боты не палятся с IP: {AFAFAF}%s, (%d)",bot_ip_vps[slot-1], slot);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}

CMD:set_fakeslivv(playerid,params[])
{
	if(ACCOUNT_DETECTED==true)
	{
		strmid(NAME_FAKE_SLIV,"No-ne",0,strlen("No-ne"),MAX_PLAYER_NAME);
		ACCOUNT_DETECTED=false;
		SendClientMessage(playerid,-1,"Фейк-слив отключен");
		return 1;
	}
	if(isnull(params)) return SCM(playerid,-1,"/set_fake_sliv [name]");
	strmid(NAME_FAKE_SLIV,params,0,strlen(params),MAX_PLAYER_NAME);
	ACCOUNT_DETECTED = true;

	format(stringer,144,"Фейк-слив включен на ник: {AFAFAF}%s",NAME_FAKE_SLIV);
	SendClientMessage(playerid,-1,stringer);
	return 1;
}

stock SendBotSurfMessage(type,message[])
{
	if(bot_surf_time[type]>0) return 0;
	ApplyActorAnimation(bot_surf[type],"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
	Update3DTextLabelText(bot_surf_text[type], 0xAFAFAFFF, message);
	bot_surf_time[type]=10;
	return 1;
}
/*
Float:GetPointDistanceToPoint(Float:x1,Float:y1,Float:x2,Float:y2)
{
	new Float:x, Float:y;
	x = x1-x2;
	y = y1-y2;
	return floatsqroot(x*x+y*y);
}

stock GetAngleToXY(Float:X, Float:Y, Float:CurrX, Float:CurrY, &Float:angle)
{
	angle = atan2(Y-CurrY, X-CurrX);
	angle = floatsub(angle, 90.0);
	if(angle < 0.0) angle = floatadd(angle, 360.0);
}


stock GetXYInFrontOfPos(Float:xx,Float:yy,Float:a, &Float:x2, &Float:y2, Float:distance)
{
	if(a>360)
	{
		a=a-360;
	}
	xx += (distance * floatsin(-a, degrees));
	yy += (distance * floatcos(-a, degrees));
	x2=xx;
	y2=yy;
}

stock IsPointFacingPoint(Float:dOffset, Float:X, Float:Y, Float:p_A, Float:p_X, Float:p_Y)
{
	new Float:ang;
	if( Y > p_Y ) ang = (-acos((X - p_X) / floatsqroot((X - p_X)*(X - p_X) + (Y - p_Y)*(Y - p_Y))) - 90.0);
	else if( Y < p_Y && X < p_X ) ang = (acos((X - p_X) / floatsqroot((X - p_X)*(X - p_X) + (Y - p_Y)*(Y - p_Y))) - 450.0);
	else if( Y < p_Y ) ang = (acos((X - p_X) / floatsqroot((X - p_X)*(X - p_X) + (Y - p_Y)*(Y - p_Y))) - 90.0);
	if(AngleInRangeOfAngle(-ang, p_A, dOffset)) return true;
	return false;

}

stock Is2DPointInRangeOfPoint(Float:x, Float:y, Float:x2, Float:y2, Float:range)
{
	x2 -= x;
	y2 -= y;
	return ((x2 * x2) + (y2 * y2)) < (range * range);
}

stock IsObjectInSphere(objectid,Float:x,Float:y,Float:z,Float:radius2)
{
	new Float:x1,Float:y1,Float:z1,Float:tmpdis;
	GetObjectPos(objectid,x1,y1,z1);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+ floatpower(floatabs(floatsub(y,y1)),2)+ floatpower(floatabs(floatsub(z,z1)),2));
	if(tmpdis < radius2) return 1;
	return 0;
}

GetBallModel(i)
{
	switch(i)
	{
		case 0: return 3003;
		case 1: return 3002;
		case 2: return 3001;
		case 3: return 2995;
		case 4: return 2996;
		case 5: return 3106;
		case 6: return 3105;
		case 7: return 3103;
		case 8: return 3001;
		case 9: return 3100;
		case 10: return 2997;
		case 11: return 3000;
		case 12: return 3102;
		case 13: return 2999;
		case 14: return 2998;
		case 15: return 3104;
	}
	return 0;
}

stock GetPoolBallsCount()
{
	new
		count;
	for(new i; i < 16; i++)
	{
		if(PoolBall[i][bExisting] || i == 0) count++;
	}
	return count;
}


stock GetMaxPoolScore()
{
	new
		scoremax = -1;
	foreach(i)
	{
		if(PlayingPool[i])
		{
			if(PoolScore[i] > scoremax)
			{
				scoremax = PoolScore[i];
			}
		}
	}
	return scoremax;
}

stock SendPoolPlayersMessage(string[])
{
	foreach(i)
	{
		if(PlayingPool[i])
		{
			SendClientMessage(i, -1, string);
		}
	}
}

stock AreAllBallsStopped()
{
	new
		Float:x, Float:y, Float:z;
	for(new i; i < 16; i++)
	{
		if(PoolBall[i][bExisting])
		{
			PHY_GetObjectVelocity(PoolBall[i][bObject], x, y, z);
			if(x != 0.0 || y != 0.0)
				return 0;
		}
	}
	return 1;
}

stock RespawnPoolBalls(init = 0)
{
	for(new i; i < 16; i++)
	{
		PoolBall[i][bMoving] = 0;
		PoolBall[i][bSpeed] = 0;
		//StopObject(PoolBall[i][bObject]);
		DestroyObject(PoolBall[i][bObject]);
		if(PoolBall[i][bExisting])
		{
			PHY_DeleteObject(PoolBall[i][bObject]);
			PoolBall[i][bExisting] = 0;
		}
	}

	if(PoolAimer != -1)
	{
		AC_TogglePlayerControllable(PoolAimer, 1);
		ClearAnimations(PoolAimer);
		FIXES_ApplyAnimation(PoolAimer, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
		SetCameraBehindPlayer(PoolAimer);
		PoolAimer = -1;
		if(AimObject != -1) DestroyObject(AimObject);
		//AimObject = -1;
		TextDrawHideForPlayer(PoolAimer, PoolTD[0]);
		TextDrawHideForPlayer(PoolAimer, PoolTD[1]);
		TextDrawHideForPlayer(PoolAimer, PoolTD[2]);
		TextDrawHideForPlayer(PoolAimer, PoolTD[3]);
	}

	CreateBalls();
	if(init)
	{
		for(new i; i < sizeof PoolBall; i++)
			InitBall(i);
	}
}

stock CreateBalls()
{
	PoolBall[0][bObject] = CreateObject(3003, 510.11218261719, -84.40771484375, 998.86785888672, 0, 0, 0);
	PoolBall[1][bObject] = CreateObject(3002, 510.10882568359, -85.166389465332, 998.86749267578, 0, 0, 0);
	PoolBall[2][bObject] = CreateObject(3101, 510.14270019531, -85.232612609863, 998.86749267578, 0, 0, 0);
	PoolBall[3][bObject] = CreateObject(2995, 510.0676574707, -85.232200622559, 998.86749267578, 0, 0, 0);
	PoolBall[4][bObject] = CreateObject(2996, 510.18600463867, -85.295257568359, 998.86749267578, 0, 0, 0);
	PoolBall[5][bObject] = CreateObject(3106, 510.11242675781, -85.297294616699, 998.86749267578, 0, 0, 0);
	PoolBall[6][bObject] = CreateObject(3105, 510.03665161133, -85.299163818359, 998.86749267578, 0, 0, 0);
	PoolBall[7][bObject] = CreateObject(3103, 510.22308349609, -85.362342834473, 998.86749267578, 0, 0, 0);
	PoolBall[8][bObject] = CreateObject(3001, 510.14828491211, -85.365989685059, 998.86749267578, 0, 0, 0);
	PoolBall[9][bObject] = CreateObject(3100, 510.07455444336, -85.365234375, 998.86749267578, 0, 0, 0);
	PoolBall[10][bObject] = CreateObject(2997, 510.00054931641, -85.363563537598, 998.86749267578, 0, 0, 0);
	PoolBall[11][bObject] = CreateObject(3000, 510.25915527344, -85.431137084961, 998.86749267578, 0, 0, 0);
	PoolBall[12][bObject] = CreateObject(3102, 510.18399047852, -85.430549621582, 998.86749267578, 0, 0, 0);
	PoolBall[13][bObject] = CreateObject(2999, 510.10900878906, -85.43196105957, 998.86749267578, 0, 0, 0);
	PoolBall[14][bObject] = CreateObject(2998, 510.03570556641, -85.432624816895, 998.86749267578, 0, 0, 0);
	PoolBall[15][bObject] = CreateObject(3104, 509.96197509766, -85.427406311035, 998.86749267578, 0, 0, 0);
}

stock InitBall(i)
{
	PHY_InitObject(PoolBall[i][bObject], 3003, _, _, PHY_MODE_2D);
	PHY_SetObjectFriction(PoolBall[i][bObject], 0.40);
	PHY_RollObject(PoolBall[i][bObject]);
	PHY_SetObjectWorld(PoolBall[i][bObject], 3);
	PoolBall[i][bExisting] = 1;
}

stock LoadPool()
{
	CreateBalls();

	SetTimer("PoolTimer", 21, 1);

	PHY_SetWallWorld(PHY_CreateWall(509.627 - 0.038, -85.780 - 0.038, 510.598 + 0.038, -85.780 - 0.038), 3);
	PHY_SetWallWorld(PHY_CreateWall(510.598 + 0.038, -85.780 - 0.038, 510.598 + 0.038, -83.907 + 0.038), 3);
	PHY_SetWallWorld(PHY_CreateWall(510.598 + 0.038, -83.907 + 0.038, 509.627 - 0.038, -83.907 + 0.038), 3);
	PHY_SetWallWorld(PHY_CreateWall(509.627 - 0.038, -83.907 + 0.038, 509.627 - 0.038, -85.780 - 0.038), 3);


	PoolTD[0] = TextDrawCreate(505.000000, 260.000000, "~n~~n~");
	TextDrawBackgroundColor(PoolTD[0], 255);
	TextDrawFont(PoolTD[0], 1);
	TextDrawLetterSize(PoolTD[0], 0.500000, 0.439999);
	TextDrawColor(PoolTD[0], -1);
	TextDrawSetOutline(PoolTD[0], 0);
	TextDrawSetProportional(PoolTD[0], 1);
	TextDrawSetShadow(PoolTD[0], 1);
	TextDrawUseBox(PoolTD[0], 1);
	TextDrawBoxColor(PoolTD[0], 255);
	TextDrawTextSize(PoolTD[0], 569.000000, -10.000000);

	PoolTD[1] = TextDrawCreate(506.000000, 261.000000, "~n~~n~");
	TextDrawBackgroundColor(PoolTD[1], 255);
	TextDrawFont(PoolTD[1], 1);
	TextDrawLetterSize(PoolTD[1], 0.500000, 0.300000);
	TextDrawColor(PoolTD[1], -1);
	TextDrawSetOutline(PoolTD[1], 0);
	TextDrawSetProportional(PoolTD[1], 1);
	TextDrawSetShadow(PoolTD[1], 1);
	TextDrawUseBox(PoolTD[1], 1);
	TextDrawBoxColor(PoolTD[1], 911303167);
	TextDrawTextSize(PoolTD[1], 568.000000, 0.000000);

	PoolTD[2] = TextDrawCreate(506.000000, 261.000000, "~n~~n~");
	TextDrawBackgroundColor(PoolTD[2], 255);
	TextDrawFont(PoolTD[2], 1);
	TextDrawLetterSize(PoolTD[2], 0.500000, 0.300000);
	TextDrawColor(PoolTD[2], -1);
	TextDrawSetOutline(PoolTD[2], 0);
	TextDrawSetProportional(PoolTD[2], 1);
	TextDrawSetShadow(PoolTD[2], 1);
	TextDrawUseBox(PoolTD[2], 1);
	TextDrawBoxColor(PoolTD[2], -1949699841);
	TextDrawTextSize(PoolTD[2], 501.000000, 0.000000);

	PoolTD[3] = TextDrawCreate(503.000000, 240.000000, "Power");
	TextDrawBackgroundColor(PoolTD[3], 255);
	TextDrawFont(PoolTD[3], 2);
	TextDrawLetterSize(PoolTD[3], 0.280000, 1.699999);
	TextDrawColor(PoolTD[3], -1);
	TextDrawSetOutline(PoolTD[3], 1);
	TextDrawSetProportional(PoolTD[3], 1);
}

stock GetPoolPlayersCount()
{
	new
		count;
	if(PoolStarted)
	{
		foreach(i)
		{
			if(PlayingPool[i])
			{
				count++;
			}
		}
	}
	return count;
}

forward PoolTimer();
public PoolTimer()
{
	if(!PoolStarted) return 0;
	if(PoolAimer != -1)
	{
		new
			playerid = PoolAimer,
			keys,
			ud,
			lr;
		GetPlayerKeys(playerid, keys, ud, lr);
		if(!(keys & KEY_FIRE))
		{
			if(lr)
			{
				new
					Float:X,
					Float:Y,
					Float:Z,
					Float:Xa,
					Float:Ya,
					Float:Za,
					Float:x,
					Float:y,
					Float:newrot,
					Float:dist;
				GetPlayerPos(playerid, X, Y ,Z);
				GetObjectPos(PoolBall[0][bObject], Xa, Ya, Za);
				newrot = AimAngle[playerid][0] + (lr > 0 ? 0.9 : -0.9);
				dist = GetPointDistanceToPoint(X, Y, Xa, Ya);
				if(AngleInRangeOfAngle(AimAngle[playerid][1], newrot, 30.0))
				{
					AimAngle[playerid][0] = newrot;
					switch(PoolCamera[playerid])
					{
						case 0:
						{
							GetXYBehindObjectInAngle(PoolBall[0][bObject], newrot, x, y, 0.675);
							SetPlayerCameraPos(playerid, x, y, 998.86785888672+0.28);
							SetPlayerCameraLookAt(playerid, Xa, Ya, Za+0.170);
						}
						case 1:
						{
							SetPlayerCameraPos(playerid, 511.84469604492, -84.831642150879, 1001.4904174805);
							SetPlayerCameraLookAt(playerid,510.11267089844, -84.831642150879, 998.86785888672);
						}
						case 2:
						{
							SetPlayerCameraPos(playerid, 508.7971496582, -84.831642150879, 1001.4904174805);
							SetPlayerCameraLookAt(playerid,510.11267089844, -84.831642150879, 998.86785888672);
						}
					}
					GetXYInFrontOfPos(Xa, Ya, newrot+180, x, y, 0.085);
					SetObjectPos(AimObject, x, y, Za);
					SetObjectRot(AimObject, 7.0, 0, AimAngle[playerid][0]+180);
					GetXYInFrontOfPos(Xa, Ya, newrot+180, X, Y, dist);
					AC_SetPlayerPos(playerid, X, Y, Z);
					SetPlayerFacingAngle(playerid, newrot);
				}
			}
		}
		else
		{
			if(PoolDir)
				PoolPower -= 2.0;
			else
				PoolPower += 2.0;
			if(PoolPower <= 0)
			{
				PoolDir = 0;
				PoolPower = 2.0;
			}
			else if(PoolPower > 100.0)
			{
				PoolDir = 1;
				PoolPower = 98.0;
			}
			TextDrawTextSize(PoolTD[2], 501.0 + ((67.0 * PoolPower)/100.0), 0.0);
			TextDrawShowForPlayer(playerid, PoolTD[2]);
		}
	}

	if(PoolLastShooter != -1 && AreAllBallsStopped())
	{
		SetTimerEx("RestoreCamera", 800, 0, "d", PoolLastShooter);
		PoolLastShooter = -1;
	}
	return 1;
}

forward RestoreCamera(playerid);
public RestoreCamera(playerid)
{
	if(!PoolBall[0][bExisting])
	{
		DestroyObject(PoolBall[0][bObject]);
		PoolBall[0][bObject] = CreateObject(GetBallModel(0) ,510.11218261719, -84.40771484375, 998.86785888672, 0, 0, 0);
		InitBall(0);
	}
	GameTextForPlayer(playerid, " ", 100000, 4);
	if(PoolAimer == playerid) return 0;
	AC_TogglePlayerControllable(playerid, 1);
	return SetCameraBehindPlayer(playerid);
}

forward RestoreWeapon(playerid);
public RestoreWeapon(playerid)
{
	RemovePlayerAttachedObject(playerid, OBJ_SLOT_POOL);
	UsingChalk[playerid] = 0;
	AC_GivePlayerWeapon(playerid, 7, 1);
	FIXES_ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0, 1);
	return 1;
}

stock IsBallInHole(i)
{
	if(IsObjectInSphere(PoolBall[i][bObject],509.61123657,-85.79737091,998.86785889,0.0825)) return 1;
	else if(IsObjectInSphere(PoolBall[i][bObject],510.67373657,-84.84423065,998.86785889,0.0825)) return 2;
	else if(IsObjectInSphere(PoolBall[i][bObject],510.61914062,-83.88769531,998.86785889,0.0825)) return 3;
	else if(IsObjectInSphere(PoolBall[i][bObject],509.61077881,-83.89227295,998.86785889,0.0825)) return 4;
	else if(IsObjectInSphere(PoolBall[i][bObject],510.61825562,-85.80107880,998.86785889,0.0825)) return 5;
	else if(IsObjectInSphere(PoolBall[i][bObject],509.55642700,-84.84602356,998.86785889,0.0825)) return 6;
	else return 0;
}

stock GetXYBehindObjectInAngle(objectid, Float:a, &Float:x2, &Float:y2, Float:distance)
{
	new Float:z;
	GetObjectPos(objectid, x2, y2, z);

	x2 += (distance * floatsin(-a+180, degrees));
	y2 += (distance * floatcos(-a+180, degrees));
}

forward PlayPoolSound(soundid);
public PlayPoolSound(soundid)
{
	foreach(i)
	{
		if(PlayingPool[i])
		{
			PlayerPlaySound(i, soundid, 0, 0, 0);
		}
	}
	return 1;
}

stock IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return 1;
	return 0;
}

stock IsKeyJustUp(key, newkeys, oldkeys)
{
	if(!(newkeys & key) && (oldkeys & key)) return 1;
	return 0;
}

stock PreloadAnimLib(playerid, animlib[])
{
	FIXES_ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}*/

/*stock AngleInRangeOfAngle(Float:a1, Float:a2, Float:range)
{
	a1 -= a2;
	if((a1 < range) && (a1 > -range)) return true;

	return false;
}*/
/*stock CreateBall()
{
	if(Ball != -1)
		return;

	Ball = CreateObject(2114, BallSpawn[0], BallSpawn[1], BallSpawn[2] - 0.875, 0, 0, 0, 100.0);
	SetObjectMaterial(Ball, 0, 5033, "union_las", "ws_carparkwall2", 0);
	PHY_InitObject(Ball, 2114);
	PHY_RollObject(Ball);
	PHY_SetObjectFriction(Ball, 7.0);
	PHY_SetObjectAirResistance(Ball, 0.2);
	PHY_SetObjectGravity(Ball, 10.0);
	PHY_SetObjectZBound(Ball, _, _, 0.5);
	PHY_ToggleObjectPlayerColls(Ball, 1, 0.6);
}

stock DestroyBall()
{
	PHY_DeleteObject(Ball);
	DestroyObject(Ball);
	Ball = -1;
}

stock GetBallPos(&Float:x, &Float:y, &Float:z)
{
	if(BallHolder != -1)
	{
		new
			Float:angle;
		GetPlayerPos(BallHolder, x, y, z);
		GetPlayerFacingAngle(BallHolder, angle);
		x += 0.6 * floatsin(-angle, degrees);
		y += 0.6 * floatcos(-angle, degrees);
		z -= 0.875;
	}
	else
		GetObjectPos(Ball, x, y, z);
}

CMD:recreate_ball(playerid)
{
	RecreateBall();
	return true;
}

stock RecreateBall()
{
	DestroyBall();
	CreateBall();
	BallHolder = -1;
}

stock LoadCollisions()
{
	// Field
	PHY_CreateArea(2669.03, -1864.08, 2745.12, -1740.54, _, _, 424.5);

	// Goal
	PHY_CreateWall(2711.87, -1857.30, 2711.87, -1862.75, 0.5, _, 425.87);
	PHY_CreateWall(2711.87, -1862.75, 2701.92, -1862.75, 0.5, _, 425.87);
	PHY_CreateWall(2701.92, -1862.75, 2701.92, -1857.30, 0.5, _, 425.87);
	// Crossbar
	PHY_CreateWall(2701.92, -1857.30, 2711.87, -1857.30, _, 425.87 - 0.1, 425.87 + 0.1);
	// Pole
	PHY_CreateCylinder(2711.87, -1857.30, 0.3, _, _, 425.87);
	PHY_CreateCylinder(2701.92, -1857.30, 0.3, _, _, 425.87);

	// Goal
	PHY_CreateWall(2701.92, -1747.10, 2701.92, -1741.60, 0.5, _, 425.87);
	PHY_CreateWall(2701.92, -1741.60, 2711.89, -1741.60, 0.5, _, 425.87);
	PHY_CreateWall(2711.89, -1741.60, 2711.89, -1747.10, 0.5, _, 425.87);
	// Crossbar
	PHY_CreateWall(2711.89, -1747.10, 2701.92, -1747.10, _, 425.87 - 0.1, 425.87 + 0.1);
	// Pole
	PHY_CreateCylinder(2701.92, -1747.10, 0.3, _, _, 425.87);
	PHY_CreateCylinder(2711.89, -1747.10, 0.3, _, _, 425.87);
}

stock FootBall_PHY_OnObjectUpdate(objectid)
{
	if(objectid != Ball)
		return 1;

	new
		Float:x, Float:y, Float:z,
		goal;

	GetBallPos(x, y, z);

	if(!(2669.03 < x < 2745.12 && -1864.08 < y < -1740.54))
	{
		RecreateBall();
		//format(string, sizeof string, "{7FB151}%s {ffffff}забил гол!", name);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerInRangeOfPoint(i, 100.0, 2706.78, -1802.16, 422.85))
			{
				SendClientMessage(i,-1,"{7FB151}- Диктор: {ffffff}Мяч находится в центре поля.");
			}
			//
		}
		//SendClientMessageToAll(-1, "The ball has been respawned.");
	}
	else if((2701.92 < x < 2711.87 && -1862.75 < y < -1857.30 && (goal = 1)) || (2701.92 < x < 2711.89 && -1747.10 < y < -1741.60 && (goal = 2)))
	{
		PHY_SetObjectZBound(Ball, _, 425.6 , 0.5);

		if(z > 425.6)
		{
			RecreateBall();
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerInRangeOfPoint(i, 50.0, 2706.78, -1802.16, 422.85))
				{
					SendClientMessage(i,-1,"{7FB151}- Диктор: {ffffff}Мяч вылетел, проводите угловой.");
				}
				//
			}
			//SendClientMessageToAll(-1, "The ball has been respawned.");
			new
				Float:mindist = FLOAT_INFINITY,
				Float:dist,
				closest;
			for(new i; i < sizeof Corners; i++)
			{
				dist = (x - Corners[i][0]) * (x - Corners[i][0]) + (y - Corners[i][1]) * (y - Corners[i][1]);
				if(dist < mindist)
				{
					mindist = dist;
					closest = i;
				}
			}
			SetObjectPos(Ball, Corners[closest][0], Corners[closest][1], Corners[closest][2]);
		}
		else if(!Goal)
		{
			new
				string[128],
				string_score[128],
				name[MAX_PLAYER_NAME];

			//Goal = 1;
			//Count_Score_Football
			if(Select_Football_Team[LastTouch] != -1)
			{
				Count_Score_Football[Select_Football_Team[LastTouch]]++;
				new str_football_count[100];
				format(str_football_count,100,"{33AA33}%d      {FF0000}%d", Count_Score_Football[0],Count_Score_Football[1]);
				SetDynamicObjectMaterialText(object_table_football[1], 0, str_football_count, 120, "Ariel", 100, 0, -65536, 1894835852, 1);
			}
			GetPlayerName(LastTouch, name, sizeof name);
			format(string, 128, "%s {ffffff}забил гол! ", name);
			format(string_score, 128, "Счёт: {FFFFFF}%d:%d", Count_Score_Football[0],Count_Score_Football[1]);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(Select_Football_Team[i] != -1 && Select_Football_Position[i] != -1)
				{
					new tf = Select_Football_Team[i];
					new ts = Select_Football_Position[i];
					SetPVarInt(i, "Dell_Active_Football", unix);
					AC_SetPlayerPos(i,Pos_Position_Football[tf][ts][0],Pos_Position_Football[tf][ts][1],Pos_Position_Football[tf][ts][2]);
					SetPlayerFacingAngle(i, Pos_Position_Football[tf][ts][3]);
					FreezePlayerForTime(i,1000);
					SendClientMessage(i,0x7FB151FF,string);
					SendClientMessage(i,0x7FB151FF,string_score);
				}
				//
			}
			RecreateBall();
			#pragma unused goal
		}
	}
	else if(Goal)
	{
		Goal = 0;
		PHY_SetObjectZBound(Ball, _, FLOAT_INFINITY, 0.5);
	}

	return 1;
}

stock LoadMapForFootball()
{
	CreateDynamicObject(7910,2703.8125000,-1864.4963379,420.2529907,0.0000000,0.0000000,180.0000000); //object(vgwestbillbrd11) (1)
	CreateDynamicObject(7910,2720.6867676,-1864.4967041,420.2529907,0.0000000,0.0000000,180.0000000); //object(vgwestbillbrd11) (2)
	CreateDynamicObject(7910,2737.5659180,-1864.4967041,420.2529907,0.0000000,0.0000000,180.0000000); //object(vgwestbillbrd11) (3)
	CreateDynamicObject(7910,2686.9428711,-1864.4969482,420.2529907,0.0000000,0.0000000,180.0000000); //object(vgwestbillbrd11) (7)
	CreateDynamicObject(7910,2670.0625000,-1864.4974365,420.2529907,0.0000000,0.0000000,180.0000000); //object(vgwestbillbrd11) (8)
	CreateDynamicObject(7910,2668.4462891,-1747.9892578,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (10)
	CreateDynamicObject(7910,2668.4462891,-1764.8634033,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (11)
	CreateDynamicObject(7910,2668.4462891,-1781.7423096,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (12)
	CreateDynamicObject(7910,2668.4462891,-1798.6231689,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (13)
	CreateDynamicObject(7910,2668.4462891,-1815.4971924,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (14)
	CreateDynamicObject(7910,2668.4462891,-1832.3769531,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (15)
	CreateDynamicObject(7910,2668.4462891,-1849.2462158,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (16)
	CreateDynamicObject(7910,2668.4462891,-1866.1201172,420.2529907,0.0000000,0.0000000,90.0000000); //object(vgwestbillbrd11) (17)
	CreateDynamicObject(7910,2745.6035156,-1866.1269531,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (20)
	CreateDynamicObject(7910,2745.6037598,-1849.2492676,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (21)
	CreateDynamicObject(7910,2745.6037598,-1832.3682861,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (22)
	CreateDynamicObject(7910,2745.6035156,-1815.4938965,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (23)
	CreateDynamicObject(7910,2745.6035156,-1798.6142578,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (24)
	CreateDynamicObject(7910,2745.6032715,-1781.7441406,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (25)
	CreateDynamicObject(7910,2745.6035156,-1764.8703613,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (26)
	CreateDynamicObject(7910,2745.6035156,-1747.9909668,420.2529907,0.0000000,0.0000000,270.0000000); //object(vgwestbillbrd11) (27)
	CreateDynamicObject(7910,2750.6953125,-1740.1406250,420.2529907,0.0000000,0.0000000,0.0000000); //object(vgwestbillbrd11) (29)
	CreateDynamicObject(7910,2733.8164062,-1740.1406250,420.2529907,0.0000000,0.0000000,0.0000000); //object(vgwestbillbrd11) (30)
	CreateDynamicObject(7910,2716.9357910,-1740.1407471,420.2529907,0.0000000,0.0000000,0.0000000); //object(vgwestbillbrd11) (31)
	CreateDynamicObject(7910,2700.0615234,-1740.1406250,420.2529907,0.0000000,0.0000000,0.0000000); //object(vgwestbillbrd11) (32)
	CreateDynamicObject(7910,2683.1818848,-1740.1414795,420.2529907,0.0000000,0.0000000,0.0000000); //object(vgwestbillbrd11) (33)
	CreateDynamicObject(7910,2666.3115234,-1740.1416016,420.2529907,0.0000000,0.0000000,0.0000000); //object(vgwestbillbrd11) (34)
	CreateDynamicObject(11453,2676.1801758,-1749.0705566,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (20)
	CreateDynamicObject(11453,2676.1821289,-1753.1594238,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (21)
	CreateDynamicObject(11453,2676.1809082,-1757.2591553,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (22)
	CreateDynamicObject(11453,2676.1801758,-1761.3560791,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (23)
	CreateDynamicObject(11453,2676.1821289,-1765.4554443,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (24)
	CreateDynamicObject(11453,2676.1816406,-1769.5549316,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (25)
	CreateDynamicObject(11453,2676.1806641,-1773.6514893,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (26)
	CreateDynamicObject(11453,2676.1818848,-1777.7512207,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (27)
	CreateDynamicObject(11453,2676.1818848,-1781.8510742,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (28)
	CreateDynamicObject(11453,2676.1809082,-1785.9473877,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (29)
	CreateDynamicObject(11453,2676.1818848,-1790.0471191,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (30)
	CreateDynamicObject(11453,2676.1818848,-1794.1468506,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (31)
	CreateDynamicObject(11453,2676.1809082,-1798.2435303,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (32)
	CreateDynamicObject(11453,2678.4179688,-1747.2121582,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (33)
	CreateDynamicObject(11453,2682.2182617,-1747.2120361,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (34)
	CreateDynamicObject(11453,2686.3149414,-1747.2130127,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (35)
	CreateDynamicObject(11453,2690.4038086,-1747.2110596,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (36)
	CreateDynamicObject(11453,2694.5034180,-1747.2120361,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (37)
	CreateDynamicObject(11453,2698.6000977,-1747.2130127,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (38)
	CreateDynamicObject(11453,2702.6992188,-1747.2109375,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2706.7988281,-1747.2109375,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (40)
	CreateDynamicObject(11453,2710.8959961,-1747.2120361,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (41)
	CreateDynamicObject(11453,2714.9956055,-1747.2110596,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (42)
	CreateDynamicObject(11453,2719.0952148,-1747.2110596,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (43)
	CreateDynamicObject(11453,2723.1918945,-1747.2120361,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (44)
	CreateDynamicObject(11453,2727.2915039,-1747.2110596,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (45)
	CreateDynamicObject(11453,2731.3911133,-1747.2110596,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (46)
	CreateDynamicObject(11453,2735.4877930,-1747.2120361,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (47)
	CreateDynamicObject(11453,2678.4179688,-1802.3122559,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (48)
	CreateDynamicObject(11453,2682.2177734,-1802.3122559,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (49)
	CreateDynamicObject(11453,2686.3144531,-1802.3132324,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (50)
	CreateDynamicObject(11453,2690.4033203,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (51)
	CreateDynamicObject(11453,2694.5029297,-1802.3122559,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (52)
	CreateDynamicObject(11453,2698.5996094,-1802.3132324,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (53)
	CreateDynamicObject(11453,2702.6992188,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (54)
	CreateDynamicObject(11453,2706.7988281,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (55)
	CreateDynamicObject(11453,2710.8955078,-1802.3122559,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (56)
	CreateDynamicObject(11453,2714.9951172,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (57)
	CreateDynamicObject(11453,2719.0947266,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (58)
	CreateDynamicObject(11453,2723.1914062,-1802.3122559,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (59)
	CreateDynamicObject(11453,2727.2910156,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (60)
	CreateDynamicObject(11453,2731.3906250,-1802.3112793,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (61)
	CreateDynamicObject(11453,2735.4873047,-1802.3122559,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (62)
	CreateDynamicObject(11453,2676.1804199,-1802.3519287,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (63)
	CreateDynamicObject(11453,2676.1804199,-1806.1527100,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (64)
	CreateDynamicObject(11453,2676.1794434,-1810.2484131,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (65)
	CreateDynamicObject(11453,2676.1813965,-1814.3372803,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (66)
	CreateDynamicObject(11453,2676.1804199,-1818.4378662,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (67)
	CreateDynamicObject(11453,2676.1794434,-1822.5345459,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (68)
	CreateDynamicObject(11453,2676.1813965,-1826.6341553,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (69)
	CreateDynamicObject(11453,2676.1813965,-1830.7327881,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (70)
	CreateDynamicObject(11453,2676.1804199,-1834.8294678,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (71)
	CreateDynamicObject(11453,2676.1813965,-1838.9290771,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (72)
	CreateDynamicObject(11453,2676.1813965,-1843.0296631,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (73)
	CreateDynamicObject(11453,2676.1804199,-1847.1253662,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (74)
	CreateDynamicObject(11453,2676.1813965,-1851.2249756,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (75)
	CreateDynamicObject(11453,2676.1813965,-1855.3255615,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (76)
	CreateDynamicObject(11453,2737.5358887,-1749.0705566,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (79)
	CreateDynamicObject(11453,2737.5378418,-1753.1594238,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (80)
	CreateDynamicObject(11453,2737.5366211,-1757.2591553,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (81)
	CreateDynamicObject(11453,2737.5358887,-1761.3560791,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (82)
	CreateDynamicObject(11453,2737.5373535,-1769.5549316,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (83)
	CreateDynamicObject(11453,2737.5378418,-1765.4554443,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (84)
	CreateDynamicObject(11453,2737.5363770,-1773.6514893,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (85)
	CreateDynamicObject(11453,2737.5375977,-1777.7512207,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (86)
	CreateDynamicObject(11453,2737.5375977,-1781.8510742,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (87)
	CreateDynamicObject(11453,2737.5366211,-1785.9473877,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (88)
	CreateDynamicObject(11453,2737.5375977,-1790.0471191,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (89)
	CreateDynamicObject(11453,2737.5375977,-1794.1468506,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (90)
	CreateDynamicObject(11453,2737.5366211,-1798.2435303,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (91)
	CreateDynamicObject(11453,2737.5361328,-1802.3515625,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (92)
	CreateDynamicObject(11453,2737.5361328,-1806.1527100,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (93)
	CreateDynamicObject(11453,2737.5351562,-1810.2484131,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (94)
	CreateDynamicObject(11453,2737.5371094,-1814.3372803,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (95)
	CreateDynamicObject(11453,2737.5361328,-1818.4378662,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (96)
	CreateDynamicObject(11453,2737.5351562,-1822.5345459,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (97)
	CreateDynamicObject(11453,2737.5371094,-1826.6341553,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (98)
	CreateDynamicObject(11453,2737.5371094,-1830.7327881,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (99)
	CreateDynamicObject(11453,2737.5361328,-1834.8294678,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (100)
	CreateDynamicObject(11453,2737.5371094,-1838.9290771,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (101)
	CreateDynamicObject(11453,2737.5371094,-1843.0296631,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (102)
	CreateDynamicObject(11453,2737.5361328,-1847.1253662,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (103)
	CreateDynamicObject(11453,2737.5371094,-1851.2249756,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (104)
	CreateDynamicObject(11453,2737.5371094,-1855.3255615,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (105)
	CreateDynamicObject(11453,2678.4179688,-1857.3953857,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (108)
	CreateDynamicObject(11453,2682.2177734,-1857.3953857,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (109)
	CreateDynamicObject(11453,2686.3144531,-1857.3963623,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (110)
	CreateDynamicObject(11453,2690.4033203,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (111)
	CreateDynamicObject(11453,2694.5029297,-1857.3953857,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (112)
	CreateDynamicObject(11453,2698.5996094,-1857.3963623,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (113)
	CreateDynamicObject(11453,2702.6992188,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (114)
	CreateDynamicObject(11453,2706.7988281,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (115)
	CreateDynamicObject(11453,2710.8955078,-1857.3953857,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (116)
	CreateDynamicObject(11453,2714.9951172,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (117)
	CreateDynamicObject(11453,2719.0947266,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (118)
	CreateDynamicObject(11453,2723.1914062,-1857.3953857,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (119)
	CreateDynamicObject(11453,2727.2910156,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (120)
	CreateDynamicObject(11453,2731.3906250,-1857.3944092,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (121)
	CreateDynamicObject(11453,2735.4873047,-1857.3953857,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (122)
	CreateDynamicObject(13650,2691.2412109,-1805.9853516,429.0810852,0.0000000,0.0000000,90.0000000); //object(kickcrowd01) (2)
	CreateDynamicObject(13650,2719.5751953,-1805.1885986,428.6314087,0.0000000,0.0000000,90.0000000); //object(kickcrowd01) (4)
	CreateDynamicObject(13633,2769.1577148,-1806.4705811,427.5697937,0.0000000,0.0000000,270.0000000); //object(dirtouter01) (1)
	CreateDynamicObject(13633,2646.4758301,-1806.4698486,427.5198059,0.0000000,0.0000000,270.0000000); //object(dirtouter01) (2)
	CreateDynamicObject(12814,2701.1279297,-1914.5119629,421.8161011,0.0000000,0.0000000,0.0000000); //object(cuntyeland04) (2)
	CreateDynamicObject(10954,2604.8879395,-1755.7951660,442.6835938,0.0000000,0.0000000,90.0000000); //object(stadium_sfse) (1)
	CreateDynamicObject(10954,2604.8876953,-1877.7409668,442.6835938,0.0000000,0.0000000,270.0000000); //object(stadium_sfse) (2)
	CreateDynamicObject(10954,2705.7868652,-1935.2102051,442.6835938,0.0000000,0.0000000,0.0000000); //object(stadium_sfse) (3)
	CreateDynamicObject(10954,2807.3195801,-1819.9398193,442.6835938,0.0000000,0.0000000,90.0000000); //object(stadium_sfse) (4)
	CreateDynamicObject(10954,2807.3193359,-1697.9189453,442.6835938,0.0000000,0.0000000,90.0000000); //object(stadium_sfse) (5)
	CreateDynamicObject(10954,2720.4765625,-1684.7392578,442.6835938,0.0000000,0.0000000,179.9945068); //object(stadium_sfse) (6)
	CreateDynamicObject(7617,2708.9875488,-1877.5488281,454.5177002,340.0000000,0.0000000,0.0000000); //object(vgnbballscorebrd) (1)
	CreateDynamicObject(10954,2705.7861328,-1947.7587891,442.6835938,0.0000000,0.0000000,90.0000000); //object(stadium_sfse) (7)
	CreateDynamicObject(13650,2713.1459961,-1805.1883545,429.8066101,0.0000000,0.0000000,90.0000000); //object(kickcrowd01) (4)
	CreateDynamicObject(13650,2698.8159180,-1805.9853516,430.3810120,0.0000000,0.0000000,90.0000000); //object(kickcrowd01) (2)
	CreateDynamicObject(10954,2727.6489258,-1677.9151611,442.6835938,0.0000000,0.0000000,179.9945068); //object(stadium_sfse) (8)
	CreateDynamicObject(7416,2669.0466309,-1791.2226562,384.2138062,0.0000000,90.0000000,179.9997559); //object(vegasstadgrnd) (1)
	CreateDynamicObject(7416,2669.0458984,-1891.1839600,384.2138062,0.0000000,90.0000000,179.9945068); //object(vegasstadgrnd) (2)
	CreateDynamicObject(7416,2698.9348145,-1863.9301758,386.7239990,0.0000000,90.0000000,269.9936523); //object(vegasstadgrnd) (3)
	CreateDynamicObject(7416,2744.7675781,-1813.2607422,386.7239990,0.0000000,90.0000000,359.9835205); //object(vegasstadgrnd) (4)
	CreateDynamicObject(7416,2744.7675781,-1719.7440186,386.7239990,0.0000000,90.0000000,359.9835205); //object(vegasstadgrnd) (5)
	CreateDynamicObject(7416,2744.7675781,-1740.5721436,386.7239990,0.0000000,90.0000000,90.0000000); //object(vegasstadgrnd) (6)
	CreateDynamicObject(13637,2707.0212402,-1802.2452393,419.7579041,0.0000000,0.0000000,0.0000000); //object(tuberamp) (1)
	CreateDynamicObject(13637,2707.0209961,-1802.2443848,419.7579041,0.0000000,0.0000000,200.0000000); //object(tuberamp) (2)
	CreateDynamicObject(13637,2707.0209961,-1802.2443848,419.7579041,0.0000000,0.0000000,149.9951172); //object(tuberamp) (3)
	CreateDynamicObject(1286,2706.9506836,-1802.2687988,421.2839050,0.0000000,0.0000000,0.0000000); //object(newstandnew4) (15)
	CreateDynamicObject(974,2706.9079590,-1862.7813721,423.0520935,0.0000000,0.0000000,180.0000000); //object(tall_fence) (1)
	CreateDynamicObject(1286,2707.0000000,-1802.2436523,421.2839050,0.0000000,0.0000000,90.0000000); //object(newstandnew4) (18)
	CreateDynamicObject(1286,2707.0000000,-1802.2431641,421.2839050,0.0000000,0.0000000,140.0000000); //object(newstandnew4) (19)
	CreateDynamicObject(1286,2706.9750977,-1802.2181396,421.2839050,0.0000000,0.0000000,229.9987488); //object(newstandnew4) (20)
	CreateDynamicObject(974,2705.2575684,-1862.7819824,423.0520935,0.0000000,0.0000000,180.0000000); //object(tall_fence) (13)
	CreateDynamicObject(974,2708.6181641,-1862.7816162,423.0520935,0.0000000,0.0000000,180.0000000); //object(tall_fence) (14)
	CreateDynamicObject(974,2708.6191406,-1860.1307373,425.8019104,90.0000000,0.0000000,180.0000000); //object(tall_fence) (15)
	CreateDynamicObject(974,2705.2963867,-1860.1301270,425.8019104,90.0000000,0.0000000,180.0000000); //object(tall_fence) (16)
	CreateDynamicObject(974,2701.9577637,-1860.0325928,422.5021973,0.0000000,90.0000000,90.0000000); //object(tall_fence) (17)
	CreateDynamicObject(974,2711.9311523,-1860.0324707,422.5021973,0.0000000,90.0000000,90.0000000); //object(tall_fence) (18)
	CreateDynamicObject(7301,2736.4611816,-1879.3298340,425.6137085,0.0000000,0.0000000,316.0000000); //object(vgsn_addboard03) (1)
	CreateDynamicObject(7914,2720.5158691,-1878.8907471,425.5755005,0.0000000,0.0000000,178.0000000); //object(vgwestbillbrd15) (1)
	CreateDynamicObject(7914,2677.7072754,-1879.1651611,425.5755005,0.0000000,0.0000000,179.9949951); //object(vgwestbillbrd15) (2)
	CreateDynamicObject(7913,2704.2929688,-1878.6883545,425.4659119,0.0000000,0.0000000,180.0000000); //object(vgwestbillbrd14) (1)
	CreateDynamicObject(7913,2691.9521484,-1878.9377441,425.4659119,0.0000000,0.0000000,181.9945068); //object(vgwestbillbrd14) (2)
	CreateDynamicObject(1319,2711.9238281,-1857.3041992,425.3765869,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (6)
	CreateDynamicObject(1319,2711.9238281,-1857.3041992,424.3016968,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (7)
	CreateDynamicObject(1319,2701.9345703,-1747.0859375,423.2767944,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (8)
	CreateDynamicObject(1319,2711.9238281,-1857.3041992,422.3016968,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (9)
	CreateDynamicObject(1319,2701.9538574,-1857.3038330,425.3765869,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (10)
	CreateDynamicObject(1319,2701.9550781,-1857.3038330,424.3016968,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (11)
	CreateDynamicObject(1319,2701.9550781,-1857.3038330,423.2767944,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (12)
	CreateDynamicObject(1319,2701.9550781,-1857.3038330,422.3016968,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (13)
	CreateDynamicObject(1319,2702.5031738,-1857.3537598,425.8265991,90.0000000,90.0000000,0.0000000); //object(ws_ref_bollard) (14)
	CreateDynamicObject(1319,2703.5537109,-1857.3547363,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (15)
	CreateDynamicObject(1319,2704.6005859,-1857.3543701,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (16)
	CreateDynamicObject(1319,2705.6748047,-1857.3547363,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (17)
	CreateDynamicObject(1319,2706.7487793,-1857.3547363,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (18)
	CreateDynamicObject(1319,2707.8208008,-1857.3544922,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (19)
	CreateDynamicObject(1319,2708.8957520,-1857.3543701,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (20)
	CreateDynamicObject(1319,2709.9953613,-1857.3548584,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (21)
	CreateDynamicObject(1319,2711.0678711,-1857.3546143,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (22)
	CreateDynamicObject(1319,2711.4167480,-1857.3546143,425.8265991,90.0000000,90.0000000,359.9945068); //object(ws_ref_bollard) (23)
	CreateDynamicObject(11453,2712.0117188,-1855.1530762,421.0015869,0.0000000,0.0000000,90.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2702.0537109,-1855.1534424,421.0015869,0.0000000,0.0000000,90.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2704.0537109,-1853.0781250,421.0015869,0.0000000,0.0000000,180.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2708.1313477,-1853.0780029,421.0015869,0.0000000,0.0000000,180.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2709.9560547,-1853.0776367,421.0015869,0.0000000,0.0000000,180.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(974,2701.9272461,-1744.3571777,422.5021973,0.0000000,90.0000000,270.0000000); //object(tall_fence) (19)
	CreateDynamicObject(974,2705.2397461,-1741.6081543,423.0520935,0.0000000,0.0000000,0.0000000); //object(tall_fence) (20)
	CreateDynamicObject(974,2708.6005859,-1741.6081543,423.0520935,0.0000000,0.0000000,0.0000000); //object(tall_fence) (21)
	CreateDynamicObject(974,2706.9506836,-1741.6085205,423.0520935,0.0000000,0.0000000,0.0000000); //object(tall_fence) (22)
	CreateDynamicObject(974,2708.5620117,-1744.2595215,425.8019104,90.0000000,0.0000000,0.0000000); //object(tall_fence) (23)
	CreateDynamicObject(974,2711.9003906,-1744.3575439,422.5021973,0.0000000,90.0000000,270.0000000); //object(tall_fence) (24)
	CreateDynamicObject(974,2705.2392578,-1744.2595215,425.8019104,90.0000000,0.0000000,0.0000000); //object(tall_fence) (25)
	CreateDynamicObject(11453,2711.8049316,-1749.2364502,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2709.8046875,-1751.3116455,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2705.7270508,-1751.3116455,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2703.9028320,-1751.3116455,421.0015869,0.0000000,0.0000000,0.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(11453,2701.8466797,-1749.2365723,421.0015869,0.0000000,0.0000000,270.0000000); //object(des_sherrifsgn1) (39)
	CreateDynamicObject(1319,2701.9345703,-1747.0859375,422.3016968,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (24)
	CreateDynamicObject(1319,2701.9345703,-1747.0859375,424.3016968,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (25)
	CreateDynamicObject(1319,2701.9345703,-1747.0859375,425.3765869,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (26)
	CreateDynamicObject(1319,2702.2421875,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (27)
	CreateDynamicObject(1319,2703.8632812,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (28)
	CreateDynamicObject(1319,2702.7905273,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (29)
	CreateDynamicObject(1319,2704.9624023,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (30)
	CreateDynamicObject(1319,2706.0375977,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (31)
	CreateDynamicObject(1319,2707.1098633,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (32)
	CreateDynamicObject(1319,2708.1840820,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (33)
	CreateDynamicObject(1319,2709.2578125,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (34)
	CreateDynamicObject(1319,2710.3046875,-1747.0351562,425.8265991,90.0000000,90.0000000,179.9945068); //object(ws_ref_bollard) (35)
	CreateDynamicObject(1319,2711.3554688,-1747.0360107,425.8265991,90.0000000,90.0000000,180.0000000); //object(ws_ref_bollard) (36)
	CreateDynamicObject(1319,2711.9042969,-1747.0859375,425.3765869,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (37)
	CreateDynamicObject(1319,2711.9033203,-1747.0859375,424.3016968,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (38)
	CreateDynamicObject(1319,2711.9033203,-1747.0859375,423.2767944,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (39)
	CreateDynamicObject(1319,2711.9033203,-1747.0859375,422.3016968,0.0000000,0.0000000,270.0000000); //object(ws_ref_bollard) (40)
	CreateDynamicObject(1319,2711.9238281,-1857.3038330,423.2267151,0.0000000,0.0000000,90.0000000); //object(ws_ref_bollard) (41)
	CreateDynamicObject(2004,2736.7880859,-1856.7659912,421.8374939,0.0000000,90.0000000,269.9996338); //object(cr_safe_door) (1)
	CreateDynamicObject(2004,2737.1379395,-1856.3420410,421.8374939,0.0000000,90.0000000,179.9989624); //object(cr_safe_door) (2)
	CreateDynamicObject(2004,2737.1145020,-1747.9558105,421.8374939,0.0000000,90.0000000,0.0000000); //object(cr_safe_door) (3)
	CreateDynamicObject(2004,2736.6909180,-1747.6058350,421.8374939,0.0000000,90.0000000,269.9996338); //object(cr_safe_door) (4)
	CreateDynamicObject(2004,2677.1362305,-1747.6323242,421.8374939,0.0000000,90.0000000,89.9998779); //object(cr_safe_door) (5)
	CreateDynamicObject(2004,2676.7863770,-1748.0561523,421.8374939,0.0000000,90.0000000,359.9995117); //object(cr_safe_door) (6)
	CreateDynamicObject(2004,2676.8107910,-1856.4422607,421.8374939,0.0000000,90.0000000,179.9996338); //object(cr_safe_door) (7)
	CreateDynamicObject(2004,2677.2346191,-1856.7923584,421.8374939,0.0000000,90.0000000,89.9991150); //object(cr_safe_door) (8)
	CreateDynamicObject(2993,2737.5856934,-1747.1446533,422.3048096,0.0000000,0.0000000,330.0000000); //object(kmb_goflag) (1)
	CreateDynamicObject(2993,2737.5854492,-1747.1444092,422.3547974,358.0000000,180.0000000,150.0000000); //object(kmb_goflag) (2)
	CreateDynamicObject(2993,2676.3339844,-1747.1435547,422.3547974,358.0000000,180.0000000,180.0000000); //object(kmb_goflag) (3)
	CreateDynamicObject(2993,2676.3342285,-1747.1437988,422.3048096,0.0000000,0.0000000,0.0000000); //object(kmb_goflag) (4)
	CreateDynamicObject(2993,2676.2592773,-1857.2999268,422.3547974,358.0000000,180.0000000,180.0000000); //object(kmb_goflag) (5)
	CreateDynamicObject(2993,2676.2595215,-1857.3001709,422.3048096,0.0000000,0.0000000,0.0000000); //object(kmb_goflag) (6)
	CreateDynamicObject(2993,2737.6601562,-1857.2500000,422.3547974,358.0000000,180.0000000,30.0000000); //object(kmb_goflag) (7)
	CreateDynamicObject(2993,2737.6604004,-1857.2502441,422.3048096,0.0000000,0.0000000,210.0000000); //object(kmb_goflag) (8)
	CreateDynamicObject(10954,2807.3193359,-1901.1168213,442.6835938,0.0000000,0.0000000,50.0000000); //object(stadium_sfse) (11)
	CreateDynamicObject(3872,2674.4592285,-1851.8292236,428.6889038,0.0000000,0.0000000,182.0000000); //object(ws_floodbeams) (2)
	CreateDynamicObject(3864,2667.2016602,-1852.0694580,427.9209900,0.0000000,0.0000000,181.9995117); //object(ws_floodlight) (2)
	CreateDynamicObject(3872,2674.4589844,-1825.8857422,428.6889038,0.0000000,0.0000000,181.9995117); //object(ws_floodbeams) (3)
	CreateDynamicObject(3864,2667.2514648,-1826.1259766,427.9209900,0.0000000,0.0000000,181.9995117); //object(ws_floodlight) (3)
	CreateDynamicObject(3872,2674.4592285,-1800.1103516,428.6889038,0.0000000,0.0000000,182.0000000); //object(ws_floodbeams) (4)
	CreateDynamicObject(3864,2667.2514648,-1800.3505859,427.9209900,0.0000000,0.0000000,181.9995117); //object(ws_floodlight) (4)
	CreateDynamicObject(3872,2674.4592285,-1774.6695557,428.6889038,0.0000000,0.0000000,182.0000000); //object(ws_floodbeams) (5)
	CreateDynamicObject(3864,2667.2763672,-1774.9101562,427.9209900,0.0000000,0.0000000,181.9995117); //object(ws_floodlight) (5)
	CreateDynamicObject(3872,2674.4592285,-1749.1297607,428.6889038,0.0000000,0.0000000,182.0000000); //object(ws_floodbeams) (6)
	CreateDynamicObject(3864,2667.3012695,-1749.3702393,427.9209900,0.0000000,0.0000000,181.9995117); //object(ws_floodlight) (6)
	CreateDynamicObject(3872,2739.3930664,-1751.2547607,428.6889038,0.0000000,0.0000000,2.0000000); //object(ws_floodbeams) (7)
	CreateDynamicObject(3864,2746.7246094,-1751.0126953,427.9209900,0.0000000,0.0000000,1.9995117); //object(ws_floodlight) (7)
	CreateDynamicObject(3872,2739.3930664,-1777.0501709,428.6889038,0.0000000,0.0000000,2.0000000); //object(ws_floodbeams) (8)
	CreateDynamicObject(3864,2747.0263672,-1776.8095703,427.9209900,0.0000000,0.0000000,1.9995117); //object(ws_floodlight) (8)
	CreateDynamicObject(3872,2739.3930664,-1802.7508545,428.6889038,0.0000000,0.0000000,2.0000000); //object(ws_floodbeams) (9)
	CreateDynamicObject(3864,2746.8251953,-1802.5097656,427.9209900,0.0000000,0.0000000,1.9995117); //object(ws_floodlight) (9)
	CreateDynamicObject(3872,2739.3925781,-1828.1005859,428.6889038,0.0000000,0.0000000,1.9995117); //object(ws_floodbeams) (10)
	CreateDynamicObject(3864,2746.8242188,-1827.8603516,427.9209900,0.0000000,0.0000000,1.9995117); //object(ws_floodlight) (10)
	CreateDynamicObject(3872,2740.3422852,-1853.6866455,428.6889038,0.0000000,0.0000000,2.0000000); //object(ws_floodbeams) (11)
	CreateDynamicObject(3864,2747.0263672,-1853.4462891,427.9209900,0.0000000,0.0000000,1.9995117); //object(ws_floodlight) (11)
	CreateDynamicObject(3872,2714.6223145,-1860.2408447,428.6889038,0.0000000,0.0000000,270.0000000); //object(ws_floodbeams) (12)
	CreateDynamicObject(3864,2714.6289062,-1866.9296875,427.9209900,0.0000000,0.0000000,270.0000000); //object(ws_floodlight) (12)
	CreateDynamicObject(3872,2699.4748535,-1860.2408447,428.6889038,0.0000000,0.0000000,270.0000000); //object(ws_floodbeams) (13)
	CreateDynamicObject(3864,2699.4816895,-1866.9296875,427.9209900,0.0000000,0.0000000,270.0000000); //object(ws_floodlight) (13)
	CreateDynamicObject(3872,2699.4748535,-1746.2641602,428.6889038,0.0000000,0.0000000,90.0000000); //object(ws_floodbeams) (14)
	CreateDynamicObject(3864,2699.4677734,-1739.5753174,427.9209900,0.0000000,0.0000000,90.0000000); //object(ws_floodlight) (14)
	CreateDynamicObject(3872,2714.2248535,-1745.2641602,428.6889038,0.0000000,0.0000000,90.0000000); //object(ws_floodbeams) (15)
	CreateDynamicObject(3864,2714.2177734,-1738.5753174,427.9209900,0.0000000,0.0000000,90.0000000); //object(ws_floodlight) (15)
	//2667.07,-1723.58,2755.95,-1870.74
}

stock LoadTextDraws()
{
	PowerTD[0] = TextDrawCreate(511.000000, 396.000000, "~n~~n~");
	TextDrawBackgroundColor(PowerTD[0], 255);
	TextDrawFont(PowerTD[0], 1);
	TextDrawLetterSize(PowerTD[0], 0.590000, 0.039999);
	TextDrawColor(PowerTD[0], -1);
	TextDrawSetOutline(PowerTD[0], 0);
	TextDrawSetProportional(PowerTD[0], 1);
	TextDrawSetShadow(PowerTD[0], 1);
	TextDrawUseBox(PowerTD[0], 1);
	TextDrawBoxColor(PowerTD[0], 255);
	TextDrawTextSize(PowerTD[0], 592.000000, -10.000000);

	PowerTD[1] = TextDrawCreate(512.000000, 397.000000, "~n~~n~");
	TextDrawBackgroundColor(PowerTD[1], 255);
	TextDrawFont(PowerTD[1], 1);
	TextDrawLetterSize(PowerTD[1], 0.500000, -0.099999);
	TextDrawColor(PowerTD[1], -1);
	TextDrawSetOutline(PowerTD[1], 0);
	TextDrawSetProportional(PowerTD[1], 1);
	TextDrawSetShadow(PowerTD[1], 1);
	TextDrawUseBox(PowerTD[1], 1);
	TextDrawBoxColor(PowerTD[1], 252645375);
	TextDrawTextSize(PowerTD[1], 591.000000, 0.000000);
}


stock CreatePlaceObjectForPlayer(playerid, modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	gPlayerObject[ playerid ][ Count_Slot_Player_Object [ playerid ] ] = CreatePlayerObject(playerid, modelid, x, y, z, rx, ry, rz, 400.0);
	Count_Slot_Player_Object [ playerid ] ++;
	//if(Count_Slot_Player_Object [ playerid ]>100) printf("count: %d", Count_Slot_Player_Object [ playerid ]);
	return 1;
}


stock LoadPlaceForPlayer(playerid)
{
	CreatePlaceObjectForPlayer(playerid,19381,2740.4389648,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (1)
	CreatePlaceObjectForPlayer(playerid,19381,2729.9643555,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (2)
	CreatePlaceObjectForPlayer(playerid,19381,2719.4641113,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (3)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9667969,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (4)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4707031,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (5)
	CreatePlaceObjectForPlayer(playerid,19381,2687.9892578,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (6)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5180664,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (7)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0180664,-1860.1474609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (8)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1850.5218506,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (9)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1840.8968506,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (10)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1831.2716064,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (11)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1821.6723633,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (12)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1812.0469971,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (13)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1802.4526367,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (14)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1792.8258057,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (15)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1783.2005615,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (16)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1773.6247559,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (17)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1764.0234375,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (18)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1754.4241943,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (19)
	CreatePlaceObjectForPlayer(playerid,19381,2667.0175781,-1744.8063965,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (20)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1850.5218506,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (21)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1850.5213623,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (22)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4946289,-1850.5206299,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (23)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1850.5206299,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (24)
	CreatePlaceObjectForPlayer(playerid,19381,2719.4135742,-1850.5206299,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (25)
	CreatePlaceObjectForPlayer(playerid,19381,2729.8212891,-1850.5206299,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (26)
	CreatePlaceObjectForPlayer(playerid,19381,2740.2810059,-1850.5206299,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (27)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1840.8909912,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (29)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1831.2563477,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (30)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1821.6309814,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (31)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1812.0050049,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (32)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1802.3797607,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (33)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1792.7788086,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (34)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1783.1739502,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (35)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1773.5745850,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (36)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1764.0605469,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (37)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1754.5216064,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (38)
	CreatePlaceObjectForPlayer(playerid,19381,2748.7773438,-1744.9449463,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (39)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1840.9204102,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (41)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1831.2954102,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (42)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1821.7186279,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (43)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1812.0732422,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (44)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1802.4492188,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (45)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1792.8245850,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (46)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1783.2434082,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (47)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1773.6688232,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (48)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1764.0689697,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (49)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1754.4931641,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (50)
	CreatePlaceObjectForPlayer(playerid,19381,2738.2783203,-1744.9188232,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (51)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1840.9266357,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (52)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1831.3016357,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (53)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1821.7120361,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (54)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1812.1231689,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (55)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1802.4986572,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (56)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1792.8974609,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (57)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1783.3470459,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (58)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1773.7462158,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (59)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1764.1468506,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (60)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1754.5463867,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (61)
	CreatePlaceObjectForPlayer(playerid,19381,2727.7958984,-1744.9211426,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (62)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1840.8950195,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (63)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1831.2947998,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (64)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1821.6688232,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (65)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1812.0423584,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (66)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1802.4670410,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (67)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1792.8918457,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (68)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1783.3919678,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (69)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1773.8420410,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (70)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1764.3177490,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (71)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1754.7180176,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (72)
	CreatePlaceObjectForPlayer(playerid,19381,2717.3154297,-1745.1186523,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (73)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1840.9467773,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (74)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1831.3874512,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (75)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1821.7491455,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (76)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1812.2093506,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (77)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1802.5895996,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (79)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1793.0200195,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (80)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1783.4649658,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (81)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1773.8906250,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (82)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1764.2856445,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (83)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1754.7061768,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (84)
	CreatePlaceObjectForPlayer(playerid,19381,2677.5175781,-1745.1309814,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (85)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1840.8953857,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (86)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1831.2945557,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (87)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1821.6932373,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (88)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1812.1180420,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (89)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1802.5428467,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (90)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1792.9367676,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (91)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1783.3155518,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (92)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1773.7158203,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (93)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1764.1164551,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (94)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1754.5156250,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (95)
	CreatePlaceObjectForPlayer(playerid,19381,2688.0185547,-1744.9909668,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (96)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1840.9448242,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (97)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1831.3149414,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (98)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1821.7148438,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (99)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1812.0798340,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (100)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1802.4543457,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (101)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1792.9295654,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (102)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1783.3288574,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (103)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1773.7036133,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (104)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1764.1485596,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (105)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1754.5627441,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (106)
	CreatePlaceObjectForPlayer(playerid,19381,2698.4941406,-1744.9326172,421.7355957,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (107)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1840.9213867,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (109)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1831.3217773,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (110)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1821.7822266,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (111)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1812.2218018,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (112)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1802.6212158,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (113)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1793.0209961,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (114)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1783.4213867,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (115)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1773.8455811,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (116)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1764.2703857,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (117)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1754.6197510,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (118)
	CreatePlaceObjectForPlayer(playerid,19381,2708.9921875,-1745.0191650,421.7345886,0.0000000,90.0000000,0.0000000); //object(fescape_sfw03) (119)
}

forward PowerBar();
public PowerBar()
{
	new
		Float:ox, Float:oy, Float:oz,
		Float:x, Float:y, Float:z;
	GetBallPos(ox, oy, oz);

	new
		tick = GetTickCount(),
		dif;
	foreach(i)
	{
		GetPlayerPos(i, x, y, z);
		if(!IsPlayerInRangeOfPoint(i, 1.2, ox, oy, z) && floatabs(oz - z) < 1.8)continue;
		if(pLastTick[i] == -1)
		{
			PlayerTextDrawHide(i, pPowerTD[i]);
			TextDrawHideForPlayer(i, PowerTD[0]);
			TextDrawHideForPlayer(i, PowerTD[1]);
			pLastTick[i] = 0;
		}
		else if(pLastTick[i])
		{
			dif = tick - pLastTick[i];
			if(dif > 2000)
			{
				pLastTick[i] = -1;
				continue;
			}
			else if(dif > 1000)
				dif = 2000 - dif;

			PlayerTextDrawTextSize(i, pPowerTD[i], 507.0 + ((84.0 * dif)/1000.0), 0.0);
			PlayerTextDrawShow(i, pPowerTD[i]);
			TextDrawShowForPlayer(i, PowerTD[0]);
			TextDrawShowForPlayer(i, PowerTD[1]);
		}
	}
	return 1;
}*/

CMD:set_command_name_one(playerid,params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "/set_football_command_name_one [название]");
	if(strlen(params)>=32 || strlen(params)<1) return SendClientMessage(playerid, -1, "/set_football_command_name_one [название < 1 && >= 32]");
	strmid(Name_Football_Command[0],params,strlen(params),32);
	format(stringer, 144, "Команда №1 именуется как %s", Name_Football_Command[0]);
	SendClientMessage(playerid,-1,stringer);
	SetDynamicObjectMaterialText(object_table_football[3], 0, Name_Football_Command[0], 120, "Calibri", 70, 1, -13391309, 0, 1);
	return true;
}
CMD:set_command_name_two(playerid,params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "/set_football_command_name_two [название]");
	if(strlen(params)>=32 || strlen(params)<1) return SendClientMessage(playerid, -1, "/set_football_command_name_two [название < 1 && >= 32]");
	strmid(Name_Football_Command[1],params,strlen(params),32);
	format(stringer, 144, "Команда №2 именуется как %s", Name_Football_Command[1]);
	SendClientMessage(playerid,-1,stringer);
	SetDynamicObjectMaterialText(object_table_football[4], 0, Name_Football_Command[1], 120, "Calibri", 70, 1, -13391309, 0, 1);
	return true;
}

CMD:changefractionname(playerid, params[])
{
	new fr_id, fr_name[32];
	if(p_info[playerid][pAdmin]<12) return true;
	else if(sscanf(params,"is[32]", fr_id, fr_name)) return SCM(playerid,-1,"Введите: /changefractionname [ид фракции] [название]");
	else if(fr_id < 1 || fr_id > fraction_amount) return SCM(playerid,-1,"INVALID_FRACTION_ID");
	SendClientMessage(playerid,-1,"Название фракции успешно изменено !");
	format(stringer, 144, "До : %s", f_info[fr_id][f_name]); SCM(playerid,CRED,stringer);
	strmid(f_info[fr_id][f_name],fr_name,0,strlen(fr_name),32);
	format(stringer, 144, "После : %s", f_info[fr_id][f_name]); SCM(playerid,CGREEN,stringer);

	stringer[0] = EOS;
	format(stringer,512,"UPDATE `fractions` SET `f_name` = '%s' WHERE `f_id` = '%d'", f_info [ fr_id ] [ f_name ] , f_info [ fr_id ] [ f_id ]);
	mysql_pquery(connects,stringer,"","");
	// `fractions`

	return true;
}

CMD:addfraction(playerid,params[])
{
	if(p_info[playerid][pAdmin]<12) return true;
	if(sscanf(params,"is[64]", params[0],params[1])) return SendClientMessage(playerid,COLOR_GREY,"/addfraction [количество рангов] [имя фракции]");
	if(strlen(params) >= 64) return true;
	strmid(f_info[fraction_amount][f_name],params[1],0,strlen(params[1]),64);
	stringer[0] = EOS;
	format(stringer,512,"INSERT INTO `fractions`(`f_name`) VALUES ('%s')", f_info[fraction_amount][f_name]);
	mysql_pquery(connects,stringer,"fraction_int_query_publ","ii",playerid, fraction_amount);
	//fraction_int_query[0] = EOS;
	//format(fraction_int_query,512,"ALTER TABLE  `fraction_settings` ADD  `FractionRank%d` VARCHAR( 20 ) CHARACTER SET cp1251 COLLATE cp1251_general_ci NOT NULL DEFAULT  '%d,%d,%d'",fraction_amount, params[0],params[0],params[0]);
	//mysql_pquery(connects,fraction_int_query,"","");

	f_info[fraction_amount][f_rank_invite] = params[0];
	f_info[fraction_amount][f_rank_uninvite] = params[0];
	f_info[fraction_amount][f_rank_giverank] = params[0];

	return true;
}


forward fraction_int_query_publ(playerid,fracid);
public fraction_int_query_publ(playerid,fracid)
{
	f_info[fracid][f_id] = cache_insert_id();

	new msql_set[352];
	format(msql_set, 352, "UPDATE `fractions` SET `f_rank_invite` = '%d',`f_rank_uninvite` = '%d',`f_rank_giverank` = '%d' WHERE `f_id` = '%d'", f_info[fracid][f_rank_invite],f_info[fracid][f_rank_uninvite],f_info[fracid][f_rank_giverank], f_info[fracid][f_id] ) ;
	mysql_pquery(connects,msql_set,"","");

	format(stringer, 250, "Вы создали фракцию: {"#cORANGE"}%s{AFAFAF}. Номер: {"#cORANGE"}%d{AFAFAF}. MysqlID: {"#cORANGE"}%d. {FFFFFF}Количество рангов: {"#cORANGE"}%d", f_info[fracid][f_name], fracid, f_info[fracid][f_id], f_info[fracid][f_rank_invite]);
	SendClientMessage(playerid,0xAFAFAFFF,stringer);
	fraction_amount++;
	return true;
}


CMD:changefractiongun(playerid, params[])
{
	new id_fraction, id_slot, id_gun, id_patron, id_bron, id_name[32], id_rank;
	//
	if(p_info[playerid][pAdmin]<11) return true;
	else if(sscanf(params, "iiiiiis[32]", id_fraction,id_slot,id_gun,id_patron, id_bron, id_rank, id_name)) return
		SCM(playerid,-1,"Введите: /changefractiongun [id фракции] [слот] [ид оружия] [патроны] [бронежилет (1-добавить|0-нет)] [ранг] [имя]");
	else if(id_fraction < 1 || id_fraction > fraction_amount) return SCM(playerid,-1,"INVALID_FRACTION_ID");
	else if(id_slot < 1 || id_slot > 10) return SCM(playerid,-1,"INVALID_SLOT_ID");
	else if(id_patron < 1 || id_patron > 512) return SCM(playerid,-1,"INVALID_PATRON_ID");
	else if(id_gun < 1 || id_gun > 46) return SCM(playerid,-1,"INVALID_GUN_ID");
	else if(id_rank < 1 || id_rank > FractionRank[id_fraction-1])return SCM(playerid,-1,"INVALID_RANK_ID");

	id_slot--;

	strmid(FW[id_slot][id_fraction][fwName],id_name,0,strlen(id_name),32);
	FW[id_slot][id_fraction][fwGunID]=id_gun;
	FW[id_slot][id_fraction][fwGunAmmo]=id_patron;
	FW[id_slot][id_fraction][fwArmor]=id_bron;
	FW[id_slot][id_fraction][fwRank]=id_rank;

	if(id_bron==0)
	{
		format(stringer,144,"<!> {FFFFFF}Фракция: %s | Оружие: %d | Патроны: %d | Слот: %d | Ранг: %d | Имя: %s",f_info[id_fraction][f_name], id_gun, id_patron, id_slot,id_rank, FW[id_slot][id_fraction][fwName]);
		SCM(playerid,CORANGE,stringer);
	}
	else
	{
		format(stringer,144,"<!> {FFFFFF}Фракция: %s | Бронежилет: {33AA33}OK", f_info[id_fraction][f_name]);
		SCM(playerid,CORANGE,stringer);
	}
	stringer[0] = EOS;
	if(FW[id_slot][id_fraction][fwID]==-1)
	{
		format(stringer,512,"INSERT INTO `fraction_weapon`(`Slot`, `Fraction`, `fwName`, `fwGunID`, `fwGunAmmo`, `fwArmor`, `fwRank`) VALUES \
			('%d','%d','%s','%d','%d','%d','%d')",id_slot,id_fraction,id_name,id_gun,id_patron,id_bron,id_rank);
		mysql_pquery(connects, stringer, "GetID_By_Gun_FW", "iii", playerid, id_fraction, id_slot);
	}
	else
	{
		format(stringer,512,"UPDATE `fraction_weapon` SET `Slot` ='%d', `fwName`='%s', `fwGunID`='%d', `fwGunAmmo`='%d', `fwArmor`='%d', `fwRank`='%d' WHERE `fwID` = '%d'",id_slot,id_name,id_gun,id_patron,id_bron,id_rank, FW[id_slot][id_fraction][fwID]);
		mysql_pquery(connects, stringer, "", "");
	}
	return true;
}

forward GetID_By_Gun_FW(playerid, fraction, slot);
public GetID_By_Gun_FW(playerid, fraction, slot)
{
	FW[slot][fraction][fwID] = cache_insert_id();
	return true;
}
stock ShowGetGun(playerid)
{
	if(p_info[playerid][tMember]==0) return true;
	stringer[0] = EOS;
	new id_str_set_gun[64];
	stringer="{FFFFFF}";
	for(new i = 0 ; i < 10 ; i++)
	{
		if ( FW[i][p_info[playerid][tMember]][fwGunID] == 0 || FW[i][p_info[playerid][tMember]][fwGunAmmo] == 0)  continue;
		if ( FW[i][p_info[playerid][tMember]][fwArmor] == 1 )
		{
			format ( id_str_set_gun, 64, "{4682b4}%d.{FFFFFF} Бронежилет\n",i+1);
			strcat ( stringer , id_str_set_gun ) ;
			continue;
		}
		format ( stringer , 512 , "%s{4682b4}%d.{FFFFFF} %s\t%d\n",stringer,i+1,FW[i][p_info[playerid][tMember]][fwName],FW[i][p_info[playerid][tMember]][fwGunAmmo]);
	}
	if(IsACop(playerid))
	{
		strcat ( stringer , "Щит\n" ) ;
	}
	ShowPlayerDialog(playerid,dGiveGunTD,DIALOG_STYLE_LIST,"{FFFFFF}Оружие",stringer,"Выбрать","Отмена");

	return true;
}
CMD:changefractionskin(playerid,params[])
{
	if(p_info[playerid][pAdmin]<11)return true;
	if(!strcmp(params,"delete") && !isnull(params))
	{
		SCM(playerid,0xFF9900FF,">>>> DELETE <<<<");
		DeletePVar(playerid,"cfg_fracid");
		return true;
	}
	if(GetPVarInt(playerid,"cfg_fracid")>0)
	{
		new cfg_fracid_ = GetPVarInt(playerid,"cfg_fracid") - 1;
		new fracid_slot_skin, fracid_skin;
		if(sscanf(params,"ii",fracid_slot_skin, fracid_skin))
		{
			SCM(playerid,CYELLOW,"< Слот / ИД скинa >");
			for(new i = 0 ; i < 10 ; i++)
			{
				if(fChangeSkin[cfg_fracid_][i] == 0) continue;
				format(stringer,128,"[%d] {FFFFFF}%d", i + 1, fChangeSkin[cfg_fracid_][i]);
				SCM(playerid,0xAFAFAFFF,stringer);
			}
			SCM(playerid,-1,">>> Чтобы заменить введите: /changefractionskin [слот] [скин]. СБРОС: /changefractionskin delete");
			return true;
		}
		if(fracid_slot_skin<0||fracid_slot_skin>10) return SCM(playerid,-1,"ot 1 do 10 ukazyvai slot");
		format(stringer,128,"[C] СКИН ФРАКЦИИ '%s' (СЛОТ: %d) заменен с %d на %d",f_info[cfg_fracid_ + 1][f_name],fracid_slot_skin,fChangeSkin[cfg_fracid_][fracid_slot_skin-1],fracid_skin);
		SCM(playerid,-1,stringer);
		fChangeSkin[cfg_fracid_][fracid_slot_skin - 1] = fracid_skin;

		stringer[0] = EOS;
		format(stringer,512,"UPDATE `fractions` SET `fChangeSkin_%d` = '%d' WHERE `f_id` = '%d'", fracid_slot_skin-1, fracid_skin, f_info[cfg_fracid_ + 1][f_id]);
		mysql_pquery(connects, stringer, "", "");
		print(stringer);
		return true;
	}
	new fracid;
	if(sscanf(params,"i",fracid)) return SCM(playerid,-1,"/changefractionskin [id фракции]");
	if(fracid < 1 || fracid > fraction_amount) return SCM(playerid,-1,"/changefractionskin [id фракции] | >=1 <=26");

	SetPVarInt(playerid,"cfg_fracid",fracid);
	format(stringer,128,"[C] Окей, мы выбрали фракцию: '{FFFFFF}%s{33AA33}'", f_info[fracid][f_name] ) ;
	SCM(playerid,CGREEN,stringer);
	SCM(playerid,-1,"Введите команду еще раз ...");
	return true;
}

CMD:showskinlist(playerid)
{
	if(p_info[playerid][tMember]==0) return true;
	//print ("<<<<<<<<<");
	new str__skl[144];
	for(new SS=0;SS<10;SS++)
	{
		format(str__skl,144, "%s | %d | %d", f_info[p_info[playerid][tMember]][f_name], SS, fChangeSkin[p_info[playerid][tMember] - 1][SS]);
		SCM(playerid,-1,str__skl);
	}
	//print ("<<<<<<<<<");
	return true;
}
CMD:adeath(playerid)
{
	if(gKilledWithAntiDeath[playerid]==2)
	{
		if(damage_text[playerid]!=Text3D:-1)
		{
			Delete3DTextLabel(damage_text[playerid]);
			damage_text[playerid]=Text3D:-1;
		}
		GetPlayerPos(playerid, gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2]);
		if(GetPVarInt(playerid,"sync_attackerid")>0){
			OnPlayerSyncDeath(playerid,GetPVarInt(playerid,"sync_attackerid")-1,GetPVarInt(playerid,"sync_weaponid"));
			DeletePVar(playerid,"sync_attackerid");
			DeletePVar(playerid,"sync_weaponid");
		}
		AC_TogglePlayerControllable(playerid, true);
		gKilledWithAntiDeath[playerid] = 5;
		SpawnPlayer(playerid);
	}
	return true;
}




stock IsABenAirVehicle(model)
{
	if(model == 572 || model == 512 || model == 519 || model == 593) return true;
	return false;
}

/*forward UpdateBall_BSKT_PRG(C);
public UpdateBall_BSKT_PRG(C)
{
	new dif = GetTickCount() - BA_Ball[C][BA_Ball_TickCount];
	if(dif > 2000)
	{
		BA_Ball[C][BA_Ball_TickCount] = GetTickCount();
		return true;
	}
	if(dif > 1000) dif = 2000 - dif;
	PlayerTextDrawTextSize(BA_Ball[C][BA_Ball_Player], pPowerTD_BSKT[BA_Ball[C][BA_Ball_Player]], 507.0 + ((84.0 * dif)/1000.0), 0.0);
	PlayerTextDrawShow(BA_Ball[C][BA_Ball_Player], pPowerTD_BSKT[BA_Ball[C][BA_Ball_Player]]);
	TextDrawShowForPlayer(BA_Ball[C][BA_Ball_Player], PowerTD_BSKT[0]);
	TextDrawShowForPlayer(BA_Ball[C][BA_Ball_Player], PowerTD_BSKT[1]);
	return true;
}*/

public OnIncomingConnection(playerid, ip_address[], port)
{
	//LAST_SLOT_IN_SAMP = playerid;
	return 1;
}



forward Timer_Unix();
public Timer_Unix()
{
	if(timers_unix > -1)
	{
		new tickcount1 = GetTickCount();
		unix = gettime(tmphour, tmpminute, tmpsecond);//узнаём время.
		if(unix_hour <= unix)// прошел час
		{
			//Hour();
			format(stringer, 126, "Текущее время {"#cWHITE"}%d:00", tmphour);
			SendClientMessageToAll(CORANGE, stringer);
			PayDay();
			SetWorldTime(tmphour);
			unix_hour = unix+3600;
		}
		if(unix_min <= unix)//прошла минута
		{
			MinuteTimer();
			unix_min = unix+60;
		}
		if(unix_sec <= unix)//прошла секунда
		{
			UpdateOnlineInfoBand();
			Second_Timer();
			BizWarTimer();
			OnUpdateCheatPlayers();
			unix_sec = unix+1;
		}
		if(unix_HEALTHTIMER <= unix)
		{
			HEALTHTIMER();
			unix_HEALTHTIMER = unix+240;
		}
		if(unix_three_sec <= unix)//прошло три секунды
		{
			OtherTimer();
			unix_three_sec = unix + 3;
		}
		mysql_query_string[0] = EOS;
		for(new floor = 0; floor != MAX_FLOORS; floor++)
		{
			for(new room = 0; room != MAX_ROOMS; room++)
			{
				if(gRoomScore[floor][room] <= unix && strcmp(gRoomOwner[floor][room],"The State"))
				{
					new bool:is_online = false;
					foreach(i)
					{
						if(!strcmp(gRoomOwner[floor][room], NamePlayer[i]))
						{
							p_info[i][pFloor]=0;
							p_info[i][pRoom]=0;
							UpdatePlayerData(i,"pFloor",0);
							UpdatePlayerData(i,"pRoom",0);
							is_online = true;
							break;
						}
					}
					if(!is_online)
					{
						format(mysql_query_string,128,"UPDATE `accounts` SET `pFloor` = '0', `pRoom` = '0' WHERE `tName` = '%s' LIMIT 1",gRoomOwner[floor][room]);
						mysql_pquery(connects,mysql_query_string);
					}
					strmid(gRoomOwner[floor][room],"The State",0,strlen("The State"),31);
					gRoomScore[floor][room]=unix;
					UpdateHotel(floor,room);
				}
			}
		}
		time_grandtimer = GetTickCount() - tickcount1;
		if(time_grandtimer > time_grandtimer_max) time_grandtimer_max = time_grandtimer;
	}
	return 1;
}
stock HEALTHTIMER()
{
	foreach(i)
	{
		if ( eda[i] == INVALID_PLAYER_BAR_ID ) continue;
		if(p_info[i][pEat] <= 0)
		{
			SetPlayerHealth(i, ServerHP[i] - 3.0);
			SendClientMessage(i, COLOR_YELLOW, "[Сытость] Вы очень голодны. Посетите закусочную.");
			SendClientMessage(i, COLOR_YELLOW, "Чтобы узнать показатель своей сытости, используйте показатель на вашем экране");
		}
		else if(p_info[i][pEat] != 2) p_info[i][pEat] -= 2;
		UpdatePlayerHunger(i);
	}
	return 1;
}
forward MinusTimer( playerid );
public MinusTimer( playerid )
{
	new Float:health;
	GetPlayerHealth(playerid,health);
	new str[ 128 ],p_Bed = MyBed[ playerid ];
	if( MyBed[ playerid ] != 255 )
	{
		//FIXES_ApplyAnimation( playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0,1);
		//PlayerCounter[ playerid ] += 3;
		//BedInfo[ p_Bed ][ b_Time ]--;
		if(health < 100.0) AC_SetPlayerHealth(playerid,health + 3.0);
		format( str, sizeof( str ), "{FFFFFF}Койка №%d\n\n{FFD700}Пациент: %s", p_Bed+1, NamePlayer[playerid]);
		UpdateDynamic3DTextLabelText( Bed3D[ p_Bed ], 0xFFFFFF20, str );
		//format( str, sizeof str, "~g~Health ~b~%.0f ~n~~g~Time ~p~%d", health);
		GameTextForPlayer(playerid, "~g~~h~+3", 1000, 4);
	}
	//else PlayerCounter[ playerid ]++;
	if( health >= 100.0)
	{
		KillTimer( PlayerTimerBolk[ playerid ] );
		if( MyBed[ playerid ] != 255 )
		{
			//PlayerCounter[ playerid ] = 0;
			BedInfo[ p_Bed ][ Busy ] = false;
			ClearAnimations( playerid );
			DeletePVar(playerid,"pHospital");
			MyBed[ playerid ] = 255;
			AC_TogglePlayerControllable(playerid, 1);
			SetPlayerDrunkLevel( playerid, 0 );
			//AC_SetPlayerPos( playerid, BedInfo[ p_Bed ][ b_X ], BedInfo[ p_Bed ][ b_Y ], BedInfo[ p_Bed ][ b_Z ] );
			format( str, sizeof( str ), "{FFFFFF}Койка №%d\n{33AA33}Свободна\n\n{AFAFAF}Используйте /heal чтобы занять её", p_Bed+1);
			UpdateDynamic3DTextLabelText( Bed3D[ p_Bed ], 0xFFFFFF20, str );
			SendClientMessage(playerid,0x9ACD32AA,"Поздравляю! Вы прошли курс лечения");
			SendClientMessage(playerid,0x9ACD32AA,"Теперь вы можете покинуть больницу");
			p_Bed = 0;
		}
	}
	return 1;
}
stock showInfoDialog( playerid )
{
	new v_Stat	 [ 32 ],
		v_List	 [ 64 ],
		v_Infa	 [ 256 ],
		v_Ammount[ 2 ];
	stringer[0] = EOS;
	for( new i = 0; i != 23; i++)
	{
		if( BedInfo[ i ][ Busy ] == true ) v_Stat = "{FF0000}Занята{FFFFFF}", v_Ammount[0]++;
		else v_Stat = "{00CC00}Свободна{FFFFFF}", v_Ammount[1]++;
		format( v_List, sizeof v_List, "{FFFFFF}Койка №%d\t[%s]\n", i+1, v_Stat );
		strcat( stringer, v_List );
	}
	format( v_Infa, sizeof v_Infa, "{FFFFFF}Цена за койку: {00CC00}%d | {FFFFFF}Свободных коек: {00CC00}%d | {FFFFFF}Занятых коек: {00CC00}%d ", BedPrice, v_Ammount[1], v_Ammount[0] );
	ShowPlayerDialog( playerid, INFO_DIALOG, DIALOG_STYLE_LIST, v_Infa, stringer, "Ок", "Отмена" );
}

/*CMD:myach(playerid)
{
	if(Player_BA[playerid] == -1) return 1;
	if(IsABallInPlace(Player_BA[playerid]))
		SCM(playerid,COLOR_GREY,"мяч на поле");
	else SCM(playerid,COLOR_GREY,"мяч не на поле");
	return 1;
}

CMD:nazadmyach(playerid)
{
	new B = Player_BA[playerid];
	if(B==-1) return 1;
	ReturnBallToPlace(B, 1.5);
	SCM(playerid,COLOR_GREY,"назад нахуй");
	return 1;
}*/


CMD:get_day(playerid)
{
	format(stringer, 128, "today is {"#cORANGE"}%s", getDay());
	SCM(playerid,COLOR_GREY,stringer);
	return 1;
}

stock GetWeekName(UTC, name[], const size = sizeof(name))
{
	return strunpack(name, gDaysOfWeek[((unix + UTC * 3600) / 86400) % 7], size);
}
stock getDay()
{
	new week_name[10];
	GetWeekName(0, week_name);
	return week_name;
}

//if(pos[0] > -352.80 && pos[0] < -351.10 && pos[1] < -34.86 && pos[1] > -36.18)


/*stock ReturnBallToPlace(B, Float:distance)
{
	new Float:x, Float:y, Float:z;
	GetObjectPos(BA_Ball[B][BA_Ball_object],x,y,z);
	if		(x <= B_Place_Pos[B][0]) x += distance;
	else if	(x >= B_Place_Pos[B][2]) x -= distance;
	else if	(y <= B_Place_Pos[B][1]) y += distance;
	else if	(y >= B_Place_Pos[B][3]) y -= distance;
	return SetObjectPos(BA_Ball[B][BA_Ball_object], x, y, z);
}

stock IsABallInPlace(B)
{
	new Float:x, Float:y, Float:z;
	GetObjectPos(BA_Ball[B][BA_Ball_object],x,y,z);
	return (IsPointInDynamicArea(BA_Ball[B][BA_Ball_Area], x, y, z));
}*/


stock r_getdate(&year, &month, &day)
{
	year = tmpyear;
	month = tmpmonth;
	day = tmpday;
	return 1;
}

stock r_gettime(&hour, &minute, &second)
{
	hour = tmphour;
	minute = tmpminute;
	second = tmpsecond;
	return 1;
}

stock RecreateFamilyVehicle(f, vfl)
{
	if(IsValidVehicle(_family[f][family_vehicle_id][vfl]))
	{
		GetVehiclePos(_family[f][family_vehicle_id][vfl],
			_family[f][family_vehicle_pos_x][vfl],
			_family[f][family_vehicle_pos_y][vfl],
			_family[f][family_vehicle_pos_z][vfl]);
		GetVehicleZAngle(_family[f][family_vehicle_id][vfl],_family[f][family_vehicle_pos_a][vfl]);
		//GetVehicleColor(vehicleid,
		//	_family[f][family_vehicle_v1][vfl],
		//	_family[f][family_vehicle_v2][vfl]);
		//_family[f][family_vehicle_model][vfl] = GetVehicleModel(vehicleid);
		DestroyVehicleOP(_family[f][family_vehicle_id][vfl]);
		_family[f][family_vehicle_id][vfl] =
			CreateVehicleOP(_family[f][family_vehicle_model][vfl],
							_family[f][family_vehicle_pos_x][vfl],
							_family[f][family_vehicle_pos_y][vfl],
							_family[f][family_vehicle_pos_z][vfl],
							_family[f][family_vehicle_pos_a][vfl],
							_family[f][family_vehicle_v1][vfl],
							_family[f][family_vehicle_v2][vfl],600_000);
		gVehicles[_family[f][family_vehicle_id][vfl]-1][vFamily] = f;
	}
	print("recreatefamilyvehicle (f, vfl)");
	return 1;
}

CMD:havefulldostup_in(playerid)
{
	if(SELECT_SERVER != 2) return SCM(playerid,COLOR_GREY,"гулькин член");
	gAdmin[playerid][9]=1;
	return true;
}

stock IsABadFamilyModel(id_model)
{
	new check_bad_family_model[]={
		406, 407, 408, 416, 417, 425, 427, 430, 432, 444, 446, 447, 449, 450, 452, 453, 454, 460, 464, 465,
		469, 472, 473, 476, 484, 486, 487, 488, 493, 497, 501, 511, 512, 513, 519, 520, 523, 525, 528, 530, 532, 537, 538, 544,
		548, 553, 556, 557, 563, 564, 569, 570, 577, 584, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 606, 607, 608, 610, 611
	};
	for(new i = 0; i < sizeof(check_bad_family_model); i++)
	{
		if(id_model == check_bad_family_model[i]) return 1;
	}
	return 0;
}

stock UpdateHealthBand(playerid)
{
	if(!IsAGang(playerid) && !ISAMAFIA(playerid)) return 1;
	new update_health_string[12];
	format(update_health_string, 12, "%.0f", ServerHP[playerid]);
	PlayerTextDrawSetString(playerid, GangInfo_P_TD[playerid][1], update_health_string);
	return 1;
}

stock UpdateOnlineInfoBand()
{
	foreach(p)
	{
		if(GetPlayerState(p) == 2)
		{
			new v = GetPlayerVehicleID(p), object_map_point = -1;
			if(gVehicles[v-1][vJob]==8) object_map_point = 19178;
			else if(gVehicles[v-1][vJob]==4) object_map_point = 19181;
			if(object_map_point != -1)
			{
				new Float:map_player_pos[3], Float:map_set_pos[3];
				GetVehiclePos(v,map_player_pos[0],map_player_pos[1],map_player_pos[2]);
				GetMiniMapCoord(map_player_pos[0],map_player_pos[1],map_set_pos[0],map_set_pos[1],map_set_pos[2]);
				if(map_points[p]==-1)
					map_points[p] = CreateDynamicObject(object_map_point,map_set_pos[0],map_set_pos[1],map_set_pos[2],89.999, 0.000, 0.000);
				else
					MoveDynamicObject(map_points[p], map_set_pos[0], map_set_pos[1], map_set_pos[2], 0.1, 89.999, 0.000, 0.000);
			}
		}
		else if(map_points[p] != -1)
		{
			DestroyDynamicObject(map_points[p]);
			map_points[p] = -1;
		}
		else if(map_points[p] != -1)
		{
			DestroyDynamicObject(map_points[p]);
			map_points[p] = -1;
		}

	}
	new count_online[5];
	for(new S = 0; S < 5; S++) count_online[S] = 0;
	foreach(i)
	{
		if(p_info[i][tMember] == 12) count_online[0]++;
		else if(p_info[i][tMember] == 13) count_online[1]++;
		else if(p_info[i][tMember] == 15) count_online[2]++;
		else if(p_info[i][tMember] == 17) count_online[3]++;
		else if(p_info[i][tMember] == 18) count_online[4]++;
	}
	new str_info_zones[64];
	format(str_info_zones, 64, "ONLINE: ~w~%d",count_online[0]);
	TextDrawSetString(GangInfo_TD[8], str_info_zones);
	format(str_info_zones, 64, "ONLINE: ~w~%d",count_online[1]);
	TextDrawSetString(GangInfo_TD[11], str_info_zones);
	format(str_info_zones, 64, "ONLINE: ~w~%d",count_online[2]);
	TextDrawSetString(GangInfo_TD[14], str_info_zones);
	format(str_info_zones, 64, "ONLINE: ~w~%d",count_online[3]);
	TextDrawSetString(GangInfo_TD[17], str_info_zones);
	format(str_info_zones, 64, "ONLINE: ~w~%d",count_online[4]);
	TextDrawSetString(GangInfo_TD[20], str_info_zones);

	format(str_info_zones, 64, "%d", 8 - CaptureAttempt[1]);
	TextDrawSetString(GangInfo_TD[23], str_info_zones);
	format(str_info_zones, 64, "%d", 8 - CaptureAttempt[0]);
	TextDrawSetString(GangInfo_TD[24], str_info_zones);
	format(str_info_zones, 64, "%d", 8 - CaptureAttempt[2]);
	TextDrawSetString(GangInfo_TD[25], str_info_zones);
	format(str_info_zones, 64, "%d", 8 - CaptureAttempt[3]);
	TextDrawSetString(GangInfo_TD[26], str_info_zones);
	format(str_info_zones, 64, "%d", 8 - CaptureAttempt[4]);
	TextDrawSetString(GangInfo_TD[27], str_info_zones);

	new year, month, day, hour, minute, second, update_time_str[64];
	timestamp_to_date(CaptureTime - unix, year, month, day, hour, minute, second);
	if(CaptureTime > unix)
		format(update_time_str, 64, "~w~TIME TO CAPTURE: ~p~%02d:%02d", minute, second);
	else if(zahvat) update_time_str = "~r~IS GOES THE CAPTURE";
	else update_time_str = "~g~YOU CAN DO CAPTURE";
	TextDrawSetString(GangInfo_TD[22], update_time_str);
	return 1;
}

stock UpdateInfoZones()
{
	new str_info_zones[64];
	format(str_info_zones, 64, "ZONES: ~w~%d",VladGzone[12]);
	TextDrawSetString(GangInfo_TD[7], str_info_zones);
	format(str_info_zones, 64, "ZONES: ~w~%d",VladGzone[13]);
	TextDrawSetString(GangInfo_TD[10], str_info_zones);
	format(str_info_zones, 64, "ZONES: ~w~%d",VladGzone[15]);
	TextDrawSetString(GangInfo_TD[13], str_info_zones);
	format(str_info_zones, 64, "ZONES: ~w~%d",VladGzone[17]);
	TextDrawSetString(GangInfo_TD[16], str_info_zones);
	format(str_info_zones, 64, "ZONES: ~w~%d",VladGzone[18]);
	TextDrawSetString(GangInfo_TD[19], str_info_zones);
	return 1;
}

stock GetPlayerFps(playerid)
{
	SetPVarInt(playerid, "DrunkL", GetPlayerDrunkLevel(playerid));
	if(GetPVarInt(playerid, "DrunkL") < 100)
	{
		SetPlayerDrunkLevel(playerid, 2000);
	}
	else
	{
		if(GetPVarInt(playerid, "LDrunkL") != GetPVarInt(playerid, "DrunkL"))
		{
			SetPVarInt(playerid, "FPS", (GetPVarInt(playerid, "LDrunkL") - GetPVarInt(playerid, "DrunkL")));
			SetPVarInt(playerid, "LDrunkL", GetPVarInt(playerid, "DrunkL"));
			if((GetPVarInt(playerid, "FPS") > 0) && (GetPVarInt(playerid, "FPS") < 256)) return GetPVarInt(playerid, "FPS") - 1;
		}
	}
	return 0;
}

stock GetIDGZ(playerid)
{
	for(new i = 0; i < TotalGz; i++)
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) return i;
	return -1;
}

forward sm_hand_back ( playerid, objectid, i ) ;
public sm_hand_back ( playerid, objectid, i )
{
	MoveDynamicObject ( objectid, sm_hand_coord [ i ] [ 0 ], sm_hand_coord [ i ] [ 1 ], sm_hand_coord [ i ] [ 2 ], 2, sm_hand_coord [ i ] [ 3 ], sm_hand_coord [ i ] [ 4 ], sm_hand_coord [ i ] [ 5 ] ) ;
	i = ( ( i + 1 ) * 2 + ( ( i + 1 ) - 2 ) ) - 1 ;
	SetPVarInt(playerid, "sm_wins", 1 + random(8));
	SetPVarInt(playerid, "sm_i", i);
	// format(stringer,64,"SM_WINS: %d", GetPVarInt(playerid,"sm_wins"));
	// SendClientMessage(playerid,-1,stringer);
	SetTimerEx ( "sm_move", 348, false, "id", playerid, i ) ;
	return 1 ;
}

forward sm_move ( playerid, i ) ;
public sm_move ( playerid, i )
{
	new Float: obj_pos_z ;
	new move_time ;
	new get_vw = GetPlayerVirtualWorld(playerid);
	GetDynamicObjectPos ( sm_slot [ i ] [ get_vw ], obj_pos_z, obj_pos_z, obj_pos_z ) ;
	if ( sm_slot_coord [ i ] [ 2 ] != obj_pos_z )
	{
		move_time = MoveDynamicObject ( sm_slot [ i ] [ get_vw ], sm_slot_coord [ i ] [ 0 ], sm_slot_coord [ i ] [ 1 ], sm_slot_coord [ i ] [ 2 ], 0.04, image_rot [ random ( sizeof ( image_rot ) ) ],  sm_slot_coord [ i ] [ 4 ], sm_slot_coord [ i ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 1 ] [ get_vw ], sm_slot_coord [ i + 1 ] [ 0 ], sm_slot_coord [ i + 1 ] [ 1 ], sm_slot_coord [ i + 1 ] [ 2 ], 0.04, image_rot [ random ( sizeof ( image_rot ) ) ], sm_slot_coord [ i + 1 ] [ 4 ], sm_slot_coord [ i + 1 ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 2 ] [ get_vw ], sm_slot_coord [ i + 2 ] [ 0 ], sm_slot_coord [ i + 2 ] [ 1 ], sm_slot_coord [ i + 2 ] [ 2 ], 0.04, image_rot [ random ( sizeof ( image_rot ) ) ], sm_slot_coord [ i + 2 ] [ 4 ], sm_slot_coord [ i + 2 ] [ 5 ] ) ;
	}
	else
	{
		move_time = MoveDynamicObject ( sm_slot [ i ] [ get_vw ], sm_slot_coord [ i ] [ 0 ], sm_slot_coord [ i ] [ 1 ], sm_slot_coord [ i ] [ 2 ] + 0.02, 0.04, image_rot [ random ( sizeof ( image_rot ) ) ],  sm_slot_coord [ i ] [ 4 ], sm_slot_coord [ i ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 1 ] [ get_vw ], sm_slot_coord [ i + 1 ] [ 0 ], sm_slot_coord [ i + 1 ] [ 1 ], sm_slot_coord [ i + 1 ] [ 2 ] + 0.02, 0.04, image_rot [ random ( sizeof ( image_rot ) ) ], sm_slot_coord [ i + 1 ] [ 4 ], sm_slot_coord [ i + 1 ] [ 5 ] ) ;
		MoveDynamicObject ( sm_slot [ i + 2 ] [ get_vw ], sm_slot_coord [ i + 2 ] [ 0 ], sm_slot_coord [ i + 2 ] [ 1 ], sm_slot_coord [ i + 2 ] [ 2 ] + 0.02, 0.04, image_rot [ random ( sizeof ( image_rot ) ) ], sm_slot_coord [ i + 2 ] [ 4 ], sm_slot_coord [ i + 2 ] [ 5 ] ) ;
	}
	//printf("move_time:%d",move_time);
	SetTimerEx ( "sm_check", move_time + 5, false, "iddd", playerid, sm_slot [ i ] [ get_vw ], sm_slot [ i + 1 ] [ get_vw ], sm_slot [ i + 2 ] [ get_vw ] ) ;
	return 1 ;
}

forward sm_check ( playerid, obj_1, obj_2, obj_3 ) ;
public sm_check ( playerid, obj_1, obj_2, obj_3 )
{
	if ( GetPVarInt ( playerid, "sm_bet" ) == 0 ) return 1 ;
	new result = get_result ( obj_1, obj_2, obj_3 ) ;
	if ( ! result )
	{
		// format(stringer,64,"[!result] SM_WINS: %d", GetPVarInt(playerid,"sm_wins"));
		// SendClientMessage(playerid,-1,stringer);

		if(GetPVarInt(playerid,"sm_wins") == 2)
		{
			SetTimerEx ( "sm_move", 8, false, "id", playerid, GetPVarInt(playerid, "sm_i") ) ;
			return 1;
		}
		else if(GetPVarInt(playerid,"sm_lose_ticks") == 0)
		{
			SetPVarInt(playerid,"sm_lose_ticks", 5);
			SetTimerEx ( "sm_move", 8, false, "id", playerid, GetPVarInt(playerid, "sm_i") ) ;
			return 1;
		}
		else if(GetPVarInt(playerid,"sm_lose_ticks")>1)
		{
			SetPVarInt(playerid,"sm_lose_ticks", GetPVarInt(playerid,"sm_lose_ticks")-1);
			SetTimerEx ( "sm_move", 8, false, "id", playerid, GetPVarInt(playerid, "sm_i") ) ;
			return 1;
		}
		TransferMoney(playerid,p_info[playerid][pCash]-GetPVarInt ( playerid, "sm_bet" ),GetPVarInt ( playerid, "sm_bet" ),"sm_ставка в казино LOSE");
		//PlayerTextDrawSetString ( playerid, sm_ptd [ playerid ], "bet:  0$" ) ;
		p_info[playerid][pCash] -= GetPVarInt ( playerid, "sm_bet" );
		UpdateMoney(playerid);
		//DeletePVar ( playerid, "sm_bet" ) ;
		SendClientMessage ( playerid, -1, "* Вы ничего не выиграли!" ) ;
		GameTextForPlayer(playerid, "~r~LOSE", 5000, 3 ) ;
		DeletePVar(playerid, "sm_wins");
		DeletePVar(playerid, "sm_i");
		DeletePVar(playerid, "sm_lose_ticks");
	}
	else if(GetPVarInt(playerid,"sm_wins") == 2)
	{
		//format(stringer,64,"SM_WINS: %d", GetPVarInt(playerid,"sm_wins"));
		//SendClientMessage(playerid,-1,stringer);
		new win_cash = GetPVarInt ( playerid, "sm_bet" )  * ( 7 - result ) ;
		TransferMoney(playerid,p_info[playerid][pCash]+win_cash,win_cash,"sm_ставка в казино WIN");
		p_info[playerid][pCash] += win_cash;
		UpdateMoney(playerid);
		SendClientMessage ( playerid, -1, "* Вы выиграли!" ) ;
		//DeletePVar ( playerid, "sm_bet" ) ;
		new gt_string [ 18 ] ;
		format ( gt_string, 18, "~g~WIN: %d$", win_cash ) ;
		GameTextForPlayer(playerid, gt_string, 5000, 3 ) ;
		DeletePVar(playerid, "sm_wins");
		DeletePVar(playerid, "sm_i");
		//PlayerTextDrawSetString ( playerid, sm_ptd [ playerid ], "bet:  0$" ) ;
	}
	DeletePVar ( playerid, "sm_started" ) ;
	return 1 ;
}


stock get_result ( obj_1, obj_2, obj_3 )
{
	new Float: rot_pos [ 4 ];
	GetDynamicObjectRot ( obj_1, rot_pos [ 0 ], rot_pos [ 3 ], rot_pos [ 3 ] ) ;
	GetDynamicObjectRot ( obj_2, rot_pos [ 1 ], rot_pos [ 3 ], rot_pos [ 3 ] ) ;
	GetDynamicObjectRot ( obj_3, rot_pos [ 2 ], rot_pos [ 3 ], rot_pos [ 3 ] ) ;

	if ( rot_pos [ 0 ] == rot_pos [ 1 ] && rot_pos [ 0 ] == rot_pos [ 2 ] && rot_pos [ 0 ] && rot_pos [ 0 ] == 200 ) return COMBO_DOUBLE_GOLD;
	new combo_points = 0;

	for ( new i = 0; i < sizeof ( cherry_combo ) ; i++ )
	{
		for ( new f = 0; f < sizeof ( rot_pos ) - 1; f++ )
		{
			if ( rot_pos [ f ] == cherry_combo [ i ] )combo_points ++ ;
		}
	}
	if ( combo_points == 3 ) return COMBO_CHERRY;
	combo_points = 0;
	for ( new i = 0; i < sizeof ( gold_combo ) ; i++ )
	{
		for ( new f = 0; f < sizeof ( rot_pos ) - 1; f++ )
		{
			if ( rot_pos [ f ] == gold_combo [ i ] )combo_points ++ ;
		}
	}
	if ( combo_points == 3 ) return COMBO_GOLD;
	combo_points = 0;
	for ( new i = 0; i < sizeof ( bell_combo ) ; i++ )
	{
		for ( new f = 0; f < sizeof ( rot_pos ) - 1; f++ )
		{
			if ( rot_pos [ f ] == bell_combo [ i ] )combo_points ++ ;
		}
	}
	if ( combo_points == 3 ) return COMBO_BELL;
	combo_points = 0;
	for ( new i = 0; i < sizeof ( grapes_combo ) ; i++ )
	{
		for ( new f = 0; f < sizeof ( rot_pos ) - 1; f++ )
		{
			if ( rot_pos [ f ] == grapes_combo [ i ] )combo_points ++ ;
		}
	}
	if ( combo_points == 3 ) return COMBO_GRAPES;
	combo_points = 0;
	for ( new i = 0; i < sizeof ( sn_combo ) ; i++ )
	{
		for ( new f = 0; f < sizeof ( rot_pos ) - 1; f++ )
		{
			if ( rot_pos [ f ] == sn_combo [ i ] )combo_points ++ ;
		}
	}
	if ( combo_points == 3 ) return COMBO_69;
	return false;
}

stock ShowMeditionCard(playerid, targetid)
{
	new P_Disease[25];
	new P_Disease1[25];
	new P_Disease2[25];
	if(!p_info[playerid][Disease][0]) P_Disease = "Нет";
	else format(P_Disease, 25, "%d степень", p_info[playerid][Disease][0]);
	if(!p_info[playerid][Disease][1]) P_Disease1 = "Нет";
	else format(P_Disease1, 25, "%d степень", p_info[playerid][Disease][1]);
	if(!p_info[playerid][Disease][2]) P_Disease2 = "Нет";
	else format(P_Disease2, 25, "%d - 1000", p_info[playerid][Disease][2]);

	stringer[0] = EOS;
	format(stringer,1000,"%s{"#cWHITE"}Имя: {ffff00}%s\n",stringer,NamePlayer[playerid]);
	format(stringer,1000,"%s{"#cWHITE"}Возраст: {ffff00}%i\n",stringer,p_info[playerid][pAge]);
	format(stringer,1000,"%s{"#cWHITE"}Пол: {ffff00}%s\n",stringer,(p_info[playerid][pSex] == 1) ? ("Мужской") : ("Женский"));
	format(stringer,1000,"%s{"#cWHITE"}Медицинский осмотр: {ffff00}%s\n",stringer,(p_info[playerid][pMed] == 1) ? ("Пройден") : ("Не пройден"));
	format(stringer,1000,"%s{"#cWHITE"}Наркозависимость: {ffff00}%s\n",stringer,P_Disease2);
	format(stringer,1000,"%s{"#cWHITE"}ОРВИ: {ffff00}%s\n",stringer,P_Disease);
	format(stringer,1000,"%s{"#cWHITE"}Гастрит: {ffff00}%s\n",stringer,P_Disease1);

	ShowPlayerDialog(targetid,0000,DIALOG_STYLE_MSGBOX, "{"#cPINK"}Медицинская карта", stringer, "Закрыть", "");
	return 1;
}
stock Kazvihod(playerid)
{
	if (RuletSum[playerid] > 0)
	{
		SendClientMessage(playerid, -1, "Вы отменили ставку!");
		RuletTip[playerid] = 0;
		TransferMoney(playerid,p_info[playerid][pCash]+RuletSum[playerid],RuletSum[playerid],"вернули ставку рулетки");
		p_info[playerid][pCash] += RuletSum[playerid];
		UpdateMoney(playerid);
		RuletSum[playerid] = 0;
	}
	SetCameraBehindPlayer(playerid);
	AC_TogglePlayerControllable(playerid, 1);
	if(RuletkaStol[playerid] == 1) Maxis[0]--;
	else if(RuletkaStol[playerid] == 2) Maxis[1]--;
	else if(RuletkaStol[playerid] == 3) Maxis[2]--;
	RuletkaStol[playerid] 	=	0;
	Upravakazino[playerid] 	=	false;
	return DestroyPlayerObject(playerid, Fishka[playerid]);
}
forward RuletCheck(cid);
public RuletCheck(cid) // Казино
{
	if (KrupieTime[cid] < 70) KrupieTime[cid] ++;
	new string[6], ruletikF = random(36);
	foreach(i)
	{
		if(RuletkaStol[i] != cid + 1 || RuletSum[i] == 0)continue;
		switch(ruletikF)
		{
			case 0: 												format(string, sizeof(string), "~g~%d",ruletikF);
			case 1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36: 	format(string, sizeof(string), "~r~%d",ruletikF);
			case 2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35: format(string, sizeof(string), "~w~%d",ruletikF);
		}
		GameTextForPlayer(i, string, 5000, 6);
	}
	if(KrupieTime[cid] >= 70)
	{
		if(rullet_[cid][rullet_timer] != -1)
		{
			KillTimer(rullet_[cid][rullet_timer]);
			rullet_[cid][rullet_timer] = -1;
		}
		new Slotrulet1;
		if(ruletikF ==1 || ruletikF ==3 ||
		ruletikF ==7 || ruletikF ==9 ||
		ruletikF ==12 || ruletikF ==14 ||
		ruletikF ==16 || ruletikF ==18 ||
		ruletikF ==19 || ruletikF ==21 ||
		ruletikF ==23 || ruletikF ==25 ||
		ruletikF ==27 || ruletikF ==30 ||
		ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
		{
			Slotrulet1 = 1;
		}
		else if(ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36) Slotrulet1 = 2;
		else Slotrulet1 = 3;
		KrupieTime[cid] = 0;
		WinWinWin(cid + 1, Slotrulet1, ruletikF);
	}
	return 1;
}

stock WinWinWin(stoll, Slotrulet1, ruletikF)
{
	new summaVigrisha = 0, string_wins[144];
	foreach(h)
	{
		if (RuletSum[h] == 0) continue;
		if (RuletkaStol[h] == stoll)
		{
			summaVigrisha = 0;
			DestroyPlayerObject(h, Fishka[h]);
			Fishka[h] = CreatePlayerObject(h,1913,fishechkax[h],fishechkay[h],fishechkaz[h],0.00,0.00,0.00);
			Upravakazino[h]	=	true;
			switch(RuletTip[h])
			{
				case 1..37: if ((RuletTip[h] - 1) == ruletikF) summaVigrisha = floatround(RuletSum[h] * 1.35);
				case 38,39:
				{
					if (Slotrulet1 == 1 && RuletTip[h]==38) summaVigrisha = floatround(RuletSum[h] * 1.2);
					else if (Slotrulet1 == 2 && RuletTip[h]	==	39) summaVigrisha = floatround(RuletSum[h] * 1.2);
				}
				case 40:
					if (ruletikF >= 1 && ruletikF <= 12) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 41:
					if (ruletikF >=13 && ruletikF<=24) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 42:
					if (ruletikF >=25 && ruletikF<=36) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 43:
					if (ruletikF >=1 && ruletikF<=18) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 44:
					if (ruletikF >=19 && ruletikF<=36) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 45:
					if (ruletikF == 2 || ruletikF == 4 || ruletikF == 6 ||
					ruletikF == 8 || ruletikF == 10 || ruletikF == 12 ||
					ruletikF == 14 || ruletikF == 16 || ruletikF == 18 ||
					ruletikF == 20 || ruletikF == 22 || ruletikF == 24 ||
					ruletikF == 26 || ruletikF == 28 || ruletikF == 30 ||
					ruletikF == 32 || ruletikF == 34 || ruletikF == 36) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 46:
					if (ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF == 27 || ruletikF == 29 || ruletikF == 31 || ruletikF == 33 || ruletikF == 35) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 47: if (ruletikF == 3 || ruletikF == 6 || ruletikF == 9 || ruletikF == 12 || ruletikF == 15 || ruletikF == 18 || ruletikF == 21 || ruletikF == 24 || ruletikF == 27 || ruletikF == 30 || ruletikF == 33 || ruletikF == 36) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 48: if (ruletikF == 2 || ruletikF == 5 || ruletikF == 8 || ruletikF == 11 || ruletikF == 14 || ruletikF == 17 || ruletikF == 20 || ruletikF == 23 || ruletikF == 26 || ruletikF == 29 || ruletikF == 32 || ruletikF == 35) summaVigrisha = floatround(RuletSum[h] * 1.2);
				case 49: if (ruletikF == 1 || ruletikF == 4 || ruletikF == 7 || ruletikF == 10 || ruletikF == 13 || ruletikF == 16 || ruletikF == 19 || ruletikF == 22 || ruletikF == 25 || ruletikF == 28 || ruletikF == 31 || ruletikF == 34) summaVigrisha = floatround(RuletSum[h] * 1.2);
			}
			if(summaVigrisha != 0)
			{
				TransferMoney(h,p_info[h][pCash]+summaVigrisha,summaVigrisha,"выиграл в рулетке");
				p_info[h][pCash] += summaVigrisha;
				UpdateMoney(h);
				format(string_wins, 144, "Выпало число %d. Вы выйграли %d $!",ruletikF,summaVigrisha);
			}
			else format(string_wins, 144, "Выпало число %d. Ваша ставка не сыграла!",ruletikF);
			SCM(h, CYELLOW, string_wins);
			RuletTip[h] 	=	0;
			RuletSum[h] 	=	0;
		}
	}
	return 1;
}
/********************************************************************************************/
stock Stavkarul1right(playerid)// стрелочка в право ВСЕ РАБОТАЕТ ЧЕТКО
{
	switch(NumberFishka[playerid])
	{
	case 0:
		{
			fishechkay[playerid]	 +=	0.1499;
			NumberFishka[playerid]		=2;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 1..36:
		{
			fishechkay[playerid]	+=	0.1499;
			NumberFishka[playerid] 	+=	3;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 37..39: return true;//конец стола 3 to 1
	case 40, 41:// 1 st 12,  2nd 12
		{
			fishechkay[playerid]	+=	0.608;
			NumberFishka[playerid] 	+=	1;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 42: return true; // конец стола 3rd 12
	case 43..47://
		{
			fishechkay[playerid]	+=	0.3;
			NumberFishka[playerid] 	+=	1;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 48: return true; // конец стола 19 to 36
	}
	return 1;
}
stock Stavkarul1left(playerid)// стрелочка в в лево
{
	switch(NumberFishka[playerid])
	{
	case 4..39:
		{
			fishechkay[playerid]	-=0.1499;
			NumberFishka[playerid] 	-=	3;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 40: return true; // 1 st 12
	case 41,42: // 2 nd 12 and 3rd 12
		{
			fishechkay[playerid]	-=	0.608;
			NumberFishka[playerid] 	-=	1;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 44..48:
		{
			fishechkay[playerid]	-=	0.3;
			NumberFishka[playerid] 	-=	1;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 43: return true; // 1 to 18
	case 2:
		{
			NumberFishka[playerid] 		=	0;
			fishechkay[playerid]		-=	0.1316;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 3:
		{
			NumberFishka[playerid] 		=	0;
			fishechkay[playerid]		-=	0.1316;
			fishechkax[playerid]		+=	0.25;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	case 1:
		{
			NumberFishka[playerid] 		=	0;
			fishechkay[playerid]		-=	0.1316;
			fishechkax[playerid]		-=	0.25;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
	}
	return 1;
}
/********************************************************************************************/
stock Stavkarul1up(playerid)// стрелочка в верх
{
	switch(NumberFishka[playerid])
	{
		case 1,2,4,5,7,8,10,11,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38:
		{
			fishechkax[playerid]	-=	0.25;
			NumberFishka[playerid] 	+=	1;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
		case 40:
		{
			fishechkax[playerid]	-=	0.25;
			NumberFishka[playerid] 	 =	4;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
		case 41:
		{
			fishechkax[playerid]	-=	0.25;
			NumberFishka[playerid] 	 =	16;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
		case 42:
		{
			fishechkax[playerid]	-=	0.25;
			NumberFishka[playerid] 	 =	28;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid], fishechkay[playerid], fishechkaz[playerid]);
		}
		case 3,6,9,12,15,18,21,24,27,30,33,36,39: return true;
		case 43:
		{
			fishechkax[playerid]	-=	0.25;
			fishechkay[playerid]	+=	0.1;
			NumberFishka[playerid] 	=	40;//
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
		case 44:
		{
			fishechkax[playerid]	-=	0.25;
			fishechkay[playerid]	-=	0.2;
			NumberFishka[playerid] 	=	40;//
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
		case 45:
		{
			fishechkax[playerid]	-=	0.25;
			fishechkay[playerid]	+=	0.1;
			NumberFishka[playerid] 	=	41;//
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
		case 46:
		{
			fishechkax[playerid]	-=	0.25;
			fishechkay[playerid]	-=	0.2;
			NumberFishka[playerid] 	=	41; //
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
		case 47:
		{
			fishechkax[playerid]	-=	0.25;
			fishechkay[playerid]	-=	0.1;
			NumberFishka[playerid] 	=	42;//
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
		case 48:
		{
			fishechkax[playerid]	-=	0.25;
			fishechkay[playerid]	-=	0.2;
			NumberFishka[playerid] 	=	42; //
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	}
	return 1;
}
/********************************************************************************************/
stock Stavkarul1down(playerid)// стрелочка в вниз Все хорошо работает
{
	//SendMes(playerid, -1, "Ставка на %d", NumberFishka[playerid]);
	switch(NumberFishka[playerid])
	{
	case 2,3,5,6,8,9,11,12,14,15,17,18,20,21,23,24,26,27,29,30,32,33,35,36,38,39:
		{
			fishechkax[playerid]	+=	0.25;
			NumberFishka[playerid] 	-=	1;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 1:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	+=	0.152;
			NumberFishka[playerid] 	=	40;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 4:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	+=	0.152;
			NumberFishka[playerid] 	=	40;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 7:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	+=	0.152;
			NumberFishka[playerid] 	=	40;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 10:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.304;
			NumberFishka[playerid] 	=	40;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 13:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	+=	0.152;
			NumberFishka[playerid] 	=	41;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 16:
		{
			fishechkax[playerid]	+=	0.25;
			NumberFishka[playerid] 	=	41;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 19:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.152;
			NumberFishka[playerid] 	=	41;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 22:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.304;
			NumberFishka[playerid] 	=	41;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 25:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.152;
			NumberFishka[playerid] 	=	42;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 28:
		{
			fishechkax[playerid]	+=	0.25;
			NumberFishka[playerid] 	=	42;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 31:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.152;
			NumberFishka[playerid] 	=	42;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 34:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.304;
			NumberFishka[playerid] 	=	42;
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 40:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.100;
			NumberFishka[playerid] 	=	43;//1 to 18
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 41:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.100;
			NumberFishka[playerid] 	=	45;// red
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}
	case 42:
		{
			fishechkax[playerid]	+=	0.25;
			fishechkay[playerid]	-=	0.100;
			NumberFishka[playerid] 	=	47; // odd
			return SetPlayerObjectPos(playerid, Fishka[playerid], fishechkax[playerid],fishechkay[playerid], fishechkaz[playerid]);
		}

	}
	return 1;
}
stock ProxDetectorNew(playerid,Float:Radi=10.0,color,text[],bool:bubble = false)
{
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	foreach(i)
	{
		if(!IsPlayerInRangeOfPoint(i,Radi,pos[0],pos[1],pos[2])) continue;
		if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(playerid) == GetPlayerInterior(i))
		{
			SendClientMessage(i,color,text);
		}
	}
	if(bubble == true) strdel(text,0,strlen(NamePlayer[playerid])+1), SetPlayerChatBubble(playerid,text,color,Radi,10000);
	return 1;
}


forward StartDrawing(playerid);
public StartDrawing(playerid)
{
	SendClientMessage(playerid,0xFFFFFFFF,"Вы начали рисовать граффити. Для окончания нажимайте на кнопки, которые высвечиваются у вас на экране.");
	SetPVarInt(playerid,"SettingGraffiti",1);
	UpdateTimer[playerid] = SetTimerEx("UpdateKey",2000,true,"i",playerid);
	SetPVarInt(playerid,"ColorNow",1);
	DeletePVar(playerid,"CountTimer");
	FIXES_ApplyAnimation(playerid, "SPRAYCAN", "spraycan_full", 4.0, 1, 1, 1, 0, 0, 1);
	return 1;
}
forward UpdateKey(playerid);
public UpdateKey(playerid)
{
	if(GetPVarInt(playerid, "SettingGraffiti") == 1)
	{
		SetPVarInt(playerid,"CountTimer",GetPVarInt(playerid, "CountTimer")+1);
		if(GetPVarInt(playerid, "CountTimer") == 10) return GraffitiDone(playerid);
		if(GetPVarInt(playerid, "KeyPressed") == 0 && GetPVarInt(playerid, "KeyForPress") != 0) return GraffitiFailed(playerid);
		DeletePVar(playerid,"KeyPressed");
		new txt[2];
		new changecolor[4];
		new string[64];
		switch(random(3))
		{
			case 0: SetPVarInt(playerid,"KeyForPress",1), txt = "Y";
			case 1: SetPVarInt(playerid,"KeyForPress",2), txt = "H";
			case 2: SetPVarInt(playerid,"KeyForPress",3), txt = "N";
		}
		if(GetPVarInt(playerid, "ColorNow") == 1) { SetPVarInt(playerid,"ColorNow",2); } else if(GetPVarInt(playerid, "ColorNow") == 2) { SetPVarInt(playerid,"ColorNow",1); }
		switch(GetPVarInt(playerid, "ColorNow"))
		{
			case 1: changecolor = "~r~";
			case 2: changecolor = "~g~";
		}
		PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
		format(string, 64, "PRESS: %s%s", changecolor, txt);
		GameTextForPlayer(playerid,string, 1000, 5);
	}
	return 1;
}
GraffitiDone(playerid)
{
	if(GetPVarInt(playerid, "SettingGraffiti") == 1)
	{
		new object;
		KillTimer(UpdateTimer[playerid]);
		switch(p_info[playerid][tMember])
		{
			case 0: object = 1525;
			case 15: object = 18659;
			case 17: object = 18661;
			case 18: object = 18663;
			case 12: object = 18664;
			case 13: object = 18665;//вагос
		}
		DestroyDynamicObject(GrafInfo[GetPVarInt(playerid,"Grafity")][gObject]);
		GrafInfo[GetPVarInt(playerid,"Grafity")][gObject] = CreateDynamicObject(object, GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][0], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][1], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][2], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][3], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][4], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][5]);
		ResetVariables(playerid);
		SendClientMessage(playerid,0xFFFFFFFF,"Вы успешно завершили рисовать.");
		GameTextForPlayer(playerid,"~y~READY", 1000, 5);
		ClearAnimations(playerid);
	}
	return 1;
}

GraffitiFailed(playerid)
{
	if(GetPVarInt(playerid, "SettingGraffiti") == 1)
	{
		KillTimer(UpdateTimer[playerid]);
	  //  DestroyDynamicObject(GraffitiObject[playerid]);
		ResetVariables(playerid);
		SendClientMessage(playerid,0xFF6800FF,"Вы провалили задание и не смогли нарисовать граффити.");
		GameTextForPlayer(playerid,"~y~READY", 1000, 5);
		ClearAnimations(playerid);
	}
	return 1;
}

ResetVariables(playerid)
{
	if(GetPVarInt(playerid, "SettingGraffiti") == 1)
	{
		DeletePVar(playerid, "SettingGraffiti");
		DeletePVar(playerid,"KeyForPress");
		DeletePVar(playerid,"KeyPressed");
		DeletePVar(playerid,"ColorNow");
		DeletePVar(playerid,"CountTimer");
	}
	return 1;
}
stock AttackHit(playerid, attackerid, weaponid)
{
	if(p_info[playerid][pHeadValue] >= 1)
	{
		if(IsPlayerConnected(attackerid))
		{
			if(GoChase[attackerid] == playerid)
			{
				Executing(attackerid, playerid);
			}
		}
	}
	if(IsPlayerConnected(attackerid))
	{
		if(GoChase[playerid] == attackerid)
		{
			new szMessage[64 + MAX_PLAYER_NAME];
			new takemoney = floatround(p_info[attackerid][pHeadValue] / 4);
			p_info[attackerid][pCash] += takemoney;
			UpdateMoney(attackerid);
			format(szMessage, sizeof(szMessage),"Хитман %s провалил выполнение контракта на %s и потерял $%d.",GetPlayerNameEx(playerid),GetPlayerNameEx(attackerid),takemoney);
			SendFamilyMessage(23, COLOR_YELLOW, szMessage);
			p_info[playerid][pCash] -= takemoney;
			UpdateMoney(playerid);
			format(szMessage, sizeof(szMessage),"Ваш киллер мертв, вы забрали у него $%d, охота закончена.",takemoney);
			SCM(attackerid, COLOR_YELLOW, szMessage);
			p_info[attackerid][pHeadValue] = 0;
			p_info[playerid][pFHits] += 1;
			GotHit[attackerid] = 0;
			GetChased[attackerid] = INVALID_PLAYER_ID;
			GoChase[playerid] = INVALID_PLAYER_ID;
			UpdatePlayerData(attackerid,"pHeadValue",p_info[attackerid][pHeadValue]);
			UpdatePlayerData(playerid,"pFHits",p_info[playerid][pHeadValue]);
		}
	}
	if(GetPVarInt(playerid,"id_pvp")>0)
	{
		for(new d = 0; d < MAX_DUELS; d++)
		{
			if((duel_[d][duel_id]==playerid || duel_[d][duel_to_id]==playerid) && (duel_[d][duel_id]==attackerid || duel_[d][duel_to_id]==attackerid))
			{
				new duel_string[144];
				format(duel_string,144,"Дуэль окончен. Победил: {"#cWHITE"}%s",(duel_[d][duel_to_id]==playerid) ? (NamePlayer[duel_[d][duel_id]]) : (NamePlayer[duel_[d][duel_to_id]]));
				SendClientMessage(duel_[d][duel_id],CORANGE,duel_string);
				SendClientMessage(duel_[d][duel_to_id],CORANGE,duel_string);
				AC_SetPlayerHealth(duel_[d][duel_id],duel_[d][duel_health_id]);
				AC_SetPlayerHealth(duel_[d][duel_to_id],duel_[d][duel_health_to_id]);
				SetPlayerVirtualWorld(duel_[d][duel_id],duel_[d][duel_last_vw]);
				SetPlayerVirtualWorld(duel_[d][duel_to_id],duel_[d][duel_last_vw]);

				if(duel_[d][duel_id]==playerid)
				{
					TransferMoney(playerid,p_info[duel_[d][duel_id]][pCash]+duel_[d][duel_money],duel_[d][duel_money],"выиграл в дуэле");
					p_info[duel_[d][duel_id]][pCash] += duel_[d][duel_money];
					UpdateMoney(duel_[d][duel_id]);
				}
				else if(duel_[d][duel_to_id]==playerid)
				{
					TransferMoney(playerid,p_info[duel_[d][duel_id]][pCash]+duel_[d][duel_money],duel_[d][duel_money],"выиграл в дуэле");
					p_info[duel_[d][duel_to_id]][pCash] += duel_[d][duel_money];
					UpdateMoney(duel_[d][duel_to_id]);
				}

				new pp[2];
				pp[0]=duel_[d][duel_id];
				pp[1]=duel_[d][duel_to_id];
				for(new i = 0; i < 2; i++)
				{
					new weapons[13][2];
					for(new S = 0; S<13; S++) GetPlayerWeaponData(pp[i], S, weapons[S][0], weapons[S][1]) ;
					AC_ResetPlayerWeapons ( pp[i] ) ;
					for(new S = 0; S<13 ; S++) if(weapons[S][0] != duel_[d][duel_gun] && weapons[S][0] != 0) AC_GivePlayerWeapon (pp[i],weapons[S][0],weapons[S][1]);
				}
				FreezePlayerForTime(duel_[d][duel_id],3000);
				FreezePlayerForTime(duel_[d][duel_to_id],3000);

				DeletePVar(duel_[d][duel_id], "id_pvp");
				DeletePVar(duel_[d][duel_id],"duel_nachalsya");
				DeletePVar(duel_[d][duel_to_id], "id_pvp");
				DeletePVar(duel_[d][duel_to_id], "id_gun");
				DeletePVar(duel_[d][duel_to_id], "money_pvp");


				duel_[d][duel_id] = -1;
				duel_[d][duel_to_id] = -1;
				duel_[d][duel_last_vw] = 0;
				duel_[d][duel_gun]=0;
				if(duel_[d][duel_timer] != -1)
				{
					KillTimer(duel_[d][duel_timer]);
					duel_[d][duel_timer] = -1;
				}
				duel_[d][duel_health_id] = 100.0;
				duel_[d][duel_health_to_id] = 100.0;
				duel_[d][duel_time]=0;
				duel_[d][duel_money]=0;
				duel_t--;
				return 1;
			}
		}
	}
	if(IsAGang(playerid) || (GetPVarInt(playerid,"pteam") && PaintBallStatus) || (GetPVarInt(playerid,"set_zombie") && ZombieTime <= 0))
	{
		GetPlayerPos(playerid, gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2]);
		AC_SetPlayerHealth(playerid,0.0);
		gKilledWithAntiDeath[playerid] = 5;
		OnPlayerSyncDeath(playerid, attackerid, weaponid);
		SpawnPlayer(playerid);
		return true;
	}
	GetPlayerPos(playerid, gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2]);
	gDeathDataIntVW[playerid][0]=GetPlayerVirtualWorld(playerid);
	gDeathDataIntVW[playerid][1]=GetPlayerInterior(playerid);
	if(gKilledWithAntiDeath[playerid]==0)
	{
		gKilledWithAntiDeath[playerid]=1;
		//AC_TogglePlayerControllable(playerid, false);

		new count_damage_count =1;
		for(new x = 0; x < MAX_DAMAGES_STRING; x++)
		{
			if(gDamagesData[playerid][x][gdBody] == -1) continue;
			count_damage_count++;
		}
		new send_damages_info[200];
		format(send_damages_info,200,"(( Игрок был ранен %d раз(-а), для просмотра более точной информации введите /damages %d ))",count_damage_count, playerid);
		if(damage_text[playerid]!=Text3D:-1)
		{
			Delete3DTextLabel(damage_text[playerid]);
			damage_text[playerid]=Text3D:-1;
		}
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		damage_text[playerid] = Create3DTextLabel(send_damages_info,COLOR_LIGHTRED, x, y, z, 10.5, GetPlayerVirtualWorld(playerid));
		Attach3DTextLabelToPlayer(damage_text[playerid], playerid, 0.0, 0.0, 0.5);
		//SWEET SWEET_INJUREDLOOP
		//FIXES_ApplyAnimation(playerid, "SWEET", "SWEET_INJUREDLOOP", 4.1, 0, 0, 0, 1, 0, 1 );
		AC_TogglePlayerControllable(playerid, false);
		SetTimerEx("Animation_Death",600,0,"i",playerid);
		TimeWithDeath[playerid] = 120;
		AC_SetPlayerHealth(playerid, 15.0);
		//
		//SetPlayerCameraPos(playerid,gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2] - 0.2); 		//Камера позиция.
		//SetPlayerCameraLookAt(playerid,gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2] + 10.0);	 	//Камера направление.
	}
	else if(gKilledWithAntiDeath[playerid]==1)
	{
		AC_TogglePlayerControllable(playerid, false);
		SetTimerEx("Animation_Death_2",600,0,"i",playerid);
		//FIXES_ApplyAnimation( playerid, "PED", "KO_SHOT_FRONT", 4.1, 0, 0, 0, 1, 0, 1 );
		//FIXES_ApplyAnimation(playerid, "PED", "KO_SHOT_FRONT", 4.0, 0, 0, 0, 0, 1, 1);
		//FIXES_ApplyAnimation(playerid, "PED", "KO_SHOT_FRONT", 4.0, 0, 0, 0, 0, 0, 1);
		//SCM(playerid,-1,"Чтобы появиться в больнице введите: {"#cORANGE"}/accept death");
		SendClientMessage(playerid,0xC6C6C6FF, "[Телефон]: Держитесь, скорая уже в пути...");
		SCM(playerid,0xCCCC99FF,"(( Чтобы появиться в больнице введите: /adeath ))");
		TimeWithDeath[playerid] = 120;
		Update3DTextLabelText(damage_text[playerid],COLOR_LIGHTRED,"(( Данный игрок мёртв ))");
		gKilledWithAntiDeath[playerid] = 2;
		//
		//SetPlayerCameraPos(playerid,gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2] - 0.2); 		//Камера позиция.
		//SetPlayerCameraLookAt(playerid,gDeathPos[playerid][0], gDeathPos[playerid][1], gDeathPos[playerid][2] + 10.0);	 	//Камера направление.
	}
	if(GetPlayerDrunkLevel(playerid)<4000)SetPlayerDrunkLevel (playerid, 4000);
	if(IsPlayerConnected(attackerid)) SetPVarInt(playerid,"sync_attackerid",attackerid + 1);
	SetPVarInt(playerid,"sync_weaponid",weaponid);
	return 1;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32+1];
	new x = 0;
	new ip_count = 0;
	for(x=0; x<MAX_PLAYERS; x++) {
		if(IsPlayerConnected(x)) {
			GetPlayerIp(x,against_ip,32);
			if(!strcmp(against_ip,test_ip)) ip_count++;
		}
	}
	return ip_count;
}

forward ConnectionBot();
public ConnectionBot()
{
	if(hours_connect_bot[current_slot][2]==1)
	{
		new bot_name[64];
		format(bot_name, 64, "%s_%s", Firstname[random(171)], Lastname[random(213)]);
		//ConnectNPC(bot_name, "npctest");
		#if defined USE_BOT_GBOT
			AddFakeBot();
		#endif
		printf("подключаем бота %s [ ! ]", bot_name);
	}
	else if(hours_connect_bot[current_slot][2]==0)
	{
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsBotServer(i)) {
					Kick(i);
					break;
				}
			}
		}
	}
	count_connect_bots ++;
	if(count_connect_bots >= hours_connect_bot[current_slot][1])
	{
		count_connect_bots = 0;
		KillTimer(timer_connect_bots);
		timer_connect_bots = -1;
	}
	return 1;
}

/*CMD:test_polet(playerid)
{
	for(new i = 1; i < MAX_VEHICLES; i++)
	{
		if(gVehicles[i - 1][vFraction] != p_info[playerid][tMember]) continue;
		else if(gVehicles[i - 1][vModel] != 511) continue;
		else if(gVehicles[i - 1][vFractionRank] > p_info[playerid][tRank]) continue;
		else if(gVehicles[i - 1][vOccupied] != -1) continue;

		AC_SetVehiclePos(i, veh_pos_load__[0][0],veh_pos_load__[0][1],veh_pos_load__[0][2]);
		AC_SetVehicleZAngle(i, veh_pos_load__[0][3]);

		AC_PutPlayerInVehicle(playerid, i, 0);

		veh_pos_load__Step[playerid] = 2;
		SetPlayerRaceCheckpoint(playerid,3,veh_pos_load__[1][0],veh_pos_load__[1][1],veh_pos_load__[1][2],veh_pos_load__[2][0],veh_pos_load__[2][1],veh_pos_load__[2][2], 30.0);
		break;
	}
	return true;
}*/


stock LoadTDLowride(playerid)
{
	if ( lowrideArrow[playerid][0] == PlayerText:-1 )
	{
		SelectLowride[playerid][0] = random(8);
		lowrideArrow[playerid][0] = CreatePlayerTextDraw(playerid, 365.000000, 400.000000, lowrideArrows[SelectLowride[playerid][0]][lowrideAdataName]);
		PlayerTextDrawTextSize(playerid, lowrideArrow[playerid][0], 27.000000 - 5.000000, 22.000000 - 5.000000);
		PlayerTextDrawColor(playerid, lowrideArrow[playerid][0], -1);
		PlayerTextDrawFont(playerid, lowrideArrow[playerid][0], 4);
	}
	if ( lowrideArrow[playerid][1] == PlayerText:-1 )
	{
		SelectLowride[playerid][1] = random(8);
		lowrideArrow[playerid][1] = CreatePlayerTextDraw(playerid, 305.000000, 400.000000, "");
		PlayerTextDrawTextSize(playerid, lowrideArrow[playerid][1], 25.000000, 22.000000);
		PlayerTextDrawColor(playerid, lowrideArrow[playerid][1], -1);
		PlayerTextDrawFont(playerid, lowrideArrow[playerid][1], 4);
	}
	if ( lowrideArrow[playerid][2] == PlayerText:-1 )
	{
		lowrideArrow[playerid][2] = CreatePlayerTextDraw(playerid, 245.000000, 400.000000, "");
		PlayerTextDrawTextSize(playerid, lowrideArrow[playerid][2], 27.000000 - 5.000000, 22.000000 - 5.000000);
		PlayerTextDrawColor(playerid, lowrideArrow[playerid][2], -1);
		PlayerTextDrawFont(playerid, lowrideArrow[playerid][2], 4);
	}

	return 1;
}

stock LoadLowCoToSelect(playerid)
{
	if ( lowrideCarToSelect[playerid] == PlayerText:-1 )
	{
		lowrideCarToSelect[playerid] = CreatePlayerTextDraw(playerid, 229.106887, 106.166694, "PreviewModel");
		PlayerTextDrawLetterSize(playerid, lowrideCarToSelect[playerid], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, lowrideCarToSelect[playerid], 153.206420, 226.916671);
		PlayerTextDrawAlignment(playerid, lowrideCarToSelect[playerid], 1);
		PlayerTextDrawColor(playerid, lowrideCarToSelect[playerid], -1);
		PlayerTextDrawSetShadow(playerid, lowrideCarToSelect[playerid], 0);
		PlayerTextDrawSetOutline(playerid, lowrideCarToSelect[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, lowrideCarToSelect[playerid], 2490368);
		PlayerTextDrawFont(playerid, lowrideCarToSelect[playerid], 5);
		PlayerTextDrawSetPreviewModel(playerid, lowrideCarToSelect[playerid], lowride_vehicles[0]);
		PlayerTextDrawSetPreviewVehCol(playerid,lowrideCarToSelect[playerid], 0, 0);
		PlayerTextDrawSetPreviewRot(playerid, lowrideCarToSelect[playerid], 0.000000, -10.000000, 25.000000, 1.000000);
	}
	PlayerTextDrawShow(playerid, lowrideCarToSelect[playerid]);
}
stock SuccessLowride(playerid)
{
	GameTextForPlayer(playerid, "~g~Good!", 1000, 6);
	SelectLowride[playerid][2] = 1;
	SelectLowride[playerid][4]++;
	if ( SelectLowride[playerid][1] == SelectLowride[playerid][0] )
	{
		GameTextForPlayer(playerid, "~g~Excellent!", 1000, 6);
	}
	else if ( SelectLowride[playerid][4] == 2 )
	{
		SelectLowride[playerid][4] = 0;
		GameTextForPlayer(playerid, "~g~Very Wheel!", 1000, 6);
	}
	else GameTextForPlayer(playerid, "~g~Good!", 1000, 6);
	for ( new i = 2; i <= 11; i++)
	{
		if(playerid == lowride_list_player[i - 2])
		{
			lowride_list_score[i - 2] += 5;
			break;
		}
	}
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	PlayerPlaySound(playerid, 1139, x,y,z);
	return 1;
}

stock FailLowride(playerid)
{
	SelectLowride[playerid][4]--;
	if ( SelectLowride[playerid][4] == 2 )
	{
		GameTextForPlayer(playerid, "~r~Sucks!", 1000, 6);
	}
	else GameTextForPlayer(playerid, "~r~Badly!", 1000, 6);
	return 1;
}
stock CreateGardenCount(playerid)
{
	if(GardenCount[playerid] != PlayerText:-1)
	{
		PlayerTextDrawDestroy(playerid, GardenCount[playerid]);
		GardenCount[playerid]=PlayerText:-1;
	}
	GardenCount[playerid] = CreatePlayerTextDraw(playerid, 555.023986, 145.833419, "APPLE: 0 / 10");
	PlayerTextDrawLetterSize(playerid, GardenCount[playerid], 0.259780, 1.185833);
	PlayerTextDrawAlignment(playerid, GardenCount[playerid], 2);
	PlayerTextDrawColor(playerid, GardenCount[playerid], -1);
	PlayerTextDrawSetOutline(playerid, GardenCount[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, GardenCount[playerid], 255);
	PlayerTextDrawFont(playerid, GardenCount[playerid], 2);
	return 1;
}

stock UpdateDonate(playerid)
{
	mysql_query_string[0] = EOS;
	format(mysql_query_string,211,"SELECT `pRouble`,`tDonatemoney2` FROM `accounts` WHERE `ID` = '%d'", p_info[playerid][pID]);
	mysql_pquery(connects, mysql_query_string, "UpdatePlayerDonate","d",playerid);
	return 1;
}

forward UpdatePlayerDonate(playerid);
public UpdatePlayerDonate(playerid)
{
	cache_get_value_int(0,"pRouble",p_info[playerid][pRouble]);
	cache_get_value_int(0,"tDonatemoney2",p_info[playerid][tDonatemoney2]);
	return 1;
}

CMD:fpanel(playerid)
{
	if(!IsAFarmer(playerid)) return SendClientMessage(playerid,0xBE2D2DFF,"[Ошибка] {FFFFFF}Вы не владелец фермы.");
	new f = GetPVarInt(playerid,"owner_farm")-1;
	format(stringer, 1000, "1. Бюджет фермы {6495ED}[%d$]\n{FFFFFF}2. Статус склада {B8CEF6}[%d кг]\n{FFFFFF}3. Оплата рабочим за куст {6495ED}[%d$]\n{FFFFFF}4. Простой без зерна {B8CEF6}[%d часов]\n{BE2D2D}Продать ферму",_farm[f][farm_cash], _farm[f][farm_sklad_count], _farm[f][farm_cost_flow], _farm[f][farm_load]);
	ShowPlayerDialog(playerid, D_FARM_PANEL, DIALOG_STYLE_LIST, "{FFFFFF}Управление фермой", stringer, "Выбрать", "Отмена");
	return 1;
}


CMD:buyfarm(playerid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	for(new f = 0; f < MAX_FARMS; f++)
	{
		if(PointToPoint(x,y,z,_farm[f][farm_info_pos][0],_farm[f][farm_info_pos][1],_farm[f][farm_info_pos][2]) < 1.0)
		{
			if(!strcmp(_farm[f][farm_owner],"The State"))
			{
				ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "    ", "\t \t \t{D38A37}[ Покупка фермы ]{FFFFFF}\n\nПоздравляем, вы купили ферму. \nУправление фермой: {73B461}/fpanel\n\n{FFFFFF}Потерять ферму можно за:\n\n\
					{A52A2A}1. {EFEFF7}Простой без зерна 8 часов\n\
					{A52A2A}2. {EFEFF7}Не заходите в игру более 3 дней\n\
					{A52A2A}3. {EFEFF7}Долги в бюджете", "X", "");
				SetPVarInt(playerid, "owner_farm", f + 1);

				strmid(_farm[f][farm_owner], NamePlayer[playerid],0,strlen(NamePlayer[playerid]),MAX_PLAYER_NAME);
				UpdateFarm(f);
				//SendClientMessage(playerid,-1,"Информация. Вы купили ферму, ");
			}
			break;
		}
	}
	return 1;
}


stock ResetPlayerDynamicCP(playerid)
{
	for(new f = 0; f < MAX_FARMS; f++)
	{
		if(IsValidDynamicCP(_farm[f][farm_sklad_cp])) TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
		for ( new f2 = 0; f2 < 3; f2++)
		{
			for ( new f3 = 0; f3 < 6; f3++)
			{
				if(IsValidDynamicCP(farm_cp[f][f2][f3])) TogglePlayerDynamicCP(playerid, farm_cp[f][f2][f3], false);
			}
		}
	}
	return 1;
}
stock StartFarmLoad(playerid)
{
	new f = GetPVarInt(playerid, "use_farm");
	new use_farm_vehicle = GetPVarInt(playerid, "use_farm_vehicle");
	if(IsValidDynamicCP(_farm[f][farm_sklad_cp])) TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], false);
	for ( new f2 = 0; f2 < 3; f2++)
	{
		for ( new f3 = 0; f3 < 6; f3++)
		{
			if(IsValidDynamicCP(farm_cp[f][f2][f3])) TogglePlayerDynamicCP(playerid, farm_cp[f][f2][f3], false);
		}
	}
	TogglePlayerDynamicCP(playerid, _farm[f][farm_sklad_cp], true);
	if ( _farm[f][farm_pickup_first][use_farm_vehicle-1] != -1 )
	{
		DestroyPickup(_farm[f][farm_pickup_first][use_farm_vehicle-1]);
		_farm[f][farm_pickup_first][use_farm_vehicle-1] = -1;
	}
	if ( _farm[f][farm_area_first][use_farm_vehicle-1] != -1 )
	{
		DestroyDynamicArea(_farm[f][farm_area_first][use_farm_vehicle-1]);
		_farm[f][farm_area_first][use_farm_vehicle-1] = -1;
	}
	return 1;
}

stock GetRaceCheckpointFarm(f, slot, &Float:x, &Float:y, &Float:z, &Float:a)
{
	switch(slot)
	{
		case 0:
		{
			x = _farm[f][farm_v_cp_f][0];
			y = _farm[f][farm_v_cp_f][1];
			z = _farm[f][farm_v_cp_f][2];
			a = _farm[f][farm_v_cp_f][3];
		}
		case 1:
		{
			x = _farm[f][farm_v_cp_s][0];
			y = _farm[f][farm_v_cp_s][1];
			z = _farm[f][farm_v_cp_s][2];
			a = _farm[f][farm_v_cp_s][3];
		}
		case 2:
		{
			x = _farm[f][farm_v_cp_t][0];
			y = _farm[f][farm_v_cp_t][1];
			z = _farm[f][farm_v_cp_t][2];
			a = _farm[f][farm_v_cp_t][3];
		}
	}

	return 1;
}
stock FinishJobFarm(playerid)
{
	if(GetPVarInt(playerid,"start_farm"))
	{
		SetPVarInt(playerid,"pJobAmount.4",GetPVarInt(playerid,"pJobAmount.4")+GetPVarInt(playerid, "salary_farm"));
		p_info[playerid][pSalary] += GetPVarInt(playerid,"pJobAmount.4");
		UpdatePlayerData(playerid,"pSalary",p_info[playerid][pSalary]);
		format(stringer,144,"[Информация]{FFFFFF} Вы успешно закончили работу, заработано: {42B02C}[%d$]", GetPVarInt(playerid,"pJobAmount.4"));
		SendClientMessage(playerid,0x73B461FF,stringer);
		DeletePVar(playerid,"pJobAmount.4");
		SendClientMessage(playerid,-1,"Рабочий день окончен");
		DeletePVar(playerid, "use_farm");
		DeletePVar(playerid, "use_farm_vehicle");
		DeletePVar(playerid, "salary_farm");
		DeletePVar(playerid, "start_farm");
	}
	return 1;
}

CMD:fishes(playerid, params[])
{
	new str[20],string[200];
	for(new i;i < 5;i ++)
	{
		format(str,sizeof(str),"%s\n",FishName[PlayerFish[playerid][i]]);
		strcat(string,str);
	}
	if(!ShowPlayerDialog(playerid,0000,0,"Список рыб",string,"Ок",""))SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент.");
	return true;
}

CMD:get_fished(playerid)
{
	p_info[playerid][pWorms]++;
	p_info[playerid][pSpining]=1;
	return 1;
}

CMD:go_fished(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	if(p_info[playerid][pSpining] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет удочки");
	if(p_info[playerid][pWorms] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет наживки");
	if(Fishing[playerid]) return SendClientMessage(playerid,COLOR_GREY,"Вы уже ловите рыбу");
	for(new i;i < sizeof(FishZone);i ++)
	{
		if(!IsPlayerInRangeOfPoint(playerid,2.0,FishZone[i][0],FishZone[i][1],FishZone[i][2])) continue;
		SetPlayerArmedWeapon(playerid, 0);
		if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))
			SetPlayerAttachedObjectEx(playerid, 7,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
		AC_TogglePlayerControllable(playerid, false);
		FIXES_ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
		format(stringer,150,"закидывает крючок и ловит рыбу",NamePlayer[playerid]);
		MeAction(playerid, stringer);
		SetPlayerTimer(playerid,"PlayerFishing",15000 + random(10000),false);
		Fishing[playerid] = true;
		break;
	}
	return true;
}
CMD:throwfish(playerid, params[])
{
	new string[100], massa, Fish[20];
	for(new i; i < 5; i ++)
	{
		new fish = PlayerFish[playerid][i];
		if(fish == 0) strcat(string, "{AFAFAF}None\n");
		else
		{
			format(Fish, sizeof(Fish), "{33CCFF}%s %d Kg\n", FishName[fish], FishMassa[playerid][fish]);
			strcat(string, Fish);
			massa += FishMassa[playerid][fish];
		}
	}
	if(massa > 0)
	{
		format(Fish, sizeof(Fish), "{33CCFF}Всю рыбу %d Kg\n", massa);
		strcat(string, Fish);
	}
	ShowPlayerDialog(playerid,263,2,"Что выбросить?",string,"Выбросить","Отмена");
	return true;
}

public PlayerFishing(playerid)
{
	new rand_fish = 1+random(sizeof(FishName) + 8);
	new string[150];
	new Fished;
	AC_TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObjectEx(playerid, 7);
	ClearAnims(playerid);
	Fishing[playerid] = false;
	switch(rand_fish)
	{
		case 1..13:
		{
			for(new i;i < 5;i ++)
			{
				if(!PlayerFish[playerid][i])
				{
					new fish_massa = 1 + random(5);
					format(string,sizeof(string),"Вы поймали ' {73B461}%s{FFFFFF} ' массой %d кг.",FishName[rand_fish],fish_massa);
					SendClientMessage(playerid,CWHITE,string);
					PlayerFish[playerid][i] = rand_fish;
					FishMassa[playerid][i] = fish_massa;
					p_info[playerid][pWorms] --;
					Fished = 1;
					break;
				}
			}
			if(!Fished)
			{
				new fish_massa = 1 + random(5);
				format(string,sizeof(string),"{BE2D2D}Вы поймали {FFFFFF}( %s ){BE2D2D} массой %d Кг, но вы не унесете больше 5-и рыб.",FishName[rand_fish],fish_massa);
				SendClientMessage(playerid,CWHITE,string);
			}
		}
		case 14..17:
		{
			format(string,sizeof(string),"{BE2D2D}Рыба {FFFFFF}( %s ){BE2D2D} сорвалась и съела наживку.",FishName[1+random(13)]);
			SendClientMessage(playerid,COLOR_GREY,string);
			p_info[playerid][pWorms] --;
		}
		default:
		{
			format(string,sizeof(string),"{BE2D2D}Рыба{FFFFFF} ( %s ){BE2D2D} сорвалась, но наживка осталась на крючке.",FishName[1+random(13)]);
			SendClientMessage(playerid,COLOR_GREY,string);
		}
	}
	for(new i;i < sizeof(FishZone);i ++)
	{
		if(IsPlayerInDynamicCP(playerid, Fish_CP[i]))return ShowPlayerDialog(playerid,212,0,"Место для рыбалки","{FFFFFF}Вы действительно хотите порыбачить?\nДля рыболовли вам необходима удочка, которую можно приобрести в любом 24/7\nи наживка для рыбалки, ее так же можно там купить.\nРыбу можно продать в магазин.","да","Нет");
	}
	return true;
}
stock InterpolateCameraPosToPoint(playerid, Float:tx, Float:ty, Float:tz, Float:ta)
{
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	x2= 0.7 * floatsin(ta,degrees) + tx;
	y2= -0.7 * floatcos(ta,degrees) + ty;
	z2 = tz;
	InterpolateCameraPos(playerid,x,y,z,x2,y2,z2,700,CAMERA_MOVE);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,tx,ty,tz,700,CAMERA_MOVE);
	return 1;
}
forward FlashPlayer(playerid);
public FlashPlayer(playerid)
{
	if(flash_td[playerid]==PlayerText:-1)
	{
		flash_td[playerid] = CreatePlayerTextDraw(playerid, 641.531494, 1.500000, "usebox");
		PlayerTextDrawLetterSize(playerid, flash_td[playerid], 0.000000, 49.396297);
		PlayerTextDrawTextSize(playerid, flash_td[playerid], -2.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, flash_td[playerid], 1);
		PlayerTextDrawColor(playerid, flash_td[playerid], 0);
		PlayerTextDrawUseBox(playerid, flash_td[playerid], true);
		PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF99);
		PlayerTextDrawSetShadow(playerid, flash_td[playerid], 0);
		PlayerTextDrawSetOutline(playerid, flash_td[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, flash_td[playerid], 0x00000000);
		PlayerTextDrawFont(playerid, flash_td[playerid], 0);
		PlayerTextDrawSetProportional(playerid, flash_td[playerid], 1);
		PlayerTextDrawShow(playerid, flash_td[playerid]);
	}
	else
	{
		PlayerTextDrawHide(playerid, flash_td[playerid]);
		flash_step_td[playerid]++;
		switch(flash_step_td[playerid])
		{
			case 1: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF89);
			case 2: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF79);
			case 3: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF69);
			case 4: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF59);
			case 5: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF49);
			case 6: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF39);
			case 7: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF29);
			case 8: PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF19);
			case 9:
			{
				PlayerTextDrawDestroy(playerid, flash_td[playerid]);
				flash_td[playerid] = PlayerText:-1;
				if(flash_timer_td[playerid]!=-1)
				{
					KillTimer(flash_timer_td[playerid]);
					flash_timer_td[playerid] = -1;
				}
				flash_step_td[playerid] = 0;
				PlayerTextDrawBoxColor(playerid, flash_td[playerid], 0xFFFFFF09);

				if(GetPVarInt(playerid, "take_photo"))
				{
					for(new i = 0; i < 9; i++)
					{
						if(passport_player[playerid][i] != PlayerText:-1)
						{
							PlayerTextDrawDestroy(playerid, passport_player[playerid][i]);
							passport_player[playerid][i] = PlayerText:-1;
						}
					}
					passport_player[playerid][0] = CreatePlayerTextDraw(playerid, 631.692626, 133.916687, "usebox");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][0], 0.000000, 9.146295);
					PlayerTextDrawTextSize(playerid, passport_player[playerid][0], 399.991180, 0.000000);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][0], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][0], -89368355);
					PlayerTextDrawUseBox(playerid, passport_player[playerid][0], true);
					PlayerTextDrawBoxColor(playerid, passport_player[playerid][0], -89368321);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][0], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][0], 0);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][0], 0x00000000);
					PlayerTextDrawFont(playerid, passport_player[playerid][0], 0);

					passport_player[playerid][1] = CreatePlayerTextDraw(playerid, 487.856506, 140.916656, "usebox");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][1], 0.000000, 8.368520);
					PlayerTextDrawTextSize(playerid, passport_player[playerid][1], 410.767211, 0.000000);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][1], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][1], 0);
					PlayerTextDrawUseBox(playerid, passport_player[playerid][1], true);
					PlayerTextDrawBoxColor(playerid, passport_player[playerid][1], 102);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][1], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][1], 0);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][1], 0x00000000);
					PlayerTextDrawFont(playerid, passport_player[playerid][1], 0);

					passport_player[playerid][2] = CreatePlayerTextDraw(playerid, 342.957611, 143.500030, "PreviewModel");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][2], 0.000000, 0.000000);
					PlayerTextDrawTextSize(playerid, passport_player[playerid][2], 211.771606, 212.916702);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][2], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][2], -1);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][2], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][2], 0);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][2], 0x00000000);
					PlayerTextDrawFont(playerid, passport_player[playerid][2], 5);
					PlayerTextDrawSetPreviewModel(playerid, passport_player[playerid][2], GetPlayerSkin(playerid));
					PlayerTextDrawSetPreviewRot(playerid, passport_player[playerid][2], 0.000000, 0.000000, 8.000000, 0.855571);

					passport_player[playerid][3] = CreatePlayerTextDraw(playerid, 631.755737, 220.666702, "usebox");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][3], 0.000000, 15.049661);
					PlayerTextDrawTextSize(playerid, passport_player[playerid][3], 399.991180, 0.000000);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][3], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][3], -89368355);
					PlayerTextDrawUseBox(playerid, passport_player[playerid][3], true);
					PlayerTextDrawBoxColor(playerid, passport_player[playerid][3], -89368321);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][3], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][3], 0);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][3], 0x00000000);
					PlayerTextDrawFont(playerid, passport_player[playerid][3], 0);

					passport_player[playerid][4] = CreatePlayerTextDraw(playerid, 495.226867, 142.333389, "~g~~h~~h~] PASSPORT ]");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][4], 0.405958, 1.535833);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][4], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][4], -1);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][4], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][4], 1);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][4], 255);
					PlayerTextDrawFont(playerid, passport_player[playerid][4], 2);
					PlayerTextDrawSetProportional(playerid, passport_player[playerid][4], 1);

					passport_player[playerid][5] = CreatePlayerTextDraw(playerid, 507.408782, 164.499984, "ld_tatt:9rasta");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][5], 0.000000, 0.000000);
					PlayerTextDrawTextSize(playerid, passport_player[playerid][5], 94.172760, 52.499984);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][5], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][5], -89368321);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][5], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][5], 0);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][5], 0x00000000);
					PlayerTextDrawFont(playerid, passport_player[playerid][5], 4);

					new name[15], lastname[15];
					sscanf(NamePlayer[playerid],"p<_>s[15]s[15]", name, lastname);
					format(stringer, 120, "~w~Name: ~y~%s~n~~w~LastName: ~y~%s~n~~w~Bithday: ~b~%d.%d.%d~n~~w~State: ~g~World~n~~w~Sex: ~r~%s",name, lastname,GetPVarInt(playerid, "take_photo_day"),GetPVarInt(playerid, "take_photo_month"),GetPVarInt(playerid, "take_photo_year"),(p_info[playerid][pSex]==2) ? ("Female") : ("Male"));
					passport_player[playerid][6] = CreatePlayerTextDraw(playerid, 414.641571, 243.833557, stringer);
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][6], 0.449999, 1.600000);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][6], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][6], -1);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][6], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][6], 1);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][6], 255);
					PlayerTextDrawFont(playerid, passport_player[playerid][6], 2);
					PlayerTextDrawSetProportional(playerid, passport_player[playerid][6], 1);

					passport_player[playerid][7] = CreatePlayerTextDraw(playerid, 442.283966, 335.416687, "ld_beat:chit");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][7], 0.000000, 0.000000);
					PlayerTextDrawTextSize(playerid, passport_player[playerid][7], 160.702819, 43.749996);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][7], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][7], -1523963137);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][7], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][7], 0);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][7], 255);
					PlayerTextDrawFont(playerid, passport_player[playerid][7], 4);

					passport_player[playerid][8] = CreatePlayerTextDraw(playerid, 495.227172, 349.999938, "CLOSE");
					PlayerTextDrawLetterSize(playerid, passport_player[playerid][8], 0.449999, 1.600000);
					PlayerTextDrawAlignment(playerid, passport_player[playerid][8], 1);
					PlayerTextDrawColor(playerid, passport_player[playerid][8], -1);
					PlayerTextDrawSetShadow(playerid, passport_player[playerid][8], 0);
					PlayerTextDrawSetOutline(playerid, passport_player[playerid][8], 1);
					PlayerTextDrawBackgroundColor(playerid, passport_player[playerid][8], 255);
					PlayerTextDrawFont(playerid, passport_player[playerid][8], 2);
					PlayerTextDrawSetProportional(playerid, passport_player[playerid][8], 1);

					PlayerTextDrawSetSelectable(playerid, passport_player[playerid][7], true);
					SelectTextDraw(playerid, 0xFFFFFFAA);

					for(new i = 0; i < 9; i++)
					{
						if(passport_player[playerid][i] != PlayerText:-1)
						{
							PlayerTextDrawShow(playerid, passport_player[playerid][i]);
						}
					}
					passport_show[playerid]=true;

					format(stringer, 144, "Зарегистрирован новый житель штата {BE2D2D}( %s )", NamePlayer[playerid]);
					SendClientMessageToAll(-1,stringer);

					DeletePVar(playerid, "take_photo");
					DeletePVar(playerid, "take_photo_day");
					DeletePVar(playerid, "take_photo_month");
					DeletePVar(playerid, "take_photo_year");
				}

				return 1;
			}
		}
		PlayerTextDrawShow(playerid, flash_td[playerid]);
	}
	return 1;
}
//
stock UpdatePlayerQuestStep(playerid)
{
	#pragma unused playerid
	return 1;
}

stock UpdatePlayerQuestAmount(playerid)
{
	mysql_query_string[0] = EOS;
	mysql_format(connects,mysql_query_string,600,"UPDATE `accounts` SET `quest_amount_lesopilka` = '%d', `quest_amount_bus` = '%d',`quest_amount_taxi` = '%d',`quest_amount_prod` = '%d',`quest_amount_miner` = '%d',`quest_amount_garden` = '%d',`quest_amount_farm` = '%d' WHERE `ID` = '%d'",
	quest_amount_lesopilka[playerid],quest_amount_bus[playerid],quest_amount_taxi[playerid],quest_amount_prod[playerid],quest_amount_miner[playerid],quest_amount_garden[playerid],quest_amount_farm[playerid], p_info[playerid][pID]);
	mysql_pquery(connects, mysql_query_string, "", "");
	return 1;
}


forward CreateStation(id);
forward ChangeBookNumber(playerid, new_number);
forward SendBookSMS(playerid, sms_text[]);

public CreateStation(id)
{
	gRouteMysqlID[id] = cache_insert_id();
	return 1;
}




public ChangeBookNumber(playerid, new_number)
{
	new slot = GetPVarInt(playerid, "contact_select_id");
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Такой номер телефона уже есть в вашей телефонной книге");
		return ShowPlayerDialog(playerid, dContactChangeNumber, DIALOG_STYLE_INPUT, "{"#cORANGE"}Изменение номера контакта", "{"#cWHITE"}-\t\t\tВведите новый номер для контакта:\t\t\t-", "Изменить", "Назад");
	}
	mysql_query_string[0] = EOS;
	mysql_format(connects,mysql_query_string,512,"UPDATE `phone_book_w` SET `number` = '%d' WHERE `id` = '%d'", new_number, LoadBookID[playerid][slot]);
	mysql_pquery(connects,mysql_query_string);
	SendClientMessage(playerid, CLIGHTGREEN, "Вы успешно изменили номер контакта");
	DeletePVar(playerid, "contact_select_id");
	return 1;
}

public SendBookSMS(playerid, sms_text[])
{
	new rows;
	cache_get_row_count(rows);
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Техническая ошибка. Номер не найден!");
	print("cache_get_row_int [SendBookSMS]");
	//////new slot = GetPVarInt(playerid, "contact_select_id");
	DeletePVar(playerid, "contact_select_id");
	new number_sms = -1,check_sms_number;
	cache_get_value_index_int(0,0,check_sms_number);
	foreach(i)
	{
		if(p_info[i][pID] == check_sms_number)
		{
			number_sms = p_info[i][pPnumber];
			break;
		}
	}
	if(number_sms != -1)
		SendPlayerSms(playerid, number_sms, sms_text);
	else
		SendClientMessage(playerid, COLOR_GREY, "Ошибка. Игрок не в сети!");
	return 1;
}


stock UpdatePlayerLevel(playerid)
{
	if(p_info[playerid][pExp] >= ((p_info[playerid][pLevel]+2)*2))
	{
		p_info[playerid][pLevel] ++;
		UpdatePlayerData(playerid,"pLevel",p_info[playerid][pLevel]);
		SetPlayerScore(playerid, p_info[playerid][pLevel]);
		p_info[playerid][pExp] = 0;
		UpdatePlayerData(playerid,"pExp",0);
		SCM(playerid,0xff4c1eaa," ");
		SCM(playerid,0x55c46aFF,"Ваш игровой уровень повысился");
	}
	return 1;
}
stock GetEngineStatL(vehicleid,&lights)
{
	new engine, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
stock GetEngineStat(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
stock ShowVIPHelp(playerid)
{
	stringer[0] = EOS;
	strcat(stringer,"{FFFF9D}____________{FF6138}VIP FIRST{FFFF9D}____________\n\n");
	strcat(stringer,"{00A388}[1] {"#cWHITE"}Удаление тюнинга с личного транспорта\n");
	strcat(stringer,"{00A388}[2] {"#cWHITE"}Каждый пятый PayDay +2 EXP\n");
	strcat(stringer,"\n{FFFF9D}____________{FF6138}VIP SECOND{FFFF9D}____________\n\n");
	strcat(stringer,"{00A388}[1] {"#cWHITE"}Все возможности VIP FIRST\n");
	strcat(stringer,"{00A388}[2] {"#cWHITE"}Каждый четвёртый PayDay +2 EXP\n");
	strcat(stringer,"{00A388}[3] {"#cWHITE"}Лечение в больнице проходит в 2 раза быстрее.\n");
	strcat(stringer,"\n{FFFF9D}____________{FF6138}VIP THIRD{FFFF9D}____________\n\n");
	strcat(stringer,"{00A388}[1] {"#cWHITE"}Все возможности VIP FIRST\n");
	strcat(stringer,"{00A388}[2] {"#cWHITE"}Все возможности VIP SECOND\n");
	strcat(stringer,"{00A388}[3] {"#cWHITE"}Каждый PayDay +2 EXP\n");
	strcat(stringer,"{00A388}[4] {"#cWHITE"}Возможность респавнить личный транспорт /fixcar.\n");
	strcat(stringer,"{00A388}[5] {"#cWHITE"}Возможно использовать /vipuninvite.\n");
	strcat(stringer,"\n{FFFF9D}____________{FF6138}VIP FOURTH{FFFF9D}____________\n\n");
	strcat(stringer,"{00A388}[1] {"#cWHITE"}Все возможности VIP FIRST\n");
	strcat(stringer,"{00A388}[2] {"#cWHITE"}Все возможности VIP SECOND\n");
	strcat(stringer,"{00A388}[3] {"#cWHITE"}Все возможности VIP THIRD\n");
	strcat(stringer,"{00A388}[4] {"#cWHITE"}Прокачка скиллов в 2 раза быстрей.\n");
	strcat(stringer,"\n{FFFF9D}____________{FF6138}VIP FIFTH{FFFF9D}____________\n\n");
	strcat(stringer,"{00A388}[1] {"#cWHITE"}Все возможности VIP FIRST\n");
	strcat(stringer,"{00A388}[2] {"#cWHITE"}Все возможности VIP SECOND\n");
	strcat(stringer,"{00A388}[3] {"#cWHITE"}Все возможности VIP THIRD\n");
	strcat(stringer,"{00A388}[4] {"#cWHITE"}Все возможности VIP FOURTH\n");
	strcat(stringer,"{00A388}[5] {"#cWHITE"}VIP Чат (Для всех богачей сервера) (/vr)\n");
	strcat(stringer,"{00A388}[6] {"#cWHITE"}VIP статус не нужно продлевать.\n");
	strcat(stringer,"{00A388}[7] {"#cWHITE"}В банке можно хранить больше 40 миллионов.\n");
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Информация",stringer,"ОК","");
	return 1;
}
forward VagonWait(id);
public VagonWait(id)
{
	new Float:vagon_pos[3];
	GetObjectPos(vagon_object[id],vagon_pos[0],vagon_pos[1],vagon_pos[2]);
	if(vagon_pos[0] == vagon_position[0][id][0] && vagon_pos[1] == vagon_position[0][id][1] && vagon_pos[2] == vagon_position[0][id][2]) MoveObject(vagon_object[id], vagon_position[1][id][0],vagon_position[1][id][1],vagon_position[1][id][2],VAGON_SPEED, vagon_position[1][id][3],vagon_position[1][id][4],vagon_position[1][id][5]);
	else if(vagon_pos[0] == vagon_position[1][id][0] && vagon_pos[1] == vagon_position[1][id][1] && vagon_pos[2] == vagon_position[1][id][2]) MoveObject(vagon_object[id], vagon_position[0][id][0],vagon_position[0][id][1],vagon_position[0][id][2],VAGON_SPEED, vagon_position[0][id][3],vagon_position[0][id][4],vagon_position[0][id][5]);
	KillTimer(vagon_timer[id]);
	vagon_timer[id] = -1;
	return 1;
}
forward JackWait();
public JackWait()
{
	new Float:jack_pos[3];
	GetObjectPos(jackminer_object,jack_pos[0],jack_pos[1],jack_pos[2]);
	if(jack_pos[0] == -2557.8952 && jack_pos[1] == -2134.4177 && jack_pos[2] == 72.1406) MoveObject(jackminer_object,-2552.5944,-2135.6259,71.0454,SPEED_JACK,-11.9000,0.0000,-102.0999);
	else if(jack_pos[0] == -2401.8669 && jack_pos[1] == -2171.1870 && jack_pos[2] == 39.9160) MoveObject(jackminer_object,-2552.5944,-2135.6259,71.0454,SPEED_JACK,-11.9000,0.0000,-104.0999),jackminer_timer = -1;
	return 1;
}
stock GetMinerStage(playerid)
{
	for ( new M = 0; M < 19 ; M++ ) if(IsPlayerInRangeOfPoint(playerid, 2.5, miner_pick_pos[M][0],miner_pick_pos[M][1],miner_pick_pos[M][2])) return M;
	return -1;
}
stock ReturnRecon(playerid)
{
	for(new x=10; x <= 26; x++) PlayerTextDrawHide(playerid, ReconPlayerText[playerid][x]);
	re_choose[playerid][1]=0;
	PlayerTextDrawHide(playerid,ReconPlayerText[playerid][1+re_choose[playerid][0]]);
	PlayerTextDrawBoxColor(playerid,ReconPlayerText[playerid][1+re_choose[playerid][0]], -1091854422);
	PlayerTextDrawShow(playerid,ReconPlayerText[playerid][1+re_choose[playerid][0]]);
	return 1;
}
CMD:object(playerid)
{
	if(!p_info[playerid][pAdmin] && !GetPVarInt(playerid,"DJ")) return 1;
	stringer[0] = EOS;
	for(new j = 0; j < MAX_CREATE_OBJECT_PLAYER; j++)
	{
		format(stringer,5000,"%s{"#cWHITE"}%d. {"#cGRAY"}%s\t%s\n",stringer, j+1, object_list[j][object_list_name], (objects_player_create[playerid][j] != -1) ? ("{"#cGREEN"}[ Установлен ]") : (""));
	}
	ShowPlayerDialog(playerid,dObjectList,DIALOG_STYLE_LIST,"Объекты", stringer, "Выбрать", "Отмена");
	return 1;
}
stock SaveTrunk(vehicleid)
{
	new slot_vehicle_player[2]={-1,...};
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(!IsPlayerConnected(i)) continue;
		if(vehicleid==caridhouse[i][0])
		{
			slot_vehicle_player[0]=0;
			slot_vehicle_player[1]=i;
			break;
		}
		else if(vehicleid==caridhouse[i][1])
		{
			slot_vehicle_player[0]=1;
			slot_vehicle_player[1]=i;
			break;
		}
	}
	if(slot_vehicle_player[0] != -1)
	{
		new playerid=slot_vehicle_player[1];
		new slot_vehicle=slot_vehicle_player[0];
		//
		if(slot_vehicle==0)
		{
			for(new j = 0; j < 9; j++){
				p_info[playerid][pTrunkGun1][j] = TrunkInfo[vehicleid][tGun][j];
				p_info[playerid][pTrunkAmmo1][j] = TrunkInfo[vehicleid][tAmmo][j];
			}
		}
		else if(slot_vehicle==1)
		{
			for(new j = 0; j < 9; j++){
				p_info[playerid][pTrunkGun2][j] = TrunkInfo[vehicleid][tGun][j];
				p_info[playerid][pTrunkAmmo2][j] = TrunkInfo[vehicleid][tAmmo][j];
			}
		}
		p_info[playerid][pTrunkMoney][slot_vehicle] = TrunkInfo[vehicleid][tMoney];
		p_info[playerid][pTrunkDrugs][slot_vehicle] = TrunkInfo[vehicleid][tDrugs];
		p_info[playerid][pTrunkMats][slot_vehicle] = TrunkInfo[vehicleid][tMats];
		p_info[playerid][pTrunkArmours][slot_vehicle] = TrunkInfo[vehicleid][tArmours];
		p_info[playerid][pTrunkKanistra][slot_vehicle] = TrunkInfo[vehicleid][tKanistra];
		p_info[playerid][pTrunkDee][slot_vehicle] = TrunkInfo[vehicleid][tDee];
		//
		// 0,0|0,0|0,0|0,0|0,0|0,0|0,0|0,0
		mysql_query_string[0]=EOS;
		format(mysql_query_string,2000,"UPDATE `accounts` SET \
			`TrunkGuns0` = '%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d',\
			`TrunkGuns1` = '%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d|%d,%d',\
			`TrunkData0` = '%d,%d,%d,%d,%d,%d',\
			`TrunkData1` = '%d,%d,%d,%d,%d,%d' WHERE `ID` = '%d'",
		p_info[playerid][pTrunkGun1][0],p_info[playerid][pTrunkAmmo1][0],
		p_info[playerid][pTrunkGun1][1],p_info[playerid][pTrunkAmmo1][1],
		p_info[playerid][pTrunkGun1][2],p_info[playerid][pTrunkAmmo1][2],
		p_info[playerid][pTrunkGun1][3],p_info[playerid][pTrunkAmmo1][3],
		p_info[playerid][pTrunkGun1][4],p_info[playerid][pTrunkAmmo1][4],
		p_info[playerid][pTrunkGun1][5],p_info[playerid][pTrunkAmmo1][5],
		p_info[playerid][pTrunkGun1][6],p_info[playerid][pTrunkAmmo1][6],
		p_info[playerid][pTrunkGun1][7],p_info[playerid][pTrunkAmmo1][7],
		p_info[playerid][pTrunkGun1][8],p_info[playerid][pTrunkAmmo1][8],
		// data - 1
		p_info[playerid][pTrunkGun2][0],p_info[playerid][pTrunkAmmo2][0],
		p_info[playerid][pTrunkGun2][1],p_info[playerid][pTrunkAmmo2][1],
		p_info[playerid][pTrunkGun2][2],p_info[playerid][pTrunkAmmo2][2],
		p_info[playerid][pTrunkGun2][3],p_info[playerid][pTrunkAmmo2][3],
		p_info[playerid][pTrunkGun2][4],p_info[playerid][pTrunkAmmo2][4],
		p_info[playerid][pTrunkGun2][5],p_info[playerid][pTrunkAmmo2][5],
		p_info[playerid][pTrunkGun2][6],p_info[playerid][pTrunkAmmo2][6],
		p_info[playerid][pTrunkGun2][7],p_info[playerid][pTrunkAmmo2][7],
		p_info[playerid][pTrunkGun2][8],p_info[playerid][pTrunkAmmo2][8],
		// data - 2
		p_info[playerid][pTrunkMoney][0],p_info[playerid][pTrunkDrugs][0],p_info[playerid][pTrunkMats][0],p_info[playerid][pTrunkArmours][0],p_info[playerid][pTrunkKanistra][0],p_info[playerid][pTrunkDee][0],
		p_info[playerid][pTrunkMoney][1],p_info[playerid][pTrunkDrugs][1],p_info[playerid][pTrunkMats][1],p_info[playerid][pTrunkArmours][1],p_info[playerid][pTrunkKanistra][1],p_info[playerid][pTrunkDee][1],
		p_info[playerid][pID]);
		mysql_pquery(connects,mysql_query_string);
		print(mysql_query_string);
	}
	return 1;
}
CMD:vzad(playerid)
{
	new Float:x,Float:y,Float:z,Float:a;
	if(idaofcar[playerid]!=0)
	{
		GetVehicleShiftPos(idaofcar[playerid],1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))return 1;
		idaofcar[playerid]=0;
	}
	for(new c = 1; c < MAX_VEHICLES; c++)
	{
		if(!IsValidVehicle(c))continue;
		if(!IsACar(c)) continue;
		GetVehicleShiftPos(c,1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
		{
			if(TrunkInfo[c][tOpen] && c != caridhouse[playerid][0] && c != caridhouse[playerid][1]) return SendClientMessage(playerid,CRED,"Багажник закрыт");
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, boot, objective);
			if ( boot != VEHICLE_PARAMS_ON )
			{
				new Float:pos_y,Float:pos_z;
				GetPlayerPos(playerid,pos_y,pos_y,pos_z);
				GetVehicleZAngle(c, a);
				AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
				new f=(c == caridhouse[playerid][0] || c == caridhouse[playerid][1]) ? (22) : (21);
				for(new tr=0;tr<f;tr++)TextDrawShowForPlayer(playerid,trunk_ball[tr]);
				SelectTextDraw(playerid,0xFF9900FF);
				UpdateTDOpenCloseTrunk(playerid,c);
				SetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
				idaofcar[playerid]=c;
			}
			break;
		}//
	}
	return 1;
}
forward RouletteWait();
public RouletteWait()
{
	RouletteTimer = -1;
	if ( RouletteState == ROULETTE_STATE_NONE || RouletteState == ROULETTE_STATE_TO_UP2)
	{
		RouletteState = ROULETTE_STATE_TO_DOWN;
		MoveObject(RouletteFunObject,RouletteStartPos[0],RouletteStartPos[1], floatadd(RouletteStartZPos[0], (RouletteAlternate = (RouletteAlternate) ? (0) : (1)) ? (0.25) : (0.0)), 5.25, 0.0,0.0, RouletteAngle);
	}
	else if ( RouletteState == ROULETTE_STATE_TO_DOWN )
	{
		RouletteState = ROULETTE_STATE_TO_UP;
		RouletteAngle = 300.0;
		MoveObject(RouletteFunObject,RouletteStartPos[0],RouletteStartPos[1], floatadd(RouletteStartZPos[2], (RouletteAlternate = (RouletteAlternate) ? (0) : (1)) ? (0.25) : (0.0)), 5.25, 0.0,0.0, RouletteAngle);
	}
	else if ( RouletteState == ROULETTE_STATE_TO_UP )
	{
		RouletteAngle = 300.0;
		RouletteState = ROULETTE_STATE_TO_UP2;
		MoveObject(RouletteFunObject,RouletteStartPos[0],RouletteStartPos[1], floatadd(RouletteStartZPos[1], (RouletteAlternate = (RouletteAlternate) ? (0) : (1)) ? (0.25) : (0.0)), 5.25, 0.0,0.0, RouletteAngle);
	}
	return 1;
}
forward UpdateFlyBall(f);
public UpdateFlyBall(f)
{
	if(fly_ball_timer[f]==-1)return KillTimer(fly_ball_timer[f]);
	if(	fly_ball_pos_move[f][0]!=fly_ball_pos_spawn[f][0] ||fly_ball_pos_move[f][1]!=fly_ball_pos_spawn[f][1] ||fly_ball_pos_move[f][2]!=fly_ball_pos_spawn[f][2]){
		new count_in_fly_ball = IsAnyPlayerInDynamicArea(fly_ball_area[f]);
		if(count_in_fly_ball == 0)
		{
			fly_ball_pos_move[f][3]=0.0;
			fly_ball_status[f]=-1;
			fly_ball_timer[f]=-1;
			StopDynamicObject(fly_ball_object[f]);
			SetDynamicObjectPos(fly_ball_object[f],fly_ball_pos_spawn[f][0],fly_ball_pos_spawn[f][1],fly_ball_pos_spawn[f][2]);
			GetDynamicObjectPos(fly_ball_object[f],fly_ball_pos_move[f][0],fly_ball_pos_move[f][1],fly_ball_pos_move[f][2]);
			UpdateDynamic3DTextLabelText(fly_ball_text[f],-1,""F_BALL_TEXT"{F15A5A}[Не арендован]");
			SetDynamicObjectMaterial(fly_ball_object[f], 3, 19297, "matlights", "invisible", 0);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(GetPVarInt(i,"f_ball_rent")!=0) DeletePVar(i,"f_ball_rent");
			}
		}
	}
	return 1;
}
stock ShowZPEdit(playerid){
	new tmmr_str[1200];
	strcat(tmmr_str,"{ffffff}");
	for(new i=1;i<fraction_amount;i++)
	{
		if ( i == 23 || i == 24 || i == 12 || i == 13 || i == 14 || i == 15 || i == 17 || i == 18 || i == 5 || i == 6 ) continue;
		format(tmmr_str,1200,"%s{"#cWHITE"}%s: \t{"#cYELLOW"}%i$ ( %i$ за ранг )\n",tmmr_str,f_info [ i ] [ f_name ], f_info [ i ] [ f_salary ],floatround(f_info[i][f_salary]*0.25));
	}
	return SPD(playerid,dZp,DIALOG_STYLE_TABLIST,"Выберите фракцию",tmmr_str,"Выбор","Отмена");
}
stock SearchingHit(playerid)
{
	new string[128];
	SCM(playerid, COLOR_WHITE, "Доступные контракты:");
	new hits;
	foreach(i)
	{
		if(p_info[i][tMember] != 23 && p_info[i][pHeadValue] > 0)
		{
			if(GotHit[i] == 0)
			{
				hits++;
				format(string, sizeof(string), "%s (ID %d) | $%d | Заказчик: %s | Детали: %s | Контракт никем не выполняется", GetPlayerNameEx(i), i, p_info[i][pHeadValue], p_info[i][pContractBy], p_info[i][pContractDetail]);
				SCM(playerid, CGRAY, string);
			}
			else if(IsPlayerConnected(GetChased[i]))
			{
				format(string, sizeof(string), "%s (ID %d) | $%d | Заказчик: %s | Детали: %s | Выполняется: %s", GetPlayerNameEx(i), i, p_info[i][pHeadValue], p_info[i][pContractBy], p_info[i][pContractDetail], GetPlayerNameEx(GetChased[i]));
				SCM(playerid, CGRAY, string);
			}
		}
	}
	if(hits && p_info[playerid][tRank] <= 1 && p_info[playerid][tMember] == 23)
	{
		SCM(playerid, COLOR_YELLOW, "Используйте /givemehit чтобы взять контракт.");
	}
	if(hits && p_info[playerid][tRank] >= 6 && p_info[playerid][tMember] == 23)
	{
		SCM(playerid, COLOR_YELLOW, "Используйте /givehit чтобы выдать контракт другому хитману.");
	}
	if(hits == 0)
	{
		SCM(playerid, COLOR_GREY, "Для вас нет доступных контрактов.");
	}
	return 0;
}

stock GetClosestCar(iPlayer, iException = INVALID_VEHICLE_ID, Float: fRange = Float: 0x7F800000) {

	new
		iReturnID = INVALID_VEHICLE_ID,
		Float: fVehiclePos[4];

	for(new i = 1; i <= MAX_VEHICLES; ++i) if(GetVehicleModel(i) && i != iException) {
		GetVehiclePos(i, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2]);
		if((fVehiclePos[3] = GetPlayerDistanceFromPoint(iPlayer, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2])) < fRange) {
			fRange = fVehiclePos[3];
			iReturnID = i;
		}
	}
	return iReturnID;
}

stock GetPlayerNameEx(playerid) // Hitmans_Agency stocks
{
	new resultname[24],n[10],l[10];
	sscanf(NamePlayer[playerid], "p<_>s[10]s[10]", n,l);
	format(resultname,24,"%s %s", n,l);
	return resultname;
}

stock Executing(playerid, giveplayerid)
{
	new string[128];
	new allmoney = p_info[giveplayerid][pCash];
	new takemoney = p_info[giveplayerid][pHeadValue] / 4 ;
	new getmoney = ( p_info[giveplayerid][pHeadValue] / 4 ) * 3 ;
	p_info[playerid][pCash] += getmoney;
	if(allmoney >= takemoney)
		p_info[giveplayerid][pCash] -= takemoney;
	if(takemoney >= allmoney)
		p_info[giveplayerid][pCash] = 0;
	UpdateMoney(playerid);
	UpdateMoney(giveplayerid);
	format(string,sizeof(string),"Киллер %s выполнил контракт %s и забрал $%d",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),getmoney);
	SendFamilyMessage(23, COLOR_YELLOW, string);
	format(string,sizeof(string),"Вы были убиты киллером и потеряли $%d!",takemoney);
	AC_ResetPlayerWeapons(giveplayerid);
	SCM(giveplayerid, COLOR_YELLOW, string);
	p_info[giveplayerid][pHeadValue] = 0;
	p_info[playerid][pCHits] += 1;
	AC_SetPlayerHealth(giveplayerid, 0.0);
	GotHit[giveplayerid] = 0;
	GetChased[giveplayerid] = INVALID_PLAYER_ID;
	GoChase[playerid] = INVALID_PLAYER_ID;
	UpdatePlayerData(giveplayerid,"pHeadValue",p_info[giveplayerid][pHeadValue]);
	UpdatePlayerData(playerid,"pCHits",p_info[playerid][pCHits]);
	return 1;
}
forward PickUpC4(playerid);
public PickUpC4(playerid)
{
	if ( p_info[playerid][pC4] != INVALID_OBJECT ) DestroyDynamicObject(p_info[playerid][pC4]);
	p_info[playerid][pC4] = INVALID_OBJECT;
	return 1;
}
stock get_furniture(c, b, &model, &price, &length)
{
	new name_furn[10];
	if(c < 0 || c > 9) return name_furn;
	length=(c==0)?(sizeof(furniture_beds)):(c==1)?(sizeof(furniture_table)):(c==2)?(sizeof(furniture_chairs)):(c==3)?(sizeof(furniture_electronics)):(c==4)?(sizeof(furniture_kitchen)):(c==5)?(sizeof(furniture_chests)):(c==6)?(sizeof(furniture_bathroom)):(c==7)?(sizeof(furniture_sofas)):(c==8)?(sizeof(furniture_picture)):(sizeof(furniture_plants));
	if ( b>=length ) b=0;
	model=(c==0)?(furniture_beds[b]):(c==1)?(furniture_table[b]):(c==2)?(furniture_chairs[b]):(c==3)?(furniture_electronics[b]):(c==4)?(furniture_kitchen[b]):(c==5)?(furniture_chests[b]):(c==6)?(furniture_bathroom[b]):(c==7)?(furniture_sofas[b]):(c==8)?(furniture_picture[b]):(c==9)?(furniture_plants[b]):(-1);
	price=Furn_GetPrice(model);
	format(name_furn,10,"%s",(c==0)?("BEDS"):(c==1)?("TABLE"):(c==2)?("CHAIRS"):(c==3)?("TECH"):(c==4)?("KITCHEN"):(c==5)?("CHESTS"):(c==6)?("BATHROOM"):(c==7)?("SOFAS"):(c==8)?("PICTURE"):("PLANTS"));
	return name_furn;
}
stock furniture_create_pickup(playerid){
	new model, price, length,Furn_Str[11];
	PlayerTextDrawSetString(playerid, ptd_furniture[playerid][0], get_furniture(furniture_class{playerid},furniture_select{playerid}, model, price, length));
	if ( furniture_select{playerid} >= length ) furniture_select{playerid} = 0;
	if(furniture_pickup[playerid] != -1) DestroyPickup(furniture_pickup[playerid]);
	format(Furn_Str,11,"%d$",price);
	furniture_pickup[playerid] = CreatePickup(model, 1, 1243.82, -1549.27, 2022.31,GetPlayerVirtualWorld(playerid));
	SetPVarInt(playerid,"Furn_Model",model);
	SetPVarInt(playerid,"Furn_Price",price);
	PlayerTextDrawSetString(playerid, ptd_furniture[playerid][1], Furn_Str);
	return 1;
}

stock UpdateFurnitureHouse(houseid, slot)
{
	new update_furn[512];
	format(update_furn,512,"UPDATE `housetest` SET `gHouseFurniture%d` = '%d,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f' WHERE `hID` = '%d'", slot,gHouseFurniture[houseid][slot][Furn_Model],gHouseFurniture[houseid][slot][Furn_X],gHouseFurniture[houseid][slot][Furn_Y],gHouseFurniture[houseid][slot][Furn_Z],gHouseFurniture[houseid][slot][Furn_RX],gHouseFurniture[houseid][slot][Furn_RY],gHouseFurniture[houseid][slot][Furn_RZ],gHouses[houseid][hID]);
	mysql_pquery(connects,update_furn);
	///printf(update_furn);
	return 1;
}
stock ShowInfoInputSells(playerid)
{
	stringer[0] = EOS;
	strcat(stringer, "\t \t {"#cWHITE"}Здравствуйте, Вы хотите воспользоваться услугами авторынка. \t \t \n");
	strcat(stringer, "\t \t Для этого вам нужно указать: \t \t \n\n");
	strcat(stringer, "\t \t {"#cGRAY"}\t- {"#cBLUE"}Количество дней аренды места \t \t \n");
	strcat(stringer, "\t \t {"#cGRAY"}\t- {"#cBLUE"}Сумма продажи вашего личного автомобиля \t \t \n");
	strcat(stringer, "\t \t {"#cGRAY"}\t- {"#cBLUE"}Номер вашего личного т.с. (1 или 2) \t \t \n\n");
	strcat(stringer, "\t \t {"#cWHITE"}Для этого вам нужно написать в поле ниже примерно так: \t \t \n\n");
	strcat(stringer, "\t \t {"#cRED"}количество_дней{"#cWHITE"},{"#cGREEN"}сумма_продажи_автомобиля{"#cWHITE"},{"#cGRAY"}номер автомобиля \t \t \n");
	strcat(stringer, "\t \t {"#cWHITE"}Пример: {"#cRED"}10{"#cWHITE"},{"#cGREEN"}100000{"#cWHITE"},{"#cGRAY"}1 \t \t \n\n");
	strcat(stringer, "\t \t {"#cWHITE"}Стоимость одного дня аренды:  "#gCarPriceRent"\t \t ");
	ShowPlayerDialog(playerid, dCarSellsRent, DIALOG_STYLE_INPUT, "Аренда места для продажи", stringer, "Ввод", "Отмена");
	return 1;
}///



stock LoadCarSells(slot)
{
	//
	new g_car_text_str[400], model = gCarSells[slot][SellsModel]-400, g_car_str_days[32];
	//printf("slot: %d gCarSells[slot][SellsOwner]:%s model: %d", slot, gCarSells[slot][SellsOwner], model);
	if ( strcmp(gCarSells[slot][SellsOwner], "The State") && model >= 0)
	{
		if ( gCarSells[slot][SellsTime] == 1) strcat(g_car_str_days, "1 день");
		else if ( gCarSells[slot][SellsTime] == 2) strcat(g_car_str_days, "2 дня");
		else if ( gCarSells[slot][SellsTime] == 3) strcat(g_car_str_days, "3 дня");
		else if ( gCarSells[slot][SellsTime] == 4) strcat(g_car_str_days, "4 дня");
		else if ( gCarSells[slot][SellsTime] == 5) strcat(g_car_str_days, "5 дней");
		else if ( gCarSells[slot][SellsTime] == 6) strcat(g_car_str_days, "6 дней");
		else if ( gCarSells[slot][SellsTime] == 7) strcat(g_car_str_days, "7 дней");
		else if ( gCarSells[slot][SellsTime] == 8) strcat(g_car_str_days, "8 дней");
		else if ( gCarSells[slot][SellsTime] == 9) strcat(g_car_str_days, "9 дней");
		else if ( gCarSells[slot][SellsTime] == 10) strcat(g_car_str_days, "10 дней");
		format(g_car_text_str,400, "{"#cRED"}Место занято\n\n{"#cWHITE"}Модель: {"#cYELLOW"}%s\n{"#cWHITE"}Гос. стоимость: {"#cYELLOW"}$ %d\n{"#cWHITE"}Стоимость: {"#cYELLOW"}$ %d\n{"#cWHITE"}Владелец: {"#cYELLOW"}%s\n{"#cWHITE"}Место арендовано на {"#cYELLOW"}%s\n\n\n", VehicleNames[model],gTransport[model][trPrice],gCarSells[slot][SellsPrice],gCarSells[slot][SellsOwner], g_car_str_days);
		gCarSells[slot][SellsVID] = CreateVehicleOP(gCarSells[slot][SellsModel],gCarSells[slot][SellsPos][0],gCarSells[slot][SellsPos][1],gCarSells[slot][SellsPos][2],gCarSells[slot][SellsPos][3],gCarSells[slot][SellsTuning][1],0,600_000);
		if(gCarSells[slot][SellsTuning][0] != 255) ChangeVehiclePaintjob(gCarSells[slot][SellsVID], gCarSells[slot][SellsTuning][0]);
		for(new F = 2; F <= 11; F++) if(gCarSells[slot][SellsTuning][F] != -1) AC_AddVehicleComponent(gCarSells[slot][SellsVID], gCarSells[slot][SellsTuning][F]);
		printf("create load car sells %d", gCarSells[slot][SellsVID]);
	}
	else
	{
		format(g_car_text_str,400, "{"#cGREEN"}Место свободно\n\n{"#cWHITE"}Чтобы взаимодействовать\nиспользуйте {"#cYELLOW"}ALT");
	}
	if(gCarSells[slot][SellsText] != Text3D:-1) UpdateDynamic3DTextLabelText(gCarSells[slot][SellsText],-1,g_car_text_str);
	else gCarSells[slot][SellsText] = CreateDynamic3DTextLabel( g_car_text_str,-1,gCarSells[slot][SellsPos][0],gCarSells[slot][SellsPos][1],gCarSells[slot][SellsPos][2]+1.7,15.0);
	return 1;
}
forward UpdateGameDice(s);
public UpdateGameDice(s)
{
	new wait_game_dice[10], count_players = 0, count_score = 0;
	format(wait_game_dice,10,"~g~%d",InfoDice[s][dice_game_start_time] - gettime());
	for(new c = 0; c < 5; c++)
	{
		if(InfoDice[s][dice_gamer][c]==INVALID_PLAYER_ID) continue;
		if(InfoDice[s][dice_score][c]) count_score++;
		count_players++;
		GameTextForPlayer(InfoDice[s][dice_gamer][c],wait_game_dice,1200,6);
	}
	GameTextForPlayer(InfoDice[s][dice_crup],wait_game_dice,1200,6);
	if(InfoDice[s][dice_game_start_time]<=gettime() || (count_players == count_score))
	{
		new maxs = 0,
			ids = -1,
			str_win_dice[144];
		for(new c = 0; c < 5; c++)
		{
			if(InfoDice[s][dice_score][c]==0) continue;
			if(InfoDice[s][dice_score][c] > maxs)
			{
				maxs = InfoDice[s][dice_score][c];
				ids = InfoDice[s][dice_gamer][c];
			}
			InfoDice[s][dice_score][c]=0;
		}
		if ( ids != -1 )
		{
			format(str_win_dice,144,"Игра завершена. Победитель: {"#cWHITE"}%s [%d].",NamePlayer[ids],ids);
			p_info[ids][pCash] += InfoDice[s][dice_bank];
			UpdateMoney(ids);
		}
		for(new c = 0; c < 5; c++)
		{
			if(InfoDice[s][dice_gamer][c]==INVALID_PLAYER_ID) continue;
			Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash]=0;
			if ( ids != -1 )SendClientMessage(InfoDice[s][dice_gamer][c], CGREEN, str_win_dice);
		}
		SendClientMessage(InfoDice[s][dice_crup], CGREEN, str_win_dice);
		UpdateTextCasino(s);
		UpdateScores(s);
		InfoDice[s][dice_bank] = 0;
		InfoDice[s][dice_game_start] = false;
		KillTimer(InfoDice[s][dice_game_start_timer]);
		InfoDice[s][dice_game_start_timer] = -1;
	}
	return 1;
}
stock Load_PTD_Dice(playerid)
{
	if(PTD_DiceStat[playerid]==PlayerText:-1){
		PTD_DiceStat[playerid] = CreatePlayerTextDraw(playerid, 466.178741, 278.833099, "_~w~Bet:_~g~0$_~n~_~w~Bank:_~g~0$_~n~_~w~Your_cash:_~g~0$");
		PlayerTextDrawLetterSize(playerid, PTD_DiceStat[playerid], 0.270556, 1.500832);
		PlayerTextDrawTextSize(playerid, PTD_DiceStat[playerid], 603.924194, 35.000011);
		PlayerTextDrawAlignment(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawColor(playerid, PTD_DiceStat[playerid], -1);
		PlayerTextDrawUseBox(playerid, PTD_DiceStat[playerid], true);
		PlayerTextDrawBoxColor(playerid, PTD_DiceStat[playerid], 1149760170);
		PlayerTextDrawSetShadow(playerid, PTD_DiceStat[playerid], 0);
		PlayerTextDrawSetOutline(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, PTD_DiceStat[playerid], 187);
		PlayerTextDrawFont(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawSetProportional(playerid, PTD_DiceStat[playerid], 1);
	}
	PlayerTextDrawShow(playerid,PTD_DiceStat[playerid]);
	return 1;
}
stock UpdateTableText(c)
{
	new update_table_text[156];
	new mark[5][10];
	for(new i=0;i<5;i++){
		if(InfoDice[c][dice_gamer][i]==INVALID_PLAYER_ID)strcat(mark[i],"_");
		else if(Casino_Flag[InfoDice[c][dice_gamer][i]][casino_bet_cash]!=0)strcat(mark[i],"+_");
	}
	format(update_table_text, 156, "%s%s~n~%s%s~n~%s%s~n~%s%s~n~%s%s",
	mark[0],(InfoDice[c][dice_gamer][0]==INVALID_PLAYER_ID)?("-"):(NamePlayer[InfoDice[c][dice_gamer][0]]),
	mark[1],(InfoDice[c][dice_gamer][1]==INVALID_PLAYER_ID)?("-"):(NamePlayer[InfoDice[c][dice_gamer][1]]),
	mark[2],(InfoDice[c][dice_gamer][2]==INVALID_PLAYER_ID)?("-"):(NamePlayer[InfoDice[c][dice_gamer][2]]),
	mark[3],(InfoDice[c][dice_gamer][3]==INVALID_PLAYER_ID)?("-"):(NamePlayer[InfoDice[c][dice_gamer][3]]),
	mark[4],(InfoDice[c][dice_gamer][4]==INVALID_PLAYER_ID)?("-"):(NamePlayer[InfoDice[c][dice_gamer][4]]));
	TextDrawSetString(Casino_TD[Casino_TD_TableNicks][c],update_table_text);
	//print(update_table_text);
	//Casino_TD[Casino_TD_TableNicks][c] = TextDrawCreate(480.234466, 190.749984, "-~n~-~n~-~n~-~n~-");
	return 1;
}
stock UpdateScores(s)
{
	new mark[5][2];
	for(new i=0;i<5;i++){
		if(InfoDice[s][dice_score][i]<=3)strcat(mark[i],"w");
		else if(InfoDice[s][dice_score][i]>=4 && InfoDice[s][dice_score][i]<=6)strcat(mark[i],"y");
		else if(InfoDice[s][dice_score][i]>=7 && InfoDice[s][dice_score][i]<=9)strcat(mark[i],"r");
		else if(InfoDice[s][dice_score][i]>=10 && InfoDice[s][dice_score][i]<=12)strcat(mark[i],"g");
	}
	new string_set_score[64];
	format(string_set_score,64,"~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d",mark[0],InfoDice[s][dice_score][0],mark[1],InfoDice[s][dice_score][1],mark[2],InfoDice[s][dice_score][2],mark[3],InfoDice[s][dice_score][3],mark[4],InfoDice[s][dice_score][4]);
	TextDrawSetString(Casino_TD[Casino_TD_TableScore][s],string_set_score);
	return 1;
}
stock UpdateTextCasino(c)
{
	new update_string_casino_text[400];
	format(update_string_casino_text,400,CASINO_TEXT_STRING,
	c+1,(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) ? (NamePlayer[InfoDice[c][dice_crup]]) : ("-"),(InfoDice[c][dice_gamer][0] != INVALID_PLAYER_ID) ? (NamePlayer[InfoDice[c][dice_gamer][0]]) : ("-"),(InfoDice[c][dice_gamer][1] != INVALID_PLAYER_ID) ? (NamePlayer[InfoDice[c][dice_gamer][1]]) : ("-"),
	(InfoDice[c][dice_gamer][2] != INVALID_PLAYER_ID) ? (NamePlayer[InfoDice[c][dice_gamer][2]]) : ("-"),(InfoDice[c][dice_gamer][3] != INVALID_PLAYER_ID) ? (NamePlayer[InfoDice[c][dice_gamer][3]]) : ("-"),
	(InfoDice[c][dice_gamer][4] != INVALID_PLAYER_ID) ? (NamePlayer[InfoDice[c][dice_gamer][4]]) : ("-"),
	InfoDice[c][dice_stavka],InfoDice[c][dice_bank],(InfoDice[c][dice_game_start]) ? ("{37A65F}Игра начата") : ("{EB3F36}Игра не начата"));
	UpdateDynamic3DTextLabelText(InfoDice[c][dice_text], -1, update_string_casino_text);
	for(new p = 0; p < 5; p++)
	{
		if(InfoDice[c][dice_gamer][p]==INVALID_PLAYER_ID) continue;
		if(PTD_DiceStat[InfoDice[c][dice_gamer][p]]!=PlayerText:-1 && Casino_Flag[InfoDice[c][dice_gamer][p]][show_casino_td]==1)
		{
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d$_~n~_~w~Bank:_~g~%d$_~n~_~w~Your_cash:_~g~%d$",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],p_info[InfoDice[c][dice_gamer][p]][pCash]);
			PlayerTextDrawSetString(InfoDice[c][dice_gamer][p],PTD_DiceStat[InfoDice[c][dice_gamer][p]],ptd_dice_string);
		}
	}
	if(InfoDice[c][dice_crup] != INVALID_PLAYER_ID)
	{
		if(PTD_DiceStat[InfoDice[c][dice_crup]]!=PlayerText:-1 && Casino_Flag[InfoDice[c][dice_crup]][show_casino_td]==1)
		{
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d$_~n~_~w~Bank:_~g~%d$_~n~_~w~Your_cash:_~g~%d$",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],p_info[InfoDice[c][dice_crup]][pCash]);
			PlayerTextDrawSetString(InfoDice[c][dice_crup],PTD_DiceStat[InfoDice[c][dice_crup]],ptd_dice_string);
		}
	}
	UpdateTableText(c);
	UpdateScores(c);
	return 1;
}
stock ShowCasino_TD(playerid, select_table, bool:canceled=true)
{
	if(Casino_Flag[playerid][show_casino_td]==1)
	{
		if(Casino_Flag[playerid][casino_bet_cash]!=0)
		{
			p_info[playerid][pCash] += Casino_Flag[playerid][casino_bet_cash];
			UpdateMoney(playerid);
			InfoDice[select_table][dice_bank] -= InfoDice[select_table][dice_stavka];
			Casino_Flag[playerid][casino_bet_cash]=0;
		}
		if ( InfoDice[select_table][dice_crup] == playerid )
		{
			for(new i = 0;i<5;i++)
			{
				if(InfoDice[select_table][dice_gamer][i]==INVALID_PLAYER_ID) continue;
				if(!InfoDice[select_table][dice_game_start])
				{
					if(Casino_Flag[InfoDice[select_table][dice_gamer][i]][casino_bet_cash]!=0)
					{
						p_info[InfoDice[select_table][dice_gamer][i]][pCash] += Casino_Flag[InfoDice[select_table][dice_gamer][i]][casino_bet_cash];
						UpdateMoney(InfoDice[select_table][dice_gamer][i]);
						InfoDice[select_table][dice_bank] -= InfoDice[select_table][dice_stavka];
						Casino_Flag[InfoDice[select_table][dice_gamer][i]][casino_bet_cash]=0;
					}
					SendClientMessage(InfoDice[select_table][dice_gamer][i],CGRAY,"Крупье покинул стол. Ставки обнулены.");
				}
				else InfoDice[select_table][dice_game_start_time] = gettime();
			}
			InfoDice[select_table][dice_stavka] = 0;
			InfoDice[select_table][dice_crup] = INVALID_PLAYER_ID;
		}
		else
		{
			for(new i = 0;i<5;i++)
			{
				if(InfoDice[select_table][dice_gamer][i]==playerid)
				{
					InfoDice[select_table][dice_score][i] = 0;
					InfoDice[select_table][dice_gamer][i] = INVALID_PLAYER_ID;
					break;
				}
			}
		}
		UpdateScores(select_table);
		UpdateTextCasino(select_table);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
		for(new i = 0; i < 5; i++)
		{
			if(i<2)TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
			TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
		}
		PlayerTextDrawHide(playerid,PTD_DiceStat[playerid]);
		if(canceled) CancelSelectTextDraw(playerid);
		Casino_Flag[playerid][show_casino_td]=0;
		Casino_Flag[playerid][select_casino_table] = -1;
		return 1;
	}
	Load_PTD_Dice(playerid);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
	for(new i = 0; i < 5; i++)
	{
		if(i<2)TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
		TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
	}
	SelectTextDraw(playerid,0x9BF2EAAA);
	Casino_Flag[playerid][show_casino_td]=1;
	return 1;
}
stock UpdateMorozed()
{
	new quer_moroz[350];
	format(quer_moroz,350,"UPDATE `fracmorozed` SET `MOROZ_BALLAS`='%d',`MOROZ_VAGOS`='%d',`MOROZ_GROVE`='%d',`MOROZ_RIFA`='%d',`MOROZ_AZTECAS`='%d',`MOROZ_LCN`='%d',`MOROZ_YAKUZA`='%d',`MOROZ_RM`='%d'",fracmoroz[0],fracmoroz[1],fracmoroz[2],fracmoroz[3],fracmoroz[4],fracmoroz[5],fracmoroz[6],fracmoroz[7]);
	mysql_pquery(connects,quer_moroz,"","");
	return 1;
}
stock UpdatePlayerHunger(playerid)
{
	if(p_info[playerid][pEat] > MAX_SATIETY) p_info[playerid][pEat] = MAX_SATIETY;
	if(p_info[playerid][pEat] < 0) p_info[playerid][pEat] = 0;
	SetPlayerProgressBarValue(playerid, eda[playerid], p_info[playerid][pEat]);
	UpdatePlayerData(playerid,"pEat",p_info[playerid][pEat]);
	return true;
}
stock CreateEatTextDraw(playerid)
{//136.000000, 174.000000
	eda[playerid] = CreatePlayerProgressBar(playerid, 548.00, 58.00, 58.50, 3.20, 0xF0BF11FF, float(MAX_SATIETY));
	SetPlayerProgressBarMaxValue(playerid, eda[playerid], MAX_SATIETY);
	ShowPlayerProgressBar(playerid, eda[playerid]);
	UpdatePlayerHunger(playerid);
	return true;
}
stock ShowBankMainMenuForPlayer(playerid)
{
	if(gBankInfo[playerid][b_acc_number][0] == -1)
	{
		ShowPlayerDialog(playerid, dBankMainMenu, DIALOG_STYLE_LIST, "Банк", "• Открыть новый счёт", "Далее", "Закрыть");
	}
	else
	{
		new bank_string[((6+4+4+10)*MAX_BANK_ACCOUNTS)+(31+2)];
		for(new a; a < MAX_BANK_ACCOUNTS; a++)
		{
			if(gBankInfo[playerid][b_acc_number][a] == -1)
			{
				format(bank_string, sizeof(bank_string), "%sОткрыть дополнительный счёт [%d/%d]", bank_string, a, MAX_BANK_ACCOUNTS);// (31+2)
				break;
			}
			else
			{
				format(bank_string, sizeof(bank_string), "%s%i) %d [%d$]\n", bank_string, a+1, gBankInfo[playerid][b_acc_number][a], gBankInfo[playerid][b_acc_money][a]);
			}
		}
		ShowPlayerDialog(playerid, dBankMainMenu, DIALOG_STYLE_LIST, "Банк", bank_string, "Далее", "Закрыть");
	}
	return 1;
}

stock ShowBankOptionMenuForPlayer(playerid, b_account_id)
{
	static const fmt_dlg_bank[] = "• Снять со счёта [%d$]\n• Пополнить счет (Комиссия: 0.2%%)\n• Перевести на другой счёт (Комиссия: 0.3%%)\n• Удалить счёт\n• Вклады";
	new dialog_caption_string[14+6+1],
		dialog_string[sizeof(fmt_dlg_bank)-4+10+1];

	SetPVarInt(playerid, "BankAccountID", b_account_id);

	format(dialog_caption_string, sizeof(dialog_caption_string), "{FFFFFF}Счёт №%d", gBankInfo[playerid][b_acc_number][b_account_id]);

	format(dialog_string, sizeof(dialog_string), fmt_dlg_bank, gBankInfo[playerid][b_acc_money][b_account_id]);
	return ShowPlayerDialog(playerid, dBankMenu_OptionList, DIALOG_STYLE_LIST, dialog_caption_string, dialog_string, "Далее", "Назад");
}

stock UpdateBankMoneyForPlayer(b_money, b_number)
{
	new query_string[69+10+6+1];

	format(query_string, sizeof(query_string), "UPDATE bank_accounts SET b_money = %d WHERE b_account_number = %d", b_money, b_number);
	return mysql_pquery(connects, query_string);
}
forward OnBankAccountInTableForTransfer(playerid, b_number, b_money, b_commission, b_account_id);
public OnBankAccountInTableForTransfer(playerid, b_number, b_money, b_commission, b_account_id)
{
	if(!cache_num_rows())
	{
		SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Указанный номер счёта не найден в базе данных банка.");
		new dialog_string[98+10+1];
		format(dialog_string, sizeof(dialog_string), "{FFFFFF}Введите номер счёта и сумму для передачи (прим. \"453212 600\"\n\nДоступно для перевода: %d$", gBankInfo[playerid][b_acc_money][b_account_id]);
		return ShowPlayerDialog(playerid, dBankMenu_TransferMoney, DIALOG_STYLE_INPUT, "Перевод средств", dialog_string, "Далее", "Назад");
	}
	new query_string[63+10+6+1],
		money_in_bank,
		owner_id;

	cache_get_value_name_int(0, "b_money", money_in_bank);
	cache_get_value_name_int(0, "owner_id", owner_id);

	format(query_string, sizeof(query_string), "SELECT * FROM `accounts` WHERE ID = %d",owner_id);
	new Cache:result = mysql_query(connects, query_string);
	if(!cache_num_rows())
	{
		cache_delete(result);
		SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Указанный номер счёта не найден в базе данных банка.");
		new dialog_string[98+10+1];
		format(dialog_string, sizeof(dialog_string), "{FFFFFF}Введите номер счёта и сумму для передачи (прим. \"453212 600\"\n\nДоступно для перевода: %d$", gBankInfo[playerid][b_acc_money][b_account_id]);
		return ShowPlayerDialog(playerid, dBankMenu_TransferMoney, DIALOG_STYLE_INPUT, "Перевод средств", dialog_string, "Далее", "Назад");
	}
	new b_player_name[MAX_PLAYER_NAME];
	cache_get_value_name(0, "tName", b_player_name, MAX_PLAYER_NAME);
	cache_delete(result);
	format(query_string, sizeof(query_string), "Перевод на сумму %d$ успешно произведён. Номер счёта получателя: %d", b_money-b_commission, b_number);
	SendClientMessage(playerid, -1, query_string);
	format(query_string, sizeof(query_string), "Комиссия составила: %d$", b_commission);
	SendClientMessage(playerid, -1, query_string);
	format(query_string, sizeof(query_string), "Имя получателя: %s", b_player_name);
	SendClientMessage(playerid, -1, query_string);
	gBankInfo[playerid][b_acc_money][b_account_id] -= b_money;

	UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][b_account_id], gBankInfo[playerid][b_acc_number][b_account_id]);

	UpdateBankMoneyForPlayer(money_in_bank+b_money-b_commission, b_number);


	#if defined _FOREACH_LOCAL_VERSION
	foreach (new i : Player)
	{
	#else
	for(new i = GetPlayerPoolSize(); i != -1; i--)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
	#endif
		GetPlayerName(i, query_string, MAX_PLAYER_NAME);
		if(!strcmp(b_player_name, query_string, true))
		{
			GetPlayerName(playerid, query_string, MAX_PLAYER_NAME);
			format(query_string, sizeof(query_string), "Игрок %s [ID: %d] перевёл на Ваш счёт [%d] %d$", query_string, playerid, b_number, b_money-b_commission);
			SendClientMessage(i, -1, query_string);
			for(new a; a < MAX_BANK_ACCOUNTS; a++)
			{
				if(gBankInfo[i][b_acc_number][a] != b_number) continue;
				gBankInfo[i][b_acc_money][a] += b_money-b_commission;
				format(query_string, sizeof(query_string), "Новый баланс: %d$", gBankInfo[i][b_acc_money][a]);
				SendClientMessage(i, -1, query_string);
				break;
			}
			break;
		}
	}
	return 1;
}

forward OnBankAccountInTable(playerid, b_account_number);
public OnBankAccountInTable(playerid, b_account_number)
{
	if(cache_num_rows())
	{
		new query_string[64+6+1],
			bank_rand_number;

goto_rand_bank_number:
		bank_rand_number = 100_000+random(899_999);
		if(b_account_number == bank_rand_number) goto goto_rand_bank_number;

		format(query_string, sizeof(query_string), "SELECT b_account_id FROM bank_accounts WHERE b_account_number = %d", bank_rand_number);
		mysql_pquery(connects, query_string, "OnBankAccountInTable", "ii", playerid, bank_rand_number);
		return 1;
	}
	for(new a; a < MAX_BANK_ACCOUNTS; a++)
	{
		if(gBankInfo[playerid][b_acc_number][a] == -1)
		{
			gBankInfo[playerid][b_acc_number][a] = b_account_number;
			gBankInfo[playerid][b_acc_money][a] = 0;
			break;
		}
	}

	new query_string[71+10+6+1];

	format(query_string, sizeof(query_string), "INSERT INTO `bank_accounts`(`owner_id`, `b_account_number`) VALUES (%d, %d)", BD_ACCOUNT_ID, b_account_number);
	mysql_pquery(connects, query_string);

	format(query_string, sizeof(query_string), "Счёт успешно зарегистрирован. Номер: [%d]", b_account_number);
	SendClientMessage(playerid, -1, query_string);

	if ( QuestStep[0][playerid] == 4 )
	{
		SendBotMessage(playerid,"Успешно, вы создали банковский счет.\nОтправляйтесь к Джону за наградой");
		SetTimerEx("SetCameraBehindPlayerDelay",3500,0,"i",playerid);
		SetPlayerGPS(playerid,80,404.27, -1545.95, 32.27,19,-1,MAPICON_GLOBAL_CHECKPOINT);
		QuestStep[0][playerid] = 5;
		UpdatePlayerQuestStep(playerid);
	}

	ShowBankMainMenuForPlayer(playerid);

	return 1;
}

stock LoadBankAccount(playerid)
{
	if(!BD_ACCOUNT_ID) return print("LoadBankAccount Error: Загрузка данных о счёте должна происходить после загрузки аккаунта");
	new query_string[45+10+1];

	format(query_string, sizeof(query_string), "SELECT * FROM bank_accounts WHERE owner_id = %d", BD_ACCOUNT_ID);
	return mysql_pquery(connects, query_string, "OnLoadBankAccountForPlayer", "i", playerid);
}


forward OnLoadBankAccountForPlayer(playerid);
public OnLoadBankAccountForPlayer(playerid)
{
	new row_count;
	cache_get_row_count(row_count);
	switch(row_count)
	{
		case 0:
		{
			//У игрока нет счетов
			return 1;
		}
		case 1:
		{
			cache_get_value_name_int(0, "b_account_number", gBankInfo[playerid][b_acc_number][0]);
			cache_get_value_name_int(0, "b_money", gBankInfo[playerid][b_acc_money][0]);
		}
		default:
		{
			if(row_count >= MAX_BANK_ACCOUNTS)
			{
				printf("\n\nOnLoadBankAccountForPlayer Error: У аккаунта с ID %d превышен лимит допустимых счетов на %d\n\n", BD_ACCOUNT_ID, row_count-MAX_BANK_ACCOUNTS);
				row_count = MAX_BANK_ACCOUNTS;
			}
			for(new i; i < row_count; i++)
			{
				cache_get_value_name_int(i, "b_account_number", gBankInfo[playerid][b_acc_number][i]);
				cache_get_value_name_int(i, "b_money", gBankInfo[playerid][b_acc_money][i]);
			}
		}
	}
	new query_string[49+10+1];
	format(query_string, sizeof(query_string), "SELECT * FROM bank_contribution WHERE owner_id = %d", BD_ACCOUNT_ID);
	mysql_pquery(connects, query_string, "OnLoadBankContributionForPlayer", "i", playerid);
	return 1;
}



stock ShowContributionMenu(playerid, b_account_id = -1)
{
	if(b_account_id != -1) SetPVarInt(playerid, "BankAccountID", b_account_id);
	if(gBankInfo[playerid][cb_id][0] == -1)
	{
		ShowPlayerDialog(playerid, dContributionMenu, DIALOG_STYLE_LIST, "Банк [Вклады]", "• Открыть новый вклад", "Далее", "Закрыть");
	}
	else
	{
		new bank_string[((10+10+2+2+37)*MAX_CONTRIBUTIONS)+(32+2)],
			unix_time = gettime();
		for(new a; a < MAX_CONTRIBUTIONS; a++)
		{
			if(gBankInfo[playerid][cb_id][a] == -1)
			{
				format(bank_string, sizeof(bank_string), "%sОткрыть дополнительный вклад [%d/%d]", bank_string, a, MAX_CONTRIBUTIONS);// (31+2)
				break;
			}
			else
			{
				format(bank_string, sizeof(bank_string), "%sВклад №%i: %d$ на %d дней (остаток дней: %d)\n", bank_string, a+1, gBankInfo[playerid][cb_money][a], gBankInfo[playerid][cb_days][a], -(unix_time-gBankInfo[playerid][cb_unixtime][a])/86400);
			}
		}
		ShowPlayerDialog(playerid, dContributionMenu, DIALOG_STYLE_LIST, "Банк [Вклады]", bank_string, "Далее", "Назад");
	}

	return 1;
}

forward OnLoadBankContributionForPlayer(playerid);
public OnLoadBankContributionForPlayer(playerid)
{
	new row_count;
	cache_get_row_count(row_count);
	if(!row_count) return 1;
	for(new i; i < row_count; i++)
	{
		cache_get_value_name_int(i, "contribut_id", gBankInfo[playerid][cb_id][i]);
		cache_get_value_name_int(i, "contribut_money", gBankInfo[playerid][cb_money][i]);
		cache_get_value_name_int(i, "contribut_days", gBankInfo[playerid][cb_days][i]);
		cache_get_value_name_float(i, "contribut_percent", gBankInfo[playerid][cb_percent][i]);
		cache_get_value_name_int(i, "contribut_date", gBankInfo[playerid][cb_unixtime][i]);

		if(gettime()-gBankInfo[playerid][cb_unixtime][i] > 0)
		{
			SendClientMessage(playerid, -1, "Срок вклада окончен");

			new b_money = floatround(float(gBankInfo[playerid][cb_money][i])+(float(gBankInfo[playerid][cb_money][i])*gBankInfo[playerid][cb_percent][i]/100.0));

			if(gBankInfo[playerid][b_acc_number][0] != -1)
			{
				SendClientMessage(playerid, -1, "Деньги переведены на ваш банковский счёт");
				UpdateBankMoneyForPlayer(gBankInfo[playerid][b_acc_money][0]+=b_money, gBankInfo[playerid][b_acc_number][0]);
			}
			else
			{
				SendClientMessage(playerid, -1, "Деньги выданы наличными");
				p_info[playerid][pCash] += b_money;
				UpdateMoney(playerid);
			}
			new query_string[51+10+1];
			format(query_string, sizeof(query_string), "DELETE FROM bank_contribution WHERE contribut_id = %d", gBankInfo[playerid][cb_id][i]);
			mysql_pquery(connects, query_string);
			gBankInfo[playerid][cb_money][i] = 0;
			gBankInfo[playerid][cb_days][i] = 0;
			gBankInfo[playerid][cb_percent][i] = 0.0;
			gBankInfo[playerid][cb_unixtime][i] = 0;
		}
	}
	return 1;
}

stock CreateNewContribution(playerid, b_money, b_period, Float:interest_rate)
{
	for(new a = 0; a < MAX_CONTRIBUTIONS; a++)
	{
		if(gBankInfo[playerid][cb_id][a] != -1) continue;
		gBankInfo[playerid][cb_money][a] = b_money;
		gBankInfo[playerid][cb_days][a] = b_period;
		gBankInfo[playerid][cb_unixtime][a] = gettime()+(86400*b_period);
		gBankInfo[playerid][cb_percent][a] = interest_rate;
		new query_string[144+10*5+1];

		format(query_string, sizeof(query_string), "INSERT INTO bank_contribution (owner_id, contribut_money, contribut_days, contribut_percent, contribut_date) VALUES (%d, %d, %d, %f, %d)", BD_ACCOUNT_ID, b_money, b_period, interest_rate, gettime()+(86400*b_period));
		mysql_pquery(connects, query_string, "UploadContributionID", "ii", playerid, a);
		return 1;
	}
	return SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Превышен лимит вкладов");
}

forward UploadContributionID(playerid, index);
public UploadContributionID(playerid, index)
{
	gBankInfo[playerid][cb_id][index] = cache_insert_id();
	ShowContributionMenu(playerid);

	DeletePVar(playerid, "ContributDay");
	DeletePVar(playerid, "ContributMoney");
	return 1;
}
stock ShowNewContributionMenu(playerid, contrib_money = 0, contrib_day = 0)
{
	new contrib_string[(16+8+10)+(24+8+3)+21+1];
	format(contrib_string, sizeof(contrib_string), "Сумма вклада: %s%d$\n", (contrib_money ? ("{00FF00}") : ("{FF0000}")), contrib_money);
	format(contrib_string, sizeof(contrib_string), "%sВременной период: %s%d дней\n", contrib_string, (contrib_day ? ("{00FF00}") : ("{FF0000}")), contrib_day);
	if(contrib_money && contrib_day) format(contrib_string, sizeof(contrib_string), "%s{00FF00}Создать вклад", contrib_string);
	ShowPlayerDialog(playerid, dContributionMenu_Create, DIALOG_STYLE_LIST, "Банк [Новый вклад]", contrib_string, "Далее", "Назад");
	return 1;
}
stock ShowATMMenu(playerid)
{
	FIXES_ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "{ffff00}Банкомат",
		"{"#cORANGE"}1.{"#cWHITE"} Домашний счёт\n\
		 {"#cORANGE"}2.{"#cWHITE"} Оплатить аренду\n\
		 {"#cORANGE"}3.{"#cWHITE"} Пополнить счет телефона\n\
		 {"#cORANGE"}4.{"#cWHITE"} Пополнить счёт бизнеса", "Далее", "Закрыть");
	return 1;
}
stock AddCommasToInt(number, delimiter[2] = ".")
{
	new int_string[10+3+1+1];
	format(int_string, sizeof(int_string), "%d", number >= 0 ? number : -number);
	new value = strlen(int_string);
	switch(value)
	{
		case 4..6: strins(int_string, delimiter, value-3,1);
		case 7..9: strins(int_string, delimiter, value-3,1), strins(int_string, delimiter, value-6,1);
		case 10..12: strins(int_string, delimiter, value-3,1), strins(int_string, delimiter, value-6,1), strins(int_string, delimiter, value-9,1);
	}
	if(number < 0) strins(int_string, "-", 0);
	return int_string;
}

stock ChangePlayerFraction(playerid, new_fraction, bool:saved = true)
{
	p_info[playerid][tMember] = new_fraction;
	if ( !new_fraction )
	{
		SetSpawnInfoEx(playerid,
			p_info[playerid][pModel], f_info [ new_fraction ] [ f_spawn ] [ 0 ], f_info [ new_fraction ] [ f_spawn ] [ 1 ], f_info [ new_fraction ] [ f_spawn ] [ 2 ], f_info [ new_fraction ] [ f_spawn ] [ 3 ] );
	}
	else
	{
		SetSpawnInfoEx(playerid,
			p_info[playerid][pChar], f_info [ new_fraction ] [ f_spawn ] [ 0 ], f_info [ new_fraction ] [ f_spawn ] [ 1 ], f_info [ new_fraction ] [ f_spawn ] [ 2 ], f_info [ new_fraction ] [ f_spawn ] [ 3 ] );
	}
	if ( saved ) UpdatePlayerData(playerid, "tMember", p_info[playerid][tMember]);
	return 1;
}

UpdatePlayerData(playerid,field [],data)
{
	new update_player_data_sym[600];
	format(update_player_data_sym, 600, "UPDATE `accounts` SET `%s` = '%d' WHERE `ID` = '%d' LIMIT 1",field,data,p_info[playerid][pID]);
	mysql_pquery(connects, update_player_data_sym, "", "");
	return 1;
}

/*
UPDATE `housetest` SET `gRentStatus` = '1', `RentStatus0` = '0',`RentStatus1` = '0',`RentStatus2` = '0',`RentStatus3` = '0',`RentStatus4` = '0', `hDays` = '0', `RentAllPlata` = '20000', `hOwner` = 'The State', `RentPlata0` = '100', `RentPlata1` = '100', `RentPlata2` = '100', `RentPlata3` = '100', `RentPlata4` = '100', `improve` = '0|0|0|0', `gun` = '0|0|0|0|0|0|0|0|0', `skin` = '0|0|0', `safecode` = '0', `safemoney` = '0', `drugs` = '0', `hFamily` = '0', `hFamilyCode` = ''
*/

/*
UPDATE `accounts` SET `pCash` = (SELECT `Cash` FROM `log_transfer` WHERE `Name` = `tName` AND `Cash` < '2000000' LIMIT 1) WHERE `pCash` > '2000000'
UPDATE `business` SET `Owner` = 'The State', `bProdOrder` = '0', `bProd` = '0', `bProdMax` = '1000', `Bank` = '0', `EnterPrice` = '0', `bLicenses` = '0', `bAmount` = '0', `bAmountHour` = '0', `bCheckPower` = '0', `bAvtoProd` = '0', `bHourProd` = '0', `bHourClose` = '0', `Mafia` = '0', `Lock` = '0', `bProdOrderPrice` = '0'
*/

/*

#define mysqlhost								"triniti.ru-hoster.com"							//Хост базы данных MySQL
#define mysqluser								"kingyHk"										//Пользователь базы данных MySQL
#define mysqlpass								"t9s3zO9JmGJakKOsyvcahkgEP"						//Пароль от базы данных MySQL
#define mysqlbase								"kingyHk"

*/

//								if(p[0] > -1080 && p[1] < 490) rtext = "Лос Сантос";
//						  		else if(p[0] > -1080 && p[1] > 490) rtext = "Лас Вентурас";
//						    	else if(p[0] < -1080) rtext = "Сан Фиерро";
// номер
// id

// call 911
// если плохо то репорт


CMD:mboot(playerid, params[])
{
	new
		giveplayerid;
	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid,-1, "/mboot <ID игрока>");

	if(giveplayerid == INVALID_PLAYER_ID)
		return SendClientMessage(playerid,-1, "Данный игрок оффлайн!");

	if(giveplayerid == playerid)
		return SendClientMessage(playerid,-1, "Вы ввели свой ID!");

	new Float: pos_x,
		Float: pos_y,
		Float: pos_z;

	GetPlayerPos(giveplayerid, pos_x, pos_y, pos_z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, pos_x, pos_y, pos_z))
		return SendClientMessage(playerid,-1, "Игрок слишком далеко от Вас!");


	new Float: boot_distance,
		Float: near_boot_distance = 3.1,
				vehicle_id = 0;

	for(new v; v < MAX_VEHICLES; v++)
	{
		if(!IsValidVehicle(v))
			continue;
		GetCoordBootVehicle(v, pos_x, pos_y, pos_z);
		boot_distance = GetPlayerDistanceFromPoint(playerid, pos_x, pos_y, pos_z);
		if(boot_distance <= 3.0)
		{
			if(near_boot_distance > boot_distance)
			{
				near_boot_distance = boot_distance;
				vehicle_id = v;
			}
		}
	}
	if(!vehicle_id)
		return SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Вы должны стоять около багажника");

	if(bootInfo[vehicle_id][_b_target_id] != -1)
		return SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}В данном багажнике уже кто-то есть");

	bootInfo[vehicle_id][_b_kidnapper_id] = playerid;
	bootInfo[vehicle_id][_b_target_id] = giveplayerid;
	GetPlayerName(giveplayerid, bootInfo[vehicle_id][_b_target_name], MAX_PLAYER_NAME);

	TogglePlayerSpectating(giveplayerid, true);
	PlayerSpectateVehicle(giveplayerid, vehicle_id);

	SetPVarInt(giveplayerid, "VehicleBootID", vehicle_id);

	SendClientMessage(playerid, -1, "Вы засунули игрока в багажник");
	SendClientMessage(giveplayerid, -1, "Кто-то засунул Вас в багажник");
	return 1;
}

CMD:poolboot(playerid, params[])
{
	new Float: pos_x,
		Float: pos_y,
		Float: pos_z,
		Float: boot_distance,
		Float: near_boot_distance = 3.1,
				vehicle_id = 0;

	for(new v; v < MAX_VEHICLES; v++)
	{
		if(!IsValidVehicle(v))
			continue;
		GetCoordBootVehicle(v, pos_x, pos_y, pos_z);
		boot_distance = GetPlayerDistanceFromPoint(playerid, pos_x, pos_y, pos_z);
		if(boot_distance <= 3.0)
		{
			if(near_boot_distance > boot_distance)
			{
				near_boot_distance = boot_distance;
				vehicle_id = v;
			}
		}
	}
	if(!vehicle_id)
		return SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}Вы должны стоять около багажника");

	if(bootInfo[vehicle_id][_b_target_id] == -1)
		return SendClientMessage(playerid, 0xFF0000FF, "Ошибка: {FFFFFF}В данном багажнике никого нет");

	GetCoordBootVehicle(vehicle_id, pos_x, pos_y, pos_z);
 	SetPVarFloat(bootInfo[vehicle_id][_b_target_id], "bootX", pos_x);
	SetPVarFloat(bootInfo[vehicle_id][_b_target_id], "bootY", pos_y);
	SetPVarFloat(bootInfo[vehicle_id][_b_target_id], "bootZ", pos_z);
	SetPVarInt(bootInfo[vehicle_id][_b_target_id], "bootInt", GetPlayerInterior(playerid));
	SetPVarInt(bootInfo[vehicle_id][_b_target_id], "bootVw", GetPlayerVirtualWorld(playerid));
	TogglePlayerSpectating(bootInfo[vehicle_id][_b_target_id], false);
	

	SendClientMessage(playerid, -1, "Вы вытащили игрока из багажника");
	SendClientMessage(bootInfo[vehicle_id][_b_target_id], -1, "Кто-то вытащил Вас из багажника");

	bootInfo[vehicle_id][_b_target_id] = -1;
	bootInfo[vehicle_id][_b_target_name][0] = 0;
	bootInfo[vehicle_id][_b_kidnapper_id] = -1;
	return 1;
}

stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z)
{
	new Float:angle,
		Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2.0 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180.0, degrees));
	y += (distance * floatcos(-angle+180.0, degrees));
	return 1;
}

stock boot_OnPlayerReconnect(playerid)
{
	new _player_name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, _player_name, MAX_PLAYER_NAME);
	for(new v; v < sizeof(bootInfo); v++)
	{
		if(bootInfo[v][_b_target_id] == -1) continue;
		if(!strcmp(bootInfo[v][_b_target_name], _player_name))
		{
			bootInfo[v][_b_target_id] = playerid;

			TogglePlayerSpectating(playerid, true);
			PlayerSpectateVehicle(playerid, v);

			SetPVarInt(playerid, "VehicleBootID", v);

			SendClientMessage(bootInfo[v][_b_kidnapper_id], -1, "Игрок, которого Вы засовывали в багажник, вернулся в игру");
			SendClientMessage(playerid, -1, "Кто-то засунул Вас в багажник");
		    break;
		}
	}
	return 1;
}
forward load_online_today(playerid);
public load_online_today(playerid)
{
    new rows = cache_num_rows();
    if ( rows == 0 )
	{
		online_player[playerid][0] = 0;
		online_player_afk[playerid][0] = 0;
	}
	else
	{
		cache_get_value_index_int(0,3,online_player[playerid][0]);
		cache_get_value_index_int(0,4,online_player_afk[playerid][0]);
	}
    return 1;
}

forward load_online_yesterday(playerid);
public load_online_yesterday(playerid)
{
    new rows = cache_num_rows();
    if ( rows == 0 )
	{
		online_player[playerid][1] = 0;
		online_player_afk[playerid][1] = 0;
	}
	else
	{
		cache_get_value_index_int(0,3,online_player[playerid][1]);
		cache_get_value_index_int(0,4,online_player_afk[playerid][1]);
	}
    return 1;
}

forward load_online_before(playerid);
public load_online_before(playerid)
{
    new rows = cache_num_rows();
    if ( rows == 0 )
	{
		online_player[playerid][2] = 0;
		online_player_afk[playerid][2] = 0;
	}
	else
	{
		cache_get_value_index_int(0,3,online_player[playerid][2]);
		cache_get_value_index_int(0,4,online_player_afk[playerid][2]);
	}
    return 1;
}
static stock _FIXES_GetAnimLibIndex(animlib[]) // бинарный поиск
{
	new
		diff,
		idx = animlib[0] & ~0x20;
	if (_FIXES_IN_RANGE(idx, 'A', 'W' + 1))
	{
		new
			upper = FIXES_gscAnimIndexes[idx - ('A' - 1)],
			lower = FIXES_gscAnimIndexes[idx - 'A'];
		while (upper != lower)
		{
			idx = (upper - lower) / 2 + lower;
			if ((diff = strcmp(FIXES_gscAnimLib[idx], animlib, true)))
			{
				if (diff > 0) upper = idx;
				else lower = idx + 1;
			}
			else
			{
				return idx;
			}
		}
	}
	return -1;
}
static stock _FIXES_ApplyAnimationDelay(animname[], playerid, idx, Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
{
	if (FIXES_gsPlayerAnimTimer[playerid]) {
		KillTimer(FIXES_gsPlayerAnimTimer[playerid]),
		FIXES_gsPlayerAnimTimer[playerid] = 0;
	}
	if (FIXES_gsPlayerAnimLibs[playerid][idx >>> 5] & (1 << (idx & 0x1F))) {
		FIXES_gsPlayerAnimLibs[playerid][idx >>> 5] &= ~(1 << (idx & 0x1F)),
		FIXES_gsPlayerAnimName[playerid][0] = '\0',
		strcat(FIXES_gsPlayerAnimName[playerid], animname);
		FIXES_gsPlayerAnimTimer[playerid] = SetTimerEx("_FIXES_ApplyAnimation", 350, false, "ddfdddddd", playerid, idx, fDelta, loop, lockx, locky, freeze, time, forcesync);
	}
}
forward _FIXES_ApplyAnimation(playerid, animlib, Float:fDelta, loop, lockx, locky, freeze, time, forcesync);
public _FIXES_ApplyAnimation(playerid, animlib, Float:fDelta, loop, lockx, locky, freeze, time, forcesync) {
	ApplyAnimation(playerid, FIXES_gscAnimLib[animlib], FIXES_gsPlayerAnimName[playerid], fDelta, loop, lockx, locky, freeze, time, forcesync),
	FIXES_gsPlayerAnimTimer[playerid] = 0;
}
stock FIXES_ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
{
	new idx = _FIXES_GetAnimLibIndex(animlib);
	if(idx != -1) {
		_FIXES_ApplyAnimationDelay(animname, playerid, idx, fDelta, loop, lockx, locky, freeze, time, forcesync);
		return ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
	}
	return 0;
}
stock GetRentCar(playerid)
{
	for(new v = 0; v < MAX_RENT_VEHICLES; v++)
	{
		if(playerid == V_RENT[v][V_RENT_PLAYER]) return V_RENT[v][V_RENT_VEHICLE];
	}
    return INVALID_VEHICLE_ID;
}
stock UpdateTextRent(v)
{
    if ( v < 0 || v > MAX_RENT_VEHICLES - 1 ) return 0;
	if ( V_RENT[v][V_RENT_MODEL] < 400 || V_RENT[v][V_RENT_MODEL] > 611 ) return 0;
	format(stringer, 300, "{"#cGREEN"}<< Арендованный траспорт >>\n{"#cYELLOW"}%s\n{"#cWHITE"}Cтатус: %s", VehicleNames[V_RENT[v][V_RENT_MODEL]-400], (V_RENT[v][V_RENT_PLAYER] == INVALID_PLAYER_ID) ? ("{"#cGREEN"}Не арендован") : ("{"#cRED"}Арендован"));
	UpdateDynamic3DTextLabelText(V_RENT[v][V_RENT_TEXT],-1,stringer);
    return 1;
}
stock IsMegaAdmin(playerid){
	return !strcmp(NamePlayer[playerid],"Swat_Oplus") || !strcmp(NamePlayer[playerid],"Presten_Driver");
}

#include "postload/debug_tools"